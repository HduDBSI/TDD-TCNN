MethodDeclaration Modifier BasicType getOptionalArgsCount ReturnStatement public int TernaryExpression BinaryOperation Literal MethodInvocation == MemberReference Literal 0 optArgs size optArgs null	0
MethodDeclaration Modifier ReferenceType createJavaInterfaceTemplateModule FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression ReturnStatement static public RubyModule ReferenceType context ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MemberReference ThreadContext Ruby runtime MethodInvocation RubyModule javaInterfaceTemplate MethodInvocation RubyClass singleton MethodInvocation singleton MemberReference Literal addReadAttribute singleton ClassReference defineAnnotatedMethods javaInterfaceTemplate context getRuntime runtime Literal defineModule javaInterfaceTemplate getSingletonClass context "java_class" ReferenceType "JavaInterfaceTemplate" JavaInterfaceTemplate	1
MethodDeclaration Modifier ReferenceType getScope5 FormalParameter FormalParameter ReturnStatement final public StaticScope ReferenceType context ReferenceType varNamesDescriptor MethodInvocation ThreadContext String runtimeCache MemberReference MemberReference Literal getScope context varNamesDescriptor 5	0
MethodDeclaration Modifier ReferenceType get FormalParameter FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType runtime ReferenceType array BasicType i MethodInvocation Ruby Object int RubyFixnum MemberReference Cast newFixnum runtime BasicType MemberReference long array	0
MethodDeclaration Modifier BasicType intToCharBytes FormalParameter ReturnStatement final static public byte BasicType i MethodInvocation int ByteList MethodInvocation plain Integer MemberReference toString i	0
MethodDeclaration Modifier ReferenceType get FormalParameter FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType runtime ReferenceType array BasicType i MethodInvocation Ruby Object int MemberReference Cast convert runtime ReferenceType MemberReference BigInteger array	0
MethodDeclaration Modifier ReferenceType toString ReturnStatement public String BinaryOperation + BinaryOperation Literal + BinaryOperation MemberReference ")" + BinaryOperation Literal _method _name + BinaryOperation MemberReference ", " + SuperMethodInvocation Literal _class _name toString "("	0
MethodDeclaration Modifier Annotation BasicType hashCode ReturnStatement public Override int BinaryOperation + BinaryOperation Cast * Literal Literal BasicType BinaryOperation 53 5 int ^ This BinaryOperation MemberReference >>> This Literal offset MemberReference 32 offset	0
MethodDeclaration Modifier ReferenceType case386_line1462 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference ClassCreator = yyVal yyVal ReferenceType MethodInvocation ArrayNode getPosition	1
MethodDeclaration Modifier ReferenceType callIter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter TryStatement public IRubyObject ReferenceType context ReferenceType caller ReferenceType self ReferenceType arg1 ReferenceType block ReturnStatement CatchClause CatchClause StatementExpression ThreadContext IRubyObject IRubyObject IRubyObject Block MethodInvocation CatchClauseParameter ReturnStatement CatchClauseParameter ThrowStatement MethodInvocation MemberReference MemberReference MemberReference MemberReference MemberReference callBlock JumpException.BreakJump bj MethodInvocation JumpException.RetryJump rj MethodInvocation block escape context caller self arg1 block MemberReference MemberReference handleBreakJump MemberReference retryJumpError context bj context	1
MethodDeclaration Modifier Annotation ReferenceType newInstance FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType args ReferenceType block ReferenceType VariableDeclarator MethodInvocation MemberReference name Literal rest Literal frame Literal meta Literal ThreadContext IRubyObject IRubyObject Block Queue result ClassCreator result MemberReference MemberReference callInit result "new" true true true ReferenceType MethodInvocation Cast args block Queue context getRuntime ReferenceType MemberReference RubyClass recv	0
MethodDeclaration Modifier Annotation ReferenceType getMethod FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration SynchronizedStatement public Deprecated Callback ReferenceType method ReferenceType arg1 ReferenceType arg2 ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation LocalVariableDeclaration TryStatement String Class Class String mname BinaryOperation String mnamePath BinaryOperation runtime getJRubyClassLoader ReferenceType VariableDeclarator LocalVariableDeclaration IfStatement LocalVariableDeclaration StatementExpression StatementExpression StatementExpression ReturnStatement CatchClause CatchClause + BinaryOperation Literal + BinaryOperation Literal Class c MethodInvocation ReferenceType VariableDeclarator BinaryOperation BlockStatement ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MemberReference CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement + BinaryOperation MemberReference "_2" + BinaryOperation MemberReference "_2" MemberReference tryClass Class descriptor ArrayCreator == MemberReference Literal LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression InvocationCallback ic Cast ic MethodInvocation setArity ic MemberReference setArgumentTypes ic MemberReference setJavaName ic IllegalArgumentException e MemberReference Exception e ClassCreator + MethodInvocation Literal method + MemberReference Literal method mname ReferenceType ArrayInitializer c null ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation Assignment ReferenceType MethodInvocation Arity twoArguments descriptor method e ReferenceType MethodInvocation type getName "Callback$" typePath "Callback$" Class MemberReference MemberReference Class signature ArrayCreator Class ret MethodInvocation ClassWriter cw MethodInvocation MethodVisitor mv MethodInvocation MemberReference MemberReference Literal MemberReference loadArguments mv MemberReference Literal visitVarInsn mv MemberReference MemberReference MemberReference MethodInvocation visitMethodInsn mv MemberReference visitInsn mv Literal Literal visitMaxs MemberReference MethodInvocation = InvocationCallback c newInstance IllegalArgumentException e getMessage arg1 arg2 ReferenceType ArrayInitializer MemberReference MemberReference getReturnClass MemberReference createCtor MemberReference startCall mv METHOD_ARGS_INDEX 2 descriptor ALOAD 3 INVOKEVIRTUAL typePath method MemberReference MemberReference sig ARETURN 4 3 c MemberReference MemberReference MemberReference endCall Class MemberReference MemberReference ClassReference method signature mnamePath cw ret signature cw mv mname arg1 arg2 ReferenceType Block	1
MethodDeclaration Modifier Annotation ReferenceType interpret FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public Override IRubyObject ReferenceType runtime ReferenceType context ReferenceType self ReferenceType aBlock MethodInvocation Ruby ThreadContext IRubyObject Block callAdapter MemberReference MemberReference MemberReference MethodInvocation MethodInvocation call context self self arg1 MemberReference MemberReference MemberReference MemberReference interpret RuntimeHelpers MemberReference MemberReference MemberReference MemberReference MemberReference getBlock runtime context self aBlock runtime context self iterNode aBlock	0
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression IfStatement ReturnStatement public IRubyObject ReferenceType ctx ReferenceType largs ReferenceType blk ReferenceType VariableDeclarator MethodInvocation MethodInvocation BlockStatement MethodInvocation ThreadContext IRubyObject Block IRubyObject larg MethodInvocation MemberReference MemberReference Literal checkContext block MethodInvocation MemberReference MemberReference yield StatementExpression ThrowStatement runtime getNil MemberReference MemberReference checkArgs localContext ctx "detect/find" isTrue ctx larg Assignment MemberReference runtime largs MemberReference MemberReference = JumpException SPECIAL_JUMP ArraySelector result larg Literal 0	0
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter IfStatement ReturnStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 ReferenceType arg3 ReferenceType arg4 ReferenceType arg5 ReferenceType block BinaryOperation BlockStatement MethodInvocation ThreadContext IRubyObject RubyModule String IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject Block >= MemberReference Literal ReturnStatement box.actualMethod MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference call box callCount 0 MethodInvocation context self clazz name arg0 arg1 arg2 arg3 arg4 arg5 block MethodInvocation MemberReference MemberReference tryJitReturnMethod MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference call context name context self clazz name arg0 arg1 arg2 arg3 arg4 arg5 block	0
MethodDeclaration Modifier BasicType getID ReturnStatement public int MemberReference _id	0
MethodDeclaration Modifier Annotation BasicType available IOException IfStatement ReturnStatement public Override int MemberReference BlockStatement Cast closed ThrowStatement ReferenceType MethodInvocation ClassCreator Integer inputJoin MemberReference Literal call ReferenceType Literal Channel AVAILABLE null IOException "Stream is closed"	0
MethodDeclaration Modifier ReferenceType getBlockCallback6 FormalParameter FormalParameter ReturnStatement final public CompiledBlockCallback ReferenceType runtime ReferenceType method MethodInvocation Ruby String runtimeCache This MemberReference Literal MemberReference getBlockCallback runtime 6 method	0
MethodDeclaration Modifier Annotation assign FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression public Override ReferenceType runtime ReferenceType context ReferenceType self ReferenceType value1 ReferenceType value2 ReferenceType value3 ReferenceType block MethodInvocation MethodInvocation Ruby ThreadContext IRubyObject IRubyObject IRubyObject IRubyObject Block parameter1 MemberReference MemberReference MemberReference MemberReference MemberReference Literal assign parameter2 MemberReference MemberReference MemberReference MemberReference MemberReference Literal assign runtime context self value1 block false runtime context self value2 block false	0
MethodDeclaration Modifier Annotation Annotation ReferenceType clear FormalParameter StatementExpression StatementExpression ReturnStatement synchronized public JRubyMethod Override IRubyObject ReferenceType context SuperMethodInvocation MethodInvocation MethodInvocation ThreadContext MemberReference clear notifyAll context MethodInvocation getRuntime context getNil	0
MethodDeclaration Modifier ReferenceType openFile19 FormalParameter FormalParameter LocalVariableDeclaration StatementExpression StatementExpression LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration TryStatement ReturnStatement private IRubyObject ReferenceType context ReferenceType args ReferenceType VariableDeclarator MethodInvocation Assignment ReferenceType VariableDeclarator ReferenceType VariableDeclarator BasicType VariableDeclarator IfStatement IfStatement IfStatement CatchClause This ThreadContext IRubyObject RubyString filename MethodInvocation context MethodInvocation getRuntime MemberReference MethodInvocation = String modeString ModeFlags modes ClassCreator int perm Literal BinaryOperation BlockStatement BlockStatement BinaryOperation BlockStatement BinaryOperation BlockStatement BlockStatement CatchClauseParameter ThrowStatement MemberReference MemberReference get_path MemberReference checkSafeString path filename getUnicodeValue ReferenceType 0 > MemberReference Literal StatementExpression StatementExpression StatementExpression StatementExpression && BinaryOperation MemberReference IfStatement > MemberReference Literal StatementExpression StatementExpression InvalidValueException ex MethodInvocation context ArraySelector args filename ModeFlags args length 1 Assignment Assignment Assignment Assignment > MemberReference Literal ! ArraySelector MethodInvocation args BinaryOperation BlockStatement BlockStatement perm 0 MethodInvocation MethodInvocation context MethodInvocation getRuntime Literal MemberReference MemberReference = MemberReference MethodInvocation = MemberReference Literal = MemberReference MethodInvocation = args length 2 Literal isNil instanceof MemberReference ReferenceType StatementExpression StatementExpression MemberReference MemberReference MemberReference sysopenInternal MemberReference MemberReference MemberReference openInternal newErrnoEINVALError 0 modeString ArraySelector MethodInvocation MethodInvocation args modes MemberReference MemberReference parseModes19 modeString "r" modes MemberReference MethodInvocation parseModes19 2 ArraySelector args RubyHash Assignment Assignment path modes perm path modeString modes Literal convertToString toString context ArraySelector args context RubyString MethodInvocation MemberReference newString Literal MemberReference MethodInvocation = MemberReference MethodInvocation = 1 Literal context getRuntime modeString 2 modes MemberReference MemberReference MemberReference parseOptions perm MemberReference getFilePermissions 1 context ArraySelector args modes args Literal 2	1
MethodDeclaration Modifier Annotation ReferenceType hex FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context MethodInvocation name Literal compat MemberReference ThreadContext Literal Literal stringToInum "hex" CompatVersion RUBY1_8 16 false	0
MethodDeclaration Modifier BasicType getAddress ThrowStatement public long MethodInvocation ex	0
MethodDeclaration Modifier ReferenceType fromNative FormalParameter FormalParameter ReturnStatement final public IRubyObject ReferenceType context BasicType value MethodInvocation ThreadContext int context MethodInvocation getRuntime getNil	1
MethodDeclaration Modifier ReferenceType case422_line1582 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support Cast gettable ReferenceType MemberReference Token ArraySelector yyVals BinaryOperation + Literal MemberReference 0 yyTop	1
MethodDeclaration Modifier ReferenceType createPointerClass FormalParameter FormalParameter LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression ReturnStatement static public RubyClass ReferenceType runtime ReferenceType module ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MemberReference Ruby RubyModule RubyClass result MethodInvocation result ClassReference defineAnnotatedMethods result ClassReference defineAnnotatedConstants module Literal MethodInvocation MethodInvocation defineClassUnder result Literal ClassCreator fastSetConstant result module Literal MethodInvocation MemberReference defineClassUnder ReferenceType ReferenceType "NullPointerError" runtime getRuntimeError runtime MethodInvocation getRuntimeError "NULL" ReferenceType MemberReference MemberReference ClassCreator "Pointer" module MemberReference getClass PointerAllocator INSTANCE Pointer Pointer getAllocator Pointer runtime result ReferenceType MemberReference AbstractMemory ABSTRACT_MEMORY_RUBY_CLASS NullMemoryIO runtime	0
MethodDeclaration Modifier Annotation ReferenceType kill_bang ThrowStatement public JRubyMethod ElementValuePair IRubyObject MethodInvocation name ElementArrayValue MethodInvocation getRuntime Literal Literal Literal Literal newNotImplementedError "kill!" "exit!" "terminate!" "Thread#kill!, exit!, and terminate! are not safe and not supported"	1
MethodDeclaration Modifier Annotation ReferenceType chr FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair RubyString ReferenceType context ReferenceType VariableDeclarator BasicType VariableDeclarator BinaryOperation ThrowStatement MethodInvocation name Literal compat MemberReference ThreadContext Ruby runtime MethodInvocation long value MethodInvocation || BinaryOperation BinaryOperation MethodInvocation RubyString MemberReference MemberReference newStringShared "chr" CompatVersion RUBY1_8 context getRuntime getLongValue < MemberReference Literal > MemberReference Literal runtime BinaryOperation newRangeError runtime ArraySelector SINGLE_CHAR_BYTELISTS value 0 value 0xff + This Literal Cast MethodInvocation " out of char range" BasicType MemberReference toString int value	1
MethodDeclaration Modifier visit FormalParameter FormalParameter TryStatement public ReferenceType key ReferenceType value StatementExpression StatementExpression CatchClause IRubyObject IRubyObject MethodInvocation MethodInvocation CatchClauseParameter ThrowStatement output MemberReference dumpObject output MemberReference dumpObject IOException e ClassCreator key value ReferenceType MemberReference VisitorIOException e	0
MethodDeclaration Modifier ReferenceType createBufferClass FormalParameter FormalParameter LocalVariableDeclaration StatementExpression StatementExpression ReturnStatement static public RubyClass ReferenceType runtime ReferenceType module ReferenceType VariableDeclarator MethodInvocation MethodInvocation MemberReference Ruby RubyModule RubyClass result MethodInvocation result ClassReference defineAnnotatedMethods result ClassReference defineAnnotatedConstants result module Literal MethodInvocation MemberReference defineClassUnder ReferenceType ReferenceType "Buffer" module MemberReference getClass ObjectAllocator NOT_ALLOCATABLE_ALLOCATOR Buffer Buffer AbstractMemory ABSTRACT_MEMORY_RUBY_CLASS	1
MethodDeclaration Modifier BasicType dummy2 ReturnStatement static public int Literal 1	1
MethodDeclaration Modifier ReferenceType accept FormalParameter ReturnStatement public Object ReferenceType iVisitor MethodInvocation NodeVisitor iVisitor This visitVCallNode	0
MethodDeclaration Modifier Annotation ReferenceType bytes FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType block TernaryExpression name Literal frame Literal ThreadContext Block MethodInvocation MethodInvocation MethodInvocation "bytes" true block isGiven MemberReference MemberReference each_byte MethodInvocation This Literal enumeratorize context block context getRuntime "bytes"	0
MethodDeclaration Modifier trycatch FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression IfStatement StatementExpression public ReferenceType type ReferenceType body ReferenceType catchBody ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation BinaryOperation BlockStatement MethodInvocation String Runnable Runnable Label before ClassCreator Label after ClassCreator Label catchStart ClassCreator Label done ClassCreator MemberReference MemberReference MemberReference MemberReference trycatch MemberReference label body run MemberReference label MemberReference go_to != MemberReference Literal StatementExpression StatementExpression MemberReference label ReferenceType ReferenceType ReferenceType ReferenceType before after catchStart type before after done catchBody null MethodInvocation MethodInvocation done Label Label Label Label MemberReference label catchBody run catchStart	0
MethodDeclaration Modifier ReferenceType getJRubyHome IfStatement ReturnStatement public String BinaryOperation BlockStatement MemberReference == MemberReference Literal IfStatement IfStatement jrubyHome jrubyHome null MethodInvocation BlockStatement BinaryOperation BlockStatement BlockStatement ! Ruby isSecurityRestricted StatementExpression != MemberReference Literal StatementExpression TryStatement IfStatement Assignment jrubyHome null Assignment StatementExpression CatchClause BinaryOperation BlockStatement BlockStatement MemberReference MethodInvocation = MemberReference MethodInvocation = Assignment CatchClauseParameter != MemberReference Literal StatementExpression StatementExpression jrubyHome SafePropertyAccessor Literal getProperty jrubyHome MemberReference verifyHome MemberReference MethodInvocation = Exception e jrubyHome null Assignment Assignment "jruby.home" jrubyHome jrubyHome MethodInvocation MethodInvocation MethodInvocation getClass MemberReference MethodInvocation = MemberReference MethodInvocation = Literal getResource toURI getSchemeSpecificPart jrubyHome MemberReference verifyHome jrubyHome System Literal getProperty "/META-INF/jruby.home" jrubyHome "java.io.tmpdir"	1
MethodDeclaration Modifier ReferenceType getNewLabel FormalParameter LocalVariableDeclaration IfStatement StatementExpression ReturnStatement public Label ReferenceType lblPrefix ReferenceType VariableDeclarator BinaryOperation StatementExpression MethodInvocation ClassCreator String Integer idx MethodInvocation == MemberReference Literal Assignment _nextVarIndex MemberReference BinaryOperation put ReferenceType BinaryOperation _nextVarIndex MemberReference get idx null MemberReference Literal = lblPrefix + MemberReference Literal Label + MemberReference MemberReference lblPrefix idx 0 idx 1 lblPrefix idx	1
MethodDeclaration Modifier BasicType isCachedFrom FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement private boolean ReferenceType target ReferenceType context ReferenceType value BasicType index BinaryOperation RubyModule ThreadContext IRubyObject int && BinaryOperation BinaryOperation && BinaryOperation BinaryOperation == MemberReference MethodInvocation != MemberReference Literal == MemberReference MethodInvocation ArraySelector constantTargetHashes target hashCode value null ArraySelector constantGenerations context MethodInvocation getRuntime MemberReference MemberReference getConstantGeneration index index	0
MethodDeclaration Modifier join InterruptedException LocalVariableDeclaration IfStatement public ReferenceType VariableDeclarator BinaryOperation StatementExpression Thread thread MethodInvocation != MemberReference Literal MethodInvocation nativeThread get thread null thread join	1
MethodDeclaration Modifier Annotation ReferenceType avail_out ReturnStatement public JRubyMethod ElementValuePair IRubyObject MethodInvocation name Literal RubyFixnum MethodInvocation zero "avail_out" getRuntime	1
MethodDeclaration Modifier ReferenceType case349_line1302 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference ClassCreator = yyVal yyVal ReferenceType Cast ZSuperNode ReferenceType MemberReference Token ArraySelector yyVals BinaryOperation + Literal MemberReference 0 yyTop	1
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType arg0 ReferenceType block ReferenceType VariableDeclarator BinaryOperation BlockStatement MemberReference ThreadContext IRubyObject RubyModule String IRubyObject Block IRubyObject proxy MethodInvocation instanceof MethodInvocation ReferenceType StatementExpression proxy oldNew MemberReference MemberReference MemberReference Literal MemberReference MemberReference call proxy dataGetStruct JavaObject MethodInvocation context self clazz "new_proxy" arg0 block RuntimeHelpers MemberReference MemberReference Literal MemberReference MemberReference invoke context proxy "__jcreate!" arg0 block	0
MethodDeclaration Modifier ReferenceType toString ReturnStatement public String MethodInvocation Integer MemberReference toString _index	0
MethodDeclaration Modifier ReferenceType getString8 FormalParameter ReturnStatement final public RubyString ReferenceType runtime MethodInvocation Ruby runtimeCache MemberReference Literal getString runtime 8	0
MethodDeclaration Modifier Annotation Annotation ReferenceType to_a LocalVariableDeclaration TryStatement public JRubyMethod ElementValuePair Override RubyArray Modifier ReferenceType VariableDeclarator LocalVariableDeclaration StatementExpression StatementExpression ReturnStatement CatchClause name Literal final Ruby runtime MethodInvocation Modifier ReferenceType VariableDeclarator MethodInvocation MethodInvocation MemberReference CatchClauseParameter ThrowStatement "to_a" getRuntime final RubyArray result MethodInvocation ClassCreator visitAll result MethodInvocation setTaint result NegativeArraySizeException nase MethodInvocation RubyArray MemberReference MemberReference newArray ReferenceType MethodDeclaration isTaint concurrentModification runtime size Visitor Modifier visit FormalParameter FormalParameter StatementExpression public ReferenceType key ReferenceType value MethodInvocation IRubyObject IRubyObject result MethodInvocation append RubyArray MemberReference MemberReference MemberReference newArray runtime key value	0
MethodDeclaration Modifier ReferenceType getNodeType ReturnStatement public NodeType MemberReference NodeType LISTNODE	0
MethodDeclaration Modifier BasicType op_cmp19 FormalParameter LocalVariableDeclaration IfStatement ReturnStatement final public int ReferenceType other BasicType VariableDeclarator BinaryOperation BlockStatement MemberReference RubyString int ret MethodInvocation && BinaryOperation MethodInvocation ReturnStatement ret value MemberReference cmp == MemberReference Literal ! MemberReference isComparableWith TernaryExpression other value ret 0 other BinaryOperation Literal Literal > MethodInvocation MethodInvocation 1 - 1 value.encoding getIndex other.value.encoding getIndex	1
MethodDeclaration Modifier ReferenceType getValue ReturnStatement public Node MemberReference node	0
MethodDeclaration Modifier Annotation ReferenceType get ReturnStatement public Override IRubyObject MethodInvocation runtime MethodInvocation getLoadService getLoadedFeatures	0
MethodDeclaration Modifier ReferenceType expandPathInternal FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement IfStatement IfStatement LocalVariableDeclaration IfStatement LocalVariableDeclaration IfStatement LocalVariableDeclaration IfStatement ReturnStatement private static IRubyObject ReferenceType context ReferenceType recv ReferenceType args BasicType expandUser ReferenceType VariableDeclarator ReferenceType VariableDeclarator BasicType VariableDeclarator ReferenceType VariableDeclarator MemberReference BlockStatement BinaryOperation BlockStatement BlockStatement BinaryOperation ReturnStatement ReferenceType VariableDeclarator MemberReference BlockStatement ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement ReferenceType VariableDeclarator MemberReference BlockStatement MethodInvocation ThreadContext IRubyObject IRubyObject boolean Ruby runtime MethodInvocation String relativePath MethodInvocation boolean isAbsoluteWithFilePrefix MethodInvocation String cwd Literal expandUser StatementExpression && BinaryOperation MemberReference StatementExpression IfStatement StatementExpression LocalVariableDeclaration IfStatement StatementExpression == MemberReference Literal MethodInvocation String padSlashes Literal ! Platform IS_WINDOWS IfStatement JRubyFile path == MethodInvocation Literal StatementExpression StatementExpression StatementExpression String tempResult BinaryOperation isAbsoluteWithFilePrefix StatementExpression runtime MemberReference newString context getRuntime MethodInvocation MemberReference MemberReference get_path relativePath Literal startsWith null Assignment == MemberReference Literal ! ArraySelector MethodInvocation args Assignment MemberReference BlockStatement Assignment BasicType VariableDeclarator BinaryOperation BlockStatement Assignment cwd null runtime getNil "" BinaryOperation BlockStatement IfStatement relativePath length 0 Assignment Assignment Assignment + MemberReference MethodInvocation Assignment tempResult getUnicodeValue context ArraySelector args "file:" MemberReference MethodInvocation = args length 2 Literal isNil MemberReference MethodInvocation = expandUser StatementExpression MemberReference MethodInvocation = boolean startsWithSlashNotOnWindows BinaryOperation && MemberReference MethodInvocation StatementExpression MemberReference MethodInvocation = && BinaryOperation BinaryOperation StatementExpression BinaryOperation BlockStatement MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation = padSlashes MethodInvocation canonicalize MemberReference MethodInvocation = Literal relativePath MemberReference MemberReference expandUserPath 1 cwd MethodInvocation MemberReference MemberReference get_path Assignment cwd MemberReference MemberReference Literal adjustRootPathOnWindows && BinaryOperation BinaryOperation ! startsWithSlashNotOnWindows ! MemberReference startsWithDriveLetterOnWindows Assignment cwd runtime getCurrentDirectory > MethodInvocation Literal == MethodInvocation Literal Assignment && BinaryOperation BinaryOperation StatementExpression path JRubyFile MemberReference MemberReference create relativePath MemberReference MemberReference MemberReference adjustRootPathOnWindows path JRubyFile MemberReference MemberReference create path getAbsolutePath tempResult tempResult MethodInvocation substring 0 context relativePath getUnicodeValue context ArraySelector args MemberReference MethodInvocation = runtime cwd null && BinaryOperation BinaryOperation == MethodInvocation Literal cwd MemberReference ClassCreator = relativePath length 0 relativePath Literal charAt '/' MemberReference MethodInvocation = > MethodInvocation Literal == MethodInvocation Literal Assignment relativePath cwd runtime relativePath cwd cwd relativePath tempResult Literal indexOf Literal cwd MemberReference MemberReference expandUserPath && BinaryOperation MemberReference > MethodInvocation Literal cwd Literal charAt '/' cwd MethodInvocation ReferenceType MethodInvocation MemberReference 0 padSlashes MemberReference countSlashes cwd length 0 cwd Literal charAt '/' MemberReference MethodInvocation = "file:" 1 context cwd != MemberReference Literal ! Platform IS_WINDOWS cwd length 0 0 getAbsolutePath File runtime getCurrentDirectory cwd relativePath 0 padSlashes MemberReference countSlashes cwd null cwd	1
MethodDeclaration Modifier ReferenceType getEncoding FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement StatementExpression ReturnStatement public RubyEncoding ReferenceType enc BasicType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation MemberReference Encoding int index MethodInvocation RubyEncoding rubyEncoding && BinaryOperation BinaryOperation ReturnStatement ClassCreator loadEncoding ArraySelector encodingIndex enc getIndex < MemberReference MemberReference != Assignment Literal MemberReference ReferenceType MethodInvocation Literal MemberReference index encodingIndex length MemberReference MemberReference = null rubyEncoding ByteList enc getName false index rubyEncoding ArraySelector encodingIndex MemberReference index	1
MethodDeclaration Modifier BasicType hashCode ReturnStatement public int MethodInvocation MethodInvocation getClass hashCode	0
MethodDeclaration Modifier ReferenceType case292_line1126 FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop ReferenceType VariableDeclarator Assignment MemberReference Object Object int Node body TernaryExpression MemberReference ClassCreator = yyVal BinaryOperation MemberReference Cast yyVal ReferenceType MethodInvocation MethodInvocation MemberReference == Cast Literal NilImplicitNode NIL ReferenceType MemberReference UntilNode Cast getPosition support Cast getConditionNode body ReferenceType MemberReference null Node ArraySelector yyVals ReferenceType MemberReference ReferenceType MemberReference Node ArraySelector yyVals BinaryOperation Token ArraySelector yyVals Node ArraySelector yyVals BinaryOperation + Literal MemberReference BinaryOperation BinaryOperation + Literal MemberReference - 1 yyTop + Literal MemberReference + Literal MemberReference - 1 yyTop - 6 yyTop - 4 yyTop	1
MethodDeclaration Modifier Annotation ReferenceType interpret FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public Override IRubyObject ReferenceType runtime ReferenceType context ReferenceType self ReferenceType aBlock MethodInvocation Ruby ThreadContext IRubyObject Block callAdapter MemberReference MemberReference MemberReference MethodInvocation call context self self arg1 MemberReference MemberReference MemberReference MemberReference interpret runtime context self aBlock	0
MethodDeclaration Modifier Annotation BasicType contains FormalParameter ReturnStatement public Override boolean ReferenceType o MethodInvocation Object view This MemberReference contains RubyHash o	0
MethodDeclaration Modifier BasicType isShowBytecode ReturnStatement public boolean MethodInvocation ruby MethodInvocation MethodInvocation get getInstanceConfig isShowBytecode	0
MethodDeclaration Modifier ReferenceType yieldSpecific FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType context ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 ReferenceType arg3 ReferenceType arg4 ReferenceType arg5 ReferenceType arg6 ReferenceType arg7 ReferenceType arg8 ReferenceType binding ReferenceType type MethodInvocation ThreadContext IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject Binding Block ReferenceType MemberReference MethodInvocation Literal Literal Literal MemberReference MemberReference yield Type context context MethodInvocation getRuntime null null true binding type MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference newArrayNoCopyLight arg0 arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8	1
MethodDeclaration Modifier Annotation ReferenceType getCanonicalFile IOException ReturnStatement public Override File ClassCreator ReferenceType MethodInvocation NormalizedFile getCanonicalPath	0
MethodDeclaration Modifier Annotation ReferenceType getFastOptSingletonMethod FormalParameter ReturnStatement public Deprecated Callback ReferenceType method ClassCreator String ReferenceType MemberReference MemberReference ArrayCreator Literal Literal MethodInvocation Literal ReflectionCallback type method ReferenceType ArrayInitializer true true Arity optional true Class ClassReference ReferenceType IRubyObject	1
MethodDeclaration Modifier BasicType isVarArgs ReturnStatement public boolean MethodInvocation method isVarArgs	0
MethodDeclaration Modifier Annotation ReferenceType broadcast FormalParameter StatementExpression ReturnStatement synchronized public JRubyMethod IRubyObject ReferenceType context MethodInvocation This ThreadContext notifyAll	0
MethodDeclaration Modifier ReferenceType getVariableMethodMissing ReturnStatement public DynamicMethod MemberReference variableMethodMissing	0
MethodDeclaration Modifier ReferenceType buildNthRef FormalParameter FormalParameter ReturnStatement public Operand ReferenceType nthRefNode ReferenceType m ClassCreator NthRefNode IR_Scope ReferenceType MethodInvocation NthRef nthRefNode getMatchNumber	1
MethodDeclaration Modifier Annotation ReferenceType isAccessible ReturnStatement public JRubyMethod ElementValuePair RubyBoolean ClassCreator name Literal ReferenceType MethodInvocation MethodInvocation "accessible?" RubyBoolean getRuntime MethodInvocation accessibleObject isAccessible	0
MethodDeclaration Modifier handleException FormalParameter StatementExpression public ReferenceType bsfExcptn MethodInvocation BSFException MemberReference Cast printException runtime ReferenceType MethodInvocation Exception bsfExcptn getTargetException	0
MethodDeclaration Modifier Annotation ReferenceType protected_methods FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType args MethodInvocation name Literal optional Literal compat MemberReference ThreadContext IRubyObject MethodInvocation getMetaClass "protected_methods" 1 CompatVersion RUBY1_8 MethodInvocation protected_instance_methods MemberReference MemberReference trueIfNoArgument context args	1
MethodDeclaration Modifier ReferenceType parseInline FormalParameter FormalParameter FormalParameter IfStatement ReturnStatement public Node ReferenceType in ReferenceType file ReferenceType scope BinaryOperation StatementExpression MethodInvocation InputStream String DynamicScope != MemberReference Literal MethodInvocation parser MemberReference MemberReference MemberReference ClassCreator parse parserStats null parserStats addEvalParse file in scope ReferenceType MethodInvocation Literal Literal Literal Literal MemberReference ParserConfiguration getKCode 0 false true false config	1
MethodDeclaration setGC FormalParameter StatementExpression ReferenceType gcModule Assignment RubyModule This MemberReference = MemberReference gcModule gcModule	0
MethodDeclaration Modifier ReferenceType inspectHash FormalParameter LocalVariableDeclaration StatementExpression LocalVariableDeclaration StatementExpression StatementExpression StatementExpression ReturnStatement private IRubyObject Modifier ReferenceType context Modifier ReferenceType VariableDeclarator MethodInvocation Modifier BasicType VariableDeclarator Assignment MethodInvocation MethodInvocation MethodInvocation final ThreadContext final ByteList buffer ClassCreator buffer Literal append final boolean firstEntry ArrayCreator MemberReference Literal = ClassCreator visitAll buffer Literal append MethodInvocation getRuntime ReferenceType '{' BasicType Literal ArraySelector firstEntry true ReferenceType MethodDeclaration '}' MemberReference newString ByteList boolean 1 Literal Visitor Modifier visit FormalParameter FormalParameter IfStatement StatementExpression StatementExpression StatementExpression StatementExpression buffer 0 public ReferenceType key ReferenceType value MemberReference StatementExpression MethodInvocation MethodInvocation MethodInvocation Assignment IRubyObject IRubyObject ! ArraySelector firstEntry MethodInvocation buffer MethodInvocation append buffer MethodInvocation Literal append buffer MethodInvocation append MemberReference Literal = Literal buffer MethodInvocation Literal append MethodInvocation MemberReference MemberReference inspect Literal append '=' MethodInvocation MemberReference MemberReference inspect ArraySelector firstEntry false 0 Literal append ',' getByteList context key '>' getByteList context value Literal ' ' 0	0
MethodDeclaration Modifier ReferenceType getNodeType ReturnStatement public NodeType MemberReference NodeType ARGAUXILIARYNODE	0
MethodDeclaration Modifier ReferenceType permutationCommon FormalParameter FormalParameter FormalParameter IfStatement ReturnStatement private IRubyObject ReferenceType context BasicType r ReferenceType block BinaryOperation BlockStatement IfStatement This ThreadContext int Block == MemberReference Literal StatementExpression BinaryOperation BlockStatement IfStatement r 0 MethodInvocation == MemberReference Literal ForStatement BinaryOperation BlockStatement block MemberReference MethodInvocation yield r 1 ForControl BlockStatement && BinaryOperation BinaryOperation LocalVariableDeclaration StatementExpression context MethodInvocation newEmptyArray VariableDeclaration BinaryOperation MemberReference StatementExpression >= MemberReference Literal >= MemberReference MemberReference BasicType VariableDeclarator MethodInvocation context getRuntime BasicType VariableDeclarator < MemberReference MemberReference ++ i MethodInvocation r 0 realLength r int n MemberReference MemberReference MemberReference MemberReference ArrayCreator Literal ArrayCreator MethodInvocation MemberReference permute int i Literal i realLength block MemberReference MethodInvocation yield realLength context n r BasicType MemberReference 0 BasicType MemberReference MemberReference MemberReference MethodInvocation makeShared block 0 context MethodInvocation MemberReference newArray int n boolean n begin n getMetaClass context getRuntime ArraySelector values BinaryOperation + MemberReference MemberReference begin i	0
MethodDeclaration Modifier ReferenceType op_div FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType context BasicType other MethodInvocation ThreadContext long MemberReference MemberReference Literal idiv context other "/"	1
MethodDeclaration Modifier BasicType longValue FormalParameter FormalParameter ReturnStatement final public long ReferenceType context ReferenceType obj MethodInvocation ThreadContext IRubyObject Util MemberReference uint8Value obj	1
MethodDeclaration Modifier ReferenceType case58_line510 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support Cast Cast new_super ReferenceType MemberReference ReferenceType MemberReference Node ArraySelector yyVals Token ArraySelector yyVals BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference 0 yyTop - 1 yyTop	1
MethodDeclaration Modifier ReferenceType getTypeInstance FormalParameter ReturnStatement public String BasicType b Literal boolean "boolean"	0
MethodDeclaration Modifier BasicType isDark ReturnStatement public boolean MemberReference dark	0
MethodDeclaration Modifier ReferenceType read FormalParameter FormalParameter FormalParameter SwitchStatement static public IRubyObject ReferenceType context ReferenceType recv ReferenceType args MemberReference SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase ThreadContext IRubyObject IRubyObject args length Literal ThrowStatement Literal ReturnStatement Literal ReturnStatement Literal ReturnStatement ThrowStatement 0 MethodInvocation 1 MethodInvocation 2 MethodInvocation 3 MethodInvocation MethodInvocation context MethodInvocation getRuntime MemberReference MemberReference MemberReference MemberReference read MemberReference MemberReference MemberReference MemberReference read MemberReference MemberReference MemberReference MemberReference MemberReference read context MethodInvocation getRuntime Literal Literal newArgumentError context recv ArraySelector args Block NULL_BLOCK context recv ArraySelector args ArraySelector args context recv ArraySelector args ArraySelector args ArraySelector args MemberReference Literal newArgumentError 0 1 Literal Literal Literal Literal Literal Literal args length 3 0 0 1 0 1 2	0
MethodDeclaration Modifier Annotation ReferenceType convertToType FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter IfStatement ReturnStatement final static public Deprecated IRubyObject ReferenceType obj ReferenceType target BasicType convertMethodIndex ReferenceType convertMethod BasicType raise MethodInvocation BlockStatement MethodInvocation IRubyObject RubyClass int String boolean ! obj MemberReference respondsTo ReturnStatement obj MethodInvocation MemberReference callMethod convertMethod MethodInvocation obj MethodInvocation getRuntime convertMethod MemberReference MemberReference MemberReference handleUncoercibleObject getCurrentContext raise obj target	1
MethodDeclaration Modifier ishr StatementExpression public MethodInvocation MethodInvocation getMethodVisitor MemberReference visitInsn ISHR	0
MethodDeclaration Modifier ReferenceType newStruct FormalParameter ReturnStatement static final com ReferenceType ReferenceType layout MethodInvocation kenai ReferenceType StructLayout MethodInvocation MethodInvocation newStruct jffi ReferenceType layout getRuntime layout getFields Struct	1
MethodDeclaration Modifier ReferenceType expectedTraceLine FormalParameter ReturnStatement private String BasicType index BinaryOperation int + Literal MethodInvocation "\tfrom " MemberReference testLine index	0
MethodDeclaration Modifier ReferenceType getNodeType ReturnStatement public NodeType MemberReference NodeType CLASSVARASGNNODE	0
MethodDeclaration Modifier pushInt FormalParameter IfStatement public BasicType value BinaryOperation BlockStatement IfStatement int && BinaryOperation BinaryOperation SwitchStatement BinaryOperation BlockStatement BlockStatement <= MemberReference MemberReference >= MemberReference MemberReference MemberReference SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase && BinaryOperation BinaryOperation StatementExpression StatementExpression value Byte MAX_VALUE value Byte MIN_VALUE value Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement StatementExpression BreakStatement <= MemberReference MemberReference >= MemberReference MemberReference MethodInvocation MethodInvocation - 1 MethodInvocation 0 MethodInvocation 1 MethodInvocation 2 MethodInvocation 3 MethodInvocation 4 MethodInvocation 5 MethodInvocation MethodInvocation value Short MAX_VALUE value Short MIN_VALUE MemberReference sipush MemberReference ldc iconst_m1 iconst_0 iconst_1 iconst_2 iconst_3 iconst_4 iconst_5 MemberReference bipush value value value	0
MethodDeclaration Modifier ReferenceType getPosition FormalParameter ReturnStatement private ISourcePosition ReferenceType start TernaryExpression ISourcePositionHolder BinaryOperation MethodInvocation MethodInvocation != MemberReference Literal lexer MethodInvocation getPosition lexer getPosition start null start getPosition	0
MethodDeclaration Modifier marshal FormalParameter FormalParameter FormalParameter StatementExpression final public ReferenceType invocation ReferenceType buffer ReferenceType parameter MethodInvocation Invocation InvocationBuffer IRubyObject buffer MethodInvocation putByte Util MemberReference uint8Value parameter	1
MethodDeclaration Modifier Annotation ReferenceType key_p FormalParameter StatementExpression ReturnStatement public JRubyMethod ElementValuePair ElementValuePair RubyBoolean ReferenceType key Assignment MethodInvocation name Literal required Literal IRubyObject MemberReference MethodInvocation = MethodInvocation getRuntime "key?" 1 key MemberReference getSymbolKey MethodInvocation newBoolean key MethodInvocation getThreadLocals MemberReference containsKey key	1
MethodDeclaration Modifier Annotation ReferenceType getlocal ReturnStatement public JRubyMethod ElementValuePair RubyTime MethodInvocation name Literal MethodInvocation MethodInvocation MethodInvocation newTime "getlocal" getRuntime dt MethodInvocation withZone getUSec MethodInvocation getLocalTimeZone getRuntime	0
MethodDeclaration Modifier branch FormalParameter StatementExpression public ReferenceType context MethodInvocation BodyCompiler context loadTrue	0
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType context ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 ReferenceType arg3 MethodInvocation ThreadContext IRubyObject IRubyObject IRubyObject IRubyObject body MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference call context arg0 arg1 arg2 arg3 binding type	0
MethodDeclaration Modifier Annotation Annotation ReferenceType call FormalParameter FormalParameter FormalParameter ThrowStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair Override IRubyObject ReferenceType context ReferenceType args ReferenceType block MethodInvocation name ElementArrayValue rest Literal frame Literal ThreadContext IRubyObject Block context MethodInvocation getRuntime Literal Literal true true Literal newTypeError "call" "[]" "you cannot call unbound method; bind first"	0
MethodDeclaration Modifier dup2 StatementExpression public MethodInvocation MethodInvocation getMethodVisitor MemberReference visitInsn DUP2	0
MethodDeclaration Modifier put FormalParameter FormalParameter FormalParameter FormalParameter ThrowStatement public ReferenceType runtime ReferenceType cache ReferenceType ptr ReferenceType value MethodInvocation Ruby StructLayout ReferenceType IRubyObject IRubyObject runtime Literal newNotImplementedError Storage "Cannot set Struct fields"	0
MethodDeclaration Modifier BasicType getPostCount ReturnStatement public int TernaryExpression BinaryOperation Literal MethodInvocation == MemberReference Literal 0 post size post null	0
MethodDeclaration Modifier ReferenceType getTypeInstance FormalParameter ReturnStatement public String BasicType f Literal float "float"	0
MethodDeclaration Modifier ReferenceType each_char FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration WhileStatement ReturnStatement public IRubyObject Modifier ReferenceType context Modifier ReferenceType block ReferenceType VariableDeclarator ReferenceType VariableDeclarator Assignment BlockStatement This final ThreadContext final Block Ruby runtime MethodInvocation IRubyObject ch MemberReference MethodInvocation = LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression WhileStatement StatementExpression context getRuntime ch getc BasicType VariableDeclarator BasicType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation BinaryOperation BlockStatement MethodInvocation byte c Cast int n MethodInvocation RubyString str MethodInvocation str Literal setTaint str MemberReference cat > MemberReference Literal IfStatement StatementExpression StatementExpression block MemberReference MemberReference yield BasicType MethodInvocation runtime MethodInvocation MethodInvocation getKCode runtime newString true c -- n 0 Assignment BlockStatement Assignment MethodInvocation context str byte RubyNumeric MemberReference fix2int getEncoding MemberReference length MemberReference MethodInvocation = StatementExpression ReturnStatement MemberReference Cast = str MemberReference cat ch c ch getc MethodInvocation This c BasicType MethodInvocation c block MemberReference MemberReference yield byte RubyNumeric MemberReference fix2int context str ch	1
MethodDeclaration Modifier ReferenceType getPath ReturnStatement public File MemberReference path	0
MethodDeclaration Modifier Annotation ReferenceType op_aref FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType arg1 ReferenceType arg2 ReferenceType VariableDeclarator BinaryOperation ReturnStatement MethodInvocation name ElementArrayValue reads MemberReference writes MemberReference compat MemberReference ThreadContext IRubyObject IRubyObject Ruby runtime MethodInvocation instanceof MemberReference ReferenceType MethodInvocation MemberReference MethodInvocation MethodInvocation substr Literal Literal BACKREF BACKREF CompatVersion RUBY1_8 context getRuntime arg1 RubyRegexp MemberReference MemberReference Cast MethodInvocation subpat runtime RubyNumeric MemberReference num2int RubyNumeric MemberReference num2int "[]" "slice" runtime context ReferenceType MemberReference RubyNumeric MemberReference num2int arg1 arg2 RubyRegexp arg1 arg2	1
MethodDeclaration Modifier createDigestSHA2 FormalParameter StatementExpression TryStatement LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression LocalVariableDeclaration StatementExpression StatementExpression LocalVariableDeclaration StatementExpression StatementExpression static public ReferenceType runtime MethodInvocation StatementExpression CatchClause ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation ReferenceType VariableDeclarator MethodInvocation MethodInvocation ReferenceType VariableDeclarator MethodInvocation MethodInvocation Ruby runtime MethodInvocation getLoadService MethodInvocation CatchClauseParameter ThrowStatement RubyModule mDigest MethodInvocation RubyClass cDigestBase MethodInvocation RubyClass cDigest_SHA2_256 MethodInvocation cDigest_SHA2_256 Literal MethodInvocation setInternalModuleVariable cDigest_SHA2_256 Literal ClassCreator defineFastMethod RubyClass cDigest_SHA2_384 MethodInvocation cDigest_SHA2_384 Literal MethodInvocation setInternalModuleVariable cDigest_SHA2_384 Literal ClassCreator defineFastMethod RubyClass cDigest_SHA2_512 MethodInvocation cDigest_SHA2_512 Literal MethodInvocation setInternalModuleVariable cDigest_SHA2_512 Literal ClassCreator defineFastMethod Literal require MemberReference Literal createMessageDigest NoSuchAlgorithmException e MethodInvocation runtime Literal fastGetModule mDigest Literal fastGetClass mDigest Literal MemberReference MethodInvocation defineClassUnder "metadata" runtime Literal newString "block_length" ReferenceType MethodDeclaration MethodDeclaration mDigest Literal MemberReference MethodInvocation defineClassUnder "metadata" runtime Literal newString "block_length" ReferenceType MethodDeclaration MethodDeclaration mDigest Literal MemberReference MethodInvocation defineClassUnder "metadata" runtime Literal newString "block_length" ReferenceType MethodDeclaration MethodDeclaration "digest.so" runtime "SHA-256" runtime Literal newLoadError "Digest" "Base" "SHA256" cDigestBase cDigestBase getAllocator "SHA-256" Callback Modifier ReferenceType getArity ReturnStatement Modifier ReferenceType execute FormalParameter FormalParameter FormalParameter ReturnStatement "SHA384" cDigestBase cDigestBase getAllocator "SHA-384" Callback Modifier ReferenceType getArity ReturnStatement Modifier ReferenceType execute FormalParameter FormalParameter FormalParameter ReturnStatement "SHA512" cDigestBase cDigestBase getAllocator "SHA-512" Callback Modifier ReferenceType getArity ReturnStatement Modifier ReferenceType execute FormalParameter FormalParameter FormalParameter ReturnStatement "SHA2 not supported" public Arity MemberReference public IRubyObject ReferenceType recv ReferenceType args ReferenceType block MethodInvocation public Arity MemberReference public IRubyObject ReferenceType recv ReferenceType args ReferenceType block MethodInvocation public Arity MemberReference public IRubyObject ReferenceType recv ReferenceType args ReferenceType block MethodInvocation Arity NO_ARGUMENTS IRubyObject IRubyObject Block RubyFixnum MethodInvocation Literal newFixnum Arity NO_ARGUMENTS IRubyObject IRubyObject Block RubyFixnum MethodInvocation Literal newFixnum Arity NO_ARGUMENTS IRubyObject IRubyObject Block RubyFixnum MethodInvocation Literal newFixnum recv getRuntime 64 recv getRuntime 128 recv getRuntime 128	1
MethodDeclaration Modifier Annotation ReferenceType exitstatus ReturnStatement public JRubyMethod IRubyObject MethodInvocation MethodInvocation getRuntime MemberReference newFixnum status	0
MethodDeclaration install FormalParameter IfStatement ReferenceType proxy MethodInvocation BlockStatement RubyModule hasLocalMethod LocalVariableDeclaration StatementExpression IfStatement ReferenceType VariableDeclarator MethodInvocation BinaryOperation BlockStatement DynamicMethod method ClassCreator proxy MemberReference MemberReference addMethod && BinaryOperation MethodInvocation StatementExpression StatementExpression ReferenceType MemberReference MemberReference name method != MemberReference Literal isPublic MethodInvocation Assignment InstanceMethodInvoker proxy methods aliases null proxy MemberReference This defineAliases MemberReference Literal = aliases MemberReference aliases null name	0
MethodDeclaration Modifier ReferenceType newObjectAdapter ReturnStatement static public RubyObjectAdapter ClassCreator ReferenceType MethodDeclaration MethodDeclaration MethodDeclaration MethodDeclaration MethodDeclaration MethodDeclaration MethodDeclaration MethodDeclaration MethodDeclaration MethodDeclaration MethodDeclaration MethodDeclaration RubyObjectAdapter Modifier BasicType isKindOf FormalParameter FormalParameter ReturnStatement Modifier ReferenceType setInstanceVariable FormalParameter FormalParameter FormalParameter ReturnStatement Modifier ReferenceType convertToJavaArray FormalParameter ReturnStatement Modifier ReferenceType convertToRubyInteger FormalParameter ReturnStatement Modifier ReferenceType getInstanceVariable FormalParameter FormalParameter ReturnStatement Modifier ReferenceType convertToRubyString FormalParameter ReturnStatement Modifier ReferenceType callMethod FormalParameter FormalParameter ReturnStatement Modifier ReferenceType callMethod FormalParameter FormalParameter FormalParameter ReturnStatement Modifier ReferenceType callMethod FormalParameter FormalParameter FormalParameter ReturnStatement Modifier ReferenceType callMethod FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement Modifier ReferenceType callSuper FormalParameter FormalParameter ReturnStatement Modifier ReferenceType callSuper FormalParameter FormalParameter FormalParameter ReturnStatement public boolean ReferenceType value ReferenceType rubyModule MethodInvocation public IRubyObject ReferenceType obj ReferenceType variableName ReferenceType value MethodInvocation public IRubyObject ReferenceType array Cast public RubyInteger ReferenceType obj MethodInvocation public IRubyObject ReferenceType obj ReferenceType variableName MethodInvocation public RubyString ReferenceType obj MethodInvocation public IRubyObject ReferenceType receiver ReferenceType methodName MethodInvocation public IRubyObject ReferenceType receiver ReferenceType methodName ReferenceType singleArg MethodInvocation public IRubyObject ReferenceType receiver ReferenceType methodName ReferenceType args MethodInvocation public IRubyObject ReferenceType receiver ReferenceType methodName ReferenceType args ReferenceType block MethodInvocation public IRubyObject ReferenceType receiver ReferenceType args MethodInvocation public IRubyObject ReferenceType receiver ReferenceType args ReferenceType block MethodInvocation IRubyObject RubyModule rubyModule MemberReference isInstance IRubyObject String IRubyObject obj MethodInvocation getInstanceVariables IRubyObject ReferenceType MemberReference IRubyObject obj convertToInteger IRubyObject String obj MethodInvocation getInstanceVariables IRubyObject obj convertToString IRubyObject String receiver MethodInvocation MemberReference callMethod IRubyObject String IRubyObject receiver MethodInvocation MemberReference MemberReference callMethod IRubyObject String IRubyObject receiver MethodInvocation MemberReference MemberReference callMethod IRubyObject String IRubyObject Block receiver MethodInvocation MemberReference MemberReference MemberReference callMethod IRubyObject IRubyObject RuntimeHelpers MethodInvocation MemberReference MemberReference MemberReference invokeSuper IRubyObject IRubyObject Block RuntimeHelpers MethodInvocation MemberReference MemberReference MemberReference invokeSuper value MemberReference MemberReference setInstanceVariable RubyArray array MemberReference getInstanceVariable receiver MethodInvocation getRuntime methodName receiver MethodInvocation getRuntime methodName singleArg receiver MethodInvocation getRuntime methodName args receiver MethodInvocation getRuntime methodName args block receiver MethodInvocation getRuntime receiver args Block NULL_BLOCK receiver MethodInvocation getRuntime receiver args block variableName value variableName getCurrentContext getCurrentContext getCurrentContext getCurrentContext getCurrentContext getCurrentContext	0
MethodDeclaration Modifier setSingleton FormalParameter StatementExpression public BasicType isSingleton Assignment boolean This MemberReference = MemberReference isSingleton isSingleton	0
MethodDeclaration Modifier ReferenceType case196_line791 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support Cast Literal Cast MethodInvocation getOperatorCallNode ReferenceType MemberReference "&" ReferenceType MemberReference getPosition Node ArraySelector yyVals Node ArraySelector yyVals BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference - 2 yyTop 0 yyTop	1
MethodDeclaration Modifier ReferenceType toString ReturnStatement public String MemberReference _label	0
MethodDeclaration Modifier putZeroTerminatedByteArray FormalParameter FormalParameter FormalParameter FormalParameter ThrowStatement public BasicType offset BasicType bytes BasicType off BasicType len MethodInvocation long byte int int ex	0
MethodDeclaration Modifier ReferenceType immutableMap FormalParameter ReturnStatement private static Map TypeArgument TypeArgument ReferenceType fields MethodInvocation ReferenceType ReferenceType Map TypeArgument TypeArgument Collections ClassCreator unmodifiableMap IRubyObject Member ReferenceType ReferenceType ReferenceType MemberReference IRubyObject Member LinkedHashMap TypeArgument TypeArgument fields ReferenceType ReferenceType IRubyObject Member	0
MethodDeclaration Modifier Annotation BasicType hashCode ReturnStatement final public Override int Cast BasicType BinaryOperation int ^ MemberReference BinaryOperation value >>> MemberReference Literal value 32	0
MethodDeclaration Modifier BasicType isDirect ReturnStatement public boolean Literal true	0
MethodDeclaration Modifier anewarray FormalParameter StatementExpression public ReferenceType arg0 MethodInvocation String MethodInvocation getMethodVisitor MemberReference MemberReference visitTypeInsn ANEWARRAY arg0	0
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType context ReferenceType self ReferenceType klazz ReferenceType name ReferenceType args ReferenceType block MethodInvocation ThreadContext IRubyObject RubyModule String IRubyObject Block proc MemberReference MemberReference MemberReference MemberReference call context args self block	0
MethodDeclaration Modifier ReferenceType iterator ReturnStatement public Iterator MethodInvocation valueIterator	0
MethodDeclaration Modifier BasicType codeLength FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement static public int ReferenceType runtime ReferenceType enc BasicType c BasicType VariableDeclarator BinaryOperation ThrowStatement MemberReference Ruby Encoding int int n MethodInvocation == MemberReference Literal MethodInvocation n enc MemberReference codeToMbcLength n 0 runtime BinaryOperation newArgumentError c + BinaryOperation MethodInvocation + Literal MethodInvocation enc getName "invalid codepoint " String Literal MemberReference format "0x%x in " c	1
MethodDeclaration Modifier ReferenceType callMethodMissing FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement private IRubyObject ReferenceType context ReferenceType self ReferenceType method ReferenceType arg MethodInvocation ThreadContext IRubyObject DynamicMethod IRubyObject RuntimeHelpers MethodInvocation MemberReference MemberReference MethodInvocation MemberReference MemberReference selectMethodMissing MemberReference MemberReference MethodInvocation MemberReference MemberReference MemberReference call context self method getVisibility methodName callType context self self getMetaClass methodName arg Block NULL_BLOCK	0
MethodDeclaration Modifier ReferenceType newEOFError ReturnStatement public RaiseException MethodInvocation MethodInvocation Literal newRaiseException getEOFError "End of file reached"	0
MethodDeclaration Modifier ReferenceType newArray FormalParameter ReturnStatement final static public RubyArray Modifier ReferenceType runtime MethodInvocation final Ruby MemberReference MemberReference newArray runtime ARRAY_DEFAULT_SIZE	0
MethodDeclaration Modifier Annotation ReferenceType pop FormalParameter FormalParameter StatementExpression LocalVariableDeclaration StatementExpression ReturnStatement public JRubyMethod IRubyObject ReferenceType context ReferenceType num MethodInvocation ReferenceType VariableDeclarator Assignment MemberReference ThreadContext IRubyObject modifyCheck RubyArray result MethodInvocation MemberReference MemberReference -= result MemberReference MemberReference Literal MethodInvocation makeSharedFirst realLength result realLength context num true context MethodInvocation getRuntime getArray	0
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter ThrowStatement public Override IRubyObject ReferenceType context ReferenceType arg0 ReferenceType binding ReferenceType type MethodInvocation ThreadContext IRubyObject Binding Type context MethodInvocation getRuntime MemberReference MethodInvocation Literal newLocalJumpError RubyLocalJumpError.Reason NOREASON context MethodInvocation getRuntime "yield called out of block" ArrayCreator newArrayNoCopy ReferenceType ArrayInitializer IRubyObject MemberReference arg0	0
MethodDeclaration Modifier ReferenceType accessibleObject ReturnStatement protected AccessibleObject MemberReference method	0
MethodDeclaration Modifier ReferenceType getIOError ReturnStatement public RubyClass MemberReference ioError	0
MethodDeclaration Modifier BasicType isFastSwitchableSingleCharSymbol FormalParameter ReturnStatement static public boolean ReferenceType sym BinaryOperation IRubyObject && BinaryOperation BinaryOperation instanceof MemberReference ReferenceType == Cast Literal sym RubySymbol ReferenceType MemberReference 1 RubySymbol sym	0
MethodDeclaration Modifier BasicType read FormalParameter IOException LocalVariableDeclaration LocalVariableDeclaration IfStatement ReturnStatement public int BasicType b ReferenceType VariableDeclarator BasicType VariableDeclarator MethodInvocation BlockStatement MemberReference byte IRubyObject readValue MethodInvocation int returnValue Literal ! readValue isNil LocalVariableDeclaration StatementExpression StatementExpression returnValue readAdapter MethodInvocation MemberReference MemberReference MethodInvocation call - 1 ReferenceType VariableDeclarator MethodInvocation Assignment io MethodInvocation getRuntime io io io MethodInvocation getRuntime ByteList str Cast System MemberReference MemberReference MemberReference Literal MemberReference arraycopy MemberReference MemberReference = getCurrentContext MemberReference newFixnum ReferenceType MemberReference str bytes str begin b 0 str realSize returnValue str realSize b length RubyString readValue	1
MethodDeclaration Modifier BasicType wrappedRead IOException LocalVariableDeclaration IfStatement StatementExpression ReturnStatement private int BasicType VariableDeclarator BinaryOperation BlockStatement MethodInvocation MemberReference int c MethodInvocation == MemberReference Literal StatementExpression MemberReference captureFeature c in read c '\r' Assignment c MemberReference MethodInvocation = c MemberReference carriageReturn c	0
MethodDeclaration Modifier ReferenceType cloneScope ReturnStatement public DynamicScope ClassCreator ReferenceType MemberReference MemberReference DummyDynamicScope staticScope parent	0
MethodDeclaration Modifier Annotation ReferenceType ctime ReturnStatement public JRubyMethod ElementValuePair IRubyObject MethodInvocation name Literal MethodInvocation getRuntime "ctime" BinaryOperation newTime * MethodInvocation Literal stat ctime 1000	0
MethodDeclaration Modifier testRequireJavaClassFile TryStatement public StatementExpression StatementExpression CatchClause MethodInvocation MethodInvocation CatchClauseParameter loadService Literal Literal load Literal fail Exception e "build/classes/test/org/jruby/test/NormalJavaClass.class" false "Exception should have been raised requiring a non-script .class file"	1
MethodDeclaration Modifier ReferenceType getInstrs ReturnStatement public List TypeArgument MemberReference ReferenceType _instrs IR_Instr	0
MethodDeclaration Modifier ReferenceType getClassNameFromFrame FormalParameter LocalVariableDeclaration IfStatement ReturnStatement private String ReferenceType current ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement MemberReference Frame String klazzName == MethodInvocation Literal StatementExpression StatementExpression klazzName current getKlazz null Assignment Assignment MemberReference MemberReference = MemberReference MethodInvocation = klazzName UNKNOWN_NAME klazzName current MethodInvocation getKlazz getName	0
MethodDeclaration Modifier ReferenceType getNodeType ReturnStatement public NodeType MemberReference NodeType OPTARGNODE	0
MethodDeclaration Modifier Annotation ReferenceType assign FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement StatementExpression ReturnStatement public Override IRubyObject ReferenceType runtime ReferenceType context ReferenceType self ReferenceType value ReferenceType block BasicType checkArity ReferenceType VariableDeclarator BinaryOperation BlockStatement IfStatement Cast MethodInvocation Ruby ThreadContext IRubyObject IRubyObject Block boolean IRubyObject module == MemberReference Literal StatementExpression IfStatement BinaryOperation BlockStatement BlockStatement ReferenceType MemberReference runtime getNil constNode null Assignment BinaryOperation BlockStatement instanceof MemberReference ReferenceType LocalVariableDeclaration IfStatement StatementExpression RubyModule module MemberReference MethodInvocation = == MemberReference Literal ThrowStatement constNode Colon2Node ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement Assignment module context MethodInvocation MethodInvocation getCurrentScope module null MethodInvocation Node leftNode Cast == MemberReference Literal StatementExpression StatementExpression MemberReference MethodInvocation = getStaticScope getModule runtime Literal newTypeError ReferenceType MemberReference leftNode null Assignment Assignment module runtime getObject "no class/module to define constant" Colon2Node constNode MemberReference MethodInvocation = MemberReference MethodInvocation = module runtime getNil module leftNode MemberReference MemberReference MemberReference MemberReference interpret runtime context self block	1
MethodDeclaration Modifier BasicType await FormalParameter FormalParameter InterruptedException SynchronizedStatement final public boolean Modifier BasicType timeout ReferenceType unit MemberReference IfStatement IfStatement ReturnStatement final long TimeUnit monitor MemberReference BlockStatement MemberReference BlockStatement MemberReference ! woken StatementExpression interrupted ThrowStatement ready MethodInvocation ClassCreator monitor MethodInvocation wait ReferenceType Literal TimeUnit.MILLISECONDS MemberReference MemberReference convert InterruptedException "Interrupted" timeout unit	1
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 ReferenceType block MethodInvocation ThreadContext IRubyObject RubyModule String IRubyObject IRubyObject IRubyObject Block MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference call context self clazz name arg0 arg1 arg2	0
MethodDeclaration Modifier BasicType isSamplingEnabled ReturnStatement public boolean MethodInvocation ruby MethodInvocation MethodInvocation get getInstanceConfig isSamplingEnabled	0
MethodDeclaration Modifier visitLabel FormalParameter StatementExpression public ReferenceType arg0 MethodInvocation Label MethodInvocation getMethodVisitor MemberReference visitLabel arg0	0
MethodDeclaration Modifier ReferenceType getNodeType ReturnStatement public NodeType MemberReference NodeType REGEXPNODE	0
MethodDeclaration Modifier call FormalParameter StatementExpression public ReferenceType context MethodInvocation BodyCompiler MethodInvocation MemberReference Literal compile opElementAsgnNode getValueNode context true	0
MethodDeclaration Modifier ReferenceType getSource FormalParameter FormalParameter FormalParameter FormalParameter IfStatement ReturnStatement static public LexerSource ReferenceType file ReferenceType content ReferenceType list ReferenceType configuration BinaryOperation BlockStatement ClassCreator String ByteList List TypeArgument ParserConfiguration != MemberReference Literal ReturnStatement ReferenceType MemberReference MemberReference MemberReference MethodInvocation MethodInvocation ReferenceType list null ClassCreator ByteListLexerSource file content list configuration getLineNumber configuration hasExtraPositionInformation String ReferenceType MemberReference MemberReference MemberReference MethodInvocation MethodInvocation CapturingByteListLexerSource file content list configuration getLineNumber configuration hasExtraPositionInformation	0
MethodDeclaration Modifier Annotation ReferenceType get FormalParameter FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType ptr ReferenceType name MethodInvocation name Literal required Literal ThreadContext IRubyObject IRubyObject MethodInvocation MethodInvocation MemberReference getMember "get" 2 MethodInvocation MemberReference MemberReference get context getRuntime name context getRuntime nullStorage ptr	0
MethodDeclaration Modifier ReferenceType case243_line944 FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment Assignment MemberReference Object Object int MemberReference MethodInvocation = MemberReference MethodInvocation = yyVal yyVal support MethodInvocation MethodInvocation Cast arg_concat yyVal support Cast Cast arg_blk_pass Cast getPosition support MethodInvocation ClassCreator newArrayNode ReferenceType MemberReference ReferenceType MemberReference ReferenceType MemberReference ReferenceType MemberReference Cast getPosition ReferenceType MethodInvocation Cast Node ArraySelector yyVals Node yyVal BlockPassNode ArraySelector yyVals ListNode ArraySelector yyVals ReferenceType MemberReference HashNode getPosition ReferenceType MemberReference BinaryOperation BinaryOperation BinaryOperation ListNode ArraySelector yyVals ListNode ArraySelector yyVals + Literal MemberReference + Literal MemberReference + Literal MemberReference BinaryOperation BinaryOperation - 1 yyTop 0 yyTop - 4 yyTop + Literal MemberReference + Literal MemberReference - 4 yyTop - 4 yyTop	1
MethodDeclaration Modifier ReferenceType each_lineCommon19 FormalParameter FormalParameter ReturnStatement private IRubyObject ReferenceType context ReferenceType block MethodInvocation ThreadContext Block MemberReference MethodInvocation MemberReference each_lineCommon19 context context MethodInvocation MethodInvocation getRuntime block getGlobalVariables Literal get "$/"	1
MethodDeclaration Modifier visitMultiANewArrayInsn FormalParameter FormalParameter StatementExpression public ReferenceType arg0 BasicType arg1 MethodInvocation String int MethodInvocation getMethodVisitor MemberReference MemberReference visitMultiANewArrayInsn arg0 arg1	0
MethodDeclaration Modifier BasicType fileno SwitchStatement public int This SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase IN ReturnStatement OUT ReturnStatement ERR ReturnStatement ThrowStatement Literal Literal Literal ClassCreator 0 1 2 ReferenceType RuntimeException	1
MethodDeclaration Modifier BasicType select FormalParameter FormalParameter FormalParameter IfStatement public boolean ReferenceType channel ReferenceType io BasicType ops BinaryOperation BlockStatement BlockStatement Channel RubyIO int instanceof MemberReference ReferenceType LocalVariableDeclaration SynchronizedStatement ReturnStatement channel SelectableChannel ReferenceType VariableDeclarator MethodInvocation LocalVariableDeclaration LocalVariableDeclaration TryStatement Literal SelectableChannel selectable Cast selectable blockingLock BasicType VariableDeclarator ReferenceType VariableDeclarator StatementExpression IfStatement StatementExpression StatementExpression StatementExpression LocalVariableDeclaration StatementExpression IfStatement ReturnStatement CatchClause TryStatement true ReferenceType MemberReference boolean oldBlocking MethodInvocation SelectionKey key Literal MethodInvocation BinaryOperation StatementExpression Assignment Assignment MethodInvocation BasicType VariableDeclarator MethodInvocation BinaryOperation BlockStatement Literal CatchClauseParameter ThrowStatement IfStatement StatementExpression StatementExpression IfStatement StatementExpression CatchClause SelectableChannel channel selectable isBlocking null selectable Literal configureBlocking != MemberReference Literal MethodInvocation MemberReference MethodInvocation = MemberReference MethodInvocation = beforeBlockingCall int result MethodInvocation pollThreadEvents == MemberReference Literal LocalVariableDeclaration IfStatement false IOException ioe MethodInvocation BinaryOperation BlockStatement MethodInvocation Assignment BinaryOperation StatementExpression MethodInvocation CatchClauseParameter false io null io This addBlockingThread currentSelector MemberReference getSelector key selectable MemberReference MemberReference register currentSelector select result 1 ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation getRuntime != MemberReference Literal StatementExpression StatementExpression afterBlockingCall MemberReference Literal = != MemberReference Literal MethodInvocation selectable MemberReference configureBlocking IOException ioe selectable currentSelector ops Set TypeArgument keySet MethodInvocation == MethodInvocation MemberReference ReturnStatement BinaryOperation newRuntimeError key null MethodInvocation MethodInvocation currentSelector null io null io This removeBlockingThread oldBlocking ReferenceType currentSelector selectedKeys keySet MethodInvocation iterator key Literal + Literal MemberReference key cancel currentSelector selectNow SelectionKey next true "Error with selector: " ioe	1
MethodDeclaration Modifier BasicType ungetc FormalParameter IfStatement StatementExpression StatementExpression ReturnStatement public int BasicType c BinaryOperation BlockStatement Assignment Assignment MemberReference int == MemberReference Literal ReturnStatement MemberReference Literal = MemberReference MemberReference = c c - 1 Literal eof false ungotc c - 1	0
MethodDeclaration Modifier BasicType isFirst1 ReturnStatement static public boolean Literal false	0
MethodDeclaration Modifier markDead StatementExpression public Assignment MemberReference Literal = _isDead true	0
MethodDeclaration Modifier checkArgCount FormalParameter FormalParameter StatementExpression public ReferenceType runtime BasicType argsLength MethodInvocation Ruby int Arity MemberReference MemberReference MemberReference MemberReference checkArgumentCount runtime argsLength requiredArgsCount maxArgsCount	0
MethodDeclaration Modifier ReferenceType case500_line1918 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference ClassCreator = yyVal yyVal ReferenceType Cast MethodInvocation UnnamedRestArgNode ReferenceType MemberReference support MethodInvocation getCurrentScope Token ArraySelector yyVals Literal addVariable BinaryOperation "*" + Literal MemberReference 0 yyTop	1
MethodDeclaration Modifier BasicType getPriority LocalVariableDeclaration IfStatement ReturnStatement public int ReferenceType VariableDeclarator BinaryOperation ReturnStatement Literal Thread thread MethodInvocation != MemberReference Literal MethodInvocation 0 nativeThread get thread null thread getPriority	1
MethodDeclaration Modifier arg_ambiguous IfStatement private MethodInvocation StatementExpression warnings isVerbose MethodInvocation warnings MemberReference MethodInvocation Literal warning ID AMBIGUOUS_ARGUMENT getPosition "Ambiguous first argument; make sure."	1
MethodDeclaration Modifier ReferenceType newFloat FormalParameter FormalParameter ReturnStatement static public RubyFloat ReferenceType runtime BasicType value ClassCreator Ruby double ReferenceType MemberReference MemberReference RubyFloat runtime value	0
MethodDeclaration Modifier removeBuiltinLibrary FormalParameter StatementExpression public ReferenceType name MethodInvocation String builtinLibraries MemberReference remove name	0
MethodDeclaration Modifier ReferenceType getOut ReturnStatement public PrintStream MemberReference out	0
MethodDeclaration Modifier ReferenceType case284_line1105 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference Cast = yyVal yyVal ReferenceType MemberReference LambdaNode ArraySelector yyVals BinaryOperation + Literal MemberReference 0 yyTop	1
MethodDeclaration Modifier Annotation exec FormalParameter FormalParameter FormalParameter FormalParameter BSFException TryStatement public Override ReferenceType file BasicType line BasicType col ReferenceType expr StatementExpression CatchClause String int int Object MethodInvocation CatchClauseParameter ThrowStatement evaler MethodInvocation MemberReference MethodInvocation MemberReference MemberReference parse Exception excptn ClassCreator run runtime expr toString file line ReferenceType MemberReference Literal MemberReference BSFException BSFException REASON_EXECUTION_ERROR "Exception" excptn	0
MethodDeclaration Modifier compileHash FormalParameter FormalParameter FormalParameter StatementExpression public ReferenceType node ReferenceType context BasicType expr MethodInvocation Node BodyCompiler boolean Cast MemberReference MemberReference compileHashCommon ReferenceType MemberReference context expr HashNode node	0
MethodDeclaration Modifier ReferenceType getMarshal ReturnStatement final public ObjectMarshal MemberReference marshal	0
MethodDeclaration Modifier ReferenceType run ReturnStatement public IRubyObject MethodInvocation runtime MemberReference runInterpreter node	0
MethodDeclaration Modifier ReferenceType buildFromMain FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement ReturnStatement static public IR_Scope ReferenceType args ReferenceType VariableDeclarator ReferenceType VariableDeclarator MemberReference BlockStatement BlockStatement ClassCreator String Ruby ruby MethodInvocation Node node Literal ArraySelector MethodInvocation args StatementExpression TryStatement MethodInvocation ReferenceType Ruby getGlobalRuntime null Literal Literal equals Assignment LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression CatchClause MemberReference buildRoot IR_Builder 0 "-e" MemberReference MethodInvocation = ReferenceType VariableDeclarator ReferenceType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator MethodInvocation Assignment CatchClauseParameter ThrowStatement node node ruby MethodInvocation Literal Literal Literal Literal parse File file ClassCreator FileInputStream fis ClassCreator long size MethodInvocation byte bytes ArrayCreator fis MemberReference read MemberReference MethodInvocation = IOException ioe ClassCreator ByteList MemberReference create "-e" null 0 false ReferenceType MemberReference ReferenceType MemberReference file length BasicType Cast bytes node ruby ClassCreator MemberReference Literal Literal Literal parse ReferenceType MemberReference ArraySelector args File ArraySelector args FileInputStream file byte BasicType MemberReference ReferenceType MemberReference ArraySelector args null 0 false RuntimeException ioe Literal Literal int size ByteList bytes Literal 1 0 0	1
MethodDeclaration Modifier Annotation ReferenceType childNodes ThrowStatement public Override List TypeArgument ClassCreator ReferenceType ReferenceType Literal Node UnsupportedOperationException "Not supported yet."	0
MethodDeclaration Modifier Annotation ReferenceType initialize FormalParameter FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType object ReferenceType method MethodInvocation name Literal visibility MemberReference ThreadContext IRubyObject IRubyObject MemberReference MemberReference MemberReference initialize "initialize" Visibility PRIVATE object method NULL_ARRAY	0
MethodDeclaration Modifier ReferenceType populateImplClass FormalParameter FormalParameter FormalParameter LocalVariableDeclaration TryStatement LocalVariableDeclaration TryStatement LocalVariableDeclaration StatementExpression ReturnStatement static public RubyClass ReferenceType ruby ReferenceType newClass ReferenceType simpleToAll ReferenceType VariableDeclarator StatementExpression CatchClause CatchClause CatchClause CatchClause Modifier ReferenceType VariableDeclarator ForStatement CatchClause CatchClause ReferenceType VariableDeclarator MethodInvocation MemberReference Ruby Class Map TypeArgument TypeArgument RubyClass rubyCls Cast MethodInvocation CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement final Map TypeArgument TypeArgument allFields ClassCreator EnhancedForControl BlockStatement CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement DynamicMethod method_added ClassCreator rubyCls MethodInvocation getSingletonClass rubyCls ReferenceType ReferenceType ReferenceType MethodInvocation newClass MethodInvocation Literal ArrayCreator getMethod IllegalAccessException ex MethodInvocation IllegalArgumentException ex MethodInvocation InvocationTargetException ex MethodInvocation NoSuchMethodException ex MethodInvocation ReferenceType ReferenceType ReferenceType VariableDeclaration MethodInvocation LocalVariableDeclaration LocalVariableDeclaration StatementExpression ForStatement IllegalArgumentException ex MethodInvocation NoSuchFieldException ex MethodInvocation ReferenceType MethodInvocation MemberReference MethodDeclaration Literal MemberReference addMethod String List TypeArgument RubyClass MemberReference MemberReference getMirrorForClass Literal ArrayCreator invoke "__setup__" ReferenceType ArrayInitializer MemberReference MemberReference BinaryOperation error MemberReference MemberReference BinaryOperation error MemberReference MemberReference BinaryOperation error MemberReference MemberReference BinaryOperation error String Field HashMap TypeArgument TypeArgument ReferenceType VariableDeclarator simpleToAll entrySet ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation EnhancedForControl BlockStatement MemberReference MemberReference BinaryOperation error MemberReference MemberReference BinaryOperation error JavaMethod rubyCls getSingletonClass Visibility PUBLIC Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement ReturnStatement "method_added" method_added ReferenceType ruby newClass null ReferenceType ArrayInitializer Class ClassReference ruby ex + Literal MemberReference ruby ex + Literal MemberReference ruby ex + Literal MemberReference ruby ex + Literal MemberReference ReferenceType ReferenceType Map ReferenceType entry String simpleName MethodInvocation Field simpleField MethodInvocation allFields MemberReference MemberReference put VariableDeclaration MethodInvocation LocalVariableDeclaration LocalVariableDeclaration StatementExpression ruby ex + Literal MemberReference ruby ex + Literal MemberReference public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType args ReferenceType block ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement MethodInvocation Method Object MemberReference ReferenceType "Could not setup class: " newClass "Could not setup class: " newClass "Could not setup class: " newClass "Could not setup class: " newClass String Field Entry TypeArgument TypeArgument entry getKey newClass MemberReference getField simpleName simpleField ReferenceType VariableDeclarator entry getValue ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation "Could not prepare method fields: " newClass "Could not prepare method fields: " newClass ThreadContext IRubyObject RubyModule String IRubyObject Block RubyClass selfClass Cast Ruby ruby MethodInvocation String methodName MemberReference Field field MethodInvocation == MemberReference Literal TryStatement context MethodInvocation getRuntime rubyCls RubyClass ReferenceType ReferenceType simpleName Method method String complexName BinaryOperation String fieldName MethodInvocation allFields MemberReference MethodInvocation put ReferenceType MemberReference selfClass getClassRuntime ArraySelector MethodInvocation args allFields MemberReference get field null StatementExpression CatchClause CatchClause getNil String List TypeArgument + MemberReference MethodInvocation MemberReference MethodInvocation mangleMethodFieldName complexName newClass MemberReference getField RubyClass self Literal asJavaString methodName MethodInvocation CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement ReferenceType simpleName MethodInvocation prettyParams simpleName method getParameterTypes fieldName 0 field Literal MethodInvocation set IllegalAccessException iae MethodInvocation IllegalArgumentException iae MethodInvocation Method method getParameterTypes null selfClass MemberReference searchMethod MemberReference MemberReference BinaryOperation error MemberReference MemberReference BinaryOperation error methodName ruby iae + BinaryOperation MemberReference ruby iae + BinaryOperation MemberReference + BinaryOperation Literal methodName + BinaryOperation Literal methodName + Literal MemberReference "." + Literal MemberReference "." "Could not set new method into field: " selfClass "Could not set new method into field: " selfClass	1
MethodDeclaration Modifier Annotation ReferenceType values_at FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType args MethodInvocation name Literal rest Literal IRubyObject MemberReference MemberReference values_at "values_at" true realLength args	1
MethodDeclaration Modifier ReferenceType constructRubyArray FormalParameter FormalParameter ReturnStatement static public RubyArray ReferenceType runtime ReferenceType one MethodInvocation Ruby IRubyObject RubyArray MemberReference MemberReference newArrayLight runtime one	0
MethodDeclaration Modifier ReferenceType params FormalParameter ReturnStatement static public Class ReferenceType classes  MemberReference Class classes	0
MethodDeclaration Modifier Annotation ReferenceType frac IfStatement IfStatement IfStatement LocalVariableDeclaration ReturnStatement public JRubyMethod ElementValuePair IRubyObject MemberReference BlockStatement MethodInvocation BlockStatement BinaryOperation BlockStatement ReferenceType VariableDeclarator ClassCreator name Literal isNaN ReturnStatement isInfinity ReturnStatement && BinaryOperation BinaryOperation ReturnStatement BigDecimal val MethodInvocation ReferenceType MethodInvocation MemberReference "frac" MethodInvocation MethodInvocation > MethodInvocation Literal < MethodInvocation MethodInvocation ClassCreator value Cast subtract RubyBigDecimal getRuntime val MethodInvocation newNaN MethodInvocation MemberReference newInfinity value scale 0 value precision value scale ReferenceType MethodInvocation MemberReference ReferenceType MethodInvocation getRuntime getRuntime infinitySign RubyBigDecimal getRuntime value RubyBigDecimal fix	0
MethodDeclaration Modifier ReferenceType tryProxyInvocation FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement private IRubyObject ReferenceType javaInvokee ReferenceType args  ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement Object Object JavaProxyClass jpc Cast JavaProxyMethod jpm && BinaryOperation MethodInvocation ReturnStatement ReturnStatement ReferenceType MemberReference != Assignment Literal jpm hasSuperImplementation MethodInvocation MethodInvocation InternalJavaProxy javaInvokee MemberReference MethodInvocation = null MethodInvocation MemberReference MemberReference invokeDirectSuperWithExceptionHandling MemberReference MemberReference MemberReference invokeDirectWithExceptionHandling jpm jpc MethodInvocation MemberReference getMethod jpm getSuperMethod javaInvokee args method javaInvokee args method getName parameterTypes	1
MethodDeclaration Modifier unboxAndCast FormalParameter FormalParameter IfStatement static public ReferenceType m ReferenceType paramClass MethodInvocation BlockStatement IfStatement SkinnyMethodAdapter Class paramClass isPrimitive LocalVariableDeclaration StatementExpression StatementExpression BinaryOperation BlockStatement ReferenceType VariableDeclarator MethodInvocation MethodInvocation != MemberReference ClassReference StatementExpression Class boxType MethodInvocation m MethodInvocation checkcast m MethodInvocation BinaryOperation MethodInvocation invokevirtual paramClass ReferenceType MethodInvocation MemberReference getBoxType MemberReference p MemberReference p + MethodInvocation Literal MemberReference sig Object m MethodInvocation checkcast paramClass boxType boxType paramClass toString "Value" paramClass MemberReference p paramClass	0
MethodDeclaration Modifier ReferenceType convertToFloat ReturnStatement public RubyFloat Cast ReferenceType MethodInvocation RubyFloat TypeConverter This MethodInvocation Literal convertToType MethodInvocation getRuntime "to_f" getFloat	0
MethodDeclaration Modifier Annotation ReferenceType op_cmp FormalParameter FormalParameter IfStatement ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context ReferenceType other BinaryOperation BlockStatement IfStatement MethodInvocation name Literal ThreadContext IRubyObject || BinaryOperation BinaryOperation IfStatement ReturnStatement BinaryOperation BlockStatement IfStatement MemberReference Literal MemberReference coerceBin "<=>" instanceof MemberReference ReferenceType instanceof MemberReference ReferenceType BinaryOperation ReturnStatement MethodInvocation instanceof MemberReference ReferenceType ReturnStatement BinaryOperation BlockStatement context "<=>" other other RubyFixnum other RubyBignum && BinaryOperation BinaryOperation MethodInvocation MemberReference This MethodInvocation f_cmp other RubyFloat MethodInvocation instanceof MemberReference ReferenceType LocalVariableDeclaration LocalVariableDeclaration IfStatement ReturnStatement instanceof MemberReference ReferenceType == Cast Literal MemberReference MemberReference MemberReference f_cmp context RubyRational MemberReference MethodInvocation MemberReference newRationalBang MemberReference MethodInvocation MemberReference f_cmp other RubyRational ReferenceType VariableDeclarator Modifier ReferenceType VariableDeclarator VariableDeclarator BinaryOperation BlockStatement BlockStatement MethodInvocation den RubyFixnum ReferenceType MemberReference 1 context num other context getMetaClass other context MemberReference This f_to_f other RubyRational otherRational Cast final IRubyObject num1 num2 && BinaryOperation BinaryOperation StatementExpression StatementExpression StatementExpression StatementExpression MemberReference MethodInvocation MethodInvocation f_cmp RubyFixnum den context ReferenceType MemberReference && BinaryOperation BinaryOperation instanceof MemberReference ReferenceType Assignment Assignment Assignment Assignment context MemberReference MemberReference MemberReference f_sub RubyFixnum MethodInvocation zero RubyRational other && BinaryOperation BinaryOperation instanceof MemberReference ReferenceType otherRational den RubyFixnum MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation = context num1 num2 context getRuntime instanceof MemberReference ReferenceType instanceof MemberReference ReferenceType otherRational num RubyFixnum num1 MemberReference Cast Cast f_imul num2 MemberReference Cast Cast f_imul num1 MemberReference MemberReference MemberReference f_mul num2 MemberReference MemberReference MemberReference f_mul num RubyFixnum den RubyFixnum context ReferenceType MemberReference ReferenceType MemberReference context ReferenceType MemberReference ReferenceType MemberReference context num otherRational den context otherRational num den RubyFixnum num RubyFixnum otherRational den RubyFixnum otherRational num RubyFixnum den	1
MethodDeclaration Modifier traceReturn FormalParameter FormalParameter FormalParameter StatementExpression private ReferenceType context ReferenceType runtime ReferenceType name MethodInvocation ThreadContext Ruby String runtime MemberReference MemberReference MethodInvocation MethodInvocation MemberReference MethodInvocation callEventHooks context RubyEvent RETURN context getFile context getLine name getImplementationClass	0
MethodDeclaration Modifier ReferenceType f_addsub FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression ReturnStatement private IRubyObject ReferenceType context ReferenceType anum ReferenceType aden ReferenceType bnum ReferenceType bden BasicType plus ReferenceType VariableDeclarator ReferenceType VariableDeclarator VariableDeclarator VariableDeclarator VariableDeclarator VariableDeclarator BinaryOperation BlockStatement BlockStatement ReferenceType VariableDeclarator Assignment Assignment Assignment Assignment Assignment MethodInvocation ThreadContext IRubyObject IRubyObject IRubyObject IRubyObject boolean Ruby runtime MethodInvocation IRubyObject num den g a b && BinaryOperation BinaryOperation LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression IRubyObject c TernaryExpression MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation = RubyRational MemberReference MethodInvocation MemberReference MemberReference newRationalNoReduce context getRuntime && BinaryOperation BinaryOperation instanceof MemberReference ReferenceType BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator Assignment Assignment Assignment Assignment Assignment Assignment MemberReference MethodInvocation MethodInvocation b MemberReference MemberReference MemberReference f_idiv g MemberReference MemberReference MemberReference f_gcd num MemberReference MemberReference MemberReference f_idiv a MemberReference MemberReference MemberReference f_idiv den MemberReference MemberReference MemberReference f_mul context getMetaClass num den && BinaryOperation BinaryOperation instanceof MemberReference ReferenceType bden RubyFixnum long an Cast long ad Cast long bn Cast long bd Cast long ig MethodInvocation MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation = plus MemberReference MemberReference MemberReference f_add MemberReference MemberReference MemberReference f_sub context aden g context c g context c g context bden g context a b instanceof MemberReference ReferenceType instanceof MemberReference ReferenceType bnum RubyFixnum ReferenceType MemberReference ReferenceType MemberReference ReferenceType MemberReference ReferenceType MemberReference MemberReference MemberReference i_gcd g RubyFixnum MemberReference MemberReference newFixnum a MemberReference MemberReference BinaryOperation f_imul b MemberReference MemberReference BinaryOperation f_imul g MemberReference MemberReference MemberReference f_gcd a MemberReference MemberReference MethodInvocation f_mul b MemberReference MemberReference MethodInvocation f_mul context a b context a b anum RubyFixnum aden RubyFixnum RubyFixnum anum RubyFixnum aden RubyFixnum bnum RubyFixnum bden ad bd runtime ig context an / MemberReference MemberReference context bn / MemberReference MemberReference context aden bden context anum MemberReference MemberReference MemberReference f_idiv context bnum MemberReference MemberReference MemberReference f_idiv bd ig ad ig context bden g context aden g	1
MethodDeclaration Modifier ReferenceType getNodeType ReturnStatement public NodeType MemberReference NodeType DASGNNODE	0
MethodDeclaration Modifier BasicType uint32Value FormalParameter LocalVariableDeclaration IfStatement ReturnStatement final static public long ReferenceType parameter Modifier BasicType VariableDeclarator BinaryOperation BlockStatement MemberReference IRubyObject final long value MethodInvocation || BinaryOperation BinaryOperation ThrowStatement value MemberReference longValue < MemberReference Literal > MemberReference Literal MethodInvocation parameter value 0 value 0xffffffffL parameter MethodInvocation getRuntime BinaryOperation newRangeError + BinaryOperation Literal + Literal MemberReference " outside unsigned integer range" "Value " value	1
MethodDeclaration Modifier growIfNeeded FormalParameter FormalParameter IfStatement protected BasicType size ReferenceType message BinaryOperation BlockStatement int String != MethodInvocation MemberReference ThrowStatement staticScope getNumberOfVariables size ClassCreator ReferenceType MemberReference RuntimeException message	1
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration TryStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 ReferenceType arg3 ReferenceType arg4 ReferenceType arg5 ReferenceType arg6 ReferenceType arg7 ReferenceType block ReferenceType VariableDeclarator StatementExpression StatementExpression StatementExpression ReturnStatement CatchClause CatchClause StatementExpression ThreadContext IRubyObject RubyModule String IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject Block Ruby runtime MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation CatchClauseParameter ReturnStatement CatchClauseParameter ReturnStatement MethodInvocation context getRuntime MemberReference MemberReference MemberReference MemberReference MemberReference pre argsNode MemberReference Literal checkArgCount argsNode MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference prepare body MemberReference MemberReference MemberReference MemberReference interpret JumpException.ReturnJump rj MethodInvocation JumpException.RedoJump rj MethodInvocation MemberReference MemberReference MemberReference post context name self block runtime runtime 8 context runtime self arg0 arg1 arg2 arg3 arg4 arg5 arg6 arg7 block runtime context self block MemberReference MemberReference handleReturn MemberReference handleRedo runtime context name context rj runtime	0
MethodDeclaration Modifier ReferenceType accept FormalParameter ReturnStatement public Object ReferenceType iVisitor MethodInvocation NodeVisitor iVisitor This visitAliasNode	0
MethodDeclaration Modifier ReferenceType getNotImplementedError ReturnStatement public RubyClass MemberReference notImplementedError	0
MethodDeclaration Modifier Annotation ReferenceType set_orig_name FormalParameter StatementExpression ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType str Assignment MemberReference name Literal required Literal IRubyObject This MethodInvocation = str "orig_name=" 1 MemberReference str MethodInvocation convertToString orig_name toString	1
MethodDeclaration Modifier Annotation ReferenceType iconv FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType args ReferenceType unusedBlock MethodInvocation name Literal required Literal rest Literal meta Literal ThreadContext IRubyObject IRubyObject Block MemberReference MemberReference MemberReference Literal convertWithArgs "iconv" 2 true true context recv args "iconv"	0
MethodDeclaration Modifier match StatementExpression StatementExpression public MethodInvocation MethodInvocation loadThreadContext method MethodInvocation Literal MethodInvocation invokevirtual ClassReference p "op_match2" ClassReference MethodInvocation sig ReferenceType ReferenceType ClassReference params RubyRegexp IRubyObject ReferenceType ThreadContext	0
MethodDeclaration Modifier ReferenceType buildConstructors FormalParameter LocalVariableDeclaration ForStatement ReturnStatement private RubyArray ReferenceType constructors ReferenceType VariableDeclarator ForControl BlockStatement MemberReference Constructor TypeArgument RubyArray result MethodInvocation VariableDeclaration BinaryOperation MemberReference StatementExpression result ? MethodInvocation getRuntime BasicType VariableDeclarator < MemberReference MemberReference ++ i MethodInvocation MemberReference newArray int i Literal i constructors length result ClassCreator append constructors length 0 ReferenceType MethodInvocation MemberReference JavaConstructor getRuntime ArraySelector constructors MemberReference i	1
MethodDeclaration Modifier BasicType callWithInt FormalParameter ReturnStatement static public int BasicType arg MemberReference int arg	0
MethodDeclaration Modifier Annotation ReferenceType tr_bang FormalParameter FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType src ReferenceType repl MethodInvocation name Literal compat MemberReference ThreadContext IRubyObject IRubyObject MemberReference MemberReference MemberReference Literal trTrans "tr!" CompatVersion RUBY1_8 context src repl false	1
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name MethodInvocation ThreadContext IRubyObject RubyModule String MemberReference MemberReference MemberReference MemberReference MemberReference call context self clazz name Block NULL_BLOCK	0
MethodDeclaration Modifier Annotation ReferenceType op_aref19 FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType arg1 ReferenceType arg2 ReferenceType VariableDeclarator BinaryOperation ReturnStatement MethodInvocation name ElementArrayValue reads MemberReference writes MemberReference compat MemberReference ThreadContext IRubyObject IRubyObject Ruby runtime MethodInvocation instanceof MemberReference ReferenceType MethodInvocation MemberReference MethodInvocation MethodInvocation substr19 Literal Literal BACKREF BACKREF CompatVersion RUBY1_9 context getRuntime arg1 RubyRegexp MemberReference MemberReference Cast MemberReference subpat19 runtime RubyNumeric MemberReference num2int RubyNumeric MemberReference num2int "[]" "slice" runtime context ReferenceType MemberReference arg2 arg1 arg2 RubyRegexp arg1	1
MethodDeclaration Modifier Annotation ReferenceType getOptMethod FormalParameter LocalVariableDeclaration LocalVariableDeclaration SynchronizedStatement public Deprecated Callback ReferenceType method ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation LocalVariableDeclaration TryStatement String String mname BinaryOperation String mnamePath BinaryOperation runtime getJRubyClassLoader ReferenceType VariableDeclarator IfStatement LocalVariableDeclaration StatementExpression StatementExpression StatementExpression ReturnStatement CatchClause CatchClause + BinaryOperation Literal + BinaryOperation Literal Class c MethodInvocation BinaryOperation BlockStatement ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MemberReference CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement + BinaryOperation MemberReference "_opt" + BinaryOperation MemberReference "_opt" MemberReference tryClass == MemberReference Literal LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression InvocationCallback ic Cast ic MethodInvocation setArity ic MemberReference setArgumentTypes ic MemberReference setJavaName ic IllegalArgumentException e MemberReference Exception e ClassCreator + MethodInvocation Literal method + MemberReference Literal method mname c null ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation Assignment ReferenceType MethodInvocation Arity optional InvocationCallback OPTIONAL_ARGS method e ReferenceType MethodInvocation type getName "Callback$" typePath "Callback$" Class signature ArrayCreator Class ret MethodInvocation ClassWriter cw MethodInvocation MethodVisitor mv MethodInvocation mv MemberReference MemberReference visitVarInsn MemberReference ClassReference checkCast mv MemberReference Literal visitVarInsn mv MemberReference MemberReference MemberReference MethodInvocation visitMethodInsn mv MemberReference visitInsn mv Literal Literal visitMaxs MemberReference MethodInvocation = InvocationCallback c newInstance IllegalArgumentException e getMessage ReferenceType ArrayInitializer MemberReference MemberReference getReturnClass MemberReference createCtor MemberReference startCall ALOAD METHOD_ARGS_INDEX mv ReferenceType ALOAD 3 INVOKEVIRTUAL typePath method MemberReference MemberReference sig ARETURN 2 3 c MemberReference MemberReference MemberReference endCall Class ClassReference ClassReference method signature mnamePath cw IRubyObject ret signature cw mv mname ReferenceType ReferenceType IRubyObject Block	1
MethodDeclaration Modifier Annotation ReferenceType replace19 FormalParameter IfStatement StatementExpression ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair RubyString ReferenceType other BinaryOperation ReturnStatement MethodInvocation This name ElementArrayValue required Literal compat MemberReference IRubyObject == This MemberReference This MethodInvocation setCodeRange Literal Literal 1 CompatVersion RUBY1_9 other MethodInvocation MemberReference replaceCommon "replace" "initialize_copy" getCodeRange other	1
MethodDeclaration Modifier ReferenceType yieldSpecific FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType context ReferenceType arg0 ReferenceType binding ReferenceType type MethodInvocation ThreadContext IRubyObject Binding Block ReferenceType callback MemberReference ArrayCreator MemberReference call Type context ReferenceType ArrayInitializer Block NULL_BLOCK IRubyObject MemberReference arg0	0
MethodDeclaration Modifier Annotation ReferenceType methods19 FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType args MethodInvocation name Literal optional Literal compat MemberReference ThreadContext IRubyObject MemberReference MemberReference Literal methods "methods" 1 CompatVersion RUBY1_9 context args true	0
MethodDeclaration Modifier pushScope FormalParameter LocalVariableDeclaration LocalVariableDeclaration StatementExpression IfStatement public ReferenceType scope BasicType VariableDeclarator ReferenceType VariableDeclarator Assignment BinaryOperation BlockStatement DynamicScope int index MemberReference DynamicScope stack MemberReference MemberReference MemberReference = == BinaryOperation MemberReference StatementExpression ++ scopeIndex scopeStack ArraySelector stack scope + MemberReference Literal stack length MethodInvocation MemberReference index 1 expandScopesIfNecessary index	0
MethodDeclaration Modifier ReferenceType getSelector FormalParameter IOException LocalVariableDeclaration IfStatement SynchronizedStatement ReturnStatement private static IOSelector ReferenceType provider ReferenceType VariableDeclarator BinaryOperation BlockStatement MemberReference StatementExpression IfStatement MemberReference SelectorProvider IOSelector sel MethodInvocation != MemberReference Literal ReturnStatement selectors Assignment BinaryOperation BlockStatement sel selectors MemberReference get sel null MemberReference MemberReference MethodInvocation = == MemberReference Literal StatementExpression StatementExpression LocalVariableDeclaration StatementExpression StatementExpression provider sel sel selectors MemberReference get sel null Assignment MethodInvocation ReferenceType VariableDeclarator MethodInvocation MethodInvocation provider MemberReference ClassCreator = selectors MemberReference MemberReference put Thread t ClassCreator t Literal setDaemon t start sel ReferenceType MemberReference provider sel ReferenceType MemberReference true IOSelector provider Thread sel	1
MethodDeclaration Modifier ReferenceType arity ReturnStatement public Arity MemberReference arity	0
MethodDeclaration Modifier ReferenceType handleRetryJump FormalParameter FormalParameter ThrowStatement private IRubyObject ReferenceType runtime ReferenceType rj MethodInvocation Ruby JumpException ReferenceType runtime MemberReference Cast Literal newLocalJumpError RetryJump RubyLocalJumpError.Reason RETRY ReferenceType MethodInvocation "retry not supported outside rescue" IRubyObject rj getValue	0
MethodDeclaration Modifier ReferenceType newBignum FormalParameter FormalParameter ReturnStatement static public RubyBignum ReferenceType runtime BasicType value MethodInvocation Ruby double MemberReference ClassCreator newBignum runtime MethodInvocation ReferenceType MemberReference toBigInteger BigDecimal value	1
MethodDeclaration Modifier ReferenceType getValue ReturnStatement public IRubyObject MethodInvocation variable get	0
MethodDeclaration Modifier ReferenceType newEmptyString FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration StatementExpression ReturnStatement static public RubyString ReferenceType runtime ReferenceType metaClass ReferenceType enc ReferenceType VariableDeclarator ReferenceType VariableDeclarator Assignment MemberReference Ruby RubyClass Encoding EmptyByteListHolder holder MethodInvocation RubyString empty ClassCreator MemberReference MemberReference = empty MemberReference getEmptyByteList ReferenceType MemberReference MemberReference MemberReference MemberReference empty shareLevel SHARE_LEVEL_BYTELIST enc RubyString runtime metaClass holder bytes holder cr	0
MethodDeclaration Modifier call FormalParameter LocalVariableDeclaration StatementExpression IfStatement StatementExpression public ReferenceType context BasicType VariableDeclarator Assignment BinaryOperation BlockStatement BlockStatement Assignment BodyCompiler boolean oldIsAtRoot MemberReference MemberReference Literal = != MethodInvocation Literal StatementExpression StatementExpression MemberReference MemberReference = isAtRoot isAtRoot false sclassNode getBodyNode null MethodInvocation MethodInvocation isAtRoot oldIsAtRoot MethodInvocation MemberReference Literal compile context loadNil sclassNode getBodyNode context true	0
MethodDeclaration Modifier Annotation ReferenceType crc ReturnStatement public JRubyMethod ElementValuePair IRubyObject MethodInvocation name Literal RubyFixnum MethodInvocation zero "crc" getRuntime	0
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter IfStatement ReturnStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 ReferenceType arg3 ReferenceType arg4 ReferenceType block BinaryOperation BlockStatement MethodInvocation ThreadContext IRubyObject RubyModule String IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject Block >= MemberReference Literal ReturnStatement box.actualMethod MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference call box callCount 0 MethodInvocation context self clazz name arg0 arg1 arg2 arg3 arg4 block MethodInvocation MemberReference MemberReference tryJitReturnMethod MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference call context name context self clazz name arg0 arg1 arg2 arg3 arg4 block	0
MethodDeclaration warn FormalParameter FormalParameter StatementExpression ReferenceType id ReferenceType message MethodInvocation ID String runtime MethodInvocation getWarnings MemberReference MemberReference warn id message	0
MethodDeclaration Modifier ReferenceType createAbstractMemoryClass FormalParameter FormalParameter LocalVariableDeclaration StatementExpression StatementExpression ReturnStatement static public RubyClass ReferenceType runtime ReferenceType module ReferenceType VariableDeclarator MethodInvocation MethodInvocation MemberReference Ruby RubyModule RubyClass result MethodInvocation result ClassReference defineAnnotatedMethods result ClassReference defineAnnotatedConstants result module MemberReference MethodInvocation MemberReference defineClassUnder ReferenceType ReferenceType ABSTRACT_MEMORY_RUBY_CLASS runtime getObject ObjectAllocator NOT_ALLOCATABLE_ALLOCATOR AbstractMemory AbstractMemory	0
MethodDeclaration Modifier post FormalParameter FormalParameter FormalParameter StatementExpression protected ReferenceType runtime ReferenceType context ReferenceType name MethodInvocation Ruby ThreadContext String context postMethodFrameAndScope	0
MethodDeclaration Modifier Annotation Annotation ReferenceType rbClone ReturnStatement public JRubyMethod ElementValuePair Override RubyMethod MethodInvocation name Literal MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference newMethod "clone" implementationModule methodName originModule originName method receiver	0
MethodDeclaration Modifier Annotation ReferenceType getBlockMethod FormalParameter ReturnStatement public Deprecated Callback ReferenceType method ClassCreator String ReferenceType MemberReference MemberReference ArrayCreator Literal Literal MethodInvocation Literal ReflectionCallback type method ReferenceType ArrayInitializer false true Arity Literal fixed false Class ClassReference ClassReference 2 ReferenceType ReferenceType IRubyObject IRubyObject	1
MethodDeclaration Modifier ReferenceType accept FormalParameter ReturnStatement public Object ReferenceType iVisitor MethodInvocation NodeVisitor iVisitor This visitFloatNode	0
MethodDeclaration Modifier ReferenceType case24_line392 FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop MethodInvocation Cast Assignment MemberReference Object Object int support Cast checkExpression ReferenceType MemberReference MemberReference Cast = yyVal ReferenceType MemberReference MultipleAsgn19Node ArraySelector yyVals yyVal ReferenceType MemberReference Node ArraySelector yyVals BinaryOperation MultipleAsgn19Node ArraySelector yyVals BinaryOperation + Literal MemberReference BinaryOperation + Literal MemberReference - 2 yyTop + Literal MemberReference 0 yyTop - 2 yyTop	1
MethodDeclaration Modifier BasicType isWithinTrace ReturnStatement public boolean MemberReference isWithinTrace	0
MethodDeclaration Modifier ReferenceType defaultObjectUnmarshal IOException LocalVariableDeclaration LocalVariableDeclaration TryStatement AssertStatement LocalVariableDeclaration ReturnStatement private IRubyObject ReferenceType VariableDeclarator ReferenceType VariableDeclarator StatementExpression CatchClause BinaryOperation Literal ReferenceType VariableDeclarator MemberReference RubySymbol className Cast RubyClass type Literal Assignment CatchClauseParameter IfStatement ThrowStatement != MemberReference Literal "type shouldn't be null." IRubyObject result Cast result ReferenceType MethodInvocation null MemberReference MethodInvocation = RaiseException e MethodInvocation BlockStatement MemberReference type null ReferenceType MethodInvocation RubySymbol unmarshalObject type MemberReference MethodInvocation getClassFromPath runtime MethodInvocation Literal fastGetModule ThrowStatement e IRubyObject type This unmarshal runtime className toString MethodInvocation isInstance "NameError" MethodInvocation e getException runtime BinaryOperation newArgumentError + Literal MethodInvocation "undefined class/module " className asJavaString	1
MethodDeclaration setYielder FormalParameter StatementExpression ReferenceType yielderClass Assignment RubyClass This MemberReference = MemberReference yielderClass yielderClass	0
MethodDeclaration Modifier compileGetDefinition FormalParameter FormalParameter SwitchStatement public Modifier ReferenceType node ReferenceType context MethodInvocation SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase final Node BodyCompiler node getNodeType CLASSVARASGNNODE CLASSVARDECLNODE CONSTDECLNODE DASGNNODE GLOBALASGNNODE LOCALASGNNODE MULTIPLEASGNNODE OPASGNNODE OPELEMENTASGNNODE StatementExpression BreakStatement BACKREFNODE StatementExpression StatementExpression BreakStatement DVARNODE StatementExpression BreakStatement FALSENODE StatementExpression BreakStatement TRUENODE StatementExpression BreakStatement LOCALVARNODE StatementExpression BreakStatement MATCH2NODE MATCH3NODE StatementExpression BreakStatement NILNODE StatementExpression BreakStatement NTHREFNODE StatementExpression BreakStatement SELFNODE StatementExpression BreakStatement VCALLNODE StatementExpression StatementExpression BreakStatement YIELDNODE StatementExpression BreakStatement GLOBALVARNODE StatementExpression BreakStatement INSTVARNODE StatementExpression BreakStatement CONSTNODE StatementExpression BreakStatement FCALLNODE StatementExpression StatementExpression BreakStatement COLON3NODE COLON2NODE BlockStatement CALLNODE BlockStatement CLASSVARNODE BlockStatement BreakStatement ZSUPERNODE BlockStatement BreakStatement SUPERNODE BlockStatement ATTRASSIGNNODE BlockStatement StatementExpression StatementExpression StatementExpression MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression BreakStatement LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression BreakStatement LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression BreakStatement LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression BreakStatement MethodInvocation MethodInvocation MethodInvocation context Literal pushString context backref context ClassReference ClassCreator ClassCreator isInstanceOf context Literal pushString context Literal pushString context Literal pushString context Literal pushString context Literal pushString context Literal pushString context Cast ClassCreator ClassCreator isCaptured context Literal pushString context loadSelf context Cast ClassCreator ClassCreator isMethodBound context ClassCreator ClassCreator hasBlock context Cast ClassCreator ClassCreator isGlobalDefined context Cast ClassCreator ClassCreator isInstanceVariableDefined context Cast ClassCreator ClassCreator isConstantDefined context loadSelf context Cast ClassCreator ClassCreator isMethodBound Modifier ReferenceType VariableDeclarator Modifier ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation Modifier ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation ReferenceType VariableDeclarator Modifier ReferenceType VariableDeclarator Modifier ReferenceType VariableDeclarator Modifier ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation Modifier ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation context ClassCreator ClassReference ClassCreator ClassReference rescue context consumeCurrentValue context Literal pushString "assignment" ReferenceType ReferenceType MethodDeclaration ReferenceType MethodDeclaration "local-variable(in-block)" "false" "true" "local-variable" "method" "nil" ReferenceType MemberReference ReferenceType MethodDeclaration ReferenceType MethodDeclaration "self" ReferenceType MemberReference ReferenceType MethodDeclaration ReferenceType MethodDeclaration ReferenceType MethodDeclaration ReferenceType MethodDeclaration ReferenceType MemberReference ReferenceType MethodDeclaration ReferenceType MethodDeclaration ReferenceType MemberReference ReferenceType MethodDeclaration ReferenceType MethodDeclaration ReferenceType MemberReference ReferenceType MethodDeclaration ReferenceType MethodDeclaration ReferenceType MemberReference ReferenceType MethodDeclaration ReferenceType MethodDeclaration final Colon3Node iVisited Cast final String name MethodInvocation BranchCallback setup ClassCreator BranchCallback isConstant ClassCreator BranchCallback isMethod ClassCreator BranchCallback none ClassCreator context MemberReference MemberReference MemberReference MemberReference MemberReference isConstantBranch final CallNode iVisited Cast Object isnull MethodInvocation Object ending MethodInvocation MethodInvocation MemberReference compileGetDefinition context MemberReference ifNull context ClassCreator ClassReference ClassCreator ClassReference rescue context MemberReference go context MemberReference setEnding context pushNull context MemberReference setEnding ClassVarNode iVisited Cast final Object ending MethodInvocation final Object failure MethodInvocation final Object singleton MethodInvocation Object second MethodInvocation Object third MethodInvocation context loadCurrentModule context duplicateCurrentValue context MemberReference ifNotNull context consumeCurrentValue context loadSelf context metaclass context duplicateCurrentValue context MethodInvocation ClassCreator ClassCreator isClassVarDefined context MemberReference setEnding context duplicateCurrentValue context MethodInvocation ClassCreator ClassCreator isClassVarDefined context MemberReference setEnding context duplicateCurrentValue context MemberReference ifSingleton context consumeCurrentValue context MemberReference go context MemberReference setEnding context attached context MethodInvocation MemberReference notIsModuleAndClassVarDefined context Literal pushString context MemberReference go context MemberReference setEnding context pushNull context MemberReference setEnding Object fail MethodInvocation Object fail2 MethodInvocation Object fail_easy MethodInvocation Object ending MethodInvocation context getFrameName context duplicateCurrentValue context MemberReference ifNull context getFrameKlazz context duplicateCurrentValue context MemberReference ifNull context superClass context MemberReference ifNotSuperMethodBound context Literal pushString context MemberReference go context MemberReference setEnding context consumeCurrentValue context MemberReference setEnding context consumeCurrentValue context MemberReference setEnding context pushNull context MemberReference setEnding Object fail MethodInvocation Object fail2 MethodInvocation Object fail_easy MethodInvocation Object ending MethodInvocation context getFrameName context duplicateCurrentValue context MemberReference ifNull context getFrameKlazz context duplicateCurrentValue context MemberReference ifNull context superClass context MemberReference ifNotSuperMethodBound Cast MemberReference Literal compileGetArgumentDefinition context MemberReference go context MemberReference setEnding context consumeCurrentValue context MemberReference setEnding context consumeCurrentValue context MemberReference setEnding context pushNull context MemberReference setEnding final AttrAssignNode iVisited Cast Object isnull MethodInvocation Object ending MethodInvocation MethodInvocation MemberReference compileGetDefinition context MemberReference ifNull context ClassCreator ClassReference ClassCreator ClassReference rescue context MemberReference go context MemberReference setEnding context pushNull context MemberReference setEnding ReferenceType MethodDeclaration ReferenceType ReferenceType MethodDeclaration ReferenceType "expression" RubyMatchData BranchCallback Modifier branch FormalParameter StatementExpression BranchCallback Modifier branch FormalParameter StatementExpression NthRefNode node BranchCallback Modifier branch FormalParameter StatementExpression BranchCallback Modifier branch FormalParameter StatementExpression VCallNode node BranchCallback Modifier branch FormalParameter StatementExpression BranchCallback Modifier branch FormalParameter StatementExpression BranchCallback Modifier branch FormalParameter StatementExpression BranchCallback Modifier branch FormalParameter StatementExpression GlobalVarNode node BranchCallback Modifier branch FormalParameter StatementExpression BranchCallback Modifier branch FormalParameter StatementExpression InstVarNode node BranchCallback Modifier branch FormalParameter StatementExpression BranchCallback Modifier branch FormalParameter StatementExpression ConstNode node BranchCallback Modifier branch FormalParameter StatementExpression BranchCallback Modifier branch FormalParameter StatementExpression FCallNode node BranchCallback Modifier branch FormalParameter StatementExpression BranchCallback Modifier branch FormalParameter StatementExpression ReferenceType MemberReference iVisited getName ReferenceType MethodDeclaration ReferenceType MethodDeclaration ReferenceType MethodDeclaration ReferenceType MethodDeclaration setup isConstant isMethod none name ReferenceType MemberReference context getNewEnding context getNewEnding iVisited getReceiverNode context isnull ReferenceType MethodDeclaration ReferenceType ReferenceType MethodDeclaration ReferenceType ending isnull ending ReferenceType MemberReference context getNewEnding context getNewEnding context getNewEnding context getNewEnding context getNewEnding second iVisited getName ReferenceType MethodDeclaration ReferenceType MethodDeclaration second iVisited getName ReferenceType MethodDeclaration ReferenceType MethodDeclaration third singleton failure singleton iVisited getName failure "class variable" ending failure ending context getNewEnding context getNewEnding context getNewEnding context getNewEnding fail fail2 fail_easy "super" ending fail2 fail fail_easy ending context getNewEnding context getNewEnding context getNewEnding context getNewEnding fail fail2 fail_easy ReferenceType MemberReference context "super" ending fail2 fail fail_easy ending ReferenceType MemberReference context getNewEnding context getNewEnding iVisited getReceiverNode context isnull ReferenceType MethodDeclaration ReferenceType ReferenceType MethodDeclaration ReferenceType ending isnull ending BranchCallback Modifier branch FormalParameter StatementExpression StatementExpression StatementExpression JumpException BranchCallback Modifier branch FormalParameter StatementExpression String public ReferenceType context MethodInvocation public ReferenceType context MethodInvocation public ReferenceType context MethodInvocation public ReferenceType context MethodInvocation public ReferenceType context MethodInvocation public ReferenceType context MethodInvocation public ReferenceType context MethodInvocation public ReferenceType context MethodInvocation public ReferenceType context MethodInvocation public ReferenceType context MethodInvocation public ReferenceType context MethodInvocation public ReferenceType context MethodInvocation public ReferenceType context MethodInvocation public ReferenceType context MethodInvocation public ReferenceType context MethodInvocation public ReferenceType context MethodInvocation Colon3Node node BranchCallback Modifier branch FormalParameter IfStatement BranchCallback Modifier branch FormalParameter StatementExpression BranchCallback Modifier branch FormalParameter StatementExpression BranchCallback Modifier branch FormalParameter StatementExpression CallNode node BranchCallback Modifier branch FormalParameter StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression JumpException BranchCallback Modifier branch FormalParameter StatementExpression String ClassVarNode node BranchCallback Modifier branch FormalParameter StatementExpression StatementExpression StatementExpression BranchCallback Modifier branch FormalParameter BranchCallback Modifier branch FormalParameter StatementExpression StatementExpression StatementExpression BranchCallback Modifier branch FormalParameter SuperNode node AttrAssignNode node BranchCallback Modifier branch FormalParameter StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression JumpException BranchCallback Modifier branch FormalParameter StatementExpression String public ReferenceType context MethodInvocation MethodInvocation MethodInvocation public ReferenceType context MethodInvocation BodyCompiler context BinaryOperation pushString BodyCompiler context pushNull BodyCompiler context BinaryOperation pushString BodyCompiler context pushNull BodyCompiler context Literal pushString BodyCompiler context pushNull BodyCompiler context Literal pushString BodyCompiler context pushNull BodyCompiler context Literal pushString BodyCompiler context pushNull BodyCompiler context Literal pushString BodyCompiler context pushNull BodyCompiler context Literal pushString BodyCompiler context pushNull BodyCompiler Cast MemberReference Literal compileGetArgumentDefinition BodyCompiler context pushNull public ReferenceType context BinaryOperation BlockStatement BlockStatement public ReferenceType context MethodInvocation public ReferenceType context MethodInvocation public ReferenceType context MethodInvocation public ReferenceType context MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation Modifier ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation public ReferenceType context MethodInvocation public ReferenceType context MethodInvocation MethodInvocation MethodInvocation public ReferenceType context public ReferenceType context MethodInvocation MethodInvocation MethodInvocation public ReferenceType context public ReferenceType context MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation Modifier ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation public ReferenceType context MethodInvocation BodyCompiler MemberReference MemberReference Literal compile context consumeCurrentValue context pushNull BodyCompiler context pushNull + Literal Cast + Literal Cast "method" "yield" "global-variable" "instance-variable" "constant" ReferenceType MemberReference context "method" BodyCompiler instanceof MemberReference ReferenceType LocalVariableDeclaration StatementExpression StatementExpression BodyCompiler context Literal pushString BodyCompiler context Literal pushString BodyCompiler context pushNull BodyCompiler MethodInvocation MemberReference Literal compile context duplicateCurrentValue context metaclass context duplicateCurrentValue context MethodInvocation getVisibilityFor context duplicateCurrentValue final Object isfalse MethodInvocation Object isreal MethodInvocation Object ending MethodInvocation context MemberReference Literal isPrivate context MemberReference Literal isNotProtected context MemberReference selfIsKindOf context consumeCurrentValue context MemberReference go context MemberReference setEnding context MethodInvocation ClassCreator ClassCreator isMethodBound context MemberReference go context MemberReference setEnding context pushNull context MemberReference setEnding BodyCompiler context pushNull BodyCompiler context consumeCurrentValue context Literal pushString context MemberReference go BodyCompiler BodyCompiler context consumeCurrentValue context Literal pushString context MemberReference go BodyCompiler BodyCompiler MethodInvocation MemberReference Literal compile context duplicateCurrentValue context metaclass context duplicateCurrentValue context MethodInvocation getVisibilityFor context duplicateCurrentValue final Object isfalse MethodInvocation Object isreal MethodInvocation Object ending MethodInvocation context MemberReference Literal isPrivate context MemberReference Literal isNotProtected context MemberReference selfIsKindOf context consumeCurrentValue context MemberReference go context MemberReference setEnding context MethodInvocation ClassCreator ClassCreator isMethodBound context MemberReference go context MemberReference setEnding context pushNull context MemberReference setEnding BodyCompiler context pushNull node context true "$" ReferenceType MemberReference "$" ReferenceType MemberReference FCallNode node iVisited Colon2Node Modifier ReferenceType VariableDeclarator MethodInvocation MethodInvocation "constant" "method" iVisited getReceiverNode context true iVisited getName context getNewEnding context getNewEnding context getNewEnding isfalse 3 isreal 1 isreal isfalse isreal iVisited getName ReferenceType MethodDeclaration ReferenceType MethodDeclaration ending isfalse ending "class variable" ending "class variable" ending iVisited getReceiverNode context true iVisited getName context getNewEnding context getNewEnding context getNewEnding isfalse 3 isreal 1 isreal isfalse isreal iVisited getName ReferenceType MethodDeclaration ReferenceType MethodDeclaration ending isfalse ending BackRefNode node NthRefNode node final Node leftNode Cast MemberReference MemberReference Literal compile context loadObject BranchCallback Modifier branch FormalParameter StatementExpression BranchCallback Modifier branch FormalParameter StatementExpression BranchCallback Modifier branch FormalParameter StatementExpression BranchCallback Modifier branch FormalParameter StatementExpression ReferenceType MemberReference leftNode context true public ReferenceType context MethodInvocation public ReferenceType context MethodInvocation public ReferenceType context MethodInvocation public ReferenceType context MethodInvocation Colon2Node iVisited BodyCompiler MethodInvocation MemberReference Literal compileGetArgumentDefinition BodyCompiler context MemberReference go BodyCompiler MethodInvocation MemberReference Literal compileGetArgumentDefinition BodyCompiler context MemberReference go iVisited getArgsNode context "method" isfalse iVisited getArgsNode context "assignment" isfalse	1
MethodDeclaration Modifier put FormalParameter FormalParameter FormalParameter FormalParameter ThrowStatement final public BasicType offset BasicType src BasicType off BasicType len MethodInvocation long int int int ex	0
MethodDeclaration Modifier ReferenceType case176_line720 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference ClassCreator = yyVal yyVal ReferenceType MethodInvocation Cast Cast Cast Cast OpAsgnNode Cast getPosition ReferenceType MemberReference ReferenceType MemberReference ReferenceType Cast ReferenceType Cast ReferenceType MemberReference Node ArraySelector yyVals Node ArraySelector yyVals String ReferenceType MemberReference String ReferenceType MemberReference Node ArraySelector yyVals BinaryOperation BinaryOperation Token ArraySelector yyVals Token ArraySelector yyVals BinaryOperation + Literal MemberReference + Literal MemberReference BinaryOperation BinaryOperation + Literal MemberReference - 4 yyTop 0 yyTop + Literal MemberReference + Literal MemberReference - 4 yyTop - 2 yyTop - 1 yyTop	1
MethodDeclaration Modifier ReferenceType yieldSpecific FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType context ReferenceType arg0 MethodInvocation ThreadContext IRubyObject body MemberReference MemberReference MemberReference MemberReference yieldSpecific context arg0 binding type	0
MethodDeclaration Modifier Annotation paint FormalParameter IfStatement synchronized public Override ReferenceType g MemberReference BlockStatement BlockStatement Graphics doubleBuffered StatementExpression StatementExpression MethodInvocation MethodInvocation MemberReference paintBuffered MemberReference paintUnbuffered g g	0
MethodDeclaration Modifier compileAlias FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression IfStatement public ReferenceType node ReferenceType context BasicType expr Modifier ReferenceType VariableDeclarator MethodInvocation MemberReference StatementExpression Node BodyCompiler boolean final AliasNode alias Cast context MethodInvocation MethodInvocation defineAlias ! expr MethodInvocation ReferenceType MemberReference alias getNewName alias getOldName context consumeCurrentValue AliasNode node	1
MethodDeclaration Modifier BasicType fastHashContains FormalParameter LocalVariableDeclaration ForStatement ReturnStatement private boolean ReferenceType internedName ReferenceType VariableDeclarator ForControl BlockStatement Literal String VariableTableEntry table MemberReference VariableDeclaration BinaryOperation Assignment IfStatement false vTable ReferenceType VariableDeclarator != MemberReference Literal MemberReference MemberReference = BinaryOperation BlockStatement VariableTableEntry e MemberReference e null e e next == MemberReference MemberReference ReturnStatement ArraySelector table internedName e name Literal BinaryOperation true & MethodInvocation BinaryOperation internedName hashCode - MemberReference Literal table length 1	1
MethodDeclaration Modifier ReferenceType getPre ReturnStatement public ListNode MemberReference pre	0
MethodDeclaration Modifier ReferenceType getContents FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration ForStatement ReturnStatement protected static List TypeArgument ReferenceType directory ReferenceType runtime ReferenceType VariableDeclarator ReferenceType VariableDeclarator ForControl BlockStatement MemberReference ReferenceType File Ruby List TypeArgument result ClassCreator String contents MethodInvocation VariableDeclaration BinaryOperation MemberReference StatementExpression result RubyString ReferenceType ReferenceType directory list BasicType VariableDeclarator < MemberReference MemberReference ++ i MethodInvocation RubyString ArrayList TypeArgument int i Literal i contents length result MethodInvocation add ReferenceType 0 runtime MemberReference newString RubyString ArraySelector contents MemberReference i	1
MethodDeclaration Modifier ReferenceType toString ReturnStatement public String BinaryOperation + MemberReference Literal _value ":float"	0
MethodDeclaration Modifier BasicType parseSimpleStringIntoBuffer FormalParameter FormalParameter java.io.IOException LocalVariableDeclaration WhileStatement ReturnStatement public int ReferenceType src ReferenceType buffer BasicType VariableDeclarator BinaryOperation BlockStatement MemberReference LexerSource ByteList int c != Assignment MemberReference IfStatement StatementExpression c MemberReference MethodInvocation = RubyYaccLexer EOF BinaryOperation BlockStatement IfStatement MethodInvocation c src read == MemberReference MemberReference StatementExpression BreakStatement BinaryOperation BlockStatement buffer MemberReference append c end MethodInvocation == MemberReference Literal StatementExpression IfStatement c src MemberReference unread c '\\' Assignment BinaryOperation StatementExpression c MemberReference MethodInvocation = && BinaryOperation BinaryOperation MethodInvocation c src read || BinaryOperation BinaryOperation != MemberReference Literal buffer Literal append == MemberReference Literal != MemberReference MemberReference c '\\' '\\' c '\n' c end	1
MethodDeclaration Modifier ReferenceType convertJavaToRuby FormalParameter FormalParameter FormalParameter ReturnStatement static public IRubyObject ReferenceType runtime ReferenceType object ReferenceType javaClass MethodInvocation Ruby Object Class MemberReference MemberReference MethodInvocation convertJavaToUsableRubyObjectWithConverter runtime object MemberReference getJavaConverter javaClass	0
MethodDeclaration Modifier compileDAsgn FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration StatementExpression public ReferenceType node ReferenceType context BasicType expr Modifier ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation Node BodyCompiler boolean final DAsgnNode dasgnNode Cast CompilerCallback value ClassCreator context MethodInvocation getVariableCompiler ReferenceType MemberReference ReferenceType MethodDeclaration MethodInvocation MethodInvocation MemberReference MemberReference assignLocalVariable DAsgnNode node CompilerCallback Modifier call FormalParameter StatementExpression dasgnNode getIndex dasgnNode getDepth value expr public ReferenceType context MethodInvocation BodyCompiler MethodInvocation MemberReference Literal compile dasgnNode getValueNode context true	0
MethodDeclaration Modifier ReferenceType convertEntry FormalParameter FormalParameter ReturnStatement public Object ReferenceType runtime ReferenceType entry MethodInvocation Ruby RubyHashEntry entry.value ClassReference toJava ReferenceType Object	0
MethodDeclaration Modifier ReferenceType getInstanceEvalClass IfStatement private RubyModule MethodInvocation BlockStatement BlockStatement isImmediate ReturnStatement ReturnStatement MethodInvocation MethodInvocation MethodInvocation getRuntime getSingletonClass getDummy	0
MethodDeclaration Modifier ReferenceType case85_line601 FormalParameter FormalParameter FormalParameter IfStatement LocalVariableDeclaration StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop BinaryOperation BlockStatement ReferenceType VariableDeclarator Assignment MemberReference Object Object int || MethodInvocation MethodInvocation StatementExpression ISourcePosition position MethodInvocation MemberReference ClassCreator = yyVal support isInDef support isInSingle MethodInvocation Cast getPosition yyVal ReferenceType MemberReference Literal MethodInvocation MemberReference Literal yyerror ReferenceType MemberReference ConstDeclNode position null support MemberReference Cast Cast new_colon2 NilImplicitNode NIL "dynamic constant assignment" Node ArraySelector yyVals position ReferenceType MemberReference ReferenceType Cast BinaryOperation Node ArraySelector yyVals String ReferenceType MemberReference + Literal MemberReference BinaryOperation Token ArraySelector yyVals - 2 yyTop + Literal MemberReference BinaryOperation - 2 yyTop + Literal MemberReference 0 yyTop	1
MethodDeclaration Modifier ReferenceType newHash FormalParameter FormalParameter FormalParameter AssertStatement ReturnStatement final static public RubyHash ReferenceType runtime ReferenceType valueMap ReferenceType defaultValue BinaryOperation ClassCreator Ruby Map IRubyObject != MemberReference Literal ReferenceType MemberReference MemberReference MemberReference defaultValue null RubyHash runtime valueMap defaultValue	1
MethodDeclaration Modifier ReferenceType strDup FormalParameter ReturnStatement final public RubyString ReferenceType runtime MethodInvocation Ruby MemberReference MethodInvocation strDup runtime getMetaClass	0
MethodDeclaration Modifier ReferenceType formatWeekYear FormalParameter LocalVariableDeclaration StatementExpression StatementExpression LocalVariableDeclaration IfStatement ReturnStatement private String BasicType firstDayOfWeek ReferenceType VariableDeclarator MethodInvocation MethodInvocation BasicType VariableDeclarator BinaryOperation BlockStatement MethodInvocation int java ReferenceType calendar MethodInvocation calendar MemberReference setFirstDayOfWeek calendar Literal setMinimalDaysInFirstWeek int value MethodInvocation && BinaryOperation BinaryOperation StatementExpression String Literal MemberReference format util ReferenceType dt toGregorianCalendar firstDayOfWeek 7 calendar MemberReference get || BinaryOperation BinaryOperation == MethodInvocation MemberReference Assignment "%02d" value Calendar java.util.Calendar WEEK_OF_YEAR == MemberReference Literal == MemberReference Literal calendar MemberReference get Calendar JANUARY MemberReference Literal = value 52 value 53 Calendar MONTH value 0	1
MethodDeclaration Modifier run ForStatement public ForControl BlockStatement TryStatement LocalVariableDeclaration IfStatement ForStatement IfStatement StatementExpression CatchClause BasicType VariableDeclarator MemberReference BlockStatement ForControl BlockStatement MemberReference BlockStatement MethodInvocation CatchClauseParameter boolean dump BinaryOperation dump StatementExpression StatementExpression VariableDeclaration BinaryOperation LocalVariableDeclaration StatementExpression TryStatement StatementExpression dump StatementExpression StatementExpression BinaryOperation sleep InterruptedException e > MethodInvocation Literal MethodInvocation MethodInvocation BasicType VariableDeclarator >= MemberReference Literal ReferenceType VariableDeclarator MethodInvocation StatementExpression StatementExpression MethodInvocation MethodInvocation MethodInvocation * MemberReference Literal size 200 System.err BinaryOperation println System.err MethodInvocation println int i MemberReference -- i 0 Segment TypeArgument TypeArgument seg MemberReference seg lock MethodInvocation MethodInvocation yield System.err BinaryOperation println System.err MethodInvocation println VULTURE_RUN_FREQ_SECONDS 1000 + BinaryOperation Literal stats segments length ReferenceType ReferenceType ArraySelector segments seg expunge seg unlock + BinaryOperation Literal stats + Literal MemberReference " waking, stats:" T A MemberReference + Literal MemberReference " sleeping, stats:" "***Vulture " id i "***Vulture " id	1
MethodDeclaration Modifier Annotation ReferenceType newInstance FormalParameter FormalParameter FormalParameter FormalParameter IfStatement ReturnStatement final static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType klass ReferenceType componentType ReferenceType length BinaryOperation BlockStatement ClassCreator name Literal required Literal meta Literal ThreadContext IRubyObject IRubyObject IRubyObject instanceof MemberReference ReferenceType ThrowStatement ReferenceType MethodInvocation Cast Cast MethodInvocation "new" 2 true componentType Type MethodInvocation Array context getRuntime ReferenceType MemberReference ReferenceType MemberReference RubyNumeric MemberReference fix2int context MethodInvocation getRuntime RubyClass klass Type componentType length MemberReference MethodInvocation newTypeError componentType MethodInvocation getTypeClass context getRuntime	1
MethodDeclaration Modifier Annotation ReferenceType interpret FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration ReturnStatement public Override IRubyObject ReferenceType runtime ReferenceType context ReferenceType self ReferenceType aBlock ReferenceType VariableDeclarator MethodInvocation Ruby ThreadContext IRubyObject Block IRubyObject receiver MethodInvocation callAdapter MemberReference MemberReference MemberReference MethodInvocation MethodInvocation MethodInvocation call MethodInvocation getReceiverNode context self receiver arg1 MemberReference MemberReference MemberReference MemberReference interpret arg2 MemberReference MemberReference MemberReference MemberReference interpret RuntimeHelpers MemberReference MemberReference MemberReference MemberReference MemberReference getBlock MemberReference MemberReference MemberReference MemberReference interpret runtime context self aBlock runtime context self aBlock runtime context self iterNode aBlock runtime context self aBlock	0
MethodDeclaration Modifier Annotation ReferenceType unpack_sockaddr_in FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression LocalVariableDeclaration ReturnStatement static public JRubyMethod ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType addr ReferenceType VariableDeclarator BinaryOperation BlockStatement BasicType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation ReferenceType VariableDeclarator MethodInvocation meta Literal ThreadContext IRubyObject IRubyObject String val MethodInvocation || BinaryOperation BinaryOperation ThrowStatement int port BinaryOperation StringBuilder sb ClassCreator sb Cast append sb Literal append sb Cast append sb Literal append sb Cast append sb Literal append sb Cast append IRubyObject result ArrayCreator context MethodInvocation getRuntime true addr MethodInvocation convertToString && BinaryOperation BinaryOperation && MemberReference BinaryOperation MethodInvocation + BinaryOperation MethodInvocation ReferenceType BasicType MethodInvocation "." BasicType MethodInvocation "." BasicType MethodInvocation "." BasicType MethodInvocation ReferenceType ArrayInitializer MemberReference newArrayNoCopy toString && MemberReference BinaryOperation != MethodInvocation Literal ! Platform IS_BSD != MethodInvocation Literal context MethodInvocation getRuntime << MethodInvocation Literal val Literal charAt StringBuilder int val Literal charAt int val Literal charAt int val Literal charAt int val Literal charAt IRubyObject MethodInvocation MethodInvocation result Platform IS_BSD != MethodInvocation Literal val Literal charAt 2 val Literal charAt 2 Literal newArgumentError val Literal charAt 8 3 4 5 6 7 context MethodInvocation getRuntime context MethodInvocation getRuntime val Literal charAt 16 1 0 "can't resolve socket address of wrong type" 2 MemberReference newFixnum MethodInvocation newString 0 port sb toString	1
MethodDeclaration Modifier ReferenceType getFileStat ReturnStatement public RubyClass MemberReference fileStatClass	0
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType arg0 MethodInvocation ThreadContext IRubyObject RubyModule String IRubyObject RuntimeHelpers MemberReference MemberReference Literal MemberReference invoke context self "__jcreate!" arg0	0
MethodDeclaration Modifier Annotation Annotation ReferenceType to_s StatementExpression LocalVariableDeclaration IfStatement IfStatement ReturnStatement public JRubyMethod ElementValuePair Override IRubyObject MethodInvocation ReferenceType VariableDeclarator MethodInvocation StatementExpression MethodInvocation StatementExpression MemberReference name Literal check IRubyObject ss MethodInvocation ss isNil Assignment isTaint MethodInvocation ss "to_s" RubyRegexp This last_match MemberReference MethodInvocation = ss Literal setTaint ss RubyString MethodInvocation newEmptyString true getRuntime	1
MethodDeclaration Modifier ddiv StatementExpression public MethodInvocation MethodInvocation getMethodVisitor MemberReference visitInsn DDIV	0
MethodDeclaration Modifier Annotation ReferenceType runWithGetsLoop FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public Deprecated IRubyObject ReferenceType scriptNode BasicType printing BasicType processLineEnds BasicType split BasicType unused MethodInvocation Node boolean boolean boolean boolean MemberReference MemberReference MemberReference MemberReference runWithGetsLoop scriptNode printing processLineEnds split	1
MethodDeclaration Modifier Annotation printStackTrace FormalParameter LocalVariableDeclaration LocalVariableDeclaration ForStatement LocalVariableDeclaration LocalVariableDeclaration IfStatement LocalVariableDeclaration StatementExpression StatementExpression StatementExpression ForStatement public Override ReferenceType ps ReferenceType VariableDeclarator BasicType VariableDeclarator ForControl BlockStatement ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation ForControl BlockStatement PrintStream StackTraceElement trace MethodInvocation int externalIndex Literal VariableDeclaration BinaryOperation MemberReference IfStatement StatementExpression IRubyObject backtrace MethodInvocation Ruby runtime MethodInvocation != MethodInvocation MemberReference LocalVariableDeclaration StatementExpression IRubyObject message MemberReference ps BinaryOperation println exception MemberReference printBacktrace ps Literal println VariableDeclaration BinaryOperation MemberReference StatementExpression getStackTrace 0 BasicType VariableDeclarator > MemberReference Literal -- i BinaryOperation BlockStatement Assignment exception backtrace backtrace getRuntime runtime getNil backtrace ReferenceType VariableDeclarator MethodInvocation exception message + BinaryOperation Literal ps "\t...internal jruby stack elided..." BasicType VariableDeclarator < MemberReference MemberReference ++ i MethodInvocation int i BinaryOperation i 0 >= MemberReference Literal BreakStatement MemberReference MemberReference = String firstLine MethodInvocation ps BinaryOperation print + BinaryOperation MethodInvocation ")" int i MemberReference i trace length ps BinaryOperation println - MemberReference Literal ArraySelector MethodInvocation MethodInvocation trace 0 externalIndex i backtrace MethodInvocation MethodInvocation MethodInvocation Literal callMethod + MemberReference Literal + TernaryExpression Literal exception MethodInvocation getMetaClass externalIndex + Literal MemberReference trace length 1 MemberReference getClassName Literal indexOf convertToString toString runtime getCurrentContext "first" firstLine ": " MethodInvocation Literal MethodInvocation " (" toString "\tfrom " ArraySelector MethodInvocation trace i "org.jruby.evaluator" message isNil "" message convertToString MemberReference toString i	0
MethodDeclaration Modifier go_to FormalParameter StatementExpression public ReferenceType arg0 MethodInvocation Label MethodInvocation getMethodVisitor MemberReference MemberReference visitJumpInsn GOTO arg0	1
MethodDeclaration Modifier ReferenceType case336_line1276 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference ClassCreator = yyVal yyVal ReferenceType MethodInvocation Literal MethodInvocation Cast MultipleAsgn19Node Cast getPosition null support Cast Literal assignable ReferenceType MemberReference ReferenceType MemberReference ReferenceType MemberReference null ListNode ArraySelector yyVals Token ArraySelector yyVals Token ArraySelector yyVals BinaryOperation BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference + Literal MemberReference 0 yyTop - 3 yyTop - 2 yyTop	1
MethodDeclaration Modifier ReferenceType getComponentType ReturnStatement public Class MethodInvocation MethodInvocation MethodInvocation getValue getClass getComponentType	0
MethodDeclaration Modifier ReferenceType getConstantFrom0 FormalParameter FormalParameter FormalParameter ReturnStatement final public IRubyObject ReferenceType target ReferenceType context ReferenceType name MethodInvocation RubyModule ThreadContext String runtimeCache MemberReference MemberReference MemberReference Literal getConstantFrom target context name 0	0
MethodDeclaration Modifier ReferenceType newArrayLight FormalParameter ReturnStatement final static public RubyArray Modifier ReferenceType runtime MethodInvocation final Ruby MemberReference MemberReference newArrayLight runtime ARRAY_DEFAULT_SIZE	0
MethodDeclaration Modifier Annotation ReferenceType print FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType args MethodInvocation name Literal rest Literal reads MemberReference ThreadContext IRubyObject MemberReference This MemberReference print "print" true FrameField LASTLINE context args	0
MethodDeclaration Modifier BasicType getSign LocalVariableDeclaration IfStatement ReturnStatement private boolean BasicType VariableDeclarator BinaryOperation BlockStatement MemberReference boolean sign Literal < MemberReference MemberReference IfStatement sign true str end BinaryOperation BlockStatement IfStatement == MemberReference Literal StatementExpression BinaryOperation BlockStatement ArraySelector data '+' MemberReference == MemberReference Literal StatementExpression StatementExpression MemberReference ++ str ArraySelector data '-' MemberReference Assignment str MemberReference ++ str MemberReference Literal = str sign false	0
MethodDeclaration Modifier Annotation ReferenceType yieldSpecific FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration TryStatement public Override IRubyObject ReferenceType context ReferenceType arg0 ReferenceType binding ReferenceType type ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator IfStatement ReturnStatement CatchClause StatementExpression ThreadContext IRubyObject Binding Block ReferenceType Visibility oldVis MethodInvocation Frame lastFrame MethodInvocation IRubyObject self MethodInvocation MemberReference StatementExpression MethodInvocation CatchClauseParameter ReturnStatement MethodInvocation Type binding MethodInvocation getFrame MemberReference Literal MemberReference pre MemberReference prepareSelf ! noargblock MethodInvocation MemberReference MemberReference evalBlockBody JumpException.NextJump nj MethodInvocation MemberReference MemberReference MemberReference MemberReference post getVisibility context null binding binding assigner MethodInvocation MemberReference MemberReference MemberReference MemberReference assign context self MemberReference MemberReference MemberReference handleNextJump context binding oldVis lastFrame context getRuntime context self arg0 Block NULL_BLOCK context nj type	1
MethodDeclaration Modifier Annotation Annotation ReferenceType rbClone LocalVariableDeclaration StatementExpression StatementExpression StatementExpression ReturnStatement public JRubyMethod ElementValuePair Override IRubyObject ReferenceType VariableDeclarator Assignment Assignment Assignment MemberReference name Literal RubyProc newProc ClassCreator MemberReference MethodInvocation = MemberReference MemberReference = MemberReference MemberReference = newProc "clone" ReferenceType MethodInvocation MethodInvocation MemberReference newProc block getBlock newProc file file newProc line line RubyProc getRuntime MethodInvocation getRuntime type getProc	1
MethodDeclaration Modifier compileZSuper FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration StatementExpression IfStatement public ReferenceType node ReferenceType context BasicType expr ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MemberReference StatementExpression Node BodyCompiler boolean ZSuperNode zsuperNode Cast CompilerCallback closure MethodInvocation context MemberReference callZSuper ! expr MethodInvocation ReferenceType MemberReference MethodInvocation getBlock closure context consumeCurrentValue ZSuperNode node zsuperNode getIterNode	1
MethodDeclaration Modifier ReferenceType reCache FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration StatementExpression IfStatement ReturnStatement public IRubyObject ReferenceType context ReferenceType name BasicType VariableDeclarator ReferenceType VariableDeclarator Assignment BinaryOperation StatementExpression MemberReference ThreadContext String int newGeneration MethodInvocation IRubyObject value MethodInvocation MemberReference MemberReference = != MemberReference Literal Assignment value context MethodInvocation getRuntime context MemberReference getConstant cachedValue value value null MemberReference MemberReference = getConstantGeneration name generation newGeneration	1
MethodDeclaration Modifier Annotation ReferenceType priority_set FormalParameter LocalVariableDeclaration IfStatement StatementExpression IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType priority BasicType VariableDeclarator BinaryOperation BlockStatement IfStatement Assignment MethodInvocation BlockStatement This name Literal required Literal IRubyObject int iPriority MethodInvocation < MemberReference MemberReference StatementExpression BinaryOperation BlockStatement This MethodInvocation = threadImpl isAlive StatementExpression MemberReference "priority=" 1 RubyNumeric MemberReference fix2int iPriority Thread MIN_PRIORITY Assignment > MemberReference MemberReference StatementExpression MemberReference RubyFixnum MethodInvocation MemberReference newFixnum MethodInvocation priority priority MemberReference MemberReference = iPriority Thread MAX_PRIORITY Assignment priority getRuntime iPriority threadImpl MemberReference setPriority iPriority Thread MIN_PRIORITY MemberReference MemberReference = iPriority iPriority Thread MAX_PRIORITY	1
MethodDeclaration Modifier ReferenceType getEmptyByteList FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement ReturnStatement static EmptyByteListHolder ReferenceType enc BasicType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation Encoding int index MethodInvocation EmptyByteListHolder bytes && BinaryOperation BinaryOperation ReturnStatement MemberReference prepareEmptyByteList enc getIndex < MemberReference MemberReference != Assignment Literal MemberReference enc index EMPTY_BYTELISTS length MemberReference MemberReference = null bytes bytes ArraySelector EMPTY_BYTELISTS MemberReference index	1
MethodDeclaration Modifier Annotation ReferenceType setpgrp FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv MethodInvocation name Literal module Literal visibility MemberReference ThreadContext IRubyObject MethodInvocation setpgrp "setpgrp" true Visibility PRIVATE context getRuntime	0
MethodDeclaration Modifier ReferenceType case55_line503 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support Cast Cast Cast Cast new_call ReferenceType MemberReference ReferenceType MemberReference ReferenceType MemberReference ReferenceType MemberReference Node ArraySelector yyVals Token ArraySelector yyVals Node ArraySelector yyVals IterNode ArraySelector yyVals BinaryOperation BinaryOperation BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference + Literal MemberReference + Literal MemberReference - 4 yyTop - 2 yyTop - 1 yyTop 0 yyTop	1
MethodDeclaration Modifier Annotation ReferenceType bytesize ReturnStatement public JRubyMethod ElementValuePair RubyFixnum MethodInvocation name Literal length "bytesize"	0
MethodDeclaration Modifier Annotation assignArray FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration SwitchStatement public Override ReferenceType runtime ReferenceType context ReferenceType self ReferenceType arg ReferenceType block ReferenceType VariableDeclarator BasicType VariableDeclarator MemberReference SwitchStatementCase SwitchStatementCase Ruby ThreadContext IRubyObject IRubyObject Block RubyArray values Cast int length MethodInvocation length Literal StatementExpression BreakStatement StatementExpression BreakStatement ReferenceType MemberReference values getLength 0 MethodInvocation MethodInvocation RubyArray arg MemberReference MemberReference MemberReference MemberReference assign MemberReference MemberReference MemberReference MethodInvocation MemberReference assign runtime context self block runtime context self values Literal eltInternal block 0	1
MethodDeclaration Modifier Annotation ReferenceType send FormalParameter FormalParameter TryStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType args LocalVariableDeclaration IfStatement ReturnStatement CatchClause CatchClause required Literal rest Literal ThreadContext IRubyObject BasicType VariableDeclarator BinaryOperation BlockStatement BlockStatement MethodInvocation CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement 1 true int written >= MemberReference Literal LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression LocalVariableDeclaration LocalVariableDeclaration StatementExpression context MethodInvocation getRuntime UnknownHostException e MethodInvocation IOException e MethodInvocation args length 3 ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator Assignment ReferenceType VariableDeclarator ReferenceType VariableDeclarator Assignment MemberReference newFixnum MethodInvocation Literal sockerr MethodInvocation Literal sockerr RubyString nameStr MemberReference RubyString data MemberReference ByteBuffer buf MethodInvocation InetAddress address MethodInvocation InetSocketAddress addr ClassCreator MemberReference Cast = RubyString data MemberReference ByteBuffer buf MethodInvocation MemberReference Cast = written context getRuntime "send: name or service not known" context getRuntime "send: name or service not known" ArraySelector MethodInvocation args ArraySelector MethodInvocation args ByteBuffer MethodInvocation wrap RubySocket MethodInvocation getRubyInetAddress ReferenceType MemberReference MethodInvocation written ReferenceType This ArraySelector MethodInvocation args ByteBuffer MethodInvocation wrap written ReferenceType This Literal convertToString Literal convertToString data getBytes nameStr getByteList InetSocketAddress address RubyNumeric MemberReference fix2int DatagramChannel MethodInvocation Literal convertToString data getBytes DatagramChannel MethodInvocation 2 0 ArraySelector args getChannel 0 getChannel Literal 3	1
MethodDeclaration Modifier Annotation issueBreakEvent FormalParameter IfStatement public Override ReferenceType value BinaryOperation BlockStatement IfStatement CompilerCallback != MemberReference Literal StatementExpression StatementExpression MemberReference BlockStatement BlockStatement currentLoopLabels null MethodInvocation MethodInvocation inNestedMethod StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression value This call issueLoopBreak MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation loadThreadContext value This call Literal MethodInvocation invokeUtilityMethod loadRuntime value This call Literal MethodInvocation invokeUtilityMethod "breakJump" ClassReference ClassReference ClassReference sig "breakLocalJumpError" ClassReference ClassReference ClassReference sig ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType IRubyObject ThreadContext IRubyObject IRubyObject Ruby IRubyObject	0
MethodDeclaration Modifier ReferenceType case215_line866 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support Cast Literal Cast MethodInvocation getOperatorCallNode ReferenceType MemberReference "==" ReferenceType MemberReference getPosition Node ArraySelector yyVals Node ArraySelector yyVals BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference - 2 yyTop 0 yyTop	1
MethodDeclaration Modifier Annotation ReferenceType definition FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement ReturnStatement public Override String ReferenceType runtime ReferenceType context ReferenceType self ReferenceType aBlock ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement Literal Ruby ThreadContext IRubyObject Block String name MethodInvocation RubyModule klazz MethodInvocation && BinaryOperation MethodInvocation ReturnStatement null context getFrameName context getFrameKlazz && BinaryOperation BinaryOperation klazz MethodInvocation getSuperClass MethodInvocation != MemberReference Literal != MemberReference Literal MemberReference Literal isMethodBound ASTInterpreter MemberReference MemberReference MemberReference Literal MemberReference MemberReference getArgumentDefinition name null klazz null name false runtime context argsNode "super" self aBlock	0
MethodDeclaration Modifier ReferenceType getPid ReturnStatement public PID MemberReference pid	0
MethodDeclaration Modifier run StatementExpression StatementExpression public MethodInvocation MethodInvocation method pop method MemberReference go_to topOfBody	0
MethodDeclaration Modifier append FormalParameter IfStatement public ReferenceType obj MethodInvocation BlockStatement BlockStatement ByteList ! internalFinished LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression BasicType VariableDeclarator MethodInvocation Assignment MethodInvocation MethodInvocation byte bytes MethodInvocation flater MemberReference setInput MemberReference ClassCreator = Literal run input MemberReference append obj bytes bytes input ReferenceType MemberReference Literal false obj ByteList bytes false	0
MethodDeclaration Modifier ReferenceType waitall FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration WhileStatement ReturnStatement static public IRubyObject ReferenceType runtime ReferenceType VariableDeclarator ReferenceType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator BinaryOperation BlockStatement MemberReference Ruby POSIX posix MethodInvocation RubyArray results MethodInvocation int status ArrayCreator int result MethodInvocation != MemberReference Literal StatementExpression StatementExpression results runtime getPosix runtime newArray BasicType Literal posix MemberReference wait result - 1 MethodInvocation Assignment int 1 status results MethodInvocation append MemberReference MethodInvocation = runtime MethodInvocation MethodInvocation newArray result posix MemberReference wait runtime MemberReference newFixnum RubyProcess.RubyStatus MemberReference MemberReference newProcessStatus status result runtime ArraySelector status Literal 0	0
MethodDeclaration Modifier Annotation ReferenceType newBinding FormalParameter FormalParameter ReturnStatement static public Deprecated RubyBinding ReferenceType runtime ReferenceType self MethodInvocation Ruby IRubyObject MemberReference MethodInvocation newBinding runtime runtime MethodInvocation getCurrentContext MemberReference currentBinding self	1
MethodDeclaration Modifier ReferenceType callMethodMissing FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement private IRubyObject ReferenceType context ReferenceType self ReferenceType method ReferenceType block MethodInvocation ThreadContext IRubyObject DynamicMethod Block RuntimeHelpers MethodInvocation MemberReference MemberReference MethodInvocation MemberReference MemberReference selectMethodMissing MemberReference MemberReference MethodInvocation MemberReference MemberReference call context self method getVisibility methodName callType context self self getMetaClass methodName block	0
MethodDeclaration Modifier append FormalParameter StatementExpression StatementExpression public ReferenceType t Assignment Assignment N MemberReference MemberReference = MemberReference MemberReference = tail tail t tail t	0
MethodDeclaration Modifier ReferenceType case348_line1299 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support Cast Cast new_super ReferenceType MemberReference ReferenceType MemberReference Node ArraySelector yyVals Token ArraySelector yyVals BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference 0 yyTop - 1 yyTop	1
MethodDeclaration Modifier ReferenceType createRangeClass FormalParameter LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression ReturnStatement static public RubyClass ReferenceType runtime ReferenceType VariableDeclarator MethodInvocation Assignment MethodInvocation MethodInvocation MethodInvocation MemberReference Ruby RubyClass result MethodInvocation runtime MemberReference setRange MemberReference ClassCreator = result MemberReference setMarshal result MethodInvocation includeModule result ClassReference defineAnnotatedMethods result runtime Literal MethodInvocation MemberReference defineClass result result kindOf ReferenceType MethodDeclaration RANGE_MARSHAL runtime getEnumerable ReferenceType "Range" runtime getObject RANGE_ALLOCATOR RubyModule ReferenceType Modifier BasicType isKindOf FormalParameter FormalParameter ReturnStatement RubyRange KindOf public boolean ReferenceType obj ReferenceType type BinaryOperation IRubyObject RubyModule instanceof MemberReference ReferenceType obj RubyRange	0
MethodDeclaration Modifier Annotation ReferenceType getSingletonMethod FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration SynchronizedStatement public Deprecated Callback ReferenceType method ReferenceType arg1 ReferenceType arg2 ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation LocalVariableDeclaration TryStatement String Class Class String mname BinaryOperation String mnamePath BinaryOperation runtime getJRubyClassLoader ReferenceType VariableDeclarator LocalVariableDeclaration IfStatement LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression ReturnStatement CatchClause CatchClause + BinaryOperation Literal + BinaryOperation Literal Class c MethodInvocation ReferenceType VariableDeclarator BinaryOperation BlockStatement ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MemberReference CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement + BinaryOperation MemberReference "_S2" + BinaryOperation MemberReference "_S2" MemberReference tryClass Class descriptor ArrayCreator == MemberReference Literal LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression InvocationCallback ic Cast ic MethodInvocation setArity ic MemberReference setArgumentTypes ic MemberReference setJavaName ic Literal setSingleton ic IllegalArgumentException e MemberReference Exception e ClassCreator + MethodInvocation Literal method + MemberReference Literal method mname ReferenceType ArrayInitializer c null ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation Assignment ReferenceType MethodInvocation Arity twoArguments descriptor method true e ReferenceType MethodInvocation type getName "Callback$" typePath "Callback$" Class MemberReference MemberReference Class signature ArrayCreator Class ret MethodInvocation ClassWriter cw MethodInvocation MethodVisitor mv MethodInvocation MemberReference MemberReference Literal MemberReference loadArguments mv MemberReference Literal visitVarInsn mv MemberReference MemberReference MemberReference MethodInvocation visitMethodInsn mv MemberReference visitInsn mv Literal Literal visitMaxs MemberReference MethodInvocation = InvocationCallback c newInstance IllegalArgumentException e getMessage arg1 arg2 ReferenceType ArrayInitializer MemberReference MemberReference getReturnClass MemberReference createCtor MemberReference startCallS mv METHOD_ARGS_INDEX 2 descriptor ALOAD 3 INVOKESTATIC typePath method MemberReference MemberReference sig ARETURN 4 4 c MemberReference MemberReference MemberReference endCall Class MemberReference MemberReference MemberReference ClassReference method signature mnamePath cw ret signature cw mv mname RubyKernel IRUBY_OBJECT arg1 arg2 ReferenceType Block	1
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType context ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 ReferenceType arg3 ReferenceType arg4 ReferenceType arg5 ReferenceType block MethodInvocation ThreadContext IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject Block body MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference call context arg0 arg1 arg2 arg3 arg4 arg5 binding type block	1
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ThrowStatement public Override IRubyObject ReferenceType context ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 ReferenceType arg3 ReferenceType arg4 ReferenceType arg5 ReferenceType arg6 ReferenceType arg7 ReferenceType binding ReferenceType type MethodInvocation ThreadContext IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject Binding Type context MethodInvocation getRuntime MemberReference MethodInvocation Literal newLocalJumpError RubyLocalJumpError.Reason NOREASON context MethodInvocation getRuntime "yield called out of block" ArrayCreator newArrayNoCopy ReferenceType ArrayInitializer IRubyObject MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference arg0 arg1 arg2 arg3 arg4 arg5 arg6 arg7	0
MethodDeclaration Modifier Annotation ReferenceType op_aref FormalParameter LocalVariableDeclaration IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType key ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation name Literal required Literal IRubyObject IRubyObject value != Assignment Literal ReturnStatement MethodInvocation getRuntime "[]" 1 MemberReference MethodInvocation = null MemberReference getNil value MethodInvocation getThreadLocals value MethodInvocation get MemberReference getSymbolKey key	1
MethodDeclaration Modifier ReferenceType yieldSpecific FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType context ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 ReferenceType arg3 ReferenceType arg4 ReferenceType binding ReferenceType type MethodInvocation ThreadContext IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject Binding Block ReferenceType MemberReference MethodInvocation Literal Literal Literal MemberReference MemberReference yield Type context context MethodInvocation getRuntime null null true binding type MemberReference MemberReference MemberReference MemberReference MemberReference newArrayNoCopyLight arg0 arg1 arg2 arg3 arg4	1
MethodDeclaration Modifier ReferenceType case234_line932 FormalParameter FormalParameter FormalParameter StatementExpression IfStatement ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment BinaryOperation StatementExpression MemberReference Object Object int MemberReference Cast = != MemberReference Literal Cast yyVal yyVal ReferenceType MemberReference yyVal null ReferenceType MemberReference Node ArraySelector yyVals Node yyVal BinaryOperation + Literal MemberReference - 1 yyTop	1
MethodDeclaration Modifier Annotation ReferenceType asJavaString ReturnStatement public Override String MemberReference symbol	0
MethodDeclaration Modifier ReferenceType getNumeric ReturnStatement public RubyClass MemberReference numericClass	0
MethodDeclaration Modifier ReferenceType match19Common FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement LocalVariableDeclaration LocalVariableDeclaration IfStatement LocalVariableDeclaration StatementExpression IfStatement ReturnStatement private IRubyObject ReferenceType context ReferenceType arg BasicType pos ReferenceType block ReferenceType VariableDeclarator MethodInvocation BlockStatement ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement ReferenceType VariableDeclarator Cast MethodInvocation ReturnStatement MemberReference ThreadContext IRubyObject int Block DynamicScope scope MethodInvocation arg isNil StatementExpression ReturnStatement Ruby runtime MethodInvocation RubyString str MethodInvocation < MethodInvocation Literal StatementExpression ReturnStatement IRubyObject backref MethodInvocation ReferenceType MemberReference block isGiven MethodInvocation backref context getCurrentScope MethodInvocation MemberReference context getRuntime MemberReference MemberReference operandCheck MemberReference MemberReference MemberReference matchPos 0 MethodInvocation MethodInvocation scope MemberReference getBackRef RubyMatchData backref block MemberReference MemberReference yield scope MemberReference setBackRef arg runtime arg context str pos scope MethodInvocation setBackRef runtime getNil runtime context backref arg runtime getNil	1
MethodDeclaration Modifier ReferenceType yieldSpecific FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType context ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 ReferenceType binding ReferenceType type MethodInvocation ThreadContext IRubyObject IRubyObject IRubyObject Binding Block ReferenceType MemberReference MethodInvocation Literal Literal Literal MemberReference MemberReference yield Type context context MethodInvocation getRuntime null null true binding type MemberReference MemberReference MemberReference newArrayNoCopyLight arg0 arg1 arg2	0
MethodDeclaration Modifier ReferenceType getProcessorFor FormalParameter FormalParameter ReturnStatement public AnnotationProcessor ReferenceType atds ReferenceType env ClassCreator Set TypeArgument AnnotationProcessorEnvironment ReferenceType MemberReference ReferenceType AnnotationBindingProcessor env AnnotationTypeDeclaration	0
MethodDeclaration Modifier ReferenceType childNodes ReturnStatement public List TypeArgument TernaryExpression ReferenceType BinaryOperation MethodInvocation MethodInvocation Node != MemberReference Literal MemberReference MemberReference createList MemberReference createList iterNode null argsNode iterNode argsNode	0
MethodDeclaration Modifier BasicType formatHasFloatingPointNotation FormalParameter ReturnStatement static public boolean ReferenceType format MethodInvocation String format Literal endsWith "F"	0
MethodDeclaration Modifier ReferenceType checkEncoding FormalParameter LocalVariableDeclaration IfStatement ReturnStatement final Encoding ReferenceType other ReferenceType VariableDeclarator BinaryOperation ThrowStatement MemberReference RubyString Encoding enc MethodInvocation == MemberReference Literal MethodInvocation enc MemberReference isCompatibleWith enc null MethodInvocation getRuntime other BinaryOperation newEncodingCompatibilityError + BinaryOperation MemberReference + BinaryOperation Literal other.value encoding + Literal MemberReference " and " "incompatible character encodings: " value encoding	1
MethodDeclaration Modifier Annotation ReferenceType chr19 FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement LocalVariableDeclaration StatementExpression StatementExpression ReturnStatement public JRubyMethod ElementValuePair ElementValuePair RubyString ReferenceType context ReferenceType arg ReferenceType VariableDeclarator BasicType VariableDeclarator ReferenceType VariableDeclarator BasicType VariableDeclarator BinaryOperation BlockStatement ReferenceType VariableDeclarator MethodInvocation Assignment MethodInvocation name Literal compat MemberReference ThreadContext IRubyObject Ruby runtime MethodInvocation long value MethodInvocation Encoding enc MethodInvocation int n || BinaryOperation BinaryOperation ThrowStatement ByteList bytes ClassCreator enc Cast MemberReference Literal codeToMbc MemberReference MemberReference = RubyString MemberReference MemberReference MemberReference Literal newStringNoCopy "chr" CompatVersion RUBY1_9 context getRuntime getLongValue arg MethodInvocation convertToString < MemberReference Literal <= Assignment Literal MethodInvocation ReferenceType MemberReference BasicType MemberReference bytes bytes 0 bytes realSize n runtime bytes enc 0 MemberReference toEncoding value 0 MemberReference MethodInvocation = 0 runtime BinaryOperation newRangeError ByteList n int value runtime n StringSupport MemberReference MemberReference Cast codeLength + This Literal runtime enc BasicType MemberReference MethodInvocation " out of char range" int value toString	1
MethodDeclaration Modifier Annotation assign FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression StatementExpression public Override ReferenceType runtime ReferenceType context ReferenceType self ReferenceType value1 ReferenceType value2 ReferenceType block MethodInvocation MethodInvocation MethodInvocation Ruby ThreadContext IRubyObject IRubyObject IRubyObject Block parameter1 MemberReference MemberReference MemberReference MemberReference MemberReference Literal assign parameter2 MemberReference MemberReference MemberReference MemberReference MemberReference Literal assign parameter3 MemberReference MemberReference MemberReference MethodInvocation MemberReference Literal assign runtime context self value1 block false runtime context self value2 block false runtime context self runtime getNil block false	0
MethodDeclaration Modifier Annotation ReferenceType pos ReturnStatement public JRubyMethod ElementValuePair IRubyObject MethodInvocation name Literal MethodInvocation getRuntime "pos" getNil	0
MethodDeclaration Modifier Annotation loadBlock StatementExpression StatementExpression public Override MethodInvocation MethodInvocation loadThreadContext Literal MethodInvocation invokeThreadContext "getFrameBlock" ClassReference sig ReferenceType Block	0
MethodDeclaration Modifier ReferenceType getExceptionTypes ReturnStatement public Class TypeArgument MethodInvocation ? m getExceptionTypes	0
MethodDeclaration Modifier ReferenceType parseShebangOptions FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement TryStatement ReturnStatement private String ReferenceType in ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation ReturnStatement StatementExpression StatementExpression LocalVariableDeclaration LocalVariableDeclaration IfStatement CatchClause TryStatement MemberReference InputStream BufferedReader reader Literal String result ArrayCreator == MemberReference Literal MemberReference MethodInvocation Assignment ReferenceType VariableDeclarator BasicType VariableDeclarator BinaryOperation BlockStatement CatchClauseParameter StatementExpression CatchClause result null ReferenceType Literal in null result in Literal mark MemberReference ClassCreator = String firstLine MethodInvocation boolean usesEnv Literal && BinaryOperation BinaryOperation LocalVariableDeclaration LocalVariableDeclaration ForStatement StatementExpression Exception ex MethodInvocation CatchClauseParameter String 0 1024 reader ReferenceType ClassCreator Literal reader readLine false && BinaryOperation BinaryOperation == MethodInvocation Literal ReferenceType VariableDeclarator BasicType VariableDeclarator ForControl BlockStatement MethodInvocation in reset IOException ex BufferedReader ReferenceType MemberReference Literal 8192 > MethodInvocation Literal == MethodInvocation Literal firstLine Literal charAt '!' String options MethodInvocation int i Assignment BinaryOperation MemberReference IfStatement IfStatement IfStatement LocalVariableDeclaration IfStatement System MemberReference MemberReference MemberReference Literal BinaryOperation arraycopy InputStreamReader in "iso-8859-1" firstLine length 2 firstLine Literal charAt '#' 1 firstLine MethodInvocation Literal substring MemberReference Literal = < MemberReference MemberReference ++ i BinaryOperation BlockStatement BinaryOperation BlockStatement BinaryOperation BlockStatement ReferenceType VariableDeclarator BinaryOperation BlockStatement options i result 0 - MemberReference MemberReference 0 Literal split 2 i 0 i options length && BinaryOperation MemberReference StatementExpression ContinueStatement && MemberReference BinaryOperation ContinueStatement && MemberReference MemberReference ContinueStatement String basename ClassCreator > MethodInvocation Literal BreakStatement options length i "\\s+" == MemberReference Literal ArraySelector MethodInvocation options Assignment usesEnv > MemberReference Literal usesEnv ArraySelector MethodInvocation options MethodInvocation ReferenceType MemberReference basename Literal indexOf 0 i 0 MemberReference Literal endsWith MemberReference Literal = ArraySelector MethodInvocation options 0 MemberReference Literal startsWith getName File ArraySelector options "ruby" i "/env" usesEnv true MemberReference Literal indexOf i "-" MemberReference i '=' i	1
MethodDeclaration Modifier ReferenceType getRegexp FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement final public RubyRegexp ReferenceType runtime BasicType index ReferenceType pattern BasicType options ReferenceType VariableDeclarator BinaryOperation BlockStatement MemberReference Ruby int String int RubyRegexp regexp MemberReference == MemberReference Literal StatementExpression StatementExpression StatementExpression regexp ArraySelector regexps regexp null Assignment MethodInvocation Assignment MemberReference MemberReference MethodInvocation = regexp setLiteral MemberReference MemberReference = index regexp RubyRegexp MemberReference MemberReference MemberReference newRegexp ArraySelector regexps regexp runtime pattern options MemberReference index	0
MethodDeclaration Modifier ReferenceType buildStr FormalParameter FormalParameter ReturnStatement public Operand ReferenceType strNode ReferenceType s ClassCreator StrNode IR_Scope ReferenceType MethodInvocation StringLiteral strNode getValue	1
MethodDeclaration Modifier ReferenceType case464_line1767 FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment Cast MethodInvocation MemberReference Object Object int MemberReference Cast = ReferenceType MemberReference lexer MemberReference setState yyVal yyVal ReferenceType MemberReference ISourcePositionHolder yyVal LexState EXPR_BEG ArgsNode ArraySelector yyVals BinaryOperation + Literal MemberReference - 1 yyTop	1
MethodDeclaration Modifier BasicType retainAll FormalParameter ReturnStatement public boolean ReferenceType collection MethodInvocation Collection map MethodInvocation keySet MemberReference retainAll collection	0
MethodDeclaration Modifier ReferenceType case440_line1702 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference Cast = yyVal yyVal ReferenceType MemberReference Node ArraySelector yyVals BinaryOperation + Literal MemberReference 0 yyTop	1
MethodDeclaration Modifier ReferenceType getCharsetMap IfStatement ReturnStatement public RubyHash BinaryOperation StatementExpression MemberReference == MemberReference Literal Assignment charsetMap charsetMap null MemberReference ClassCreator = charsetMap ReferenceType This RubyHash	1
MethodDeclaration Modifier Annotation ReferenceType map_bang FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType block TernaryExpression name Literal frame Literal ThreadContext Block MethodInvocation MethodInvocation MethodInvocation "map!" true block isGiven MemberReference MemberReference collectBang MethodInvocation This Literal enumeratorize context block context getRuntime "map!"	1
MethodDeclaration Modifier Annotation ReferenceType definition FormalParameter FormalParameter FormalParameter FormalParameter AssertStatement ReturnStatement public Override String ReferenceType runtime ReferenceType context ReferenceType self ReferenceType aBlock Literal Literal Literal Ruby ThreadContext IRubyObject Block false "definition should not ever happen for Colon2ImplicitNode" null	0
MethodDeclaration Modifier ReferenceType getSignature ReturnStatement protected String MethodInvocation StandardASMCompiler MethodInvocation getStaticClosureSignature script getClassname	0
MethodDeclaration Modifier Annotation ReferenceType change_privilege FormalParameter FormalParameter ThrowStatement static public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType self ReferenceType arg MethodInvocation name Literal module Literal IRubyObject IRubyObject self MethodInvocation getRuntime "change_privilege" true Literal newNotImplementedError "Process::UID::change_privilege not implemented yet"	1
MethodDeclaration Modifier ReferenceType convertToJavaArray FormalParameter IfStatement IfStatement ReturnStatement static public IRubyObject ReferenceType value BinaryOperation BlockStatement BinaryOperation BlockStatement ArrayCreator IRubyObject == MemberReference Literal ReturnStatement instanceof MemberReference ReferenceType ReturnStatement ReferenceType ArrayInitializer value null MemberReference value RubyArray Cast IRubyObject MemberReference IRubyObject NULL_ARRAY ReferenceType MemberReference value RubyArray value	0
MethodDeclaration Modifier Annotation ReferenceType getSingletonMethod FormalParameter FormalParameter FormalParameter ReturnStatement public Deprecated Callback ReferenceType method ReferenceType arg1 ReferenceType arg2 ClassCreator String Class Class ReferenceType MemberReference MemberReference ArrayCreator Literal Literal MethodInvocation Literal ReflectionCallback type method ReferenceType ArrayInitializer false true Arity Literal fixed false Class MemberReference MemberReference 2 arg1 arg2	1
MethodDeclaration Modifier ReferenceType getString4 FormalParameter ReturnStatement final public RubyString ReferenceType runtime MethodInvocation Ruby runtimeCache MemberReference Literal getString runtime 4	0
MethodDeclaration Modifier ReferenceType case55_line501 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support Cast Cast Cast Cast new_call ReferenceType MemberReference ReferenceType MemberReference ReferenceType MemberReference ReferenceType MemberReference Node ArraySelector yyVals Token ArraySelector yyVals Node ArraySelector yyVals IterNode ArraySelector yyVals BinaryOperation BinaryOperation BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference + Literal MemberReference + Literal MemberReference - 4 yyTop - 2 yyTop - 1 yyTop 0 yyTop	1
MethodDeclaration Modifier ReferenceType dataGetStructChecked StatementExpression ReturnStatement synchronized public Object MethodInvocation This TypeConverter This checkData MethodInvocation Literal fastGetInternalVariable "__wrap_struct__"	0
MethodDeclaration Modifier ReferenceType remove FormalParameter FormalParameter StatementExpression LocalVariableDeclaration LocalVariableDeclaration IfStatement ReturnStatement public Object BasicType hash ReferenceType key Assignment BasicType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement Literal int Object MemberReference MethodInvocation = int idx MethodInvocation Entry entry MemberReference != MemberReference Literal IfStatement null key MemberReference maskKey MemberReference index ArraySelector table entry null MethodInvocation BlockStatement BlockStatement key hash MemberReference entry MemberReference MemberReference sameKey StatementExpression StatementExpression ReturnStatement LocalVariableDeclaration WhileStatement idx hash key Assignment Assignment MethodInvocation ReferenceType VariableDeclarator BinaryOperation BlockStatement MemberReference MemberReference = MemberReference Literal -= entry getValue Entry ahead MemberReference != MemberReference Literal IfStatement StatementExpression StatementExpression ArraySelector table entry next size 1 entry next ahead null MethodInvocation BlockStatement Assignment Assignment MemberReference ahead MemberReference MemberReference sameKey StatementExpression StatementExpression ReturnStatement MemberReference MemberReference = MemberReference MemberReference = idx hash key Assignment Assignment MethodInvocation entry ahead ahead ahead next MemberReference MemberReference = MemberReference Literal -= ahead getValue entry next ahead next size 1	0
MethodDeclaration Modifier ReferenceType javaToRuby FormalParameter FormalParameter IfStatement static public IRubyObject ReferenceType ruby ReferenceType object BinaryOperation BlockStatement IfStatement Ruby Object == MemberReference Literal ReturnStatement BinaryOperation BlockStatement BlockStatement object null MethodInvocation instanceof MemberReference ReferenceType ReturnStatement ReturnStatement ruby getNil object IRubyObject Cast ClassCreator ReferenceType MemberReference ReferenceType Cast MemberReference IRubyObject object JavaObjectWrapper ReferenceType MethodInvocation object RubyClass MemberReference MethodInvocation getMirrorForClass ruby object getClass	0
MethodDeclaration Modifier BasicType choppedLength LocalVariableDeclaration IfStatement ReturnStatement private int BasicType VariableDeclarator BinaryOperation BlockStatement MemberReference int end BinaryOperation == MemberReference Literal IfStatement end - MemberReference Literal value bytes '\n' BinaryOperation StatementExpression value realSize 1 && BinaryOperation BinaryOperation MemberReference > MemberReference Literal == MemberReference Literal -- end end 0 value bytes '\r'	1
MethodDeclaration Modifier ReferenceType accept FormalParameter ReturnStatement public Object ReferenceType iVisitor MethodInvocation NodeVisitor iVisitor This visitBlockArgNode	0
MethodDeclaration Modifier Annotation ReferenceType interpret FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public Override IRubyObject ReferenceType runtime ReferenceType context ReferenceType self ReferenceType aBlock MethodInvocation Ruby ThreadContext IRubyObject Block callAdapter MemberReference MemberReference MemberReference MethodInvocation MethodInvocation call context self self arg1 MemberReference MemberReference MemberReference MemberReference interpret arg2 MemberReference MemberReference MemberReference MemberReference interpret runtime context self aBlock runtime context self aBlock	0
MethodDeclaration Modifier ReferenceType case216_line869 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support Cast Literal Cast MethodInvocation getOperatorCallNode ReferenceType MemberReference "===" ReferenceType MemberReference getPosition Node ArraySelector yyVals Node ArraySelector yyVals BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference - 2 yyTop 0 yyTop	1
MethodDeclaration Modifier Annotation BasicType constantTableContains FormalParameter ReturnStatement protected Override boolean ReferenceType name MethodInvocation String delegate MemberReference constantTableContains name	0
MethodDeclaration Modifier ReferenceType case7_line314 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support Cast MethodInvocation appendToBlock ReferenceType MemberReference support Cast MethodInvocation newline_node Node ArraySelector yyVals ReferenceType MemberReference Cast getPosition BinaryOperation Node ArraySelector yyVals ReferenceType MemberReference + Literal MemberReference BinaryOperation Node ArraySelector yyVals - 2 yyTop + Literal MemberReference BinaryOperation 0 yyTop + Literal MemberReference 0 yyTop	1
MethodDeclaration Modifier includeModule FormalParameter AssertStatement StatementExpression IfStatement IfStatement LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression synchronized public ReferenceType arg BinaryOperation MethodInvocation MethodInvocation BlockStatement BinaryOperation BlockStatement ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation IRubyObject != MemberReference Literal Literal testFrozen ! isTaint StatementExpression instanceof MemberReference ReferenceType ThrowStatement RubyModule module Cast MemberReference checkForCyclicInclude MemberReference infectBy MemberReference doIncludeModule invalidateConstantCache invalidateCacheDescendants arg null "module" MethodInvocation arg RubyModule MethodInvocation ReferenceType MemberReference module module module MethodInvocation getRuntime MethodInvocation getRuntime RubyModule arg Literal secure BinaryOperation newTypeError 4 + BinaryOperation Literal + Literal MethodInvocation " (expected Module)." "Wrong argument type " arg MethodInvocation getMetaClass getName	1
MethodDeclaration Modifier ReferenceType childNodes ReturnStatement public List TypeArgument MethodInvocation ReferenceType Node MemberReference MemberReference createList Node firstNode secondNode	0
MethodDeclaration Modifier ReferenceType putc FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement static public IRubyObject ReferenceType context ReferenceType maybeIO ReferenceType object BasicType VariableDeclarator BinaryOperation BlockStatement BlockStatement MemberReference ThreadContext IRubyObject IRubyObject int c MethodInvocation instanceof MemberReference ReferenceType LocalVariableDeclaration TryStatement StatementExpression object RubyNumeric MemberReference num2chr maybeIO RubyIO ReferenceType VariableDeclarator LocalVariableDeclaration StatementExpression LocalVariableDeclaration StatementExpression IfStatement CatchClause CatchClause CatchClause CatchClause MethodInvocation object RubyIO io Cast ReferenceType VariableDeclarator MethodInvocation ReferenceType VariableDeclarator MethodInvocation MethodInvocation StatementExpression CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement maybeIO MemberReference Literal MethodInvocation callMethod ReferenceType MemberReference OpenFile myOpenFile MethodInvocation myOpenFile MethodInvocation checkWritable Stream writeStream MethodInvocation writeStream MethodInvocation fputc myOpenFile isSync MethodInvocation IOException ex MethodInvocation BadDescriptorException e MethodInvocation InvalidValueException ex MethodInvocation PipeException ex MethodInvocation context "write" RubyString MethodInvocation ArrayCreator newStringNoCopy RubyIO maybeIO io getOpenFileChecked context getRuntime myOpenFile getWriteStream RubyNumeric MemberReference num2chr myOpenFile MemberReference fflush context MethodInvocation getRuntime context MethodInvocation getRuntime context MethodInvocation getRuntime context MethodInvocation getRuntime context getRuntime BasicType ArrayInitializer object writeStream MemberReference newIOErrorFromException newErrnoEBADFError newErrnoEINVALError newErrnoEPIPEError byte Cast ex BasicType MemberReference byte c	1
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter IfStatement ReturnStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 ReferenceType arg3 ReferenceType arg4 ReferenceType arg5 ReferenceType arg6 ReferenceType arg7 ReferenceType arg8 ReferenceType arg9 ReferenceType block BinaryOperation BlockStatement MethodInvocation ThreadContext IRubyObject RubyModule String IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject Block >= MemberReference Literal ReturnStatement box.actualMethod MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference call box callCount 0 MethodInvocation context self clazz name arg0 arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8 arg9 block MethodInvocation MemberReference MemberReference tryJitReturnMethod MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference call context name context self clazz name arg0 arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8 arg9 block	0
MethodDeclaration Modifier ReferenceType virtualMethod ReturnStatement public String Literal "base"	0
MethodDeclaration Modifier BasicType isVerbose ReturnStatement public boolean MethodInvocation runtime isVerbose	0
MethodDeclaration Modifier call FormalParameter LocalVariableDeclaration IfStatement public ReferenceType context ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement BodyCompiler Node argsNode MethodInvocation instanceof MemberReference ReferenceType StatementExpression StatementExpression multipleAsgnNode getArgsNode argsNode StarNode MethodInvocation MethodInvocation context consumeCurrentValue MemberReference MemberReference Literal compileAssignment argsNode context false	0
MethodDeclaration Modifier BasicType write FormalParameter IOException BadDescriptorException StatementExpression ReturnStatement public int ReferenceType buffer MethodInvocation MethodInvocation ByteBuffer checkOpen MemberReference internalWrite buffer	0
MethodDeclaration Modifier ReferenceType convert FormalParameter FormalParameter IfStatement ReturnStatement public Object ReferenceType context ReferenceType rubyObject MethodInvocation BlockStatement ClassCreator ThreadContext IRubyObject rubyObject Literal respondsTo ReturnStatement ReferenceType Cast "to_i" ClassCreator Character BasicType Literal ReferenceType Cast char 0 Character BasicType Cast char ReferenceType MethodInvocation RubyNumeric rubyObject MemberReference Literal callMethod context "to_i"	1
MethodDeclaration Modifier Annotation ReferenceType op_gt19 FormalParameter FormalParameter IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType other BinaryOperation ReturnStatement MethodInvocation name Literal compat MemberReference ThreadContext IRubyObject instanceof MemberReference ReferenceType MethodInvocation RubyComparable MemberReference This MemberReference op_gt ">" CompatVersion RUBY1_9 other RubyString context MethodInvocation getRuntime context other BinaryOperation newBoolean > MethodInvocation Literal Cast op_cmp19 0 ReferenceType MemberReference RubyString other	1
MethodDeclaration Modifier ReferenceType generate FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression LocalVariableDeclaration LocalVariableDeclaration TryStatement private static JavaProxyClass Modifier ReferenceType loader Modifier ReferenceType targetClassName Modifier ReferenceType superClass Modifier ReferenceType interfaces Modifier ReferenceType methods Modifier ReferenceType selfType ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation BasicType VariableDeclarator ReferenceType VariableDeclarator LocalVariableDeclaration StatementExpression ReturnStatement CatchClause final ClassLoader final String final Class final Class final Map final Type ClassWriter cw MethodInvocation GeneratorAdapter clazzInit MethodInvocation MemberReference MemberReference MemberReference generateConstructors MemberReference MemberReference generateGetProxyClass MemberReference MemberReference generateGetInvocationHandler MemberReference MemberReference MemberReference MemberReference MemberReference generateProxyMethods clazzInit returnValue clazzInit endMethod cw visitEnd byte data MethodInvocation Class clazz MethodInvocation ReferenceType VariableDeclarator MethodInvocation Cast CatchClauseParameter LocalVariableDeclaration StatementExpression ThrowStatement MemberReference MemberReference MemberReference beginProxyClass MemberReference MemberReference createClassInitializer superClass selfType cw selfType cw selfType cw superClass methods selfType cw clazzInit cw toByteArray MemberReference MethodInvocation MemberReference invokeDefineClass Field proxy_class MethodInvocation proxy_class Literal setAccessible ReferenceType MethodInvocation Exception ex ReferenceType VariableDeclarator MethodInvocation MemberReference targetClassName superClass interfaces selfType cw loader selfType getClassName data clazz MemberReference getDeclaredField true JavaProxyClass proxy_class MemberReference get InternalError ie ClassCreator ie MemberReference initCause ie PROXY_CLASS_FIELD_NAME clazz ReferenceType ex InternalError	1
MethodDeclaration Modifier Annotation ReferenceType initialize19 FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType superObject ReferenceType block MethodInvocation MethodInvocation MethodInvocation name Literal compat MemberReference frame Literal visibility MemberReference ThreadContext IRubyObject Block checkNotInitialized MemberReference checkInheritable Cast MemberReference Literal initializeCommon "initialize" CompatVersion RUBY1_9 true Visibility PRIVATE superObject ReferenceType MemberReference block true RubyClass superObject	0
MethodDeclaration Modifier Annotation ReferenceType to_s FormalParameter LocalVariableDeclaration IfStatement IfStatement IfStatement IfStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType args ReferenceType VariableDeclarator MethodInvocation BlockStatement BinaryOperation BlockStatement MethodInvocation BlockStatement MethodInvocation BlockStatement BlockStatement name Literal optional Literal IRubyObject String arg MethodInvocation isNaN ReturnStatement != MemberReference Literal IfStatement isZero LocalVariableDeclaration IfStatement ReturnStatement MemberReference asEngineering ReturnStatement ReturnStatement "to_s" 1 MemberReference firstArgument MethodInvocation infinitySign 0 BinaryOperation BlockStatement BlockStatement ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation arg MethodInvocation MethodInvocation args MethodInvocation getRuntime == MemberReference Literal ReturnStatement ReturnStatement String zero Literal < MemberReference Literal StatementExpression MethodInvocation getRuntime MemberReference engineeringValue MemberReference floatingPointValue Literal newString infinitySign - 1 MethodInvocation MethodInvocation "0.0" zeroSign 0 Assignment MemberReference newString arg arg "NaN" MethodInvocation getRuntime MethodInvocation getRuntime MemberReference BinaryOperation = zero Literal newString Literal newString zero + Literal MemberReference "-Infinity" "Infinity" "-" zero	1
MethodDeclaration Modifier ReferenceType createRubyHybridBacktrace FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration ForStatement ReturnStatement static public IRubyObject ReferenceType runtime ReferenceType backtraceFrames ReferenceType stackTrace BasicType debug ReferenceType VariableDeclarator ReferenceType VariableDeclarator BasicType VariableDeclarator ForControl BlockStatement MemberReference Ruby RubyStackTraceElement RubyStackTraceElement boolean RubyArray traceArray MethodInvocation ThreadContext context MethodInvocation int rubyFrameIndex BinaryOperation VariableDeclaration BinaryOperation MemberReference LocalVariableDeclaration LocalVariableDeclaration IfStatement IfStatement StatementExpression IfStatement StatementExpression IfStatement LocalVariableDeclaration LocalVariableDeclaration IfStatement traceArray RubyArray MemberReference newArray runtime getCurrentContext - MemberReference Literal BasicType VariableDeclarator < MemberReference MemberReference ++ i ReferenceType VariableDeclarator BasicType VariableDeclarator BinaryOperation BlockStatement MethodInvocation BlockStatement Assignment BinaryOperation BlockStatement Assignment BinaryOperation BlockStatement ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement runtime backtraceFrames length 1 int i Literal i stackTrace length RubyStackTraceElement element MemberReference int index MethodInvocation >= MemberReference Literal LocalVariableDeclaration LocalVariableDeclaration StatementExpression IfStatement ContinueStatement element MethodInvocation getMethodName LocalVariableDeclaration StatementExpression StatementExpression ContinueStatement MemberReference MethodInvocation = >= MemberReference Literal LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression ContinueStatement MemberReference MethodInvocation = >= MemberReference Literal StatementExpression StatementExpression ContinueStatement String classMethod BinaryOperation FrameType frameType MethodInvocation != MemberReference Literal IfStatement ContinueStatement IfStatement ContinueStatement 0 ArraySelector stackTrace element MethodInvocation getMethodName index 0 ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation BinaryOperation BlockStatement Literal equals ReferenceType VariableDeclarator MethodInvocation MemberReference index element MethodInvocation getClassName index 0 ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation index element MethodInvocation getClassName index 0 MethodInvocation MemberReference + BinaryOperation MethodInvocation INTERPRETED_FRAMES MemberReference get frameType null BinaryOperation BlockStatement BlockStatement MemberReference BlockStatement MemberReference Literal indexOf String unmangledMethod MethodInvocation RubyString str MethodInvocation traceArray MemberReference append || MethodInvocation MethodInvocation StatementExpression "__file__" RubyString str MethodInvocation traceArray MemberReference append -- rubyFrameIndex Literal indexOf String unmangledMethod MethodInvocation Frame current MemberReference RubyString str MethodInvocation traceArray MemberReference append Literal indexOf MemberReference MemberReference MemberReference MemberReference addBackTraceElement -- rubyFrameIndex + MethodInvocation Literal element getMethodName classMethod == MemberReference Literal StatementExpression StatementExpression StatementExpression debug LocalVariableDeclaration StatementExpression i "$RUBY$" element MethodInvocation getMethodName RubyString MemberReference BinaryOperation newString str element MethodInvocation getMethodName element MethodInvocation getMethodName MemberReference RubyString MemberReference BinaryOperation newString str "$RUBYINVOKER$" element MethodInvocation getClassName context ArraySelector frameStack RubyString MemberReference BinaryOperation newString str "$RUBYFRAMEDINVOKER$" traceArray ArraySelector backtraceFrames ArraySelector backtraceFrames FrameType METHOD element getClassName "." rubyFrameIndex 0 MethodInvocation MethodInvocation MemberReference ReferenceType VariableDeclarator MethodInvocation BinaryOperation substring runtime + BinaryOperation Literal Literal contains Literal contains -- rubyFrameIndex runtime + BinaryOperation Literal BinaryOperation substring MemberReference runtime + BinaryOperation Literal MemberReference BinaryOperation MemberReference MemberReference MemberReference MemberReference addBackTraceElement MemberReference MemberReference MemberReference MemberReference addBackTraceElement -- rubyFrameIndex RubyString str MethodInvocation traceArray MemberReference append + MemberReference Literal + BinaryOperation MemberReference "'" "__rescue__" "__ensure__" + BinaryOperation MethodInvocation ": `<toplevel>'" + MemberReference Literal rubyFrameIndex + BinaryOperation MemberReference "'" rubyFrameIndex - MemberReference Literal traceArray ArraySelector backtraceFrames ArraySelector backtraceFrames frameType traceArray ArraySelector backtraceFrames ArraySelector backtraceFrames frameType RubyString MemberReference MethodInvocation newString str index 6 + BinaryOperation Literal unmangledMethod + MethodInvocation Literal element getLineNumber index 13 + BinaryOperation Literal unmangledMethod rubyFrameIndex 1 MemberReference MemberReference MemberReference BinaryOperation runtime MethodInvocation createRubyBacktraceString + BinaryOperation MethodInvocation ":in `" element getFileName ":" + BinaryOperation BinaryOperation ":in `" rubyFrameIndex rubyFrameIndex rubyFrameIndex - MemberReference Literal element getElement + MethodInvocation Literal element getLineNumber + MethodInvocation Literal + MethodInvocation Literal rubyFrameIndex 1 element getFileName ":" current getFile ":" current getLine 1	1
MethodDeclaration Modifier Annotation ReferenceType rewind FormalParameter LocalVariableDeclaration TryStatement StatementExpression ReturnStatement public JRubyMethod ElementValuePair RubyFixnum ReferenceType context ReferenceType VariableDeclarator StatementExpression StatementExpression CatchClause CatchClause CatchClause CatchClause MethodInvocation MethodInvocation name Literal ThreadContext OpenFile myOpenfile MethodInvocation MethodInvocation MethodInvocation CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement myOpenfile Literal setLineNumber RubyFixnum MethodInvocation zero "rewind" getOpenFileChecked myOpenfile MethodInvocation getMainStream myOpenfile MethodInvocation getMainStream BadDescriptorException e MethodInvocation InvalidValueException e MethodInvocation PipeException e MethodInvocation IOException e MethodInvocation 0 context getRuntime Literal MemberReference lseek clearerr context MethodInvocation getRuntime context MethodInvocation getRuntime context MethodInvocation getRuntime context MethodInvocation getRuntime 0L Stream SEEK_SET newErrnoEBADFError newErrnoEINVALError newErrnoESPIPEError MethodInvocation newIOError e getMessage	1
MethodDeclaration Modifier Annotation ReferenceType choice19 FormalParameter IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context BinaryOperation BlockStatement MethodInvocation name Literal compat MemberReference ThreadContext == MemberReference Literal ThrowStatement MemberReference choiceCommon "choice" CompatVersion RUBY1_9 realLength 0 MethodInvocation context context MethodInvocation getRuntime Literal Literal MethodInvocation newNoMethodError "undefined method 'choice' for []:Array" null context MethodInvocation getRuntime getNil	0
MethodDeclaration Modifier cachedSetVariable FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression LocalVariableDeclaration IfStatement public ReferenceType method ReferenceType name ReferenceType valueCallback MethodInvocation MethodInvocation BasicType VariableDeclarator BinaryOperation BlockStatement BlockStatement BaseBodyCompiler String CompilerCallback method loadThis method loadRuntime int index MemberReference < MemberReference MemberReference StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression ++ inheritedVariableWriterCount index AbstractScript NUMBERED_VARIABLEWRITER_COUNT MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation method.method MemberReference ldc method loadSelf valueCallback MemberReference call method.method MethodInvocation BinaryOperation MethodInvocation invokevirtual method.method MemberReference pushInt method.method MemberReference ldc method loadSelf valueCallback MemberReference call method.method MethodInvocation Literal MethodInvocation invokevirtual name method scriptCompiler getClassname + Literal MemberReference ClassReference ClassReference ClassReference ClassReference ClassReference sig index name method scriptCompiler getClassname "setVariable" ClassReference ClassReference ClassReference ClassReference ClassReference ClassReference sig "setVariable" index ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType BasicType ReferenceType ReferenceType ReferenceType IRubyObject Ruby String IRubyObject IRubyObject IRubyObject Ruby int String IRubyObject IRubyObject	0
MethodDeclaration Modifier Annotation ReferenceType run ReturnStatement synchronized public JRubyMethod ElementValuePair IRubyObject MethodInvocation name Literal wakeup "run"	0
MethodDeclaration Modifier Annotation BasicType getNativeTypeIndex ReturnStatement public Override int MemberReference ClassIndex ARRAY	0
MethodDeclaration Modifier Annotation ReferenceType to_s FormalParameter LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression IfStatement StatementExpression ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context BasicType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation StatementExpression MethodInvocation MemberReference name Literal ThreadContext boolean impos MethodInvocation RubyString str MethodInvocation str TernaryExpression cat str MethodInvocation cat ! MemberReference lastCharDigit MethodInvocation str Cast cat str "to_s" MemberReference MemberReference tpositive_p MethodInvocation MemberReference MemberReference f_to_s MemberReference Cast Cast MethodInvocation MethodInvocation MemberReference MethodInvocation f_to_s str str Cast cat BasicType Literal context image convertToString context real impos BasicType Literal BasicType Literal convertToString getByteList context MemberReference MemberReference f_abs BasicType Literal byte 'i' byte '+' byte '-' context image byte '*'	1
MethodDeclaration Modifier ReferenceType convert FormalParameter FormalParameter IfStatement ReturnStatement public IRubyObject ReferenceType runtime ReferenceType object BinaryOperation ReturnStatement MethodInvocation Ruby Object == MemberReference Literal MethodInvocation RubyBoolean MemberReference Cast newBoolean object null runtime getNil runtime ReferenceType MemberReference Boolean object	1
MethodDeclaration Modifier ReferenceType getByName FormalParameter LocalVariableDeclaration AssertStatement ForStatement ThrowStatement private IRubyObject ReferenceType name ReferenceType VariableDeclarator MethodInvocation Literal ForControl BlockStatement MethodInvocation String RubyArray member Cast ! member isNil "uninitialized struct" VariableDeclaration BinaryOperation MemberReference IfStatement MemberReference notStructMemberError ReferenceType MethodInvocation BasicType VariableDeclarator VariableDeclarator < MemberReference MemberReference ++ i MethodInvocation BlockStatement name RubyArray MethodInvocation Literal getInternalVariable int i Literal k MethodInvocation i k member MethodInvocation MethodInvocation MemberReference eltInternal ReturnStatement classOf "__member__" 0 member getLength asJavaString MemberReference equals i MemberReference name ArraySelector values MemberReference i	0
MethodDeclaration Modifier BasicType asBoolean FormalParameter IfStatement protected boolean ReferenceType val BinaryOperation BlockStatement IfStatement IRubyObject instanceof MemberReference ReferenceType ReturnStatement BinaryOperation BlockStatement BlockStatement val RubyString BinaryOperation instanceof MemberReference ReferenceType ReturnStatement ReturnStatement != MethodInvocation Literal val RubyNumeric BinaryOperation MethodInvocation MemberReference stringAsNumber 0 != MethodInvocation Literal val isTrue val RubyNumeric MemberReference fix2int 0 val	0
MethodDeclaration Modifier Annotation ReferenceType to_a StatementExpression ReturnStatement public JRubyMethod ElementValuePair ElementValuePair RubyArray MethodInvocation MethodInvocation name Literal visibility MemberReference MethodInvocation MethodInvocation getRuntime MethodInvocation getRuntime "to_a" Visibility PUBLIC getWarnings MemberReference Literal Literal warn This newArray ID DEPRECATED_METHOD "default 'to_a' will be obsolete" "to_a"	1
MethodDeclaration Modifier setVisibility FormalParameter FormalParameter FormalParameter IfStatement IfStatement private ReferenceType context ReferenceType args ReferenceType visibility BinaryOperation BlockStatement BinaryOperation BlockStatement BlockStatement ThreadContext IRubyObject Visibility && BinaryOperation MethodInvocation ThrowStatement == MemberReference Literal StatementExpression StatementExpression >= MethodInvocation Literal ! isTaint MethodInvocation args length 0 MethodInvocation MethodInvocation context MethodInvocation getRuntime 4 context MethodInvocation getRuntime context MemberReference setCurrentVisibility MemberReference MemberReference setMethodVisibility getSafeLevel Literal newSecurityError visibility args visibility "Insecure: can't change method visibility"	0
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public IRubyObject ReferenceType context ReferenceType largs ReferenceType blk MethodInvocation MethodInvocation ThreadContext IRubyObject Block result MethodInvocation append runtime getNil MemberReference MemberReference checkArgs runtime largs	0
MethodDeclaration Modifier BasicType getInt FormalParameter ReturnStatement static public int ReferenceType property MethodInvocation String MemberReference Literal getInt property 0	0
MethodDeclaration Modifier Annotation ReferenceType each18 FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType block TernaryExpression name Literal frame Literal compat MemberReference ThreadContext Block MethodInvocation MethodInvocation MethodInvocation "each" true CompatVersion RUBY1_8 block isGiven MemberReference MemberReference each_line MethodInvocation This Literal enumeratorize context block context getRuntime "each"	0
MethodDeclaration Modifier ReferenceType unwrap ReturnStatement public Object MethodInvocation getObject	0
MethodDeclaration Modifier ReferenceType getSignalFacade TryStatement private static final SignalFacade LocalVariableDeclaration ReturnStatement CatchClause ReferenceType VariableDeclarator Cast CatchClauseParameter ReturnStatement Class realFacadeClass MethodInvocation ReferenceType MethodInvocation Throwable e ClassCreator Class Literal forName SignalFacade realFacadeClass newInstance ReferenceType "org.jruby.util.SunSignalFacade" NoFunctionalitySignalFacade	1
MethodDeclaration Modifier prepareRestArg FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter IfStatement protected ReferenceType context ReferenceType runtime ReferenceType scope ReferenceType args BasicType givenArgsCount BinaryOperation BlockStatement ThreadContext Ruby DynamicScope IRubyObject int >= MemberReference Literal LocalVariableDeclaration IfStatement restArg 0 BasicType VariableDeclarator BinaryOperation BlockStatement BlockStatement int sizeOfRestArg BinaryOperation <= MemberReference Literal StatementExpression StatementExpression - BinaryOperation MemberReference sizeOfRestArg 0 MethodInvocation MethodInvocation - MemberReference MemberReference givenArgsCount scope MemberReference MethodInvocation Literal setValue scope MemberReference MethodInvocation Literal setValue args length postCount restArg RubyArray MemberReference newArray 0 restArg RubyArray MemberReference MemberReference MemberReference MemberReference newArrayNoCopy 0 runtime runtime args givenArgsCount sizeOfRestArg	0
MethodDeclaration Modifier pumpInput FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement LocalVariableDeclaration LocalVariableDeclaration IfStatement IfStatement StatementExpression StatementExpression StatementExpression private ReferenceType child ReferenceType runtime ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement BinaryOperation BlockStatement BlockStatement MethodInvocation Assignment Assignment Process Ruby InputStream childIn MethodInvocation FileChannel childInChannel Literal instanceof MemberReference ReferenceType StatementExpression OutputStream parentOut MethodInvocation FileChannel parentOutChannel Literal instanceof MemberReference ReferenceType StatementExpression && BinaryOperation BinaryOperation StatementExpression StatementExpression inputPumper start MemberReference Literal = MemberReference Literal = MethodInvocation unwrapBufferedStream null childIn FileInputStream Assignment MethodInvocation unwrapBufferedStream null parentOut FileOutputStream Assignment != MemberReference Literal != MemberReference Literal Assignment Assignment input null inputChannel null child getInputStream MemberReference Cast = runtime getOut MemberReference Cast = childInChannel null parentOutChannel null MemberReference ClassCreator = MemberReference ClassCreator = childInChannel ReferenceType MemberReference parentOutChannel ReferenceType MemberReference inputPumper ReferenceType MemberReference MemberReference MemberReference This inputPumper ReferenceType MemberReference MemberReference Literal MemberReference This FileInputStream childIn FileOutputStream parentOut ChannelPumper childInChannel parentOutChannel Pumper.Slave IN StreamPumper childIn parentOut false Pumper.Slave IN	1
MethodDeclaration Modifier ReferenceType case381_line1439 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support Cast ClassCreator Cast Literal new_call ReferenceType MemberReference ReferenceType Literal Cast ReferenceType MemberReference null Node ArraySelector yyVals Token "call" ReferenceType MemberReference Node ArraySelector yyVals BinaryOperation Node ArraySelector yyVals BinaryOperation + Literal MemberReference BinaryOperation + Literal MemberReference - 2 yyTop + Literal MemberReference 0 yyTop - 2 yyTop	1
MethodDeclaration Modifier Annotation ReferenceType respond_to_p FormalParameter FormalParameter LocalVariableDeclaration ReturnStatement public JRubyMethod ElementValuePair RubyBoolean ReferenceType mname ReferenceType includePrivate ReferenceType VariableDeclarator MethodInvocation name Literal IRubyObject IRubyObject String name MethodInvocation MethodInvocation getRuntime "respond_to?" mname asJavaString MethodInvocation newBoolean MethodInvocation getMetaClass MemberReference MethodInvocation isMethodBound name ! includePrivate isTrue	1
MethodDeclaration Modifier Annotation ReferenceType first FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration TryStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType arg Modifier ReferenceType VariableDeclarator Modifier BasicType VariableDeclarator Modifier ReferenceType VariableDeclarator StatementExpression CatchClause MemberReference name Literal compat MemberReference ThreadContext IRubyObject final Ruby runtime MethodInvocation final int num MethodInvocation final RubyArray result MethodInvocation MethodInvocation CatchClauseParameter result "first" CompatVersion RUBY1_9 context getRuntime RubyNumeric MemberReference num2int runtime MemberReference newArray RubyEnumerable MemberReference MemberReference This ClassCreator callEach JumpException.SpecialJump sj arg num runtime context ReferenceType FieldDeclaration MethodDeclaration BlockCallback BasicType VariableDeclarator Modifier ReferenceType call FormalParameter FormalParameter FormalParameter IfStatement StatementExpression ReturnStatement int n MemberReference public IRubyObject ReferenceType ctx ReferenceType largs ReferenceType blk BinaryOperation ThrowStatement MethodInvocation MethodInvocation num ThreadContext IRubyObject Block <= MemberReference Literal MemberReference result MemberReference append runtime getNil -- n 0 JumpException SPECIAL_JUMP ArraySelector largs Literal 0	1
MethodDeclaration Modifier Annotation ReferenceType op_uminus ReturnStatement public JRubyMethod ElementValuePair IRubyObject MethodInvocation name Literal MethodInvocation MethodInvocation bignorm "-@" getRuntime value negate	1
MethodDeclaration Modifier ReferenceType remove FormalParameter IfStatement ReturnStatement public Object ReferenceType name MemberReference BlockStatement IfStatement MethodInvocation String USE_PACKED_ARRAY IfStatement MemberReference BlockStatement MemberReference hashRemove BinaryOperation ReturnStatement USE_PACKED_FIELDS IfStatement name != MemberReference Literal MethodInvocation BinaryOperation ReturnStatement packedVTable null MemberReference packedRemove != MemberReference Literal MethodInvocation name packedVFields null packedVFields MemberReference remove name	1
MethodDeclaration /** *    public Operand buildPostExe(Node node, IR_Scope m) { *        final PostExeNode postExeNode = (PostExeNode) node; * *        // create the closure class and instantiate it *        final CompilerCallback closureBody = new CompilerCallback() { * *                    public void call(IR_Scope m) { *                        if (postExeNode.getBodyNode() != null) { *                            build(postExeNode.getBodyNode(), m, true); *                        } else { *                            m.loadNil(); *                        } *                    } *                }; *        m.createNewEndBlock(closureBody); *    } * *    public Operand buildPreExe(Node node, IR_Scope m) { *        final PreExeNode preExeNode = (PreExeNode) node; * *        // create the closure class and instantiate it *        final CompilerCallback closureBody = new CompilerCallback() { * *                    public void call(IR_Scope m) { *                        if (preExeNode.getBodyNode() != null) { *                            build(preExeNode.getBodyNode(), m,true); *                        } else { *                            m.loadNil(); *                        } *                    } *                }; *        m.runBeginBlock(preExeNode.getScope(), closureBody); *    } */ Modifier ReferenceType buildRedo FormalParameter FormalParameter StatementExpression ReturnStatement public Operand ReferenceType node ReferenceType s MethodInvocation MemberReference Node IR_Scope s ClassCreator addInstr Nil NIL ReferenceType TernaryExpression JUMP_Instr BinaryOperation Cast MethodInvocation instanceof MemberReference ReferenceType ReferenceType MemberReference s MemberReference getCurrentLoop s IR_Closure IR_Closure s _iterStartLabel	1
MethodDeclaration Modifier ReferenceType getJRubyHome ReturnStatement public String MethodInvocation ruby MethodInvocation MethodInvocation get getInstanceConfig getJRubyHome	0
MethodDeclaration Modifier testPaddingWithoutFormat LocalVariableDeclaration StatementExpression public ReferenceType VariableDeclarator MethodInvocation TimeOutputFormatter formatter MethodInvocation Literal MethodInvocation assertEquals TimeOutputFormatter Literal getFormatter "   up" formatter Literal format "%5H" "up"	0
MethodDeclaration Modifier quit StatementExpression StatementExpression public MethodInvocation Assignment interrupt This Literal = MemberReference true quit	0
MethodDeclaration Modifier ReferenceType newRationalCanonicalize FormalParameter FormalParameter ReturnStatement static IRubyObject ReferenceType context ReferenceType x MethodInvocation ThreadContext IRubyObject MemberReference MemberReference MethodInvocation newRationalCanonicalize context x RubyFixnum MethodInvocation one context getRuntime	0
MethodDeclaration Modifier ReferenceType getValues ReturnStatement public IRubyObject MemberReference variableValues	0
MethodDeclaration Modifier ReferenceType setIntObj FormalParameter ReturnStatement static public String ReferenceType i MethodInvocation Integer String MemberReference valueOf i	0
MethodDeclaration Modifier compileClassVarDecl FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration StatementExpression IfStatement public ReferenceType node ReferenceType context BasicType expr Modifier ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MemberReference StatementExpression Node BodyCompiler boolean final ClassVarDeclNode classVarDeclNode Cast CompilerCallback value ClassCreator context MethodInvocation MemberReference declareClassVariable ! expr MethodInvocation ReferenceType MemberReference ReferenceType MethodDeclaration classVarDeclNode getName value context consumeCurrentValue ClassVarDeclNode node CompilerCallback Modifier call FormalParameter StatementExpression public ReferenceType context MethodInvocation BodyCompiler MethodInvocation MemberReference Literal compile classVarDeclNode getValueNode context true	1
MethodDeclaration Modifier Annotation ReferenceType put_array_of_uint16 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType offset ReferenceType arrParam MethodInvocation This name ElementArrayValue required Literal ThreadContext IRubyObject IRubyObject MemoryUtil MethodInvocation MethodInvocation MethodInvocation MethodInvocation putArrayOfUnsigned16 Literal Literal 2 context getRuntime getMemoryIO MemberReference getOffset MemberReference checkArray "put_array_of_uint16" "put_array_of_ushort" offset arrParam	1
MethodDeclaration Modifier ReferenceType getTypeInstance FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public String BasicType i ReferenceType o ReferenceType o2 ReferenceType o3 Literal double Object Object Object "double,object,object,object"	0
MethodDeclaration Modifier Annotation ReferenceType op_le FormalParameter FormalParameter IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType other BinaryOperation ReturnStatement MethodInvocation name Literal compat MemberReference ThreadContext IRubyObject instanceof MemberReference ReferenceType MethodInvocation MemberReference Literal MemberReference coerceRelOp "<=" CompatVersion RUBY1_8 other RubyFixnum RubyBoolean MethodInvocation BinaryOperation newBoolean context "<=" other context getRuntime <= MemberReference Cast value ReferenceType MemberReference RubyFixnum other	1
MethodDeclaration Modifier Annotation ReferenceType hash ReturnStatement public Override RubyFixnum MethodInvocation MethodInvocation newFixnum hashCode	0
MethodDeclaration Modifier Annotation Annotation ReferenceType op_equal FormalParameter FormalParameter IfStatement SwitchStatement public JRubyMethod ElementValuePair ElementValuePair Override IRubyObject ReferenceType context ReferenceType other MethodInvocation BlockStatement MethodInvocation SwitchStatementCase SwitchStatementCase name Literal required Literal ThreadContext IRubyObject Double MemberReference isNaN ReturnStatement other MemberReference getMetaClass MemberReference MemberReference MemberReference ReturnStatement ReturnStatement "==" 1 value MethodInvocation index ClassIndex FIXNUM ClassIndex BIGNUM ClassIndex FLOAT MethodInvocation SuperMethodInvocation MethodInvocation getRuntime RubyBoolean MethodInvocation BinaryOperation newBoolean MemberReference MemberReference op_num_equal getFalse getRuntime == MemberReference Cast context other value ReferenceType MemberReference RubyNumeric other	0
MethodDeclaration Modifier ReferenceType ppid FormalParameter ReturnStatement static public IRubyObject ReferenceType runtime MethodInvocation Ruby runtime MethodInvocation newFixnum runtime MethodInvocation getPosix getppid	0
MethodDeclaration Modifier ReferenceType newSystemCallError FormalParameter ReturnStatement public RaiseException ReferenceType message MethodInvocation String MethodInvocation MemberReference newRaiseException getSystemCallError message	0
MethodDeclaration Modifier branch FormalParameter StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression public ReferenceType context MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation Modifier ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation BodyCompiler MethodInvocation MemberReference Literal compile context duplicateCurrentValue context metaclass context duplicateCurrentValue context MethodInvocation getVisibilityFor context duplicateCurrentValue final Object isfalse MethodInvocation Object isreal MethodInvocation Object ending MethodInvocation context MemberReference Literal isPrivate context MemberReference Literal isNotProtected context MemberReference selfIsKindOf context consumeCurrentValue context MemberReference go context MemberReference setEnding context MethodInvocation ClassCreator ClassCreator isMethodBound context MemberReference go context MemberReference setEnding context pushNull context MemberReference setEnding iVisited getReceiverNode context true iVisited getName context getNewEnding context getNewEnding context getNewEnding isfalse 3 isreal 1 isreal isfalse isreal iVisited getName ReferenceType MethodDeclaration ReferenceType MethodDeclaration ending isfalse ending BranchCallback Modifier branch FormalParameter StatementExpression BranchCallback Modifier branch FormalParameter StatementExpression public ReferenceType context MethodInvocation public ReferenceType context MethodInvocation BodyCompiler MethodInvocation MemberReference Literal compileGetArgumentDefinition BodyCompiler context MemberReference go iVisited getArgsNode context "assignment" isfalse	0
MethodDeclaration Modifier Annotation ReferenceType owner FormalParameter ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context MemberReference name Literal ThreadContext implementationModule "owner"	0
MethodDeclaration Modifier loadStandardError StatementExpression StatementExpression public MethodInvocation MethodInvocation loadRuntime Literal MethodInvocation invokeRuby "getStandardError" ClassReference sig ReferenceType RubyClass	0
MethodDeclaration Modifier ReferenceType aValueSplat FormalParameter IfStatement LocalVariableDeclaration ReturnStatement static public IRubyObject ReferenceType value BinaryOperation BlockStatement ReferenceType VariableDeclarator TernaryExpression IRubyObject || BinaryOperation BinaryOperation ReturnStatement RubyArray array Cast BinaryOperation MethodInvocation MemberReference instanceof MemberReference ReferenceType == Cast Literal MethodInvocation ReferenceType MemberReference == MethodInvocation Literal array first array value RubyArray ReferenceType MemberReference 0 value MethodInvocation getRuntime RubyArray value array getLength 1 RubyArray value getNil	0
MethodDeclaration Modifier Annotation ReferenceType clear FormalParameter StatementExpression ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context MethodInvocation This name Literal ThreadContext MethodInvocation getMemoryIO "clear" Literal MemberReference Cast setMemory 0 size BasicType Literal byte 0	0
MethodDeclaration Modifier aset FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression protected ReferenceType runtime ReferenceType hash ReferenceType key ReferenceType value MethodInvocation Ruby RubyHash IRubyObject IRubyObject hash MemberReference MemberReference MemberReference fastASetCheckString runtime key value	0
MethodDeclaration Modifier ReferenceType evalSimple FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration ReturnStatement static public IRubyObject ReferenceType context ReferenceType self ReferenceType src ReferenceType file BasicType lineNumber ReferenceType VariableDeclarator MethodInvocation ThreadContext IRubyObject IRubyObject String int RubyString source MethodInvocation MemberReference MemberReference MemberReference MemberReference MemberReference evalSimple src convertToString context self source file lineNumber	1
MethodDeclaration Modifier ReferenceType getPattern ReturnStatement public RubyRegexp MemberReference pattern	0
MethodDeclaration Modifier Annotation ReferenceType insert19 FormalParameter StatementExpression ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType args MethodInvocation MethodInvocation name Literal required Literal rest Literal compat MemberReference IRubyObject modifyCheck MemberReference insert "insert" 1 true CompatVersion RUBY1_9 args	0
MethodDeclaration Modifier Annotation ReferenceType sub FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression ReturnStatement public Deprecated IRubyObject ReferenceType context ReferenceType args ReferenceType block ReferenceType VariableDeclarator MethodInvocation MemberReference ThreadContext IRubyObject Block RubyString str MethodInvocation str MemberReference MemberReference MemberReference sub_bang str MethodInvocation strDup context args block context getRuntime	1
MethodDeclaration Modifier ReferenceType newRegexp FormalParameter FormalParameter ReturnStatement static public RubyRegexp ReferenceType runtime ReferenceType pattern ClassCreator Ruby ByteList ReferenceType MemberReference MemberReference RubyRegexp runtime pattern	0
MethodDeclaration Modifier Annotation ReferenceType any_p FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration TryStatement ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType self Modifier ReferenceType block Modifier ReferenceType VariableDeclarator Modifier ReferenceType VariableDeclarator IfStatement CatchClause MethodInvocation name Literal frame Literal ThreadContext IRubyObject final Block final Ruby runtime MethodInvocation final ThreadContext localContext MemberReference MethodInvocation BlockStatement BlockStatement CatchClauseParameter ReturnStatement runtime getFalse "any?" true context getRuntime context block isGiven StatementExpression StatementExpression JumpException.SpecialJump sj MethodInvocation MethodInvocation MethodInvocation runtime getTrue MemberReference MemberReference MemberReference ClassCreator callEach MemberReference MemberReference MemberReference ClassCreator callEach runtime context self ReferenceType MethodDeclaration runtime context self ReferenceType MethodDeclaration BlockCallback Modifier ReferenceType call FormalParameter FormalParameter FormalParameter StatementExpression LocalVariableDeclaration IfStatement ReturnStatement BlockCallback Modifier ReferenceType call FormalParameter FormalParameter FormalParameter StatementExpression LocalVariableDeclaration IfStatement ReturnStatement public IRubyObject ReferenceType ctx ReferenceType largs ReferenceType blk MethodInvocation ReferenceType VariableDeclarator MethodInvocation BlockStatement MethodInvocation public IRubyObject ReferenceType ctx ReferenceType largs ReferenceType blk MethodInvocation ReferenceType VariableDeclarator MethodInvocation BlockStatement MethodInvocation ThreadContext IRubyObject Block MemberReference MemberReference Literal checkContext IRubyObject larg MethodInvocation block MethodInvocation MemberReference MemberReference yield ThrowStatement runtime getNil ThreadContext IRubyObject Block MemberReference MemberReference Literal checkContext IRubyObject larg MethodInvocation larg isTrue ThrowStatement runtime getNil localContext ctx "any?" MemberReference MemberReference checkArgs isTrue ctx larg MemberReference localContext ctx "any?" MemberReference MemberReference checkArgs MemberReference runtime largs JumpException SPECIAL_JUMP runtime largs JumpException SPECIAL_JUMP	1
MethodDeclaration Modifier lload FormalParameter StatementExpression public BasicType arg0 MethodInvocation int MethodInvocation getMethodVisitor MemberReference MemberReference visitVarInsn LLOAD arg0	0
MethodDeclaration Modifier fixnumNode FormalParameter StatementExpression private ReferenceType node MethodInvocation FixnumNode sb MethodInvocation Literal append MethodInvocation append " " node getValue	0
MethodDeclaration Modifier ReferenceType case438_line1638 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support MethodInvocation Literal Literal Cast Literal Cast new_args Cast getPosition null null ReferenceType MemberReference null ReferenceType MemberReference ReferenceType MemberReference RestArgNode ArraySelector yyVals BlockArgNode ArraySelector yyVals RestArgNode ArraySelector yyVals BinaryOperation BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference + Literal MemberReference - 1 yyTop 0 yyTop - 1 yyTop	1
MethodDeclaration Modifier Annotation ReferenceType getValueOrNil FormalParameter FormalParameter FormalParameter IfStatement public Override IRubyObject BasicType offset BasicType depth ReferenceType nil BinaryOperation BlockStatement BlockStatement int int IRubyObject > MemberReference Literal ReturnStatement ReturnStatement depth 0 MethodInvocation MethodInvocation parent MemberReference BinaryOperation MemberReference getValueOrNil MemberReference MemberReference getValueDepthZeroOrNil offset - MemberReference Literal nil offset nil depth 1	0
MethodDeclaration Modifier ReferenceType toString ReturnStatement public String BinaryOperation + BinaryOperation MemberReference + BinaryOperation TernaryExpression _op + Literal TernaryExpression BinaryOperation Literal BinaryOperation "\t" MethodInvocation Literal Literal == MemberReference Literal "" + MemberReference Literal isDead "[DEAD]" "" _result null _result " = "	0
MethodDeclaration Modifier Annotation ReferenceType createBlockCtor FormalParameter FormalParameter Exception LocalVariableDeclaration StatementExpression StatementExpression LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression ReturnStatement private Deprecated ClassWriter ReferenceType namePath ReferenceType fieldClass ReferenceType VariableDeclarator MethodInvocation MethodInvocation ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MemberReference String Class ClassWriter cw ClassCreator cw MemberReference BinaryOperation MemberReference Literal MethodInvocation Literal visit cw BinaryOperation Literal MethodInvocation Literal Literal visitField SkinnyMethodAdapter mv ClassCreator mv start mv Literal aload mv MethodInvocation Literal MethodInvocation invokespecial mv Literal aload mv Literal aload mv MethodInvocation checkcast mv MemberReference Literal MethodInvocation putfield mv voidreturn mv end cw ReferenceType BinaryOperation RubyInstanceConfig JAVA_VERSION + MemberReference MemberReference namePath null ClassReference p null | MemberReference MemberReference "$scriptObject" MemberReference ci null null ReferenceType MethodInvocation 0 ClassReference p "<init>" VoidClassReference sig 0 1 MemberReference p namePath "$scriptObject" MemberReference ci ClassWriter | MemberReference MemberReference ACC_PUBLIC ACC_SUPER ReferenceType ACC_PRIVATE ACC_FINAL fieldClass SkinnyMethodAdapter cw MemberReference Literal MethodInvocation Literal Literal visitMethod ReferenceType fieldClass fieldClass ClassWriter COMPUTE_MAXS ClassWriter COMPUTE_FRAMES CompiledBlockCallback ACC_PUBLIC "<init>" MemberReference MethodInvocation sig null null CompiledBlockCallback Void TYPE ClassReference params ReferenceType Object	1
MethodDeclaration Modifier Annotation ReferenceType component_type IfStatement ReturnStatement public JRubyMethod JavaClass MethodInvocation BlockStatement MethodInvocation ! MethodInvocation javaClass ThrowStatement JavaClass MethodInvocation MethodInvocation get isArray MethodInvocation getRuntime MethodInvocation javaClass MethodInvocation getRuntime getComponentType Literal newTypeError "not a java array-class"	1
MethodDeclaration Modifier BasicType getZeroTerminatedByteArray FormalParameter StatementExpression ReturnStatement final public byte BasicType offset MethodInvocation MethodInvocation long MemberReference Literal checkBounds FFIUtil BinaryOperation getZeroTerminatedByteArray offset 1 + MemberReference MemberReference address offset	0
MethodDeclaration Modifier Annotation ReferenceType op_equal FormalParameter FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType other MethodInvocation name Literal required Literal compat MemberReference ThreadContext IRubyObject IRubyObject MemberReference MemberReference MemberReference MethodInvocation callCmpMethod "==" 1 CompatVersion RUBY1_8 context recv other context MethodInvocation getRuntime getNil	1
MethodDeclaration Modifier ensureRead IOException BadDescriptorException IfStatement StatementExpression StatementExpression StatementExpression StatementExpression private MemberReference ReturnStatement MethodInvocation MethodInvocation MethodInvocation Assignment reading flushWrite buffer clear buffer flip MemberReference Literal = reading true	1
MethodDeclaration Modifier ReferenceType cloneBlock LocalVariableDeclaration StatementExpression StatementExpression ReturnStatement public Block ReferenceType VariableDeclarator Assignment Assignment MemberReference Block newBlock MethodInvocation MemberReference MemberReference = MemberReference MemberReference = newBlock body MemberReference cloneBlock newBlock type type newBlock escaped escaped binding	0
MethodDeclaration Modifier ReferenceType runBeginBlock FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression StatementExpression LocalVariableDeclaration TryStatement ReturnStatement static public IRubyObject ReferenceType context ReferenceType self ReferenceType staticScopeNames ReferenceType callback ReferenceType VariableDeclarator MethodInvocation MethodInvocation ReferenceType VariableDeclarator StatementExpression StatementExpression MethodInvocation ThreadContext IRubyObject String CompiledBlockCallback StaticScope staticScope ClassCreator staticScope determineModule context MethodInvocation preScopedBody Block block MethodInvocation MethodInvocation MethodInvocation context MethodInvocation getRuntime ReferenceType MethodInvocation MemberReference DynamicScope MemberReference MethodInvocation newDynamicScope CompiledBlock MemberReference MemberReference MethodInvocation MemberReference MemberReference Literal MemberReference newCompiledClosure block MemberReference Literal yield context postScopedBody getNil BlockStaticScope context MethodInvocation getCurrentScope staticScopeNames staticScope context getCurrentScope context self Arity Literal createArity staticScope callback false BlockBody ZERO_ARGS context null getStaticScope 0	0
MethodDeclaration Modifier BasicType waitFor InterruptedException StatementExpression ReturnStatement public int MethodInvocation MemberReference processThread join result	0
MethodDeclaration Modifier fixnumStep FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter IfStatement IfStatement private static ReferenceType context ReferenceType runtime BasicType value BasicType end BasicType diff ReferenceType block BinaryOperation ThrowStatement BinaryOperation BlockStatement BlockStatement ThreadContext Ruby long long long Block == MemberReference Literal MethodInvocation > MemberReference Literal ForStatement ForStatement diff 0 runtime Literal newArgumentError diff 0 ForControl BlockStatement ForControl BlockStatement "step cannot be 0" VariableDeclaration BinaryOperation Assignment StatementExpression VariableDeclaration BinaryOperation Assignment StatementExpression BasicType VariableDeclarator <= MemberReference MemberReference MemberReference MemberReference += MethodInvocation BasicType VariableDeclarator >= MemberReference MemberReference MemberReference MemberReference += MethodInvocation long i MemberReference i end i diff block MemberReference MethodInvocation yield long i MemberReference i end i diff block MemberReference MethodInvocation yield value context RubyFixnum MemberReference MemberReference newFixnum value context RubyFixnum MemberReference MemberReference newFixnum runtime i runtime i	1
MethodDeclaration Modifier Annotation ReferenceType getbyte FormalParameter LocalVariableDeclaration IfStatement ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context ReferenceType VariableDeclarator MethodInvocation BlockStatement MethodInvocation name Literal ThreadContext Ruby runtime MethodInvocation runtime isVerbose StatementExpression MemberReference get_byte "getbyte" context getRuntime MethodInvocation context runtime MethodInvocation getWarnings MemberReference Literal Literal Literal warning ID DEPRECATED_METHOD "StringScanner#getbyte is obsolete; use #get_byte instead" "StringScanner#getbyte" "#get_byte"	0
MethodDeclaration Modifier ReferenceType getIterNodeBlock FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration StatementExpression ReturnStatement private static Block ReferenceType blockNode ReferenceType context ReferenceType self ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation Node ThreadContext IRubyObject IterNode iterNode Cast StaticScope scope MethodInvocation scope determineModule InterpretedBlock MemberReference MethodInvocation MemberReference newInterpretedClosure ReferenceType MemberReference iterNode getScope context iterNode getBlockBody self IterNode blockNode	1
MethodDeclaration Modifier ReferenceType scan FormalParameter FormalParameter FormalParameter FormalParameter IfStatement StatementExpression LocalVariableDeclaration StatementExpression LocalVariableDeclaration IfStatement LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement StatementExpression IfStatement IfStatement StatementExpression StatementExpression IfStatement ReturnStatement private IRubyObject ReferenceType regex BasicType succptr BasicType getstr BasicType headonly BinaryOperation ThrowStatement MethodInvocation ReferenceType VariableDeclarator MethodInvocation BasicType VariableDeclarator BinaryOperation ReturnStatement ReferenceType VariableDeclarator ReferenceType VariableDeclarator Modifier BasicType VariableDeclarator MemberReference BlockStatement BlockStatement Assignment BinaryOperation BlockStatement BlockStatement BinaryOperation ReturnStatement MethodInvocation Assignment MemberReference StatementExpression TernaryExpression IRubyObject boolean boolean boolean instanceof MemberReference ReferenceType MethodInvocation check Regex pattern Cast clearMatched int rest BinaryOperation < MemberReference Literal MethodInvocation ByteList value MethodInvocation Matcher matcher MethodInvocation final int ret headonly StatementExpression StatementExpression MemberReference MethodInvocation = == MemberReference Literal StatementExpression StatementExpression StatementExpression StatementExpression < MemberReference Literal MethodInvocation setMatched MemberReference MemberReference = succptr Assignment MemberReference MethodInvocation MethodInvocation regex RubyRegexp MethodInvocation getRuntime ReferenceType MemberReference - MethodInvocation MemberReference rest 0 MethodInvocation getRuntime str getByteList pattern MemberReference BinaryOperation BinaryOperation matcher Assignment Assignment regs matcher getRegion regs null Assignment Assignment Assignment Assignment ret 0 MethodInvocation getRuntime lastPos pos MemberReference MemberReference += getstr MethodInvocation MemberReference MemberReference extractBegLen RubyFixnum MethodInvocation MemberReference newFixnum BinaryOperation newTypeError RubyRegexp regex str MemberReference getByteList pos getNil value bytes + MemberReference MemberReference + MemberReference MemberReference MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MemberReference = MemberReference MemberReference = getNil pos end getRuntime lastPos end getRuntime end + BinaryOperation Literal realSize value begin pos value begin value realSize ret matcher BinaryOperation BinaryOperation MemberReference match ret matcher BinaryOperation BinaryOperation MemberReference search beg matcher getBegin end matcher getEnd beg regs ArraySelector beg end regs ArraySelector end + Literal MethodInvocation " (expected Regexp)" + MemberReference MemberReference + MemberReference MemberReference Option NONE + MemberReference MemberReference + MemberReference MemberReference Option NONE Literal Literal "wrong argument type " regex getMetaClass value begin pos value begin value realSize value begin pos value begin value realSize 0 0	1
MethodDeclaration Modifier ReferenceType arg_concat FormalParameter FormalParameter FormalParameter ReturnStatement public Node ReferenceType position ReferenceType node1 ReferenceType node2 TernaryExpression ISourcePosition Node Node BinaryOperation MemberReference ClassCreator == MemberReference Literal node1 ReferenceType MemberReference MemberReference MemberReference node2 null ArgsCatNode position node1 node2	1
MethodDeclaration Modifier ReferenceType byteListToString FormalParameter ReturnStatement static public String ReferenceType bytes MethodInvocation ByteList MethodInvocation MethodInvocation MethodInvocation bytesToString bytes unsafeBytes bytes begin bytes length	0
MethodDeclaration Modifier Annotation ReferenceType gmt_offset LocalVariableDeclaration ReturnStatement public JRubyMethod ElementValuePair RubyInteger BasicType VariableDeclarator MethodInvocation name ElementArrayValue int offset MethodInvocation MethodInvocation getRuntime Literal Literal Literal dt MethodInvocation getZone Cast newFixnum "gmt_offset" "gmtoff" "utc_offset" MethodInvocation getOffsetFromLocal BasicType BinaryOperation dt getMillis int / MemberReference Literal offset 1000	1
MethodDeclaration Modifier BasicType indexOf FormalParameter FormalParameter FormalParameter LocalVariableDeclaration ForStatement ReturnStatement final public int BasicType offset BasicType value BasicType maxlen BasicType VariableDeclarator ForControl BlockStatement Literal long byte int int off MethodInvocation VariableDeclaration BinaryOperation MemberReference IfStatement - 1 MemberReference index BasicType VariableDeclarator < MemberReference MethodInvocation ++ i BinaryOperation BlockStatement offset int i Literal i Math MemberReference MemberReference min == MemberReference MemberReference ReturnStatement 0 length maxlen ArraySelector buffer value MemberReference BinaryOperation i + MemberReference MemberReference off i	1
MethodDeclaration Modifier ReferenceType nameOnInspection ReturnStatement protected String MethodInvocation MethodInvocation getDeclaringClass nameOnInspection	0
MethodDeclaration Modifier Annotation ReferenceType closed_p FormalParameter FormalParameter LocalVariableDeclaration StatementExpression ReturnStatement static public JRubyMethod ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType VariableDeclarator MethodInvocation MethodInvocation name Literal ThreadContext IRubyObject ArgsFileData data MethodInvocation data MemberReference next_argv RubyBoolean MethodInvocation MethodInvocation newBoolean "closed?" ArgsFileData MemberReference getDataFrom context context getRuntime MemberReference MemberReference isClosed recv context data currentFile	1
MethodDeclaration Modifier ReferenceType allocate FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType runtime ReferenceType klazz ClassCreator Ruby RubyClass ReferenceType MemberReference MemberReference JavaProxy runtime klazz	0
MethodDeclaration Modifier Annotation ReferenceType getInputStream ReturnStatement public Override InputStream MemberReference input	0
MethodDeclaration Modifier pushEvalFrame FormalParameter LocalVariableDeclaration LocalVariableDeclaration StatementExpression IfStatement private ReferenceType self BasicType VariableDeclarator ReferenceType VariableDeclarator MemberReference BinaryOperation BlockStatement IRubyObject int index This Frame stack MemberReference ArraySelector MethodInvocation stack == BinaryOperation MemberReference StatementExpression ++ MemberReference frameStack MemberReference MemberReference MemberReference MemberReference updateFrameForEval + MemberReference Literal stack length MethodInvocation frameIndex index self file line index 1 expandFramesIfNecessary	0
MethodDeclaration Modifier BasicType microseconds ReturnStatement public long BinaryOperation + BinaryOperation MemberReference * BinaryOperation Literal usec % MethodInvocation Literal 1000 getTimeInMillis 1000	0
MethodDeclaration Modifier put FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression final public BasicType offset BasicType src BasicType off BasicType len MethodInvocation MethodInvocation long long int int MemberReference BinaryOperation checkBounds IO BinaryOperation MemberReference MemberReference MemberReference putLongArray offset << MemberReference Literal + MemberReference MemberReference src off len len 3 address offset	0
MethodDeclaration Modifier ReferenceType getWriteStream ReturnStatement public Stream TernaryExpression BinaryOperation MemberReference MemberReference == MemberReference Literal mainStream pipeStream pipeStream null	0
MethodDeclaration Modifier Annotation ReferenceType put_string FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration StatementExpression ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context ReferenceType offArg ReferenceType strArg BasicType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation This name Literal ThreadContext IRubyObject IRubyObject long off MethodInvocation ByteList bl MethodInvocation MethodInvocation getMemoryIO "put_string" MemberReference getOffset strArg MethodInvocation convertToString MemberReference MethodInvocation MethodInvocation MethodInvocation putZeroTerminatedByteArray offArg getByteList off bl unsafeBytes bl begin bl length	1
MethodDeclaration Modifier BasicType caret IOException LocalVariableDeclaration IfStatement StatementExpression StatementExpression StatementExpression ReturnStatement private int BasicType VariableDeclarator BinaryOperation BlockStatement MethodInvocation MethodInvocation Assignment MemberReference int c MethodInvocation == MemberReference Literal StatementExpression StatementExpression ReturnStatement determineExpressionState src MemberReference unread MemberReference ClassCreator = Tokens tCARET src read c '=' Assignment Assignment MemberReference c yaccValue ReferenceType Literal MethodInvocation MemberReference MemberReference = MemberReference ClassCreator = Tokens tOP_ASGN Token "^" getPosition lex_state LexState EXPR_BEG yaccValue ReferenceType Literal MethodInvocation Token "^" getPosition	0
MethodDeclaration Modifier BasicType isSplit ReturnStatement public boolean MethodInvocation ruby MethodInvocation MethodInvocation get getInstanceConfig isSplit	0
MethodDeclaration Modifier Annotation ReferenceType set FormalParameter StatementExpression ReturnStatement public Override IRubyObject ReferenceType value MethodInvocation MemberReference IRubyObject runtime MethodInvocation setKCode value KCode MemberReference MethodInvocation create runtime value MethodInvocation convertToString toString	0
MethodDeclaration Modifier Annotation ReferenceType set_sync FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType args MemberReference name Literal required Literal IRubyObject args "sync=" 1	1
MethodDeclaration Modifier ReferenceType getTypeInstance FormalParameter ReturnStatement public String ReferenceType cs Literal CharSequence "CharSequence"	0
MethodDeclaration Modifier ReferenceType get_proxy_or_package_under_package FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement LocalVariableDeclaration IfStatement ReturnStatement static public IRubyObject ReferenceType context ReferenceType recv ReferenceType parentPackage ReferenceType sym ReferenceType VariableDeclarator BinaryOperation BlockStatement ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation ThreadContext IRubyObject IRubyObject IRubyObject Ruby runtime MethodInvocation instanceof MemberReference ReferenceType ThrowStatement RubyModule result != Assignment Literal ReturnStatement runtime getNil recv getRuntime parentPackage RubyModule MethodInvocation MemberReference MethodInvocation = null MemberReference runtime MemberReference MethodInvocation newTypeError result MemberReference MemberReference Cast MethodInvocation getProxyOrPackageUnderPackage result parentPackage runtime getModule context runtime ReferenceType MemberReference sym asJavaString RubyModule parentPackage	1
MethodDeclaration Modifier replaceSubclass FormalParameter FormalParameter SynchronizedStatement synchronized public ReferenceType subclass ReferenceType newSubclass MethodInvocation LocalVariableDeclaration IfStatement StatementExpression StatementExpression RubyClass RubyClass runtime getHierarchyLock ReferenceType VariableDeclarator BinaryOperation ReturnStatement MethodInvocation MethodInvocation Set TypeArgument oldSubclasses MemberReference == MemberReference Literal oldSubclasses MemberReference remove oldSubclasses MemberReference add ReferenceType subclasses oldSubclasses null subclass newSubclass RubyClass	1
MethodDeclaration Modifier isGlobalDefined FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression StatementExpression StatementExpression LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression public ReferenceType name ReferenceType trueBranch ReferenceType falseBranch MethodInvocation MethodInvocation MethodInvocation MethodInvocation ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation String BranchCallback BranchCallback loadRuntime Literal MethodInvocation invokeRuby method MemberReference ldc method MethodInvocation Literal MethodInvocation invokevirtual Label falseLabel ClassCreator Label exitLabel ClassCreator method MemberReference ifeq trueBranch This branch method MemberReference go_to method MemberReference label falseBranch This branch method MemberReference label "getGlobalVariables" ClassReference sig name ClassReference p "isDefined" ClassReference MethodInvocation sig ReferenceType ReferenceType falseLabel exitLabel falseLabel exitLabel ReferenceType ReferenceType BasicType ClassReference params Label Label GlobalVariables GlobalVariables boolean ReferenceType String	0
MethodDeclaration Modifier ReferenceType case499_line1911 FormalParameter FormalParameter FormalParameter IfStatement StatementExpression StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop MethodInvocation BlockStatement MethodInvocation Assignment MemberReference Object Object int ! support Cast is_local_id StatementExpression support Cast shadowing_lvar MemberReference ClassCreator = yyVal ReferenceType MemberReference MethodInvocation ReferenceType MemberReference yyVal ReferenceType MethodInvocation Cast MethodInvocation Token ArraySelector yyVals Literal yyerror Token ArraySelector yyVals RestArgNode Cast getPosition ReferenceType Cast support Cast arg_var BinaryOperation "duplicate rest argument name" BinaryOperation ReferenceType MemberReference String ReferenceType MemberReference ReferenceType MemberReference + Literal MemberReference + Literal MemberReference Token ArraySelector yyVals Token ArraySelector yyVals Token ArraySelector yyVals 0 yyTop 0 yyTop BinaryOperation BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference + Literal MemberReference - 1 yyTop 0 yyTop 0 yyTop	1
MethodDeclaration Modifier ReferenceType case296_line1111 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop MethodInvocation MemberReference Object Object int lexer MethodInvocation getConditionState yyVal begin	1
MethodDeclaration Modifier ReferenceType invokeDirectWithExceptionHandling FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter TryStatement private IRubyObject ReferenceType method ReferenceType javaInvokee ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 ReferenceType arg3 LocalVariableDeclaration ReturnStatement CatchClause CatchClause CatchClause CatchClause Method Object Object Object Object Object ReferenceType VariableDeclarator MethodInvocation CatchClauseParameter ReturnStatement CatchClauseParameter ReturnStatement CatchClauseParameter ReturnStatement CatchClauseParameter ReturnStatement Object result TernaryExpression MemberReference convertReturn IllegalArgumentException iae MethodInvocation IllegalAccessException iae MethodInvocation InvocationTargetException ite MethodInvocation Throwable t MethodInvocation BinaryOperation MethodInvocation MethodInvocation result MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference handlelIllegalArgumentEx MemberReference MemberReference handleIllegalAccessEx MemberReference MemberReference handleInvocationTargetEx MemberReference MemberReference handleThrowable != MemberReference Literal handle MemberReference MemberReference MemberReference MemberReference MemberReference invoke method MemberReference MemberReference MemberReference MemberReference MemberReference invoke method iae arg0 arg1 arg2 arg3 method iae ite method t method handle null javaInvokee arg0 arg1 arg2 arg3 javaInvokee arg0 arg1 arg2 arg3	1
MethodDeclaration Modifier ReferenceType getCurrentLine LocalVariableDeclaration TryStatement ReturnStatement public String BasicType VariableDeclarator StatementExpression CatchClause BinaryOperation int errorLocation BinaryOperation MethodInvocation CatchClauseParameter + MethodInvocation MethodInvocation - MethodInvocation Literal readLineBytes IOException e sourceLine toString MemberReference makePointer lineBuffer length 1 errorLocation	1
MethodDeclaration Modifier ReferenceType times FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration ReturnStatement static public IRubyObject ReferenceType runtime BasicType VariableDeclarator BasicType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation Ruby double currentTime BinaryOperation double startTime BinaryOperation RubyFloat zero MethodInvocation RubyStruct MethodInvocation ArrayCreator MemberReference newStruct / MethodInvocation Literal / MethodInvocation Literal runtime Literal newFloat runtime getTmsStruct ReferenceType ArrayInitializer Block NULL_BLOCK System currentTimeMillis 1000.0 runtime getStartTime 1000.0 0.0 IRubyObject MethodInvocation MemberReference MemberReference MemberReference runtime BinaryOperation newFloat zero zero zero - MemberReference MemberReference currentTime startTime	0
MethodDeclaration Modifier Annotation ReferenceType on_paint FormalParameter FormalParameter LocalVariableDeclaration SynchronizedStatement ReturnStatement static public JRubyMethod IRubyObject ReferenceType recv ReferenceType block ReferenceType VariableDeclarator MemberReference StatementExpression StatementExpression MemberReference IRubyObject Block JRubyApplet applet Cast applet Assignment MethodInvocation recv ReferenceType MethodInvocation MemberReference MethodInvocation = applet repaint JRubyApplet JavaEmbedUtils MemberReference rubyToJava applet paintProc MemberReference MemberReference blockToProc recv applet runtime block	1
MethodDeclaration Modifier ReferenceType getArgv ReturnStatement public String MethodInvocation Arrays MethodInvocation deepToString ruby MethodInvocation MethodInvocation get getInstanceConfig getArgv	0
MethodDeclaration Modifier ReferenceType yield FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration TryStatement public IRubyObject ReferenceType context ReferenceType value ReferenceType binding ReferenceType type ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator StatementExpression ReturnStatement CatchClause StatementExpression ThreadContext IRubyObject Binding Block ReferenceType IRubyObject self MethodInvocation Visibility oldVis MethodInvocation Frame lastFrame MethodInvocation MethodInvocation MethodInvocation CatchClauseParameter ReturnStatement MethodInvocation Type MemberReference prepareSelf binding MethodInvocation getFrame MemberReference Literal MemberReference pre MemberReference MemberReference MemberReference MemberReference MemberReference setupBlockArg MemberReference MemberReference evalBlockBody JumpException.NextJump nj MethodInvocation MemberReference MemberReference MemberReference MemberReference post binding getVisibility context null binding context value self Block NULL_BLOCK type context self MemberReference MemberReference MemberReference handleNextJump context binding oldVis lastFrame context nj type	0
MethodDeclaration Modifier Annotation ReferenceType inspect LocalVariableDeclaration StatementExpression StatementExpression TryStatement TryStatement StatementExpression TryStatement TryStatement TryStatement TryStatement StatementExpression TryStatement TryStatement StatementExpression StatementExpression StatementExpression StatementExpression ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType VariableDeclarator MethodInvocation MethodInvocation StatementExpression CatchClause StatementExpression CatchClause MethodInvocation StatementExpression CatchClause StatementExpression CatchClause StatementExpression CatchClause StatementExpression CatchClause MethodInvocation StatementExpression CatchClause StatementExpression CatchClause MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation name Literal StringBuilder buf ClassCreator buf MethodInvocation append buf Literal append MethodInvocation CatchClauseParameter MethodInvocation CatchClauseParameter buf MethodInvocation MethodInvocation Literal append MethodInvocation CatchClauseParameter MethodInvocation CatchClauseParameter MethodInvocation CatchClauseParameter MethodInvocation CatchClauseParameter buf MethodInvocation MethodInvocation Literal append MethodInvocation CatchClauseParameter MethodInvocation CatchClauseParameter buf MethodInvocation MethodInvocation Literal append buf MethodInvocation MethodInvocation Literal append buf MethodInvocation Literal append buf Literal append MethodInvocation getRuntime "inspect" ReferenceType Literal MethodInvocation MethodInvocation getMetaClass " " buf MethodInvocation MethodInvocation Literal append Exception e buf MethodInvocation MethodInvocation Literal append Exception e MethodInvocation append Literal append "mode=0" buf MethodInvocation MethodInvocation Literal append Exception e buf MethodInvocation MethodInvocation Literal append Exception e buf MethodInvocation MethodInvocation Literal append Exception e buf MethodInvocation MethodInvocation Literal append Exception e MethodInvocation append Literal append "size=" buf MethodInvocation MethodInvocation Literal append Exception e buf MethodInvocation MethodInvocation Literal append Exception e MethodInvocation append Literal append "atime=" MethodInvocation append Literal append "mtime=" MethodInvocation append "ctime=" ">" MethodInvocation newString StringBuilder "#<" getRealClass getName MethodInvocation append Literal append "dev=0x" MethodInvocation append Literal append "ino=" Integer MethodInvocation toOctalString ", " MethodInvocation append Literal append "nlink=" MethodInvocation append Literal append "uid=" MethodInvocation append Literal append "gid=" MethodInvocation append Literal append "rdev=0x" sizeInternal ", " MethodInvocation append Literal append "blksize=" MethodInvocation append Literal append "blocks=" atime ", " mtime ", " ctime buf toString Long MethodInvocation toHexString ", " stat ino ", " stat mode stat nlink ", " stat uid ", " stat gid ", " Long MethodInvocation toHexString ", " stat blockSize ", " stat blocks ", " stat dev stat rdev	1
MethodDeclaration Modifier setValue FormalParameter StatementExpression public ReferenceType yaccValue Assignment Object This MemberReference = MemberReference yaccValue yaccValue	0
MethodDeclaration Modifier Annotation ReferenceType s_digest FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration TryStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType recv ReferenceType str ReferenceType VariableDeclarator ReferenceType VariableDeclarator LocalVariableDeclaration ReturnStatement CatchClause name Literal required Literal meta Literal IRubyObject IRubyObject Ruby runtime MethodInvocation String name Cast ReferenceType VariableDeclarator MethodInvocation CatchClauseParameter ThrowStatement "digest" 1 true recv getRuntime ReferenceType MemberReference MessageDigest md MethodInvocation RubyString MemberReference MethodInvocation newStringShared NoSuchAlgorithmException e MethodInvocation RubyClass recv MemberReference MemberReference createMessageDigest runtime md MethodInvocation digest recv MethodInvocation getRuntime runtime name str MethodInvocation convertToString BinaryOperation newNotImplementedError getBytes + BinaryOperation Literal + Literal MemberReference ")" "Unsupported digest algorithm (" name	1
MethodDeclaration Modifier ReferenceType newFixnumNode FormalParameter FormalParameter NumberFormatException ReturnStatement private Object ReferenceType value BasicType radix ClassCreator String int ReferenceType MethodInvocation MethodInvocation FixnumNode getPosition Long MemberReference MemberReference parseLong value radix	1
MethodDeclaration Modifier ReferenceType callMethodMissing FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement static public IRubyObject ReferenceType context ReferenceType receiver ReferenceType visibility ReferenceType name ReferenceType callType ReferenceType args ReferenceType block MethodInvocation ThreadContext IRubyObject Visibility String CallType IRubyObject Block MethodInvocation MemberReference MemberReference MemberReference MemberReference MemberReference selectMethodMissing MemberReference MemberReference MethodInvocation MemberReference MemberReference MemberReference call context receiver visibility name callType context receiver receiver getMetaClass name args block	0
MethodDeclaration Modifier addNameClassMappings FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression LocalVariableDeclaration StatementExpression StatementExpression StatementExpression LocalVariableDeclaration StatementExpression StatementExpression StatementExpression LocalVariableDeclaration StatementExpression StatementExpression StatementExpression private static ReferenceType runtime ReferenceType nameClassMap ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation Ruby Map TypeArgument TypeArgument JavaClass booleanPrimClass MethodInvocation JavaClass booleanClass MethodInvocation nameClassMap Literal MemberReference put nameClassMap Literal MemberReference put nameClassMap Literal MemberReference put JavaClass bytePrimClass MethodInvocation JavaClass byteClass MethodInvocation nameClassMap Literal MemberReference put nameClassMap Literal MemberReference put nameClassMap Literal MemberReference put JavaClass shortPrimClass MethodInvocation JavaClass shortClass MethodInvocation nameClassMap Literal MemberReference put nameClassMap Literal MemberReference put nameClassMap Literal MemberReference put JavaClass charPrimClass MethodInvocation JavaClass charClass MethodInvocation nameClassMap Literal MemberReference put nameClassMap Literal MemberReference put nameClassMap Literal MemberReference put nameClassMap Literal MemberReference put JavaClass intPrimClass MethodInvocation JavaClass intClass MethodInvocation nameClassMap Literal MemberReference put nameClassMap Literal MemberReference put nameClassMap Literal MemberReference put nameClassMap Literal MemberReference put JavaClass longPrimClass MethodInvocation JavaClass longClass MethodInvocation nameClassMap Literal MemberReference put nameClassMap Literal MemberReference put nameClassMap Literal MemberReference put JavaClass floatPrimClass MethodInvocation JavaClass floatClass MethodInvocation nameClassMap Literal MemberReference put nameClassMap Literal MemberReference put nameClassMap Literal MemberReference put JavaClass doublePrimClass MethodInvocation JavaClass doubleClass MethodInvocation nameClassMap Literal MemberReference put nameClassMap Literal MemberReference put nameClassMap Literal MemberReference put JavaClass bigintClass MethodInvocation nameClassMap Literal MemberReference put nameClassMap Literal MemberReference put nameClassMap Literal MemberReference put nameClassMap Literal MemberReference put JavaClass bigdecimalClass MethodInvocation nameClassMap Literal MemberReference put nameClassMap Literal MemberReference put nameClassMap Literal MemberReference put JavaClass objectClass MethodInvocation nameClassMap Literal MemberReference put nameClassMap Literal MemberReference put nameClassMap Literal MemberReference put JavaClass stringClass MethodInvocation nameClassMap Literal MemberReference put nameClassMap Literal MemberReference put nameClassMap Literal MemberReference put ReferenceType ReferenceType JavaClass MemberReference MemberReference get JavaClass MemberReference ClassReference get "boolean" booleanPrimClass "Boolean" booleanClass "java.lang.Boolean" booleanClass JavaClass MemberReference MemberReference get JavaClass MemberReference ClassReference get "byte" bytePrimClass "Byte" byteClass "java.lang.Byte" byteClass JavaClass MemberReference MemberReference get JavaClass MemberReference ClassReference get "short" shortPrimClass "Short" shortClass "java.lang.Short" shortClass JavaClass MemberReference MemberReference get JavaClass MemberReference ClassReference get "char" charPrimClass "Character" charClass "Char" charClass "java.lang.Character" charClass JavaClass MemberReference MemberReference get JavaClass MemberReference ClassReference get "int" intPrimClass "Integer" intClass "Int" intClass "java.lang.Integer" intClass JavaClass MemberReference MemberReference get JavaClass MemberReference ClassReference get "long" longPrimClass "Long" longClass "java.lang.Long" longClass JavaClass MemberReference MemberReference get JavaClass MemberReference ClassReference get "float" floatPrimClass "Float" floatClass "java.lang.Float" floatClass JavaClass MemberReference MemberReference get JavaClass MemberReference ClassReference get "double" doublePrimClass "Double" doubleClass "java.lang.Double" doubleClass JavaClass MemberReference ClassReference get "big_int" bigintClass "big_integer" bigintClass "BigInteger" bigintClass "java.math.BigInteger" bigintClass JavaClass MemberReference ClassReference get "big_decimal" bigdecimalClass "BigDecimal" bigdecimalClass "java.math.BigDecimal" bigdecimalClass JavaClass MemberReference ClassReference get "object" objectClass "Object" objectClass "java.lang.Object" objectClass JavaClass MemberReference ClassReference get "string" stringClass "String" stringClass "java.lang.String" stringClass String JavaClass runtime Boolean TYPE runtime ReferenceType runtime Byte TYPE runtime ReferenceType runtime Short TYPE runtime ReferenceType runtime Character TYPE runtime ReferenceType runtime Integer TYPE runtime ReferenceType runtime Long TYPE runtime ReferenceType runtime Float TYPE runtime ReferenceType runtime Double TYPE runtime ReferenceType runtime ReferenceType runtime ReferenceType runtime ReferenceType runtime ReferenceType Boolean Byte Short Character Integer Long Float Double BigInteger BigDecimal Object String	0
MethodDeclaration Modifier ReferenceType getBlockBody6 FormalParameter FormalParameter ReturnStatement final public BlockBody ReferenceType context ReferenceType descriptor MethodInvocation ThreadContext String runtimeCache This MemberReference Literal MemberReference getBlockBody context 6 descriptor	0
MethodDeclaration Modifier setEnding FormalParameter StatementExpression public ReferenceType endingToken MethodInvocation Object method Cast label ReferenceType MemberReference Label endingToken	0
MethodDeclaration Modifier processMethod FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression private ReferenceType methodName ReferenceType argsNode ReferenceType body MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation String Node Node sb MethodInvocation MethodInvocation Literal append MemberReference process sb Literal append MemberReference process sb Literal append MemberReference append Literal append "(method " argsNode " " body ")" methodName ' '	0
MethodDeclaration Modifier createNewSymbol FormalParameter StatementExpression public ReferenceType name MethodInvocation String script MethodInvocation getCacheCompiler This MemberReference cacheSymbol name	0
MethodDeclaration Modifier Annotation assign FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression StatementExpression StatementExpression public Override ReferenceType runtime ReferenceType context ReferenceType self ReferenceType value1 ReferenceType value2 ReferenceType value3 ReferenceType block MethodInvocation MethodInvocation MethodInvocation MethodInvocation Ruby ThreadContext IRubyObject IRubyObject IRubyObject IRubyObject Block pre MethodInvocation Literal get pre MethodInvocation Literal get pre MethodInvocation Literal get MemberReference MemberReference MemberReference MemberReference Literal assignNilTo MemberReference MemberReference MemberReference MemberReference MemberReference Literal assign 0 MemberReference MemberReference MemberReference MemberReference MemberReference Literal assign 1 MemberReference MemberReference MemberReference MemberReference MemberReference Literal assign 2 runtime context self block 3 runtime context self value1 block false runtime context self value1 block false runtime context self value1 block false	0
MethodDeclaration Modifier ReferenceType callIter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter TryStatement public IRubyObject ReferenceType context ReferenceType caller ReferenceType self ReferenceType arg1 ReferenceType arg2 ReferenceType block ReturnStatement CatchClause CatchClause StatementExpression ThreadContext IRubyObject IRubyObject IRubyObject IRubyObject Block MethodInvocation CatchClauseParameter ReturnStatement CatchClauseParameter ThrowStatement MethodInvocation MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference callBlock JumpException.BreakJump bj MethodInvocation JumpException.RetryJump rj MethodInvocation block escape context caller self arg1 arg2 block MemberReference MemberReference handleBreakJump MemberReference retryJumpError context bj context	1
MethodDeclaration Modifier ReferenceType getArity ReturnStatement public Arity MemberReference Arity ONE_ARGUMENT	0
MethodDeclaration Modifier ReferenceType allocate FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType runtime ReferenceType klass ClassCreator Ruby RubyClass ReferenceType MemberReference MemberReference RubyTCPServer runtime klass	0
MethodDeclaration Modifier ReferenceType createAutoPointerClass FormalParameter FormalParameter LocalVariableDeclaration StatementExpression StatementExpression ReturnStatement static public RubyClass ReferenceType runtime ReferenceType module ReferenceType VariableDeclarator MethodInvocation MethodInvocation MemberReference Ruby RubyModule RubyClass result MethodInvocation result ClassReference defineAnnotatedMethods result ClassReference defineAnnotatedConstants result module MemberReference MethodInvocation MemberReference defineClassUnder ReferenceType ReferenceType AUTOPTR_CLASS_NAME module Literal getClass AutoPointerAllocator INSTANCE AutoPointer AutoPointer "Pointer"	1
MethodDeclaration Modifier Annotation BasicType getNativeTypeIndex ReturnStatement public Override int MemberReference ClassIndex FIXNUM	0
MethodDeclaration Modifier ReferenceType pre FormalParameter FormalParameter FormalParameter ReturnStatement protected Frame ReferenceType context ReferenceType klass ReferenceType binding MethodInvocation ThreadContext RubyModule Binding context MemberReference MemberReference MemberReference preYieldSpecificBlock binding scope klass	0
MethodDeclaration Modifier BasicType isShouldCheckSyntax ReturnStatement public boolean MemberReference shouldCheckSyntax	0
MethodDeclaration Modifier BasicType receiveShort FormalParameter ReturnStatement public short BasicType s MethodInvocation short vri MemberReference receiveShort s	0
MethodDeclaration Modifier BasicType isDirect ReturnStatement final public boolean Literal false	1
MethodDeclaration Modifier BasicType partition FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration WhileStatement StatementExpression WhileStatement StatementExpression WhileStatement WhileStatement StatementExpression WhileStatement ReturnStatement private static int ReferenceType a BasicType lo1 BasicType hi ReferenceType x ReferenceType c BasicType VariableDeclarator BasicType VariableDeclarator VariableDeclarator VariableDeclarator BinaryOperation StatementExpression Assignment Literal BlockStatement Assignment BinaryOperation BlockStatement BinaryOperation StatementExpression MemberReference BinaryOperation StatementExpression ArrayCreator Object int int Object Comparator int lo MemberReference int i MemberReference j MemberReference c1 Literal && BinaryOperation BinaryOperation MemberReference MemberReference MemberReference = true WhileStatement StatementExpression WhileStatement IfStatement IfStatement StatementExpression MemberReference TernaryExpression = && BinaryOperation BinaryOperation StatementExpression && BinaryOperation BinaryOperation MemberReference -- lo && BinaryOperation BinaryOperation MethodInvocation BasicType ArrayInitializer lo1 lo hi 0 < MemberReference MemberReference == MethodInvocation Literal ++ lo i lo BinaryOperation BlockStatement MemberReference BinaryOperation BlockStatement BinaryOperation BlockStatement BinaryOperation BlockStatement BlockStatement MemberReference c1 BinaryOperation BinaryOperation MemberReference > MemberReference MemberReference < MethodInvocation Literal MemberReference < MemberReference MemberReference == MethodInvocation Literal ++ lo >= MemberReference MemberReference > MemberReference MemberReference MemberReference MemberReference MemberReference swap int TernaryExpression MemberReference lo hi c MemberReference MemberReference compare 0 && BinaryOperation BinaryOperation IfStatement StatementExpression -- j && BinaryOperation BinaryOperation StatementExpression > MemberReference MemberReference BreakStatement == MemberReference Literal WhileStatement StatementExpression IfStatement IfStatement StatementExpression ++ i >= MemberReference MemberReference - MemberReference Literal i c1 lo1 c MemberReference MemberReference compare 0 -- c1 lo hi c MemberReference MemberReference compare 0 lo lo1 c1 lo a ++ lo1 -- c1 BinaryOperation BinaryOperation MemberReference i x ArraySelector a < MemberReference MemberReference <= Assignment Literal BinaryOperation BlockStatement MemberReference >= MemberReference MemberReference < Assignment Literal MemberReference i j c1 0 BinaryOperation StatementExpression MethodInvocation BinaryOperation BlockStatement BlockStatement BinaryOperation StatementExpression MethodInvocation i hi hi 1 x ArraySelector a x ArraySelector a > MemberReference MemberReference + MemberReference Literal lo1 MemberReference i j MemberReference MethodInvocation = 0 && BinaryOperation BinaryOperation WhileStatement IfStatement ++ i j i MemberReference MethodInvocation = 0 -- j == MethodInvocation Literal MemberReference MemberReference MemberReference MemberReference swap != MemberReference MemberReference StatementExpression StatementExpression > MemberReference MemberReference Assignment MemberReference MemberReference MemberReference swap MemberReference MemberReference c1 lo c1 1 lo c1 c MemberReference MemberReference compare == MemberReference Literal != MemberReference MemberReference BinaryOperation StatementExpression BinaryOperation StatementExpression StatementExpression c1 c MemberReference MemberReference compare c MemberReference MemberReference compare 0 ++ lo a i j lo i MethodInvocation MemberReference lo i MemberReference BinaryOperation = a i j c1 lo ArraySelector a x c1 0 i lo == MethodInvocation Literal MemberReference > MemberReference MemberReference Assignment MethodInvocation x ArraySelector a x ArraySelector a MemberReference MemberReference MemberReference swap ++ lo i - MemberReference Literal MemberReference c MemberReference MemberReference compare 0 ++ lo lo i MemberReference BinaryOperation = MemberReference MemberReference MemberReference swap MemberReference MemberReference a ++ lo i lo 1 i x ArraySelector a i - MemberReference Literal a ++ lo i j lo MemberReference lo 1 lo	1
MethodDeclaration Modifier Annotation ReferenceType getRealMethod ReturnStatement public Override DynamicMethod MemberReference realMethod	0
MethodDeclaration Modifier initSolnForNode StatementExpression public Assignment MemberReference ClassCreator = _tmp ReferenceType MemberReference BitSet _setSize	0
MethodDeclaration Modifier ReferenceType newException FormalParameter FormalParameter FormalParameter ReturnStatement static public RubyException ReferenceType runtime ReferenceType excptnClass ReferenceType msg ClassCreator Ruby RubyClass String ReferenceType MemberReference MemberReference MemberReference RubyException runtime excptnClass msg	0
MethodDeclaration Modifier initBlockCallbacks FormalParameter StatementExpression final public BasicType size Assignment int MemberReference ArrayCreator = blockCallbacks ReferenceType MemberReference CompiledBlockCallback size	0
MethodDeclaration Modifier ReferenceType invoke FormalParameter FormalParameter FormalParameter ReturnStatement final public IRubyObject ReferenceType runtime ReferenceType function ReferenceType args MethodInvocation Ruby Function HeapInvocationBuffer Util MemberReference MethodInvocation newSigned32 runtime invoker MemberReference MemberReference invokeInt function args	1
MethodDeclaration Modifier ReferenceType tryCompile FormalParameter ReturnStatement public Script ReferenceType node MethodInvocation Node MemberReference ClassCreator tryCompile node ReferenceType MethodInvocation JRubyClassLoader getJRubyClassLoader	0
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression ReturnStatement public IRubyObject ReferenceType ctx ReferenceType largs ReferenceType blk ReferenceType VariableDeclarator ReferenceType VariableDeclarator Assignment Assignment MethodInvocation ThreadContext IRubyObject Block IRubyObject larg MethodInvocation IRubyObject myVandC MemberReference MemberReference MemberReference = MemberReference MethodInvocation = runtime getNil MemberReference MemberReference checkArgs ArraySelector valuesAndCriteria ArraySelector myVandC larg ArraySelector myVandC block MemberReference MemberReference yield runtime largs MethodInvocation Literal Literal ctx larg i getAndIncrement 0 1	0
MethodDeclaration Modifier ReferenceType case200_line817 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support Cast Literal Cast MethodInvocation getOperatorCallNode ReferenceType MemberReference "/" ReferenceType MemberReference getPosition Node ArraySelector yyVals Node ArraySelector yyVals BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference - 2 yyTop 0 yyTop	1
MethodDeclaration Modifier Annotation ReferenceType methodMissing FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType args ReferenceType block MethodInvocation ThreadContext IRubyObject RubyModule String IRubyObject Block RubyKernel MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference methodMissing context self name PUBLIC CallType NORMAL args block	0
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType block MethodInvocation MemberReference ThreadContext IRubyObject RubyModule String Block handle TernaryExpression invoke self MemberReference Literal Cast isStatic null ReferenceType MemberReference JavaObjectWrapper self	0
MethodDeclaration Modifier Annotation ReferenceType initialize FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType block This name Literal frame Literal visibility MemberReference Block "initialize" true Visibility PRIVATE	0
MethodDeclaration Modifier ReferenceType callCoerced FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement protected IRubyObject ReferenceType context ReferenceType method ReferenceType other ReferenceType VariableDeclarator BinaryOperation BlockStatement MemberReference ThreadContext String IRubyObject IRubyObject args MethodInvocation == MemberReference Literal ReturnStatement ArraySelector MethodInvocation args MemberReference MemberReference Literal getCoerced args null MethodInvocation Literal MemberReference MemberReference MemberReference callMethod context other false MethodInvocation getRuntime 0 context method ArraySelector args getNil Literal 1	0
MethodDeclaration Modifier ReferenceType newArray FormalParameter FormalParameter LocalVariableDeclaration StatementExpression ReturnStatement final static public RubyArray Modifier ReferenceType runtime Modifier BasicType len ReferenceType VariableDeclarator MethodInvocation MemberReference final Ruby final int RubyArray array ClassCreator RuntimeHelpers MemberReference Literal MemberReference MemberReference fillNil array ReferenceType MemberReference MemberReference array values 0 array.values length runtime RubyArray runtime len	0
MethodDeclaration Modifier ReferenceType newInstance FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression ReturnStatement static public IRubyObject ReferenceType context ReferenceType clazz ReferenceType num ReferenceType den Assignment Assignment MethodInvocation ThreadContext IRubyObject IRubyObject IRubyObject MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MemberReference MemberReference MemberReference canonicalizeInternal num MemberReference MemberReference intValue den MemberReference MemberReference intValue context clazz num den context num context den	0
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter TryStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name LocalVariableDeclaration ReturnStatement CatchClause ThreadContext IRubyObject RubyModule String ReferenceType VariableDeclarator MethodInvocation CatchClauseParameter ThrowStatement JavaProxy proxy MethodInvocation JavaUtil MethodInvocation MethodInvocation convertJavaToUsableRubyObject IllegalAccessException iae MethodInvocation InstanceMethodInvoker MemberReference castJavaProxy context getRuntime field MethodInvocation get context MethodInvocation getRuntime self proxy getObject BinaryOperation newTypeError + Literal MethodInvocation "illegal access getting variable: " iae getMessage	1
MethodDeclaration Modifier Annotation ReferenceType to_s ReturnStatement public JRubyMethod IRubyObject MethodInvocation MethodInvocation getRuntime MethodInvocation newString toString	1
MethodDeclaration Modifier execute StatementExpression public MethodInvocation r run	0
MethodDeclaration Modifier Annotation ReferenceType rbPrivate FormalParameter FormalParameter StatementExpression ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair RubyModule ReferenceType context ReferenceType args MethodInvocation This name Literal rest Literal visibility MemberReference writes MemberReference ThreadContext IRubyObject MemberReference MemberReference MemberReference setVisibility "private" true PRIVATE VISIBILITY context args PRIVATE	0
MethodDeclaration Modifier Annotation ReferenceType limit FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType recv ReferenceType args ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement MemberReference name Literal optional Literal meta Literal IRubyObject IRubyObject Ruby runtime MethodInvocation RubyModule c Cast IRubyObject nCur MethodInvocation > MemberReference Literal LocalVariableDeclaration IfStatement nCur "limit" 1 true recv getRuntime ReferenceType MemberReference c Literal searchInternalModuleVariable args length 0 ReferenceType VariableDeclarator MethodInvocation BlockStatement RubyModule recv "vpPrecLimit" IRubyObject arg MemberReference ! arg isNil IfStatement IfStatement StatementExpression ArraySelector args BinaryOperation BlockStatement BinaryOperation BlockStatement MethodInvocation Literal instanceof MemberReference ReferenceType ThrowStatement > Literal Cast ThrowStatement c Literal MemberReference setInternalModuleVariable 0 arg RubyFixnum MethodInvocation 0 ReferenceType MemberReference MethodInvocation "vpPrecLimit" arg runtime MemberReference MethodInvocation newTypeError RubyFixnum arg runtime Literal newArgumentError arg runtime getFixnum "argument must be positive"	1
MethodDeclaration Modifier Annotation ReferenceType entries ReturnStatement public JRubyMethod ElementValuePair RubyArray MethodInvocation name Literal MethodInvocation getRuntime "entries" MethodInvocation newArrayNoCopy JavaUtil MethodInvocation MemberReference convertJavaArrayToRuby getRuntime snapshot	0
MethodDeclaration Modifier put FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression final public ReferenceType runtime ReferenceType io BasicType offset ReferenceType value MethodInvocation Ruby MemoryIO long IRubyObject io MemberReference MethodInvocation putLong offset Util MemberReference int64Value value	1
MethodDeclaration Modifier ReferenceType getVariable1 FormalParameter FormalParameter FormalParameter ReturnStatement final public IRubyObject ReferenceType runtime ReferenceType name ReferenceType object MethodInvocation Ruby String IRubyObject runtimeCache MemberReference Literal MemberReference MemberReference getVariable runtime 1 name object	0
MethodDeclaration Modifier visitCode StatementExpression public MethodInvocation MethodInvocation getMethodVisitor visitCode	0
MethodDeclaration Modifier ReferenceType newComplexCanonicalize FormalParameter FormalParameter ReturnStatement static public IRubyObject ReferenceType context ReferenceType x MethodInvocation ThreadContext IRubyObject MemberReference MemberReference MethodInvocation newComplexCanonicalize context x RubyFixnum MethodInvocation zero context getRuntime	0
MethodDeclaration Modifier ReferenceType fetchCompileTimeArrayElement FormalParameter FormalParameter IfStatement public Operand BasicType argIndex BasicType getSubArray BinaryOperation ReturnStatement IfStatement int boolean instanceof MemberReference ReferenceType Cast BinaryOperation ReturnStatement ReturnStatement _array Array ReferenceType MemberReference instanceof MemberReference ReferenceType Cast Literal Array _array _array Range ReferenceType MemberReference null Range _array	1
MethodDeclaration Modifier ReferenceType egid_set FormalParameter FormalParameter StatementExpression ReturnStatement static public IRubyObject ReferenceType runtime ReferenceType arg MethodInvocation MethodInvocation Ruby IRubyObject runtime MethodInvocation getPosix RubyFixnum MemberReference zero Cast setegid runtime BasicType MethodInvocation int arg MethodInvocation convertToInteger getLongValue	1
MethodDeclaration Modifier ReferenceType getMethodSignatures IfStatement ReturnStatement public Map TypeArgument TypeArgument BinaryOperation ReturnStatement MemberReference ReferenceType ReferenceType == MemberReference Literal MemberReference methodSignatures String Class methodSignatures null Collections EMPTY_MAP	1
MethodDeclaration Modifier BasicType strLength FormalParameter FormalParameter FormalParameter FormalParameter IfStatement LocalVariableDeclaration ForStatement ReturnStatement static public int ReferenceType enc BasicType bytes BasicType p BasicType end MethodInvocation BlockStatement IfStatement BasicType VariableDeclarator ForControl StatementExpression MemberReference Encoding byte int int enc isFixedWidth ReturnStatement MethodInvocation BlockStatement int c Assignment BinaryOperation MemberReference Assignment c BinaryOperation enc isAsciiCompatible LocalVariableDeclaration WhileStatement ReturnStatement MemberReference Literal = > MemberReference MemberReference ++ c MemberReference MethodInvocation += / BinaryOperation MethodInvocation BasicType VariableDeclarator BinaryOperation BlockStatement MemberReference c 0 end p p MemberReference MemberReference MemberReference MemberReference length - BinaryOperation Literal enc minLength int c Literal < MemberReference MemberReference IfStatement StatementExpression StatementExpression c enc bytes p end + BinaryOperation MethodInvocation 1 0 p end MethodInvocation BlockStatement Assignment MemberReference - MemberReference MemberReference enc minLength Encoding MemberReference isAscii LocalVariableDeclaration IfStatement StatementExpression StatementExpression MemberReference MethodInvocation += ++ c end p ArraySelector bytes BasicType VariableDeclarator BinaryOperation ReturnStatement Assignment Assignment p MemberReference MemberReference MemberReference MemberReference length MemberReference int q MethodInvocation == MemberReference Literal BinaryOperation MemberReference BinaryOperation += MemberReference MemberReference = enc bytes p end p MemberReference MemberReference MemberReference searchNonAscii q - 1 + MemberReference BinaryOperation c - MemberReference MemberReference p q bytes p end c - MemberReference MemberReference q p end p	1
MethodDeclaration Modifier ReferenceType allocate FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType runtime ReferenceType klass ClassCreator Ruby RubyClass ReferenceType MemberReference MemberReference RubyConverter runtime klass	0
MethodDeclaration Modifier ReferenceType case30_line420 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop MethodInvocation MemberReference Object Object int support Cast backrefAssignError yyVal ReferenceType MemberReference Node ArraySelector yyVals BinaryOperation + Literal MemberReference - 2 yyTop	1
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression ReturnStatement public IRubyObject ReferenceType context ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 ReferenceType arg3 ReferenceType arg4 ReferenceType arg5 ReferenceType arg6 ReferenceType arg7 ReferenceType arg8 ReferenceType arg9 ReferenceType binding ReferenceType type ReferenceType VariableDeclarator Assignment MethodInvocation ThreadContext IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject Binding Block ReferenceType IRubyObject args ArrayCreator MemberReference MethodInvocation = MemberReference MethodInvocation Literal Literal Literal MemberReference MemberReference yield Type ReferenceType ArrayInitializer args MemberReference MemberReference MemberReference prepareArgumentsForCall context RubyArray MethodInvocation MemberReference newArrayNoCopy null null true binding type IRubyObject MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference context args type context getRuntime args arg0 arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8 arg9	1
MethodDeclaration Modifier ReferenceType case75_line566 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference Cast = yyVal yyVal ReferenceType MemberReference Node ArraySelector yyVals BinaryOperation + Literal MemberReference - 1 yyTop	1
MethodDeclaration Modifier setObject FormalParameter StatementExpression public ReferenceType obj Assignment Object MemberReference MemberReference = object obj	0
MethodDeclaration Modifier ReferenceType case420_line1618 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference Cast = yyVal yyVal ReferenceType MemberReference ListNode ArraySelector yyVals BinaryOperation + Literal MemberReference - 2 yyTop	1
MethodDeclaration Modifier ReferenceType getPosition ReturnStatement public ISourcePosition MemberReference position	0
MethodDeclaration Modifier ReferenceType getProperty FormalParameter FormalParameter TryStatement static public String ReferenceType property ReferenceType defValue ReturnStatement CatchClause String String MethodInvocation CatchClauseParameter ReturnStatement System MemberReference MemberReference getProperty SecurityException se MemberReference property defValue defValue	0
MethodDeclaration Modifier BasicType isValueReferenceNeeded ReturnStatement protected boolean Literal false	0
MethodDeclaration Modifier Annotation ReferenceType add_parameter_annotations FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration ForStatement ReturnStatement static public JRubyMethod IRubyObject ReferenceType context ReferenceType maybeClass ReferenceType methodName ReferenceType paramAnnoMaps ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ForControl BlockStatement MethodInvocation ThreadContext IRubyObject IRubyObject IRubyObject RubyClass clazz MethodInvocation String method MethodInvocation List TypeArgument annos Cast VariableDeclaration BinaryOperation MemberReference LocalVariableDeclaration ForStatement context MethodInvocation getRuntime MemberReference MemberReference getRubyClass methodName MethodInvocation convertToString ReferenceType ReferenceType MemberReference BasicType VariableDeclarator >= MemberReference Literal -- i ReferenceType VariableDeclarator EnhancedForControl BlockStatement getNil maybeClass context asJavaString Map TypeArgument TypeArgument List TypeArgument paramAnnoMaps int i BinaryOperation i 0 Map TypeArgument TypeArgument paramAnnos MethodInvocation VariableDeclaration MethodInvocation LocalVariableDeclaration IfStatement StatementExpression ReferenceType ReferenceType ReferenceType - MethodInvocation Literal ReferenceType ReferenceType annos MemberReference get ReferenceType VariableDeclarator paramAnnos entrySet ReferenceType VariableDeclarator BinaryOperation StatementExpression MethodInvocation Class Map TypeArgument TypeArgument Map TypeArgument TypeArgument annos size 1 Class Map TypeArgument TypeArgument i Map ReferenceType entry Map TypeArgument TypeArgument value MethodInvocation == MemberReference Literal Assignment clazz MemberReference MemberReference MethodInvocation MemberReference addParameterAnnotation ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType Entry TypeArgument TypeArgument ReferenceType ReferenceType entry getValue value null MemberReference MemberReference = method i MemberReference MethodInvocation getAnnoClass value String Object Class Map TypeArgument TypeArgument String Object ReferenceType ReferenceType String Object value Collections EMPTY_MAP context entry getKey ReferenceType ReferenceType Class Map TypeArgument TypeArgument String Object ReferenceType ReferenceType String Object	1
MethodDeclaration Modifier Annotation ReferenceType put_callback FormalParameter FormalParameter FormalParameter FormalParameter IfStatement LocalVariableDeclaration StatementExpression ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType offset ReferenceType proc ReferenceType cbInfo BinaryOperation BlockStatement ReferenceType VariableDeclarator MethodInvocation This name Literal required Literal ThreadContext IRubyObject IRubyObject IRubyObject instanceof MemberReference ReferenceType ThrowStatement Pointer ptr MethodInvocation MethodInvocation getMemoryIO "put_callback" 3 cbInfo CallbackInfo MethodInvocation Factory MethodInvocation MethodInvocation getInstance MethodInvocation Cast putMemoryIO context MethodInvocation getRuntime getCallbackManager MethodInvocation Cast MemberReference getCallback MemberReference getOffset ReferenceType MemberReference Literal newArgumentError context getRuntime ReferenceType MemberReference proc offset AbstractMemory ptr "invalid CallbackInfo" CallbackInfo cbInfo	1
MethodDeclaration Modifier ReferenceType getScope ReturnStatement public StaticScope MemberReference scope	0
MethodDeclaration Modifier testFormatWithLeadingSpace StatementExpression StatementExpression StatementExpression public MethodInvocation MethodInvocation MethodInvocation MethodInvocation assertFalse MethodInvocation assertTrue MethodInvocation assertFalse RubyBigDecimal Literal formatHasLeadingSpace RubyBigDecimal Literal formatHasLeadingSpace RubyBigDecimal Literal formatHasLeadingSpace "+" " " "1"	0
MethodDeclaration Modifier BasicType execAndWait FormalParameter FormalParameter LocalVariableDeclaration IfStatement static public int ReferenceType runtime ReferenceType rawArgs ReferenceType VariableDeclarator MethodInvocation BlockStatement BlockStatement Ruby IRubyObject String args MethodInvocation MemberReference MemberReference shouldRunInProcess TryStatement ReturnStatement MethodInvocation MemberReference MemberReference parseCommandLine runtime args LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement LocalVariableDeclaration StatementExpression LocalVariableDeclaration StatementExpression ReturnStatement CatchClause CatchClause MethodInvocation runtime getCurrentContext runtime rawArgs ReferenceType VariableDeclarator ReferenceType VariableDeclarator BasicType VariableDeclarator MethodInvocation BlockStatement ReferenceType VariableDeclarator MethodInvocation ReferenceType VariableDeclarator MethodInvocation MethodInvocation CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement MemberReference MemberReference runAndWait File pwd ClassCreator String command MemberReference int startIndex TernaryExpression command MethodInvocation trim StatementExpression StatementExpression String newargs ArrayCreator System MemberReference MemberReference MemberReference Literal MemberReference arraycopy ScriptThreadProcess ipScript ClassCreator ipScript start ipScript waitFor IOException e MethodInvocation InterruptedException e MethodInvocation runtime rawArgs ReferenceType MethodInvocation ArraySelector args MethodInvocation Literal Literal Literal endsWith Assignment Assignment ReferenceType BinaryOperation args startIndex newargs 0 newargs length ReferenceType MemberReference MemberReference MethodInvocation MemberReference Literal runtime MemberReference newIOErrorFromException runtime Literal newThreadError File runtime getCurrentDirectory Literal command Literal endsWith 0 1 "irb" MemberReference Literal = MemberReference BinaryOperation = String - MemberReference MemberReference ScriptThreadProcess runtime newargs MemberReference getCurrentEnv pwd false e "unexpected interrupt" 0 ".rb" startIndex 0 ArraySelector args + BinaryOperation Literal args length startIndex runtime Literal + BinaryOperation MemberReference "jirb" 0 + BinaryOperation Literal File separator + MethodInvocation MemberReference "bin" runtime getJRubyHome File separator	1
MethodDeclaration Modifier ReferenceType initializeCommon FormalParameter FormalParameter LocalVariableDeclaration IfStatement StatementExpression IfStatement StatementExpression StatementExpression StatementExpression ReturnStatement private RubyRegexp ReferenceType bytes BasicType options ReferenceType VariableDeclarator BinaryOperation ThrowStatement MethodInvocation MethodInvocation ThrowStatement MethodInvocation Assignment Assignment This ByteList int Ruby runtime MethodInvocation && MethodInvocation BinaryOperation MethodInvocation checkFrozen isLiteral MethodInvocation MemberReference MemberReference setKCode MemberReference MethodInvocation = MemberReference MemberReference = getRuntime ! isTaint >= MethodInvocation Literal runtime Literal newSecurityError runtime Literal newSecurityError runtime options pattern MemberReference MemberReference MethodInvocation BinaryOperation getRegexpFromCache str bytes runtime getSafeLevel 4 "Insecure: can't modify regexp" "can't modify literal regexp" runtime bytes kcode getEncoding & MemberReference Literal options 0xf	1
MethodDeclaration Modifier ReferenceType childNodes ReturnStatement public List TypeArgument MethodInvocation ReferenceType MemberReference createList Node node	0
MethodDeclaration Modifier selfIsKindOf FormalParameter StatementExpression StatementExpression StatementExpression StatementExpression public ReferenceType gotoToken MethodInvocation MethodInvocation MethodInvocation MethodInvocation Object method MethodInvocation Literal MethodInvocation invokevirtual loadSelf method MethodInvocation Literal MethodInvocation invokevirtual method Cast ifne ClassReference p "getRealClass" ClassReference sig ClassReference p "isInstance" ClassReference MethodInvocation sig ReferenceType MemberReference ReferenceType ReferenceType ReferenceType BasicType ClassReference params Label gotoToken RubyClass RubyClass RubyModule boolean ReferenceType IRubyObject	0
MethodDeclaration Modifier init FormalParameter StatementExpression StatementExpression StatementExpression private BasicType window_bits Assignment Assignment Assignment int MemberReference ClassCreator = MemberReference ClassCreator = MemberReference ClassCreator = flater ReferenceType BinaryOperation collected ReferenceType MemberReference input ReferenceType Inflater < MemberReference Literal ByteList BASE_SIZE ByteList window_bits 0	1
MethodDeclaration Modifier BasicType equals FormalParameter ReturnStatement public boolean ReferenceType other BinaryOperation Object && BinaryOperation BinaryOperation instanceof MemberReference ReferenceType == This Cast other JavaConstructor MemberReference ReferenceType MemberReference constructor JavaConstructor other	0
MethodDeclaration Modifier BasicType getTypeSize FormalParameter LocalVariableDeclaration ReturnStatement private static final int ReferenceType type BasicType VariableDeclarator TernaryExpression IRubyObject int index MethodInvocation BinaryOperation MemberReference Literal NativeType MethodInvocation MemberReference valueOf && BinaryOperation BinaryOperation ArraySelector sizes - 1 ordinal type >= MemberReference Literal < MemberReference MemberReference MemberReference index 0 index sizes length index	1
MethodDeclaration Modifier ReferenceType case183_line745 FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression LocalVariableDeclaration StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop MethodInvocation MethodInvocation BasicType VariableDeclarator Assignment MemberReference Object Object int support Cast checkExpression support Cast checkExpression boolean isLiteral BinaryOperation MemberReference ClassCreator = yyVal ReferenceType MemberReference ReferenceType MemberReference && BinaryOperation BinaryOperation yyVal ReferenceType MethodInvocation Cast Cast Literal MemberReference Node ArraySelector yyVals Node ArraySelector yyVals instanceof Cast ReferenceType instanceof Cast ReferenceType DotNode Cast getPosition ReferenceType MemberReference ReferenceType MemberReference true isLiteral BinaryOperation BinaryOperation ReferenceType MemberReference FixnumNode ReferenceType MemberReference FixnumNode ReferenceType MemberReference Node ArraySelector yyVals Node ArraySelector yyVals + Literal MemberReference + Literal MemberReference Node ArraySelector yyVals Node ArraySelector yyVals Node ArraySelector yyVals BinaryOperation BinaryOperation - 2 yyTop 0 yyTop BinaryOperation BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference + Literal MemberReference + Literal MemberReference + Literal MemberReference - 2 yyTop 0 yyTop - 2 yyTop 0 yyTop - 2 yyTop	1
MethodDeclaration Modifier ReferenceType toString ReturnStatement public String MethodInvocation threadImpl toString	0
MethodDeclaration Modifier ReferenceType infectBy FormalParameter StatementExpression ReturnStatement final RubyBasicObject BasicType tuFlags Assignment This int MemberReference BinaryOperation |= flags & MemberReference BinaryOperation tuFlags | MemberReference MemberReference TAINTED_F UNTRUSTED_F	1
MethodDeclaration Modifier BasicType isConstant ReturnStatement public boolean Literal false	0
MethodDeclaration Modifier Annotation ReferenceType lchmod FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context ReferenceType arg BasicType VariableDeclarator ClassCreator BlockStatement MethodInvocation required Literal ThreadContext IRubyObject int mode Cast ! MethodInvocation ReferenceType MemberReference ThrowStatement context MethodInvocation getRuntime 1 BasicType MethodInvocation exists File path MethodInvocation MethodInvocation newFixnum int arg MethodInvocation convertToInteger context MethodInvocation getRuntime context MethodInvocation MethodInvocation getRuntime getLongValue BinaryOperation newErrnoENOENTError getPosix MemberReference MemberReference lchmod + Literal MemberReference path mode "No such file or directory - " path	0
MethodDeclaration Modifier createVariableCompiler IfStatement protected BinaryOperation BlockStatement IfStatement == MemberReference Literal StatementExpression BinaryOperation BlockStatement BlockStatement inspector null Assignment || MethodInvocation MethodInvocation StatementExpression StatementExpression MemberReference ClassCreator = inspector hasClosure inspector hasScopeAwareMethods Assignment Assignment variableCompiler ReferenceType This MemberReference MemberReference Literal MemberReference MethodInvocation MemberReference ClassCreator = MemberReference ClassCreator = HeapBasedVariableCompiler method scope false StandardASMCompiler ARGS_INDEX getFirstTempIndex variableCompiler ReferenceType This MemberReference MemberReference Literal MemberReference MethodInvocation variableCompiler ReferenceType This MemberReference MemberReference Literal MemberReference MethodInvocation HeapBasedVariableCompiler method scope false StandardASMCompiler ARGS_INDEX getFirstTempIndex StackBasedVariableCompiler method scope false StandardASMCompiler ARGS_INDEX getFirstTempIndex	0
MethodDeclaration Modifier Annotation ReferenceType copy_data_simple FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration StatementExpression ReturnStatement static public JRubyMethod IRubyObject ReferenceType context ReferenceType from ReferenceType to ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MemberReference ThreadContext IRubyObject IRubyObject JavaArray javaArray Cast RubyArray rubyArray Cast MemberReference MemberReference MemberReference copyDataToJavaArray to ReferenceType MethodInvocation ReferenceType MemberReference context rubyArray javaArray JavaArray to dataGetStruct RubyArray from	1
MethodDeclaration Modifier ReferenceType case197_line808 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support Cast Literal Cast MethodInvocation getOperatorCallNode ReferenceType MemberReference "+" ReferenceType MemberReference getPosition Node ArraySelector yyVals Node ArraySelector yyVals BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference - 2 yyTop 0 yyTop	1
MethodDeclaration Modifier Annotation tearDown Exception IfStatement protected Override BinaryOperation BlockStatement != MemberReference Literal StatementExpression StatementExpression testDir null MethodInvocation MethodInvocation testFile delete testDir delete	0
MethodDeclaration Modifier Annotation ReferenceType name ReturnStatement public JRubyMethod ElementValuePair IRubyObject MemberReference name Literal name "name"	0
MethodDeclaration Modifier nextValue FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration StatementExpression public ReferenceType context ReferenceType sourceArray BasicType index ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation BodyCompiler Object int ListNode headNode Cast Node assignNode MethodInvocation MemberReference MemberReference Literal compileAssignment ReferenceType MemberReference headNode MemberReference get assignNode context false ListNode sourceArray index	0
MethodDeclaration Modifier ReferenceType getValue ReturnStatement public Object MethodInvocation bri getValue	0
MethodDeclaration Modifier testPrintErrorWithStringBacktrace Exception StatementExpression public MethodInvocation Literal testPrintErrorWithBacktrace "\"abc\""	0
MethodDeclaration Modifier Annotation ReferenceType reset StatementExpression ReturnStatement public JRubyMethod ElementValuePair IRubyObject MethodInvocation MethodInvocation name Literal internalReset MethodInvocation getRuntime "reset" getNil	0
MethodDeclaration Modifier ReferenceType createBlock19 FormalParameter FormalParameter FormalParameter ReturnStatement static public Block ReferenceType context ReferenceType self ReferenceType body MethodInvocation ThreadContext IRubyObject BlockBody CompiledBlock19 MemberReference MemberReference MemberReference newCompiledClosure context self body	0
MethodDeclaration Modifier ReferenceType getOS ReturnStatement final public OS MemberReference OS	0
MethodDeclaration Modifier Annotation ReferenceType floor FormalParameter IfStatement IfStatement LocalVariableDeclaration IfStatement IfStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType args MemberReference BlockStatement MethodInvocation BlockStatement BasicType VariableDeclarator BinaryOperation BlockStatement BinaryOperation BlockStatement BlockStatement name Literal optional Literal IRubyObject isNaN ReturnStatement isInfinity ReturnStatement int n Literal > MemberReference Literal StatementExpression > MethodInvocation MemberReference ReturnStatement ReturnStatement "floor" 1 MethodInvocation MethodInvocation 0 args length 0 Assignment value scale n ClassCreator This MethodInvocation newNaN MethodInvocation MemberReference newInfinity MemberReference MethodInvocation = ReferenceType MethodInvocation MethodInvocation getRuntime getRuntime infinitySign n RubyNumeric MemberReference fix2int RubyBigDecimal getRuntime value MemberReference MemberReference setScale ArraySelector args n RoundingMode FLOOR Literal 0	0
MethodDeclaration Modifier ReferenceType getClassVariableBase FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement ReturnStatement static public RubyModule ReferenceType context ReferenceType runtime ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement MemberReference ThreadContext Ruby StaticScope scope MethodInvocation RubyModule rubyClass MethodInvocation || MethodInvocation BinaryOperation StatementExpression StatementExpression IfStatement rubyClass context MethodInvocation getCurrentScope scope getModule rubyClass isSingleton == MemberReference MethodInvocation Assignment Assignment BinaryOperation BlockStatement getStaticScope rubyClass runtime getDummy MemberReference MethodInvocation = MemberReference MethodInvocation = == MethodInvocation Literal StatementExpression scope scope getPreviousCRefScope rubyClass scope getModule scope getPreviousCRefScope null MethodInvocation runtime MethodInvocation getWarnings MemberReference Literal warn ID CVAR_FROM_TOPLEVEL_SINGLETON_METHOD "class variable access from toplevel singleton method"	0
MethodDeclaration Modifier ReferenceType getName ReturnStatement public String MemberReference _refName	0
MethodDeclaration Modifier emitDEF_INST_METH FormalParameter LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression public ReferenceType instr ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation DEFINE_INSTANCE_METHOD_Instr IR_Method irMethod MemberReference GeneratorAdapter adapter ClassCreator adapter loadThis adapter loadArgs adapter MethodInvocation MethodInvocation invokeStatic adapter returnValue adapter endMethod instr _method ReferenceType MemberReference MethodInvocation Literal Literal MethodInvocation Type ClassReference getType Method BinaryOperation getMethod GeneratorAdapter ACC_PUBLIC Method BinaryOperation getMethod null null cls ReferenceType + BinaryOperation Literal + BinaryOperation Literal Object + Literal MemberReference " (Object)" + Literal MemberReference " ()" "Object __ruby__" irMethod _name "void " irMethod _name	1
MethodDeclaration Modifier Annotation ReferenceType getParent ReturnStatement public Override String Literal ""	0
MethodDeclaration Modifier visit FormalParameter FormalParameter StatementExpression StatementExpression public ReferenceType key ReferenceType value Assignment Assignment IRubyObject IRubyObject MemberReference MethodInvocation ^= MemberReference MethodInvocation ^= ArraySelector hash key MethodInvocation MethodInvocation MemberReference Literal callMethod ArraySelector hash value MethodInvocation MethodInvocation MemberReference Literal callMethod Literal convertToInteger getLongValue context "hash" Literal convertToInteger getLongValue context "hash" 0 0	0
MethodDeclaration Modifier ReferenceType getDigestHexNoClone ReturnStatement private ByteList MethodInvocation MethodInvocation toHex getDigestNoClone	0
MethodDeclaration Modifier ReferenceType getInputStream ReturnStatement public InputStream MemberReference inputStream	0
MethodDeclaration Modifier call FormalParameter StatementExpression public ReferenceType context MethodInvocation BodyCompiler MethodInvocation MemberReference Literal compile classVarDeclNode getValueNode context true	0
MethodDeclaration Modifier ReferenceType constructHash FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression StatementExpression StatementExpression ReturnStatement static public RubyHash ReferenceType runtime ReferenceType key1 ReferenceType value1 ReferenceType key2 ReferenceType value2 ReferenceType key3 ReferenceType value3 ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MemberReference Ruby IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject RubyHash hash MethodInvocation hash MemberReference MemberReference MemberReference fastASetCheckString hash MemberReference MemberReference MemberReference fastASetCheckString hash MemberReference MemberReference MemberReference fastASetCheckString hash RubyHash MemberReference newHash runtime key1 value1 runtime key2 value2 runtime key3 value3 runtime	0
MethodDeclaration Modifier ReferenceType preOpAsgnWithOrAnd FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement static public IRubyObject ReferenceType receiver ReferenceType context ReferenceType self ReferenceType varSite MethodInvocation IRubyObject ThreadContext IRubyObject CallSite varSite MemberReference MemberReference MemberReference call context self receiver	0
MethodDeclaration Modifier Annotation ReferenceType getegid FormalParameter ReturnStatement static public Deprecated IRubyObject ReferenceType self MethodInvocation IRubyObject MethodInvocation egid self getRuntime	1
MethodDeclaration Modifier branch FormalParameter StatementExpression public ReferenceType context MethodInvocation BodyCompiler MethodInvocation MemberReference MemberReference compileRescueBodyInternal rescueNode getRescueNode context light	0
MethodDeclaration Modifier Annotation Annotation ReferenceType to_s LocalVariableDeclaration IfStatement IfStatement LocalVariableDeclaration StatementExpression LocalVariableDeclaration IfStatement LocalVariableDeclaration IfStatement LocalVariableDeclaration WhileStatement StatementExpression StatementExpression ReturnStatement public JRubyMethod ElementValuePair Override IRubyObject ReferenceType VariableDeclarator MethodInvocation ReturnStatement MethodInvocation ReturnStatement ReferenceType VariableDeclarator MethodInvocation BasicType VariableDeclarator BinaryOperation StatementExpression ReferenceType VariableDeclarator MethodInvocation BlockStatement BasicType VariableDeclarator BinaryOperation StatementExpression MethodInvocation Assignment MethodInvocation name Literal Ruby runtime MethodInvocation Double MemberReference isInfinite MethodInvocation Double MemberReference isNaN MethodInvocation ByteList buf ClassCreator Sprintf MemberReference MemberReference Literal This sprintf int e MethodInvocation == MemberReference Literal Assignment ASCIIEncoding ascii MemberReference ! ascii MethodInvocation isDigit StatementExpression StatementExpression StatementExpression IfStatement int p MemberReference && BinaryOperation MethodInvocation MemberReference System MemberReference MemberReference MemberReference MemberReference BinaryOperation arraycopy MemberReference BinaryOperation = runtime MemberReference newString "to_s" getRuntime value RubyString MemberReference TernaryExpression newString value RubyString MemberReference Literal newString ReferenceType buf Locale US "%#.15g" buf Literal indexOf e - 1 MemberReference MemberReference = ASCIIEncoding INSTANCE buf BinaryOperation get Assignment MethodInvocation Assignment BinaryOperation StatementExpression e == MethodInvocation Literal ascii MethodInvocation isDigit -- p buf bytes e buf bytes p - MemberReference MemberReference buf realSize - BinaryOperation MemberReference buf runtime BinaryOperation Literal Literal runtime "NaN" ByteList 'e' e buf realSize - MemberReference Literal MemberReference Literal = Sprintf MemberReference MemberReference Literal This sprintf MemberReference MethodInvocation = == MemberReference Literal Assignment buf BinaryOperation get '0' buf BinaryOperation get buf realSize e + MemberReference MemberReference e < MemberReference Literal "-Infinity" "Infinity" e 1 buf realSize 0 buf Locale US "%#.14e" e buf Literal indexOf e - 1 MemberReference MemberReference = - MemberReference Literal - MemberReference Literal p buf realSize value 0 'e' e buf realSize p 1 p 2	1
MethodDeclaration Modifier trimStackTrace FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration ForStatement IfStatement IfStatement public ReferenceType target ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator BasicType VariableDeclarator ForControl BlockStatement BinaryOperation BlockStatement BinaryOperation BlockStatement Member Throwable t ClassCreator StackTraceElement origStackTrace MethodInvocation StackTraceElement currentStackTrace MethodInvocation int skip Literal VariableDeclaration BinaryOperation MemberReference LocalVariableDeclaration LocalVariableDeclaration IfStatement != MemberReference Literal LocalVariableDeclaration LocalVariableDeclaration ForStatement > MemberReference Literal LocalVariableDeclaration ForStatement StatementExpression ReferenceType cause getStackTrace t getStackTrace 0 BasicType VariableDeclarator && BinaryOperation BinaryOperation ++ i ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation BlockStatement BlockStatement target null ReferenceType VariableDeclarator ReferenceType VariableDeclarator ForControl BlockStatement skip 0 ReferenceType VariableDeclarator ForControl BlockStatement MethodInvocation Throwable int i Literal <= MemberReference MemberReference <= MemberReference MemberReference StackTraceElement a MemberReference StackTraceElement b MemberReference a MemberReference equals StatementExpression BreakStatement String className MethodInvocation String methodName MethodInvocation VariableDeclaration BinaryOperation MemberReference LocalVariableDeclaration IfStatement StackTraceElement newStackTrace ArrayCreator VariableDeclaration BinaryOperation MemberReference StatementExpression cause MemberReference setStackTrace 1 i origStackTrace length i currentStackTrace length ArraySelector origStackTrace ArraySelector currentStackTrace b Assignment target MethodInvocation getDeclaringClass target getName BasicType VariableDeclarator >= MemberReference Literal -- i ReferenceType VariableDeclarator BinaryOperation BlockStatement ReferenceType BinaryOperation BasicType VariableDeclarator < MemberReference MemberReference ++ i Assignment newStackTrace BinaryOperation BinaryOperation MemberReference Literal += getName int i BinaryOperation i 0 StackTraceElement frame MemberReference && MethodInvocation MethodInvocation StatementExpression BreakStatement StackTraceElement - MemberReference MemberReference int i Literal i newStackTrace length MemberReference MemberReference = - MemberReference MemberReference - MemberReference MemberReference skip 1 - BinaryOperation Literal ArraySelector origStackTrace frame MethodInvocation getClassName frame MethodInvocation getMethodName Assignment origStackTrace length skip 0 ArraySelector newStackTrace ArraySelector origStackTrace origStackTrace length i currentStackTrace length i - MemberReference MemberReference 1 MemberReference MemberReference equals MemberReference equals MemberReference BinaryOperation = MemberReference MemberReference origStackTrace length skip i className methodName skip - BinaryOperation Literal i i - MemberReference MemberReference 1 origStackTrace length i	0
MethodDeclaration Modifier Annotation ReferenceType define_method FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement IfStatement StatementExpression ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType arg0 ReferenceType arg1 ReferenceType block ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation StatementExpression MethodInvocation BlockStatement IfStatement MethodInvocation MemberReference name Literal frame Literal visibility MemberReference reads MemberReference ThreadContext IRubyObject IRubyObject Block Ruby runtime MethodInvocation IRubyObject body String name MethodInvocation DynamicMethod newMethod Literal Visibility visibility MethodInvocation == MemberReference MemberReference Assignment runtime MethodInvocation getProc LocalVariableDeclaration StatementExpression StatementExpression MethodInvocation BlockStatement BlockStatement RuntimeHelpers This MemberReference MemberReference MethodInvocation MemberReference MemberReference addInstanceMethod body "define_method" true PRIVATE VISIBILITY context getRuntime arg0 MethodInvocation asJavaString null context getCurrentVisibility visibility MODULE_FUNCTION MemberReference MemberReference = MemberReference isInstance ReferenceType VariableDeclarator Assignment Assignment runtime MethodInvocation getMethod LocalVariableDeclaration StatementExpression StatementExpression ThrowStatement name newMethod context getPreviousVisibility context runtime intern visibility PRIVATE arg1 RubyProc proc Cast MemberReference MemberReference = MemberReference MethodInvocation = MemberReference isInstance ReferenceType VariableDeclarator Assignment Assignment MethodInvocation ReferenceType MemberReference body proc newMethod MemberReference MemberReference MemberReference createProcMethod arg1 RubyMethod method Cast MemberReference MemberReference = MemberReference ClassCreator = runtime BinaryOperation newTypeError RubyProc arg1 name visibility proc ReferenceType MemberReference body method newMethod ReferenceType This MethodInvocation MemberReference + BinaryOperation Literal RubyMethod arg1 MethodMethod method Literal unbind visibility + Literal MethodInvocation " (expected Proc/Method)" null "wrong argument type " arg1 MethodInvocation getType getName	1
MethodDeclaration Modifier ReferenceType getParameterTypes ReturnStatement final public Type MemberReference parameterTypes	0
MethodDeclaration Modifier ReferenceType buildCall FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression ReturnStatement public Operand ReferenceType callNode ReferenceType s ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MemberReference CallNode IR_Scope Node callArgsNode MethodInvocation Node receiverNode MethodInvocation List TypeArgument args MethodInvocation Operand block MethodInvocation Variable callResult MethodInvocation IR_Instr callInstr ClassCreator s MemberReference addInstr callResult callNode getArgsNode callNode getReceiverNode ReferenceType MemberReference MemberReference MemberReference setupCallArgs MethodInvocation MemberReference setupCallClosure s getNewVariable ReferenceType MemberReference ClassCreator MethodInvocation MemberReference callInstr Operand receiverNode callArgsNode s callNode getIterNode s CALL_Instr callResult ReferenceType MethodInvocation args ArrayCreator toArray block MethAddr callNode getName ReferenceType MethodInvocation Operand args size	1
MethodDeclaration Modifier ReferenceType case436_line1632 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support MethodInvocation Literal Cast Cast Literal Cast new_args Cast getPosition null ReferenceType MemberReference ReferenceType MemberReference null ReferenceType MemberReference ReferenceType MemberReference ListNode ArraySelector yyVals RestArgNode ArraySelector yyVals BlockArgNode ArraySelector yyVals ListNode ArraySelector yyVals BinaryOperation BinaryOperation BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference + Literal MemberReference + Literal MemberReference - 3 yyTop - 1 yyTop 0 yyTop - 3 yyTop	1
MethodDeclaration Modifier Annotation ReferenceType try_convert FormalParameter FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType args MethodInvocation name Literal meta Literal compat MemberReference ThreadContext IRubyObject IRubyObject TypeConverter MemberReference MethodInvocation Literal convertToTypeWithCheck "try_convert" true CompatVersion RUBY1_9 args context MethodInvocation getRuntime "to_regexp" getRegexp	1
MethodDeclaration Modifier Annotation ReferenceType private_method_defined FormalParameter FormalParameter LocalVariableDeclaration ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType symbol ReferenceType VariableDeclarator MethodInvocation name Literal required Literal ThreadContext IRubyObject DynamicMethod method MethodInvocation context MethodInvocation getRuntime "private_method_defined?" 1 MethodInvocation searchMethod BinaryOperation newBoolean symbol asJavaString && MethodInvocation BinaryOperation ! method isUndefined == MethodInvocation MemberReference method getVisibility PRIVATE	1
MethodDeclaration Modifier Annotation Annotation ReferenceType inspect LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression ReturnStatement synchronized public JRubyMethod ElementValuePair Override IRubyObject ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation name Literal StringBuilder part ClassCreator String cname MethodInvocation part MethodInvocation MethodInvocation Literal append part MethodInvocation append part MethodInvocation append part Literal append MethodInvocation getRuntime "inspect" ReferenceType MethodInvocation MethodInvocation getMetaClass MemberReference append Literal append "#<" Integer MethodInvocation toHexString status MethodInvocation toString ">" MethodInvocation newString StringBuilder getRealClass getName cname ":0x" System This identityHashCode toLowerCase part toString	1
MethodDeclaration Modifier ReferenceType defineModuleUnder FormalParameter FormalParameter LocalVariableDeclaration IfStatement LocalVariableDeclaration ReturnStatement public RubyModule ReferenceType pkg ReferenceType name ReferenceType VariableDeclarator BinaryOperation BlockStatement ReferenceType VariableDeclarator Cast RubyModule String IRubyObject packageName == Assignment Literal ReturnStatement Ruby runtime MethodInvocation ReferenceType MethodInvocation MemberReference MethodInvocation = null Literal pkg getRuntime RubyModule MemberReference MethodInvocation get_interface_module packageName pkg MethodInvocation getInstanceVariables null runtime JavaClass MemberReference BinaryOperation forNameVerbose Literal fastGetInstanceVariable runtime + MethodInvocation MemberReference "@package_name" packageName asJavaString name	1
MethodDeclaration Modifier ReferenceType yield FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter IfStatement LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration TryStatement public IRubyObject ReferenceType context ReferenceType args ReferenceType self ReferenceType klass BasicType aValue ReferenceType binding ReferenceType type BinaryOperation BlockStatement ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReturnStatement CatchClause StatementExpression ThreadContext IRubyObject IRubyObject RubyModule boolean Binding Block ReferenceType == MemberReference Literal StatementExpression IRubyObject realArg TernaryExpression Visibility oldVis MethodInvocation Frame lastFrame MethodInvocation MethodInvocation CatchClauseParameter ReturnStatement MethodInvocation Type klass null Assignment MemberReference MethodInvocation MethodInvocation binding MethodInvocation getFrame MemberReference MemberReference MemberReference pre callback MemberReference MemberReference MemberReference call JumpException.NextJump nj MethodInvocation MemberReference MemberReference MemberReference MemberReference post MemberReference MethodInvocation = aValue MemberReference MemberReference MemberReference setupBlockArgs MethodInvocation MemberReference MemberReference setupBlockArg getVisibility context klass binding context self realArg MemberReference MemberReference MemberReference handleNextJump context binding oldVis lastFrame self MemberReference prepareSelf context args self context getRuntime args self context nj type binding	0
MethodDeclaration Modifier ReferenceType case71_line551 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference Cast = yyVal yyVal ReferenceType MemberReference MultipleAsgnNode ArraySelector yyVals BinaryOperation + Literal MemberReference - 1 yyTop	1
MethodDeclaration Modifier put FormalParameter FormalParameter FormalParameter FormalParameter ThrowStatement final public BasicType offset BasicType src BasicType off BasicType len MethodInvocation long byte int int ex	0
MethodDeclaration Modifier ReferenceType newInstance FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement static public IRubyObject ReferenceType context ReferenceType clazz ReferenceType num Assignment MethodInvocation ThreadContext IRubyObject IRubyObject MemberReference MethodInvocation = MemberReference MemberReference MemberReference MethodInvocation canonicalizeInternal num MemberReference MemberReference intValue context clazz num RubyFixnum MethodInvocation one context num context getRuntime	0
MethodDeclaration Modifier ReferenceType case345_line1305 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support MethodInvocation Cast Literal Cast Cast Cast new_args Cast getPosition ReferenceType MemberReference null ReferenceType MemberReference ReferenceType MemberReference ReferenceType MemberReference ReferenceType MemberReference ListNode ArraySelector yyVals RestArgNode ArraySelector yyVals ListNode ArraySelector yyVals BlockArgNode ArraySelector yyVals ListNode ArraySelector yyVals BinaryOperation BinaryOperation BinaryOperation BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference + Literal MemberReference + Literal MemberReference + Literal MemberReference - 5 yyTop - 3 yyTop - 1 yyTop 0 yyTop - 5 yyTop	1
MethodDeclaration Modifier ReferenceType case267_line1041 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop MethodInvocation MemberReference Object Object int lexer MemberReference setState yyVal LexState EXPR_ENDARG	1
MethodDeclaration Modifier setup FormalParameter LocalVariableDeclaration StatementExpression static public ReferenceType runtime ReferenceType VariableDeclarator MethodInvocation Ruby RubyClass cConditionVariable MethodInvocation cConditionVariable ClassReference defineAnnotatedMethods runtime Literal MethodInvocation ClassCreator defineClass ReferenceType "ConditionVariable" runtime getObject ReferenceType MethodDeclaration ConditionVariable ObjectAllocator Modifier ReferenceType allocate FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType runtime ReferenceType klass ClassCreator Ruby RubyClass ReferenceType MemberReference MemberReference ConditionVariable runtime klass	0
MethodDeclaration Modifier BasicType getIOModesIntFromString FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement SwitchStatement ForStatement ReturnStatement static public int ReferenceType runtime ReferenceType modesString BasicType VariableDeclarator BasicType VariableDeclarator BinaryOperation BlockStatement MethodInvocation SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase ModifierLoop ForControl BlockStatement MemberReference Ruby String int modes Literal int length MethodInvocation == MemberReference Literal ThrowStatement modesString Literal charAt Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement ThrowStatement VariableDeclaration BinaryOperation MemberReference SwitchStatement modes 0 modesString length length 0 MethodInvocation 0 'r' Assignment 'a' Assignment 'w' Assignment MethodInvocation BasicType VariableDeclarator < MemberReference MemberReference ++ n MethodInvocation SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase runtime Literal newArgumentError MemberReference MemberReference |= MemberReference BinaryOperation |= MemberReference BinaryOperation |= runtime BinaryOperation newArgumentError int n Literal n length modesString MemberReference charAt Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement Literal BreakStatement Literal BreakStatement ThrowStatement "illegal access mode" modes ModeFlags RDONLY modes | BinaryOperation MemberReference modes | BinaryOperation MemberReference + Literal MemberReference 1 n 'b' Assignment '+' Assignment 't' ':' ModifierLoop MethodInvocation | MemberReference MemberReference ModeFlags CREAT | MemberReference MemberReference ModeFlags CREAT "illegal access mode " modes MemberReference MemberReference |= MemberReference BinaryOperation = runtime BinaryOperation newArgumentError ModeFlags APPEND ModeFlags WRONLY ModeFlags WRONLY ModeFlags TRUNC modes ModeFlags BINARY modes | BinaryOperation MemberReference + Literal MemberReference & MemberReference MemberReference ModeFlags RDWR "illegal access mode " modes modes ~ ModeFlags ACCMODE	1
MethodDeclaration Modifier ReferenceType removeTrailingZeroes FormalParameter WhileStatement ReturnStatement private String ReferenceType in BinaryOperation BlockStatement MemberReference String && BinaryOperation BinaryOperation StatementExpression in > MethodInvocation Literal == MethodInvocation Literal Assignment in length 0 in BinaryOperation charAt '0' MemberReference MethodInvocation = - MethodInvocation Literal in in Literal BinaryOperation substring in length 1 0 - MethodInvocation Literal in length 1	0
MethodDeclaration Modifier add FormalParameter FormalParameter StatementExpression public BasicType index ReferenceType element MethodInvocation int Object ArrayCreator insert ReferenceType ArrayInitializer IRubyObject MethodInvocation MethodInvocation RubyFixnum MethodInvocation MemberReference newFixnum JavaUtil MethodInvocation MemberReference convertJavaToUsableRubyObject getRuntime index getRuntime element	0
MethodDeclaration Modifier testConvertJavaToRuby StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression public MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation Literal assertEquals MethodInvocation Literal assertEquals MethodInvocation Literal assertEquals MethodInvocation Literal assertEquals MethodInvocation Literal assertEquals MethodInvocation Literal assertEquals JavaUtil MethodInvocation MethodInvocation MethodInvocation MemberReference Literal convertJavaToRuby "NilClass" JavaUtil MethodInvocation MethodInvocation MethodInvocation MemberReference ClassCreator convertJavaToRuby "Fixnum" JavaUtil MethodInvocation MethodInvocation MethodInvocation MemberReference ClassCreator convertJavaToRuby "Float" JavaUtil MethodInvocation MethodInvocation MethodInvocation MemberReference MemberReference convertJavaToRuby "TrueClass" JavaUtil MethodInvocation MethodInvocation MethodInvocation MemberReference MemberReference convertJavaToRuby "FalseClass" JavaUtil MethodInvocation MethodInvocation MethodInvocation MemberReference Literal convertJavaToRuby "String" getType name toString runtime null getType name toString runtime ReferenceType Literal getType name toString runtime ReferenceType Literal getType name toString runtime Boolean TRUE getType name toString runtime Boolean FALSE getType name toString runtime "AString" Integer 1000 Double 1.0	1
MethodDeclaration Modifier ReferenceType getPosition ReturnStatement private ISourcePosition MethodInvocation lexer getPosition	0
MethodDeclaration Modifier Annotation ReferenceType op_cmp FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType other Modifier ReferenceType VariableDeclarator BinaryOperation BlockStatement IfStatement MethodInvocation name Literal required Literal ThreadContext IRubyObject final BigInteger otherValue instanceof MemberReference ReferenceType StatementExpression BinaryOperation BlockStatement IfStatement RubyFixnum MethodInvocation MethodInvocation newFixnum "<=>" 1 other RubyFixnum Assignment instanceof MemberReference ReferenceType StatementExpression BinaryOperation BlockStatement BlockStatement getRuntime value MemberReference compareTo MemberReference MethodInvocation = other RubyBignum Assignment instanceof MemberReference ReferenceType LocalVariableDeclaration IfStatement ReturnStatement ReturnStatement otherValue otherValue Cast fix2big MemberReference Cast = other RubyFloat ReferenceType VariableDeclarator MethodInvocation BlockStatement MethodInvocation MethodInvocation ReferenceType MemberReference otherValue ReferenceType MemberReference RubyFloat flt Cast flt MethodInvocation infinite_p IfStatement ReturnStatement MethodInvocation MethodInvocation MethodInvocation dbl_cmp MemberReference Literal MemberReference coerceCmp RubyFixnum other RubyBignum other ReferenceType MemberReference isTrue BinaryOperation ReturnStatement MethodInvocation getRuntime This big2dbl flt getDoubleValue context "<=>" other RubyFloat other > MethodInvocation Literal MethodInvocation RubyFixnum MethodInvocation one flt getDoubleValue 0.0 RubyFixnum MethodInvocation minus_one getRuntime getRuntime	1
MethodDeclaration Modifier ReferenceType inspect ReturnStatement static public String Literal "foo"	0
MethodDeclaration Modifier ReferenceType case452_line1725 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference ClassCreator = yyVal yyVal ReferenceType Literal MemberReference Cast Token "false" Tokens kFALSE ReferenceType MemberReference Token ArraySelector yyVals BinaryOperation + Literal MemberReference 0 yyTop	1
MethodDeclaration Modifier ReferenceType case71_line555 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference ClassCreator = yyVal yyVal ReferenceType MethodInvocation Literal Cast Cast MultipleAsgn19Node Cast getPosition null ReferenceType MemberReference ReferenceType MemberReference ReferenceType MemberReference Node ArraySelector yyVals ListNode ArraySelector yyVals Token ArraySelector yyVals BinaryOperation BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference + Literal MemberReference - 2 yyTop 0 yyTop - 3 yyTop	1
MethodDeclaration Modifier BasicType getRandomSeed ReturnStatement public long MemberReference randomSeed	0
MethodDeclaration Modifier ReferenceType getRest ReturnStatement public Node MemberReference rest	0
MethodDeclaration Modifier Annotation ReferenceType __jtrap_kernel FormalParameter FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject Modifier ReferenceType recv ReferenceType block ReferenceType sig MethodInvocation name Literal required Literal module Literal final IRubyObject IRubyObject IRubyObject SIGNALS MemberReference MemberReference MemberReference trap "__jtrap_kernel" 2 true recv block sig	1
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter FormalParameter StatementExpression LocalVariableDeclaration IfStatement ReturnStatement public IRubyObject ReferenceType ctx ReferenceType largs ReferenceType blk MethodInvocation ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement MethodInvocation ThreadContext IRubyObject Block MemberReference MemberReference Literal checkContext IRubyObject arg MethodInvocation == MemberReference Literal StatementExpression IfStatement IfStatement runtime getNil localContext ctx "minmax" MemberReference MemberReference checkArgs ArraySelector result null Assignment BinaryOperation BlockStatement BinaryOperation BlockStatement runtime largs Literal MemberReference Assignment = < MethodInvocation Literal StatementExpression > MethodInvocation Literal StatementExpression 0 ArraySelector result MemberReference MemberReference = RubyComparable MemberReference MethodInvocation MemberReference MemberReference cmpint 0 Assignment RubyComparable MemberReference MethodInvocation MemberReference MemberReference cmpint 0 Assignment Literal ArraySelector result arg ctx block MemberReference MethodInvocation yield arg ArraySelector result MemberReference MemberReference = ctx block MemberReference MethodInvocation yield arg ArraySelector result MemberReference MemberReference = 0 Literal ctx runtime MemberReference MemberReference newArray Literal ArraySelector result arg ctx runtime MemberReference MemberReference newArray Literal ArraySelector result arg 1 arg ArraySelector result 0 Literal arg ArraySelector result 1 Literal Literal 0 Literal 1 0 1	0
MethodDeclaration Modifier Annotation ReferenceType newCallbackInfo FormalParameter FormalParameter FormalParameter FormalParameter IfStatement IfStatement LocalVariableDeclaration ForStatement TryStatement final static public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType klass ReferenceType returnType ReferenceType paramTypes BinaryOperation BlockStatement BinaryOperation BlockStatement ReferenceType VariableDeclarator ForControl BlockStatement ReturnStatement CatchClause name Literal meta Literal ThreadContext IRubyObject IRubyObject IRubyObject instanceof MemberReference ReferenceType ThrowStatement instanceof MemberReference ReferenceType ThrowStatement Type nativeParamTypes ArrayCreator VariableDeclaration BinaryOperation MemberReference LocalVariableDeclaration IfStatement StatementExpression ClassCreator CatchClauseParameter ReturnStatement "new" true returnType Type MethodInvocation paramTypes RubyArray MethodInvocation ReferenceType Cast BasicType VariableDeclarator < MemberReference MemberReference ++ i ReferenceType VariableDeclarator BinaryOperation BlockStatement Assignment ReferenceType MethodInvocation Cast Cast MemberReference UnsatisfiedLinkError ex MethodInvocation context MethodInvocation getRuntime context MethodInvocation getRuntime Type ReferenceType MemberReference int i Literal i nativeParamTypes length IRubyObject obj Cast instanceof MemberReference ReferenceType ThrowStatement MemberReference Cast = CallbackInfo context getRuntime ReferenceType MemberReference ReferenceType MemberReference nativeParamTypes context MethodInvocation getRuntime BinaryOperation newArgumentError BinaryOperation newArgumentError RubyArray paramTypes 0 ReferenceType MemberReference obj Type MethodInvocation ArraySelector nativeParamTypes ReferenceType MemberReference RubyClass klass Type returnType getNil + BinaryOperation Literal + BinaryOperation Literal RubyArray paramTypes context MethodInvocation getRuntime MemberReference Type obj + Literal MethodInvocation " (expected FFI::Type)" + Literal MethodInvocation " (expected Array)" BinaryOperation newArgumentError i "wrong argument type " returnType MethodInvocation getMetaClass "wrong argument type " paramTypes MethodInvocation getMetaClass + BinaryOperation Literal getName getName + Literal MethodInvocation " (expected array of FFI::Type)" "wrong argument type " obj MethodInvocation getMetaClass getName	1
MethodDeclaration Modifier Annotation ReferenceType end_with_p FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context ReferenceType arg TernaryExpression name Literal ThreadContext IRubyObject MethodInvocation MethodInvocation MethodInvocation "end_with?" MemberReference end_with_pCommon context MethodInvocation getRuntime context MethodInvocation getRuntime arg getTrue getFalse	1
MethodDeclaration setNilClass FormalParameter StatementExpression ReferenceType nilClass Assignment RubyClass This MemberReference = MemberReference nilClass nilClass	0
MethodDeclaration Modifier ReferenceType decode FormalParameter FormalParameter IfStatement public IRubyObject ReferenceType runtime ReferenceType enc BinaryOperation ReturnStatement ReturnStatement Ruby ByteBuffer == MemberReference MemberReference MethodInvocation MethodInvocation Platform BYTE_ORDER Platform BIG_ENDIAN runtime MethodInvocation newFixnum runtime MethodInvocation newFixnum MemberReference decodeIntBigEndian MemberReference decodeIntLittleEndian enc enc	1
MethodDeclaration Modifier ReferenceType getTaintedString FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement final static public IRubyObject ReferenceType runtime ReferenceType io BasicType offset BasicType length MethodInvocation Ruby MemoryIO long int MemberReference MethodInvocation newTaintedString runtime io MemberReference MemberReference getZeroTerminatedByteArray offset length	1
MethodDeclaration Modifier Annotation ReferenceType rubyInitialize FormalParameter FormalParameter FormalParameter IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType args ReferenceType block MethodInvocation BlockStatement BlockStatement MethodInvocation name Literal required Literal optional Literal ThreadContext IRubyObject Block block isGiven IfStatement StatementExpression IfStatement IfStatement context MethodInvocation getRuntime "initialize" 0 1 BinaryOperation BlockStatement Assignment BinaryOperation BlockStatement BinaryOperation BlockStatement IfStatement getNil != MemberReference Literal ThrowStatement MemberReference MethodInvocation = == MemberReference Literal StatementExpression == MemberReference Literal StatementExpression BinaryOperation BlockStatement args length 0 MethodInvocation default_proc block getProcObject default_proc null Assignment args length 1 Assignment != MemberReference Literal ThrowStatement context MethodInvocation getRuntime MemberReference MethodInvocation = MemberReference MemberReference = args length 0 MethodInvocation Literal newArgumentError default_proc RubyProc MethodInvocation MemberReference MemberReference newProc default_value ArraySelector args context MethodInvocation getRuntime "wrong number of arguments" context getRuntime block block type Literal Literal newArgumentError 0 "wrong number of arguments"	0
MethodDeclaration Modifier Annotation ReferenceType trace_var FormalParameter FormalParameter FormalParameter FormalParameter IfStatement LocalVariableDeclaration LocalVariableDeclaration IfStatement IfStatement IfStatement StatementExpression ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType args ReferenceType block BinaryOperation ThrowStatement ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation ReturnStatement BinaryOperation StatementExpression BinaryOperation BlockStatement MethodInvocation MethodInvocation name Literal required Literal optional Literal frame Literal module Literal visibility MemberReference ThreadContext IRubyObject IRubyObject Block == MemberReference Literal MethodInvocation RubyProc proc Literal String var TernaryExpression != MethodInvocation Literal MethodInvocation == MemberReference Literal Assignment == MemberReference Literal StatementExpression context MethodInvocation MethodInvocation getRuntime context MethodInvocation getRuntime "trace_var" 1 1 true true PRIVATE args length 0 context MethodInvocation getRuntime null BinaryOperation MemberReference Literal var Literal charAt '$' context MethodInvocation getRuntime args length 1 MemberReference MethodInvocation = args length 2 Assignment getGlobalVariables MemberReference MemberReference setTraceVar getNil Literal Literal newArgumentError > MemberReference Literal ArraySelector MethodInvocation args null 0 getNil proc RubyProc MethodInvocation MemberReference MemberReference newProc MemberReference Cast = var proc 0 1 args length 1 Literal toString context getRuntime block Block.Type PROC proc ReferenceType MethodInvocation 0 RubyProc TypeConverter MemberReference MethodInvocation Literal Literal convertToType ArraySelector args context MethodInvocation getRuntime "to_proc" true Literal getProc 1	1
MethodDeclaration Modifier visitFieldInsn FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression public BasicType arg0 ReferenceType arg1 ReferenceType arg2 ReferenceType arg3 MethodInvocation int String String String MethodInvocation getMethodVisitor MemberReference MemberReference MemberReference MemberReference visitFieldInsn arg0 arg1 arg2 arg3	0
MethodDeclaration Modifier BasicType toLower FormalParameter FormalParameter ReturnStatement static public int ReferenceType enc BasicType c TernaryExpression Encoding int MethodInvocation MemberReference MemberReference Encoding MemberReference isAscii AsciiTables ArraySelector ToLowerCaseTable c c MemberReference c	1
MethodDeclaration Modifier Annotation ReferenceType interpret FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement ReturnStatement public Override IRubyObject ReferenceType runtime ReferenceType context ReferenceType self ReferenceType aBlock ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation Ruby ThreadContext IRubyObject Block IRubyObject arg MethodInvocation Block block MethodInvocation instanceof MemberReference ReferenceType LocalVariableDeclaration SwitchStatement callAdapter MemberReference MemberReference MemberReference MemberReference MemberReference call MethodInvocation getArgsNode RuntimeHelpers MemberReference MemberReference MemberReference MemberReference MemberReference getBlock arg RubyArray ReferenceType VariableDeclarator MethodInvocation SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase context self self arg block MemberReference MemberReference MemberReference MemberReference interpret runtime context self iterNode aBlock RubyArray nodes Cast nodes size Literal ReturnStatement Literal ReturnStatement Literal ReturnStatement Literal ReturnStatement ReturnStatement runtime context self aBlock ReferenceType MemberReference 0 MethodInvocation 1 MethodInvocation 2 MethodInvocation 3 MethodInvocation MethodInvocation RubyArray arg callAdapter MemberReference MemberReference MemberReference MemberReference call callAdapter MemberReference MemberReference MemberReference MethodInvocation MemberReference call callAdapter MemberReference MemberReference MemberReference MethodInvocation MethodInvocation MemberReference call callAdapter MemberReference MemberReference MemberReference MethodInvocation MethodInvocation MethodInvocation MemberReference call callAdapter MemberReference MemberReference MemberReference MethodInvocation MemberReference call context self self block context self self nodes Literal eltInternal block context self self nodes Literal eltInternal nodes Literal eltInternal block context self self nodes Literal eltInternal nodes Literal eltInternal nodes Literal eltInternal block context self self nodes toJavaArrayMaybeUnsafe block 0 0 1 0 1 2	0
MethodDeclaration Modifier ReferenceType allocateAligned FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement TryStatement static final AllocatedNativeMemoryIO ReferenceType runtime BasicType size BasicType align BasicType clear Modifier BasicType VariableDeclarator BinaryOperation BlockStatement ReturnStatement CatchClause Ruby int int boolean final long address MethodInvocation == MemberReference Literal ThrowStatement ClassCreator CatchClauseParameter StatementExpression ThrowStatement IO BinaryOperation MemberReference allocateMemory address 0 MethodInvocation ReferenceType MemberReference MemberReference MemberReference MemberReference Throwable t MethodInvocation ClassCreator - BinaryOperation Literal clear runtime BinaryOperation newRuntimeError AllocatedNativeMemoryIO runtime address size align IO MemberReference freeMemory ReferenceType MemberReference + MemberReference MemberReference 1 + BinaryOperation Literal address RuntimeException t size align + Literal MemberReference " bytes of native memory" "failed to allocate " size	1
MethodDeclaration Modifier Annotation ReferenceType count FormalParameter FormalParameter LocalVariableDeclaration StatementExpression ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType arg Modifier BasicType VariableDeclarator MethodInvocation MethodInvocation name Literal compat MemberReference ThreadContext IRubyObject final boolean table ArrayCreator arg MethodInvocation convertToString MethodInvocation MemberReference countCommon "count" CompatVersion RUBY1_8 BasicType MemberReference MemberReference Literal trSetupTable context getRuntime table boolean TRANS_SIZE table true	0
MethodDeclaration call FormalParameter FormalParameter IfStatement IfStatement ReferenceType context ReferenceType arg BinaryOperation BlockStatement BlockStatement BinaryOperation BlockStatement ThreadContext IRubyObject instanceof MemberReference ReferenceType StatementExpression StatementExpression == MemberReference MethodInvocation StatementExpression StatementExpression iter RubyFixnum Assignment Assignment iter RubyFixnum MethodInvocation zero MethodInvocation Assignment MemberReference MethodInvocation = MemberReference MethodInvocation = context getRuntime block MemberReference MemberReference yield MemberReference MemberReference = iter RubyFixnum MethodInvocation BinaryOperation newFixnum iter iter MemberReference Literal MethodInvocation callMethod context arg iter step context getRuntime - Cast Literal context "-" RubyFixnum MethodInvocation one ReferenceType MemberReference 1 context getRuntime RubyFixnum iter	0
MethodDeclaration Modifier encode FormalParameter FormalParameter FormalParameter IfStatement public ReferenceType runtime ReferenceType o ReferenceType result BinaryOperation StatementExpression StatementExpression Ruby IRubyObject ByteList == MemberReference MemberReference MethodInvocation MethodInvocation Platform BYTE_ORDER Platform BIG_ENDIAN MemberReference MethodInvocation encodeDoubleBigEndian MemberReference MethodInvocation encodeDoubleLittleEndian result MemberReference MemberReference obj2dbl result MemberReference MemberReference obj2dbl runtime o runtime o	1
MethodDeclaration Modifier aload FormalParameter StatementExpression public BasicType arg0 MethodInvocation int MethodInvocation getMethodVisitor MemberReference MemberReference visitVarInsn ALOAD arg0	0
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement public IRubyObject ReferenceType ctx ReferenceType largs ReferenceType blk ReferenceType VariableDeclarator MethodInvocation BlockStatement MethodInvocation ThreadContext IRubyObject Block IRubyObject larg MethodInvocation block MethodInvocation MemberReference MemberReference yield SynchronizedStatement runtime getNil MemberReference MemberReference checkArgs isTrue ctx larg MemberReference StatementExpression runtime largs result MethodInvocation result MemberReference append larg	0
MethodDeclaration Modifier BasicType getReferenceFieldCount ReturnStatement final int MemberReference referenceFieldCount	1
MethodDeclaration Modifier BasicType receiveFalse FormalParameter ReturnStatement public boolean BasicType f MethodInvocation boolean vri MemberReference receiveFalse f	0
MethodDeclaration Modifier setAutoRelease FormalParameter StatementExpression public BasicType release Assignment boolean MemberReference MemberReference = holder autorelease release	0
MethodDeclaration Modifier declareField FormalParameter IfStatement private ReferenceType field MethodInvocation BlockStatement String ! MemberReference MethodInvocation clsData StatementExpression StatementExpression fieldSet MemberReference contains MethodInvocation MethodInvocation field MethodInvocation cls MemberReference MethodInvocation clsData MemberReference MemberReference MethodInvocation Literal Literal visitField fieldSet MemberReference add ACC_PROTECTED field ClassReference ci null null field ReferenceType Object	0
MethodDeclaration Modifier BasicType getLength ReturnStatement public int MemberReference realLength	0
MethodDeclaration Modifier ReferenceType sig FormalParameter FormalParameter ReturnStatement static public String ReferenceType retval ReferenceType params  BinaryOperation Class Class + MethodInvocation MethodInvocation MemberReference sigParams MemberReference ci params retval	0
MethodDeclaration Modifier ReferenceType newSystemStackError FormalParameter ReturnStatement public RaiseException ReferenceType message MethodInvocation String MethodInvocation MemberReference newRaiseException getSystemStackError message	0
MethodDeclaration Modifier Annotation BasicType hashCode ReturnStatement public Override int BinaryOperation * Literal MethodInvocation 67 MethodInvocation getMemoryIO hashCode	0
MethodDeclaration Modifier ReferenceType getJumpTarget ReturnStatement public Label MemberReference _target	0
MethodDeclaration Modifier Annotation ReferenceType eqq FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement LocalVariableDeclaration ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType arg ReferenceType VariableDeclarator Modifier ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement BasicType VariableDeclarator TernaryExpression name Literal required Literal writes MemberReference compat MemberReference ThreadContext IRubyObject Ruby runtime MethodInvocation final RubyString str instanceof MemberReference ReferenceType StatementExpression LocalVariableDeclaration IfStatement StatementExpression int start MethodInvocation BinaryOperation MethodInvocation MethodInvocation "===" 1 BACKREF CompatVersion RUBY1_8 context getRuntime arg RubyString Assignment ReferenceType VariableDeclarator MethodInvocation BlockStatement Assignment MemberReference MemberReference Literal Literal search < MemberReference Literal runtime getFalse runtime getTrue MemberReference Cast = IRubyObject tmp MethodInvocation tmp isNil StatementExpression ReturnStatement MemberReference Cast = context str 0 false start 0 str ReferenceType MemberReference arg checkStringType MethodInvocation MethodInvocation str ReferenceType MemberReference RubyString arg context MethodInvocation getCurrentScope runtime getFalse RubyString tmp MemberReference setBackRef tmp	1
MethodDeclaration Modifier Annotation ReferenceType remove_class_variable FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement IfStatement ThrowStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType name ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation BlockStatement MethodInvocation name Literal required Literal visibility MemberReference ThreadContext IRubyObject String javaName MethodInvocation IRubyObject value != Assignment Literal ReturnStatement MemberReference fastIsClassVarDefined ThrowStatement context MethodInvocation getRuntime "remove_class_variable" 1 PRIVATE MethodInvocation validateClassVariable MemberReference MethodInvocation = null MemberReference javaName MethodInvocation BinaryOperation MemberReference newNameError name asJavaString value MemberReference deleteClassVariable value MemberReference cannotRemoveError + BinaryOperation MethodInvocation javaName javaName javaName + BinaryOperation Literal getName + Literal MemberReference " not defined for " "class variable " javaName	1
MethodDeclaration Modifier ReferenceType aref FormalParameter ReturnStatement public IRubyObject ReferenceType key MethodInvocation IRubyObject MethodInvocation MemberReference op_aref MethodInvocation getRuntime key getCurrentContext	1
MethodDeclaration Modifier BasicType isBenchmarking ReturnStatement public boolean MethodInvocation ruby MethodInvocation MethodInvocation get getInstanceConfig isBenchmarking	0
MethodDeclaration Modifier Annotation ReferenceType undef_method FormalParameter FormalParameter ForStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair RubyModule ReferenceType context ReferenceType args ForControl BlockStatement This name Literal required Literal rest Literal visibility MemberReference ThreadContext IRubyObject VariableDeclaration BinaryOperation MemberReference StatementExpression "undef_method" 1 true PRIVATE BasicType VariableDeclarator < MemberReference MemberReference ++ i MethodInvocation int i Literal i args length MemberReference MemberReference undef 0 context ArraySelector MethodInvocation args MemberReference asJavaString i	1
MethodDeclaration Modifier preExecuteUnder FormalParameter FormalParameter LocalVariableDeclaration StatementExpression LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression public ReferenceType executeUnderClass ReferenceType block ReferenceType VariableDeclarator MethodInvocation ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation RubyModule Block Frame frame MethodInvocation MemberReference pushRubyClass DynamicScope scope MethodInvocation StaticScope sScope ClassCreator sScope MemberReference setModule MethodInvocation pushScope MethodInvocation MethodInvocation MethodInvocation MemberReference pushCallFrame MethodInvocation getCurrentFrame getCurrentFrame executeUnderClass getCurrentScope ReferenceType MethodInvocation executeUnderClass DynamicScope MemberReference MemberReference newDynamicScope frame getKlazz frame getName frame getSelf block MethodInvocation setVisibility BlockStaticScope scope getStaticScope sScope scope MethodInvocation getPreviousFrame getVisibility	1
MethodDeclaration Modifier Annotation BasicType getOffset ReturnStatement public Override int BinaryOperation + BinaryOperation MemberReference - MemberReference MemberReference offset index begin	0
MethodDeclaration Modifier setMode FormalParameter StatementExpression public BasicType modes Assignment int This MemberReference = MemberReference modes mode	0
MethodDeclaration Modifier compileUndef FormalParameter FormalParameter FormalParameter StatementExpression IfStatement public ReferenceType node ReferenceType context BasicType expr MethodInvocation MemberReference StatementExpression Node BodyCompiler boolean context Cast undefMethod ! expr MethodInvocation ReferenceType MemberReference context consumeCurrentValue UndefNode node	1
MethodDeclaration Modifier setAttached FormalParameter StatementExpression public ReferenceType attached Assignment IRubyObject This ClassCreator = MemberReference ReferenceType MemberReference attached SoftReference TypeArgument attached ReferenceType IRubyObject	1
MethodDeclaration Modifier getTempLocal FormalParameter StatementExpression public BasicType index MethodInvocation int method MemberReference aload index	0
MethodDeclaration Modifier Annotation unread FormalParameter IfStatement StatementExpression IfStatement public Override BasicType c BinaryOperation ReturnStatement MemberReference BinaryOperation StatementExpression int == MemberReference MemberReference -- index == MemberReference Literal MemberReference c RubyYaccLexer EOF c '\n' -- line	1
MethodDeclaration Modifier allocate IfStatement private BinaryOperation BlockStatement == MemberReference Literal LocalVariableDeclaration StatementExpression variableValues null BasicType VariableDeclarator Assignment int size MethodInvocation MemberReference ArrayCreator = staticScope getNumberOfVariables variableValues ReferenceType MemberReference IRubyObject size	0
MethodDeclaration Modifier ReferenceType getBigInteger2 FormalParameter FormalParameter ReturnStatement final public BigInteger ReferenceType runtime ReferenceType name MethodInvocation Ruby String runtimeCache MemberReference Literal MemberReference getBigInteger runtime 2 name	0
MethodDeclaration Modifier ReferenceType newClosureInfo FormalParameter FormalParameter ReturnStatement private final ClosureInfo ReferenceType runtime ReferenceType cbInfo ClassCreator Ruby CallbackInfo ReferenceType MemberReference MethodInvocation MethodInvocation MemberReference ClosureInfo runtime cbInfo getReturnType cbInfo getParameterTypes CallingConvention DEFAULT	1
MethodDeclaration Modifier Annotation assign FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration SwitchStatement public Override ReferenceType runtime ReferenceType context ReferenceType self ReferenceType values ReferenceType block BasicType VariableDeclarator MemberReference SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase Ruby ThreadContext IRubyObject IRubyObject Block int length TernaryExpression length Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement StatementExpression StatementExpression StatementExpression StatementExpression BreakStatement BinaryOperation Literal MemberReference 0 MethodInvocation 1 MethodInvocation 2 MethodInvocation 3 MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation == MemberReference Literal 0 values length MemberReference MemberReference MemberReference MemberReference assign MemberReference MemberReference MemberReference MemberReference MemberReference assign MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference assign MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference assign parameter1 MemberReference MemberReference MemberReference MemberReference MemberReference Literal assign parameter2 MemberReference MemberReference MemberReference MemberReference MemberReference Literal assign parameter3 MemberReference MemberReference MemberReference MemberReference MemberReference Literal assign rest MemberReference MemberReference MemberReference MethodInvocation MemberReference Literal assign values null runtime context self block runtime context self ArraySelector values block runtime context self ArraySelector values ArraySelector values block runtime context self ArraySelector values ArraySelector values ArraySelector values block runtime context self ArraySelector values block false runtime context self ArraySelector values block false runtime context self ArraySelector values block false runtime context self runtime MethodInvocation newArrayNoCopyLight block true Literal Literal Literal Literal Literal Literal Literal Literal Literal MemberReference Literal shiftedArray 0 0 1 0 1 2 0 1 2 values 3	1
MethodDeclaration Modifier internalReset StatementExpression protected MethodInvocation flater reset	0
MethodDeclaration Modifier ReferenceType invoke FormalParameter FormalParameter FormalParameter IfStatement private final IRubyObject ReferenceType context ReferenceType arg1 ReferenceType arg2 BinaryOperation BlockStatement BlockStatement ThreadContext IRubyObject IRubyObject && MethodInvocation MethodInvocation LocalVariableDeclaration ReturnStatement LocalVariableDeclaration StatementExpression StatementExpression ReturnStatement c1 MemberReference MemberReference isConvertible c2 MemberReference MemberReference isConvertible BasicType VariableDeclarator MethodInvocation ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation context arg1 context arg2 int retval MethodInvocation resultConverter MemberReference MemberReference fromNative HeapInvocationBuffer buffer ClassCreator m1 MemberReference MemberReference MemberReference marshal m2 MemberReference MemberReference MemberReference marshal resultConverter MemberReference MethodInvocation fromNative invoker MemberReference MethodInvocation MethodInvocation invokeIIrI context retval ReferenceType MemberReference context buffer arg1 context buffer arg2 context invoker MemberReference MemberReference invokeInt function c1 MemberReference MemberReference intValue c2 MemberReference MemberReference intValue HeapInvocationBuffer function function buffer context arg1 context arg2	1
MethodDeclaration Modifier ReferenceType createCallbackClass FormalParameter FormalParameter LocalVariableDeclaration StatementExpression StatementExpression ReturnStatement static public RubyClass ReferenceType runtime ReferenceType module ReferenceType VariableDeclarator MethodInvocation MethodInvocation MemberReference Ruby RubyModule RubyClass cbClass MethodInvocation cbClass ClassReference defineAnnotatedMethods cbClass ClassReference defineAnnotatedConstants cbClass module Literal MethodInvocation MemberReference defineClassUnder ReferenceType ReferenceType "Callback" module Literal fastGetClass ObjectAllocator NOT_ALLOCATABLE_ALLOCATOR Callback Callback "Pointer"	1
MethodDeclaration Modifier setupInterfaceProxy FormalParameter AssertStatement AssertStatement AssertStatement StatementExpression private Modifier ReferenceType proxy MethodInvocation MethodInvocation BinaryOperation Assignment final RubyClass MethodInvocation javaClass proxyLock isHeldByCurrentThread == This Literal This MemberReference = isInterface MemberReference null MemberReference proxy proxyClass proxyClass	0
MethodDeclaration Modifier Annotation BasicType isClass ReturnStatement public Override boolean Literal true	0
MethodDeclaration Modifier ReferenceType newArrayNode FormalParameter FormalParameter ReturnStatement public ArrayNode ReferenceType position ReferenceType firstNode ClassCreator ISourcePosition Node ReferenceType MemberReference MethodInvocation ArrayNode position MemberReference makeNullNil firstNode	0
MethodDeclaration Modifier Annotation ReferenceType rdev ReturnStatement public JRubyMethod ElementValuePair IRubyObject MethodInvocation name Literal MethodInvocation getRuntime "rdev" MethodInvocation newFixnum stat rdev	0
MethodDeclaration Modifier ReferenceType accept FormalParameter ReturnStatement public Object ReferenceType iVisitor MethodInvocation NodeVisitor iVisitor This visitDVarNode	0
MethodDeclaration Modifier ReferenceType childNodes ReturnStatement public List TypeArgument MethodInvocation ReferenceType Node MemberReference MemberReference createList Node varNode bodyNode	0
MethodDeclaration post FormalParameter StatementExpression ReferenceType context MethodInvocation ThreadContext context postMethodFrameAndScope	0
MethodDeclaration Modifier ReferenceType childNodes ReturnStatement public List TypeArgument MethodInvocation ReferenceType Node MemberReference MemberReference createList Node conditionNode bodyNode	0
MethodDeclaration Modifier Annotation ReferenceType finite_p IfStatement ReturnStatement public JRubyMethod ElementValuePair IRubyObject BinaryOperation BlockStatement MethodInvocation name Literal || MethodInvocation MethodInvocation ReturnStatement MethodInvocation getRuntime "finite?" Double MemberReference isInfinite Double MemberReference isNaN MethodInvocation getTrue value value MethodInvocation getRuntime getFalse	1
MethodDeclaration Modifier ReferenceType verifyAccessor FormalParameter LocalVariableDeclaration IfStatement ReturnStatement private VariableAccessor ReferenceType cls ReferenceType VariableDeclarator BinaryOperation BlockStatement MemberReference RubyClass VariableAccessor localAccessor MemberReference != MethodInvocation MethodInvocation StatementExpression StatementExpression localAccessor accessor localAccessor getClassId cls hashCode Assignment Assignment MemberReference MethodInvocation = MemberReference MemberReference = localAccessor cls MemberReference getVariableAccessorForWrite accessor localAccessor name	0
MethodDeclaration Modifier Annotation ReferenceType codepoints FormalParameter FormalParameter IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType block MethodInvocation ReturnStatement TernaryExpression name Literal frame Literal compat MemberReference ThreadContext Block ! block isGiven MethodInvocation MethodInvocation MethodInvocation MethodInvocation "codepoints" true CompatVersion RUBY1_9 MethodInvocation This Literal enumeratorize singleByteOptimizable MemberReference MemberReference each_byte MemberReference MemberReference each_codepointCommon context getRuntime "codepoints" context block context block	1
MethodDeclaration Modifier Annotation ReferenceType each FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType block MethodInvocation name Literal frame Literal ThreadContext Block object MemberReference MemberReference MemberReference MemberReference callMethod "each" true context method methodArgs block	0
MethodDeclaration Modifier ReferenceType handleReturnJump FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement IfStatement ThrowStatement private IRubyObject ReferenceType runtime ReferenceType rj ReferenceType jumpTarget ReferenceType VariableDeclarator BinaryOperation ReturnStatement BinaryOperation BlockStatement MemberReference Ruby JumpException ReferenceType JumpTarget Object target MethodInvocation && BinaryOperation BinaryOperation Cast == MemberReference MemberReference ThrowStatement rj ReturnJump rj getTarget == MemberReference MemberReference == MemberReference MemberReference ReferenceType MethodInvocation type Block.Type THREAD MethodInvocation target jumpTarget block type Block.Type LAMBDA IRubyObject rj getValue runtime Literal newThreadError "return can't jump across threads"	1
MethodDeclaration Modifier BasicType yyCheck ReturnStatement final static public short MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation combine yyCheck1 yyCheck2 yyCheck3 yyCheck4	0
MethodDeclaration Modifier aaload StatementExpression public MethodInvocation MethodInvocation getMethodVisitor MemberReference visitInsn AALOAD	0
MethodDeclaration Modifier BasicType indexOf FormalParameter FormalParameter ThrowStatement final public int BasicType offset BasicType value MethodInvocation long byte ex	0
MethodDeclaration Modifier BasicType getAddress FormalParameter ReturnStatement private static final int ReferenceType ptr Cast Pointer BasicType Cast int ReferenceType MethodInvocation DirectMemoryIO ptr getMemoryIO	1
MethodDeclaration Modifier dotNode FormalParameter StatementExpression private ReferenceType node MethodInvocation DotNode sb MethodInvocation MethodInvocation MethodInvocation Literal append MethodInvocation append Literal append MethodInvocation append " " node isExclusive " " node isLiteral	0
MethodDeclaration Modifier Annotation ReferenceType seteuid FormalParameter FormalParameter ReturnStatement static public Deprecated IRubyObject ReferenceType recv ReferenceType arg MethodInvocation IRubyObject IRubyObject MethodInvocation MemberReference euid_set recv getRuntime arg	1
MethodDeclaration Modifier setJavaName FormalParameter StatementExpression public ReferenceType javaName Assignment String This MemberReference = MemberReference javaName javaName	0
MethodDeclaration Modifier ReferenceType store FormalParameter FormalParameter IfStatement StatementExpression IfStatement TryStatement ReturnStatement final public IRubyObject BasicType index ReferenceType value BinaryOperation ThrowStatement MethodInvocation BinaryOperation BlockStatement StatementExpression CatchClause MemberReference long IRubyObject && BinaryOperation BinaryOperation MethodInvocation modify >= MemberReference MemberReference LocalVariableDeclaration IfStatement StatementExpression Assignment CatchClauseParameter StatementExpression value < MemberReference Literal < Assignment Literal MethodInvocation getRuntime index realLength BasicType VariableDeclarator BinaryOperation StatementExpression Assignment MemberReference MemberReference = ArrayIndexOutOfBoundsException e MethodInvocation index 0 MemberReference MemberReference += 0 BinaryOperation newIndexError int valuesLength BinaryOperation >= MemberReference MemberReference MethodInvocation MemberReference BinaryOperation = ArraySelector values value concurrentModification index realLength + BinaryOperation Literal - MemberReference MemberReference index valuesLength MemberReference MemberReference storeRealloc realLength + Cast Literal BinaryOperation + Literal BinaryOperation " out of array" values length begin index valuesLength BasicType MemberReference 1 + MemberReference Cast "index " - MemberReference MemberReference int index begin BasicType MemberReference index realLength int index	1
MethodDeclaration Modifier Annotation ReferenceType declared_fields ReturnStatement public JRubyMethod RubyArray MethodInvocation MethodInvocation buildFieldResults MethodInvocation javaClass getDeclaredFields	1
MethodDeclaration Modifier BasicType decodeFloatBigEndian FormalParameter ReturnStatement private static float ReferenceType encode MethodInvocation ByteBuffer Float MethodInvocation intBitsToFloat MemberReference decodeIntBigEndian encode	0
MethodDeclaration Modifier ReferenceType allocate FormalParameter FormalParameter ReturnStatement final public IRubyObject ReferenceType runtime ReferenceType klass ClassCreator Ruby RubyClass ReferenceType MemberReference MemberReference StructLayoutBuilder runtime klass	1
MethodDeclaration Modifier ReferenceType getAnnotatedMethodClass FormalParameter Exception LocalVariableDeclaration IfStatement LocalVariableDeclaration IfStatement LocalVariableDeclaration SynchronizedStatement public Class ReferenceType desc ReferenceType VariableDeclarator MethodInvocation BlockStatement ReferenceType VariableDeclarator MemberReference BlockStatement ReferenceType VariableDeclarator MemberReference LocalVariableDeclaration IfStatement ReturnStatement JavaMethodDescriptor String javaMethodName MemberReference ! Modifier MethodInvocation isPublic StatementExpression String generatedClassName MethodInvocation RubyInstanceConfig FULL_TRACE_ENABLED StatementExpression String generatedClassPath MethodInvocation classLoader ReferenceType VariableDeclarator BinaryOperation BlockStatement MemberReference desc name desc MethodInvocation getDeclaringClass MethodInvocation CodegenUtils MemberReference MemberReference MemberReference MemberReference MemberReference Literal MethodInvocation getAnnotatedBindingClassName Assignment generatedClassName Literal Literal replace Class c MethodInvocation == MemberReference Literal LocalVariableDeclaration IfStatement LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression c getModifiers System.err BinaryOperation println javaMethodName desc declaringClassName desc isStatic desc actualRequired desc optional false desc.anno frame MemberReference Literal += '.' '/' MemberReference MethodInvocation tryClass c null BasicType VariableDeclarator BinaryOperation BlockStatement BasicType VariableDeclarator ReferenceType VariableDeclarator BasicType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator Assignment MethodInvocation ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation Assignment + BinaryOperation Literal generatedClassName "_DBG" generatedClassName desc getDeclaringClass int specificArity Literal && BinaryOperation MemberReference IfStatement boolean block MemberReference String superClass MethodInvocation int dotIndex MethodInvocation ClassWriter cw MethodInvocation SkinnyMethodAdapter mv Literal MemberReference MethodInvocation = mv visitCode Label line ClassCreator mv Literal MemberReference visitLineNumber MemberReference MemberReference MemberReference MemberReference MemberReference createAnnotatedMethodInvocation MemberReference endMethod MemberReference MethodInvocation = + Literal MemberReference "; reflected handles won't work" - 1 == MemberReference Literal ! desc rest BinaryOperation BlockStatement IfStatement desc hasBlock MethodInvocation p desc.declaringClassName Literal lastIndexOf MemberReference BinaryOperation MemberReference createJavaMethodCtor null mv MemberReference Literal MemberReference MemberReference beginMethod ReferenceType 0 line desc mv superClass specificArity block mv c MemberReference MemberReference endClass "warning: binding non-public class " desc declaringClassName desc optional 0 == MemberReference Literal IfStatement BinaryOperation BlockStatement MemberReference MemberReference selectSuperClass '.' generatedClassPath + BinaryOperation MemberReference superClass cw "call" specificArity block Label cw generatedClassName desc required 0 BinaryOperation BlockStatement BlockStatement && BinaryOperation BinaryOperation StatementExpression specificArity block + MethodInvocation Literal desc name <= MemberReference Literal StatementExpression StatementExpression >= MemberReference Literal <= MemberReference Literal Assignment desc.declaringClassName BinaryOperation substring "#" desc actualRequired 3 Assignment Assignment desc required 0 desc required 3 MemberReference MemberReference = + MemberReference Literal MemberReference MemberReference = MemberReference Literal = specificArity desc required dotIndex 1 specificArity desc actualRequired specificArity - 1	1
MethodDeclaration Modifier checkExpression FormalParameter IfStatement public ReferenceType node BinaryOperation BlockStatement Node && MethodInvocation MethodInvocation StatementExpression warnings isVerbose ! MemberReference isExpression MethodInvocation node warnings MemberReference MethodInvocation Literal warning ID VOID_VALUE_EXPRESSION node getPosition "void value expression"	1
MethodDeclaration Modifier BasicType equals FormalParameter IfStatement IfStatement LocalVariableDeclaration ReturnStatement public boolean ReferenceType other BinaryOperation BlockStatement BinaryOperation BlockStatement ReferenceType VariableDeclarator BinaryOperation Object == This MemberReference ReturnStatement instanceof MemberReference ReferenceType ReturnStatement Binding bOther Cast && BinaryOperation BinaryOperation other Literal other Binding Literal ReferenceType MemberReference == This MemberReference == This MemberReference true false Binding other MemberReference bOther self MemberReference bOther dynamicScope self dynamicScope	1
MethodDeclaration Modifier openInternal FormalParameter FormalParameter FormalParameter InvalidValueException StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression protected ReferenceType path ReferenceType modeString ReferenceType modes Assignment MethodInvocation MethodInvocation MethodInvocation MethodInvocation String String ModeFlags MemberReference ClassCreator = openFile MethodInvocation setMode openFile MemberReference setPath openFile MethodInvocation setMainStream MethodInvocation registerDescriptor openFile ReferenceType modes getOpenFileFlags path MemberReference MemberReference fopen openFile MethodInvocation getMainStream OpenFile path modeString getDescriptor	0
MethodDeclaration Modifier BasicType eql FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public boolean ReferenceType otherValue ReferenceType context ReferenceType runtime ReferenceType self ReferenceType aBlock BinaryOperation IRubyObject ThreadContext Ruby IRubyObject Block == MemberReference MethodInvocation otherValue MemberReference MemberReference MemberReference MemberReference interpret runtime context self aBlock	0
MethodDeclaration Modifier Annotation ReferenceType constantTableFetch FormalParameter ReturnStatement protected Override IRubyObject ReferenceType name MethodInvocation String delegate MemberReference constantTableFetch name	0
MethodDeclaration /** *    public Operand buildVAlias(Node node, IR_Scope m) { *        VAliasNode valiasNode = (VAliasNode) node; *        m.aliasGlobal(valiasNode.getNewName(), valiasNode.getOldName()); *    } */ Modifier ReferenceType buildVCall FormalParameter FormalParameter LocalVariableDeclaration StatementExpression LocalVariableDeclaration LocalVariableDeclaration StatementExpression ReturnStatement public Operand ReferenceType node ReferenceType s ReferenceType VariableDeclarator MethodInvocation ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MemberReference VCallNode IR_Scope List TypeArgument args ClassCreator args MethodInvocation add Variable callResult MethodInvocation IR_Instr callInstr ClassCreator s MemberReference addInstr callResult ReferenceType ReferenceType s getSelf s getNewVariable ReferenceType MemberReference ClassCreator MethodInvocation Literal callInstr Operand ArrayList TypeArgument CALL_Instr callResult ReferenceType MethodInvocation args ArrayCreator toArray null ReferenceType MethAddr node getName ReferenceType MethodInvocation Operand Operand args size	1
MethodDeclaration Modifier visit FormalParameter FormalParameter IfStatement public ReferenceType key ReferenceType value MethodInvocation BlockStatement IRubyObject IRubyObject block MethodInvocation MemberReference MethodInvocation Literal Literal Literal yield StatementExpression isTrue context RubyArray MemberReference MemberReference MemberReference newArray null null true MethodInvocation runtime key value self MemberReference MemberReference MemberReference delete context key Block NULL_BLOCK	0
MethodDeclaration Modifier ReferenceType getSimplifiedOperand FormalParameter ForStatement ReturnStatement public Operand ReferenceType valueMap ForControl BlockStatement This Map TypeArgument TypeArgument VariableDeclaration BinaryOperation MemberReference StatementExpression ReferenceType ReferenceType BasicType VariableDeclarator < MemberReference MemberReference ++ i Assignment Operand Operand int i Literal i _elts length MemberReference MemberReference = 0 ArraySelector _elts ArraySelector MethodInvocation _elts MemberReference MemberReference MemberReference getSimplifiedOperand i i valueMap	0
MethodDeclaration Modifier ReferenceType accept FormalParameter ReturnStatement public Object ReferenceType visitor MethodInvocation NodeVisitor visitor This visitAttrAssignNode	0
MethodDeclaration Modifier l2f StatementExpression public MethodInvocation MethodInvocation getMethodVisitor MemberReference visitInsn L2F	0
MethodDeclaration Modifier Annotation assign FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression public Override ReferenceType runtime ReferenceType context ReferenceType self ReferenceType values ReferenceType block MethodInvocation Ruby ThreadContext IRubyObject IRubyObject Block rest MemberReference MemberReference MemberReference MethodInvocation MemberReference Literal assign runtime context self runtime MemberReference newArrayNoCopyLight block true values	0
MethodDeclaration Modifier BasicType read IOException BadDescriptorException TryStatement synchronized public int StatementExpression IfStatement ReturnStatement CatchClause MethodInvocation BinaryOperation BlockStatement MethodInvocation CatchClauseParameter StatementExpression ReturnStatement descriptor checkOpen >= MemberReference Literal LocalVariableDeclaration StatementExpression ReturnStatement bufferedRead EOFException e Assignment Literal ungotc 0 BasicType VariableDeclarator Assignment MemberReference MemberReference Literal = - 1 int c MemberReference MemberReference Literal = c eof true ungotc ungotc - 1	0
MethodDeclaration Modifier ReferenceType getValue ReturnStatement public IRubyObject MemberReference value	0
MethodDeclaration Modifier ReferenceType case388_line1470 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference ClassCreator = yyVal yyVal ReferenceType Cast MethodInvocation StrNode ReferenceType MemberReference ByteList Literal create Token ArraySelector yyVals "" BinaryOperation + Literal MemberReference 0 yyTop	1
MethodDeclaration Modifier Annotation ReferenceType new_float FormalParameter FormalParameter IfStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair RubyFloat ReferenceType recv ReferenceType object BinaryOperation BlockStatement IfStatement name Literal module Literal visibility MemberReference IRubyObject IRubyObject instanceof MemberReference ReferenceType ReturnStatement BinaryOperation BlockStatement IfStatement "Float" true PRIVATE object RubyFixnum MethodInvocation instanceof MemberReference ReferenceType ReturnStatement BinaryOperation BlockStatement IfStatement RubyFloat MethodInvocation Cast newFloat object RubyFloat Cast instanceof MemberReference ReferenceType ReturnStatement BinaryOperation BlockStatement IfStatement object getRuntime ReferenceType MemberReference ReferenceType MemberReference object RubyBignum MethodInvocation instanceof MemberReference ReferenceType IfStatement ReturnStatement MethodInvocation BlockStatement BlockStatement RubyFixnum object RubyFloat object RubyFloat MethodInvocation MethodInvocation newFloat object RubyString BinaryOperation BlockStatement MethodInvocation object isNil ThrowStatement LocalVariableDeclaration IfStatement ReturnStatement object getRuntime RubyBignum Cast big2dbl == Cast Literal ThrowStatement RubyNumeric MethodInvocation Cast Literal str2fnum MethodInvocation ReferenceType VariableDeclarator MethodInvocation ThrowStatement MemberReference ReferenceType MemberReference ReferenceType MemberReference 0 MethodInvocation recv getRuntime ReferenceType MemberReference true recv MethodInvocation getRuntime RubyFloat rFloat Cast Double MethodInvocation isNaN MethodInvocation rFloat RubyBignum object RubyString object recv MethodInvocation getRuntime RubyString object Literal newTypeError ReferenceType MethodInvocation rFloat getDoubleValue recv MethodInvocation getRuntime BinaryOperation newArgumentError "can't convert nil into Float" RubyFloat TypeConverter MemberReference MethodInvocation Literal convertToType Literal newArgumentError + Literal MethodInvocation object recv MethodInvocation getRuntime "to_f" "invalid value for Float()" "invalid value for Float(): " object inspect getFloat	1
MethodDeclaration Modifier ReferenceType each_lineCommon FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression ForStatement IfStatement ReturnStatement public IRubyObject ReferenceType context ReferenceType sep ReferenceType block ReferenceType VariableDeclarator MethodInvocation BlockStatement ReferenceType VariableDeclarator ReferenceType VariableDeclarator BasicType VariableDeclarator Modifier BasicType VariableDeclarator BinaryOperation BlockStatement BlockStatement BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator Assignment ForControl BlockStatement BinaryOperation BlockStatement This ThreadContext IRubyObject Block Ruby runtime MethodInvocation sep isNil StatementExpression ReturnStatement RubyString sepStr MethodInvocation ByteList sepValue MemberReference int rslen MemberReference final byte newline == MemberReference Literal StatementExpression StatementExpression int p MemberReference int end BinaryOperation int ptr MemberReference s MemberReference int len MemberReference byte bytes MemberReference MemberReference MemberReference += BinaryOperation MemberReference IfStatement IfStatement != MemberReference MemberReference IfStatement StatementExpression context getRuntime MethodInvocation This sep convertToString sepStr value sepValue realSize rslen 0 Assignment Assignment value begin + MemberReference MemberReference p p value realSize value bytes p rslen < MemberReference MemberReference ++ p BinaryOperation BlockStatement BinaryOperation BlockStatement s end BinaryOperation StatementExpression MethodInvocation block MemberReference This yield MemberReference Literal = MemberReference MemberReference = p value realSize p end && BinaryOperation BinaryOperation IfStatement WhileStatement && BinaryOperation BinaryOperation StatementExpression StatementExpression StatementExpression > MemberReference MemberReference Assignment block MemberReference MethodInvocation yield context newline '\n' newline sepValue ArraySelector bytes == MemberReference Literal == MemberReference Literal BinaryOperation ContinueStatement BinaryOperation StatementExpression && BinaryOperation BinaryOperation || BinaryOperation BinaryOperation MethodInvocation MethodInvocation Assignment p end MemberReference MemberReference = context MethodInvocation MemberReference BinaryOperation BinaryOperation makeShared BinaryOperation rslen 0 ArraySelector bytes '\n' != MemberReference Literal && BinaryOperation BinaryOperation MemberReference < MemberReference MemberReference == MemberReference MemberReference <= MemberReference Literal == MethodInvocation Literal block MemberReference MethodInvocation yield MemberReference MemberReference modifyCheck MemberReference MemberReference = p end This infectBy runtime - MemberReference MemberReference - MemberReference MemberReference - BinaryOperation Literal MemberReference ArraySelector bytes '\n' < MemberReference MemberReference == MemberReference Literal ++ p ptr p ArraySelector bytes newline rslen 1 ByteList MemberReference MemberReference MemberReference MemberReference BinaryOperation MemberReference memcmp 0 context MethodInvocation MemberReference BinaryOperation BinaryOperation makeShared bytes len s p s ptr p s + MemberReference MemberReference 1 p MemberReference p end ArraySelector bytes '\n' BinaryOperation sepValue bytes sepValue begin rslen bytes - MemberReference MemberReference rslen This infectBy runtime - MemberReference MemberReference - MemberReference MemberReference sepValue begin rslen ++ p MemberReference - MemberReference Literal p rslen s ptr p s p p 1	1
MethodDeclaration Modifier setDateTime FormalParameter StatementExpression public Modifier ReferenceType dt Assignment final DateTime This MemberReference = MemberReference dt dt	0
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter IfStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 ReferenceType block MethodInvocation BlockStatement BlockStatement ThreadContext IRubyObject RubyModule String IRubyObject IRubyObject IRubyObject Block block isGiven StatementExpression LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration ReturnStatement ReturnStatement MethodInvocation ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation createJavaMethods JavaProxy proxy MethodInvocation RubyProc proc MethodInvocation JavaMethod method Cast Object cArg0 MethodInvocation Object cArg1 MethodInvocation Object cArg2 MethodInvocation Object cArg3 MethodInvocation method MethodInvocation MemberReference MemberReference MemberReference MemberReference invokeDirect MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference call self getRuntime MemberReference castJavaProxy RubyProc MethodInvocation MemberReference MemberReference newProc ReferenceType MethodInvocation MemberReference MemberReference MemberReference Literal convertArg MemberReference MemberReference MemberReference Literal convertArg MemberReference MemberReference MemberReference Literal convertArg MemberReference MemberReference MemberReference Literal convertArg proxy getObject cArg0 cArg1 cArg2 cArg3 context self clazz name arg0 arg1 arg2 self self getRuntime block Block.Type LAMBDA JavaMethod MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference findCallableArityFour context arg0 method 0 context arg1 method 1 context arg2 method 2 context proc method 3 self name arg0 arg1 arg2 proc	0
MethodDeclaration Modifier populateDeclaredMethods FormalParameter FormalParameter FormalParameter SecurityException LocalVariableDeclaration ForStatement private static ReferenceType rubyMod Modifier ReferenceType cls BasicType includeStatic ReferenceType VariableDeclarator EnhancedForControl BlockStatement RubyModule final Class boolean Method methods MethodInvocation VariableDeclaration MemberReference LocalVariableDeclaration LocalVariableDeclaration IfStatement IfStatement LocalVariableDeclaration LocalVariableDeclaration IfStatement StatementExpression StatementExpression cls getDeclaredMethods Modifier ReferenceType VariableDeclarator methods ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation BlockStatement MethodInvocation BlockStatement BlockStatement ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement Assignment MethodInvocation final Method method String name MethodInvocation RubyModule target ! Modifier MethodInvocation isPublic ContinueStatement Modifier MethodInvocation isStatic IfStatement StatementExpression StatementExpression JavaMethodFactory factory MethodInvocation DynamicMethod dynMethod MethodInvocation == MethodInvocation Literal StatementExpression MemberReference BinaryOperation = target MemberReference MemberReference addMethod method getName method getModifiers method getModifiers MemberReference ContinueStatement Assignment Assignment MethodInvocation getMethodFactory factory MemberReference MemberReference createMethod target MethodInvocation getMethods null MethodInvocation name + MemberReference MethodInvocation name dynMethod ! includeStatic MemberReference MethodInvocation = MemberReference MemberReference = method getReturnType target method MemberReference get target MemberReference MemberReference addMethod name MethodInvocation prettyParams target rubyMod getSingletonClass target rubyMod name name dynMethod method getParameterTypes	1
MethodDeclaration Modifier put FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression final public ReferenceType runtime ReferenceType io BasicType offset ReferenceType value MethodInvocation Ruby MemoryIO long IRubyObject io MemberReference Cast putShort offset BasicType MethodInvocation short Util MemberReference uint16Value value	1
MethodDeclaration Modifier removeClassProvider FormalParameter IfStatement public ReferenceType provider BinaryOperation BlockStatement ClassProvider != MemberReference Literal StatementExpression classProviders null MethodInvocation classProviders MemberReference remove provider	0
MethodDeclaration Modifier ReferenceType tryClass FormalParameter TryStatement private Class ReferenceType name ReturnStatement CatchClause String MethodInvocation CatchClauseParameter ReturnStatement classLoader MemberReference loadClass Exception e Literal name null	0
MethodDeclaration Modifier ReferenceType getDefaultInternalEncoding ReturnStatement public Encoding MemberReference defaultInternalEncoding	0
MethodDeclaration Modifier ReferenceType case6_line311 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support Cast MethodInvocation newline_node ReferenceType MemberReference Cast getPosition Node ArraySelector yyVals ReferenceType MemberReference BinaryOperation Node ArraySelector yyVals + Literal MemberReference BinaryOperation 0 yyTop + Literal MemberReference 0 yyTop	1
MethodDeclaration Modifier ReferenceType getDefaultInstance ReturnStatement static public Ruby MethodInvocation newInstance	1
MethodDeclaration Modifier testSetClassAllocator LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression public ReferenceType VariableDeclarator MethodInvocation Assignment MethodInvocation MethodInvocation RubyClass newClass MethodInvocation ClassReference MethodInvocation assertEquals MemberReference MemberReference = newClass ClassReference setClassAllocator ClassReference MethodInvocation assertEquals runtime Literal MethodInvocation MethodInvocation defineClass ReferenceType newClass MethodInvocation allocate MyRubyObjectSubclass currentRuntime runtime ReferenceType ReferenceType newClass MethodInvocation allocate "TestSetClassAllocatorClass" runtime getObject runtime MethodInvocation getObject RubyObject getClass MyRubyObjectSubclass MyRubyObjectSubclass getClass getAllocator	0
MethodDeclaration Modifier ReferenceType subpat19 FormalParameter FormalParameter FormalParameter IfStatement ReturnStatement private IRubyObject ReferenceType runtime ReferenceType context ReferenceType regex BinaryOperation BlockStatement MethodInvocation Ruby ThreadContext RubyRegexp >= MethodInvocation Literal ReturnStatement runtime getNil regex MemberReference This Literal Literal search19 0 MethodInvocation context 0 false RubyRegexp Literal MethodInvocation nth_match 0 context MethodInvocation getCurrentScope MemberReference getBackRef runtime	0
MethodDeclaration Modifier setKlazz FormalParameter StatementExpression public ReferenceType klazz Assignment RubyModule This MemberReference = MemberReference klazz klazz	0
MethodDeclaration Modifier Annotation ReferenceType sysaccept FormalParameter ReturnStatement public JRubyMethod IRubyObject ReferenceType context MethodInvocation ThreadContext MemberReference accept context	0
MethodDeclaration Modifier ReferenceType yield FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter IfStatement LocalVariableDeclaration TryStatement public IRubyObject ReferenceType context ReferenceType value ReferenceType self ReferenceType klass BasicType aValue ReferenceType binding ReferenceType type BinaryOperation BlockStatement ReferenceType VariableDeclarator WhileStatement CatchClause StatementExpression ThreadContext IRubyObject IRubyObject RubyModule boolean Binding Block ReferenceType == MemberReference Literal StatementExpression StatementExpression Frame lastFrame MethodInvocation Literal BlockStatement CatchClauseParameter ReturnStatement MethodInvocation Type klass null Assignment MethodInvocation MemberReference MemberReference MemberReference pre true TryStatement JumpException.NextJump nj Cast MemberReference MemberReference MemberReference post MemberReference MethodInvocation = binding MethodInvocation getFrame context klass binding ReturnStatement CatchClause CatchClause ReferenceType MethodInvocation context binding lastFrame self binding getSelf MemberReference setSelf MethodInvocation CatchClauseParameter StatementExpression CatchClauseParameter IfStatement ThrowStatement IRubyObject nj getValue self MemberReference MemberReference MemberReference MemberReference callback JumpException.RedoJump rj MethodInvocation JumpException.BreakJump bj BinaryOperation BlockStatement MemberReference value method self Block NULL_BLOCK context pollThreadEvents == MethodInvocation Literal StatementExpression bj bj getTarget null MethodInvocation bj This setTarget	1
MethodDeclaration Modifier BasicType argsHashCode FormalParameter FormalParameter ReturnStatement private static int ReferenceType a0 ReferenceType a1 BinaryOperation IRubyObject IRubyObject + BinaryOperation MethodInvocation * Literal MethodInvocation MemberReference classHashCode 31 MemberReference argsHashCode a1 a0	0
MethodDeclaration Modifier BasicType isNull ReturnStatement final public boolean BinaryOperation == MemberReference Literal address 0	0
MethodDeclaration Modifier ReferenceType getValue ReturnStatement public Object MemberReference value	0
MethodDeclaration Modifier fcmpg StatementExpression public MethodInvocation MethodInvocation getMethodVisitor MemberReference visitInsn FCMPG	0
MethodDeclaration Modifier Annotation ReferenceType bytes FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType block TernaryExpression name Literal frame Literal ThreadContext Block MethodInvocation MethodInvocation MethodInvocation "bytes" true block isGiven MemberReference MemberReference each_byte MethodInvocation This Literal enumeratorize context block context getRuntime "bytes"	0
MethodDeclaration Modifier ReferenceType setVariable FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement final public IRubyObject ReferenceType runtime BasicType i ReferenceType name ReferenceType object ReferenceType value MethodInvocation Ruby int String IRubyObject IRubyObject runtimeCache MemberReference MemberReference MemberReference MemberReference MemberReference setVariable runtime i name object value	0
MethodDeclaration Modifier ReferenceType chomp FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement StatementExpression ReturnStatement static public IRubyObject ReferenceType context ReferenceType recv ReferenceType args ReferenceType block ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation BlockStatement MethodInvocation MemberReference ThreadContext IRubyObject IRubyObject Block RubyString str MethodInvocation RubyString dup Cast dup MethodInvocation MemberReference chomp_bang ReturnStatement context MethodInvocation getCurrentScope dup MemberReference MethodInvocation getLastlineString ReferenceType MethodInvocation isNil args MemberReference MemberReference setLastLine context context getRuntime RubyString str dup str dup	1
MethodDeclaration Modifier setValue FormalParameter IfStatement StatementExpression public BasicType value BinaryOperation BlockStatement Assignment long != MemberReference Literal StatementExpression This MemberReference = fixnum null Assignment MemberReference value MemberReference Literal = value fixnum null	0
MethodDeclaration Modifier Annotation ReferenceType get FormalParameter LocalVariableDeclaration LocalVariableDeclaration ForStatement ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context ReferenceType VariableDeclarator ReferenceType VariableDeclarator ForControl BlockStatement MethodInvocation name ElementArrayValue ThreadContext Ruby runtime MethodInvocation IRubyObject elems ArrayCreator VariableDeclaration BinaryOperation MemberReference StatementExpression RubyArray MemberReference MemberReference newArrayNoCopy Literal Literal context getRuntime ReferenceType MethodInvocation BasicType VariableDeclarator < MemberReference MemberReference ++ i Assignment runtime elems "to_a" "to_ary" IRubyObject arrayType length int i Literal i elems length MemberReference MethodInvocation = 0 ArraySelector elems MemberReference MemberReference get MemberReference runtime i i	0
MethodDeclaration Modifier Annotation ReferenceType acos FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration StatementExpression ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair RubyFloat ReferenceType recv ReferenceType x BasicType VariableDeclarator BasicType VariableDeclarator MethodInvocation MethodInvocation name Literal required Literal module Literal visibility MemberReference IRubyObject IRubyObject double value Cast double result MethodInvocation MemberReference MemberReference Literal domainCheck RubyFloat MethodInvocation MemberReference newFloat "acos" 1 true Visibility PRIVATE ReferenceType MethodInvocation Math MemberReference acos recv result "acos" recv getRuntime result RubyFloat RubyKernel MemberReference MemberReference new_float value recv x	0
MethodDeclaration Modifier BasicType receiveByte FormalParameter ReturnStatement public byte BasicType b MethodInvocation byte vri MemberReference receiveByte b	0
MethodDeclaration Modifier Annotation setArgValues FormalParameter FormalParameter AssertStatement SwitchStatement public Override ReferenceType values BasicType size BinaryOperation MemberReference MemberReference SwitchStatementCase SwitchStatementCase IRubyObject int <= MemberReference MemberReference SIZE_ERROR size Literal StatementExpression Literal StatementExpression size SIZE 2 Assignment 1 Assignment MemberReference MemberReference = MemberReference MemberReference = variableValueOne ArraySelector values variableValueZero ArraySelector values Literal Literal 1 0	1
MethodDeclaration Modifier ReferenceType case375_line1420 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support Cast Cast Cast Literal new_call ReferenceType MemberReference ReferenceType MemberReference ReferenceType MemberReference null Node ArraySelector yyVals Token ArraySelector yyVals Node ArraySelector yyVals BinaryOperation BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference + Literal MemberReference - 3 yyTop - 1 yyTop 0 yyTop	1
MethodDeclaration Modifier ReferenceType case243_line955 FormalParameter FormalParameter FormalParameter ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop MemberReference Object Object int yyVal	1
MethodDeclaration Modifier clear ThrowStatement final public MethodInvocation ex	0
MethodDeclaration Modifier ReferenceType each_value FormalParameter FormalParameter StatementExpression ReturnStatement public RubyHash Modifier ReferenceType context Modifier ReferenceType block MethodInvocation This final ThreadContext final Block ClassCreator iteratorVisitAll ReferenceType MethodDeclaration Visitor Modifier visit FormalParameter FormalParameter StatementExpression public ReferenceType key ReferenceType value MethodInvocation IRubyObject IRubyObject block MemberReference MemberReference yield context value	1
MethodDeclaration Modifier Annotation ReferenceType newInstanceBang FormalParameter FormalParameter FormalParameter IfStatement ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType real BinaryOperation StatementExpression ClassCreator name Literal meta Literal visibility MemberReference ThreadContext IRubyObject IRubyObject instanceof MemberReference ReferenceType Assignment ReferenceType MethodInvocation MemberReference MemberReference MethodInvocation "new!" true Visibility PRIVATE real RubyNumeric MemberReference MethodInvocation = RubyComplex context getRuntime recv real RubyFixnum MethodInvocation zero real MemberReference MemberReference f_to_i context getRuntime context real	1
MethodDeclaration Modifier runTest Throwable LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression LocalVariableDeclaration IfStatement StatementExpression public ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation ReferenceType VariableDeclarator MethodInvocation BlockStatement MethodInvocation StringBuffer script ClassCreator script MethodInvocation Literal append script MethodInvocation Literal append script MethodInvocation MethodInvocation MethodInvocation Literal append script MethodInvocation Literal append RubyArray lastFailed Cast ! lastFailed isEmpty LocalVariableDeclaration StatementExpression System.out flush ReferenceType Literal append "require 'test/minirunit'" Literal append "$silentTests = true" MethodInvocation append Literal append Literal append "test_load('" Literal append "$failed" ReferenceType MethodInvocation ReferenceType VariableDeclarator MethodInvocation StringBuffer '\n' '\n' scriptName "')" '\n' '\n' RubyArray runtime MethodInvocation BinaryOperation executeScript RubyString message Cast BinaryOperation fail script toString + MethodInvocation Literal ReferenceType MethodInvocation + BinaryOperation MethodInvocation scriptName "_generated_test.rb" RubyString lastFailed MethodInvocation Literal callMethod + MethodInvocation Literal message toString lastFailed MethodInvocation getRuntime "to_s" scriptName " failed, complete failure list follows:\n" getCurrentContext	0
MethodDeclaration Modifier ReferenceType accept FormalParameter ReturnStatement public Object ReferenceType iVisitor MethodInvocation NodeVisitor iVisitor This visitNewlineNode	0
MethodDeclaration Modifier pushmethod FormalParameter StatementExpression public ReferenceType name MethodInvocation String MethodInvocation clsData MemberReference pushmethod name	0
MethodDeclaration Modifier ReferenceType createLibrary FormalParameter FormalParameter IfStatement LocalVariableDeclaration IfStatement protected Library ReferenceType state ReferenceType resource BinaryOperation BlockStatement ReferenceType VariableDeclarator MethodInvocation BlockStatement IfStatement SearchState LoadServiceResource == MemberReference Literal ReturnStatement String file MemberReference file Literal endsWith ThrowStatement MethodInvocation BlockStatement IfStatement resource null Literal state loadName ".so" MethodInvocation file Literal endsWith ReturnStatement MethodInvocation BlockStatement BlockStatement null runtime Literal newLoadError ".jar" ClassCreator file Literal endsWith ReturnStatement ReturnStatement "JRuby does not support .so libraries from filesystem" ReferenceType MemberReference ".class" ClassCreator ClassCreator JarredScript resource ReferenceType MemberReference ReferenceType MemberReference MemberReference JavaCompiledScript resource ExternalScript resource file	0
MethodDeclaration Modifier BasicType hash ReturnStatement public int MemberReference hash	0
MethodDeclaration Modifier finish LocalVariableDeclaration LocalVariableDeclaration IfStatement StatementExpression IfStatement StatementExpression IfStatement StatementExpression IfStatement StatementExpression IfStatement StatementExpression IfStatement StatementExpression IfStatement StatementExpression IfStatement StatementExpression IfStatement StatementExpression IfStatement StatementExpression IfStatement StatementExpression IfStatement StatementExpression IfStatement public ReferenceType VariableDeclarator BasicType VariableDeclarator BinaryOperation BlockStatement Assignment BinaryOperation BlockStatement Assignment BinaryOperation BlockStatement Assignment BinaryOperation BlockStatement Assignment BinaryOperation BlockStatement Assignment BinaryOperation BlockStatement Assignment BinaryOperation BlockStatement Assignment BinaryOperation BlockStatement Assignment BinaryOperation BlockStatement Assignment BinaryOperation BlockStatement Assignment BinaryOperation BlockStatement Assignment BinaryOperation BlockStatement Assignment BinaryOperation BlockStatement SkinnyMethodAdapter initMethod MethodInvocation int size MethodInvocation != MemberReference Literal StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression ForStatement StatementExpression MemberReference MemberReference = != MemberReference Literal StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression MemberReference MemberReference = != MemberReference Literal StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression MemberReference MemberReference = != MemberReference Literal StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression MemberReference MemberReference = != MemberReference Literal StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression MemberReference MemberReference = != MemberReference Literal StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression MemberReference MemberReference = != MemberReference Literal StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression MemberReference MemberReference = != MemberReference Literal StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression MemberReference MemberReference = != MemberReference Literal StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression MemberReference MemberReference = != MemberReference Literal StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression MemberReference MemberReference = != MemberReference Literal StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression MemberReference MemberReference = > MemberReference Literal StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression ForStatement StatementExpression MemberReference MemberReference = != MemberReference Literal StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression scriptCompiler getInitMethod callSiteList size size 0 MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation ForControl BlockStatement MethodInvocation size scopeCount size 0 MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation size inheritedSymbolCount size 0 MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation size inheritedFixnumCount size 0 MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation size inheritedConstantCount size 0 MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation size inheritedRegexpCount size 0 MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation size inheritedBigIntegerCount size 0 MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation size inheritedVariableReaderCount size 0 MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation size inheritedVariableWriterCount size 0 MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation size inheritedBlockBodyCount size 0 MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation size inheritedBlockCallbackCount size 0 MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation size inheritedStringCount inheritedStringCount 0 MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation EnhancedForControl BlockStatement MethodInvocation size inheritedMethodCount size 0 MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MemberReference ensureRuntimeCacheInited initMethod Literal aload initMethod MethodInvocation Literal MethodInvocation getfield initMethod dup initMethod MemberReference pushInt initMethod MethodInvocation Literal MethodInvocation invokevirtual initMethod MethodInvocation Literal MethodInvocation getfield VariableDeclaration BinaryOperation MemberReference LocalVariableDeclaration LocalVariableDeclaration StatementExpression IfStatement initMethod pop MemberReference ensureRuntimeCacheInited initMethod Literal aload initMethod MethodInvocation Literal MethodInvocation getfield initMethod MemberReference pushInt initMethod MethodInvocation Literal MethodInvocation invokevirtual MemberReference ensureRuntimeCacheInited initMethod Literal aload initMethod MethodInvocation Literal MethodInvocation getfield initMethod MemberReference pushInt initMethod MethodInvocation Literal MethodInvocation invokevirtual MemberReference ensureRuntimeCacheInited initMethod Literal aload initMethod MethodInvocation Literal MethodInvocation getfield initMethod MemberReference pushInt initMethod MethodInvocation Literal MethodInvocation invokevirtual MemberReference ensureRuntimeCacheInited initMethod Literal aload initMethod MethodInvocation Literal MethodInvocation getfield initMethod MemberReference pushInt initMethod MethodInvocation Literal MethodInvocation invokevirtual MemberReference ensureRuntimeCacheInited initMethod Literal aload initMethod MethodInvocation Literal MethodInvocation getfield initMethod MemberReference pushInt initMethod MethodInvocation Literal MethodInvocation invokevirtual MemberReference ensureRuntimeCacheInited initMethod Literal aload initMethod MethodInvocation Literal MethodInvocation getfield initMethod MemberReference pushInt initMethod MethodInvocation Literal MethodInvocation invokevirtual MemberReference ensureRuntimeCacheInited initMethod Literal aload initMethod MethodInvocation Literal MethodInvocation getfield initMethod MemberReference pushInt initMethod MethodInvocation Literal MethodInvocation invokevirtual MemberReference ensureRuntimeCacheInited initMethod Literal aload initMethod MethodInvocation Literal MethodInvocation getfield initMethod MemberReference pushInt initMethod MethodInvocation Literal MethodInvocation invokevirtual MemberReference ensureRuntimeCacheInited initMethod Literal aload initMethod MethodInvocation Literal MethodInvocation getfield initMethod MemberReference pushInt initMethod MethodInvocation Literal MethodInvocation invokevirtual MemberReference ensureRuntimeCacheInited initMethod Literal aload initMethod MethodInvocation Literal MethodInvocation getfield initMethod MemberReference pushInt initMethod MethodInvocation Literal MethodInvocation invokevirtual MemberReference ensureRuntimeCacheInited initMethod Literal aload initMethod MethodInvocation Literal MethodInvocation getfield initMethod MemberReference pushInt initMethod MethodInvocation Literal MethodInvocation invokevirtual VariableDeclaration MethodInvocation StatementExpression StatementExpression StatementExpression initMethod pop MemberReference ensureRuntimeCacheInited initMethod Literal aload initMethod MethodInvocation Literal MethodInvocation getfield initMethod MemberReference pushInt initMethod MethodInvocation Literal MethodInvocation invokevirtual initMethod 0 ClassReference p "runtimeCache" ClassReference ci size ClassReference p "initCallSites" VoidClassReference ClassReference sig ClassReference p "callSites" ClassReference ci BasicType VariableDeclarator >= MemberReference Literal -- i ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation BlockStatement IfStatement initMethod 0 ClassReference p "runtimeCache" ClassReference ci size ClassReference p "initScopes" VoidClassReference MethodInvocation sig initMethod 0 ClassReference p "runtimeCache" ClassReference ci size ClassReference p "initSymbols" VoidClassReference MethodInvocation sig initMethod 0 ClassReference p "runtimeCache" ClassReference ci size ClassReference p "initFixnums" VoidClassReference MethodInvocation sig initMethod 0 ClassReference p "runtimeCache" ClassReference ci size ClassReference p "initConstants" VoidClassReference MethodInvocation sig initMethod 0 ClassReference p "runtimeCache" ClassReference ci size ClassReference p "initRegexps" VoidClassReference MethodInvocation sig initMethod 0 ClassReference p "runtimeCache" ClassReference ci size ClassReference p "initBigIntegers" VoidClassReference MethodInvocation sig initMethod 0 ClassReference p "runtimeCache" ClassReference ci size ClassReference p "initVariableReaders" VoidClassReference MethodInvocation sig initMethod 0 ClassReference p "runtimeCache" ClassReference ci size ClassReference p "initVariableWriters" VoidClassReference MethodInvocation sig initMethod 0 ClassReference p "runtimeCache" ClassReference ci size ClassReference p "initBlockBodies" VoidClassReference MethodInvocation sig initMethod 0 ClassReference p "runtimeCache" ClassReference ci size ClassReference p "initBlockCallbacks" VoidClassReference MethodInvocation sig initMethod 0 ClassReference p "runtimeCache" ClassReference ci size ClassReference p "initStrings" ClassReference MethodInvocation sig ReferenceType VariableDeclarator stringIndices entrySet MethodInvocation MethodInvocation MethodInvocation initMethod 0 ClassReference p "runtimeCache" ClassReference ci size ClassReference p "initMethodCache" VoidClassReference MethodInvocation sig ReferenceType AbstractScript ReferenceType AbstractScript ReferenceType BasicType AbstractScript ReferenceType ReferenceType int i BinaryOperation i 0 String name MethodInvocation CallType callType MethodInvocation initMethod MemberReference pushInt callType MemberReference equals StatementExpression StatementExpression MethodInvocation BlockStatement IfStatement ReferenceType AbstractScript ReferenceType AbstractScript ReferenceType ClassReference params ReferenceType AbstractScript ReferenceType AbstractScript ReferenceType ClassReference params ReferenceType AbstractScript ReferenceType AbstractScript ReferenceType ClassReference params ReferenceType AbstractScript ReferenceType AbstractScript ReferenceType ClassReference params ReferenceType AbstractScript ReferenceType AbstractScript ReferenceType ClassReference params ReferenceType AbstractScript ReferenceType AbstractScript ReferenceType ClassReference params ReferenceType AbstractScript ReferenceType AbstractScript ReferenceType ClassReference params ReferenceType AbstractScript ReferenceType AbstractScript ReferenceType ClassReference params ReferenceType AbstractScript ReferenceType AbstractScript ReferenceType ClassReference params ReferenceType AbstractScript ReferenceType AbstractScript ReferenceType ClassReference params ReferenceType AbstractScript ReferenceType AbstractScript ReferenceType ReferenceType ClassReference params Map ReferenceType entry initMethod MethodInvocation ldc initMethod MethodInvocation ldc initMethod MethodInvocation Literal MethodInvocation invokestatic ReferenceType AbstractScript ReferenceType AbstractScript ReferenceType ClassReference params AbstractScript RuntimeCache RuntimeCache int RuntimeCache CallSite - MemberReference Literal callSiteList MemberReference get callTypeList MemberReference get i CallType NORMAL MethodInvocation MethodInvocation callType MemberReference equals StatementExpression StatementExpression MethodInvocation BlockStatement IfStatement AbstractScript RuntimeCache RuntimeCache BasicType AbstractScript RuntimeCache RuntimeCache BasicType AbstractScript RuntimeCache RuntimeCache BasicType AbstractScript RuntimeCache RuntimeCache BasicType AbstractScript RuntimeCache RuntimeCache BasicType AbstractScript RuntimeCache RuntimeCache BasicType AbstractScript RuntimeCache RuntimeCache BasicType AbstractScript RuntimeCache RuntimeCache BasicType AbstractScript RuntimeCache RuntimeCache BasicType AbstractScript RuntimeCache RuntimeCache BasicType AbstractScript RuntimeCache RuntimeCache ByteList BasicType Entry TypeArgument TypeArgument entry getValue entry getKey ClassReference p "createByteList" ClassReference ClassReference ClassReference ClassReference sig AbstractScript RuntimeCache RuntimeCache BasicType size 1 i i initMethod MemberReference ldc initMethod MethodInvocation Literal MethodInvocation invokestatic CallType FUNCTIONAL MethodInvocation MethodInvocation callType MemberReference equals StatementExpression StatementExpression MethodInvocation BlockStatement int int int int int int int int int int int ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType BasicType ReferenceType int name scriptCompiler getClassname "setCallSite" ClassReference MethodInvocation sig initMethod MemberReference ldc initMethod MethodInvocation Literal MethodInvocation invokestatic CallType VARIABLE MethodInvocation MethodInvocation callType MemberReference equals StatementExpression String Integer AbstractScript ByteList ByteList int String ReferenceType ClassReference ClassReference ClassReference params name scriptCompiler getClassname "setFunctionalCallSite" ClassReference MethodInvocation sig initMethod MemberReference ldc initMethod MethodInvocation Literal MethodInvocation invokestatic CallType SUPER MethodInvocation CallSite ReferenceType BasicType ReferenceType ReferenceType ClassReference ClassReference ClassReference params name scriptCompiler getClassname "setVariableCallSite" ClassReference MethodInvocation sig initMethod MethodInvocation Literal MethodInvocation invokestatic CallSite int String CallSite ReferenceType BasicType ReferenceType ReferenceType ClassReference ClassReference ClassReference params scriptCompiler getClassname "setSuperCallSite" ClassReference MethodInvocation sig CallSite int String CallSite ReferenceType BasicType ReferenceType ReferenceType ClassReference ClassReference params CallSite int String CallSite ReferenceType BasicType CallSite int	1
MethodDeclaration Modifier BasicType unmarshalInt IOException LocalVariableDeclaration IfStatement LocalVariableDeclaration IfStatement ReturnStatement public int BasicType VariableDeclarator BinaryOperation BlockStatement IfStatement BasicType VariableDeclarator BinaryOperation BlockStatement BlockStatement Cast int c MethodInvocation == MemberReference Literal ReturnStatement BinaryOperation BlockStatement IfStatement long result > MemberReference Literal StatementExpression ForStatement StatementExpression StatementExpression ForStatement BasicType MemberReference readSignedByte c 0 Literal && BinaryOperation BinaryOperation ReturnStatement BinaryOperation BlockStatement c 0 Assignment ForControl BlockStatement Assignment Assignment ForControl BlockStatement int result 0 < Literal MemberReference < MemberReference Literal BinaryOperation && BinaryOperation BinaryOperation ReturnStatement MemberReference Literal = VariableDeclaration BinaryOperation MemberReference StatementExpression MemberReference MemberReference = MemberReference Literal = VariableDeclaration BinaryOperation MemberReference StatementExpression StatementExpression 5 c c 128 - MemberReference Literal < Literal MemberReference < MemberReference Literal BinaryOperation result 0 BasicType VariableDeclarator < MemberReference MemberReference ++ i Assignment c - c result - 1 BasicType VariableDeclarator < MemberReference MemberReference ++ i Assignment Assignment c 5 - 129 c c - 5 + MemberReference Literal int i Literal i c MemberReference BinaryOperation |= int i Literal i c MemberReference BinaryOperation &= MemberReference BinaryOperation |= c 5 0 result << Cast BinaryOperation 0 result << Cast BinaryOperation result << Cast BinaryOperation BasicType MethodInvocation * Literal MemberReference BasicType Literal * Literal MemberReference BasicType MethodInvocation * Literal MemberReference long readUnsignedByte 8 i long 0xff 8 i long readUnsignedByte 8 i	0
MethodDeclaration Modifier Annotation ReferenceType print FormalParameter FormalParameter FormalParameter LocalVariableDeclaration ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType args ReferenceType VariableDeclarator MethodInvocation name Literal rest Literal module Literal visibility MemberReference ThreadContext IRubyObject IRubyObject IRubyObject defout MethodInvocation RubyIO MemberReference MemberReference MemberReference print "print" true true PRIVATE context MethodInvocation MethodInvocation getRuntime context defout args getGlobalVariables Literal get "$>"	0
MethodDeclaration Modifier Annotation ReferenceType log2_19 FormalParameter FormalParameter LocalVariableDeclaration StatementExpression ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair ElementValuePair RubyFloat ReferenceType recv ReferenceType x BasicType VariableDeclarator MethodInvocation MethodInvocation name Literal required Literal module Literal visibility MemberReference compat MemberReference IRubyObject IRubyObject double value Cast MemberReference MemberReference zeroInLogCheck MemberReference MemberReference Literal log_common "log2" 1 true Visibility PRIVATE CompatVersion RUBY1_9 ReferenceType MethodInvocation recv value recv x 2 RubyFloat RubyKernel MemberReference MemberReference new_float recv x	1
MethodDeclaration Modifier Annotation ReferenceType round ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject This name Literal compat MemberReference "round" CompatVersion RUBY1_8	0
MethodDeclaration Modifier ReferenceType convertEncodingToRubyEncoding FormalParameter FormalParameter IfStatement ReturnStatement static public IRubyObject ReferenceType runtime ReferenceType defaultEncoding BinaryOperation BlockStatement MethodInvocation Ruby Encoding != MemberReference Literal ReturnStatement runtime getNil defaultEncoding null ClassCreator ReferenceType MemberReference MemberReference RubyEncoding runtime defaultEncoding	0
MethodDeclaration Modifier ReferenceType loadAndCall FormalParameter FormalParameter FormalParameter FormalParameter Throwable LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression TryStatement static public IRubyObject ReferenceType self ReferenceType name BasicType javaClass ReferenceType methodName ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation ReturnStatement CatchClause StatementExpression IRubyObject String byte String Loader loader ClassCreator Class c MethodInvocation Method method MethodInvocation Ruby runtime MethodInvocation ThreadContext tc MethodInvocation tc MethodInvocation pushRubyClass Cast CatchClauseParameter ThrowStatement MethodInvocation ReferenceType loader MemberReference MemberReference loadClass c MemberReference ArrayCreator getMethod self getRuntime runtime getCurrentContext self getType ReferenceType MethodInvocation InvocationTargetException e MethodInvocation tc popRubyClass Loader name javaClass methodName ReferenceType ArrayInitializer IRubyObject method Literal ArrayCreator invoke MemberReference unrollException Class ClassReference ClassReference null ReferenceType ArrayInitializer e ReferenceType ReferenceType Object MemberReference MemberReference Ruby IRubyObject runtime self	0
MethodDeclaration Modifier dataWrapStruct FormalParameter StatementExpression StatementExpression public ReferenceType object MethodInvocation Assignment Object objectAccessor This MemberReference set This Cast = object MemberReference ReferenceType MemberReference object JavaObject object	0
MethodDeclaration Modifier BasicType arrayLength ReturnStatement final public int MemberReference length	1
MethodDeclaration Modifier callTrace FormalParameter FormalParameter StatementExpression protected final ReferenceType context ReferenceType name MethodInvocation ThreadContext String context MemberReference MemberReference MethodInvocation trace RubyEvent C_CALL name getImplementationClass	1
MethodDeclaration Modifier ReferenceType newArrayNoCopy FormalParameter FormalParameter ReturnStatement static public RubyArray ReferenceType runtime ReferenceType args ClassCreator Ruby IRubyObject ReferenceType MemberReference MemberReference RubyArray runtime args	0
MethodDeclaration Modifier Annotation ReferenceType definition FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public Override String ReferenceType runtime ReferenceType context ReferenceType self ReferenceType aBlock Literal Ruby ThreadContext IRubyObject Block "assignment"	0
MethodDeclaration Modifier issueNextEvent FormalParameter IfStatement public ReferenceType value BinaryOperation BlockStatement BlockStatement CompilerCallback != MemberReference Literal StatementExpression StatementExpression StatementExpression StatementExpression currentLoopLabels null MethodInvocation MethodInvocation MethodInvocation MethodInvocation value This call issueLoopNext value This call Literal MethodInvocation invokeUtilityMethod "nextJump" ClassReference ClassReference sig ReferenceType ReferenceType IRubyObject IRubyObject	0
MethodDeclaration Modifier ReferenceType compareFixnum FormalParameter FormalParameter LocalVariableDeclaration ReturnStatement private IRubyObject ReferenceType runtime ReferenceType other BasicType VariableDeclarator TernaryExpression Ruby RubyFixnum long otherValue Cast BinaryOperation MethodInvocation TernaryExpression ReferenceType MemberReference == MemberReference MemberReference RubyFixnum MemberReference zero BinaryOperation MethodInvocation MethodInvocation RubyFixnum other value otherValue runtime > MemberReference MemberReference RubyFixnum MemberReference one RubyFixnum MemberReference minus_one value otherValue runtime runtime	1
MethodDeclaration Modifier Annotation ReferenceType weakref_alive_p ReturnStatement public JRubyMethod ElementValuePair IRubyObject TernaryExpression name Literal BinaryOperation MethodInvocation MethodInvocation "weakref_alive?" != MethodInvocation Literal MethodInvocation getRuntime MethodInvocation getRuntime ref get null getTrue getFalse	1
MethodDeclaration Modifier BasicType intValue FormalParameter FormalParameter ReturnStatement final public int ReferenceType context ReferenceType obj MethodInvocation ThreadContext IRubyObject Util MemberReference uint8Value obj	1
MethodDeclaration Modifier ReferenceType setupInterpreter LocalVariableDeclaration StatementExpression ReturnStatement private static Ruby ReferenceType VariableDeclarator MethodInvocation MemberReference Ruby runtime MethodInvocation runtime MethodInvocation getLoadService runtime Ruby newInstance ClassCreator init ReferenceType ArrayList	0
MethodDeclaration Modifier Annotation BasicType eql FormalParameter LocalVariableDeclaration IfStatement ReturnStatement final public Override boolean ReferenceType other ReferenceType VariableDeclarator BinaryOperation ReturnStatement TernaryExpression IRubyObject Ruby runtime MethodInvocation || BinaryOperation BinaryOperation SuperMethodInvocation MethodInvocation MethodInvocation MethodInvocation getRuntime != MethodInvocation MethodInvocation != MethodInvocation MethodInvocation MemberReference eql runtime is1_9 MemberReference MemberReference eql19 MemberReference MemberReference eql18 getMetaClass runtime getString getMetaClass other getMetaClass other runtime other runtime other	1
MethodDeclaration Modifier Annotation ReferenceType rbRaise FormalParameter FormalParameter FormalParameter FormalParameter Throwable IfStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType args ReferenceType block BinaryOperation BlockStatement BlockStatement name Literal optional Literal frame Literal module Literal visibility MemberReference ThreadContext IRubyObject IRubyObject Block && BinaryOperation BinaryOperation LocalVariableDeclaration IfStatement ReturnStatement "raise" 3 true true Visibility PRIVATE == MemberReference Literal instanceof MemberReference ReferenceType ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement MethodInvocation args length 1 ArraySelector MethodInvocation args JavaObject Object maybeThrowable Cast instanceof MemberReference ReferenceType ThrowStatement ThrowStatement RubyKernel MemberReference MemberReference MemberReference MemberReference raise Literal dataGetStruct ReferenceType MemberReference maybeThrowable Throwable Cast MethodInvocation context recv args block 0 JavaObject ArraySelector MethodInvocation args ReferenceType MemberReference context MethodInvocation getRuntime Literal dataGetStruct Throwable maybeThrowable Literal newTypeError 0 "can't raise a non-Throwable Java object"	1
MethodDeclaration Modifier ReferenceType prepend FormalParameter IfStatement StatementExpression StatementExpression ReturnStatement public ListNode ReferenceType node BinaryOperation ReturnStatement MethodInvocation MethodInvocation This Node == MemberReference Literal This list Literal MemberReference add MethodInvocation setPosition node null 0 node node getPosition	1
MethodDeclaration Modifier ReferenceType makeSharedFirst FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement private RubyArray ReferenceType context ReferenceType num BasicType last ReferenceType klass BasicType VariableDeclarator BinaryOperation BlockStatement IfStatement MethodInvocation ThreadContext IRubyObject boolean RubyClass int n MethodInvocation > MemberReference MemberReference StatementExpression BinaryOperation BlockStatement TernaryExpression MemberReference MemberReference makeShared RubyNumeric MemberReference num2int n realLength Assignment < MemberReference Literal ThrowStatement MemberReference BinaryOperation Literal n klass num MemberReference MemberReference = n 0 MethodInvocation last - MemberReference MemberReference 0 n realLength context MethodInvocation getRuntime realLength n Literal newArgumentError "negative array size"	0
MethodDeclaration Modifier testOpXOr StatementExpression StatementExpression public MethodInvocation MethodInvocation MethodInvocation assertTrue MethodInvocation assertTrue RubyNil MethodInvocation MemberReference MethodInvocation op_xor RubyNil MethodInvocation MemberReference MethodInvocation op_xor isTrue rubyNil runtime getTrue isFalse rubyNil runtime getFalse	0
MethodDeclaration Modifier run FormalParameter IfStatement LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration WhileStatement public ReferenceType s BinaryOperation ReturnStatement ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation BlockStatement IR_Scope instanceof MemberReference ReferenceType IR_Method m Cast Label deoptLabel MethodInvocation Map TypeArgument TypeArgument valueMap ClassCreator Map TypeArgument TypeArgument versionMap ClassCreator ListIterator TypeArgument instrs MethodInvocation instrs hasNext LocalVariableDeclaration LocalVariableDeclaration IfStatement LocalVariableDeclaration LocalVariableDeclaration IfStatement IfStatement s IR_Method ReferenceType MemberReference m getNewLabel ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType m MethodInvocation getInstrs ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation BlockStatement ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement IfStatement BinaryOperation BlockStatement IR_Method s Operand Operand HashMap TypeArgument TypeArgument String CodeVersion HashMap TypeArgument TypeArgument IR_Instr listIterator IR_Instr i MethodInvocation Operation iop MemberReference iop startsBasicBlock StatementExpression StatementExpression Operand val MethodInvocation Variable res MethodInvocation && BinaryOperation BinaryOperation StatementExpression MethodInvocation BlockStatement || MethodInvocation BinaryOperation StatementExpression StatementExpression ReferenceType ReferenceType ReferenceType ReferenceType instrs next i _op Assignment Assignment i MemberReference simplifyAndGetResult i getResult && BinaryOperation BinaryOperation != MemberReference MemberReference MethodInvocation iop isCall StatementExpression LocalVariableDeclaration LocalVariableDeclaration IfStatement LocalVariableDeclaration IfStatement iop endsBasicBlock && MethodInvocation MethodInvocation Assignment Assignment Operand Operand String CodeVersion MemberReference ClassCreator = MemberReference ClassCreator = valueMap != MemberReference Literal != MemberReference Literal res val valueMap MemberReference MemberReference put Assignment ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation BlockStatement ReferenceType VariableDeclarator BinaryOperation BlockStatement iop isCall ! i isDead MemberReference ClassCreator = MemberReference ClassCreator = valueMap ReferenceType versionMap ReferenceType val null res null res val MemberReference Literal = CALL_Instr call Cast Operand r MethodInvocation ! r isConstant LocalVariableDeclaration IfStatement IR_Method rm MethodInvocation != MemberReference Literal LocalVariableDeclaration IfStatement IfStatement valueMap ReferenceType versionMap ReferenceType HashMap TypeArgument TypeArgument HashMap TypeArgument TypeArgument val null ReferenceType MemberReference call getReceiver ReferenceType VariableDeclarator BinaryOperation StatementExpression call MemberReference getTargetMethodWithReceiver rm null ReferenceType VariableDeclarator BinaryOperation BlockStatement IfStatement BinaryOperation BlockStatement HashMap TypeArgument TypeArgument HashMap TypeArgument TypeArgument ReferenceType ReferenceType ReferenceType ReferenceType CALL_Instr i Operand v MethodInvocation != MemberReference Literal Assignment r IR_Module rc MethodInvocation == MemberReference MethodInvocation LocalVariableDeclaration IfStatement BinaryOperation BlockStatement IfStatement != MemberReference Literal StatementExpression StatementExpression StatementExpression ReferenceType ReferenceType ReferenceType ReferenceType Operand Operand String CodeVersion valueMap MemberReference get v null MemberReference MemberReference = rm getDefiningModule rc IR_Class Literal getCoreClass ReferenceType VariableDeclarator MemberReference BlockStatement == MemberReference MethodInvocation LocalVariableDeclaration IfStatement BinaryOperation BlockStatement val null MethodInvocation MethodInvocation MethodInvocation Operand Operand String CodeVersion r r v "Fixnum" Operand args MethodInvocation ArraySelector MethodInvocation args StatementExpression StatementExpression rc IR_Class Literal getCoreClass ReferenceType VariableDeclarator MemberReference BlockStatement == MemberReference MethodInvocation LocalVariableDeclaration IfStatement i markDead instrs ClassCreator add valueMap MemberReference MemberReference put call getCallArgs Literal isConstant MethodInvocation Assignment "Float" Operand args MethodInvocation ArraySelector MethodInvocation args StatementExpression StatementExpression rc IR_Class Literal getCoreClass ReferenceType VariableDeclarator BinaryOperation BlockStatement ReferenceType MemberReference MemberReference res val 1 MemberReference MemberReference MemberReference MemberReference addMethodGuard MemberReference Cast = call getCallArgs Literal isConstant MethodInvocation Assignment "Array" Operand args MethodInvocation && BinaryOperation BinaryOperation StatementExpression StatementExpression COPY_Instr res val rm deoptLabel versionMap instrs val ReferenceType MemberReference 1 MemberReference MemberReference MemberReference MemberReference addMethodGuard MemberReference Cast = call getCallArgs instanceof MemberReference ReferenceType == MemberReference Literal MethodInvocation Assignment Fixnum r rm deoptLabel versionMap instrs val ReferenceType MemberReference ArraySelector args Fixnum rm _name "[]" MemberReference MemberReference MemberReference MemberReference addMethodGuard MemberReference Cast = Float r Literal rm deoptLabel versionMap instrs val ReferenceType MemberReference 1 Array r	1
MethodDeclaration Modifier ReferenceType constructStringArray FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement static public String ReferenceType one ReferenceType two ReferenceType three ReferenceType four ReferenceType five ReferenceType six ReferenceType seven ReferenceType eight ReferenceType nine ReferenceType ten ArrayCreator String String String String String String String String String String ReferenceType ArrayInitializer String MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference one two three four five six seven eight nine ten	1
MethodDeclaration Modifier lor StatementExpression public MethodInvocation MethodInvocation getMethodVisitor MemberReference visitInsn LOR	0
MethodDeclaration Modifier main FormalParameter IfStatement LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression LocalVariableDeclaration TryStatement static public ReferenceType args BinaryOperation BlockStatement ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation Assignment MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation BasicType VariableDeclarator LocalVariableDeclaration StatementExpression CatchClause String != MemberReference Literal StatementExpression StatementExpression String pkg MemberReference String dir MemberReference String classname BinaryOperation String classpath BinaryOperation ClassWriter cw ClassCreator cw MemberReference BinaryOperation MemberReference Literal MethodInvocation ArrayCreator visit cw Literal Literal visitSource SkinnyMethodAdapter method ClassCreator method start method Literal line method Literal aload method MethodInvocation Literal MethodInvocation invokespecial method voidreturn method end MemberReference ClassCreator = method Literal line method start method Literal aload method athrow method end cw visitEnd byte bytecode MethodInvocation ReferenceType VariableDeclarator MethodInvocation CatchClauseParameter ThrowStatement args length 2 MethodInvocation MethodInvocation ArraySelector MethodInvocation args ArraySelector args + MemberReference Literal + MemberReference Literal ReferenceType BinaryOperation V1_5 + MemberReference MemberReference classname null ClassReference p ReferenceType ArrayInitializer "<generated>" null ReferenceType MethodInvocation 0 0 ClassReference p "<init>" VoidClassReference sig method ReferenceType MethodInvocation 0 1 cw toByteArray FileOutputStream fos ClassCreator fos MemberReference write Exception e ClassCreator System.err Literal println System Literal exit Literal Literal Literal replace Literal pkg "/GeneratedUnsafe" dir "/GeneratedUnsafe.class" ClassWriter | MemberReference MemberReference ACC_PUBLIC ACC_SUPER ReferenceType String MethodInvocation SkinnyMethodAdapter cw MemberReference Literal MethodInvocation Literal Literal visitMethod ReferenceType SkinnyMethodAdapter cw MemberReference Literal MethodInvocation Literal Literal visitMethod ReferenceType MemberReference bytecode ReferenceType MemberReference "Two args please, the target package and directory" 1 0 '.' '/' 1 ClassWriter COMPUTE_MAXS ClassWriter COMPUTE_FRAMES Object ClassReference p ACC_PUBLIC "<init>" VoidClassReference sig null null Object ACC_PUBLIC "throwException" VoidClassReference ClassReference sig null null FileOutputStream classpath RuntimeException e ReferenceType ReferenceType Unsafe Throwable	1
MethodDeclaration Modifier ReferenceType trySimpleConversions FormalParameter FormalParameter IfStatement IfStatement IfStatement ReturnStatement private static IRubyObject ReferenceType runtime ReferenceType object BinaryOperation BlockStatement BinaryOperation BlockStatement BinaryOperation BlockStatement Literal Ruby Object == MemberReference Literal ReturnStatement instanceof MemberReference ReferenceType ReturnStatement instanceof MemberReference ReferenceType LocalVariableDeclaration LocalVariableDeclaration IfStatement null object null MethodInvocation object IRubyObject Cast object InternalJavaProxy ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement runtime getNil ReferenceType MemberReference InternalJavaProxy internalJavaProxy Cast IRubyObject orig MethodInvocation != MemberReference Literal ReturnStatement IRubyObject object ReferenceType MemberReference internalJavaProxy MethodInvocation ___getInvocationHandler orig null MemberReference InternalJavaProxy object getOrig orig	0
MethodDeclaration Modifier ReferenceType pair FormalParameter FormalParameter ReturnStatement static public Pair ReferenceType head ReferenceType tail ClassCreator N N ReferenceType MemberReference MemberReference Pair head tail	0
MethodDeclaration Modifier ReferenceType getValues ReturnStatement public IRubyObject MemberReference IRubyObject NULL_ARRAY	0
MethodDeclaration Modifier ReferenceType getNodeType ReturnStatement public NodeType MemberReference NodeType HASHNODE	0
MethodDeclaration Modifier ReferenceType getVersionFromString FormalParameter IfStatement static public CompatVersion ReferenceType compatString MethodInvocation BlockStatement IfStatement String compatString Literal equalsIgnoreCase ReturnStatement MethodInvocation BlockStatement BlockStatement "RUBY1_8" MemberReference compatString Literal equalsIgnoreCase ReturnStatement ReturnStatement CompatVersion RUBY1_8 "RUBY1_9" MemberReference Literal CompatVersion RUBY1_9 null	1
MethodDeclaration Modifier ReferenceType setConstantInModule FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement static public IRubyObject ReferenceType module ReferenceType value ReferenceType name ReferenceType context MethodInvocation IRubyObject IRubyObject String ThreadContext context MemberReference MemberReference MemberReference setConstantInModule name module value	0
MethodDeclaration Modifier Annotation Annotation ReferenceType to_proc FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair Override IRubyObject ReferenceType context ReferenceType unusedBlock SuperMethodInvocation name Literal frame Literal ThreadContext Block MemberReference MemberReference to_proc "to_proc" true context unusedBlock	0
MethodDeclaration Modifier Annotation ReferenceType append_features FormalParameter FormalParameter FormalParameter IfStatement ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType receiver ReferenceType include ReferenceType block BinaryOperation BlockStatement MemberReference name Literal required Literal frame Literal module Literal IRubyObject IRubyObject Block instanceof MemberReference ReferenceType StatementExpression StatementExpression receiver "append_features" 1 true true include RubyModule Cast MethodInvocation ReferenceType MemberReference include MethodInvocation getSingletonClass RubyModule include Literal ClassCreator defineMethod "induced_from" ReferenceType MethodDeclaration MethodDeclaration Callback Modifier ReferenceType execute FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement Modifier ReferenceType getArity ReturnStatement public IRubyObject ReferenceType recv ReferenceType args ReferenceType block MethodInvocation MethodInvocation public Arity MemberReference IRubyObject IRubyObject Block Arity MethodInvocation MemberReference Literal Literal checkArgumentCount RubyPrecision MemberReference MemberReference MemberReference induced_from Arity ONE_ARGUMENT recv getRuntime args 1 1 recv ArraySelector args block Literal 0	1
MethodDeclaration Modifier preNodeEval FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression public ReferenceType rubyClass ReferenceType self ReferenceType name MethodInvocation MethodInvocation RubyModule IRubyObject String MemberReference pushRubyClass MemberReference pushEvalFrame rubyClass self	1
MethodDeclaration Modifier BasicType isRest ReturnStatement public boolean MemberReference rest	0
MethodDeclaration Modifier Annotation ReferenceType readchar LocalVariableDeclaration IfStatement ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType VariableDeclarator MethodInvocation ThrowStatement MemberReference name Literal IRubyObject c MethodInvocation c isNil MethodInvocation c "readchar" getc MethodInvocation getRuntime newEOFError	1
MethodDeclaration Modifier removeTraces StatementExpression public Assignment MemberReference Literal = traces null	0
MethodDeclaration Modifier ReferenceType getEncoding ReturnStatement public Encoding Literal null	0
MethodDeclaration Modifier Annotation ReferenceType same FormalParameter ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType other MethodInvocation name Literal IRubyObject MethodInvocation getRuntime "equal?" MethodInvocation newBoolean MemberReference equals other	0
MethodDeclaration Modifier ReferenceType two FormalParameter ReturnStatement static public RubyFixnum ReferenceType runtime MemberReference Ruby runtime ArraySelector fixnumCache BinaryOperation + MemberReference Literal CACHE_OFFSET 2	0
MethodDeclaration Modifier BasicType hashCode ReturnStatement public int MethodInvocation proxyConstructor hashCode	0
MethodDeclaration Modifier BasicType getEndOffset ReturnStatement public int MemberReference endOffset	0
MethodDeclaration Modifier beginInit LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression private ReferenceType VariableDeclarator Assignment MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation ClassVisitor cv MethodInvocation MemberReference ClassCreator = initMethod start initMethod MemberReference aload initMethod MethodInvocation Literal MethodInvocation invokespecial cv BinaryOperation Literal MethodInvocation Literal Literal visitField initMethod MemberReference aload initMethod MethodInvocation ldc initMethod MethodInvocation Literal MethodInvocation invokestatic initMethod MethodInvocation Literal MethodInvocation putfield initMethod MemberReference aload initMethod MethodInvocation ldc initMethod MethodInvocation Literal MethodInvocation putfield getClassVisitor initMethod ReferenceType MethodInvocation THIS ClassReference p "<init>" MemberReference sig | MemberReference MemberReference "$class" ClassReference ci null null THIS MethodInvocation c ClassReference p "forName" ClassReference MethodInvocation sig getClassname "$class" ClassReference ci THIS getSourcename getClassname "filename" ClassReference ci SkinnyMethodAdapter cv MemberReference Literal MethodInvocation Literal Literal visitMethod ReferenceType Void TYPE ACC_PRIVATE ACC_FINAL ReferenceType getClassname ReferenceType ReferenceType ClassReference params ReferenceType ReferenceType ACC_PUBLIC "<init>" MemberReference sig null null AbstractScript Class Class Class ReferenceType Class String Void TYPE String	1
MethodDeclaration Modifier ReferenceType testLine FormalParameter ReturnStatement private String BasicType i BinaryOperation int + Literal MemberReference "Line " i	0
MethodDeclaration Modifier ReferenceType getFinalizer ReturnStatement public Finalizer MemberReference finalizer	0
MethodDeclaration Modifier Annotation ReferenceType withValue FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression LocalVariableDeclaration StatementExpression StatementExpression TryStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType value ReferenceType block Modifier ReferenceType VariableDeclarator Assignment Modifier ReferenceType VariableDeclarator Assignment MethodInvocation ReturnStatement StatementExpression name Literal required Literal ThreadContext IRubyObject Block final Map TypeArgument TypeArgument contextVariables MemberReference MethodInvocation = final IRubyObject old_value MemberReference MethodInvocation = contextVariables This MemberReference put MethodInvocation MethodInvocation "with_value" 1 ReferenceType ReferenceType contextVariables MemberReference getContextVariables old_value contextVariables This get value block MemberReference yieldSpecific contextVariables This MemberReference put Object IRubyObject context context old_value	1
MethodDeclaration Modifier ReferenceType createRegexpClass FormalParameter LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression IfStatement StatementExpression ReturnStatement static public RubyClass ReferenceType runtime ReferenceType VariableDeclarator MethodInvocation Assignment Assignment MethodInvocation MethodInvocation MethodInvocation MethodInvocation StatementExpression MethodInvocation MemberReference Ruby RubyClass regexpClass MethodInvocation runtime MemberReference setRegexp MemberReference MemberReference = MemberReference ClassCreator = regexpClass Literal MethodInvocation defineConstant regexpClass Literal MethodInvocation defineConstant regexpClass Literal MethodInvocation defineConstant runtime is1_9 MethodInvocation regexpClass ClassReference defineAnnotatedMethods regexpClass runtime Literal MethodInvocation MemberReference defineClass regexpClass regexpClass index ClassIndex REGEXP regexpClass kindOf ReferenceType MethodDeclaration "IGNORECASE" runtime MemberReference newFixnum "EXTENDED" runtime MemberReference newFixnum "MULTILINE" runtime MemberReference newFixnum regexpClass Literal MethodInvocation defineConstant ReferenceType "Regexp" runtime getObject REGEXP_ALLOCATOR RubyModule ReferenceType Modifier Annotation BasicType isKindOf FormalParameter FormalParameter ReturnStatement RE_OPTION_IGNORECASE RE_OPTION_EXTENDED RE_OPTION_MULTILINE "FIXEDENCODING" runtime MemberReference newFixnum RubyRegexp KindOf public Override boolean ReferenceType obj ReferenceType type BinaryOperation ARG_ENCODING_FIXED IRubyObject RubyModule instanceof MemberReference ReferenceType obj RubyRegexp	1
MethodDeclaration Modifier Annotation ReferenceType gets FormalParameter FormalParameter LocalVariableDeclaration StatementExpression ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType args ReferenceType VariableDeclarator MethodInvocation MemberReference name Literal optional Literal writes MemberReference ThreadContext IRubyObject IRubyObject result MethodInvocation context MethodInvocation getCurrentScope result "gets" 1 FrameField LASTLINE MemberReference MemberReference getsOnly MemberReference setLastLine context args result	0
MethodDeclaration Modifier invokeOpAsgnWithMethod FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression public ReferenceType operatorName ReferenceType attrName ReferenceType attrAsgnName ReferenceType receiverCallback ReferenceType argsCallback MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation String String String CompilerCallback ArgumentsCallback methodCompiler loadThreadContext methodCompiler loadSelf receiverCallback MemberReference call argsCallback MemberReference call methodCompiler MethodInvocation MethodInvocation getScriptCompiler methodCompiler MethodInvocation MethodInvocation getScriptCompiler methodCompiler MethodInvocation MethodInvocation getScriptCompiler methodCompiler Literal MethodInvocation invokeUtilityMethod methodCompiler methodCompiler getCacheCompiler MemberReference MemberReference MemberReference cacheCallSite getCacheCompiler MemberReference MemberReference MemberReference cacheCallSite getCacheCompiler MemberReference MemberReference MemberReference cacheCallSite "opAsgnWithMethod" ClassReference ClassReference ClassReference ClassReference ClassReference ClassReference ClassReference ClassReference sig methodCompiler attrName CallType FUNCTIONAL methodCompiler operatorName CallType FUNCTIONAL methodCompiler attrAsgnName CallType NORMAL ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType IRubyObject ThreadContext IRubyObject IRubyObject IRubyObject CallSite CallSite CallSite	0
MethodDeclaration Modifier Annotation ReferenceType substr FormalParameter FormalParameter ReturnStatement final public Deprecated IRubyObject BasicType beg BasicType len MethodInvocation int int MethodInvocation MemberReference MemberReference substr getRuntime beg len	1
MethodDeclaration Modifier ReferenceType resolveScript FormalParameter TryStatement ReturnStatement private String ReferenceType scriptName LocalVariableDeclaration IfStatement StatementExpression IfStatement LocalVariableDeclaration IfStatement CatchClause MemberReference String ReferenceType VariableDeclarator BinaryOperation BlockStatement Assignment BinaryOperation BlockStatement ReferenceType VariableDeclarator BinaryOperation BlockStatement CatchClauseParameter IfStatement scriptName File fullName MethodInvocation && MethodInvocation MethodInvocation ReturnStatement MemberReference MethodInvocation = && MethodInvocation MethodInvocation ReturnStatement String path MethodInvocation != MemberReference Literal LocalVariableDeclaration ForStatement IllegalArgumentException iae MemberReference StatementExpression JRubyFile MemberReference MemberReference create fullName exists fullName isFile MethodInvocation fullName JRubyFile MethodInvocation BinaryOperation create fullName exists fullName isFile MethodInvocation System Literal getenv path null ReferenceType VariableDeclarator ForControl BlockStatement debug MethodInvocation currentDirectory scriptName fullName getAbsolutePath getJRubyHome + Literal MemberReference fullName getAbsolutePath "PATH" String paths MethodInvocation VariableDeclaration BinaryOperation MemberReference StatementExpression IfStatement System.err BinaryOperation println "bin/" scriptName path MethodInvocation split BasicType VariableDeclarator < MemberReference MemberReference ++ i Assignment BinaryOperation BlockStatement + Literal MemberReference System Literal getProperty int i Literal i paths length MemberReference MethodInvocation = && MethodInvocation MethodInvocation ReturnStatement "warning: could not resolve -S script on filesystem: " scriptName "path.separator" 0 fullName JRubyFile MemberReference MemberReference create fullName exists fullName isFile MethodInvocation ArraySelector paths scriptName fullName getAbsolutePath MemberReference i	1
MethodDeclaration Modifier getstatic FormalParameter FormalParameter FormalParameter StatementExpression public ReferenceType arg1 ReferenceType arg2 ReferenceType arg3 MethodInvocation String String String MethodInvocation getMethodVisitor MemberReference MemberReference MemberReference MemberReference visitFieldInsn GETSTATIC arg1 arg2 arg3	0
MethodDeclaration Modifier ReferenceType newDummyRegexp FormalParameter FormalParameter LocalVariableDeclaration StatementExpression StatementExpression StatementExpression ReturnStatement static RubyRegexp ReferenceType runtime ReferenceType regex ReferenceType VariableDeclarator Assignment Assignment Assignment MemberReference Ruby Regex RubyRegexp regexp ClassCreator MemberReference MemberReference = MemberReference MemberReference = MemberReference MemberReference = regexp ReferenceType MemberReference regexp pattern regex regexp str ByteList EMPTY_BYTELIST regexp kcode KCode NONE RubyRegexp runtime	0
MethodDeclaration Modifier BasicType getIndex ReturnStatement public int BinaryOperation & MemberReference Literal location 0xffff	0
MethodDeclaration Modifier ReferenceType execute FormalParameter FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType recv ReferenceType args ReferenceType unusedBlock MethodInvocation IRubyObject IRubyObject Block runtime MethodInvocation getObject MethodInvocation MemberReference rbPublic recv MethodInvocation getRuntime args getCurrentContext	0
MethodDeclaration Modifier Annotation ReferenceType open FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement TryStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType args ReferenceType block ReferenceType VariableDeclarator MethodInvocation ReturnStatement ReturnStatement StatementExpression name Literal rest Literal frame Literal meta Literal ThreadContext IRubyObject IRubyObject Block IRubyObject tcpServer MethodInvocation ! block isGiven MemberReference MethodInvocation MethodInvocation "open" true true true recv MemberReference Literal MemberReference callMethod tcpServer block MemberReference MemberReference yield tcpServer MemberReference Literal callMethod context "new" args context tcpServer context "close"	1
MethodDeclaration Modifier ReferenceType getTypeInstance FormalParameter ReturnStatement public String BasicType i Literal int "int"	0
MethodDeclaration Modifier Annotation ReferenceType group FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration TryStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType recv ReferenceType block ReferenceType VariableDeclarator ReferenceType VariableDeclarator StatementExpression IfStatement LocalVariableDeclaration IfStatement CatchClause name Literal module Literal frame Literal IRubyObject Block Ruby runtime MethodInvocation POSIX posix MethodInvocation MethodInvocation MethodInvocation BlockStatement ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement CatchClauseParameter IfStatement ReturnStatement "group" true true recv getRuntime runtime getPosix posix getgrent block isGiven LocalVariableDeclaration StatementExpression LocalVariableDeclaration WhileStatement StatementExpression Group gr MethodInvocation != MemberReference Literal ReturnStatement ReturnStatement Exception e MethodInvocation BlockStatement MethodInvocation ReferenceType VariableDeclarator MethodInvocation ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation posix getgrent gr null MethodInvocation MethodInvocation runtime MethodInvocation getDebug StatementExpression runtime getNil ThreadContext context MethodInvocation posix setgrent Group gr != Assignment Literal StatementExpression posix endgrent MemberReference MemberReference setupGroup runtime getNil isTrue MethodInvocation runtime getCurrentContext MemberReference MethodInvocation = null MethodInvocation runtime gr runtime MethodInvocation getWarnings gr posix getgrent block MemberReference MethodInvocation yield MemberReference Literal MemberReference warn context MemberReference MemberReference setupGroup ID NOT_IMPLEMENTED "Etc.group is not supported by JRuby on this platform" e runtime gr	0
MethodDeclaration Modifier Annotation BasicType read IOException LocalVariableDeclaration StatementExpression ReturnStatement public Override int BasicType VariableDeclarator MethodInvocation MemberReference int c SuperMethodInvocation MemberReference captureFeature c read c	0
MethodDeclaration Modifier ReferenceType getStaticClosure19Signature FormalParameter ReturnStatement static public String ReferenceType classdesc MethodInvocation String ClassReference BinaryOperation ClassReference ClassReference ClassReference ClassReference sig ReferenceType + BinaryOperation Literal ReferenceType ReferenceType ReferenceType ReferenceType IRubyObject + Literal MemberReference ";" ThreadContext IRubyObject IRubyObject Block "L" classdesc	0
MethodDeclaration Modifier dRegexpNode FormalParameter StatementExpression private ReferenceType node MethodInvocation DRegexpNode sb MethodInvocation MethodInvocation MethodInvocation Literal append MethodInvocation append Literal append MethodInvocation append " " node getOnce " " node getOptions	0
MethodDeclaration Modifier ReferenceType egid FormalParameter ReturnStatement static public IRubyObject ReferenceType runtime MethodInvocation Ruby runtime MethodInvocation newFixnum runtime MethodInvocation getPosix getegid	0
MethodDeclaration Modifier react FormalParameter FormalParameter StatementExpression public ReferenceType join ReferenceType args MethodInvocation Join Object join MemberReference Literal send Channel FINISHED null	0
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration TryStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType VariableDeclarator StatementExpression ReturnStatement CatchClause CatchClause StatementExpression ThreadContext IRubyObject RubyModule String Ruby runtime MethodInvocation MethodInvocation MethodInvocation CatchClauseParameter ReturnStatement CatchClauseParameter ReturnStatement MethodInvocation context getRuntime MemberReference MemberReference MemberReference MemberReference Literal pre jitCompiledScript MemberReference MemberReference MemberReference __file__ JumpException.ReturnJump rj MethodInvocation JumpException.RedoJump rj MethodInvocation MemberReference MemberReference MemberReference post context self name Block NULL_BLOCK 0 context self Block NULL_BLOCK MemberReference MemberReference handleReturn MemberReference handleRedo runtime context name context rj runtime	0
MethodDeclaration Modifier Annotation ReferenceType times19 FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject Modifier ReferenceType context Modifier ReferenceType block TernaryExpression name Literal frame Literal final ThreadContext final Block MethodInvocation MethodInvocation MethodInvocation "times" true block isGiven MemberReference MemberReference times MethodInvocation This Literal enumeratorize context block context getRuntime "times"	0
MethodDeclaration Modifier BasicType size ReturnStatement public int This RubyHash MemberReference size	0
MethodDeclaration Modifier ReferenceType convertToNum FormalParameter FormalParameter IfStatement ReturnStatement private static IRubyObject BasicType val ReferenceType runtime BinaryOperation BlockStatement MethodInvocation double Ruby || BinaryOperation BinaryOperation ReturnStatement RubyFixnum MemberReference Cast newFixnum >= MemberReference Cast < MemberReference Cast MethodInvocation runtime BasicType MemberReference val BasicType MemberReference val BasicType MemberReference RubyBignum MemberReference MemberReference newBignum long val double RubyFixnum MAX double RubyFixnum MIN runtime val	0
MethodDeclaration Modifier ReferenceType checkForNilNode FormalParameter FormalParameter ReturnStatement private Node ReferenceType node ReferenceType defaultPosition TernaryExpression Node ISourcePosition BinaryOperation ClassCreator MemberReference == MemberReference Literal ReferenceType MemberReference node node null NilNode defaultPosition	0
MethodDeclaration Modifier main FormalParameter IfStatement LocalVariableDeclaration TryStatement static public ReferenceType args MemberReference BlockStatement ReferenceType VariableDeclarator LocalVariableDeclaration IfStatement CatchClause CatchClause String Platform IS_GCJ StatementExpression StatementExpression Main main ClassCreator BasicType VariableDeclarator BinaryOperation BlockStatement CatchClauseParameter ThrowStatement CatchClauseParameter StatementExpression WhileStatement StatementExpression MethodInvocation MethodInvocation ReferenceType int status MethodInvocation != MemberReference Literal StatementExpression RaiseException re MemberReference Throwable t MethodInvocation BinaryOperation BlockStatement MethodInvocation System.err Literal println System Literal exit Main main MemberReference run status 0 MethodInvocation re System.err MethodInvocation println != Assignment Literal StatementExpression StatementExpression System Literal exit "Fatal: GCJ (GNU Compiler for Java) is not supported by JRuby." 1 args System MemberReference exit ThreadContext MemberReference createRawBacktraceStringFromThrowable MemberReference MethodInvocation = null MethodInvocation MethodInvocation 1 status t t t getCause System.err Literal println System.err MethodInvocation println "Caused by:" ThreadContext MemberReference createRawBacktraceStringFromThrowable t	1
MethodDeclaration Modifier Annotation ReferenceType each_object19 FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType args ReferenceType block TernaryExpression name Literal optional Literal frame Literal module Literal visibility MemberReference ThreadContext IRubyObject IRubyObject Block MethodInvocation MethodInvocation MethodInvocation "each_object" 1 true true Visibility PRIVATE block isGiven MemberReference MemberReference MemberReference MemberReference each_object MethodInvocation MemberReference Literal MemberReference enumeratorize context recv args block context getRuntime recv "each_object" args	1
MethodDeclaration Modifier ReferenceType getName ReturnStatement public String Literal "nil"	0
MethodDeclaration Modifier ReferenceType defaultTmpDir FormalParameter FormalParameter LocalVariableDeclaration IfStatement IfStatement ReturnStatement private IRubyObject ReferenceType runtime ReferenceType args ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement BinaryOperation BlockStatement MemberReference Ruby IRubyObject IRubyObject dir Literal == MemberReference Literal StatementExpression StatementExpression StatementExpression && BinaryOperation MethodInvocation StatementExpression dir null args length 2 Assignment MethodInvocation Assignment > MethodInvocation Literal dir isTaint Assignment MemberReference MemberReference = runtime MethodInvocation getLoadService MemberReference MethodInvocation = runtime getSafeLevel 0 MemberReference MethodInvocation = dir ArraySelector args Literal require dir runtime MethodInvocation getDir dir runtime MemberReference newString Literal "tmpdir" MethodInvocation Literal callMethod DEFAULT_TMP_DIR 1 runtime getCurrentContext "tmpdir"	0
MethodDeclaration Modifier ReferenceType case300_line1122 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support MethodInvocation Literal Cast newCaseNode Cast getPosition null ReferenceType MemberReference ReferenceType MemberReference Node ArraySelector yyVals Token ArraySelector yyVals BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference - 1 yyTop - 3 yyTop	1
MethodDeclaration Modifier ReferenceType getMemoryIO FormalParameter ReturnStatement final public DirectMemoryIO BasicType offset MethodInvocation long MemberReference MethodInvocation wrap runtime IO BinaryOperation getAddress + MemberReference MemberReference address offset	0
MethodDeclaration Modifier BasicType isCached FormalParameter FormalParameter ReturnStatement private boolean ReferenceType context ReferenceType value BinaryOperation ThreadContext IRubyObject && BinaryOperation BinaryOperation != MemberReference Literal == MemberReference MethodInvocation value null generation context MethodInvocation getRuntime getConstantGeneration	0
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter FormalParameter IfStatement StatementExpression ReturnStatement public IRubyObject ReferenceType ctx ReferenceType largs ReferenceType blk BinaryOperation ThrowStatement MethodInvocation MethodInvocation ThreadContext IRubyObject Block <= MemberReference Literal MemberReference result MemberReference append runtime getNil -- n 0 JumpException SPECIAL_JUMP ArraySelector largs Literal 0	1
MethodDeclaration Modifier ReferenceType getKCode ReturnStatement public KCode MemberReference kCode	0
MethodDeclaration Modifier Annotation ReferenceType list FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration ForStatement StatementExpression StatementExpression ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType VariableDeclarator ReferenceType VariableDeclarator ForControl BlockStatement MethodInvocation MethodInvocation MemberReference name Literal module Literal ThreadContext IRubyObject Ruby runtime MethodInvocation RubyHash names MethodInvocation VariableDeclaration BinaryOperation MemberReference StatementExpression names MemberReference MethodInvocation MethodInvocation op_aset names MemberReference MethodInvocation MethodInvocation op_aset names "list" true recv getRuntime RubyHash MemberReference newHash BasicType VariableDeclarator < MemberReference MemberReference ++ i MethodInvocation context runtime Literal newString runtime Literal newFixnum context runtime Literal newString runtime Literal newFixnum runtime int i Literal i NAMES length names MemberReference MethodInvocation MethodInvocation op_aset "IOT" 6 "CLD" 20 0 context runtime MemberReference newString runtime MemberReference newFixnum ArraySelector NAMES i MemberReference i	0
MethodDeclaration Modifier Annotation ReferenceType interpret FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public Override IRubyObject ReferenceType runtime ReferenceType context ReferenceType self ReferenceType aBlock MethodInvocation Ruby ThreadContext IRubyObject Block callAdapter MemberReference MemberReference MemberReference MethodInvocation MethodInvocation MethodInvocation MethodInvocation call context self self arg1 MemberReference MemberReference MemberReference MemberReference interpret arg2 MemberReference MemberReference MemberReference MemberReference interpret arg3 MemberReference MemberReference MemberReference MemberReference interpret RuntimeHelpers MemberReference MemberReference MemberReference MemberReference MemberReference getBlock runtime context self aBlock runtime context self aBlock runtime context self aBlock runtime context self iterNode aBlock	0
MethodDeclaration Modifier compileOpElementAsgnWithAnd FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression IfStatement public ReferenceType node ReferenceType context BasicType expr Modifier ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MemberReference StatementExpression Node BodyCompiler boolean final OpElementAsgnNode opElementAsgnNode Cast CompilerCallback receiverCallback ClassCreator ArgumentsCallback argsCallback ClassCreator CompilerCallback valueCallback ClassCreator context MethodInvocation getInvocationCompiler ! expr MethodInvocation ReferenceType MemberReference ReferenceType MethodDeclaration ReferenceType MethodInvocation ReferenceType MethodDeclaration MemberReference MemberReference MemberReference opElementAsgnWithAnd context consumeCurrentValue OpElementAsgnNode node CompilerCallback Modifier call FormalParameter StatementExpression OpElementAsgnArgumentsCallback opElementAsgnNode getArgsNode CompilerCallback Modifier call FormalParameter StatementExpression receiverCallback argsCallback valueCallback public ReferenceType context MethodInvocation public ReferenceType context MethodInvocation BodyCompiler MethodInvocation MemberReference Literal compile BodyCompiler MethodInvocation MemberReference Literal compile opElementAsgnNode getReceiverNode context true opElementAsgnNode getValueNode context true	1
MethodDeclaration Modifier setUp Exception StatementExpression StatementExpression protected SuperMethodInvocation Assignment setUp MemberReference MethodInvocation = runtime Ruby newInstance	0
MethodDeclaration Modifier ReferenceType case61_line521 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference Cast = yyVal yyVal ReferenceType MemberReference Node ArraySelector yyVals BinaryOperation + Literal MemberReference - 1 yyTop	1
MethodDeclaration Modifier ReferenceType createJavaArrayClass FormalParameter FormalParameter ReturnStatement static public RubyClass ReferenceType runtime ReferenceType javaModule MethodInvocation Ruby RubyModule javaModule Literal MethodInvocation MemberReference defineClassUnder "JavaArray" javaModule Literal fastGetClass ObjectAllocator NOT_ALLOCATABLE_ALLOCATOR "JavaObject"	1
MethodDeclaration Modifier Annotation ReferenceType wakeup IfStatement StatementExpression StatementExpression ReturnStatement synchronized public JRubyMethod ElementValuePair RubyThread BinaryOperation BlockStatement Assignment MethodInvocation This name Literal && MethodInvocation BinaryOperation ThrowStatement MemberReference MemberReference = notifyAll "wakeup" ! threadImpl isAlive == MemberReference MemberReference MethodInvocation status Status RUN status Status DEAD MethodInvocation getRuntime Literal newThreadError "killed thread"	0
MethodDeclaration Modifier BasicType compare FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration ReturnStatement public int ReferenceType o1 ReferenceType o2 ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation Object Object IRubyObject obj1 Cast IRubyObject obj2 Cast IRubyObject ret MethodInvocation RubyComparable MemberReference MemberReference MemberReference MemberReference cmpint ReferenceType MemberReference ReferenceType MemberReference block MemberReference MethodInvocation Literal Literal Literal yield context ret obj1 obj2 IRubyObject o1 IRubyObject o2 context MethodInvocation getRuntime null null true MemberReference MemberReference newArray obj1 obj2	1
MethodDeclaration Modifier xStrNode FormalParameter StatementExpression private ReferenceType node MethodInvocation XStrNode sb MethodInvocation MethodInvocation Literal append MethodInvocation append Literal append " '" node getValue "'"	0
MethodDeclaration Modifier ReferenceType fastGetConstant FormalParameter LocalVariableDeclaration LocalVariableDeclaration ReturnStatement public IRubyObject ReferenceType internedName ReferenceType VariableDeclarator ReferenceType VariableDeclarator TernaryExpression String IRubyObject value MethodInvocation Ruby runtime MethodInvocation BinaryOperation MethodInvocation MemberReference MemberReference getConstantNoConstMissing getRuntime == MemberReference Literal MethodInvocation Literal MethodInvocation callMethod value internedName value null runtime getCurrentContext "const_missing" runtime MemberReference fastNewSymbol internedName	0
MethodDeclaration Modifier Annotation ReferenceType read_string FormalParameter ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context MethodInvocation name Literal ThreadContext MemoryUtil MethodInvocation MethodInvocation Literal getTaintedString "read_string" context getRuntime getMemoryIO 0	1
MethodDeclaration Modifier testConversions Exception StatementExpression StatementExpression StatementExpression StatementExpression public Assignment MethodInvocation Assignment MethodInvocation MemberReference MethodInvocation = Literal MemberReference assertEquals MemberReference MethodInvocation = Literal MemberReference assertEquals result Literal eval "\"foobar\"" result result Literal eval "[\"foo\", \"bar\"]" result "p $h.to_s" "p $h.to_a"	0
MethodDeclaration Modifier ReferenceType case231_line899 FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment Assignment MemberReference Object Object int MemberReference MethodInvocation = MemberReference MethodInvocation = yyVal yyVal support MethodInvocation Cast Cast arg_concat yyVal support Cast Cast arg_blk_pass Cast getPosition ReferenceType MemberReference ReferenceType MemberReference ReferenceType MemberReference ReferenceType MemberReference ReferenceType MemberReference ListNode ArraySelector yyVals Node ArraySelector yyVals Node yyVal BlockPassNode ArraySelector yyVals ListNode ArraySelector yyVals BinaryOperation BinaryOperation BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference + Literal MemberReference + Literal MemberReference - 4 yyTop - 1 yyTop 0 yyTop - 4 yyTop	1
MethodDeclaration Modifier registerLinkTarget FormalParameter IfStatement public ReferenceType newObject MethodInvocation BlockStatement IRubyObject MemberReference shouldBeRegistered StatementExpression newObject MethodInvocation cache MemberReference register newObject	0
MethodDeclaration Modifier BasicType extendWidth FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement private static final int ReferenceType args BasicType oldWidth BasicType newChar BasicType VariableDeclarator BinaryOperation StatementExpression MemberReference Args int byte int newWidth BinaryOperation != BinaryOperation MemberReference MethodInvocation newWidth + BinaryOperation BinaryOperation / MemberReference Literal oldWidth MemberReference Literal raiseArgumentError * MemberReference Literal - MemberReference Literal newWidth 10 args "width too big" oldWidth 10 newChar '0'	1
MethodDeclaration Modifier putMethod FormalParameter FormalParameter StatementExpression private ReferenceType name ReferenceType method MethodInvocation String DynamicMethod MethodInvocation getMethods MemberReference MemberReference put name method	0
MethodDeclaration Modifier ReferenceType createArray FormalParameter ReturnStatement static public String BasicType i ArrayCreator int ReferenceType MemberReference String i	0
MethodDeclaration Modifier BasicType strLength FormalParameter ReturnStatement static public int ReferenceType bytes MethodInvocation ByteList MemberReference MemberReference MemberReference BinaryOperation strLength bytes encoding bytes bytes bytes begin + MemberReference MemberReference bytes begin bytes realSize	0
MethodDeclaration Modifier clump FormalParameter LocalVariableDeclaration ForStatement public ReferenceType cls ReferenceType VariableDeclarator EnhancedForControl BlockStatement Class Method declaredMethods MethodInvocation VariableDeclaration MemberReference LocalVariableDeclaration IfStatement LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement StatementExpression IfStatement StatementExpression cls getDeclaredMethods ReferenceType VariableDeclarator declaredMethods ReferenceType VariableDeclarator BinaryOperation ContinueStatement ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MemberReference BlockStatement BlockStatement Assignment BinaryOperation BlockStatement MethodInvocation Method method JRubyMethod anno MethodInvocation == MemberReference Literal JavaMethodDescriptor desc ClassCreator String name TernaryExpression List TypeArgument methodDescs Map TypeArgument TypeArgument methodsHash Literal desc isStatic IfStatement IfStatement MemberReference MethodInvocation = == MemberReference Literal StatementExpression StatementExpression methodDescs MemberReference add method ClassReference getAnnotation anno null ReferenceType MemberReference BinaryOperation MethodInvocation MethodInvocation ReferenceType ReferenceType ReferenceType null BinaryOperation BlockStatement IfStatement BinaryOperation BlockStatement IfStatement methodDescs methodsHash MemberReference get methodDescs null Assignment MethodInvocation desc ReferenceType JavaMethodDescriptor method == MethodInvocation Literal method getName anno ArraySelector name JavaMethodDescriptor String List TypeArgument == MethodInvocation MemberReference StatementExpression BinaryOperation BlockStatement BlockStatement == MethodInvocation MemberReference StatementExpression BinaryOperation BlockStatement BlockStatement name MemberReference ClassCreator = methodsHash MemberReference MemberReference put JRubyMethod anno MemberReference name 0 Literal ReferenceType anno compat CompatVersion RUBY1_8 Assignment == MethodInvocation MemberReference StatementExpression StatementExpression anno compat CompatVersion RUBY1_8 Assignment == MethodInvocation MemberReference StatementExpression StatementExpression methodDescs ReferenceType name methodDescs length 0 JavaMethodDescriptor MemberReference MemberReference = anno compat CompatVersion RUBY1_9 Assignment Assignment MemberReference MemberReference = anno compat CompatVersion RUBY1_9 Assignment Assignment ArrayList TypeArgument methodsHash staticAnnotatedMethods1_8 MemberReference MemberReference = MemberReference MemberReference = methodsHash annotatedMethods1_8 MemberReference MemberReference = MemberReference MemberReference = ReferenceType methodsHash staticAnnotatedMethods1_9 methodsHash staticAnnotatedMethods methodsHash annotatedMethods1_9 methodsHash annotatedMethods JavaMethodDescriptor	1
MethodDeclaration Modifier BasicType getKcode IfStatement ReturnStatement private int BinaryOperation BlockStatement IfStatement Literal == MemberReference MemberReference ReturnStatement BinaryOperation BlockStatement IfStatement 0 kcode KCode NONE Literal == MemberReference MemberReference ReturnStatement BinaryOperation BlockStatement IfStatement 16 kcode KCode EUC Literal == MemberReference MemberReference ReturnStatement BinaryOperation BlockStatement 32 kcode KCode SJIS Literal == MemberReference MemberReference ReturnStatement 48 kcode KCode UTF8 Literal 64	1
MethodDeclaration Modifier BasicType containsValue FormalParameter ReturnStatement public boolean ReferenceType value MethodInvocation Object MemberReference contains value	0
MethodDeclaration Modifier BasicType hasModuleInHierarchy FormalParameter ForStatement ReturnStatement public boolean ReferenceType type ForControl BlockStatement Literal RubyModule VariableDeclaration BinaryOperation Assignment IfStatement false ReferenceType VariableDeclarator != MemberReference Literal MemberReference MethodInvocation = BinaryOperation ReturnStatement RubyModule module This module null module module getSuperClass == MethodInvocation MemberReference Literal module getNonIncludedClass type true	1
MethodDeclaration Modifier ReferenceType convert FormalParameter FormalParameter ReturnStatement public Object ReferenceType context ReferenceType rubyObject MethodInvocation ThreadContext IRubyObject rubyObject ClassReference toJava ReferenceType BigInteger	0
MethodDeclaration BasicType isNoop ReturnStatement boolean BinaryOperation && BinaryOperation BinaryOperation == MemberReference MemberReference == MemberReference MemberReference framing Framing None scoping Scoping None	0
MethodDeclaration Modifier ReferenceType number FormalParameter ReturnStatement public String BasicType val Literal float "float"	0
MethodDeclaration addPostInvoke FormalParameter IfStatement StatementExpression ReferenceType postInvoke BinaryOperation BlockStatement MethodInvocation Runnable == MemberReference Literal StatementExpression postInvokeList MemberReference add postInvokeList null Assignment postInvoke MemberReference ClassCreator = postInvokeList ReferenceType ArrayList TypeArgument ReferenceType Runnable	1
MethodDeclaration Modifier Annotation ReferenceType sync FormalParameter FormalParameter StatementExpression ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType string MethodInvocation MethodInvocation name Literal required Literal ThreadContext IRubyObject MemberReference MemberReference append context MethodInvocation getRuntime "sync" 1 context string getFalse	0
MethodDeclaration Modifier Annotation ReferenceType cycle FormalParameter FormalParameter FormalParameter FormalParameter IfStatement IfStatement LocalVariableDeclaration IfStatement ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType self ReferenceType arg Modifier ReferenceType block MethodInvocation ReturnStatement MethodInvocation ReturnStatement BasicType VariableDeclarator BinaryOperation ReturnStatement MethodInvocation name Literal frame Literal ThreadContext IRubyObject IRubyObject final Block arg isNil MethodInvocation ! block isGiven MethodInvocation long times MethodInvocation <= MemberReference Literal MethodInvocation MemberReference MemberReference MemberReference MemberReference cycleCommon "cycle" true MemberReference MemberReference MemberReference cycle MethodInvocation MemberReference Literal MemberReference enumeratorize RubyNumeric MemberReference num2long times 0 context MethodInvocation getRuntime context self times block context self block context getRuntime self "cycle" arg arg getNil	1
MethodDeclaration Modifier ReferenceType lshift FormalParameter IfStatement ReturnStatement private IRubyObject BasicType width BinaryOperation BlockStatement MethodInvocation long || BinaryOperation BinaryOperation ReturnStatement RubyFixnum MethodInvocation BinaryOperation newFixnum > MemberReference BinaryOperation != BinaryOperation Literal MethodInvocation getRuntime << MemberReference MemberReference width - MemberReference Literal & BinaryOperation MemberReference 0 RubyBignum MethodInvocation MethodInvocation MemberReference newBignum value width BIT_SIZE 1 << Literal BinaryOperation value MethodInvocation op_lshift getRuntime value ~ 0L - BinaryOperation Literal RubyFixnum MethodInvocation MemberReference newFixnum - MemberReference MemberReference 1 getRuntime width BIT_SIZE width	0
MethodDeclaration Modifier BasicType getDynamicScopeIndex ReturnStatement protected int BinaryOperation + BinaryOperation MemberReference + MemberReference MemberReference StandardASMCompiler DYNAMIC_SCOPE_OFFSET StandardASMCompiler ARGS_INDEX argParamCount	0
MethodDeclaration Modifier Annotation ReferenceType simple_name ReturnStatement public JRubyMethod RubyString MethodInvocation MethodInvocation getRuntime MethodInvocation newString MethodInvocation getSimpleName javaClass	1
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType context ReferenceType self ReferenceType klazz ReferenceType name ReferenceType arg0 ReferenceType arg1 MethodInvocation ThreadContext IRubyObject RubyModule String IRubyObject IRubyObject MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference call context self klazz name arg0 arg1 Block NULL_BLOCK	0
MethodDeclaration Modifier BasicType codeRangeScanAsciiCompatible FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression IfStatement WhileStatement ReturnStatement private static int ReferenceType enc BasicType bytes BasicType p BasicType len BasicType VariableDeclarator Assignment BinaryOperation ReturnStatement BinaryOperation BlockStatement TernaryExpression Encoding byte int int int end BinaryOperation MemberReference MethodInvocation = == MemberReference Literal MemberReference < MemberReference MemberReference LocalVariableDeclaration IfStatement StatementExpression IfStatement BinaryOperation MemberReference MemberReference + MemberReference MemberReference p MemberReference MemberReference MemberReference searchNonAscii p - 1 CR_7BIT p end BasicType VariableDeclarator BinaryOperation ReturnStatement Assignment BinaryOperation BlockStatement > MemberReference MemberReference CR_BROKEN CR_VALID p len bytes p end int cl MethodInvocation <= MemberReference Literal MemberReference MemberReference MemberReference += < MemberReference MemberReference StatementExpression IfStatement p end MemberReference MemberReference MemberReference MemberReference preciseLength cl 0 CR_BROKEN p cl p end Assignment BinaryOperation ReturnStatement enc bytes p end MemberReference MethodInvocation = == MemberReference Literal MemberReference p MemberReference MemberReference MemberReference searchNonAscii p - 1 CR_VALID bytes p end	1
MethodDeclaration Modifier setMarshal FormalParameter StatementExpression final public ReferenceType marshal Assignment ObjectMarshal This MemberReference = MemberReference marshal marshal	0
MethodDeclaration Modifier ReferenceType remove FormalParameter LocalVariableDeclaration ReturnStatement public Object ReferenceType key ReferenceType VariableDeclarator MethodInvocation Object IRubyObject rubyKey MethodInvocation MemberReference MemberReference internalDelete JavaUtil MethodInvocation MemberReference convertJavaToUsableRubyObject value rubyKey getRuntime key	0
MethodDeclaration Modifier Annotation ReferenceType interpret FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression LocalVariableDeclaration IfStatement public Override IRubyObject ReferenceType runtime ReferenceType context ReferenceType self ReferenceType aBlock ReferenceType VariableDeclarator ReferenceType VariableDeclarator BasicType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation ReferenceType VariableDeclarator MemberReference BlockStatement BlockStatement Ruby ThreadContext IRubyObject Block DynamicScope scope MethodInvocation IRubyObject nil MethodInvocation int index MethodInvocation DynamicScope flipScope MethodInvocation flipScope growIfNeeded IRubyObject result MethodInvocation exclusive IfStatement IfStatement context getCurrentScope runtime getNil getIndex scope getFlipScope flipScope MemberReference MemberReference getValueDepthZeroOrNil BinaryOperation BlockStatement BlockStatement BinaryOperation BlockStatement BlockStatement index nil || BinaryOperation MethodInvocation StatementExpression StatementExpression ReturnStatement IfStatement ReturnStatement || BinaryOperation MethodInvocation IfStatement ReturnStatement IfStatement ReturnStatement == MemberReference Literal ! result isTrue Assignment MethodInvocation MemberReference MethodInvocation BlockStatement MethodInvocation == MemberReference Literal ! result isTrue MethodInvocation BlockStatement MethodInvocation MethodInvocation BlockStatement MethodInvocation result null MemberReference MethodInvocation = flipScope MemberReference MemberReference setValueDepthZero result endNode MethodInvocation MemberReference MemberReference MemberReference MemberReference interpret StatementExpression runtime getTrue result null beginNode MethodInvocation MemberReference MemberReference MemberReference MemberReference interpret StatementExpression ReturnStatement runtime getFalse endNode MethodInvocation MemberReference MemberReference MemberReference MemberReference interpret StatementExpression runtime getTrue result MemberReference MethodInvocation trueIfTrue result index isTrue runtime context self aBlock MethodInvocation isTrue runtime context self aBlock MethodInvocation MethodInvocation isTrue runtime context self aBlock MethodInvocation runtime beginNode MemberReference MemberReference MemberReference MemberReference interpret flipScope MethodInvocation MemberReference setValueDepthZero flipScope MethodInvocation MemberReference setValueDepthZero runtime getTrue flipScope MethodInvocation MemberReference setValueDepthZero runtime context self aBlock runtime getFalse index MemberReference MethodInvocation falseIfTrue index runtime getFalse index runtime endNode MemberReference MemberReference MemberReference MemberReference interpret runtime context self aBlock	1
MethodDeclaration Modifier testInspect StatementExpression public MethodInvocation Literal MethodInvocation assertEquals "nil" RubyNil MethodInvocation MemberReference inspect toString rubyNil	0
MethodDeclaration Modifier ReferenceType next ReturnStatement public Object MethodInvocation MethodInvocation nextEntry getValue	0
MethodDeclaration Modifier Annotation ReferenceType length FormalParameter StatementExpression ReturnStatement synchronized public JRubyMethod ElementValuePair RubyNumeric ReferenceType context MethodInvocation MethodInvocation name ElementArrayValue ThreadContext MemberReference checkShutdown RubyNumeric MethodInvocation MethodInvocation int2fix Literal Literal context context getRuntime entries size "length" "size"	0
MethodDeclaration Modifier BasicType getInt FormalParameter ThrowStatement final public int BasicType offset MethodInvocation long ex	0
MethodDeclaration Modifier ReferenceType intoString FormalParameter FormalParameter TryStatement private static String ReferenceType runtime ReferenceType as ReturnStatement CatchClause Ruby InetAddress ClassCreator CatchClauseParameter ThrowStatement ReferenceType MethodInvocation Exception e MethodInvocation String ByteList MethodInvocation plain MemberReference BinaryOperation sockerr as getAddress runtime + Literal MethodInvocation "addrtostr: " e toString	1
MethodDeclaration Modifier pollThreadEvents IfStatement public MemberReference BlockStatement ! RubyInstanceConfig THREADLESS_COMPILE_ENABLED StatementExpression StatementExpression MethodInvocation MethodInvocation loadThreadContext Literal MethodInvocation invokeThreadContext "pollThreadEvents" MemberReference sig Void TYPE	0
MethodDeclaration Modifier ReferenceType getRange ReturnStatement public RubyClass MemberReference rangeClass	0
MethodDeclaration Modifier addModule FormalParameter StatementExpression StatementExpression public ReferenceType m MethodInvocation MethodInvocation IR_Module MemberReference ClassCreator setConstantValue _modules MemberReference add m _name ReferenceType MemberReference m MetaObject m	0
MethodDeclaration Modifier ReferenceType yieldUnder FormalParameter FormalParameter FormalParameter StatementExpression LocalVariableDeclaration StatementExpression TryStatement private IRubyObject Modifier ReferenceType context ReferenceType under ReferenceType block MethodInvocation ReferenceType VariableDeclarator MethodInvocation StatementExpression StatementExpression StatementExpression ReturnStatement CatchClause StatementExpression StatementExpression final ThreadContext RubyModule Block context MemberReference MemberReference preExecuteUnder Visibility savedVisibility MethodInvocation block MethodInvocation getBinding Assignment MethodInvocation MethodInvocation MethodInvocation CatchClauseParameter ReturnStatement MethodInvocation MethodInvocation under block block MethodInvocation getBinding MemberReference setVisibility MemberReference MethodInvocation = block MethodInvocation getBinding block MethodInvocation MethodInvocation getBinding block MemberReference This This MethodInvocation Literal yield JumpException.BreakJump bj Cast block MethodInvocation getBinding context postExecuteUnder getVisibility Visibility PUBLIC block block cloneBlock This setSelf getFrame This setSelf context context getRubyClass false ReferenceType MethodInvocation MemberReference setVisibility RubyObject RubyObject IRubyObject bj getValue savedVisibility	1
MethodDeclaration Modifier Annotation ReferenceType newInstance FormalParameter FormalParameter FormalParameter SwitchStatement StatementExpression ReturnStatement static public Deprecated IRubyObject ReferenceType context ReferenceType recv ReferenceType args MemberReference SwitchStatementCase SwitchStatementCase MethodInvocation Literal ThreadContext IRubyObject IRubyObject args length Literal ReturnStatement Literal ReturnStatement Arity MethodInvocation MemberReference Literal Literal raiseArgumentError null 1 MethodInvocation 2 MethodInvocation context getRuntime args length 1 1 MemberReference MemberReference MemberReference newInstance MemberReference MemberReference MemberReference MemberReference newInstance context recv ArraySelector args context recv ArraySelector args ArraySelector args Literal Literal Literal 0 0 1	1
MethodDeclaration Modifier ReferenceType case224_line899 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support MethodInvocation Cast Cast newAndNode Cast getPosition ReferenceType MemberReference ReferenceType MemberReference ReferenceType MemberReference Node ArraySelector yyVals Node ArraySelector yyVals Token ArraySelector yyVals BinaryOperation BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference + Literal MemberReference - 2 yyTop 0 yyTop - 1 yyTop	1
MethodDeclaration Modifier BasicType isKindOf FormalParameter FormalParameter ReturnStatement public boolean ReferenceType obj ReferenceType type BinaryOperation IRubyObject RubyModule instanceof MemberReference ReferenceType obj RubyRange	0
MethodDeclaration Modifier ReferenceType yyparse FormalParameter FormalParameter java.io.IOException yyException StatementExpression ReturnStatement public Object ReferenceType yyLex ReferenceType ayydebug Assignment MethodInvocation RubyYaccLexer Object This Cast = MemberReference yyparse MemberReference ReferenceType MemberReference yyLex yydebug jay ReferenceType ayydebug yydebug ReferenceType yyDebug	1
MethodDeclaration Modifier ReferenceType getMatchingDeclaredMethod FormalParameter FormalParameter FormalParameter FormalParameter TryStatement ReturnStatement static public JavaMethod ReferenceType runtime ReferenceType javaClass ReferenceType methodName ReferenceType argumentTypes ReturnStatement CatchClause Literal Ruby Class TypeArgument String Class TypeArgument MethodInvocation CatchClauseParameter ForStatement null ? ? MemberReference MethodInvocation create NoSuchMethodException e MethodSearch EnhancedForControl BlockStatement runtime javaClass MemberReference MemberReference getDeclaredMethod VariableDeclaration MethodInvocation IfStatement methodName argumentTypes ReferenceType VariableDeclarator javaClass getDeclaredMethods MethodInvocation BlockStatement Method method method MethodInvocation getName LocalVariableDeclaration IfStatement ForStatement ReturnStatement MemberReference equals ReferenceType VariableDeclarator BinaryOperation BlockStatement TypeScan ForControl BlockStatement MethodInvocation methodName Class TypeArgument targetTypes MethodInvocation && BinaryOperation BinaryOperation ReturnStatement VariableDeclaration BinaryOperation MemberReference IfStatement IfStatement MemberReference MemberReference create ? method getParameterTypes == MemberReference Literal == MemberReference Literal MethodInvocation BasicType VariableDeclarator < MemberReference MemberReference ++ i BinaryOperation ContinueStatement MemberReference BlockStatement BlockStatement runtime method targetTypes length 0 argumentTypes length 0 MemberReference MemberReference create int i Literal i argumentTypes length >= MemberReference MemberReference MethodSearch ArraySelector MethodInvocation targetTypes ContinueStatement ContinueStatement runtime method 0 i targetTypes length MemberReference MemberReference isAssignableFrom TypeScan MethodSearch i ArraySelector argumentTypes MemberReference i	1
MethodDeclaration Modifier checkWhenWithSplat StatementExpression StatementExpression public MethodInvocation MethodInvocation loadThreadContext Literal MethodInvocation invokeUtilityMethod "isWhenTriggered" ClassReference ClassReference ClassReference ClassReference sig ReferenceType ReferenceType ReferenceType ReferenceType RubyBoolean IRubyObject IRubyObject ThreadContext	0
MethodDeclaration Modifier ReferenceType get FormalParameter FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType runtime ReferenceType array BasicType i MethodInvocation Ruby Object int MemberReference Cast convert runtime ReferenceType MemberReference Short array	0
MethodDeclaration Modifier BasicType variableTableContains FormalParameter ReturnStatement protected boolean ReferenceType name BinaryOperation String != MethodInvocation Literal MethodInvocation MethodInvocation MethodInvocation getMetaClass null getRealClass MemberReference getVariableAccessorForRead This get name	0
MethodDeclaration Modifier buildArgs FormalParameter FormalParameter FormalParameter SwitchStatement public ReferenceType argsList ReferenceType args ReferenceType s MethodInvocation SwitchStatementCase SwitchStatementCase SwitchStatementCase List TypeArgument Node IR_Scope args getNodeType ARGSCATNODE ARGSPUSHNODE SPLATNODE StatementExpression BreakStatement ARRAYNODE LocalVariableDeclaration IfStatement BreakStatement StatementExpression BreakStatement ReferenceType MethodInvocation ReferenceType VariableDeclarator BinaryOperation StatementExpression IfStatement MethodInvocation Operand MemberReference MemberReference MemberReference buildVariableArityArguments ArrayNode arrayNode Cast > MethodInvocation Literal MethodInvocation BinaryOperation StatementExpression MemberReference MemberReference MemberReference buildSpecificArityArguments argsList args s ReferenceType MemberReference arrayNode size 3 MemberReference MemberReference MemberReference buildVariableArityArguments > MethodInvocation Literal MethodInvocation argsList args s ArrayNode args argsList arrayNode s arrayNode size 0 MemberReference MemberReference MemberReference buildSpecificArityArguments argsList arrayNode s	1
MethodDeclaration Modifier ReferenceType callMethodMissing FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement protected IRubyObject ReferenceType context ReferenceType self ReferenceType name ReferenceType method ReferenceType arg0 ReferenceType block MethodInvocation ThreadContext IRubyObject String DynamicMethod IRubyObject Block RuntimeHelpers MemberReference MemberReference MethodInvocation MemberReference MemberReference MemberReference MemberReference callMethodMissing context self method getVisibility name callType arg0 block	0
MethodDeclaration Modifier ReferenceType createFixnumClass FormalParameter LocalVariableDeclaration StatementExpression StatementExpression StatementExpression IfStatement StatementExpression ForStatement ReturnStatement static public RubyClass ReferenceType runtime ReferenceType VariableDeclarator MethodInvocation Assignment Assignment MethodInvocation BlockStatement MethodInvocation ForControl BlockStatement MemberReference Ruby RubyClass fixnum MethodInvocation runtime MemberReference setFixnum MemberReference MemberReference = MemberReference ClassCreator = ! runtime is1_9 StatementExpression fixnum ClassReference defineAnnotatedMethods VariableDeclaration BinaryOperation MemberReference StatementExpression fixnum runtime Literal MethodInvocation MemberReference defineClass fixnum fixnum index ClassIndex FIXNUM fixnum kindOf ReferenceType MethodDeclaration MethodInvocation ReferenceType BasicType VariableDeclarator < MemberReference MemberReference ++ i Assignment "Fixnum" runtime getInteger ObjectAllocator NOT_ALLOCATABLE_ALLOCATOR RubyModule ReferenceType Modifier Annotation BasicType isKindOf FormalParameter FormalParameter ReturnStatement fixnum MethodInvocation includeModule RubyFixnum int i Literal i runtime.fixnumCache length MemberReference ClassCreator = KindOf public Override boolean ReferenceType obj ReferenceType type BinaryOperation runtime getPrecision 0 runtime ArraySelector fixnumCache ReferenceType MemberReference BinaryOperation IRubyObject RubyModule instanceof MemberReference ReferenceType MemberReference RubyFixnum fixnum - MemberReference MemberReference obj RubyFixnum i i CACHE_OFFSET	0
MethodDeclaration Modifier Annotation ReferenceType split FormalParameter FormalParameter FormalParameter LocalVariableDeclaration ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair RubyArray ReferenceType context ReferenceType recv ReferenceType arg ReferenceType VariableDeclarator MethodInvocation required Literal meta Literal ThreadContext IRubyObject IRubyObject RubyString filename MethodInvocation context MethodInvocation getRuntime 1 true MemberReference MemberReference get_path MethodInvocation MethodInvocation newArray context arg MemberReference MemberReference MemberReference dirname MemberReference MemberReference ArrayCreator basename context recv filename context recv ReferenceType ArrayInitializer IRubyObject MemberReference filename	0
MethodDeclaration Modifier removeWarningsFromEclipse LocalVariableDeclaration StatementExpression StatementExpression static public ReferenceType VariableDeclarator MethodInvocation MethodInvocation TestHelper helper ClassCreator helper privateMethod TestHelper staticPrivateMethod ReferenceType Literal TestHelper "A"	0
MethodDeclaration Modifier Annotation ReferenceType op_le19 FormalParameter FormalParameter IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType other BinaryOperation ReturnStatement MethodInvocation name Literal compat MemberReference ThreadContext IRubyObject instanceof MemberReference ReferenceType MethodInvocation RubyComparable MemberReference This MemberReference op_le "<=" CompatVersion RUBY1_9 other RubyString context MethodInvocation getRuntime context other BinaryOperation newBoolean <= MethodInvocation Literal Cast op_cmp19 0 ReferenceType MemberReference RubyString other	1
MethodDeclaration Modifier ReferenceType getScriptFileName ReturnStatement public String MethodInvocation ruby MethodInvocation MethodInvocation get getInstanceConfig getScriptFileName	0
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter IfStatement ReturnStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType args ReferenceType block BinaryOperation BlockStatement MethodInvocation ThreadContext IRubyObject RubyModule String IRubyObject Block >= MemberReference Literal ReturnStatement box.actualMethod MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference call box callCount 0 MethodInvocation context self clazz name args block MethodInvocation MemberReference MemberReference tryJitReturnMethod MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference call context name context self clazz name args block	0
MethodDeclaration Modifier Annotation ReferenceType getaddrinfo FormalParameter FormalParameter FormalParameter StatementExpression TryStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType args Assignment LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement LocalVariableDeclaration IfStatement IfStatement LocalVariableDeclaration ForStatement ReturnStatement CatchClause required Literal optional Literal meta Literal ThreadContext IRubyObject IRubyObject MemberReference MethodInvocation = ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator BasicType VariableDeclarator BinaryOperation BlockStatement ReferenceType VariableDeclarator ReferenceType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator MethodInvocation BlockStatement ReferenceType VariableDeclarator MethodInvocation BlockStatement BinaryOperation StatementExpression ReferenceType VariableDeclarator ForControl BlockStatement MethodInvocation CatchClauseParameter ThrowStatement 2 4 true args Arity MethodInvocation MemberReference Literal Literal scanArgs Ruby r MethodInvocation IRubyObject host MemberReference IRubyObject port MemberReference boolean emptyHost BinaryOperation instanceof MemberReference ReferenceType StatementExpression IRubyObject socktype MemberReference IRubyObject flags MemberReference boolean sock_stream Literal boolean sock_dgram Literal ! socktype isNil LocalVariableDeclaration IfStatement InetAddress addrs Literal ! flags isNil LocalVariableDeclaration IfStatement == MemberReference Literal Assignment List TypeArgument l ClassCreator VariableDeclaration BinaryOperation MemberReference LocalVariableDeclaration IfStatement IfStatement r MemberReference newArray UnknownHostException e MethodInvocation context getRuntime args 2 4 context getRuntime ArraySelector args ArraySelector args || MethodInvocation MethodInvocation port RubyString Assignment ArraySelector args ArraySelector args true true BasicType VariableDeclarator BinaryOperation BlockStatement IfStatement null BasicType VariableDeclarator BinaryOperation BlockStatement addrs null MemberReference MethodInvocation = ReferenceType ReferenceType BasicType VariableDeclarator < MemberReference MemberReference ++ i ReferenceType VariableDeclarator MemberReference BlockStatement MemberReference BlockStatement l MethodInvocation Literal sockerr Literal Literal host isNil host MethodInvocation convertToString MemberReference MethodInvocation = Literal Literal int val MethodInvocation == MemberReference MethodInvocation StatementExpression BinaryOperation BlockStatement int flag MethodInvocation && BinaryOperation MemberReference StatementExpression addrs InetAddress TernaryExpression getAllByName IRubyObject ArrayList TypeArgument int i Literal i addrs length IRubyObject c sock_dgram StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression sock_stream StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression context getRuntime "getaddrinfo: name or service not known" 0 1 isEmpty port MemberReference MemberReference ArrayCreator getservbyname 3 5 RubyNumeric MemberReference fix2int val SOCK_STREAM value Assignment == MemberReference MethodInvocation StatementExpression RubyNumeric MemberReference fix2int == MemberReference Literal emptyHost Assignment MemberReference Literal MethodInvocation ReferenceType 0 Assignment Assignment Assignment Assignment Assignment Assignment Assignment Assignment MethodInvocation Assignment Assignment Assignment Assignment Assignment Assignment Assignment Assignment MethodInvocation context recv ReferenceType ArrayInitializer socktype MemberReference Literal = val SOCK_DGRAM value Assignment flags flag 1 MemberReference MethodInvocation = emptyHost null host MethodInvocation convertToString IRubyObject MemberReference ArrayCreator = MemberReference MethodInvocation = MemberReference MemberReference = MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation = l MethodInvocation add MemberReference ArrayCreator = MemberReference MethodInvocation = MemberReference MemberReference = MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation = l MethodInvocation add IRubyObject MemberReference sock_dgram false MemberReference Literal = addrs InetAddress Literal getAllByName toString c ReferenceType Literal ArraySelector c r Literal newString ArraySelector c port ArraySelector c r MemberReference newString ArraySelector c r MemberReference newString ArraySelector c r MemberReference newFixnum ArraySelector c r MemberReference newFixnum ArraySelector c r MemberReference newFixnum r MemberReference newArrayNoCopy c ReferenceType Literal ArraySelector c r Literal newString ArraySelector c port ArraySelector c r MemberReference newString ArraySelector c r MemberReference newString ArraySelector c r MemberReference newFixnum ArraySelector c r MemberReference newFixnum ArraySelector c r MemberReference newFixnum r MemberReference newArrayNoCopy port sock_stream false "0.0.0.0" IRubyObject 7 Literal "AF_INET" Literal Literal ArraySelector MethodInvocation addrs Literal ArraySelector MethodInvocation addrs Literal PF_INET Literal SOCK_DGRAM Literal IPPROTO_UDP c IRubyObject 7 Literal "AF_INET" Literal Literal ArraySelector MethodInvocation addrs Literal ArraySelector MethodInvocation addrs Literal PF_INET Literal SOCK_STREAM Literal IPPROTO_TCP c 0 1 2 MemberReference getCanonicalHostName 3 MemberReference getHostAddress 4 5 6 0 1 2 MemberReference getCanonicalHostName 3 MemberReference getHostAddress 4 5 6 i i i i	1
MethodDeclaration Modifier Annotation ReferenceType op_mul19 FormalParameter FormalParameter LocalVariableDeclaration StatementExpression ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType other ReferenceType VariableDeclarator MethodInvocation MemberReference name Literal required Literal compat MemberReference ThreadContext IRubyObject RubyString result MethodInvocation result This Assignment copyCodeRangeForSubstr result "*" 1 CompatVersion RUBY1_9 MemberReference MemberReference multiplyByteList MemberReference MemberReference = context other result.value encoding value encoding	1
MethodDeclaration Modifier compileSValue FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression StatementExpression IfStatement public ReferenceType node ReferenceType context BasicType expr ReferenceType VariableDeclarator MethodInvocation MethodInvocation MemberReference StatementExpression Node BodyCompiler boolean SValueNode svalueNode Cast MethodInvocation MemberReference Literal compile context singlifySplattedValue ! expr MethodInvocation ReferenceType MemberReference svalueNode getValue context true context consumeCurrentValue SValueNode node	1
MethodDeclaration Modifier Annotation ReferenceType trust FormalParameter IfStatement ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context BinaryOperation BlockStatement This compat MemberReference ThreadContext && MethodInvocation MethodInvocation StatementExpression StatementExpression CompatVersion RUBY1_9 isUntrusted ! isImmediate MethodInvocation Assignment checkFrozen MemberReference MemberReference &= flags ~ UNTRUSTED_F	0
MethodDeclaration Modifier ReferenceType getNodeType ReturnStatement public NodeType MemberReference NodeType INSTASGNNODE	0
MethodDeclaration Modifier compileGlobalAsgn FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement IfStatement public ReferenceType node ReferenceType context BasicType expr Modifier ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement MemberReference StatementExpression Node BodyCompiler boolean final GlobalAsgnNode globalAsgnNode Cast CompilerCallback value ClassCreator == MethodInvocation Literal SwitchStatement StatementExpression ! expr MethodInvocation ReferenceType MemberReference ReferenceType MethodDeclaration globalAsgnNode MethodInvocation getName 2 MethodInvocation SwitchStatementCase SwitchStatementCase SwitchStatementCase MethodInvocation context consumeCurrentValue GlobalAsgnNode node CompilerCallback Modifier call FormalParameter StatementExpression length globalAsgnNode MethodInvocation getName Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement StatementExpression context MethodInvocation MemberReference assignGlobalVariable public ReferenceType context MethodInvocation Literal charAt '_' MethodInvocation '~' MethodInvocation MethodInvocation globalAsgnNode getName value BodyCompiler MethodInvocation MemberReference Literal compile 1 context MethodInvocation getVariableCompiler context MethodInvocation getVariableCompiler context MethodInvocation MemberReference assignGlobalVariable globalAsgnNode getValueNode context true MemberReference assignLastLine MemberReference assignBackRef globalAsgnNode getName value value value	1
MethodDeclaration Modifier Annotation beginMethod FormalParameter FormalParameter StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression public Override ReferenceType bodyPrep ReferenceType scope MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation CompilerCallback StaticScope method start method MemberReference aload Literal MethodInvocation invokeThreadContext method dup method MethodInvocation astore Literal MethodInvocation invokeRuby method MethodInvocation astore variableCompiler MemberReference MemberReference beginClass method MemberReference label StandardASMCompiler THREADCONTEXT_INDEX "getRuntime" ClassReference sig getRuntimeIndex "getNil" ClassReference sig getNilIndex bodyPrep scope scopeStart ReferenceType ReferenceType Ruby IRubyObject	0
MethodDeclaration Modifier ifnull FormalParameter StatementExpression public ReferenceType arg0 MethodInvocation Label MethodInvocation getMethodVisitor MemberReference MemberReference visitJumpInsn IFNULL arg0	0
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter FormalParameter BSFException TryStatement public Object ReferenceType recv ReferenceType method ReferenceType args ReturnStatement CatchClause Object String Object MethodInvocation CatchClauseParameter ThrowStatement JavaEmbedUtils MemberReference MemberReference MemberReference MemberReference ClassReference invokeMethod Exception excptn ClassCreator runtime recv method args ReferenceType ReferenceType MemberReference MethodInvocation MemberReference Object BSFException BSFException REASON_EXECUTION_ERROR excptn getMessage excptn	0
MethodDeclaration Modifier BasicType matchPos FormalParameter FormalParameter FormalParameter IfStatement ReturnStatement private int ReferenceType context ReferenceType str BasicType pos BinaryOperation BlockStatement MethodInvocation ThreadContext RubyString int != MemberReference Literal IfStatement StatementExpression MemberReference MemberReference MemberReference Literal search19 pos 0 BinaryOperation BlockStatement Assignment context str pos false < MemberReference Literal StatementExpression IfStatement MemberReference MethodInvocation = pos 0 Assignment BinaryOperation ReturnStatement pos MemberReference MemberReference Literal adjustStartPos19 MemberReference MethodInvocation += < MemberReference Literal MemberReference str pos false pos str strLength pos 0 pos	1
MethodDeclaration Modifier retrieveGlobalVariable FormalParameter StatementExpression StatementExpression StatementExpression public ReferenceType name MethodInvocation MethodInvocation MethodInvocation String loadRuntime method MemberReference ldc Literal MethodInvocation invokeUtilityMethod name "getGlobalVariable" ClassReference ClassReference ClassReference sig ReferenceType ReferenceType ReferenceType IRubyObject Ruby String	0
MethodDeclaration Modifier Annotation BasicType isSingleton ReturnStatement public Override boolean Literal false	0
MethodDeclaration Modifier ReferenceType resolveClass FormalParameter IOException ClassNotFoundException ReturnStatement protected Class ReferenceType desc MethodInvocation ObjectStreamClass Class MethodInvocation Literal MethodInvocation forName desc getName true runtime getJRubyClassLoader	1
MethodDeclaration Modifier enterAction FormalParameter StatementExpression IfStatement StatementExpression LocalVariableDeclaration StatementExpression StatementExpression protected ReferenceType event MethodInvocation MethodInvocation BlockStatement MethodInvocation ReferenceType VariableDeclarator Assignment MethodInvocation KeyEvent event consume completePopup isVisible IfStatement StatementExpression ReturnStatement Literal Literal append String line MethodInvocation MemberReference MethodInvocation = inputJoin MemberReference MemberReference send BinaryOperation StatementExpression MethodInvocation "\n" null getLine startPos area MethodInvocation getDocument Channel LINE line != MethodInvocation Literal MethodInvocation completePopup Literal setVisible getLength completeCombo getSelectedItem null MemberReference MemberReference Cast replaceText false start end ReferenceType MethodInvocation String completeCombo getSelectedItem	1
MethodDeclaration Modifier updateCal FormalParameter StatementExpression public ReferenceType dt Assignment DateTime This MemberReference = MemberReference dt dt	0
MethodDeclaration Modifier Annotation ReferenceType stop FormalParameter FormalParameter LocalVariableDeclaration SynchronizedStatement ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType receiver ReferenceType VariableDeclarator MemberReference StatementExpression TryStatement MethodInvocation name Literal meta Literal ThreadContext IRubyObject RubyThread rubyThread MethodInvocation rubyThread MethodInvocation StatementExpression StatementExpression StatementExpression CatchClause receiver MethodInvocation getRuntime "stop" true context getThread rubyThread MemberReference checkMail MethodInvocation Assignment MethodInvocation CatchClauseParameter StatementExpression StatementExpression getNil context receiver MethodInvocation MethodInvocation getRuntime MemberReference MemberReference = rubyThread wait InterruptedException ie MethodInvocation Assignment getThreadService Literal setCritical rubyThread status Status SLEEP rubyThread MemberReference checkMail MemberReference MemberReference = false context rubyThread status Status RUN	1
MethodDeclaration Modifier free IfStatement StatementExpression public MethodInvocation BlockStatement MethodInvocation released Literal getAndSet ThrowStatement handle free true MethodInvocation runtime Literal newRuntimeError "callback already freed"	0
MethodDeclaration Modifier ReferenceType pretty FormalParameter FormalParameter ReturnStatement static public String ReferenceType retval ReferenceType params  BinaryOperation Class Class + MethodInvocation MethodInvocation MemberReference prettyParams MemberReference human params retval	0
MethodDeclaration Modifier ReferenceType loadJavaClassQuiet FormalParameter TryStatement public Class ReferenceType className ReturnStatement CatchClause CatchClause CatchClause CatchClause String MethodInvocation CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement MemberReference loadJavaClass ClassNotFoundException cnfExcptn MethodInvocation ExceptionInInitializerError eiie MethodInvocation LinkageError le MethodInvocation SecurityException se MethodInvocation className runtime BinaryOperation MemberReference MemberReference Literal newNameError runtime BinaryOperation MemberReference MemberReference Literal newNameError runtime BinaryOperation MemberReference MemberReference Literal newNameError runtime BinaryOperation MemberReference MemberReference Literal newNameError + Literal MemberReference className cnfExcptn false + Literal MemberReference className eiie false + Literal MemberReference className le false + Literal MemberReference className se false "cannot load Java class " className "cannot initialize Java class " className "cannot link Java class " className "security: cannot load Java class " className	0
MethodDeclaration Modifier Annotation ReferenceType get_with_class FormalParameter FormalParameter LocalVariableDeclaration IfStatement LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration ForStatement IfStatement LocalVariableDeclaration LocalVariableDeclaration ForStatement TryStatement static public JRubyMethod ElementValuePair RubyObject ReferenceType recv ReferenceType obj ReferenceType VariableDeclarator BinaryOperation BlockStatement ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator BasicType VariableDeclarator EnhancedForControl BlockStatement BinaryOperation BlockStatement BasicType VariableDeclarator ReferenceType VariableDeclarator ForControl BlockStatement ReturnStatement CatchClause CatchClause meta Literal IRubyObject IRubyObject Ruby runtime MethodInvocation instanceof MemberReference ReferenceType ThrowStatement RubyClass clazz Cast JavaClass javaClass Literal Set TypeArgument names ClassCreator List TypeArgument interfaceList ClassCreator List TypeArgument ancestors MethodInvocation boolean skipRemainingClasses Literal VariableDeclaration MemberReference LocalVariableDeclaration IfStatement == MemberReference Literal ThrowStatement int interfaceCount MethodInvocation Class TypeArgument interfaces ArrayCreator VariableDeclaration BinaryOperation StatementExpression MethodInvocation CatchClauseParameter LocalVariableDeclaration StatementExpression ThrowStatement CatchClauseParameter LocalVariableDeclaration StatementExpression ThrowStatement true recv getRuntime obj RubyClass MethodInvocation ReferenceType MemberReference null ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType clazz getAncestorList false ReferenceType VariableDeclarator ancestors ReferenceType VariableDeclarator BinaryOperation BlockStatement IfStatement javaClass null MethodInvocation interfaceList size ? ReferenceType MemberReference BasicType VariableDeclarator >= MemberReference Literal Assignment MethodInvocation MethodInvocation MemberReference MemberReference getProxyClass Error e ReferenceType VariableDeclarator MethodInvocation MemberReference InvocationTargetException e ReferenceType VariableDeclarator MethodInvocation MemberReference runtime MemberReference MethodInvocation newTypeError RubyClass obj String HashSet TypeArgument Class TypeArgument ArrayList TypeArgument IRubyObject IRubyObject ancestorObject RubyModule ancestor Cast instanceof MemberReference ReferenceType IfStatement IfStatement LocalVariableDeclaration IfStatement IfStatement StatementExpression IfStatement StatementExpression IfStatement MethodInvocation BlockStatement runtime BinaryOperation newArgumentError Class TypeArgument interfaceCount int i MemberReference -- i 0 MemberReference MethodInvocation = recv getRuntime javaClass javaClass interfaces names RaiseException ex MethodInvocation ex MemberReference initCause ex RaiseException ex MethodInvocation ex MemberReference initCause ex obj runtime getClassClass ReferenceType ? ReferenceType ReferenceType MemberReference ancestor RubyClass MemberReference ContinueStatement MethodInvocation BlockStatement ReferenceType VariableDeclarator BinaryOperation BlockStatement IfStatement BinaryOperation BlockStatement IfStatement Assignment BinaryOperation BlockStatement Assignment BinaryOperation BlockStatement BlockStatement ! EXCLUDE_MODULES MethodInvocation contains LocalVariableDeclaration SynchronizedStatement + Literal MemberReference ? interfaceCount ArraySelector interfaces interfaceList MemberReference get recv MethodInvocation getRuntime e recv MethodInvocation getRuntime e String Class TypeArgument RubyModule ancestorObject skipRemainingClasses ! ancestor MethodInvocation getInstanceVariables StatementExpression ContinueStatement IRubyObject var MethodInvocation == MemberReference Literal ThrowStatement BinaryOperation BlockStatement == MemberReference Literal StatementExpression BinaryOperation BlockStatement MemberReference MethodInvocation = && BinaryOperation BinaryOperation IfStatement LocalVariableDeclaration LocalVariableDeclaration ForStatement MemberReference MethodInvocation = == MemberReference Literal LocalVariableDeclaration LocalVariableDeclaration SynchronizedStatement StatementExpression IfStatement LocalVariableDeclaration LocalVariableDeclaration ForStatement ancestor getName ReferenceType VariableDeclarator Assignment ForStatement "unable to create proxy class: no java_class defined for " clazz MemberReference i BinaryOperation newArgumentError BinaryOperation newArgumentError ? Literal fastHasInstanceVariable Assignment ancestor MethodInvocation getInstanceVariables var null MethodInvocation instanceof MemberReference ReferenceType ThrowStatement javaClass null Assignment != MemberReference MemberReference ThrowStatement var ancestor MethodInvocation getInstanceVariables != MemberReference Literal instanceof MemberReference ReferenceType BinaryOperation BlockStatement ReferenceType VariableDeclarator BasicType VariableDeclarator ForControl BlockStatement var ancestor MethodInvocation getInstanceVariables var null ReferenceType VariableDeclarator ReferenceType VariableDeclarator Assignment StatementExpression ForStatement MethodInvocation BinaryOperation BlockStatement ReferenceType VariableDeclarator BasicType VariableDeclarator ForControl BlockStatement Map TypeArgument TypeArgument methods MemberReference MethodInvocation = EnhancedForControl BlockStatement i + BinaryOperation MethodInvocation + BinaryOperation MethodInvocation "@java_proxy_class" MemberReference Literal = Literal fastGetInstanceVariable runtime BinaryOperation newTypeError var JavaClass MethodInvocation MemberReference Cast = javaClass var MethodInvocation Literal fastGetInstanceVariable var null var RubyNil instanceof MemberReference ReferenceType ThrowStatement RubyArray ifcArray Cast int size MethodInvocation VariableDeclaration BinaryOperation LocalVariableDeclaration IfStatement LocalVariableDeclaration IfStatement IfStatement Literal fastGetInstanceVariable Map TypeArgument TypeArgument methods RubyArray methodNames MemberReference MethodInvocation = Assignment EnhancedForControl BlockStatement ancestor Literal MemberReference fastSetInstanceVariable instanceof MemberReference ReferenceType ThrowStatement RubyArray methodNames Cast int size MethodInvocation VariableDeclaration BinaryOperation LocalVariableDeclaration IfStatement StatementExpression ReferenceType ReferenceType methods ancestor getMethods VariableDeclaration MethodInvocation IfStatement + BinaryOperation Literal e getMessage + BinaryOperation Literal e getMessage skipRemainingClasses true "@java_class" + Literal MemberReference runtime BinaryOperation newTypeError javaClass ReferenceType MemberReference runtime BinaryOperation newTypeError "@java_interfaces" var RubyArray MethodInvocation ReferenceType MemberReference ifcArray size BasicType VariableDeclarator >= MemberReference Literal ReferenceType VariableDeclarator BinaryOperation BlockStatement ReferenceType VariableDeclarator MethodInvocation BlockStatement MethodInvocation BlockStatement "@__java_ovrd_methods" ReferenceType ReferenceType methods ancestor getMethods MemberReference MethodInvocation = VariableDeclaration MethodInvocation IfStatement "@__java_ovrd_methods" methodNames var RubyArray MethodInvocation ReferenceType MemberReference methodNames size BasicType VariableDeclarator >= MemberReference Literal ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation String DynamicMethod ReferenceType VariableDeclarator methods keySet MethodInvocation BlockStatement + Literal MethodInvocation " : " + Literal MethodInvocation " : " "no java_class defined for proxy (or ancestor): " ancestor + BinaryOperation MemberReference JavaClass var + BinaryOperation Literal runtime BinaryOperation newTypeError RubyArray var int i MemberReference -- i 0 IRubyObject ifc MethodInvocation instanceof MemberReference ReferenceType ThrowStatement Class interfaceClass Cast ! interfaceClass isInterface ThrowStatement ! interfaceList MemberReference contains StatementExpression String DynamicMethod methodNames RubyArray MemberReference MethodInvocation newArrayLight ReferenceType VariableDeclarator methods keySet MethodInvocation BlockStatement runtime BinaryOperation newTypeError RubyArray var int i MemberReference -- i 0 IRubyObject methodName MethodInvocation instanceof MemberReference ReferenceType ThrowStatement names MethodInvocation add String methodName ! EXCLUDE_METHODS MemberReference contains StatementExpression "unable to create proxy class for " javaClass getValue "unable to create proxy class for " javaClass getValue + BinaryOperation Literal var + BinaryOperation MemberReference ")" + BinaryOperation MemberReference size ifcArray MemberReference eltInternal ifc JavaClass MethodInvocation ReferenceType MemberReference MethodInvocation interfaceClass MethodInvocation runtime methods size String methodName ! EXCLUDE_METHODS MemberReference contains StatementExpression StatementExpression + BinaryOperation MemberReference size methodNames MemberReference eltInternal methodName RubyString MethodInvocation methodName asJavaString methodName MethodInvocation + Literal MemberReference ": " + BinaryOperation Literal var + BinaryOperation Literal var i runtime BinaryOperation newTypeError JavaClass ifc runtime BinaryOperation newTypeError interfaceList MemberReference add methodName MethodInvocation MethodInvocation + BinaryOperation Literal var i runtime BinaryOperation newTypeError names MemberReference add "invalid java_class defined for proxy (or ancestor): " ancestor + BinaryOperation MemberReference " (" + Literal MemberReference ": " + BinaryOperation MemberReference + BinaryOperation Literal interfaceClass names MemberReference add methodNames MethodInvocation append + Literal MemberReference ": " + BinaryOperation MemberReference methodName + BinaryOperation Literal ancestor "invalid java_interfaces defined for proxy (or ancestor): " ancestor + BinaryOperation Literal ifc + BinaryOperation MemberReference " (not an interface)" methodName runtime MemberReference newString "invalid @__java_ovrd_methods defined for proxy: " ancestor + BinaryOperation Literal methodName + BinaryOperation MemberReference ") does not match java_class for ancestor " + Literal MemberReference ": " + BinaryOperation Literal ifc methodName + Literal MemberReference ": " + BinaryOperation Literal javaClass "invalid java interface defined for proxy (or ancestor): " ancestor + Literal MemberReference ": " "invalid method name defined for proxy (or ancestor): " ancestor + Literal MemberReference " (" "invalid java interface defined for proxy (or ancestor): " ancestor "java_class defined for " clazz	1
MethodDeclaration Modifier Annotation BasicType getNativeTypeIndex ReturnStatement public Override int MemberReference ClassIndex STRING	0
MethodDeclaration Modifier ReferenceType cond0 FormalParameter StatementExpression LocalVariableDeclaration LocalVariableDeclaration SwitchStatement ReturnStatement private Node ReferenceType node MethodInvocation ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase MemberReference Node MemberReference checkAssignmentInCondition Node leftNode Literal Node rightNode Literal node getNodeType DREGEXPNODE BlockStatement ANDNODE StatementExpression StatementExpression ReturnStatement ORNODE StatementExpression StatementExpression ReturnStatement DOTNODE BlockStatement REGEXPNODE StatementExpression ReturnStatement node node null null LocalVariableDeclaration ReturnStatement Assignment Assignment ClassCreator Assignment Assignment ClassCreator LocalVariableDeclaration IfStatement LocalVariableDeclaration StatementExpression LocalVariableDeclaration ReturnStatement MethodInvocation ClassCreator ReferenceType VariableDeclarator ClassCreator MemberReference MethodInvocation = MemberReference MethodInvocation = ReferenceType MethodInvocation MethodInvocation MethodInvocation MemberReference MethodInvocation = MemberReference MethodInvocation = ReferenceType MethodInvocation MethodInvocation MethodInvocation ReferenceType VariableDeclarator MethodInvocation ReturnStatement ReferenceType VariableDeclarator MethodInvocation BasicType VariableDeclarator ClassCreator MemberReference MemberReference Literal warningUnlessEOption ReferenceType MethodInvocation MemberReference ISourcePosition position MethodInvocation ReferenceType MemberReference MemberReference ClassCreator leftNode Cast cond0 rightNode Cast cond0 AndNode node getPosition MemberReference makeNullNil MemberReference makeNullNil leftNode Cast cond0 rightNode Cast cond0 OrNode node getPosition MemberReference makeNullNil MemberReference makeNullNil DotNode dotNode Cast dotNode isLiteral MemberReference String label MethodInvocation currentScope MethodInvocation getLocalScope int slot MethodInvocation ReferenceType MethodInvocation MethodInvocation MethodInvocation MethodInvocation MemberReference ID REGEXP_LITERAL_IN_CONDITION node "regex literal in condition" MatchNode node getPosition node node getPosition Match2Node position node ReferenceType MemberReference Literal ReferenceType MemberReference ReferenceType MemberReference leftNode rightNode ReferenceType MemberReference ReferenceType MemberReference leftNode rightNode ReferenceType MemberReference node String BinaryOperation valueOf MemberReference addVariable currentScope MemberReference isDefined FlipNode node getPosition Cast getFlipConditionNode Cast getFlipConditionNode dotNode isExclusive slot GlobalVarNode position "$_" AndNode node AndNode node OrNode node OrNode node DotNode node + Literal MethodInvocation label label ReferenceType MemberReference ReferenceType MemberReference "FLIP" node hashCode DotNode node DotNode node	1
MethodDeclaration Modifier Annotation ReferenceType convertToType FormalParameter FormalParameter ThrowStatement final public Deprecated IRubyObject ReferenceType target BasicType convertMethodIndex ClassCreator RubyClass int ReferenceType Literal RuntimeException "Not supported; use the String versions"	1
MethodDeclaration Modifier Annotation ReferenceType even_p FormalParameter LocalVariableDeclaration IfStatement ReturnStatement public JRubyMethod ElementValuePair RubyBoolean ReferenceType context ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation name Literal ThreadContext Ruby runtime MethodInvocation == MethodInvocation MethodInvocation ReturnStatement runtime getFalse "even?" context getRuntime MemberReference Literal MethodInvocation callMethod RubyFixnum MemberReference zero MethodInvocation context "%" RubyFixnum MemberReference two runtime runtime getTrue runtime	1
MethodDeclaration Modifier ReferenceType getParameterTypes ReturnStatement public Class TypeArgument MemberReference ? parameterTypes	0
MethodDeclaration Modifier ReferenceType setVariable0 FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement final public IRubyObject ReferenceType runtime ReferenceType name ReferenceType object ReferenceType value MethodInvocation Ruby String IRubyObject IRubyObject runtimeCache MemberReference Literal MemberReference MemberReference MemberReference setVariable runtime 0 name object value	0
MethodDeclaration Modifier ReferenceType searchWithCache FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement static public CacheEntry ReferenceType clazz ReferenceType name1 ReferenceType name2 ReferenceType name3 ReferenceType name4 ReferenceType name5 ReferenceType name6 ReferenceType name7 ReferenceType name8 ReferenceType VariableDeclarator BinaryOperation BlockStatement MemberReference RubyClass String String String String String String String String CacheEntry entry MethodInvocation == MemberReference MemberReference ReturnStatement entry clazz MemberReference searchWithCache entry method UndefinedMethod INSTANCE MethodInvocation name1 MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference searchWithCache clazz name2 name3 name4 name5 name6 name7 name8	1
MethodDeclaration Modifier BasicType decodeIntUnsignedLittleEndian FormalParameter StatementExpression LocalVariableDeclaration StatementExpression ReturnStatement private static long ReferenceType encode MethodInvocation BasicType VariableDeclarator MethodInvocation MemberReference ByteBuffer encode MemberReference order long value BinaryOperation encode MemberReference order value ByteOrder LITTLE_ENDIAN & MethodInvocation Literal ByteOrder BIG_ENDIAN encode getInt 0xFFFFFFFFL	0
MethodDeclaration Modifier ReferenceType createEdge FormalParameter FormalParameter ReturnStatement public CFG_Edge ReferenceType s ReferenceType d ClassCreator BasicBlock BasicBlock ReferenceType MemberReference MemberReference CFG_Edge s d	0
MethodDeclaration Modifier ReferenceType getValueThreeDepthZeroOrNil FormalParameter StatementExpression LocalVariableDeclaration IfStatement ReturnStatement public IRubyObject ReferenceType nil MethodInvocation ReferenceType VariableDeclarator BinaryOperation BlockStatement MemberReference IRubyObject assertGetValueThreeDepthZeroOrNil IRubyObject value MemberReference == MemberReference Literal ReturnStatement value ArraySelector variableValues value null MethodInvocation Literal MemberReference setValueThreeDepthZero 3 value	0
MethodDeclaration Modifier ReferenceType isCompatibleWith FormalParameter LocalVariableDeclaration Statement LocalVariableDeclaration IfStatement IfStatement IfStatement IfStatement ReturnStatement private Encoding ReferenceType other ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation ReturnStatement BinaryOperation ReturnStatement BinaryOperation ReturnStatement BinaryOperation ReturnStatement MethodInvocation RubyString Encoding enc1 MemberReference Encoding enc2 MemberReference == MemberReference MemberReference MemberReference == MemberReference Literal MemberReference == MemberReference Literal MemberReference || MethodInvocation MethodInvocation Literal RubyEncoding MemberReference MethodInvocation MemberReference MethodInvocation areCompatible value encoding other.value encoding enc1 enc2 enc1 other.value realSize 0 enc1 value realSize 0 enc2 ! enc1 isAsciiCompatible ! enc2 isAsciiCompatible null enc1 scanForCodeRange enc2 other scanForCodeRange	1
MethodDeclaration Modifier ReferenceType newInterpretedClosure FormalParameter FormalParameter FormalParameter LocalVariableDeclaration ReturnStatement static public Block ReferenceType context ReferenceType body ReferenceType self ReferenceType VariableDeclarator ClassCreator ThreadContext BlockBody IRubyObject Binding binding MethodInvocation ReferenceType MemberReference MemberReference context MemberReference currentBinding Block body binding self	0
MethodDeclaration Modifier Annotation ReferenceType matched FormalParameter StatementExpression IfStatement ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context MethodInvocation MethodInvocation ReturnStatement MethodInvocation name Literal ThreadContext check ! isMatched MethodInvocation MethodInvocation BinaryOperation BinaryOperation extractRange "matched" MethodInvocation getRuntime context getRuntime + MemberReference MemberReference + MemberReference MemberReference getNil lastPos beg lastPos end	1
MethodDeclaration Modifier Annotation ReferenceType each_with_index19 FormalParameter FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType self ReferenceType block TernaryExpression name Literal frame Literal ThreadContext IRubyObject Block MethodInvocation MethodInvocation MethodInvocation "each_with_index" true block isGiven MemberReference MemberReference MemberReference each_with_index MethodInvocation MemberReference Literal enumeratorize context self block context getRuntime self "each_with_index"	1
MethodDeclaration Modifier ReferenceType when FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration ForStatement ReturnStatement public IRubyObject ReferenceType value ReferenceType context ReferenceType runtime ReferenceType self ReferenceType aBlock ReferenceType VariableDeclarator ForControl BlockStatement Literal IRubyObject ThreadContext Ruby IRubyObject Block RubyArray expressions MethodInvocation VariableDeclaration BinaryOperation MemberReference LocalVariableDeclaration IfStatement null RuntimeHelpers MethodInvocation splatValue BasicType VariableDeclarator VariableDeclarator < MemberReference MemberReference ++ j ReferenceType VariableDeclarator BinaryOperation BlockStatement expressionNodes MemberReference MemberReference MemberReference MemberReference interpret int j Literal k MethodInvocation j k IRubyObject test MethodInvocation || BinaryOperation BinaryOperation ReturnStatement runtime context self aBlock 0 expressions getLength expressions MemberReference eltInternal && BinaryOperation MethodInvocation && BinaryOperation MethodInvocation MethodInvocation j != MemberReference Literal eqq MethodInvocation MemberReference MemberReference MemberReference MemberReference call == MemberReference Literal test isTrue bodyNode MemberReference MemberReference MemberReference MemberReference interpret value null isTrue context self test value value null runtime context self aBlock	1
MethodDeclaration Modifier ReferenceType createJavaArrayUtilitiesModule FormalParameter LocalVariableDeclaration StatementExpression ReturnStatement static public RubyModule ReferenceType runtime ReferenceType VariableDeclarator MethodInvocation MemberReference Ruby RubyModule javaArrayUtils MethodInvocation javaArrayUtils ClassReference defineAnnotatedMethods javaArrayUtils runtime Literal defineModule ReferenceType "JavaArrayUtilities" JavaArrayUtilities	0
MethodDeclaration Modifier Annotation ReferenceType interpret FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public Override IRubyObject ReferenceType runtime ReferenceType context ReferenceType self ReferenceType aBlock MethodInvocation Ruby ThreadContext IRubyObject Block callAdapter MemberReference MemberReference MethodInvocation MethodInvocation MethodInvocation call context self MethodInvocation getReceiverNode arg1 MemberReference MemberReference MemberReference MemberReference interpret arg2 MemberReference MemberReference MemberReference MemberReference interpret MemberReference MemberReference MemberReference MemberReference interpret runtime context self aBlock runtime context self aBlock runtime context self aBlock	0
MethodDeclaration Modifier BasicType getTotalTime ReturnStatement public long MemberReference totalTime	0
MethodDeclaration Modifier ReferenceType accept FormalParameter ReturnStatement public Object ReferenceType iVisitor MethodInvocation NodeVisitor iVisitor This visitZArrayNode	0
MethodDeclaration Modifier ReferenceType getArity ReturnStatement public Arity MemberReference Arity NO_ARGUMENTS	0
MethodDeclaration Modifier BasicType big2long FormalParameter LocalVariableDeclaration IfStatement ReturnStatement static public long ReferenceType value ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation RubyBignum BigInteger big MethodInvocation || BinaryOperation BinaryOperation ThrowStatement big longValue value getValue < MethodInvocation Literal > MethodInvocation Literal MethodInvocation big MemberReference compareTo 0 big MemberReference compareTo 0 value MethodInvocation getRuntime LONG_MIN LONG_MAX Literal newRangeError "bignum too big to convert into `long'"	0
MethodDeclaration Modifier BasicType strLengthWithCodeRangeNonAsciiCompatible FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration ForStatement ReturnStatement private static long ReferenceType enc BasicType bytes BasicType p BasicType end BasicType VariableDeclarator VariableDeclarator ForControl BlockStatement MethodInvocation Encoding byte int int int cr Literal c Literal Assignment BinaryOperation MemberReference LocalVariableDeclaration IfStatement MemberReference TernaryExpression pack 0 0 MemberReference Literal = < MemberReference MemberReference ++ c BasicType VariableDeclarator BinaryOperation BlockStatement BlockStatement c BinaryOperation MemberReference MemberReference c 0 p end int cl MethodInvocation > MemberReference Literal StatementExpression StatementExpression StatementExpression StatementExpression == MemberReference Literal CR_7BIT cr MemberReference MemberReference MemberReference MemberReference preciseLength cl 0 Assignment Assignment Assignment MemberReference cr 0 enc bytes p end MemberReference MemberReference |= MemberReference MemberReference += MemberReference MemberReference = ++ p cr CR_VALID p cl cr CR_BROKEN	1
MethodDeclaration Modifier BasicType indexOf FormalParameter FormalParameter ReturnStatement final public int BasicType offset BasicType value TernaryExpression long byte BinaryOperation Cast Cast == MemberReference Literal BasicType MethodInvocation BasicType MethodInvocation value 0 int IO BinaryOperation getStringLength int IO BinaryOperation MemberReference indexOf + MemberReference MemberReference + MemberReference MemberReference value address offset address offset	0
MethodDeclaration Modifier Annotation ReferenceType op_minus FormalParameter FormalParameter LocalVariableDeclaration IfStatement LocalVariableDeclaration IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType arg ReferenceType VariableDeclarator BinaryOperation BlockStatement ReferenceType VariableDeclarator BinaryOperation BlockStatement ClassCreator name Literal required Literal ThreadContext IRubyObject RubyBigDecimal val MethodInvocation == MemberReference Literal ReturnStatement RubyBigDecimal res MethodInvocation != MemberReference Literal ReturnStatement MethodInvocation ReferenceType MethodInvocation MethodInvocation "-" 1 MemberReference Literal getVpValue val null MethodInvocation MemberReference handleMinusSpecialValues res null MemberReference setResult RubyBigDecimal getRuntime value MemberReference subtract arg false MemberReference Literal MemberReference callCoerced val res val value context "-" arg	1
MethodDeclaration Modifier register FormalParameter LocalVariableDeclaration StatementExpression public ReferenceType value ReferenceType VariableDeclarator MethodInvocation IRubyObject Map cache MethodInvocation cache MemberReference ClassCreator put MemberReference selectCache value ReferenceType MethodInvocation value Integer cache size	1
MethodDeclaration Modifier branch FormalParameter StatementExpression public ReferenceType context MethodInvocation BodyCompiler MethodInvocation MemberReference Literal compileGetArgumentDefinition iVisited getArgsNode context "method"	0
MethodDeclaration Modifier ReferenceType op_divide FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement IfStatement LocalVariableDeclaration IfStatement ReturnStatement private IRubyObject ReferenceType context ReferenceType other BasicType slash ReferenceType VariableDeclarator Modifier ReferenceType VariableDeclarator BinaryOperation BlockStatement IfStatement BinaryOperation ThrowStatement Modifier ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement MethodInvocation ThreadContext IRubyObject boolean Ruby runtime MethodInvocation final BigInteger otherValue instanceof MemberReference ReferenceType StatementExpression BinaryOperation BlockStatement IfStatement == MethodInvocation Literal MethodInvocation final BigInteger result == BinaryOperation Literal LocalVariableDeclaration StatementExpression StatementExpression MethodInvocation MemberReference bignorm context getRuntime other RubyFixnum Assignment instanceof MemberReference ReferenceType StatementExpression BinaryOperation BlockStatement BlockStatement otherValue signum 0 runtime newZeroDivisionError * MethodInvocation MethodInvocation - 1 ReferenceType VariableDeclarator Assignment Assignment getRuntime result MemberReference MethodInvocation = other RubyBignum Assignment instanceof MemberReference ReferenceType LocalVariableDeclaration IfStatement ReturnStatement value signum otherValue signum BigInteger results MethodInvocation MemberReference TernaryExpression = MemberReference MethodInvocation = otherValue Cast fix2big MemberReference Cast = other RubyFloat BasicType VariableDeclarator MemberReference BlockStatement BlockStatement MethodInvocation value MemberReference divideAndRemainder result BinaryOperation MemberReference MemberReference result value MemberReference divide ReferenceType MemberReference otherValue ReferenceType MemberReference double div BinaryOperation slash ReturnStatement ReturnStatement MemberReference TernaryExpression MemberReference coerceBin otherValue != MemberReference Literal ArraySelector MethodInvocation results ArraySelector results otherValue RubyFixnum other RubyBignum other / MethodInvocation Cast MethodInvocation MethodInvocation context MemberReference Literal Literal other ArraySelector MethodInvocation results 0 Literal MemberReference subtract Literal This big2dbl ReferenceType MemberReference RubyFloat MemberReference MemberReference newFloat RubyNumeric MemberReference MemberReference dbl2num slash "/" "div" Literal signum 0 BigInteger ONE 0 RubyFloat other runtime div runtime div 1	1
MethodDeclaration Modifier BasicType isPreOrder ReturnStatement public boolean Literal false	0
MethodDeclaration Modifier Annotation ReferenceType list ReturnStatement public Override String SuperMethodInvocation list	1
MethodDeclaration Modifier BasicType sizeOf FormalParameter ReturnStatement public int ReferenceType type MethodInvocation NativeType MethodInvocation MemberReference getType size type	0
MethodDeclaration Modifier ReferenceType getLastExitStatus ReturnStatement public IRubyObject MemberReference lastExitStatus	0
MethodDeclaration Modifier Annotation ReferenceType op_mod FormalParameter FormalParameter LocalVariableDeclaration IfStatement LocalVariableDeclaration IfStatement LocalVariableDeclaration IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType other Modifier ReferenceType VariableDeclarator BinaryOperation BlockStatement IfStatement ReferenceType VariableDeclarator BinaryOperation ThrowStatement ReferenceType VariableDeclarator BinaryOperation StatementExpression MethodInvocation name ElementArrayValue required Literal ThreadContext IRubyObject final BigInteger otherValue instanceof MemberReference ReferenceType StatementExpression BinaryOperation BlockStatement BlockStatement Ruby runtime MethodInvocation == MethodInvocation Literal MethodInvocation BigInteger result MethodInvocation && BinaryOperation BinaryOperation Assignment MemberReference MemberReference bignorm Literal Literal 1 other RubyFixnum Assignment instanceof MemberReference ReferenceType StatementExpression ReturnStatement context getRuntime otherValue signum 0 runtime newZeroDivisionError value MethodInvocation mod == MethodInvocation Literal != MethodInvocation Literal MemberReference MethodInvocation = runtime result "%" "modulo" MemberReference MethodInvocation = other RubyBignum Assignment MethodInvocation otherValue abs otherValue signum - 1 result signum 0 result otherValue MemberReference add otherValue Cast fix2big MemberReference Cast = MemberReference Literal MemberReference coerceBin result ReferenceType MemberReference otherValue ReferenceType MemberReference context "%" other RubyFixnum other RubyBignum other	1
MethodDeclaration Modifier ReferenceType buildFCall FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression ReturnStatement public Operand ReferenceType fcallNode ReferenceType s ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MemberReference FCallNode IR_Scope Node callArgsNode MethodInvocation List TypeArgument args MethodInvocation Operand block MethodInvocation Variable callResult MethodInvocation IR_Instr callInstr ClassCreator s MemberReference addInstr callResult fcallNode getArgsNode ReferenceType MemberReference MemberReference setupCallArgs MethodInvocation MemberReference setupCallClosure s getNewVariable ReferenceType MemberReference ClassCreator MethodInvocation MemberReference callInstr Operand callArgsNode s fcallNode getIterNode s CALL_Instr callResult ReferenceType MethodInvocation args ArrayCreator toArray block MethAddr fcallNode getName ReferenceType MethodInvocation Operand args size	1
MethodDeclaration Modifier setMethodAdapter FormalParameter StatementExpression public ReferenceType sma Assignment SkinnyMethodAdapter This MemberReference = MemberReference sma method	0
MethodDeclaration Modifier Annotation ReferenceType combination FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement LocalVariableDeclaration IfStatement ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context ReferenceType num ReferenceType block ReferenceType VariableDeclarator MethodInvocation ReturnStatement BasicType VariableDeclarator BinaryOperation BlockStatement IfStatement This name Literal ThreadContext IRubyObject Block Ruby runtime MethodInvocation ! block isGiven MethodInvocation int n MethodInvocation == MemberReference Literal StatementExpression BinaryOperation BlockStatement IfStatement "combination" context getRuntime MemberReference This Literal MemberReference enumeratorize RubyNumeric MemberReference num2int n 0 MethodInvocation == MemberReference Literal ForStatement BinaryOperation BlockStatement runtime "combination" num num block MemberReference MethodInvocation yield n 1 ForControl BlockStatement && BinaryOperation BinaryOperation LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression ForStatement context MemberReference newEmptyArray VariableDeclaration BinaryOperation MemberReference StatementExpression >= MemberReference Literal >= MemberReference MemberReference BasicType VariableDeclarator BasicType VariableDeclarator ReferenceType VariableDeclarator BasicType VariableDeclarator Assignment ForControl BlockStatement runtime BasicType VariableDeclarator < MemberReference MemberReference ++ i MethodInvocation n 0 realLength n int stack ArrayCreator int nlen MethodInvocation IRubyObject chosen ArrayCreator int lev Literal MemberReference Literal = VariableDeclaration BinaryOperation MemberReference StatementExpression ForStatement StatementExpression DoStatement int i Literal i realLength block MemberReference MemberReference yield BasicType BinaryOperation MemberReference Cast MemberReference combinationLength ReferenceType MemberReference 0 ArraySelector stack - 1 BasicType VariableDeclarator < MemberReference MemberReference ++ i Assignment ForControl BlockStatement MethodInvocation BinaryOperation BlockStatement 0 context ArraySelector values int + MemberReference Literal context BasicType MemberReference n IRubyObject n Literal int i Literal i nlen MemberReference MemberReference = MemberReference BinaryOperation MemberReference StatementExpression block MemberReference MethodInvocation yield && BinaryOperation BinaryOperation StatementExpression BinaryOperation n 1 int realLength 0 0 ArraySelector chosen ArraySelector values ++ lev < MemberReference MemberReference ++ lev Assignment context MemberReference MemberReference newArray != MemberReference Literal == BinaryOperation BinaryOperation MemberReference + MemberReference MemberReference MemberReference BinaryOperation lev n MemberReference MemberReference = runtime chosen lev 0 + MemberReference MemberReference + BinaryOperation Literal ++ ArraySelector stack begin i lev + MemberReference MemberReference ArraySelector chosen ArraySelector values ArraySelector stack n + MemberReference MemberReference 1 MemberReference begin ArraySelector stack MemberReference BinaryOperation BinaryOperation realLength lev -- lev BinaryOperation lev + MemberReference Assignment + MemberReference Literal + MemberReference Literal begin MemberReference BinaryOperation = lev 1 lev 1 ArraySelector stack + MemberReference Literal BinaryOperation ArraySelector stack 1 + MemberReference Literal MemberReference lev 1 lev	1
MethodDeclaration Modifier invokeBinaryFixnumRHS FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression StatementExpression IfStatement StatementExpression LocalVariableDeclaration LocalVariableDeclaration StatementExpression public ReferenceType name ReferenceType receiverCallback BasicType fixnum MethodInvocation MethodInvocation MethodInvocation BinaryOperation BlockStatement BlockStatement MethodInvocation ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation String CompilerCallback long methodCompiler MethodInvocation MethodInvocation getScriptCompiler methodCompiler loadThreadContext methodCompiler loadSelf != MemberReference Literal StatementExpression StatementExpression method MemberReference ldc String signature MethodInvocation String callSiteMethod Literal method MethodInvocation MemberReference MemberReference invokevirtual getCacheCompiler MemberReference MemberReference MemberReference cacheCallSite receiverCallback null MethodInvocation MethodInvocation fixnum ClassReference MethodInvocation sig "call" ClassReference p callSiteMethod signature methodCompiler name CallType NORMAL receiverCallback MemberReference call methodCompiler loadSelf ReferenceType ClassReference ClassReference ClassReference ClassReference params ReferenceType methodCompiler IRubyObject ReferenceType ReferenceType ReferenceType BasicType CallSite ThreadContext IRubyObject IRubyObject long	1
MethodDeclaration Modifier fill FormalParameter FormalParameter FormalParameter FormalParameter ForStatement private static ReferenceType arr BasicType from BasicType to ReferenceType with ForControl BlockStatement IRubyObject int int IRubyObject VariableDeclaration BinaryOperation MemberReference StatementExpression BasicType VariableDeclarator < MemberReference MemberReference ++ i Assignment int i MemberReference i to MemberReference MemberReference = from ArraySelector arr with MemberReference i	0
MethodDeclaration Modifier Annotation ReferenceType recv FormalParameter FormalParameter TryStatement public Override IRubyObject ReferenceType context ReferenceType args LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression ReturnStatement CatchClause ThreadContext IRubyObject BasicType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation Cast MethodInvocation CatchClauseParameter ThrowStatement int length MethodInvocation ByteBuffer buf MethodInvocation context MethodInvocation getThread ReferenceType This context MethodInvocation getRuntime IOException e MethodInvocation RubyNumeric MemberReference fix2int ByteBuffer MemberReference allocate This MemberReference select DatagramChannel MethodInvocation ClassCreator newString MethodInvocation Literal sockerr ArraySelector args length SelectionKey OP_READ getChannel ReferenceType MethodInvocation Literal MethodInvocation context getRuntime "recv: name or service not known" Literal ByteList buf array 0 buf position 0	1
MethodDeclaration Modifier setName FormalParameter StatementExpression public ReferenceType name Assignment String This MemberReference = MemberReference name name	0
MethodDeclaration Modifier ReferenceType case48_line476 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support Cast Cast Cast Literal new_call ReferenceType MemberReference ReferenceType MemberReference ReferenceType MemberReference null Node ArraySelector yyVals Token ArraySelector yyVals Node ArraySelector yyVals BinaryOperation BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference + Literal MemberReference - 3 yyTop - 1 yyTop 0 yyTop	1
MethodDeclaration Modifier ReferenceType assign FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement protected AssignableNode ReferenceType position ReferenceType name ReferenceType value ReferenceType topScope BasicType depth BasicType VariableDeclarator BinaryOperation BlockStatement MethodInvocation ISourcePosition String Node StaticScope int int slot MethodInvocation >= MemberReference Literal IfStatement ReturnStatement enclosingScope MemberReference MemberReference MemberReference MemberReference BinaryOperation assign MemberReference exists slot 0 BinaryOperation StatementExpression ClassCreator position name value topScope + MemberReference Literal name > MemberReference Literal MethodInvocation ReferenceType MemberReference MemberReference BinaryOperation MemberReference depth 1 depth 0 MemberReference capture DAsgnNode position name | BinaryOperation MemberReference value slot << MemberReference Literal slot depth 16	1
MethodDeclaration Modifier setWriteBuffered StatementExpression public Assignment MemberReference MemberReference |= mode WBUF	0
MethodDeclaration Modifier createNewFile FormalParameter TryStatement private ReferenceType file StatementExpression CatchClause File MethodInvocation CatchClauseParameter ThrowStatement file createNewFile IOException ex MethodInvocation runtime MemberReference newIOErrorFromException ex	1
MethodDeclaration Modifier ReferenceType get FormalParameter ReturnStatement public IRubyObject BasicType index MemberReference int ArraySelector values MemberReference index	0
MethodDeclaration Modifier ReferenceType getType FormalParameter FormalParameter ReturnStatement static public String BasicType i ReferenceType o Literal double Object "double,object"	0
MethodDeclaration Modifier Annotation ReferenceType getParentFile ReturnStatement public Override File ClassCreator ReferenceType MethodInvocation NormalizedFile getParent	0
MethodDeclaration Modifier Annotation BasicType isKindOf FormalParameter FormalParameter ReturnStatement public Override boolean ReferenceType obj ReferenceType type BinaryOperation IRubyObject RubyModule instanceof MemberReference ReferenceType obj RubyEncoding	0
MethodDeclaration Modifier ReferenceType constructHash19 FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression StatementExpression ReturnStatement static public RubyHash ReferenceType runtime ReferenceType key1 ReferenceType value1 ReferenceType key2 ReferenceType value2 ReferenceType VariableDeclarator MethodInvocation MethodInvocation MemberReference Ruby IRubyObject IRubyObject IRubyObject IRubyObject RubyHash hash MethodInvocation hash MemberReference MemberReference MemberReference fastASetCheckString19 hash MemberReference MemberReference MemberReference fastASetCheckString19 hash RubyHash MemberReference newHash runtime key1 value1 runtime key2 value2 runtime	0
MethodDeclaration Modifier BasicType shouldTrySearch FormalParameter ReturnStatement public boolean ReferenceType state BinaryOperation SearchState == MemberReference Literal state library null	0
MethodDeclaration Modifier BasicType getModifiers ReturnStatement public int MethodInvocation method getModifiers	0
MethodDeclaration Modifier setLiteral StatementExpression public Assignment MemberReference MemberReference |= flags REGEXP_LITERAL_F	0
MethodDeclaration Modifier ReferenceType getNodeType ReturnStatement public NodeType MemberReference NodeType BIGNUMNODE	0
MethodDeclaration Modifier ReferenceType getRequiredLibraries ReturnStatement public String MethodInvocation ruby MethodInvocation MethodInvocation MethodInvocation get getInstanceConfig requiredLibraries toString	0
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression LocalVariableDeclaration LocalVariableDeclaration ReturnStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType arg0 MethodInvocation ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation ThreadContext IRubyObject RubyModule String IRubyObject MethodInvocation createJavaMethods JavaMethod method Cast Object cArg0 MethodInvocation method MemberReference invokeStaticDirect self getRuntime ReferenceType MethodInvocation MemberReference MemberReference MemberReference Literal convertArg cArg0 JavaMethod MemberReference MemberReference MemberReference findCallableArityOne context arg0 method 0 self name arg0	0
MethodDeclaration Modifier ReferenceType fromNative FormalParameter FormalParameter ReturnStatement final public IRubyObject ReferenceType context BasicType value MethodInvocation ThreadContext long Util MethodInvocation Cast newSigned8 context getRuntime BasicType MemberReference byte value	1
MethodDeclaration Modifier BasicType checkIndex FormalParameter FormalParameter IfStatement IfStatement ReturnStatement private int BasicType beg BasicType len BinaryOperation StatementExpression BinaryOperation BlockStatement MemberReference int int > MemberReference MemberReference MethodInvocation < MemberReference Literal IfStatement StatementExpression beg beg len MemberReference raiseIndexOutOfString beg 0 BinaryOperation StatementExpression Assignment beg > MemberReference MemberReference MethodInvocation MemberReference MemberReference += - beg len MemberReference raiseIndexOutOfString beg len beg	1
MethodDeclaration Modifier Annotation ReferenceType take FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType n ReferenceType VariableDeclarator BasicType VariableDeclarator BinaryOperation ThrowStatement MethodInvocation name Literal compat MemberReference ThreadContext IRubyObject Ruby runtime MethodInvocation long len MethodInvocation < MemberReference Literal MethodInvocation Literal MemberReference subseq "take" CompatVersion RUBY1_9 context getRuntime RubyNumeric MemberReference num2long len 0 runtime Literal newArgumentError 0 len n "attempt to take negative size"	1
MethodDeclaration Modifier Annotation ReferenceType ppid FormalParameter ReturnStatement static public Deprecated IRubyObject ReferenceType recv MethodInvocation IRubyObject MethodInvocation ppid recv getRuntime	1
MethodDeclaration Modifier Annotation ReferenceType to_f ReturnStatement public JRubyMethod ElementValuePair IRubyObject MethodInvocation name Literal RubyNumeric MethodInvocation This str2fnum "to_f" getRuntime	1
MethodDeclaration Modifier ReferenceType invokeDirectWithExceptionHandling FormalParameter FormalParameter FormalParameter TryStatement private IRubyObject ReferenceType method ReferenceType javaInvokee ReferenceType arg0 LocalVariableDeclaration ReturnStatement CatchClause CatchClause CatchClause CatchClause Method Object Object ReferenceType VariableDeclarator MethodInvocation CatchClauseParameter ReturnStatement CatchClauseParameter ReturnStatement CatchClauseParameter ReturnStatement CatchClauseParameter ReturnStatement Object result TernaryExpression MemberReference convertReturn IllegalArgumentException iae MethodInvocation IllegalAccessException iae MethodInvocation InvocationTargetException ite MethodInvocation Throwable t MethodInvocation BinaryOperation MethodInvocation MethodInvocation result MemberReference MemberReference MemberReference handlelIllegalArgumentEx MemberReference MemberReference handleIllegalAccessEx MemberReference MemberReference handleInvocationTargetEx MemberReference MemberReference handleThrowable != MemberReference Literal handle MemberReference MemberReference invoke method MemberReference MemberReference invoke method iae arg0 method iae ite method t method handle null javaInvokee arg0 javaInvokee arg0	1
MethodDeclaration Modifier Annotation endBody StatementExpression StatementExpression StatementExpression LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression IfStatement public Override MethodInvocation MethodInvocation MethodInvocation ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MemberReference BlockStatement method areturn method MemberReference label variableCompiler MemberReference MemberReference MemberReference declareLocals AnnotationVisitor annotation MethodInvocation annotation Literal MemberReference visit annotation Literal Literal visit annotation Literal MethodInvocation visit annotation Literal MethodInvocation visit annotation Literal MethodInvocation visit method end specificArity StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression ForStatement StatementExpression StatementExpression StatementExpression StatementExpression scopeEnd scope scopeStart scopeEnd method MethodInvocation Literal visitAnnotation "name" rubyName "frame" true "required" scope getRequiredArgs "optional" scope getOptionalArgs "rest" scope getRestArg Assignment MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation ForControl BlockStatement MethodInvocation MethodInvocation MethodInvocation MethodInvocation ClassReference ci true MemberReference ClassCreator = method start method Literal aload method MethodInvocation Literal MethodInvocation invokevirtual method Literal aload method MethodInvocation pushInt method MethodInvocation pushInt method MethodInvocation Literal MethodInvocation invokestatic method pop loadThis loadThreadContext loadSelf VariableDeclaration BinaryOperation MemberReference StatementExpression StatementExpression StatementExpression method BinaryOperation aload method MethodInvocation MemberReference MethodInvocation invokestatic method areturn method end ReferenceType method ReferenceType MethodInvocation 1 ClassReference p "getRuntime" ClassReference sig 3 scope getRequiredArgs scope getRequiredArgs ClassReference p "checkArgumentCount" ClassReference ClassReference ClassReference ClassReference ClassReference sig BasicType VariableDeclarator < MemberReference MethodInvocation ++ i MethodInvocation MethodInvocation MethodInvocation + MemberReference Literal script getClassname methodName getSignature JRubyMethod SkinnyMethodAdapter script MethodInvocation getClassVisitor ReferenceType ReferenceType ReferenceType BasicType ReferenceType ReferenceType BasicType BasicType int i Literal i scope getRequiredArgs method MemberReference aload method MemberReference ldc method arrayload StandardASMCompiler ARGS_INDEX 1 BinaryOperation MemberReference MethodInvocation Literal Literal visitMethod ThreadContext Ruby Arity int Ruby IRubyObject int int 0 StandardASMCompiler ARGS_INDEX i | MemberReference MemberReference methodName StandardASMCompiler MethodInvocation Literal getStaticMethodSignature null null ACC_PUBLIC ACC_STATIC script getClassname 4	1
MethodDeclaration Modifier assignLastLine StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression public MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation methodCompiler loadRuntime method swap methodCompiler loadThreadContext method swap method MethodInvocation Literal MethodInvocation invokestatic ClassReference p "setLastLine" ClassReference ClassReference ClassReference ClassReference sig ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType RuntimeHelpers IRubyObject Ruby ThreadContext IRubyObject	0
MethodDeclaration Modifier ReferenceType newString FormalParameter FormalParameter ReturnStatement static public RubyString ReferenceType runtime ReferenceType str ClassCreator Ruby String ReferenceType MemberReference MethodInvocation MemberReference RubyString runtime runtime getString str	0
MethodDeclaration Modifier ReferenceType getRubyMethod FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement LocalVariableDeclaration LocalVariableDeclaration TryStatement private static IRubyObject ReferenceType context ReferenceType proxyClass ReferenceType name ReferenceType argTypesClasses  ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement ReferenceType VariableDeclarator ReferenceType VariableDeclarator LocalVariableDeclaration LocalVariableDeclaration IfStatement CatchClause ThreadContext IRubyObject String Class Ruby runtime MethodInvocation RubyClass rubyClass instanceof MemberReference ReferenceType StatementExpression ThrowStatement Class jclass Cast String prettyName BinaryOperation ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation BlockStatement BlockStatement CatchClauseParameter LocalVariableDeclaration ThrowStatement context getRuntime proxyClass RubyClass Assignment MethodInvocation ReferenceType Cast + MemberReference MethodInvocation Method jmethod MethodInvocation MethodInvoker invoker Modifier MethodInvocation isStatic StatementExpression ReturnStatement StatementExpression ReturnStatement NoSuchMethodException nsme ReferenceType VariableDeclarator MethodInvocation MemberReference Cast = runtime MemberReference MethodInvocation newTypeError Class ReferenceType MethodInvocation name CodegenUtils MemberReference prettyParams jclass MemberReference MemberReference getMethod jmethod getModifiers Assignment MethodInvocation Assignment MethodInvocation String errorName BinaryOperation runtime BinaryOperation MemberReference newNameError rubyClass ReferenceType MemberReference proxyClass runtime getModule JavaClass proxyClass MemberReference Literal callMethod argTypesClasses name argTypesClasses MemberReference ClassCreator = RubyMethod MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference newMethod MemberReference ClassCreator = RubyUnboundMethod MemberReference MemberReference MemberReference MemberReference MemberReference newUnboundMethod + BinaryOperation MemberReference + Literal MemberReference name RubyClass proxyClass context "java_class" invoker ReferenceType MemberReference MemberReference rubyClass prettyName rubyClass name invoker proxyClass invoker ReferenceType MemberReference MemberReference rubyClass prettyName rubyClass name invoker + MethodInvocation Literal prettyName "Java method not found: " errorName StaticMethodInvoker rubyClass jmethod InstanceMethodInvoker rubyClass jmethod jclass getName "."	1
MethodDeclaration Modifier putShort FormalParameter FormalParameter StatementExpression StatementExpression final public BasicType offset BasicType value MethodInvocation MethodInvocation long short MemberReference Literal checkBounds IO BinaryOperation MemberReference putShort offset 2 + MemberReference MemberReference value address offset	0
MethodDeclaration Modifier ReferenceType case332_line1234 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference Cast = yyVal yyVal ReferenceType MemberReference Node ArraySelector yyVals BinaryOperation + Literal MemberReference 0 yyTop	1
MethodDeclaration Modifier Annotation Annotation ReferenceType initialize_copy FormalParameter IfStatement IfStatement LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair Override IRubyObject ReferenceType other BinaryOperation ReturnStatement BinaryOperation BlockStatement ReferenceType VariableDeclarator Assignment Assignment Assignment Assignment Assignment Assignment Assignment This name Literal frame Literal visibility MemberReference IRubyObject == This MemberReference This instanceof MemberReference ReferenceType ThrowStatement RubyStringScanner otherScanner Cast MemberReference MemberReference = MemberReference MemberReference = MemberReference MemberReference = MemberReference MemberReference = MemberReference TernaryExpression = MemberReference MemberReference = MemberReference MemberReference = "initialize_copy" true Visibility PRIVATE other other RubyStringScanner MethodInvocation ReferenceType MemberReference str otherScanner str pos otherScanner pos lastPos otherScanner lastPos scannerFlags otherScanner scannerFlags regs BinaryOperation MethodInvocation Literal beg otherScanner beg end otherScanner end MethodInvocation getRuntime RubyStringScanner other != MemberReference Literal otherScanner.regs clone null BinaryOperation newTypeError otherScanner regs null + BinaryOperation Literal + Literal MethodInvocation " (expected StringScanner)" "wrong argument type " other getMetaClass	1
MethodDeclaration Modifier Annotation ReferenceType interpret FormalParameter FormalParameter FormalParameter FormalParameter AssertStatement ReturnStatement public Override IRubyObject ReferenceType runtime ReferenceType context ReferenceType self ReferenceType aBlock Literal Literal Literal Ruby ThreadContext IRubyObject Block false "Call nodes deal with these directly" null	0
MethodDeclaration Modifier ReferenceType case488_line1854 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference Cast = yyVal yyVal ReferenceType MemberReference Node ArraySelector yyVals BinaryOperation + Literal MemberReference - 1 yyTop	1
MethodDeclaration Modifier Annotation ReferenceType to_int IfStatement TryStatement public JRubyMethod ElementValuePair IRubyObject BinaryOperation BlockStatement ReturnStatement CatchClause name ElementArrayValue || MethodInvocation BinaryOperation ReturnStatement MethodInvocation CatchClauseParameter ReturnStatement Literal Literal isNaN != MemberReference Literal MethodInvocation RubyNumeric MethodInvocation MethodInvocation int2fix ArithmeticException ae MethodInvocation "to_i" "to_int" infinitySign 0 MethodInvocation getRuntime getRuntime value longValueExact RubyBignum MethodInvocation MethodInvocation bignorm getNil getRuntime value toBigInteger	1
MethodDeclaration Modifier iffalse FormalParameter StatementExpression public ReferenceType arg0 MethodInvocation Label MemberReference ifeq arg0	0
MethodDeclaration Modifier ReferenceType node_assign FormalParameter FormalParameter IfStatement LocalVariableDeclaration StatementExpression IfStatement ReturnStatement public Node ReferenceType lhs ReferenceType rhs BinaryOperation ReturnStatement ReferenceType VariableDeclarator MethodInvocation BinaryOperation BlockStatement IfStatement MemberReference Node Node == MemberReference Literal Literal Node newNode MemberReference MemberReference checkExpression instanceof MemberReference ReferenceType StatementExpression BinaryOperation BlockStatement newNode lhs null null lhs rhs lhs AssignableNode Cast instanceof MemberReference ReferenceType LocalVariableDeclaration ReturnStatement ReferenceType MemberReference lhs IArgumentNode ReferenceType VariableDeclarator MethodInvocation AssignableNode lhs IArgumentNode invokableNode Cast invokableNode MethodInvocation setArgsNode ReferenceType MemberReference MethodInvocation MethodInvocation MemberReference arg_add IArgumentNode lhs lhs getPosition invokableNode getArgsNode rhs	1
MethodDeclaration Modifier marshal FormalParameter FormalParameter FormalParameter StatementExpression final public ReferenceType context ReferenceType buffer ReferenceType parameter MethodInvocation ThreadContext InvocationBuffer IRubyObject buffer MethodInvocation putLong Util MemberReference uint64Value parameter	1
MethodDeclaration Modifier ReferenceType storeField FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression ReturnStatement private final IRubyObject ReferenceType runtime ReferenceType name ReferenceType field BasicType align BasicType size MethodInvocation MethodInvocation MethodInvocation Assignment Assignment This Ruby IRubyObject StructLayout ReferenceType int int fields MethodInvocation MemberReference put fields MethodInvocation MemberReference put fieldNames MethodInvocation add This MethodInvocation = This MethodInvocation = Member MemberReference MemberReference createStringKey field MemberReference MemberReference createSymbolKey field MemberReference MemberReference createSymbolKey MemberReference Math This BinaryOperation max MemberReference Math This MemberReference max runtime name runtime name runtime name size MemberReference + Cast MemberReference minAlign MemberReference align size BasicType MemberReference size minAlign int field offset	1
MethodDeclaration Modifier setFileAndLine FormalParameter FormalParameter StatementExpression StatementExpression public ReferenceType file BasicType line Assignment Assignment String int This MemberReference = This MemberReference = MemberReference file MemberReference line file line	0
MethodDeclaration Modifier ReferenceType accept FormalParameter ReturnStatement public Object ReferenceType iVisitor MethodInvocation NodeVisitor iVisitor This visitFalseNode	0
MethodDeclaration Modifier Annotation ReferenceType newInstance FormalParameter FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType recv ReferenceType args ReferenceType block MethodInvocation name ElementArrayValue rest Literal frame Literal meta Literal IRubyObject IRubyObject Block MemberReference MemberReference Literal MemberReference startThread Literal Literal true true true recv args true block "new" "fork"	0
MethodDeclaration Modifier Annotation ReferenceType with_object FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType self Modifier ReferenceType arg Modifier ReferenceType block MethodInvocation name Literal frame Literal compat MemberReference ThreadContext IRubyObject final IRubyObject final Block MemberReference MemberReference MemberReference MemberReference Literal with_object_common "with_object" true CompatVersion RUBY1_9 context self arg block "with_object"	1
MethodDeclaration Modifier ReferenceType invokeDirect FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression IfStatement ReturnStatement public IRubyObject ReferenceType javaInvokee ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 ReferenceType arg3 MethodInvocation MethodInvocation MethodInvocation BlockStatement MethodInvocation Object Object Object Object Object Literal checkArity MemberReference checkInstanceof MemberReference mightBeProxy ReturnStatement MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference invokeDirectWithExceptionHandling 4 javaInvokee javaInvokee MethodInvocation method javaInvokee arg0 arg1 arg2 arg3 MemberReference MemberReference MemberReference MemberReference MemberReference tryProxyInvocation javaInvokee arg0 arg1 arg2 arg3	0
MethodDeclaration Modifier Annotation ReferenceType get_int32 FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType offset MethodInvocation name ElementArrayValue required Literal ThreadContext IRubyObject Util MethodInvocation MethodInvocation newSigned32 Literal Literal 1 context getRuntime MethodInvocation getMemoryIO "get_int32" "get_int" MethodInvocation getInt MemberReference getOffset offset	1
MethodDeclaration Modifier interrupt SynchronizedStatement final public MemberReference StatementExpression StatementExpression StatementExpression monitor Assignment Assignment MethodInvocation This Literal = This Literal = monitor notifyAll MemberReference true MemberReference true woken interrupted	1
MethodDeclaration Modifier ReferenceType getWarnings ReturnStatement public RubyWarnings MemberReference warnings	0
MethodDeclaration Modifier init FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression protected ReferenceType implementationClass ReferenceType arity ReferenceType visibility ReferenceType staticScope ReferenceType scriptObject ReferenceType callConfig Assignment SuperMethodInvocation RubyModule Arity Visibility StaticScope Object CallConfiguration This MemberReference = MemberReference MemberReference MemberReference MemberReference MemberReference init MemberReference scriptObject implementationClass arity visibility staticScope callConfig $scriptObject	0
MethodDeclaration Modifier Annotation ReferenceType post_match FormalParameter StatementExpression IfStatement ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context MethodInvocation MethodInvocation ReturnStatement MethodInvocation name Literal ThreadContext check ! isMatched MethodInvocation MethodInvocation BinaryOperation MethodInvocation extractRange "post_match" context MethodInvocation getRuntime context getRuntime + MemberReference MemberReference str MemberReference getByteList getNil lastPos end realSize	1
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression ReturnStatement public IRubyObject ReferenceType context ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 ReferenceType binding ReferenceType type ReferenceType VariableDeclarator Assignment MethodInvocation ThreadContext IRubyObject IRubyObject IRubyObject Binding Block ReferenceType IRubyObject args ArrayCreator MemberReference MethodInvocation = MemberReference MethodInvocation Literal Literal Literal MemberReference MemberReference yield Type ReferenceType ArrayInitializer args MemberReference MemberReference MemberReference prepareArgumentsForCall context RubyArray MethodInvocation MemberReference newArrayNoCopy null null true binding type IRubyObject MemberReference MemberReference MemberReference context args type context getRuntime args arg0 arg1 arg2	0
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType context ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 ReferenceType arg3 ReferenceType arg4 ReferenceType block MethodInvocation ThreadContext IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject Block body MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference call context arg0 arg1 arg2 arg3 arg4 binding type block	0
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter SwitchStatement public IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType args ReferenceType block MemberReference SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase ThreadContext IRubyObject RubyModule String IRubyObject Block args length Literal ReturnStatement Literal ReturnStatement Literal ReturnStatement Literal ReturnStatement ReturnStatement 0 MethodInvocation 1 MethodInvocation 2 MethodInvocation 3 MethodInvocation MethodInvocation MemberReference MemberReference MemberReference MemberReference MemberReference call MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference call MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference call MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference call This MemberReference MemberReference MemberReference Literal Literal raiseArgumentError context self clazz name block context self clazz name ArraySelector args block context self clazz name ArraySelector args ArraySelector args block context self clazz name ArraySelector args ArraySelector args ArraySelector args block context name args length 0 3 Literal Literal Literal Literal Literal Literal 0 0 1 0 1 2	0
MethodDeclaration Modifier Annotation ReferenceType newInstance FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair ConditionVariable ReferenceType context ReferenceType recv ReferenceType args ReferenceType block ReferenceType VariableDeclarator MethodInvocation MemberReference name Literal rest Literal frame Literal meta Literal ThreadContext IRubyObject IRubyObject Block ConditionVariable result ClassCreator result MemberReference MemberReference callInit result "new" true true true ReferenceType MethodInvocation Cast args block ConditionVariable context getRuntime ReferenceType MemberReference RubyClass recv	0
MethodDeclaration Modifier Annotation ReferenceType lchown FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement LocalVariableDeclaration IfStatement IfStatement ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context ReferenceType arg1 ReferenceType arg2 BasicType VariableDeclarator MethodInvocation BlockStatement BasicType VariableDeclarator MethodInvocation BlockStatement ClassCreator BlockStatement MethodInvocation required Literal ThreadContext IRubyObject IRubyObject int owner Literal ! arg1 isNil StatementExpression int group Literal ! arg2 isNil StatementExpression ! MethodInvocation ReferenceType MemberReference ThrowStatement context MethodInvocation getRuntime 2 - 1 Assignment - 1 Assignment exists File path MethodInvocation MethodInvocation newFixnum MemberReference MethodInvocation = MemberReference MethodInvocation = context MethodInvocation getRuntime context MethodInvocation MethodInvocation getRuntime owner RubyNumeric MemberReference num2int group RubyNumeric MemberReference num2int BinaryOperation newErrnoENOENTError getPosix MemberReference MemberReference MemberReference lchown arg1 arg2 + Literal MemberReference path owner group "No such file or directory - " path	0
MethodDeclaration Modifier BasicType subLength FormalParameter IfStatement ReturnStatement final int BasicType pos BinaryOperation ReturnStatement MethodInvocation int || MethodInvocation BinaryOperation MemberReference StringSupport MemberReference MemberReference MemberReference BinaryOperation strLength singleByteOptimizable < MemberReference Literal pos value encoding value bytes value begin + MemberReference MemberReference pos 0 value begin pos	1
MethodDeclaration Modifier ReferenceType castAndCallIt FormalParameter ReturnStatement static public Object ReferenceType obj MethodInvocation Object Cast callThat ReferenceType MemberReference DescendantOfSingleMethodInterface obj	0
MethodDeclaration Modifier BasicType decodeDoubleLittleEndian FormalParameter ReturnStatement private static double ReferenceType encode MethodInvocation ByteBuffer Double MethodInvocation longBitsToDouble MemberReference decodeLongLittleEndian encode	0
MethodDeclaration Modifier testIdentities LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression public ReferenceType VariableDeclarator ReferenceType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation RubyString o1 MethodInvocation RubyString o2 MethodInvocation long id1 MethodInvocation long id2 MethodInvocation Literal Literal BinaryOperation assertEquals Literal Literal BinaryOperation assertEquals Literal BinaryOperation assertTrue Literal BinaryOperation assertTrue MemberReference MethodInvocation assertSame MemberReference MethodInvocation assertSame MethodInvocation assertNull runtime Literal newString runtime Literal newString target MemberReference idOf target MemberReference idOf "id of normal objects must be even" 0 % MemberReference Literal "id of normal objects must be even" 0 % MemberReference Literal "normal ids must be bigger than reserved values" > MemberReference Literal "normal ids must be bigger than reserved values" > MemberReference Literal o1 target MemberReference id2ref o2 target MemberReference id2ref target Literal id2ref "hey" "ho" o1 o2 id1 2 id2 2 id1 4 id2 4 id1 id2 4711	0
MethodDeclaration Modifier Annotation ReferenceType printf FormalParameter FormalParameter IOException StatementExpression ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType args MethodInvocation MethodInvocation name Literal required Literal rest Literal ThreadContext IRubyObject MethodInvocation write context MethodInvocation getRuntime "printf" 1 true RubyKernel MemberReference This MemberReference sprintf getNil context args	0
MethodDeclaration Modifier ReferenceType setGlobalVariable FormalParameter FormalParameter FormalParameter ReturnStatement static public IRubyObject ReferenceType value ReferenceType runtime ReferenceType name MethodInvocation IRubyObject Ruby String runtime MethodInvocation getGlobalVariables MemberReference MemberReference set name value	0
MethodDeclaration Modifier Annotation ReferenceType interpret FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration SwitchStatement public Override IRubyObject ReferenceType runtime ReferenceType context ReferenceType self ReferenceType aBlock ReferenceType VariableDeclarator MemberReference SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase Ruby ThreadContext IRubyObject Block IRubyObject backref MethodInvocation type Literal ReturnStatement Literal ReturnStatement Literal ReturnStatement Literal ReturnStatement AssertStatement ReturnStatement context MethodInvocation getCurrentScope '&' MethodInvocation '`' MethodInvocation '\'' MethodInvocation '+' MethodInvocation Literal Literal Literal MemberReference getBackRef RubyRegexp MemberReference last_match RubyRegexp MemberReference match_pre RubyRegexp MemberReference match_post RubyRegexp MemberReference match_last false "backref with invalid type" null runtime backref backref backref backref	0
MethodDeclaration Modifier ReferenceType allocate FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType runtime ReferenceType klass ClassCreator Ruby RubyClass ReferenceType MemberReference MemberReference RubyGzipWriter runtime klass	0
MethodDeclaration Modifier branch FormalParameter IfStatement public ReferenceType context BinaryOperation BlockStatement BlockStatement BodyCompiler instanceof MemberReference ReferenceType LocalVariableDeclaration StatementExpression StatementExpression iVisited Colon2Node Modifier ReferenceType VariableDeclarator MethodInvocation MethodInvocation final Node leftNode Cast MemberReference MemberReference Literal compile context loadObject ReferenceType MemberReference leftNode context true Colon2Node iVisited	0
MethodDeclaration Modifier ReferenceType fromNative FormalParameter FormalParameter LocalVariableDeclaration ReturnStatement final public IRubyObject ReferenceType context BasicType value Modifier BasicType VariableDeclarator ClassCreator ThreadContext long final long address BinaryOperation ReferenceType MethodInvocation MethodInvocation & Cast MemberReference Pointer context getRuntime NativeMemoryIO MethodInvocation MemberReference wrap BasicType MemberReference ADDRESS_MASK context getRuntime address long value	1
MethodDeclaration Modifier Annotation ReferenceType interpret FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration ReturnStatement public Override IRubyObject ReferenceType runtime ReferenceType context ReferenceType self ReferenceType aBlock ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation Ruby ThreadContext IRubyObject Block IRubyObject receiver MethodInvocation IRubyObject args Cast callAdapter MemberReference MemberReference MemberReference MemberReference call MethodInvocation getReceiverNode ReferenceType MethodInvocation context self receiver args MemberReference MemberReference MemberReference MemberReference interpret ArrayNode getArgsNode runtime context self aBlock	0
MethodDeclaration Modifier ReferenceType case449_line1716 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference ClassCreator = yyVal yyVal ReferenceType Literal MemberReference Cast Token "nil" Tokens kNIL ReferenceType MemberReference Token ArraySelector yyVals BinaryOperation + Literal MemberReference 0 yyTop	1
MethodDeclaration Modifier BasicType primitivable FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement private static boolean ReferenceType type ReferenceType arg ReferenceType VariableDeclarator MethodInvocation BlockStatement Literal Class IRubyObject Class argClass MethodInvocation type isPrimitive IfStatement false MemberReference argClass BinaryOperation BlockStatement IfStatement arg || BinaryOperation BinaryOperation ReturnStatement BinaryOperation BlockStatement IfStatement || BinaryOperation BinaryOperation == MemberReference MemberReference BinaryOperation || BinaryOperation BinaryOperation ReturnStatement BinaryOperation BlockStatement || BinaryOperation BinaryOperation == MemberReference MemberReference type Character TYPE || BinaryOperation BinaryOperation == MemberReference MemberReference == MemberReference MemberReference BinaryOperation == MemberReference MemberReference ReturnStatement == MemberReference MemberReference == MemberReference MemberReference type Short TYPE || BinaryOperation BinaryOperation == MemberReference ClassReference type Float TYPE type Double TYPE || BinaryOperation BinaryOperation type Boolean TYPE BinaryOperation type Integer TYPE type Long TYPE || BinaryOperation BinaryOperation == MemberReference ClassReference argClass ReferenceType || BinaryOperation BinaryOperation == MemberReference ClassReference || BinaryOperation BinaryOperation || BinaryOperation BinaryOperation == MemberReference ClassReference argClass ReferenceType Integer || BinaryOperation BinaryOperation == MemberReference ClassReference argClass ReferenceType == MemberReference ClassReference == MemberReference ClassReference || BinaryOperation BinaryOperation == MemberReference ClassReference argClass ReferenceType Character == MemberReference ClassReference == MemberReference ClassReference argClass ReferenceType Double argClass BasicType argClass ReferenceType || BinaryOperation BinaryOperation == MemberReference ClassReference argClass ReferenceType Short argClass BasicType argClass BasicType Float boolean Boolean || BinaryOperation BinaryOperation == MemberReference ClassReference argClass ReferenceType Byte double float || BinaryOperation BinaryOperation == MemberReference ClassReference argClass BasicType Long || BinaryOperation BinaryOperation == MemberReference ClassReference argClass BasicType int == MemberReference ClassReference == MemberReference ClassReference argClass BasicType char argClass BasicType argClass BasicType short long byte	1
MethodDeclaration Modifier Annotation ReferenceType startCallSFast FormalParameter LocalVariableDeclaration StatementExpression LocalVariableDeclaration StatementExpression StatementExpression StatementExpression ReturnStatement private Deprecated MethodVisitor ReferenceType cw ReferenceType VariableDeclarator MethodInvocation ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MemberReference ClassWriter MethodVisitor mv MethodInvocation mv visitCode Label line ClassCreator mv Literal MemberReference visitLineNumber mv MemberReference Literal visitVarInsn mv MemberReference MemberReference visitTypeInsn mv cw MemberReference Literal MemberReference Literal Literal visitMethod ReferenceType 0 line ALOAD 1 CHECKCAST IRUB ACC_PUBLIC "call" FAST_CALL_SIG null null Label	1
MethodDeclaration Modifier Annotation ReferenceType rbuf_fill FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration SynchronizedStatement static public JRubyMethod IRubyObject ReferenceType recv ReferenceType VariableDeclarator ReferenceType VariableDeclarator BasicType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation LocalVariableDeclaration TryStatement IRubyObject RubyString buf Cast RubyIO io Cast int timeout BinaryOperation NativeImpl nim Cast Selector selector Literal nim.channel blockingLock BasicType VariableDeclarator StatementExpression StatementExpression LocalVariableDeclaration LocalVariableDeclaration IfStatement CatchClause IfStatement TryStatement ReferenceType MethodInvocation ReferenceType MethodInvocation * MethodInvocation Literal ReferenceType MethodInvocation null boolean oldBlocking MethodInvocation Assignment MethodInvocation ReferenceType VariableDeclarator BasicType VariableDeclarator BinaryOperation BlockStatement BlockStatement CatchClauseParameter ThrowStatement BinaryOperation BlockStatement StatementExpression CatchClause RubyString recv MethodInvocation getInstanceVariables RubyIO recv MethodInvocation getInstanceVariables RubyNumeric MethodInvocation fix2int 1000 NativeImpl recv dataGetStruct nim.channel isBlocking MemberReference MethodInvocation = nim.channel Literal configureBlocking SelectionKey key MethodInvocation int n MethodInvocation > MemberReference Literal LocalVariableDeclaration ReturnStatement LocalVariableDeclaration ThrowStatement IOException exception MethodInvocation != MemberReference Literal TryStatement MethodInvocation CatchClauseParameter Literal getInstanceVariable Literal getInstanceVariable recv MethodInvocation getInstanceVariables selector Selector open false nim.channel MemberReference MemberReference register selector MemberReference select n 0 ReferenceType VariableDeclarator MethodInvocation ReferenceType VariableDeclarator ClassCreator recv MethodInvocation getRuntime selector null StatementExpression CatchClause nim.channel MemberReference configureBlocking IOException ioe "@rbuf" "@io" Literal getInstanceVariable selector SelectionKey OP_READ timeout IRubyObject readItems MethodInvocation buf MemberReference concat RubyClass exc Cast ReferenceType MethodInvocation Literal MemberReference newIOErrorFromException MethodInvocation CatchClauseParameter oldBlocking "@read_timeout" io ArrayCreator read readItems ReferenceType MethodInvocation RaiseException RubyException MethodInvocation MemberReference Literal newException false exception selector close Exception e ReferenceType ArrayInitializer RubyClass recv getRuntime recv getRuntime exc "execution expired" IRubyObject MethodInvocation recv MethodInvocation getRuntime BinaryOperation newFixnum * Literal Literal 1024 16	1
MethodDeclaration Modifier ReferenceType allocateDirectMemory FormalParameter FormalParameter FormalParameter ReturnStatement public AllocatedDirectMemoryIO ReferenceType runtime BasicType size BasicType clear MethodInvocation Ruby int boolean AllocatedNativeMemoryIO MemberReference MemberReference MemberReference allocate runtime size clear	0
MethodDeclaration Modifier Annotation ReferenceType getSingletonMethod FormalParameter LocalVariableDeclaration LocalVariableDeclaration SynchronizedStatement public Deprecated Callback ReferenceType method ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation LocalVariableDeclaration TryStatement String String mname BinaryOperation String mnamePath BinaryOperation runtime getJRubyClassLoader ReferenceType VariableDeclarator IfStatement LocalVariableDeclaration StatementExpression StatementExpression StatementExpression ReturnStatement CatchClause CatchClause + BinaryOperation Literal + BinaryOperation Literal Class c MethodInvocation BinaryOperation BlockStatement ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MemberReference CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement + BinaryOperation MemberReference "S0" + BinaryOperation MemberReference "S0" MemberReference tryClass == MemberReference Literal LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression InvocationCallback ic Cast ic MethodInvocation setArity ic MemberReference setJavaName ic Literal setSingleton ic IllegalArgumentException e MemberReference Exception e ClassCreator + MethodInvocation Literal method + MemberReference Literal method mname c null ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation Assignment ReferenceType MethodInvocation Arity noArguments method true e ReferenceType MethodInvocation type getName "Callback$" typePath "Callback$" Class signature ArrayCreator Class ret MethodInvocation ClassWriter cw MethodInvocation MethodVisitor mv MethodInvocation mv MemberReference Literal visitVarInsn mv MemberReference MemberReference MemberReference MethodInvocation visitMethodInsn mv MemberReference visitInsn mv Literal Literal visitMaxs MemberReference MethodInvocation = InvocationCallback c newInstance IllegalArgumentException e getMessage ReferenceType ArrayInitializer MemberReference MemberReference getReturnClass MemberReference createCtor MemberReference startCallS ALOAD 3 INVOKESTATIC typePath method MemberReference MemberReference sig ARETURN 1 3 c MemberReference MemberReference MemberReference endCall Class MemberReference ClassReference method signature mnamePath cw ret signature cw mv mname RubyKernel IRUBY_OBJECT ReferenceType Block	1
MethodDeclaration Modifier ReferenceType getRubyInetAddress FormalParameter UnknownHostException IfStatement static public InetAddress ReferenceType address MethodInvocation BlockStatement IfStatement ByteList address MemberReference equal ReturnStatement MethodInvocation BlockStatement BlockStatement BROADCAST MethodInvocation address MemberReference equal ReturnStatement ReturnStatement InetAddress MemberReference getByAddress ANY MethodInvocation MethodInvocation INADDR_BROADCAST InetAddress MemberReference getByAddress InetAddress MethodInvocation getByName INADDR_ANY address toString	0
MethodDeclaration Modifier ReferenceType getNodeType ReturnStatement public NodeType MemberReference NodeType OPASGNANDNODE	0
MethodDeclaration Modifier setWithinTrace FormalParameter StatementExpression public BasicType isWithinTrace Assignment boolean This MemberReference = MemberReference isWithinTrace isWithinTrace	0
MethodDeclaration Modifier Annotation ReferenceType tty_p FormalParameter ReturnStatement public JRubyMethod ElementValuePair RubyBoolean ReferenceType context MethodInvocation name ElementArrayValue ThreadContext context MethodInvocation getRuntime Literal Literal MethodInvocation newBoolean "tty?" "isatty" context MethodInvocation MethodInvocation getRuntime getPosix MethodInvocation isatty MethodInvocation MethodInvocation MethodInvocation getOpenFileChecked getMainStream getDescriptor getFileDescriptor	1
MethodDeclaration Modifier ReferenceType getArity ReturnStatement public Arity MemberReference Arity ONE_ARGUMENT	0
MethodDeclaration Modifier Annotation ReferenceType op_gt FormalParameter FormalParameter SwitchStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType other MethodInvocation SwitchStatementCase SwitchStatementCase name Literal required Literal ThreadContext IRubyObject other MemberReference getMetaClass MemberReference MemberReference MemberReference LocalVariableDeclaration ReturnStatement ReturnStatement ">" 1 index ClassIndex FIXNUM ClassIndex BIGNUM ClassIndex FLOAT BasicType VariableDeclarator MethodInvocation MethodInvocation double b Cast RubyBoolean MethodInvocation BinaryOperation newBoolean MemberReference Literal MemberReference coerceRelOp ReferenceType MemberReference getRuntime && MethodInvocation BinaryOperation context ">" other RubyNumeric other ! Double MemberReference isNaN > MemberReference MemberReference b value b	1
MethodDeclaration Modifier ReferenceType getNativeType ReturnStatement final public NativeType MethodInvocation type getNativeType	0
MethodDeclaration Modifier BasicType calculateSize FormalParameter FormalParameter IfStatement protected static final int ReferenceType context ReferenceType sizeArg BinaryOperation BlockStatement IfStatement ThreadContext IRubyObject instanceof MemberReference ReferenceType ReturnStatement BinaryOperation BlockStatement IfStatement sizeArg RubyFixnum Cast instanceof MemberReference ReferenceType ReturnStatement BinaryOperation BlockStatement IfStatement BasicType Cast sizeArg RubySymbol MethodInvocation && BinaryOperation MethodInvocation ReturnStatement MethodInvocation BlockStatement BlockStatement int ReferenceType MemberReference TypeSizeMapper MemberReference MemberReference getTypeSize instanceof MemberReference ReferenceType Struct MethodInvocation Cast isStruct MethodInvocation sizeArg Literal respondsTo ReturnStatement ThrowStatement RubyFixnum sizeArg context sizeArg sizeArg RubyClass context getRuntime ReferenceType MemberReference Struct MethodInvocation MemberReference getStructSize "size" Cast MethodInvocation RubyClass sizeArg context getRuntime sizeArg BasicType MethodInvocation context MethodInvocation getRuntime int RubyFixnum MethodInvocation num2long Literal newArgumentError sizeArg MemberReference Literal callMethod "Invalid size argument" context "size"	0
MethodDeclaration ReferenceType store FormalParameter FormalParameter LocalVariableDeclaration IfStatement IfStatement IfStatement IfStatement IfStatement ReturnStatement Object ReferenceType name ReferenceType value BasicType VariableDeclarator BinaryOperation ReturnStatement BinaryOperation ReturnStatement BinaryOperation ReturnStatement BinaryOperation ReturnStatement BinaryOperation ReturnStatement MethodInvocation String Object int hash MethodInvocation && BinaryOperation MethodInvocation Assignment && BinaryOperation MethodInvocation Assignment && BinaryOperation MethodInvocation Assignment && BinaryOperation MethodInvocation Assignment && BinaryOperation MethodInvocation Assignment MethodInvocation MemberReference insert name hashCode && BinaryOperation BinaryOperation name MemberReference equals MemberReference MemberReference = && BinaryOperation BinaryOperation name MemberReference equals MemberReference MemberReference = && BinaryOperation BinaryOperation name MemberReference equals MemberReference MemberReference = && BinaryOperation BinaryOperation name MemberReference equals MemberReference MemberReference = && BinaryOperation BinaryOperation name MemberReference equals MemberReference MemberReference = name intern value != MemberReference Literal == MethodInvocation MemberReference name1 value1 value != MemberReference Literal == MethodInvocation MemberReference name2 value2 value != MemberReference Literal == MethodInvocation MemberReference name3 value3 value != MemberReference Literal == MethodInvocation MemberReference name4 value4 value != MemberReference Literal == MethodInvocation MemberReference name5 value5 value name1 null name1 hashCode hash name2 null name2 hashCode hash name3 null name3 hashCode hash name4 null name4 hashCode hash name5 null name5 hashCode hash	1
MethodDeclaration Modifier ReferenceType getBody ReturnStatement public Node MethodInvocation getBodyNode	0
MethodDeclaration Modifier Annotation run LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration TryStatement public Override BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator WhileStatement CatchClause IfStatement byte buf ArrayCreator int numRead boolean hasReadSomething Literal MemberReference BlockStatement CatchClauseParameter MemberReference BlockStatement BasicType Literal false ! quit IfStatement IfStatement StatementExpression Exception e onlyIfAvailable SynchronizedStatement byte 1024 BinaryOperation BlockStatement BinaryOperation BlockStatement MethodInvocation MemberReference IfStatement && MemberReference MemberReference IfStatement == Assignment Literal BreakStatement out MemberReference Literal MemberReference write sync BinaryOperation BlockStatement onlyIfAvailable ! hasReadSomething BinaryOperation BlockStatement BlockStatement MemberReference MethodInvocation = - 1 buf 0 numRead == MemberReference MemberReference TryStatement == MethodInvocation Literal SynchronizedStatement ContinueStatement StatementExpression numRead in MemberReference read slave Slave OUT StatementExpression CatchClause in available 0 MemberReference StatementExpression Assignment buf MethodInvocation CatchClauseParameter waitLock MethodInvocation MemberReference Literal = out close IOException ioe waitLock Literal wait hasReadSomething true 10	1
MethodDeclaration Modifier lstore FormalParameter StatementExpression public BasicType arg0 MethodInvocation int MethodInvocation getMethodVisitor MemberReference MemberReference visitVarInsn LSTORE arg0	0
MethodDeclaration Modifier Annotation ReferenceType collect19 FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType block TernaryExpression name Literal frame Literal compat MemberReference ThreadContext Block MethodInvocation MethodInvocation MethodInvocation "collect" true CompatVersion RUBY1_9 block isGiven MemberReference MemberReference collect MethodInvocation This Literal enumeratorize context block context getRuntime "collect"	0
MethodDeclaration Modifier ReferenceType getErrorStream ReturnStatement public PrintStream ClassCreator ReferenceType ClassCreator PrintStream ReferenceType MethodInvocation IOOutputStream MethodInvocation getGlobalVariables Literal get "$stderr"	1
MethodDeclaration Modifier BasicType allowModule FormalParameter ReturnStatement public boolean ReferenceType name Literal String true	0
MethodDeclaration Modifier visit FormalParameter IfStatement LocalVariableDeclaration ForStatement public ReferenceType visitor MemberReference BlockStatement IfStatement ReferenceType VariableDeclarator ForControl BlockStatement Visitor USE_PACKED_ARRAY LocalVariableDeclaration IfStatement MemberReference BlockStatement VariableTableEntry table MemberReference VariableDeclaration BinaryOperation ForStatement ReferenceType VariableDeclarator BinaryOperation BlockStatement USE_PACKED_FIELDS IfStatement vTable BasicType VariableDeclarator >= MemberReference Literal ForControl BlockStatement Object table MemberReference != MemberReference Literal ForStatement ReturnStatement BinaryOperation BlockStatement int i MemberReference -- i 0 VariableDeclaration BinaryOperation Assignment StatementExpression packedVTable table null ForControl BlockStatement != MemberReference Literal StatementExpression ReturnStatement table length ReferenceType VariableDeclarator != MemberReference Literal MemberReference MemberReference = MethodInvocation VariableDeclaration BinaryOperation MemberReference StatementExpression packedVFields null MethodInvocation VariableTableEntry e MemberReference e null e e next visitor MemberReference MemberReference visit BasicType VariableDeclarator < MemberReference MemberReference ++ i MethodInvocation packedVFields MemberReference visit ArraySelector table e name e value int i Literal i vTableSize visitor Cast MemberReference visit visitor MemberReference 0 ReferenceType MemberReference ArraySelector table i String ArraySelector table BinaryOperation MemberReference + MemberReference MemberReference i i MAX_PACKED	1
MethodDeclaration Modifier ReferenceType case361_line1348 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference Literal = yyVal yyVal null	1
MethodDeclaration Modifier ReferenceType setVariable7 FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement final public IRubyObject ReferenceType runtime ReferenceType name ReferenceType object ReferenceType value MethodInvocation Ruby String IRubyObject IRubyObject runtimeCache MemberReference Literal MemberReference MemberReference MemberReference setVariable runtime 7 name object value	0
MethodDeclaration Modifier marshalTo FormalParameter FormalParameter FormalParameter FormalParameter IOException LocalVariableDeclaration StatementExpression StatementExpression public ReferenceType runtime ReferenceType obj ReferenceType type ReferenceType marshalStream ReferenceType VariableDeclarator MethodInvocation MethodInvocation Ruby Object RubyClass MarshalStream IRubyObject object Cast marshalStream MemberReference registerLinkTarget marshalStream MethodInvocation dumpVariables ReferenceType MemberReference object object getVariableList IRubyObject obj	0
MethodDeclaration Modifier Annotation ReferenceType getCanonicalPath IOException ReturnStatement public Override String SuperMethodInvocation MethodInvocation getCanonicalPath MemberReference Literal replace File separatorChar '/'	0
MethodDeclaration Modifier ReferenceType getInstrs ReturnStatement public List TypeArgument MemberReference ReferenceType _instrs IR_Instr	0
MethodDeclaration Modifier Annotation ReferenceType initialize FormalParameter IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType block MethodInvocation BlockStatement MethodInvocation name Literal frame Literal visibility MemberReference Block block isGiven StatementExpression StatementExpression MethodInvocation getRuntime "initialize" true PRIVATE MethodInvocation MethodInvocation getNil block MethodInvocation getBinding block MethodInvocation This This This Literal yield MemberReference setVisibility MethodInvocation getRuntime false PUBLIC getCurrentContext	0
MethodDeclaration setKernel FormalParameter StatementExpression ReferenceType kernelModule Assignment RubyModule This MemberReference = MemberReference kernelModule kernelModule	0
MethodDeclaration Modifier ReferenceType selectCallSite FormalParameter FormalParameter ReturnStatement protected CallSite ReferenceType self ReferenceType receiver TernaryExpression IRubyObject IRubyObject BinaryOperation MemberReference MemberReference == MemberReference MemberReference variableCallAdapter normalCallAdapter receiver self	0
MethodDeclaration Modifier ReferenceType getCPath ReturnStatement public Colon3Node MemberReference cpath	0
MethodDeclaration Modifier Annotation BasicType isNative ReturnStatement public Override boolean Literal true	0
MethodDeclaration Modifier setValue FormalParameter StatementExpression public ReferenceType value Assignment Object This MemberReference = MemberReference value value	0
MethodDeclaration Modifier declareClassVariable FormalParameter StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression public ReferenceType name MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation String loadThreadContext method swap loadRuntime method swap loadSelf method swap method MemberReference ldc method swap Literal MethodInvocation invokeUtilityMethod name "fastDeclareClassVariable" ClassReference MethodInvocation sig ReferenceType ClassReference ClassReference ClassReference ClassReference ClassReference params IRubyObject ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ThreadContext Ruby IRubyObject String IRubyObject	0
MethodDeclaration Modifier Annotation ReferenceType check FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType regex MethodInvocation name Literal required Literal IRubyObject MemberReference Literal Literal Literal scan "check" 1 regex false true true	0
MethodDeclaration Modifier ReferenceType subpat19 FormalParameter FormalParameter FormalParameter FormalParameter IfStatement ReturnStatement private IRubyObject ReferenceType runtime ReferenceType context ReferenceType regex ReferenceType backref BinaryOperation BlockStatement MethodInvocation Ruby ThreadContext RubyRegexp IRubyObject >= MethodInvocation Literal LocalVariableDeclaration ReturnStatement runtime getNil regex MemberReference This Literal Literal search19 0 ReferenceType VariableDeclarator MethodInvocation context 0 false RubyMatchData match Cast RubyRegexp MethodInvocation MethodInvocation nth_match ReferenceType MethodInvocation match MemberReference backrefNumber context MethodInvocation getCurrentScope RubyMatchData context MethodInvocation getCurrentScope backref MemberReference getBackRef MemberReference getBackRef runtime runtime	0
MethodDeclaration Modifier Annotation ReferenceType bind FormalParameter FormalParameter FormalParameter LocalVariableDeclaration TryStatement public JRubyMethod IRubyObject ReferenceType context ReferenceType host ReferenceType port ReferenceType VariableDeclarator IfStatement StatementExpression ReturnStatement CatchClause CatchClause CatchClause ThreadContext IRubyObject IRubyObject InetSocketAddress addr Literal BinaryOperation BlockStatement BlockStatement Cast MethodInvocation CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement CatchClauseParameter IfStatement null || MethodInvocation BinaryOperation StatementExpression StatementExpression ReferenceType This RubyFixnum MethodInvocation zero UnknownHostException e MethodInvocation SocketException e MethodInvocation Error e BinaryOperation BlockStatement BlockStatement host isNil && BinaryOperation Cast Assignment Assignment DatagramChannel MethodInvocation context getRuntime MethodInvocation Literal sockerr MethodInvocation Literal sockerr instanceof MethodInvocation ReferenceType ThrowStatement ThrowStatement instanceof MemberReference ReferenceType ReferenceType MemberReference MemberReference ClassCreator = MemberReference ClassCreator = getChannel context getRuntime "bind: name or service not known" context getRuntime "bind: name or service not known" e getCause SocketException MethodInvocation MemberReference host RubyString RubyString host addr ReferenceType MethodInvocation addr ReferenceType MethodInvocation MethodInvocation MethodInvocation Literal sockerr e InetSocketAddress RubyNumeric MemberReference fix2int InetSocketAddress InetAddress MethodInvocation getByName RubyNumeric MemberReference fix2int context getRuntime "bind: name or service not known" port host MethodInvocation convertToString port toString	1
MethodDeclaration Modifier Annotation ReferenceType even_p IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair RubyBoolean BinaryOperation BlockStatement MethodInvocation name ElementArrayValue compat MemberReference == BinaryOperation Literal ReturnStatement MethodInvocation getRuntime Literal CompatVersion RUBY1_9 % MemberReference Literal 0 MethodInvocation getFalse "even?" value 2 MethodInvocation getRuntime getTrue	1
MethodDeclaration Modifier closeForFinalize TryStatement private StatementExpression CatchClause CatchClause MethodInvocation CatchClauseParameter CatchClauseParameter Literal close BadDescriptorException ex IOException ex true	1
MethodDeclaration Modifier Annotation BasicType hashCode ReturnStatement public Override int MemberReference value	0
MethodDeclaration Modifier ReferenceType replaceInternal FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression IfStatement IfStatement StatementExpression ReturnStatement private IRubyObject BasicType beg BasicType len ReferenceType repl BasicType VariableDeclarator BinaryOperation StatementExpression ReferenceType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator MethodInvocation BinaryOperation BlockStatement BinaryOperation StatementExpression Assignment MethodInvocation int int RubyString int oldLength MemberReference >= BinaryOperation MemberReference Assignment ByteList replBytes MemberReference int replLength MemberReference int newLength BinaryOperation byte oldBytes MemberReference int oldBegin MemberReference MemberReference modify != MemberReference MemberReference StatementExpression > MemberReference Literal MethodInvocation MemberReference MemberReference = MemberReference infectBy value realSize + MemberReference MemberReference oldLength MemberReference BinaryOperation = repl value replBytes realSize - BinaryOperation MemberReference value bytes value begin newLength replLength len MethodInvocation replLength 0 System MemberReference MemberReference MemberReference MemberReference MemberReference arraycopy value realSize newLength repl beg len len - MemberReference MemberReference + MemberReference MemberReference len System MemberReference BinaryOperation MemberReference BinaryOperation BinaryOperation arraycopy replBytes bytes replBytes begin value bytes beg replLength oldLength beg oldLength replLength oldBytes + BinaryOperation MemberReference value bytes + MemberReference MemberReference - MemberReference BinaryOperation + MemberReference MemberReference len beg replLength oldLength + MemberReference MemberReference oldBegin beg beg len	1
MethodDeclaration Modifier ReferenceType cacheAndCall FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement StatementExpression StatementExpression ReturnStatement protected IRubyObject ReferenceType caller ReferenceType selfType ReferenceType args ReferenceType context ReferenceType self ReferenceType name ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation BlockStatement Assignment Assignment MethodInvocation IRubyObject RubyClass IRubyObject ThreadContext IRubyObject String CacheEntry entry TernaryExpression DynamicMethod method MemberReference MemberReference MemberReference methodMissing ReturnStatement MemberReference MemberReference = MemberReference MemberReference = method MemberReference MemberReference MemberReference MemberReference MemberReference call BinaryOperation MethodInvocation MemberReference entry method method caller MethodInvocation lastName name cache entry context self selfType name args != MemberReference Literal selfType MemberReference searchWithCache CacheEntry NULL_CACHE MemberReference MemberReference MemberReference MemberReference MemberReference callMethodMissing selfType null name context self name method args	0
MethodDeclaration Modifier BasicType valueEquals FormalParameter FormalParameter IfStatement protected boolean ReferenceType value1 ReferenceType value2 BinaryOperation ReturnStatement ReturnStatement Object Object == MemberReference Literal BinaryOperation MethodInvocation value1 null == MemberReference Literal value1 MemberReference equals value2 null value2	1
MethodDeclaration Modifier d2f StatementExpression public MethodInvocation MethodInvocation getMethodVisitor MemberReference visitInsn D2F	0
MethodDeclaration Modifier ReferenceType getContextVariables FormalParameter ReturnStatement protected final Map TypeArgument TypeArgument ReferenceType context MethodInvocation ReferenceType ReferenceType ThreadContext MethodInvocation MemberReference getExecutionContext Object IRubyObject getContextVariables context	0
MethodDeclaration Modifier ReferenceType case204_line829 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support MethodInvocation Literal getOperatorCallNode support Cast Literal Cast MethodInvocation getOperatorCallNode "-@" ReferenceType MemberReference "**" ReferenceType MemberReference getPosition FloatNode ArraySelector yyVals Node ArraySelector yyVals BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference - 2 yyTop 0 yyTop	1
MethodDeclaration Modifier ReferenceType scoping ReturnStatement final public Scoping MemberReference scoping	0
MethodDeclaration Modifier ReferenceType newFrozenError FormalParameter ReturnStatement public RaiseException ReferenceType objectType MethodInvocation String TernaryExpression BinaryOperation newRaiseException MethodInvocation MethodInvocation MethodInvocation + Literal MemberReference is1_9 getRuntimeError getTypeError "can't modify frozen " objectType	1
MethodDeclaration Modifier Annotation BasicType exitValue ReturnStatement public Override int MethodInvocation child exitValue	0
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType args ReferenceType block MethodInvocation MethodInvocation ThreadContext IRubyObject RubyModule String IRubyObject Block arity MethodInvocation MemberReference checkArity functionInvoker MethodInvocation MemberReference MemberReference invoke context getRuntime args context getRuntime function dummyBuffer	0
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType arg1 ReferenceType arg2 MethodInvocation ThreadContext IRubyObject RubyModule String IRubyObject IRubyObject MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference call context self clazz name arg1 arg2 Block NULL_BLOCK	0
MethodDeclaration Modifier Annotation ReferenceType index FormalParameter FormalParameter LocalVariableDeclaration IfStatement ForStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType block ReferenceType VariableDeclarator MethodInvocation ReturnStatement ForControl BlockStatement MethodInvocation name ElementArrayValue frame Literal ThreadContext Block Ruby runtime MethodInvocation ! block isGiven MethodInvocation VariableDeclaration BinaryOperation MemberReference IfStatement runtime getNil Literal Literal true context getRuntime MemberReference This Literal enumeratorize BasicType VariableDeclarator < MemberReference BinaryOperation ++ i MethodInvocation ReturnStatement "index" "find_index" runtime "index" int i MemberReference i + MemberReference MemberReference block MethodInvocation MemberReference MemberReference yield MethodInvocation begin begin realLength isTrue context ArraySelector values runtime BinaryOperation newFixnum MemberReference - MemberReference MemberReference i i begin	1
MethodDeclaration Modifier compileLocalAsgn FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement public ReferenceType node ReferenceType context BasicType expr Modifier ReferenceType VariableDeclarator MethodInvocation BlockStatement BlockStatement Node BodyCompiler boolean final LocalAsgnNode localAsgnNode Cast ASTInspector.PRAGMAS MethodInvocation contains IfStatement LocalVariableDeclaration StatementExpression ReferenceType MemberReference localAsgnNode getName MemberReference StatementExpression ReferenceType VariableDeclarator MethodInvocation LocalAsgnNode node expr MethodInvocation CompilerCallback value ClassCreator context MethodInvocation getVariableCompiler context loadNil ReferenceType MethodDeclaration MethodInvocation MethodInvocation MemberReference MemberReference assignLocalVariable CompilerCallback Modifier call FormalParameter StatementExpression localAsgnNode getIndex localAsgnNode getDepth value expr public ReferenceType context MethodInvocation BodyCompiler MethodInvocation MemberReference Literal compile localAsgnNode getValueNode context true	1
MethodDeclaration Modifier ReferenceType with_object_common FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement StatementExpression ReturnStatement private static IRubyObject ReferenceType context ReferenceType self Modifier ReferenceType arg Modifier ReferenceType block Modifier ReferenceType rubyMethodName Modifier ReferenceType VariableDeclarator MethodInvocation ReturnStatement MethodInvocation MemberReference ThreadContext IRubyObject final IRubyObject final Block final String final Ruby runtime MethodInvocation ! block isGiven MethodInvocation RubyEnumerable MemberReference MemberReference MemberReference ClassCreator callEach arg context getRuntime MemberReference MemberReference MemberReference MemberReference enumeratorize runtime context self ReferenceType MethodDeclaration runtime self rubyMethodName arg BlockCallback Modifier ReferenceType call FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public IRubyObject ReferenceType ctx ReferenceType largs ReferenceType blk MethodInvocation MethodInvocation ThreadContext IRubyObject Block block MemberReference ArrayCreator call runtime getNil ctx ReferenceType ArrayInitializer IRubyObject MethodInvocation runtime MemberReference MemberReference newArray ArraySelector largs arg Literal 0	1
MethodDeclaration put FormalParameter FormalParameter FormalParameter StatementExpression TryStatement ReferenceType object BasicType hash ReferenceType proxy MethodInvocation StatementExpression LocalVariableDeclaration LocalVariableDeclaration IfStatement LocalVariableDeclaration LocalVariableDeclaration ForStatement StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression Object int T lock MethodInvocation ReferenceType VariableDeclarator BasicType VariableDeclarator BinaryOperation BlockStatement BlockStatement BasicType VariableDeclarator ReferenceType VariableDeclarator ForControl BlockStatement Assignment Assignment Assignment Assignment MethodInvocation expunge Entry TypeArgument table int potentialNewSize > Assignment MemberReference StatementExpression StatementExpression int index Entry TypeArgument e Assignment BinaryOperation Assignment IfStatement MemberReference ClassCreator = MemberReference MemberReference = MemberReference MemberReference = MemberReference MemberReference = unlock ReferenceType MemberReference BinaryOperation = threshold Assignment Assignment ReferenceType MemberReference MemberReference = != MemberReference Literal MemberReference MemberReference = BinaryOperation BlockStatement e ReferenceType MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference ArraySelector table e tableSize potentialNewSize entryTable table T potentialNewSize + MemberReference Literal MemberReference MethodInvocation = MemberReference MemberReference = T e ArraySelector table e null e e next && BinaryOperation BinaryOperation IfStatement StatementExpression StatementExpression BreakStatement Entry TypeArgument object hash proxy cache referenceType ArraySelector table referenceQueue MemberReference tableSize 1 table rehash table entryTable Assignment == MemberReference MemberReference == MemberReference MethodInvocation BinaryOperation ReturnStatement MethodInvocation MemberReference ReferenceType MemberReference index MemberReference BinaryOperation = hash e hash object e.objectRef get == MemberReference MethodInvocation MemberReference MemberReference MemberReference remove -- potentialNewSize T index index & MemberReference BinaryOperation proxy e.proxyRef get table hash e hash - MemberReference Literal table length 1	1
MethodDeclaration Modifier ReferenceType allocate FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType runtime ReferenceType klass ClassCreator Ruby RubyClass ReferenceType MemberReference MemberReference RubyIO runtime klass	0
MethodDeclaration Modifier checkLength FormalParameter IfStatement IfStatement private final BasicType length BinaryOperation BlockStatement BinaryOperation BlockStatement long < MemberReference Literal ThrowStatement >= MemberReference MemberReference ThrowStatement length 0 MethodInvocation length Integer MAX_VALUE MethodInvocation MethodInvocation getRuntime MethodInvocation getRuntime Literal newArgumentError Literal newArgumentError "negative array size (or size too big)" "array size too big"	1
MethodDeclaration Modifier ReferenceType get FormalParameter FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType runtime ReferenceType array BasicType i MethodInvocation Ruby Object int MemberReference Cast convert runtime ReferenceType MemberReference Integer array	0
MethodDeclaration Modifier Annotation ReferenceType getnameinfo FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement LocalVariableDeclaration TryStatement IfStatement IfStatement ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType args ReferenceType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator VariableDeclarator BinaryOperation BlockStatement IfStatement ReferenceType VariableDeclarator StatementExpression CatchClause BinaryOperation BlockStatement BlockStatement BinaryOperation BlockStatement MethodInvocation required Literal optional Literal meta Literal ThreadContext IRubyObject IRubyObject Ruby runtime MethodInvocation int argc MethodInvocation int flags TernaryExpression IRubyObject arg0 MemberReference String host port instanceof MemberReference ReferenceType LocalVariableDeclaration LocalVariableDeclaration IfStatement StatementExpression StatementExpression BinaryOperation BlockStatement BlockStatement InetAddress addr Assignment CatchClauseParameter ThrowStatement == BinaryOperation Literal StatementExpression StatementExpression == BinaryOperation Literal LocalVariableDeclaration IfStatement runtime MethodInvocation MethodInvocation newArray 1 1 true context getRuntime Arity MemberReference MemberReference Literal Literal checkArgumentCount BinaryOperation MethodInvocation Literal ArraySelector args arg0 RubyArray ReferenceType VariableDeclarator BasicType VariableDeclarator BinaryOperation BlockStatement Assignment Assignment instanceof MemberReference ReferenceType LocalVariableDeclaration LocalVariableDeclaration IfStatement ThrowStatement MemberReference MethodInvocation = UnknownHostException e MethodInvocation & MemberReference MethodInvocation 0 Assignment Assignment & MemberReference MethodInvocation 0 ReferenceType VariableDeclarator BinaryOperation BlockStatement runtime MemberReference newString runtime MemberReference newString runtime args 1 2 == MemberReference Literal RubyNumeric MemberReference num2int 0 Literal List list Cast int len MethodInvocation || BinaryOperation BinaryOperation ThrowStatement MemberReference MethodInvocation = MemberReference MethodInvocation = arg0 RubyString ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation BlockStatement IfStatement MethodInvocation addr InetAddress MemberReference getByName MemberReference BinaryOperation sockerr flags NI_NUMERICHOST value MemberReference MethodInvocation = MemberReference MethodInvocation = flags NI_NUMERICSERV value String serv MethodInvocation != MemberReference Literal StatementExpression host port argc 2 ArraySelector args 0 ReferenceType MemberReference list size < MemberReference Literal > MemberReference Literal MethodInvocation host list MethodInvocation Literal get port list MethodInvocation Literal get String arg Cast Matcher m MethodInvocation ! m matches LocalVariableDeclaration IfStatement BinaryOperation BlockStatement runtime Literal newArgumentError host runtime + Literal MemberReference host addr getCanonicalHostName host addr getHostAddress IANA.portToService MethodInvocation get serv null Assignment Literal RubyArray arg0 len 3 len 4 runtime BinaryOperation newArgumentError toString 2 toString 1 ReferenceType MemberReference STRING_ADDRESS_PATTERN MemberReference matcher ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement || BinaryOperation BinaryOperation ThrowStatement "invalid args" "unknown host: " host Integer MemberReference parseInt MemberReference MethodInvocation = 1 + BinaryOperation Literal RubyString arg0 arg IRubyObject obj MethodInvocation instanceof MemberReference ReferenceType LocalVariableDeclaration LocalVariableDeclaration IfStatement StatementExpression StatementExpression ThrowStatement || BinaryOperation BinaryOperation == MethodInvocation Literal MethodInvocation port port serv Literal MethodInvocation substring + Literal MemberReference " given" MemberReference MemberReference MemberReference unpack_sockaddr_in obj RubyArray ReferenceType VariableDeclarator BasicType VariableDeclarator BinaryOperation BlockStatement Assignment Assignment MethodInvocation || BinaryOperation BinaryOperation == Assignment Literal port length 0 runtime Literal newArgumentError 0 serv Literal indexOf "array size should be 3 or 4, " len context recv arg0 List list Cast int len MethodInvocation != MemberReference Literal ThrowStatement MemberReference MethodInvocation = MemberReference MethodInvocation = runtime Literal newArgumentError == Assignment Literal == MethodInvocation Literal MemberReference MethodInvocation = null "invalid address string" '/' ReferenceType MemberReference list size len 2 MethodInvocation host list MethodInvocation Literal get port list MethodInvocation Literal get "invalid address string" MemberReference MethodInvocation = null host length 0 port m MemberReference group RubyArray obj runtime Literal newArgumentError toString 1 toString 0 host m MemberReference group PORT_GROUP "invalid address representation" HOST_GROUP	1
MethodDeclaration Modifier Annotation ReferenceType upcase FormalParameter LocalVariableDeclaration ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType VariableDeclarator MethodInvocation name Literal compat MemberReference ThreadContext Ruby runtime MethodInvocation MemberReference MethodInvocation newSymbol "upcase" CompatVersion RUBY1_9 context getRuntime runtime MethodInvocation MethodInvocation MemberReference newShared MemberReference upcase19 toString runtime context	0
MethodDeclaration Modifier ReferenceType getReceiverNode ReturnStatement public Node MemberReference receiverNode	0
MethodDeclaration Modifier Annotation ReferenceType open FormalParameter FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType path MethodInvocation meta Literal ThreadContext IRubyObject IRubyObject RuntimeHelpers MemberReference MemberReference Literal MemberReference invoke true context recv "new" path	0
MethodDeclaration Modifier Annotation ReferenceType on_start FormalParameter FormalParameter LocalVariableDeclaration SynchronizedStatement ReturnStatement static public JRubyMethod IRubyObject ReferenceType recv ReferenceType block ReferenceType VariableDeclarator MemberReference StatementExpression MemberReference IRubyObject Block JRubyApplet applet Cast applet Assignment recv ReferenceType MethodInvocation MemberReference MethodInvocation = JRubyApplet JavaEmbedUtils MemberReference rubyToJava applet startProc MemberReference MemberReference blockToProc recv applet runtime block	1
MethodDeclaration Modifier ReferenceType getUnsafe ReturnStatement static public Unsafe MemberReference unsafe	0
MethodDeclaration Modifier ReferenceType childNodes ReturnStatement public List TypeArgument MemberReference ReferenceType EMPTY_LIST Node	0
MethodDeclaration Modifier setMethodVisitor FormalParameter IfStatement public ReferenceType mv MemberReference BlockStatement BlockStatement MethodVisitor DEBUG StatementExpression StatementExpression Assignment Assignment This ClassCreator = This MemberReference = MemberReference ReferenceType MemberReference MemberReference mv method TraceMethodVisitor mv method	0
MethodDeclaration Modifier ReferenceType setupBlockArgs FormalParameter FormalParameter FormalParameter SwitchStatement protected IRubyObject ReferenceType context ReferenceType value ReferenceType self MemberReference SwitchStatementCase SwitchStatementCase SwitchStatementCase ThreadContext IRubyObject IRubyObject argumentType ZERO_ARGS ReturnStatement MULTIPLE_ASSIGNMENT SINGLE_RESTARG ReturnStatement ReturnStatement Literal MemberReference MethodInvocation null value MethodInvocation MemberReference defaultArgsLogic context getRuntime value	0
MethodDeclaration Modifier BasicType shouldTrySearch FormalParameter ReturnStatement public boolean ReferenceType state Literal SearchState true	0
MethodDeclaration Modifier ReferenceType getDigestHexString ReturnStatement private IRubyObject MethodInvocation RubyString MethodInvocation MethodInvocation newStringNoCopy getRuntime getDigestHex	0
MethodDeclaration Modifier Annotation ReferenceType reverse StatementExpression LocalVariableDeclaration IfStatement StatementExpression ReturnStatement public JRubyMethod ElementValuePair IRubyObject MethodInvocation Modifier ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement Assignment MemberReference name Literal modify final RubyArray dup > MemberReference Literal StatementExpression StatementExpression MemberReference BinaryOperation |= dup "reverse" realLength 1 Assignment Assignment dup flags & MemberReference MemberReference MemberReference MethodInvocation = MemberReference ClassCreator = flags TAINTED_F dup safeReverse dup ReferenceType MethodInvocation MethodInvocation This RubyArray getRuntime getMetaClass	0
MethodDeclaration Modifier get FormalParameter FormalParameter FormalParameter FormalParameter ThrowStatement final public BasicType offset BasicType dst BasicType off BasicType len MethodInvocation long int int int ex	0
MethodDeclaration Modifier ReferenceType listIterator ReturnStatement public ListIterator ClassCreator ReferenceType RubyArrayConversionListIterator	0
MethodDeclaration Modifier beginChainedMethod StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression IfStatement StatementExpression public MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation BinaryOperation BlockStatement MethodInvocation method start method MemberReference aload method MethodInvocation Literal MethodInvocation invokevirtual method MethodInvocation astore method MethodInvocation aload method MethodInvocation Literal MethodInvocation invokevirtual method MethodInvocation astore method MemberReference aload method MethodInvocation Literal MethodInvocation invokevirtual method MethodInvocation astore > MethodInvocation Literal StatementExpression StatementExpression StatementExpression method MemberReference label StandardASMCompiler THREADCONTEXT_INDEX ClassReference p "getRuntime" ClassReference sig getRuntimeIndex getRuntimeIndex ClassReference p "getNil" ClassReference sig getNilIndex StandardASMCompiler THREADCONTEXT_INDEX ClassReference p "getCurrentScope" ClassReference sig getDynamicScopeIndex scope getNumberOfVariables 4 MethodInvocation MethodInvocation MethodInvocation scopeStart ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType method MethodInvocation aload method MethodInvocation Literal MethodInvocation invokevirtual method MethodInvocation astore ThreadContext Ruby Ruby IRubyObject ThreadContext DynamicScope getDynamicScopeIndex ClassReference p "getValues" ClassReference sig getVarsArrayIndex ReferenceType ReferenceType DynamicScope IRubyObject	1
MethodDeclaration Modifier checkDir IfStatement StatementExpression IfStatement private final BinaryOperation ThrowStatement MethodInvocation MemberReference ThrowStatement && MethodInvocation BinaryOperation MethodInvocation Literal testFrozen ! isOpen MethodInvocation ! isTaint >= MethodInvocation Literal MethodInvocation getRuntime "Dir" MethodInvocation getRuntime MethodInvocation getRuntime 4 Literal newSecurityError Literal newIOError getSafeLevel "Insecure: operation on untainted Dir" "closed directory"	1
MethodDeclaration Modifier Annotation ReferenceType name ReturnStatement public JRubyMethod ElementValuePair RubyString MethodInvocation name ElementArrayValue MethodInvocation getRuntime Literal Literal MethodInvocation newString "name" "to_s" MethodInvocation javaClass getName	0
MethodDeclaration Modifier BasicType read IOException LocalVariableDeclaration LocalVariableDeclaration IfStatement ReturnStatement public int ReferenceType VariableDeclarator BasicType VariableDeclarator MethodInvocation BlockStatement MemberReference IRubyObject readValue MethodInvocation int returnValue Literal ! readValue isNil StatementExpression returnValue readAdapter MethodInvocation MemberReference MemberReference MemberReference call - 1 Assignment io MethodInvocation getRuntime io io numOne MemberReference MethodInvocation = getCurrentContext returnValue readValue MethodInvocation toString Literal charAt 0	0
MethodDeclaration Modifier ReferenceType detectMimeString FormalParameter FormalParameter IfStatement IfStatement IfStatement IfStatement LocalVariableDeclaration IfStatement LocalVariableDeclaration IfStatement LocalVariableDeclaration StatementExpression IfStatement LocalVariableDeclaration SwitchStatement private static NKFCharset ReferenceType str ReferenceType options BinaryOperation ReturnStatement BinaryOperation ReturnStatement MethodInvocation ReturnStatement MethodInvocation ReturnStatement BasicType VariableDeclarator BinaryOperation ReturnStatement ReferenceType VariableDeclarator BinaryOperation BlockStatement IfStatement BasicType VariableDeclarator Assignment BinaryOperation ReturnStatement BasicType VariableDeclarator MemberReference SwitchStatementCase SwitchStatementCase SwitchStatementCase ByteList Map TypeArgument TypeArgument <= MethodInvocation Literal MemberReference == MethodInvocation MemberReference MemberReference ! str MemberReference startsWith MemberReference ! str MemberReference endsWith MemberReference int pos MethodInvocation < MemberReference Literal MemberReference ByteList charset ClassCreator == MethodInvocation Literal StatementExpression BinaryOperation BlockStatement IfStatement int prev MemberReference MemberReference MethodInvocation = < MemberReference Literal MemberReference char encode MethodInvocation encode Literal Literal ReturnStatement Literal Literal ReturnStatement ReturnStatement ReferenceType ReferenceType str length 6 NOCONV options Literal get NOCONV NOCONV BEGIN_MIME_STRING NOCONV END_MIME_STRING NOCONV str Literal Literal indexOf pos 0 NOCONV ReferenceType MemberReference Literal BinaryOperation charset MemberReference caseInsensitiveCmp 0 MethodInvocation == MethodInvocation Literal StatementExpression BinaryOperation BlockStatement BlockStatement pos pos str Literal BinaryOperation indexOf pos 0 NOCONV str BinaryOperation charAt 'q' 'Q' MemberReference 'b' 'B' MemberReference MemberReference String NKFCharset "mime-decode" '?' 3 ByteList str 2 - MemberReference Literal MIME_UTF8 options Literal MemberReference put charset MemberReference caseInsensitiveCmp 0 MethodInvocation == MethodInvocation Literal StatementExpression StatementExpression '?' + MemberReference Literal - MemberReference Literal QENCODE BASE64 NOCONV pos 2 "input" UTF8 MIME_JIS options Literal MemberReference put charset MemberReference caseInsensitiveCmp 0 MethodInvocation MethodInvocation pos 1 pos 1 "input" JIS MIME_EUC_JP options Literal MemberReference put options Literal MemberReference put "input" EUC "input" ASCII	1
MethodDeclaration Modifier loadUnboxedArgument FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression static public ReferenceType m BasicType index ReferenceType type MethodInvocation MethodInvocation SkinnyMethodAdapter int Class m MemberReference aload MemberReference MemberReference unboxAndCast index m type	0
MethodDeclaration Modifier issueRedoEvent IfStatement public BinaryOperation BlockStatement IfStatement != MemberReference Literal StatementExpression MemberReference BlockStatement BlockStatement currentLoopLabels null MethodInvocation inNestedMethod StatementExpression StatementExpression StatementExpression issueLoopRedo MethodInvocation MethodInvocation MethodInvocation Literal MethodInvocation invokeUtilityMethod loadRuntime Literal MethodInvocation invokeUtilityMethod "redoJump" ClassReference sig "redoLocalJumpError" ClassReference ClassReference sig ReferenceType ReferenceType ReferenceType IRubyObject IRubyObject Ruby	0
MethodDeclaration Modifier BasicType isGiven ReturnStatement public final boolean BinaryOperation != This MemberReference NULL_BLOCK	1
MethodDeclaration Modifier BasicType sprintf FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement static public boolean ReferenceType runtime ReferenceType to ReferenceType format BasicType arg MethodInvocation Ruby ByteList CharSequence int MemberReference MemberReference ClassCreator rubySprintf to format ReferenceType MemberReference Cast Args runtime BasicType MemberReference long arg	0
MethodDeclaration Modifier buildArrayArguments FormalParameter FormalParameter FormalParameter StatementExpression public ReferenceType args ReferenceType node ReferenceType s MethodInvocation List TypeArgument Node IR_Scope args MethodInvocation add ReferenceType MemberReference MemberReference buildArray Operand node s	1
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType context ReferenceType args MethodInvocation ThreadContext IRubyObject body MemberReference MemberReference MemberReference MemberReference call context args binding type	0
MethodDeclaration Modifier Annotation Annotation ReferenceType divmod FormalParameter FormalParameter IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair Override IRubyObject ReferenceType context ReferenceType other BinaryOperation BlockStatement MethodInvocation name Literal compat MemberReference ThreadContext IRubyObject instanceof MemberReference ReferenceType ReturnStatement MemberReference Literal MemberReference coerceBin "divmod" CompatVersion RUBY1_8 other RubyFixnum MethodInvocation context "divmod" other MemberReference MemberReference divmodFixnum context other	0
MethodDeclaration Modifier setVariables FormalParameter AssertStatement StatementExpression StatementExpression StatementExpression public ReferenceType names BinaryOperation Literal Assignment MethodInvocation Assignment String != MemberReference Literal "names is not null" MemberReference ArrayCreator = System MemberReference Literal MemberReference Literal MemberReference arraycopy MemberReference ArrayCreator = names null variableNames ReferenceType MemberReference names 0 variableNames 0 names length variableCaptured BasicType MemberReference String names length boolean variableNames length	1
MethodDeclaration Modifier BasicType shouldTrySearch FormalParameter ReturnStatement public boolean ReferenceType state BinaryOperation SearchState == MemberReference Literal state library null	0
MethodDeclaration Modifier fputc FormalParameter IOException BadDescriptorException StatementExpression synchronized public BasicType c MethodInvocation int MemberReference bufferedWrite c	0
MethodDeclaration Modifier setName FormalParameter StatementExpression public ReferenceType name Assignment String This MemberReference = MemberReference name name	0
MethodDeclaration Modifier popclass StatementExpression public MethodInvocation clsStack pop	0
MethodDeclaration Modifier ReferenceType case337_line1247 FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment Assignment MemberReference Object Object int MemberReference ClassCreator = MemberReference Literal = yyVal yyVal ReferenceType MethodInvocation lexer commandStart true ZeroArgNode Cast getPosition ReferenceType MemberReference Token ArraySelector yyVals BinaryOperation + Literal MemberReference 0 yyTop	1
MethodDeclaration Modifier ReferenceType case418_line1568 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference ClassCreator = yyVal yyVal ReferenceType Literal MemberReference Cast Token "true" Tokens kTRUE ReferenceType MemberReference Token ArraySelector yyVals BinaryOperation + Literal MemberReference 0 yyTop	1
MethodDeclaration Modifier Annotation ReferenceType op_pow_19 FormalParameter FormalParameter IfStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType other BinaryOperation BlockStatement BlockStatement name Literal compat MemberReference ThreadContext IRubyObject instanceof MemberReference ReferenceType ReturnStatement ReturnStatement "**" CompatVersion RUBY1_9 other RubyFixnum MethodInvocation MethodInvocation MemberReference MemberReference powerFixnum19 MemberReference MemberReference powerOther19 context other context other	1
MethodDeclaration Modifier postMethodBacktraceDummyScope StatementExpression StatementExpression StatementExpression public MethodInvocation MethodInvocation MethodInvocation popFrame popRubyClass popScope	0
MethodDeclaration Modifier ReferenceType newNotImplementedError FormalParameter ReturnStatement public RaiseException ReferenceType message MethodInvocation String MethodInvocation MemberReference newRaiseException getNotImplementedError message	0
MethodDeclaration Modifier load FormalParameter FormalParameter LocalVariableDeclaration StatementExpression public ReferenceType runtime BasicType wrap ReferenceType VariableDeclarator MethodInvocation Ruby boolean RubyClass ioClass MethodInvocation ioClass ClassReference defineAnnotatedMethods runtime getIO ReferenceType IOWaitLibrary	0
MethodDeclaration Modifier ReferenceType receiveTrueObj FormalParameter ReturnStatement public Boolean ReferenceType t MethodInvocation Boolean vri MemberReference receiveTrueObj t	0
MethodDeclaration Modifier ReferenceType procArityOf FormalParameter IfStatement IfStatement ThrowStatement static public Arity ReferenceType node BinaryOperation BlockStatement BinaryOperation BlockStatement IfStatement ClassCreator Node && BinaryOperation BinaryOperation StatementExpression == MemberReference Literal ReturnStatement BinaryOperation BlockStatement IfStatement ReferenceType BinaryOperation instanceof MemberReference ReferenceType != MemberReference Literal Assignment node null MethodInvocation instanceof MemberReference ReferenceType ReturnStatement BinaryOperation BlockStatement IfStatement Error + BinaryOperation MethodInvocation node AttrAssignNode node null MemberReference Cast = Arity optional node IArityNode Cast instanceof MemberReference ReferenceType ReturnStatement BinaryOperation BlockStatement IfStatement + BinaryOperation Literal node getPosition node ReferenceType MemberReference ReferenceType MemberReference node CallNode MethodInvocation instanceof MemberReference ReferenceType ReturnStatement BinaryOperation BlockStatement + Literal MethodInvocation " at " AttrAssignNode node IArityNode node Arity singleArgument node ArrayNode MethodInvocation instanceof MemberReference ReferenceType ReturnStatement "unexpected type " node getClass Arity singleArgument node ArgsNode Cast ReferenceType MemberReference ArgsNode node	1
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter IfStatement ReturnStatement public Override IRubyObject ReferenceType context ReferenceType caller ReferenceType self ReferenceType arg BinaryOperation BlockStatement SuperMethodInvocation ThreadContext IRubyObject IRubyObject IRubyObject == MethodInvocation MethodInvocation ReturnStatement MemberReference MemberReference MemberReference MemberReference call self getMetaClass context MethodInvocation getRuntime Cast context caller self arg getArray ReferenceType MemberReference RubyArray self	0
MethodDeclaration Modifier Annotation ReferenceType readline FormalParameter LocalVariableDeclaration IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType VariableDeclarator MethodInvocation ThrowStatement MemberReference name Literal writes MemberReference ThreadContext IRubyObject line MethodInvocation line isNil MethodInvocation line "readline" FrameField LASTLINE MemberReference gets context MethodInvocation getRuntime context newEOFError	1
MethodDeclaration Modifier BasicType getArity SwitchStatement public int MethodInvocation SwitchStatementCase SwitchStatementCase SwitchStatementCase node getNodeType ARGSCATNODE ARGSPUSHNODE SPLATNODE ReturnStatement ARRAYNODE LocalVariableDeclaration IfStatement ReturnStatement Literal ReferenceType VariableDeclarator BinaryOperation BlockStatement IfStatement Literal - 1 ArrayNode arrayNode Cast == MethodInvocation Literal ReturnStatement BinaryOperation BlockStatement BlockStatement 1 ReferenceType MemberReference arrayNode size 0 Literal > MethodInvocation Literal ReturnStatement ReturnStatement ArrayNode node 0 arrayNode size 3 Literal Cast - 1 ReferenceType MemberReference ArrayNode node	0
MethodDeclaration Modifier Annotation ReferenceType getLocalScope ReturnStatement public Override StaticScope This	0
MethodDeclaration Modifier ReferenceType verifyAccessor FormalParameter LocalVariableDeclaration IfStatement ReturnStatement private RubyClass ReferenceType ReferenceType cls ReferenceType VariableDeclarator BinaryOperation BlockStatement MemberReference VariableAccessor RubyClass RubyClass ReferenceType localAccessor MemberReference != MethodInvocation MethodInvocation StatementExpression StatementExpression localAccessor VariableAccessor accessor localAccessor getClassId cls hashCode Assignment Assignment MemberReference MethodInvocation = MemberReference MemberReference = localAccessor cls MemberReference getVariableAccessorForWrite accessor localAccessor variableName	0
MethodDeclaration Modifier preLoad FormalParameter FormalParameter LocalVariableDeclaration StatementExpression LocalVariableDeclaration StatementExpression static public ReferenceType context ReferenceType varNames ReferenceType VariableDeclarator MethodInvocation ReferenceType VariableDeclarator MethodInvocation ThreadContext String StaticScope staticScope ClassCreator staticScope MethodInvocation setModule DynamicScope scope MethodInvocation context MemberReference preScopedBody ReferenceType Literal MemberReference context MethodInvocation getRuntime DynamicScope MemberReference newDynamicScope scope LocalStaticScope null varNames getObject staticScope	0
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ThrowStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType args ReferenceType block MethodInvocation ThreadContext IRubyObject RubyModule String IRubyObject Block context MethodInvocation getRuntime BinaryOperation newTypeError + Literal MethodInvocation "can not extend final Java class: " c getCanonicalName	0
MethodDeclaration Modifier BasicType flushWrite FormalParameter IOException BadDescriptorException IfStatement LocalVariableDeclaration LocalVariableDeclaration StatementExpression IfStatement IfStatement StatementExpression ReturnStatement private boolean Modifier BasicType block BinaryOperation ReturnStatement BasicType VariableDeclarator BasicType VariableDeclarator MethodInvocation BinaryOperation BlockStatement BlockStatement BinaryOperation BlockStatement MethodInvocation Literal final boolean || BinaryOperation BinaryOperation Literal int len MethodInvocation int nWritten Literal buffer flip instanceof MethodInvocation ReferenceType LocalVariableDeclaration SynchronizedStatement StatementExpression != MemberReference MemberReference StatementExpression ReturnStatement buffer clear true || MemberReference MethodInvocation == MethodInvocation Literal false buffer position 0 descriptor getChannel SelectableChannel ReferenceType VariableDeclarator MethodInvocation LocalVariableDeclaration TryStatement Assignment nWritten len MethodInvocation Literal reading ! modes isWritable buffer position 0 SelectableChannel selectableChannel Cast selectableChannel blockingLock BasicType VariableDeclarator IfStatement StatementExpression IfStatement MemberReference MethodInvocation = buffer compact false ReferenceType MethodInvocation boolean oldBlocking MethodInvocation BinaryOperation BlockStatement Assignment BinaryOperation BlockStatement nWritten descriptor MemberReference write SelectableChannel descriptor getChannel selectableChannel isBlocking != MemberReference MemberReference StatementExpression MemberReference MethodInvocation = != MemberReference MemberReference StatementExpression buffer oldBlocking block MethodInvocation nWritten descriptor MemberReference write oldBlocking block MethodInvocation selectableChannel MemberReference configureBlocking buffer selectableChannel MemberReference configureBlocking block oldBlocking	1
MethodDeclaration Modifier BasicType contains FormalParameter ReturnStatement public boolean ReferenceType element BinaryOperation Object != MethodInvocation Literal MemberReference indexOf - 1 element	0
MethodDeclaration Modifier ReferenceType loadClass FormalParameter FormalParameter ClassNotFoundException IfStatement ReturnStatement synchronized protected Class ReferenceType name BasicType resolve MethodInvocation BlockStatement SuperMethodInvocation String boolean name Literal equals ReturnStatement MemberReference MemberReference loadClass "org.jruby.GiveMeAString" ClassReference name resolve ReferenceType String	1
MethodDeclaration Modifier Annotation prepare FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ThrowStatement public Override ReferenceType context ReferenceType runtime ReferenceType self ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 ReferenceType block MethodInvocation ThreadContext Ruby IRubyObject IRubyObject IRubyObject IRubyObject Block runtime Literal Literal newArgumentError 3 1	0
MethodDeclaration Modifier ReferenceType getStringPattern FormalParameter FormalParameter FormalParameter ReturnStatement private Regex ReferenceType runtime ReferenceType enc ReferenceType obj MethodInvocation Ruby Encoding IRubyObject RubyRegexp MemberReference MethodInvocation MemberReference Literal getQuotedRegexpFromCache runtime MemberReference MemberReference getStringForPattern enc 0 value obj	0
MethodDeclaration Modifier ReferenceType keySet ReturnStatement public Set ClassCreator ReferenceType MemberReference BaseSet KEY_VIEW	0
MethodDeclaration Modifier BasicType stringToDouble FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration WhileStatement LocalVariableDeclaration IfStatement LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression LocalVariableDeclaration WhileStatement IfStatement IfStatement IfStatement IfStatement IfStatement StatementExpression ReturnStatement private double BasicType nptr BasicType endptr BasicType VariableDeclarator BasicType VariableDeclarator VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator MethodInvocation BlockStatement BasicType VariableDeclarator BinaryOperation BlockStatement BasicType VariableDeclarator Assignment Assignment Assignment Assignment BasicType VariableDeclarator BinaryOperation BlockStatement MemberReference BlockStatement BinaryOperation BlockStatement BinaryOperation BlockStatement BinaryOperation BlockStatement BinaryOperation BlockStatement IfStatement Assignment BinaryOperation int int double num boolean got_dot got_digit long exponent int s MemberReference MemberReference isSpace StatementExpression int sign TernaryExpression && BinaryOperation BinaryOperation StatementExpression int saveFallback MemberReference MemberReference Literal = MemberReference Literal = MemberReference Literal = MemberReference Literal = int digits Literal < MemberReference MemberReference IfStatement StatementExpression ! got_digit IfStatement IfStatement ReturnStatement && BinaryOperation BinaryOperation StatementExpression LocalVariableDeclaration LocalVariableDeclaration TryStatement IfStatement StatementExpression StatementExpression != MemberReference Literal StatementExpression == MemberReference Literal ReturnStatement < MemberReference Literal IfStatement BinaryOperation BlockStatement MemberReference MethodInvocation *= * MemberReference MemberReference nptr s MemberReference BinaryOperation Literal Literal < MemberReference MemberReference || BinaryOperation BinaryOperation MemberReference s num 0.0 got_dot false got_digit false exponent 0 0 s end BinaryOperation BlockStatement IfStatement MemberReference BinaryOperation BlockStatement IfStatement BinaryOperation BlockStatement Literal < MemberReference MemberReference || BinaryOperation BinaryOperation MemberReference BasicType VariableDeclarator BasicType VariableDeclarator StatementExpression CatchClause BinaryOperation BlockStatement Assignment Assignment endptr null Assignment num 0.0 BinaryOperation exponent 0 BinaryOperation BlockStatement > MemberReference Literal IfStatement num Math Literal Cast pow num sign ++ s && BinaryOperation BinaryOperation - 1 1 s end == MemberReference Literal == MemberReference Literal ++ s && BinaryOperation BinaryOperation StatementExpression StatementExpression IfStatement IfStatement IfStatement BinaryOperation BlockStatement BlockStatement ++ s && BinaryOperation BinaryOperation IfStatement ReturnStatement BinaryOperation BlockStatement != MemberReference Literal StatementExpression 0.0 s end == MemberReference Literal == MemberReference Literal ++ s long exp Literal int endx ArrayCreator Assignment CatchClauseParameter IfStatement ThrowStatement == MemberReference MemberReference StatementExpression MemberReference MemberReference = MemberReference MemberReference += MemberReference MemberReference = * Literal MemberReference < MemberReference BinaryOperation ThrowStatement exponent 0 BinaryOperation BlockStatement 10.0 BasicType MemberReference < MemberReference MemberReference == MemberReference Literal ArraySelector data '-' ArraySelector data '+' <= Literal MemberReference <= MemberReference Literal Assignment MemberReference BinaryOperation BlockStatement BinaryOperation BlockStatement BlockStatement MemberReference BlockStatement && MemberReference BinaryOperation StatementExpression BreakStatement && BinaryOperation BinaryOperation || BinaryOperation BinaryOperation BinaryOperation BlockStatement MemberReference && BinaryOperation BinaryOperation IfStatement ReturnStatement endptr null Assignment ArraySelector data 'e' ArraySelector data 'E' 0 BasicType ArrayInitializer MemberReference MethodInvocation = ERange e BinaryOperation BlockStatement MemberReference ArraySelector endx s Assignment s ArraySelector endx exponent exp ArraySelector endptr s 0.0 sign num * MemberReference MethodInvocation ClassCreator > MemberReference BinaryOperation ThrowStatement double exponent s end ArraySelector data '-' MemberReference MemberReference '0' ArraySelector data ArraySelector data '9' MemberReference Literal = ++ digits > MemberReference Literal ReturnStatement > MemberReference BinaryOperation StatementExpression LocalVariableDeclaration StatementExpression got_dot StatementExpression ! got_dot == MemberReference Literal Assignment && BinaryOperation BinaryOperation || BinaryOperation BinaryOperation == MemberReference Literal == MemberReference Literal != MemberReference Literal StatementExpression Double NaN && BinaryOperation BinaryOperation || BinaryOperation BinaryOperation BinaryOperation BlockStatement TernaryExpression MemberReference MemberReference = MemberReference MemberReference int Literal exp MemberReference MemberReference Literal stringToLong != MemberReference Literal StatementExpression e Literal MemberReference BinaryOperation = Literal Literal Double MIN_VALUE Math Literal Cast pow ReferenceType MemberReference num * MemberReference MethodInvocation ClassCreator MemberReference s s MemberReference MemberReference got_digit true digits 15 MethodInvocation num * MemberReference Literal MemberReference BasicType VariableDeclarator Assignment MemberReference ArraySelector data '.' MemberReference Literal = < BinaryOperation MemberReference || BinaryOperation BinaryOperation == MemberReference Literal == MemberReference Literal ArraySelector data 'n' ArraySelector data 'N' endptr null Assignment && BinaryOperation BinaryOperation || BinaryOperation BinaryOperation == MemberReference Literal == MemberReference Literal != MemberReference Literal StatementExpression BinaryOperation MemberReference MemberReference ArraySelector endptr nptr s s 0 s endx 10 endptr null Assignment 0 ArraySelector endx - MemberReference Literal 0 0 10.0 BasicType MemberReference ERange ERange.Kind Underflow Double MAX_VALUE Math Literal Cast pow ReferenceType MemberReference s s s MemberReference MemberReference MemberReference fallbackParsing Double MAX_VALUE 0.1 ++ exponent int n BinaryOperation MemberReference BinaryOperation = -- exponent MemberReference got_dot true + MemberReference Literal end == MemberReference Literal == MemberReference Literal ArraySelector data 'a' ArraySelector data 'A' BinaryOperation BinaryOperation MemberReference BinaryOperation = && BinaryOperation BinaryOperation || BinaryOperation BinaryOperation == MemberReference Literal == MemberReference Literal ArraySelector data 'y' ArraySelector data 'Y' endptr null Assignment == MemberReference Literal Double NEGATIVE_INFINITY Double POSITIVE_INFINITY Literal MemberReference MemberReference = Literal s 1 double - exponent 10.0 BasicType MemberReference ERange ERange.Kind Overflow saveFallback sign endptr - MemberReference Literal num + BinaryOperation MemberReference s s 2 ArraySelector data 'n' ArraySelector data 'N' BinaryOperation BinaryOperation + MemberReference Literal + MemberReference Literal ArraySelector endptr + MemberReference Literal && BinaryOperation BinaryOperation || BinaryOperation BinaryOperation == MemberReference Literal == MemberReference Literal ArraySelector data 't' ArraySelector data 'T' BinaryOperation BinaryOperation MemberReference BinaryOperation = sign - 1 0 ArraySelector endptr ArraySelector endx 0 double - exponent ArraySelector data '0' * Literal MemberReference n MemberReference MemberReference + MemberReference Literal + MemberReference Literal s 2 s 2 Literal s 3 && BinaryOperation BinaryOperation || BinaryOperation BinaryOperation == MemberReference Literal == MemberReference Literal ArraySelector data 'i' ArraySelector data 'I' BinaryOperation BinaryOperation + MemberReference Literal + MemberReference Literal ArraySelector endptr + MemberReference Literal Literal Literal MemberReference 10.0 num s s s 1 s 1 0 && BinaryOperation BinaryOperation || BinaryOperation BinaryOperation == MemberReference Literal == MemberReference Literal ArraySelector data 'n' ArraySelector data 'N' BinaryOperation BinaryOperation + MemberReference Literal + MemberReference Literal s 7 s 7 Literal s 8 0 0 s && BinaryOperation BinaryOperation || BinaryOperation BinaryOperation == MemberReference Literal == MemberReference Literal ArraySelector data 'i' ArraySelector data 'I' BinaryOperation BinaryOperation + MemberReference Literal + MemberReference Literal s 6 s 6 0 < BinaryOperation MemberReference || BinaryOperation BinaryOperation == MemberReference Literal == MemberReference Literal ArraySelector data 'f' ArraySelector data 'F' BinaryOperation BinaryOperation + MemberReference Literal + MemberReference Literal s 5 s 5 + MemberReference Literal end == MemberReference Literal == MemberReference Literal ArraySelector data 'n' ArraySelector data 'N' BinaryOperation BinaryOperation + MemberReference Literal + MemberReference Literal s 4 s 4 s 7 ArraySelector data 'i' ArraySelector data 'I' BinaryOperation BinaryOperation + MemberReference Literal + MemberReference Literal s 3 s 3 MemberReference MemberReference + MemberReference Literal + MemberReference Literal s 2 s 2 s s s 1 s 1	1
MethodDeclaration Modifier Annotation assign FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression StatementExpression StatementExpression public Override ReferenceType runtime ReferenceType context ReferenceType self ReferenceType block ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation Ruby ThreadContext IRubyObject Block IRubyObject nil MethodInvocation parameter1 MemberReference MemberReference MemberReference MemberReference MemberReference Literal assign parameter2 MemberReference MemberReference MemberReference MemberReference MemberReference Literal assign parameter3 MemberReference MemberReference MemberReference MemberReference MemberReference Literal assign runtime getNil runtime context self nil block false runtime context self nil block false runtime context self nil block false	0
MethodDeclaration Modifier ReferenceType getMethod FormalParameter FormalParameter LocalVariableDeclaration TryStatement private Method ReferenceType name ReferenceType argTypes  ReferenceType VariableDeclarator ReturnStatement CatchClause String Class Class jclass MethodInvocation MethodInvocation CatchClauseParameter ThrowStatement MethodInvocation getJavaObject jclass MemberReference MemberReference getMethod NoSuchMethodException nsme MethodInvocation getJavaClass name argTypes JavaMethod MethodInvocation MemberReference BinaryOperation MemberReference newMethodNotFoundError getRuntime jclass + MemberReference MethodInvocation name name CodegenUtils MemberReference prettyParams argTypes	1
MethodDeclaration Modifier Annotation ReferenceType setgid_p FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType recv ReferenceType filename ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation name Literal required Literal module Literal IRubyObject IRubyObject Ruby runtime MethodInvocation JRubyFile file MethodInvocation runtime BinaryOperation newBoolean "setgid?" 1 true recv getRuntime MemberReference file && MethodInvocation MethodInvocation filename file exists runtime MethodInvocation MethodInvocation getPosix MethodInvocation stat isSetgid file getAbsolutePath	1
MethodDeclaration Modifier ReferenceType get FormalParameter FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType runtime ReferenceType array BasicType i MethodInvocation Ruby Object int RubyFixnum MemberReference Cast newFixnum runtime BasicType MemberReference byte array	0
MethodDeclaration Modifier Annotation ReferenceType putc FormalParameter FormalParameter FormalParameter LocalVariableDeclaration ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType ch ReferenceType VariableDeclarator MethodInvocation name Literal required Literal module Literal visibility MemberReference ThreadContext IRubyObject IRubyObject IRubyObject defout MethodInvocation RubyIO MemberReference MemberReference MemberReference putc "putc" 1 true PRIVATE context MethodInvocation MethodInvocation getRuntime context defout ch getGlobalVariables Literal get "$>"	0
MethodDeclaration Modifier ReferenceType getHomogeneousSwitchType FormalParameter LocalVariableDeclaration ForStatement ReturnStatement private FastSwitchType ReferenceType whenNodes ReferenceType VariableDeclarator Outer EnhancedForControl BlockStatement MemberReference List TypeArgument FastSwitchType foundType Literal VariableDeclaration MemberReference LocalVariableDeclaration IfStatement foundType ReferenceType null ReferenceType VariableDeclarator whenNodes ReferenceType VariableDeclarator BinaryOperation BlockStatement IfStatement Node Node node WhenNode whenNode Cast instanceof MethodInvocation ReferenceType LocalVariableDeclaration ForStatement BinaryOperation BlockStatement IfStatement ReferenceType MemberReference whenNode getExpressionNodes ArrayNode ReferenceType VariableDeclarator EnhancedForControl BlockStatement instanceof MethodInvocation ReferenceType LocalVariableDeclaration LocalVariableDeclaration IfStatement BinaryOperation BlockStatement IfStatement WhenNode node ArrayNode arrayNode Cast VariableDeclaration MethodInvocation IfStatement whenNode getExpressionNodes FixnumNode ReferenceType VariableDeclarator BasicType VariableDeclarator BinaryOperation BlockStatement BlockStatement instanceof MethodInvocation ReferenceType LocalVariableDeclaration IfStatement BinaryOperation BlockStatement BlockStatement ReferenceType MethodInvocation ReferenceType VariableDeclarator arrayNode childNodes BinaryOperation BlockStatement BlockStatement FixnumNode fixnumNode Cast long value MethodInvocation && BinaryOperation BinaryOperation IfStatement IfStatement ContinueStatement ReturnStatement whenNode getExpressionNodes StrNode ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement instanceof MethodInvocation ReferenceType LocalVariableDeclaration IfStatement ReturnStatement ArrayNode whenNode getExpressionNodes Node maybeFixnum instanceof MemberReference ReferenceType LocalVariableDeclaration LocalVariableDeclaration IfStatement ReturnStatement ReferenceType MethodInvocation fixnumNode getValue <= MemberReference MemberReference >= MemberReference MemberReference BinaryOperation ReturnStatement BinaryOperation StatementExpression Literal StrNode strNode Cast == MethodInvocation Literal IfStatement IfStatement ContinueStatement IfStatement IfStatement ContinueStatement whenNode getExpressionNodes SymbolNode ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement Literal maybeFixnum FixnumNode ReferenceType VariableDeclarator BasicType VariableDeclarator BinaryOperation BlockStatement BlockStatement Literal FixnumNode whenNode getExpressionNodes value Integer MAX_VALUE value Integer MIN_VALUE && BinaryOperation BinaryOperation Literal == MemberReference Literal Assignment null ReferenceType MethodInvocation strNode MethodInvocation getValue 1 BinaryOperation ReturnStatement BinaryOperation StatementExpression BinaryOperation ReturnStatement BinaryOperation StatementExpression SymbolNode symbolNode Cast == MethodInvocation Literal IfStatement IfStatement ContinueStatement IfStatement IfStatement ContinueStatement null FixnumNode fixnumNode Cast long value MethodInvocation && BinaryOperation BinaryOperation IfStatement IfStatement ContinueStatement ReturnStatement null != MemberReference Literal != MemberReference MemberReference null foundType null MemberReference MemberReference = StrNode whenNode getExpressionNodes length && BinaryOperation BinaryOperation Literal == MemberReference Literal Assignment && BinaryOperation BinaryOperation Literal == MemberReference Literal Assignment ReferenceType MethodInvocation symbolNode MethodInvocation getName 1 BinaryOperation ReturnStatement BinaryOperation StatementExpression BinaryOperation ReturnStatement BinaryOperation StatementExpression ReferenceType MemberReference fixnumNode getValue <= MemberReference MemberReference >= MemberReference MemberReference BinaryOperation ReturnStatement BinaryOperation StatementExpression Literal foundType null foundType FastSwitchType FIXNUM foundType FastSwitchType FIXNUM != MemberReference Literal != MemberReference MemberReference null foundType null MemberReference MemberReference = != MemberReference Literal != MemberReference MemberReference null foundType null MemberReference MemberReference = SymbolNode whenNode getExpressionNodes length && BinaryOperation BinaryOperation Literal == MemberReference Literal Assignment && BinaryOperation BinaryOperation Literal == MemberReference Literal Assignment FixnumNode maybeFixnum value Integer MAX_VALUE value Integer MIN_VALUE && BinaryOperation BinaryOperation Literal == MemberReference Literal Assignment null foundType null foundType FastSwitchType SINGLE_CHAR_STRING foundType FastSwitchType SINGLE_CHAR_STRING foundType null foundType FastSwitchType STRING foundType FastSwitchType STRING != MemberReference Literal != MemberReference MemberReference null foundType null MemberReference MemberReference = != MemberReference Literal != MemberReference MemberReference null foundType null MemberReference MemberReference = != MemberReference Literal != MemberReference MemberReference null foundType null MemberReference MemberReference = foundType null foundType FastSwitchType SINGLE_CHAR_SYMBOL foundType FastSwitchType SINGLE_CHAR_SYMBOL foundType null foundType FastSwitchType SYMBOL foundType FastSwitchType SYMBOL foundType null foundType FastSwitchType FIXNUM foundType FastSwitchType FIXNUM	1
MethodDeclaration Modifier Annotation ReferenceType proc FormalParameter FormalParameter ReturnStatement static public Deprecated RubyProc ReferenceType recv ReferenceType block MethodInvocation IRubyObject Block recv MethodInvocation getRuntime MemberReference MemberReference newProc Block.Type LAMBDA block	1
MethodDeclaration Modifier Annotation ReferenceType final_p ReturnStatement public JRubyMethod ElementValuePair RubyBoolean MethodInvocation name Literal MethodInvocation getRuntime "final?" MethodInvocation newBoolean Modifier MethodInvocation isFinal field getModifiers	1
MethodDeclaration Modifier Annotation ReferenceType fields FormalParameter ReturnStatement public JRubyMethod IRubyObject ReferenceType context MethodInvocation ThreadContext RubyArray MethodInvocation MemberReference newArray context getRuntime fields	0
MethodDeclaration Modifier error FormalParameter FormalParameter SwitchStatement public ReferenceType error ReferenceType extraData MemberReference SwitchStatementCase ERRORS String error ENOENT ThrowStatement MethodInvocation runtime BinaryOperation newErrnoENOENTError + Literal MemberReference "No such file or directory - " extraData	1
MethodDeclaration Modifier Annotation ReferenceType log2 FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair ElementValuePair RubyFloat ReferenceType recv ReferenceType x MethodInvocation name Literal required Literal module Literal visibility MemberReference compat MemberReference IRubyObject IRubyObject MemberReference MemberReference Literal log_common "log2" 1 true Visibility PRIVATE CompatVersion RUBY1_8 recv x 2	0
MethodDeclaration Modifier ReferenceType createThreadClass FormalParameter LocalVariableDeclaration StatementExpression StatementExpression LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression ReturnStatement static public RubyClass ReferenceType runtime ReferenceType VariableDeclarator MethodInvocation MethodInvocation ReferenceType VariableDeclarator Assignment MethodInvocation MethodInvocation MethodInvocation MemberReference Ruby RubyClass threadClass MethodInvocation runtime MemberReference setThread threadClass ClassReference defineAnnotatedMethods RubyThread rubyThread ClassCreator MemberReference ClassCreator = runtime MethodInvocation getThreadService runtime MethodInvocation getDefaultThreadGroup threadClass MemberReference setMarshal threadClass runtime Literal MethodInvocation MemberReference defineClass threadClass ReferenceType ReferenceType MemberReference MemberReference rubyThread threadImpl ReferenceType MemberReference MethodInvocation MethodInvocation MemberReference setMainThread MemberReference addDirectly ObjectMarshal NOT_MARSHALABLE_MARSHAL "Thread" runtime getObject ObjectAllocator NOT_ALLOCATABLE_ALLOCATOR RubyThread RubyThread runtime threadClass NativeThread rubyThread Thread currentThread Thread currentThread rubyThread rubyThread	1
MethodDeclaration Modifier BasicType intToByteArray FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression ReturnStatement final static public byte BasicType i BasicType radix BasicType upper ReferenceType VariableDeclarator Assignment MethodInvocation int int boolean String s MethodInvocation MemberReference TernaryExpression = ByteList MemberReference plain Integer MemberReference MemberReference toString s MemberReference MethodInvocation MethodInvocation s i radix upper s toUpperCase s toLowerCase	1
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType arg0 ReferenceType block MethodInvocation ThreadContext IRubyObject RubyModule String IRubyObject Block RuntimeHelpers MemberReference MemberReference Literal MemberReference MemberReference invoke context self "__jcreate!" arg0 block	0
MethodDeclaration Modifier Annotation ReferenceType accept FormalParameter ReturnStatement public Override Object ReferenceType iVisitor MethodInvocation NodeVisitor iVisitor This visitPostExeNode	0
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement final public Override IRubyObject ReferenceType context ReferenceType self ReferenceType klazz ReferenceType name ReferenceType arg1 ReferenceType arg2 MethodInvocation ThreadContext IRubyObject RubyModule String IRubyObject IRubyObject MemberReference MemberReference MemberReference invoke context arg1 arg2	1
MethodDeclaration Modifier ReferenceType trueIfNoArgument FormalParameter FormalParameter ReturnStatement private IRubyObject ReferenceType context ReferenceType args TernaryExpression ThreadContext IRubyObject BinaryOperation ArrayCreator MemberReference == MemberReference Literal ReferenceType ArrayInitializer args args length 0 IRubyObject MethodInvocation context MethodInvocation getRuntime getTrue	0
MethodDeclaration Modifier ReferenceType getAnnotatedMethod FormalParameter FormalParameter LocalVariableDeclaration SynchronizedStatement public DynamicMethod ReferenceType implementationClass ReferenceType desc ReferenceType VariableDeclarator MemberReference TryStatement RubyModule JavaMethodDescriptor String javaMethodName MemberReference classLoader LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression ReturnStatement CatchClause desc name ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MemberReference CatchClauseParameter StatementExpression ThrowStatement Class c MethodInvocation JavaMethod ic Cast ic MethodInvocation setArity ic MemberReference setJavaName ic MemberReference setSingleton ic MethodInvocation setCallConfig ic Exception e MethodInvocation MethodInvocation MemberReference getAnnotatedMethodClass ReferenceType MethodInvocation Arity MemberReference MemberReference fromAnnotation javaMethodName desc isStatic CallConfiguration MemberReference getCallConfigByAnno e printStackTrace implementationClass MethodInvocation getRuntime desc JavaMethod c MethodInvocation ArrayCreator getConstructor desc anno desc actualRequired desc anno MethodInvocation newLoadError ArrayCreator newInstance ReferenceType ArrayInitializer e getMessage ReferenceType ArrayInitializer Class ClassReference ClassReference Object MemberReference MethodInvocation ReferenceType ReferenceType implementationClass desc.anno visibility RubyModule Visibility	1
MethodDeclaration Modifier Annotation post FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression protected final Override ReferenceType context ReferenceType binding ReferenceType vis ReferenceType lastFrame MethodInvocation MethodInvocation ThreadContext Binding Visibility Frame binding MethodInvocation getFrame context MemberReference MemberReference postYieldLight MemberReference setVisibility binding lastFrame vis	0
MethodDeclaration Modifier ReferenceType case286_line1079 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference ClassCreator = yyVal yyVal ReferenceType MethodInvocation ZYieldNode Cast getPosition ReferenceType MemberReference Token ArraySelector yyVals BinaryOperation + Literal MemberReference 0 yyTop	1
MethodDeclaration Modifier printErrorPos FormalParameter FormalParameter IfStatement private ReferenceType context ReferenceType errorStream BinaryOperation BlockStatement ThreadContext PrintStream != MethodInvocation Literal IfStatement context getFile null BinaryOperation BlockStatement IfStatement != MethodInvocation Literal StatementExpression StatementExpression BinaryOperation BlockStatement BlockStatement context getFrameName null MethodInvocation MethodInvocation != MethodInvocation Literal StatementExpression StatementExpression errorStream BinaryOperation print errorStream BinaryOperation print context getLine 0 MethodInvocation MethodInvocation + BinaryOperation MethodInvocation + BinaryOperation Literal errorStream BinaryOperation print errorStream MethodInvocation print + MethodInvocation Literal context getLine + Literal MethodInvocation '\'' + BinaryOperation MethodInvocation context getFile context getFile ":" ":in '" context getFrameName + MethodInvocation Literal context getLine context getFile ":"	0
MethodDeclaration Modifier compileTrue FormalParameter FormalParameter FormalParameter IfStatement public ReferenceType node ReferenceType context BasicType expr MemberReference BlockStatement BlockStatement Node BodyCompiler boolean RubyInstanceConfig PEEPHOLE_OPTZ IfStatement StatementExpression StatementExpression IfStatement MemberReference BlockStatement MethodInvocation MethodInvocation MemberReference StatementExpression expr StatementExpression StatementExpression context loadTrue context pollThreadEvents ! expr MethodInvocation MethodInvocation MethodInvocation context consumeCurrentValue context loadTrue context pollThreadEvents	1
MethodDeclaration Modifier Annotation ReferenceType outline FormalParameter StatementExpression ForStatement StatementExpression StatementExpression LocalVariableDeclaration StatementExpression ReturnStatement public Override ChainedChildBodyCompiler ReferenceType methodName MethodInvocation ForControl BlockStatement Assignment MethodInvocation ReferenceType VariableDeclarator MethodInvocation MemberReference String method MemberReference aload VariableDeclaration BinaryOperation MemberReference StatementExpression MemberReference BinaryOperation = method MethodInvocation MemberReference MethodInvocation invokestatic ChainedChildBodyCompiler19 methodCompiler ClassCreator methodCompiler beginChainedMethod methodCompiler StandardASMCompiler THIS BasicType VariableDeclarator <= MemberReference Literal ++ i MethodInvocation methodName + BinaryOperation MethodInvocation script getClassname methodName getSignature ReferenceType MemberReference MemberReference MemberReference MemberReference This int i Literal i 4 method MemberReference aload + MemberReference Literal script getAndIncrementMethodIndex ChainedChildBodyCompiler19 script methodName inspector scope 1 i methodName "_"	0
MethodDeclaration Modifier ReferenceType getSingletonClass LocalVariableDeclaration IfStatement StatementExpression IfStatement ReturnStatement public RubyClass ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement MethodInvocation MethodInvocation StatementExpression MemberReference RubyClass klass && MethodInvocation BinaryOperation StatementExpression StatementExpression klass MethodInvocation setTaint isFrozen MethodInvocation klass MethodInvocation getMetaClass == Cast This Assignment Assignment isTaint klass Literal setFrozen isSingleton ReferenceType MethodInvocation MemberReference MethodInvocation = MemberReference MethodInvocation = true MetaClass getMetaClass klass getMetaClass klass MethodInvocation makeMetaClass getMetaClass	1
MethodDeclaration Modifier ReferenceType singleByteRStrip FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration WhileStatement WhileStatement IfStatement ReturnStatement private IRubyObject ReferenceType runtime ReferenceType enc BasicType bytes BasicType s BasicType end BasicType VariableDeclarator BinaryOperation StatementExpression BinaryOperation StatementExpression BinaryOperation BlockStatement MethodInvocation Ruby Encoding byte int int int endp BinaryOperation && BinaryOperation BinaryOperation MemberReference && BinaryOperation MethodInvocation MemberReference < MemberReference BinaryOperation StatementExpression ReturnStatement runtime getNil - MemberReference Literal >= MemberReference MemberReference == MemberReference Literal -- endp >= MemberReference MemberReference enc BinaryOperation isSpace -- endp endp - MemberReference Literal MethodInvocation This end 1 endp s ArraySelector bytes 0 endp s & MemberReference Literal end 1 Literal BinaryOperation view MemberReference ArraySelector bytes 0xff 0 + BinaryOperation Literal endp MemberReference - MemberReference MemberReference 1 endp endp s	1
MethodDeclaration Modifier ReferenceType tryProxyInvocation FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement private IRubyObject ReferenceType javaInvokee ReferenceType arg0 ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement Object Object JavaProxyClass jpc Cast JavaProxyMethod jpm && BinaryOperation MethodInvocation ReturnStatement ReturnStatement ReferenceType MemberReference != Assignment Literal jpm hasSuperImplementation MethodInvocation MethodInvocation InternalJavaProxy javaInvokee MemberReference MethodInvocation = null MethodInvocation MemberReference MemberReference invokeDirectSuperWithExceptionHandling MemberReference MemberReference MemberReference invokeDirectWithExceptionHandling jpm jpc MethodInvocation MemberReference getMethod jpm getSuperMethod javaInvokee arg0 method javaInvokee arg0 method getName parameterTypes	1
MethodDeclaration Modifier clear LocalVariableDeclaration ForStatement StatementExpression synchronized public ReferenceType VariableDeclarator ForControl BlockStatement Assignment Entry tab MemberReference VariableDeclaration BinaryOperation StatementExpression MemberReference Literal = table BasicType VariableDeclarator >= MemberReference Literal Assignment count 0 int index MemberReference -- index 0 MemberReference Literal = tab length ArraySelector tab null MemberReference index	1
MethodDeclaration Modifier ReferenceType loadAlternateClass ClassNotFoundException LocalVariableDeclaration LocalVariableDeclaration ReturnStatement static public Class ReferenceType VariableDeclarator ReferenceType VariableDeclarator MemberReference AlternateLoader loader ClassCreator Class klass MethodInvocation klass ReferenceType loader Literal loadClass AlternateLoader "org.jruby.test.TestHelper"	1
MethodDeclaration Modifier ReferenceType create FormalParameter FormalParameter FormalParameter FormalParameter TryStatement static public JavaMethod ReferenceType runtime ReferenceType javaClass ReferenceType methodName ReferenceType argumentTypes LocalVariableDeclaration ReturnStatement CatchClause Ruby Class TypeArgument String Class TypeArgument ReferenceType VariableDeclarator MethodInvocation CatchClauseParameter ThrowStatement ? ? Method method MethodInvocation MemberReference MemberReference create NoSuchMethodException e MethodInvocation javaClass MemberReference MemberReference getMethod runtime method runtime BinaryOperation MemberReference newNameError methodName argumentTypes + BinaryOperation Literal methodName + BinaryOperation MethodInvocation "'" + BinaryOperation Literal javaClass getName + Literal MemberReference "' for class '" "undefined method '" methodName	1
MethodDeclaration Modifier ReferenceType newArgSizeMismatchError FormalParameter FormalParameter FormalParameter ReturnStatement static public RaiseException ReferenceType runtime BasicType typeCount BasicType argCount MethodInvocation Ruby int int runtime BinaryOperation newArgumentError + BinaryOperation Literal + BinaryOperation MemberReference ")" + BinaryOperation Literal argCount + Literal MemberReference ") != arg count (" "arg type count (" typeCount	0
MethodDeclaration Modifier Annotation ReferenceType interpret FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration AssertStatement LocalVariableDeclaration StatementExpression StatementExpression ReturnStatement public Override IRubyObject ReferenceType runtime ReferenceType context ReferenceType self ReferenceType aBlock ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation ReferenceType VariableDeclarator Assignment MethodInvocation MemberReference Ruby ThreadContext IRubyObject Block IRubyObject receiver MethodInvocation IRubyObject args MethodInvocation MemberReference hasMetaClass MemberReference receiverClassName CallSite callSite MemberReference MethodInvocation = callSite MemberReference MemberReference MemberReference MemberReference call ArraySelector args receiverNode MemberReference MemberReference MemberReference MemberReference interpret ASTInterpreter MemberReference MemberReference MemberReference MemberReference MemberReference setupArgs receiver receiver callSite MemberReference MemberReference selectCallSite context self receiver args BinaryOperation runtime context self aBlock runtime context argsNode self aBlock self receiver - MemberReference Literal args length 1	0
MethodDeclaration Modifier Annotation ReferenceType getSignature ReturnStatement protected Override String MethodInvocation StandardASMCompiler MethodInvocation getStaticClosure19Signature script getClassname	0
MethodDeclaration Modifier BasicType read FormalParameter FormalParameter FormalParameter IOException DoStatement static public int ReferenceType channel ReferenceType buf BasicType blocking Literal BlockStatement ReadableByteChannel ByteBuffer boolean true LocalVariableDeclaration IfStatement TryStatement BasicType VariableDeclarator BinaryOperation BlockStatement StatementExpression CatchClause int n MethodInvocation || BinaryOperation MethodInvocation ReturnStatement MethodInvocation CatchClauseParameter ThrowStatement channel MemberReference read || BinaryOperation BinaryOperation ! buf hasRemaining MemberReference MemberReference awaitReadable InterruptedException ex ClassCreator buf || BinaryOperation MemberReference instanceof MemberReference ReferenceType n channel ReferenceType MethodInvocation != MemberReference Literal ! blocking channel SelectableChannel InterruptedIOException ex getMessage n 0	1
MethodDeclaration Modifier ReferenceType getName ReturnStatement public String MemberReference name	0
MethodDeclaration Modifier Annotation ReferenceType field FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration TryStatement public JRubyMethod ElementValuePair JavaField ReferenceType context ReferenceType name ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReturnStatement CatchClause required Literal ThreadContext IRubyObject Class TypeArgument javaClass MethodInvocation Ruby runtime MethodInvocation String stringName MethodInvocation ClassCreator CatchClauseParameter LocalVariableDeclaration IfStatement ThrowStatement 1 ? javaClass context getRuntime name asJavaString ReferenceType MemberReference MethodInvocation NoSuchFieldException nsfe ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation JavaField runtime javaClass MemberReference getField String newName MethodInvocation != MemberReference Literal TryStatement MemberReference MethodInvocation MemberReference undefinedFieldError stringName JavaUtil MemberReference getJavaCasedName newName null ReturnStatement CatchClause runtime javaClass getName stringName stringName ClassCreator CatchClauseParameter ReferenceType MemberReference MethodInvocation NoSuchFieldException nsfe2 JavaField runtime javaClass MemberReference getField newName	1
MethodDeclaration Modifier ReferenceType getNewLabel ReturnStatement private Label MethodInvocation _scope getNewLabel	0
MethodDeclaration Modifier ReferenceType case8_line327 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference Cast = yyVal yyVal ReferenceType MemberReference Node ArraySelector yyVals BinaryOperation + Literal MemberReference 0 yyTop	1
MethodDeclaration Modifier Annotation ReferenceType reverse FormalParameter LocalVariableDeclaration IfStatement LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration ForStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType VariableDeclarator BinaryOperation ReturnStatement BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator ForControl BlockStatement ClassCreator name Literal compat MemberReference ThreadContext Ruby runtime MethodInvocation <= MemberReference Literal MethodInvocation byte bytes MemberReference int p MemberReference int len MemberReference byte obytes ArrayCreator VariableDeclaration BinaryOperation MemberReference StatementExpression StatementExpression MethodInvocation ReferenceType MemberReference MethodInvocation ClassCreator "reverse" CompatVersion RUBY1_8 context getRuntime value realSize 1 MethodInvocation strDup value bytes value begin value realSize BasicType MemberReference BasicType VariableDeclarator <= MemberReference BinaryOperation ++ i Assignment Assignment This infectBy RubyString runtime getMetaClass ReferenceType MemberReference Literal context getRuntime byte len int i Literal i >> MemberReference Literal MemberReference MemberReference = MemberReference MemberReference = ByteList obytes false 0 len 1 ArraySelector obytes ArraySelector bytes ArraySelector obytes ArraySelector bytes MemberReference BinaryOperation BinaryOperation BinaryOperation i - BinaryOperation Literal - BinaryOperation Literal + MemberReference MemberReference - BinaryOperation MemberReference 1 - MemberReference MemberReference 1 p i + MemberReference MemberReference i len i p len	1
MethodDeclaration Modifier Annotation ReferenceType close_write FormalParameter IfStatement IfStatement IfStatement ReturnStatement public Override IRubyObject ReferenceType context BinaryOperation BlockStatement BinaryOperation BlockStatement MethodInvocation BlockStatement BlockStatement MethodInvocation ThreadContext && BinaryOperation MethodInvocation ThrowStatement && BinaryOperation MethodInvocation ThrowStatement ! openFile isReadable StatementExpression LocalVariableDeclaration IfStatement StatementExpression StatementExpression context MethodInvocation getRuntime >= MethodInvocation Literal isTaint MethodInvocation == MethodInvocation Literal openFile isReadable MethodInvocation MethodInvocation ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation MethodInvocation getNil context MethodInvocation getRuntime 4 context MethodInvocation getRuntime openFile getPipeStream null context MethodInvocation getRuntime close Channel socketChannel MethodInvocation || BinaryOperation BinaryOperation TryStatement openFile Literal setPipeStream openFile BinaryOperation setMode getSafeLevel Literal newSecurityError Literal newIOError openFile MethodInvocation MethodInvocation getMainStream instanceof MemberReference ReferenceType instanceof MemberReference ReferenceType StatementExpression CatchClause null & MethodInvocation MemberReference "Insecure: can't close" "closing non-duplex IO for writing" getDescriptor getChannel socketChannel SocketChannel socketChannel DatagramChannel MethodInvocation CatchClauseParameter ThrowStatement openFile getMode ~ OpenFile WRITABLE MethodInvocation asSocket IOException e MethodInvocation shutdownOutput context MethodInvocation getRuntime MethodInvocation newIOError e getMessage	1
MethodDeclaration Modifier Annotation ReferenceType recv_io FormalParameter ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType args MethodInvocation rest Literal IRubyObject MethodInvocation getRuntime true getNil	1
MethodDeclaration Modifier ReferenceType toJavaModeString IfStatement public String BinaryOperation BlockStatement BlockStatement || BinaryOperation MethodInvocation ReturnStatement ReturnStatement || MethodInvocation MethodInvocation isTruncate Literal Literal isWritable isCreate "rw" "r"	0
MethodDeclaration Modifier addFinalizer FormalParameter IfStatement public ReferenceType finalizer BinaryOperation BlockStatement BlockStatement IRubyObject == MemberReference Literal StatementExpression IfStatement StatementExpression firstFinalizer null Assignment BinaryOperation StatementExpression MethodInvocation MemberReference MemberReference = == MemberReference Literal Assignment finalizers MemberReference add firstFinalizer finalizer finalizers null MemberReference ClassCreator = finalizer finalizers ReferenceType Literal ArrayList TypeArgument 4 ReferenceType IRubyObject	1
MethodDeclaration Modifier Annotation ReferenceType match_p FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType regex MethodInvocation name Literal required Literal IRubyObject MemberReference Literal Literal Literal scan "match?" 1 regex false false true	1
MethodDeclaration Modifier Annotation ReferenceType interpret FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement LocalVariableDeclaration LocalVariableDeclaration StatementExpression ReturnStatement public Override IRubyObject ReferenceType runtime ReferenceType context ReferenceType self ReferenceType aBlock ReferenceType VariableDeclarator BinaryOperation ThrowStatement ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation Ruby ThreadContext IRubyObject Block RubyModule enclosingModule MethodInvocation == MemberReference Literal MethodInvocation String name MethodInvocation RubyModule module MethodInvocation scope MemberReference setModule ASTInterpreter MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference evalClassDefinitionBody cpath MemberReference MemberReference MemberReference MemberReference getEnclosingModule enclosingModule null runtime Literal newTypeError cpath getName enclosingModule MemberReference defineOrGetModuleUnder module runtime context scope bodyNode module self aBlock runtime context self aBlock "no outer class/module" name	1
MethodDeclaration Modifier ReferenceType entrySet ReturnStatement public Set ClassCreator ReferenceType MethodDeclaration MethodDeclaration MethodDeclaration AbstractSet Modifier ReferenceType iterator ReturnStatement Modifier BasicType size ReturnStatement Modifier ReferenceType toArray FormalParameter ReturnStatement public Iterator MethodInvocation public int MemberReference public Object ReferenceType arr MethodInvocation entryIterator size Object GenericMap MemberReference MethodInvocation MethodInvocation toArray arr size iterator	0
MethodDeclaration Modifier adjustRegisters StatementExpression StatementExpression StatementExpression private Assignment Assignment Assignment MemberReference Literal = MemberReference BinaryOperation = MemberReference Literal = beg 0 end - MemberReference MemberReference regs null pos lastPos	0
MethodDeclaration Modifier ReferenceType getValue FormalParameter FormalParameter FormalParameter LocalVariableDeclaration ReturnStatement public IRubyObject ReferenceType context ReferenceType name BasicType index ReferenceType VariableDeclarator TernaryExpression ThreadContext String int IRubyObject value MemberReference MethodInvocation MemberReference MethodInvocation ArraySelector constants MemberReference MemberReference MemberReference isCached value MemberReference MemberReference MemberReference reCache MemberReference context value index context name index index	0
MethodDeclaration Modifier join FormalParameter InterruptedException LocalVariableDeclaration IfStatement public BasicType timeoutMillis ReferenceType VariableDeclarator BinaryOperation StatementExpression long Thread thread MethodInvocation != MemberReference Literal MethodInvocation nativeThread get thread null thread MemberReference join timeoutMillis	1
MethodDeclaration Modifier Annotation ReferenceType getDefinition FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter TryStatement static public Deprecated String ReferenceType runtime ReferenceType context ReferenceType node ReferenceType self ReferenceType aBlock StatementExpression ReturnStatement StatementExpression Ruby ThreadContext Node IRubyObject Block MethodInvocation MethodInvocation MethodInvocation context Literal setWithinDefined node MemberReference MemberReference MemberReference MemberReference definition context Literal setWithinDefined true runtime context self aBlock false	1
MethodDeclaration Modifier ReferenceType getTypeInstance FormalParameter FormalParameter ReturnStatement public String BasicType i ReferenceType o Literal double String "double,string"	0
MethodDeclaration Modifier BasicType isLive ReturnStatement public boolean BinaryOperation != MemberReference Literal prevAdded null	0
MethodDeclaration Modifier Annotation ReferenceType not_implemented1 FormalParameter LocalVariableDeclaration ThrowStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType arg ReferenceType VariableDeclarator MethodInvocation name ElementArrayValue frame Literal IRubyObject String error BinaryOperation MethodInvocation getRuntime Literal true + BinaryOperation Literal MemberReference newNotImplementedError "&" + Literal MethodInvocation " not implemented" error "Process::Status#" MethodInvocation MethodInvocation getRuntime getCurrentContext getFrameName	1
MethodDeclaration Modifier ReferenceType getName ReturnStatement public String MemberReference callAdapter methodName	0
MethodDeclaration Modifier ReferenceType newComplexRaw FormalParameter FormalParameter ReturnStatement static RubyComplex ReferenceType runtime ReferenceType x ClassCreator Ruby IRubyObject ReferenceType MemberReference MethodInvocation MemberReference MethodInvocation RubyComplex runtime runtime getComplex x RubyFixnum MemberReference zero runtime	0
MethodDeclaration Modifier ReferenceType getCallback FormalParameter FormalParameter FormalParameter ReturnStatement final Callback ReferenceType runtime ReferenceType cbInfo ReferenceType proc MethodInvocation Ruby CallbackInfo Block MemberReference MemberReference MemberReference newCallback runtime cbInfo proc	0
MethodDeclaration Modifier ReferenceType yyparse FormalParameter FormalParameter java.io.IOException yyException StatementExpression ReturnStatement public Object ReferenceType yyLex ReferenceType ayydebug Assignment MethodInvocation RubyYaccLexer Object This Cast = MemberReference yyparse MemberReference ReferenceType MemberReference yyLex yydebug jay ReferenceType ayydebug yydebug ReferenceType yyDebug	1
MethodDeclaration Modifier ReferenceType getNodeType ReturnStatement public NodeType MemberReference NodeType ARGUMENTNODE	0
MethodDeclaration Modifier BasicType isSpecificArity ReturnStatement public boolean MemberReference specificArity	0
MethodDeclaration Modifier Annotation ReferenceType open19 FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType path ReferenceType block ReferenceType VariableDeclarator MethodInvocation name Literal required Literal frame Literal meta Literal compat MemberReference ThreadContext IRubyObject IRubyObject Block RubyString pathString TernaryExpression MemberReference MemberReference MemberReference MemberReference open "open" 1 true true CompatVersion RUBY1_9 BinaryOperation Cast MethodInvocation context recv pathString block instanceof MemberReference ReferenceType ReferenceType MemberReference path MethodInvocation MemberReference Literal callMethod path RubyString RubyString path convertToString context "to_path"	0
MethodDeclaration Modifier ReferenceType getPosition2 FormalParameter ReturnStatement private ISourcePosition ReferenceType pos TernaryExpression ISourcePositionHolder BinaryOperation MethodInvocation MethodInvocation == MemberReference Literal lexer getPosition pos getPosition pos null	0
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter IfStatement ReturnStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType arg0 BinaryOperation StatementExpression MethodInvocation ThreadContext IRubyObject RubyModule String IRubyObject == MemberReference Literal MethodInvocation compiledMethod MemberReference MemberReference MemberReference MemberReference MemberReference call compiledMethod null initializeMethod context self clazz name arg0	1
MethodDeclaration Modifier Annotation endBody StatementExpression LocalVariableDeclaration StatementExpression StatementExpression public Override MethodInvocation ReferenceType VariableDeclarator MethodInvocation MethodInvocation method areturn Label end ClassCreator method MemberReference label method end ReferenceType end Label	0
MethodDeclaration setIO FormalParameter StatementExpression ReferenceType ioClass Assignment RubyClass This MemberReference = MemberReference ioClass ioClass	0
MethodDeclaration Modifier ReferenceType case22_line382 FormalParameter FormalParameter FormalParameter IfStatement StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop BinaryOperation BlockStatement Assignment MemberReference Object Object int || MethodInvocation MethodInvocation StatementExpression MemberReference ClassCreator = yyVal support isInDef support isInSingle MethodInvocation yyVal ReferenceType MethodInvocation Cast warnings MemberReference MethodInvocation Literal warn PostExeNode Cast getPosition ReferenceType MemberReference ID END_IN_METHOD Cast getPosition "END in method; use at_exit" ReferenceType MemberReference Node ArraySelector yyVals ReferenceType MemberReference Node ArraySelector yyVals BinaryOperation Token ArraySelector yyVals BinaryOperation + Literal MemberReference BinaryOperation + Literal MemberReference - 1 yyTop + Literal MemberReference - 1 yyTop - 3 yyTop	1
MethodDeclaration Modifier Annotation ReferenceType unbind FormalParameter LocalVariableDeclaration StatementExpression ReturnStatement public JRubyMethod ElementValuePair ElementValuePair RubyUnboundMethod ReferenceType unusedBlock ReferenceType VariableDeclarator MethodInvocation MemberReference name Literal frame Literal Block RubyUnboundMethod unboundMethod MethodInvocation unboundMethod This infectBy unboundMethod "unbind" true RubyUnboundMethod MemberReference MemberReference MemberReference MemberReference MemberReference newUnboundMethod implementationModule methodName originModule originName method	0
MethodDeclaration Modifier ReferenceType case105_line682 FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop MethodInvocation Assignment MemberReference Object Object int lexer MemberReference setState MemberReference Cast = yyVal LexState EXPR_END yyVal ReferenceType MemberReference Token ArraySelector yyVals BinaryOperation + Literal MemberReference 0 yyTop	1
MethodDeclaration Modifier Annotation ReferenceType yieldSpecific FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ThrowStatement public Override IRubyObject ReferenceType context ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 ReferenceType arg3 ReferenceType arg4 ReferenceType arg5 ReferenceType binding ReferenceType type MethodInvocation ThreadContext IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject Binding Type context MethodInvocation getRuntime MemberReference MethodInvocation Literal newLocalJumpError RubyLocalJumpError.Reason NOREASON context MethodInvocation getRuntime "yield called out of block" getNil	0
MethodDeclaration Modifier BasicType isDoubleStarAndSlash FormalParameter FormalParameter IfStatement ReturnStatement private static boolean BasicType bytes BasicType pos BinaryOperation BlockStatement BinaryOperation byte int <= BinaryOperation Literal ReturnStatement && BinaryOperation BinaryOperation - MemberReference MemberReference 2 Literal && BinaryOperation BinaryOperation == MemberReference Literal bytes length pos false == MemberReference Literal == MemberReference Literal ArraySelector bytes '/' ArraySelector bytes '*' ArraySelector bytes '*' BinaryOperation MemberReference BinaryOperation + MemberReference Literal pos + MemberReference Literal pos 2 pos 1	0
MethodDeclaration Modifier Annotation ReferenceType setgid FormalParameter FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType arg MethodInvocation name Literal module Literal visibility MemberReference ThreadContext IRubyObject IRubyObject MethodInvocation MemberReference gid_set "setgid" true Visibility PRIVATE context getRuntime arg	0
MethodDeclaration Modifier get FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression final public BasicType offset BasicType dst BasicType off BasicType len MethodInvocation long long int int IO BinaryOperation MemberReference MemberReference MemberReference getLongArray + MemberReference MemberReference dst off len address offset	0
MethodDeclaration Modifier Annotation ReferenceType setIterNode FormalParameter ReturnStatement public Override Node ReferenceType iterNode ClassCreator Node ReferenceType MethodInvocation MethodInvocation Cast Cast FCallThreeArgBlockNode getPosition getName ReferenceType MethodInvocation ReferenceType MemberReference ArrayNode getArgsNode IterNode iterNode	0
MethodDeclaration Modifier Annotation Annotation ReferenceType inspect IfStatement LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression LocalVariableDeclaration IfStatement ForStatement ReturnStatement public JRubyMethod ElementValuePair Override IRubyObject BinaryOperation ReturnStatement ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation ReferenceType VariableDeclarator BinaryOperation BlockStatement ForControl BlockStatement MethodInvocation name Literal == MemberReference Literal MethodInvocation Ruby runtime MethodInvocation RubyString result MethodInvocation result MethodInvocation Cast cat result MethodInvocation append NameEntry names ArrayCreator > MethodInvocation Literal ForStatement VariableDeclaration BinaryOperation MemberReference StatementExpression IfStatement LocalVariableDeclaration IfStatement result Cast cat "inspect" str null anyToString getRuntime runtime newString Cast cat BasicType Literal MethodInvocation MethodInvocation getMetaClass ReferenceType TernaryExpression pattern numberOfNames 0 ForControl BlockStatement BasicType VariableDeclarator < MemberReference MemberReference ++ i MethodInvocation BinaryOperation BlockStatement ReferenceType VariableDeclarator MethodInvocation BlockStatement BlockStatement BasicType Literal BasicType Literal byte '#' getRealClass to_s NameEntry BinaryOperation Literal MemberReference VariableDeclaration MethodInvocation LocalVariableDeclaration ForStatement int i Literal i names length result Cast cat > MemberReference Literal LocalVariableDeclaration IfStatement StatementExpression IRubyObject v MethodInvocation v isNil StatementExpression StatementExpression byte '>' byte '<' == MemberReference Literal 1 regs numRegs ReferenceType VariableDeclarator i hasNext ReferenceType VariableDeclarator EnhancedForControl StatementExpression 0 BasicType Literal i 0 ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement MethodInvocation RubyRegexp MemberReference This nth_match MethodInvocation MethodInvocation regs null Iterator TypeArgument i MethodInvocation NameEntry e MethodInvocation VariableDeclaration MethodInvocation Assignment byte ' ' NameEntry e MemberReference != MemberReference Literal StatementExpression StatementExpression result Cast cat i result Literal cat result Cast append ReferenceType pattern namedBackrefIterator i next BasicType VariableDeclarator e getBackRefs MemberReference MemberReference = ArraySelector names e null MethodInvocation MethodInvocation BasicType Literal MethodInvocation "nil" ReferenceType MemberReference NameEntry int num ArraySelector names e MemberReference result MemberReference MemberReference BinaryOperation cat result Cast cat byte ':' getBytes RubyString str MemberReference i e name e nameP - MemberReference MemberReference BasicType BinaryOperation num e nameEnd e nameP byte + Literal MemberReference '0' i	1
MethodDeclaration Modifier Annotation ReferenceType autorelease FormalParameter FormalParameter IfStatement ReturnStatement final public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType release BinaryOperation BlockStatement MethodInvocation name Literal required Literal ThreadContext IRubyObject && BinaryOperation BinaryOperation StatementExpression context MethodInvocation getRuntime "autorelease=" 1 != MemberReference MethodInvocation instanceof MethodInvocation ReferenceType Cast getNil autorelease release isTrue getMemoryIO AllocatedDirectMemoryIO ReferenceType MethodInvocation AllocatedDirectMemoryIO getMemoryIO	1
MethodDeclaration Modifier Annotation Annotation ReferenceType s_pop FormalParameter Exception LocalVariableDeclaration LocalVariableDeclaration IfStatement LocalVariableDeclaration StatementExpression ReturnStatement static public JRubyMethod ElementValuePair SuppressWarnings Literal IRubyObject ReferenceType recv ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation ReturnStatement ReferenceType VariableDeclarator MethodInvocation MemberReference name Literal "unchecked" IRubyObject Ruby runtime MethodInvocation ConsoleHolder holder MethodInvocation == MethodInvocation Literal MethodInvocation RubyString output MethodInvocation output MethodInvocation taint output "pop" recv getRuntime MemberReference getHolder holder.history size 0 runtime getNil runtime Cast newString runtime getCurrentContext runtime ReferenceType MethodInvocation String holder.history pop	1
MethodDeclaration Modifier ReferenceType getBodyNode ReturnStatement public Node MemberReference bodyNode	0
MethodDeclaration Modifier ReferenceType defineClass FormalParameter FormalParameter FormalParameter ReturnStatement public RubyClass ReferenceType name ReferenceType superClass ReferenceType allocator MethodInvocation String RubyClass ObjectAllocator MemberReference MemberReference MemberReference MemberReference defineClassUnder name superClass allocator objectClass	0
MethodDeclaration Modifier ReferenceType getValueNode ReturnStatement public Node MemberReference valueNode	0
MethodDeclaration Modifier Annotation ReferenceType slice_bang FormalParameter FormalParameter SwitchStatement public Deprecated IRubyObject ReferenceType context ReferenceType args MemberReference SwitchStatementCase SwitchStatementCase SwitchStatementCase ThreadContext IRubyObject args length Literal ReturnStatement Literal ReturnStatement StatementExpression ReturnStatement 1 MethodInvocation 2 MethodInvocation MethodInvocation Literal MemberReference MemberReference slice_bang MemberReference MemberReference MemberReference slice_bang Arity MethodInvocation MemberReference Literal Literal raiseArgumentError null context ArraySelector args context ArraySelector args ArraySelector args context getRuntime args length 1 2 Literal Literal Literal 0 0 1	1
MethodDeclaration Modifier setArgsNode FormalParameter StatementExpression public ReferenceType argsNode Assignment Node This MemberReference = MemberReference argsNode argsNode	0
MethodDeclaration Modifier ReferenceType f_mul FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement static public IRubyObject ReferenceType context ReferenceType x ReferenceType y ReferenceType VariableDeclarator BinaryOperation BlockStatement IfStatement MethodInvocation ThreadContext IRubyObject IRubyObject Ruby runtime MethodInvocation instanceof MemberReference ReferenceType LocalVariableDeclaration IfStatement BinaryOperation BlockStatement x MemberReference Literal MemberReference callMethod context getRuntime y RubyFixnum BasicType VariableDeclarator BinaryOperation BlockStatement IfStatement instanceof MemberReference ReferenceType LocalVariableDeclaration IfStatement context "*" y long iy Cast == MemberReference Literal IfStatement BinaryOperation BlockStatement x RubyFixnum BasicType VariableDeclarator BinaryOperation BlockStatement IfStatement ReferenceType MemberReference iy 0 BinaryOperation ReturnStatement == MemberReference Literal ReturnStatement long ix Cast == MemberReference Literal IfStatement BinaryOperation BlockStatement RubyFixnum y || BinaryOperation BinaryOperation MethodInvocation iy 1 MemberReference ReferenceType MemberReference ix 0 BinaryOperation ReturnStatement == MemberReference Literal ReturnStatement instanceof MemberReference ReferenceType instanceof MemberReference ReferenceType RubyFixnum MemberReference zero x RubyFixnum x || BinaryOperation BinaryOperation MethodInvocation ix 1 MemberReference x RubyFixnum x RubyBignum runtime instanceof MemberReference ReferenceType instanceof MemberReference ReferenceType RubyFixnum MemberReference zero y y RubyFixnum y RubyBignum runtime	1
MethodDeclaration Modifier Annotation ReferenceType copy_data FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement LocalVariableDeclaration LocalVariableDeclaration IfStatement LocalVariableDeclaration ForStatement IfStatement ReturnStatement static public JRubyMethod IRubyObject ReferenceType context ReferenceType rubyArray ReferenceType javaArray ReferenceType fillValue ReferenceType VariableDeclarator ReferenceType VariableDeclarator BasicType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation BlockStatement ReferenceType VariableDeclarator BasicType VariableDeclarator BinaryOperation BlockStatement BlockStatement BasicType VariableDeclarator ForControl BlockStatement BinaryOperation BlockStatement MemberReference ThreadContext IRubyObject IRubyObject IRubyObject JavaArray javaArrayJavaObj Cast Object fillJavaObject Literal int javaLength Cast Class targetType MethodInvocation ! fillValue isNil StatementExpression RubyArray array Literal int rubyLength instanceof MemberReference ReferenceType StatementExpression StatementExpression StatementExpression StatementExpression int i Literal BinaryOperation MemberReference StatementExpression && BinaryOperation BinaryOperation StatementExpression javaArray ReferenceType MethodInvocation null BasicType MethodInvocation javaArrayJavaObj getComponentType Assignment null rubyArray RubyArray Assignment Assignment Assignment Assignment 0 && BinaryOperation BinaryOperation ++ i MethodInvocation < MemberReference MemberReference != MemberReference Literal MethodInvocation JavaArray javaArray dataGetStruct int javaArrayJavaObj MethodInvocation length MemberReference MethodInvocation = MemberReference Cast = MemberReference Cast = MemberReference Literal = MemberReference MethodInvocation = < MemberReference MemberReference < MemberReference MemberReference javaArrayJavaObj MemberReference MethodInvocation setWithExceptionHandling i javaLength fillJavaObject null javaArrayJavaObj MemberReference MemberReference MemberReference fillWithExceptionHandling getLongValue fillJavaObject fillValue MemberReference toJava array ReferenceType MemberReference rubyLength ReferenceType MemberReference rubyLength 0 fillJavaObject rubyArray MemberReference toJava i rubyLength i javaLength i array MethodInvocation MemberReference entry i javaLength fillJavaObject targetType RubyArray rubyArray RubyArray rubyArray targetType MemberReference toJava i targetType	1
MethodDeclaration Modifier ReferenceType newDRegexp FormalParameter FormalParameter FormalParameter TryStatement static public RubyRegexp ReferenceType runtime ReferenceType pattern BasicType options ReturnStatement CatchClause Ruby RubyString int ClassCreator CatchClauseParameter ThrowStatement ReferenceType MemberReference MethodInvocation MemberReference RaiseException re MethodInvocation RubyRegexp runtime pattern getByteList options runtime MethodInvocation newRegexpError re getMessage	1
MethodDeclaration Modifier assignAliases FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration StatementExpression LocalVariableDeclaration LocalVariableDeclaration ForStatement private static ReferenceType installer ReferenceType assignedNames ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation ReferenceType VariableDeclarator ReferenceType VariableDeclarator EnhancedForControl BlockStatement MethodInstaller Map TypeArgument TypeArgument String name MemberReference String rubyCasedName MethodInvocation MemberReference MemberReference MemberReference addUnassignedAlias String javaPropertyName MethodInvocation String rubyPropertyName Literal VariableDeclaration MemberReference LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement IfStatement ReferenceType ReferenceType installer name JavaUtil MemberReference getRubyCasedName rubyCasedName assignedNames installer JavaUtil MemberReference getJavaPropertyName null ReferenceType VariableDeclarator installer methods ReferenceType VariableDeclarator ReferenceType VariableDeclarator BasicType VariableDeclarator BinaryOperation BlockStatement BinaryOperation BlockStatement String AssignedName name name Method method Class TypeArgument argTypes MethodInvocation Class TypeArgument resultType MethodInvocation int argCount MemberReference != MemberReference Literal IfStatement == MemberReference ClassReference StatementExpression IfStatement ? method getParameterTypes ? method getReturnType argTypes length javaPropertyName null MethodInvocation BlockStatement IfStatement resultType BasicType MethodInvocation BinaryOperation BlockStatement rubyCasedName Literal startsWith StatementExpression IfStatement MethodInvocation BlockStatement IfStatement boolean BinaryOperation MemberReference MemberReference addUnassignedAlias != MemberReference Literal StatementExpression "get_" Assignment BinaryOperation BlockStatement rubyCasedName Literal startsWith StatementExpression IfStatement MethodInvocation BlockStatement + MemberReference Literal assignedNames installer rubyPropertyName null MethodInvocation MemberReference MethodInvocation = || BinaryOperation BinaryOperation StatementExpression StatementExpression "set_" Assignment BinaryOperation BlockStatement rubyCasedName Literal startsWith StatementExpression IfStatement rubyCasedName '?' BinaryOperation MemberReference MemberReference addUnassignedAlias rubyPropertyName rubyCasedName Literal substring == MemberReference Literal && BinaryOperation BinaryOperation MethodInvocation MethodInvocation MemberReference MethodInvocation = && BinaryOperation BinaryOperation StatementExpression StatementExpression "is_" Assignment BinaryOperation BlockStatement + MemberReference Literal assignedNames installer 4 argCount 0 == MemberReference Literal == MemberReference ClassReference MemberReference MemberReference MemberReference addUnassignedAlias MemberReference MemberReference MemberReference addUnassignedAlias rubyPropertyName rubyCasedName Literal substring == MemberReference Literal == MemberReference VoidClassReference MethodInvocation MethodInvocation MemberReference MethodInvocation = == MemberReference ClassReference StatementExpression StatementExpression rubyPropertyName '?' argCount 1 ArraySelector argTypes BasicType javaPropertyName assignedNames installer rubyPropertyName assignedNames installer 4 argCount 1 resultType BinaryOperation MemberReference MemberReference addUnassignedAlias BinaryOperation MemberReference MemberReference addUnassignedAlias rubyPropertyName rubyCasedName Literal substring resultType BasicType MethodInvocation MethodInvocation Literal int + MemberReference Literal assignedNames installer + MemberReference Literal assignedNames installer 3 boolean MemberReference MemberReference MemberReference addUnassignedAlias MemberReference MemberReference MemberReference addUnassignedAlias 0 javaPropertyName '=' rubyPropertyName '=' javaPropertyName assignedNames installer rubyPropertyName assignedNames installer	1
MethodDeclaration Modifier Annotation ReferenceType mday ReturnStatement public JRubyMethod ElementValuePair RubyInteger MethodInvocation name ElementArrayValue MethodInvocation getRuntime Literal Literal MethodInvocation newFixnum "mday" "day" dt getDayOfMonth	0
MethodDeclaration Modifier Annotation ReferenceType chars19 FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject Modifier ReferenceType context Modifier ReferenceType block TernaryExpression name Literal frame Literal final ThreadContext final Block MethodInvocation MethodInvocation MethodInvocation "chars" true block isGiven MemberReference MemberReference each_char MethodInvocation This Literal enumeratorize context block context getRuntime "chars"	0
MethodDeclaration Modifier BasicType isFailed ReturnStatement public boolean MemberReference failed	0
MethodDeclaration Modifier BasicType isValidInstanceVariableName FormalParameter LocalVariableDeclaration IfStatement ReturnStatement static public boolean ReferenceType id BasicType VariableDeclarator BinaryOperation BlockStatement Literal String int len && BinaryOperation BinaryOperation IfStatement ReturnStatement false > Assignment Literal == Literal MethodInvocation BinaryOperation BlockStatement Literal MemberReference MethodInvocation = 0 '@' id Literal charAt > MemberReference Literal IfStatement ReturnStatement true len id length 0 len 1 MethodInvocation BlockStatement Literal MethodInvocation isInitialCharacter ReturnStatement false id Literal charAt MethodInvocation 1 MemberReference Literal MemberReference isNameString id 2 len	1
MethodDeclaration Modifier checkUnicodeRange FormalParameter FormalParameter FormalParameter FormalParameter IfStatement private static ReferenceType runtime BasicType code ReferenceType str ReferenceType mode BinaryOperation BlockStatement Ruby int ByteList ErrorMode || BinaryOperation BinaryOperation StatementExpression && BinaryOperation BinaryOperation < Literal MemberReference MethodInvocation <= Literal MemberReference <= MemberReference Literal 0x10ffff code MemberReference MemberReference Literal MemberReference raisePreprocessError 0xd800 code code 0xdfff runtime str "invalid Unicode range" mode	1
MethodDeclaration Modifier BasicType getInteger ReturnStatement public long MemberReference n	0
MethodDeclaration Modifier removeEntry FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement StatementExpression private ReferenceType ent BasicType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation Entry int idx MethodInvocation Entry entry MemberReference != MemberReference Literal IfStatement MemberReference valueRemoved MemberReference index ArraySelector table entry null BinaryOperation BlockStatement BlockStatement ent value ent key_hash MemberReference == MemberReference MemberReference StatementExpression StatementExpression ReturnStatement LocalVariableDeclaration WhileStatement idx entry ent Assignment Assignment ReferenceType VariableDeclarator BinaryOperation BlockStatement MemberReference MemberReference = MemberReference Literal -= Entry ahead MemberReference != MemberReference Literal IfStatement StatementExpression StatementExpression ArraySelector table entry next size 1 entry next ahead null BinaryOperation BlockStatement Assignment Assignment MemberReference == MemberReference MemberReference StatementExpression StatementExpression ReturnStatement MemberReference MemberReference = MemberReference MemberReference = idx ahead ent Assignment Assignment entry ahead ahead ahead next MemberReference MemberReference = MemberReference Literal -= entry next ahead next size 1	0
MethodDeclaration Modifier ReferenceType rubyToJava FormalParameter LocalVariableDeclaration ReturnStatement static public Object ReferenceType value ReferenceType VariableDeclarator MethodInvocation IRubyObject Ruby runtime MethodInvocation value ClassReference toJava value getRuntime ReferenceType Object	1
MethodDeclaration Modifier updateFrameForEval FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression public ReferenceType self ReferenceType fileName BasicType line Assignment Assignment Assignment Assignment Assignment Assignment IRubyObject String int This MemberReference = This Literal = This MemberReference = This MemberReference = This MemberReference = This Literal = MemberReference self MemberReference null MemberReference fileName MemberReference line MemberReference Visibility PRIVATE MemberReference false self name fileName line visibility isBindingFrame	0
MethodDeclaration Modifier BasicType internalStreamEndP ReturnStatement protected boolean MethodInvocation flater finished	0
MethodDeclaration Modifier Annotation ReferenceType euid FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv MethodInvocation name Literal module Literal visibility MemberReference ThreadContext IRubyObject MethodInvocation euid "euid" true Visibility PRIVATE context getRuntime	0
MethodDeclaration Modifier compileXStr FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration StatementExpression IfStatement public ReferenceType node ReferenceType context BasicType expr Modifier ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MemberReference StatementExpression Node BodyCompiler boolean final XStrNode xstrNode Cast ArgumentsCallback argsCallback ClassCreator context MethodInvocation getInvocationCompiler ! expr MethodInvocation ReferenceType MemberReference ReferenceType MethodDeclaration MethodDeclaration Literal Literal MemberReference MemberReference Literal Literal invokeDynamic context consumeCurrentValue XStrNode node ArgumentsCallback Modifier BasicType getArity ReturnStatement Modifier call FormalParameter StatementExpression "`" null argsCallback CallType FUNCTIONAL null false public int Literal public ReferenceType context MethodInvocation 1 BodyCompiler context MethodInvocation createNewString xstrNode getValue	1
MethodDeclaration Modifier ReferenceType canonicalizeInternal FormalParameter FormalParameter FormalParameter FormalParameter IfStatement IfStatement private static IRubyObject ReferenceType context ReferenceType clazz ReferenceType real ReferenceType image MemberReference BlockStatement BinaryOperation BlockStatement IfStatement ThreadContext IRubyObject IRubyObject IRubyObject Numeric CANON IfStatement && MethodInvocation MethodInvocation ReturnStatement MethodInvocation BlockStatement IfStatement BinaryOperation ReturnStatement MethodInvocation MemberReference MemberReference f_real_p MethodInvocation MemberReference MemberReference f_real_p ClassCreator MethodInvocation MemberReference MemberReference f_real_p LocalVariableDeclaration ReturnStatement MethodInvocation BlockStatement BlockStatement && BinaryOperation MemberReference MemberReference isTrue context real isTrue context image ReferenceType MethodInvocation MemberReference MemberReference MemberReference isTrue context real ReferenceType VariableDeclarator ClassCreator MethodInvocation MemberReference MemberReference f_real_p LocalVariableDeclaration ReturnStatement LocalVariableDeclaration LocalVariableDeclaration ReturnStatement && MethodInvocation BinaryOperation canonicalization real RubyComplex context getRuntime clazz real image RubyComplex complex Cast ReferenceType MethodInvocation MemberReference MethodInvocation MethodInvocation isTrue context image ReferenceType VariableDeclarator ClassCreator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ClassCreator MemberReference MemberReference f_zero_p || MemberReference MethodInvocation ReferenceType MemberReference RubyComplex context getRuntime clazz MemberReference MemberReference MemberReference f_sub MemberReference MethodInvocation MemberReference f_add RubyComplex complex Cast ReferenceType MethodInvocation MemberReference MemberReference MethodInvocation RubyComplex complex1 Cast RubyComplex complex2 Cast ReferenceType MethodInvocation MemberReference MethodInvocation MethodInvocation context image ! CL_CANON MemberReference k_exact_p RubyComplex image context real complex image context RubyFixnum MethodInvocation zero complex real ReferenceType MemberReference RubyComplex context getRuntime clazz complex real MemberReference MemberReference MemberReference f_add ReferenceType MemberReference ReferenceType MemberReference RubyComplex context getRuntime clazz MemberReference MemberReference MemberReference f_sub MemberReference MemberReference MemberReference f_add image context getRuntime RubyComplex real context complex image image RubyComplex real RubyComplex image context complex1 real complex2 image context complex1 image complex2 real	1
MethodDeclaration Modifier ReferenceType case351_line1309 FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MethodInvocation MemberReference Object Object int MemberReference ClassCreator = support popCurrentScope yyVal yyVal ReferenceType MethodInvocation Cast MethodInvocation Cast IterNode Cast getPosition ReferenceType MemberReference support getCurrentScope ReferenceType MemberReference ReferenceType MemberReference Node ArraySelector yyVals Node ArraySelector yyVals Token ArraySelector yyVals BinaryOperation BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference + Literal MemberReference - 2 yyTop - 1 yyTop - 4 yyTop	1
MethodDeclaration Modifier defineModule FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression public Modifier ReferenceType name Modifier ReferenceType staticScope Modifier ReferenceType pathCallback Modifier ReferenceType bodyCallback Modifier ReferenceType inspector ReferenceType VariableDeclarator ReferenceType VariableDeclarator Modifier ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation final String final StaticScope final CompilerCallback final CompilerCallback final ASTInspector String mangledName MethodInvocation String moduleMethodName BinaryOperation final RootScopedBodyCompiler classBody ClassCreator CompilerCallback bodyPrep ClassCreator Label start ClassCreator Label end ClassCreator Label after ClassCreator Label noException ClassCreator classBody.method MemberReference MemberReference MemberReference Literal trycatch classBody MemberReference MemberReference beginMethod classBody.method MemberReference label bodyCallback MemberReference call classBody.method MemberReference label classBody.method MemberReference go_to classBody.method MemberReference label classBody loadThreadContext classBody Literal MethodInvocation invokeThreadContext classBody.method athrow classBody.method MemberReference label classBody loadThreadContext classBody Literal MethodInvocation invokeThreadContext classBody endBody method MemberReference aload loadThreadContext loadSelf method MethodInvocation Literal MethodInvocation getstatic method MethodInvocation Literal MethodInvocation getstatic method MethodInvocation MemberReference MethodInvocation invokestatic JavaNameMangler MemberReference mangleStringForCleanJavaIdentifier + BinaryOperation MemberReference ReferenceType MemberReference MemberReference MemberReference MemberReference ReferenceType MethodDeclaration ReferenceType ReferenceType ReferenceType ReferenceType start end after null bodyPrep staticScope start classBody end noException after "postCompiledClass" MemberReference MethodInvocation sig noException "postCompiledClass" MemberReference MethodInvocation sig StandardASMCompiler THIS ClassReference p "NULL_ARRAY" ClassReference ci ClassReference p "NULL_BLOCK" ClassReference ci script getClassname moduleMethodName StandardASMCompiler MethodInvocation Literal getStaticMethodSignature name + BinaryOperation Literal mangledName ClassBodyCompiler script moduleMethodName inspector staticScope CompilerCallback Modifier call FormalParameter StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression IfStatement Label Label Label Label Void TYPE params Void TYPE params ReferenceType ReferenceType ReferenceType ReferenceType script getClassname 4 + Literal MethodInvocation "$RUBY$" public ReferenceType context MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation BinaryOperation BlockStatement BlockStatement IRubyObject IRubyObject Block Block "module__" script getAndIncrementMethodIndex BodyCompiler classBody loadThreadContext pathCallback MemberReference call classBody Literal MethodInvocation invokeUtilityMethod classBody.method MemberReference ldc classBody.method MethodInvocation Literal MethodInvocation invokevirtual classBody.method dup classBody.method MemberReference astore classBody loadThreadContext classBody.method swap script MethodInvocation getCacheCompiler || MethodInvocation MethodInvocation StatementExpression StatementExpression classBody "prepareClassNamespace" ClassReference MethodInvocation sig name ClassReference p "defineOrGetModuleUnder" ClassReference MethodInvocation sig StandardASMCompiler SELF_INDEX MemberReference MemberReference cacheStaticScope inspector hasClosure inspector hasScopeAwareMethods MethodInvocation MethodInvocation ReferenceType ClassReference ClassReference params ReferenceType ReferenceType ClassReference params classBody staticScope classBody Literal MethodInvocation invokeThreadContext classBody Literal MethodInvocation invokeThreadContext RubyModule ReferenceType ReferenceType RubyModule RubyModule ReferenceType "preCompiledClass" MemberReference MethodInvocation sig "preCompiledClassDummyScope" MemberReference MethodInvocation sig ThreadContext IRubyObject String Void TYPE ClassReference ClassReference params Void TYPE ClassReference ClassReference params ReferenceType ReferenceType ReferenceType ReferenceType RubyModule StaticScope RubyModule StaticScope	0
MethodDeclaration Modifier ReferenceType getArity ReturnStatement public Arity MemberReference arity	0
MethodDeclaration Modifier ReferenceType indexCommon FormalParameter FormalParameter FormalParameter FormalParameter IfStatement ReturnStatement private IRubyObject ReferenceType runtime ReferenceType context ReferenceType sub BasicType pos BinaryOperation BlockStatement IfStatement TernaryExpression Ruby ThreadContext IRubyObject int instanceof MemberReference ReferenceType LocalVariableDeclaration StatementExpression StatementExpression BinaryOperation BlockStatement IfStatement BinaryOperation MethodInvocation MethodInvocation sub RubyRegexp ReferenceType VariableDeclarator Assignment Assignment instanceof MemberReference ReferenceType LocalVariableDeclaration IfStatement LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression ForStatement ReturnStatement BinaryOperation BlockStatement BlockStatement == MemberReference Literal runtime getNil RubyFixnum MemberReference MemberReference newFixnum RubyRegexp regSub Cast MemberReference MethodInvocation = MemberReference MethodInvocation = sub RubyFixnum BasicType VariableDeclarator BinaryOperation BlockStatement BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator Assignment ForControl BlockStatement MethodInvocation instanceof MemberReference ReferenceType StatementExpression LocalVariableDeclaration IfStatement StatementExpression pos - 1 runtime pos ReferenceType MemberReference pos regSub This MemberReference Literal adjustStartPos pos regSub MemberReference This MemberReference Literal search int c_int MethodInvocation || BinaryOperation BinaryOperation ReturnStatement byte c Cast byte bytes MemberReference int end BinaryOperation MemberReference MemberReference += BinaryOperation MemberReference IfStatement runtime getNil sub RubyString Assignment ReferenceType VariableDeclarator MethodInvocation ThrowStatement Assignment RubyRegexp sub pos false context pos false RubyNumeric Cast fix2int < MemberReference Literal > MemberReference Literal MethodInvocation BasicType MemberReference value bytes + MemberReference MemberReference pos value begin < MemberReference MemberReference ++ pos BinaryOperation ReturnStatement MemberReference MethodInvocation = IRubyObject tmp MethodInvocation tmp isNil MethodInvocation MemberReference MethodInvocation = ReferenceType MemberReference c_int 0x00 c_int 0xFF runtime getNil byte c_int value begin value realSize pos end == MemberReference MemberReference MethodInvocation pos Cast MemberReference strIndex sub checkStringType runtime BinaryOperation newTypeError pos Cast MemberReference strIndex RubyFixnum sub ArraySelector bytes c RubyFixnum MemberReference BinaryOperation newFixnum ReferenceType MemberReference pos + BinaryOperation Literal ReferenceType MemberReference pos MemberReference runtime - MemberReference MemberReference RubyString sub + Literal MethodInvocation " given" RubyString tmp pos pos value begin "type mismatch: " sub MethodInvocation getMetaClass getName	1
MethodDeclaration Modifier Annotation ReferenceType op_minus FormalParameter FormalParameter SwitchStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType other MethodInvocation SwitchStatementCase SwitchStatementCase name Literal required Literal ThreadContext IRubyObject other MemberReference getMetaClass MemberReference MemberReference MemberReference ReturnStatement ReturnStatement "-" 1 index ClassIndex FIXNUM ClassIndex BIGNUM ClassIndex FLOAT MethodInvocation MethodInvocation RubyFloat MethodInvocation BinaryOperation newFloat MemberReference Literal MemberReference coerceBin getRuntime - MemberReference Cast context "-" other value ReferenceType MemberReference RubyNumeric other	1
MethodDeclaration Modifier Annotation ReferenceType close StatementExpression StatementExpression StatementExpression StatementExpression ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject MethodInvocation MethodInvocation Assignment Assignment MethodInvocation name Literal frame Literal checkInitialized checkOpen MemberReference Literal = MemberReference Literal = MethodInvocation getRuntime "close" true closedRead true closedWrite true getNil	0
MethodDeclaration Modifier BasicType getAndIncrementMethodIndex ReturnStatement public int MemberReference ++ methodIndex	0
MethodDeclaration Modifier Annotation ReferenceType to_r FormalParameter LocalVariableDeclaration LocalVariableDeclaration StatementExpression LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context BasicType VariableDeclarator BasicType VariableDeclarator Assignment BasicType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation name Literal compat MemberReference ThreadContext long exp ArrayCreator double f MethodInvocation MemberReference MethodInvocation = long n BinaryOperation Ruby runtime MethodInvocation IRubyObject rf MethodInvocation IRubyObject rn MethodInvocation MemberReference MemberReference MethodInvocation f_mul "to_r" CompatVersion RUBY1_9 BasicType Literal MemberReference MemberReference frexp f MemberReference MemberReference ldexp - MemberReference MemberReference context getRuntime RubyNumeric MemberReference MemberReference dbl2num RubyFixnum MemberReference MemberReference newFixnum context rf MemberReference MethodInvocation MemberReference f_expt long 1 value exp f DBL_MANT_DIG ArraySelector exp DBL_MANT_DIG runtime f runtime n context RubyFixnum MemberReference MemberReference newFixnum rn Literal runtime FLT_RADIX 0	1
MethodDeclaration Modifier ReferenceType dup ReturnStatement public DynamicMethod ClassCreator ReferenceType MemberReference MemberReference MemberReference AliasMethod implementationClass oldMethod oldName	0
MethodDeclaration Modifier BasicType compare FormalParameter FormalParameter IfStatement IfStatement ReturnStatement public int ReferenceType o1 ReferenceType o2 BinaryOperation BlockStatement BinaryOperation BlockStatement MethodInvocation Object Object && BinaryOperation BinaryOperation ReturnStatement && BinaryOperation BinaryOperation ReturnStatement MemberReference Cast Cast compareOthers instanceof MemberReference ReferenceType instanceof MemberReference ReferenceType MethodInvocation instanceof MemberReference ReferenceType instanceof MemberReference ReferenceType Cast context ReferenceType MemberReference ReferenceType MemberReference o1 RubyFixnum o2 RubyFixnum Cast Cast compareFixnums o1 RubyString o2 RubyString ReferenceType MemberReference IRubyObject o1 IRubyObject o2 ReferenceType MemberReference ReferenceType MemberReference RubyString o1 RubyFixnum o1 RubyFixnum o2	0
MethodDeclaration Modifier update StatementExpression synchronized public Assignment MemberReference ClassCreator = token ReferenceType Object	0
MethodDeclaration Modifier ReferenceType yieldSpecific FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType context ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 ReferenceType binding ReferenceType type MethodInvocation ThreadContext IRubyObject IRubyObject IRubyObject Binding Block ReferenceType MemberReference ArrayCreator MemberReference MemberReference yieldSpecificInternal Type context ReferenceType ArrayInitializer binding type IRubyObject MemberReference MemberReference MemberReference arg0 arg1 arg2	0
MethodDeclaration Modifier ReferenceType case370_line1395 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference Cast = yyVal yyVal ReferenceType MemberReference Node ArraySelector yyVals BinaryOperation + Literal MemberReference - 1 yyTop	1
MethodDeclaration Modifier ReferenceType reject_bang FormalParameter FormalParameter LocalVariableDeclaration StatementExpression IfStatement ReturnStatement public IRubyObject ReferenceType context ReferenceType block BasicType VariableDeclarator MethodInvocation BinaryOperation ReturnStatement This ThreadContext Block int n MemberReference MemberReference MemberReference delete_if == MemberReference MemberReference MethodInvocation size context block n size MethodInvocation getRuntime getNil	1
MethodDeclaration Modifier Annotation ReferenceType taint FormalParameter ReturnStatement public Override IRubyObject ReferenceType context This ThreadContext	0
MethodDeclaration Modifier Annotation ReferenceType round ReturnStatement public JRubyMethod ElementValuePair IRubyObject MethodInvocation name Literal MethodInvocation convertToFloat "round" round	0
MethodDeclaration Modifier ReferenceType f_abs FormalParameter FormalParameter ReturnStatement static public IRubyObject ReferenceType context ReferenceType x MethodInvocation ThreadContext IRubyObject x MemberReference Literal callMethod context "abs"	1
MethodDeclaration Modifier printException FormalParameter FormalParameter IfStatement private static ReferenceType runtime ReferenceType exception BinaryOperation BlockStatement Ruby Exception instanceof MemberReference ReferenceType LocalVariableDeclaration IfStatement exception RaiseException ReferenceType VariableDeclarator BinaryOperation BlockStatement IfStatement JumpException je Cast instanceof MemberReference ReferenceType StatementExpression BinaryOperation BlockStatement IfStatement ReferenceType MemberReference je RaiseException MethodInvocation instanceof MemberReference ReferenceType StatementExpression BinaryOperation BlockStatement IfStatement JumpException exception runtime Cast printError je JumpException ReferenceType MethodInvocation instanceof MemberReference ReferenceType StatementExpression BinaryOperation BlockStatement ReferenceType MemberReference ThrowJump runtime MethodInvocation getErrorStream je JumpException ReferenceType MethodInvocation instanceof MemberReference ReferenceType StatementExpression RaiseException je Literal println BreakJump runtime MethodInvocation getErrorStream je JumpException ReferenceType MethodInvocation "internal error: throw jump caught" Literal println ReturnJump runtime MethodInvocation getErrorStream "break without block." Literal println "return without block."	0
MethodDeclaration Modifier Annotation ReferenceType closed_p ReturnStatement public JRubyMethod ElementValuePair IRubyObject TernaryExpression name Literal MemberReference MethodInvocation MethodInvocation "closed?" closed MethodInvocation getRuntime MethodInvocation getRuntime getTrue getFalse	1
MethodDeclaration Modifier write FormalParameter FormalParameter StatementExpression protected ReferenceType context ReferenceType byteList MethodInvocation ThreadContext ByteList MemberReference Literal MethodInvocation callMethod context "write" RubyString MethodInvocation MemberReference newStringShared context getRuntime byteList	0
MethodDeclaration Modifier init StatementExpression StatementExpression public Assignment Assignment MemberReference MethodInvocation = MemberReference ClassCreator = _setSize _prob getDFVarsCount _in ReferenceType MemberReference BitSet _setSize	0
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType arg0 ReferenceType arg1 ReferenceType block MethodInvocation ThreadContext IRubyObject RubyModule String IRubyObject IRubyObject Block MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference call context self clazz name arg0 arg1	0
MethodDeclaration Modifier Annotation BasicType convertRubyToJavaShort FormalParameter ReturnStatement static public Deprecated short ReferenceType rubyObject Cast IRubyObject ReferenceType MethodInvocation Short MemberReference ClassReference convertRubyToJava rubyObject BasicType short	1
MethodDeclaration Modifier setFilename FormalParameter StatementExpression final public ReferenceType filename Assignment String This MemberReference = MemberReference filename filename	0
MethodDeclaration Modifier ReferenceType case367_line1383 FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment Cast MemberReference Object Object int MemberReference Cast = ReferenceType MemberReference yyVal yyVal ReferenceType MemberReference ISourcePositionHolder yyVal ArgsNode ArraySelector yyVals BinaryOperation + Literal MemberReference - 2 yyTop	1
MethodDeclaration Modifier Annotation ReferenceType superclass FormalParameter LocalVariableDeclaration IfStatement IfStatement WhileStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType VariableDeclarator BinaryOperation ThrowStatement MethodInvocation StatementExpression BinaryOperation StatementExpression TernaryExpression name Literal compat MemberReference ThreadContext RubyClass superClazz MemberReference == MemberReference Literal MethodInvocation isSingleton Assignment && BinaryOperation MethodInvocation Assignment BinaryOperation MemberReference MethodInvocation "superclass" CompatVersion RUBY1_8 superClass superClazz null runtime Literal newTypeError MemberReference MemberReference = != MemberReference Literal superClazz isIncluded MemberReference MemberReference = != MemberReference Literal superClazz runtime getNil "uninitialized class" superClazz metaClass superClazz null superClazz superClazz superClass superClazz null	1
MethodDeclaration Modifier Annotation ReferenceType to_enum FormalParameter FormalParameter FormalParameter LocalVariableDeclaration SwitchStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType args ReferenceType VariableDeclarator MemberReference SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase name ElementArrayValue rest Literal compat MemberReference ThreadContext IRubyObject IRubyObject Ruby runtime MethodInvocation args length Literal ReturnStatement Literal ReturnStatement Literal ReturnStatement LocalVariableDeclaration StatementExpression ReturnStatement Literal Literal true CompatVersion RUBY1_9 context getRuntime 0 MethodInvocation 1 MethodInvocation 2 MethodInvocation ReferenceType VariableDeclarator MethodInvocation MethodInvocation "to_enum" "enum_for" MemberReference MemberReference Literal enumeratorize MemberReference MemberReference MemberReference enumeratorize MemberReference MemberReference MemberReference MemberReference enumeratorize IRubyObject enumArgs ArrayCreator System MemberReference Literal MemberReference Literal MemberReference arraycopy MemberReference MemberReference MemberReference MemberReference enumeratorize runtime recv "each" runtime recv ArraySelector MethodInvocation args runtime recv ArraySelector MethodInvocation args ArraySelector args ReferenceType BinaryOperation args 1 enumArgs 0 enumArgs length runtime recv ArraySelector MethodInvocation args enumArgs Literal asJavaString Literal asJavaString Literal IRubyObject - MemberReference Literal Literal asJavaString 0 0 1 args length 1 0	1
MethodDeclaration Modifier ReferenceType gsub FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement static public IRubyObject ReferenceType context ReferenceType recv ReferenceType args ReferenceType block ReferenceType VariableDeclarator MethodInvocation BlockStatement MemberReference ThreadContext IRubyObject IRubyObject Block RubyString str Cast ! str MethodInvocation MemberReference MemberReference MemberReference gsub_bang StatementExpression str ReferenceType MethodInvocation isNil context args block MethodInvocation RubyString MethodInvocation MemberReference MethodInvocation getLastlineString context MethodInvocation getCurrentScope dup context context getRuntime MemberReference setLastLine str	1
MethodDeclaration Modifier Annotation assign FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression public Override ReferenceType runtime ReferenceType context ReferenceType self ReferenceType value1 ReferenceType block MethodInvocation MethodInvocation Ruby ThreadContext IRubyObject IRubyObject Block pre MethodInvocation Literal get MemberReference MemberReference MemberReference MemberReference Literal assignNilTo MemberReference MemberReference MemberReference MemberReference MemberReference Literal assign 0 runtime context self block 1 runtime context self value1 block false	0
MethodDeclaration Modifier ReferenceType getClassName FormalParameter ReturnStatement static public String ReferenceType klass MethodInvocation Class klass getName	0
MethodDeclaration Modifier TypeParameter ReferenceType toArray FormalParameter ReturnStatement public T T ReferenceType arg0 MethodInvocation T map MethodInvocation keySet MemberReference toArray arg0	0
MethodDeclaration Modifier BasicType skipSignBits FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration SwitchStatement ReturnStatement private static final int BasicType bytes BasicType base BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator MemberReference SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase MemberReference byte int int skip Literal int length MemberReference byte b base Literal ForStatement BreakStatement Literal IfStatement ForStatement BreakStatement Literal IfStatement BreakStatement Literal ForStatement skip 0 bytes length 2 ForControl Statement 8 BinaryOperation StatementExpression ForControl Statement 10 BinaryOperation StatementExpression 16 ForControl Statement BinaryOperation MemberReference && BinaryOperation BinaryOperation MemberReference BinaryOperation MemberReference && BinaryOperation BinaryOperation MemberReference BinaryOperation MemberReference && BinaryOperation BinaryOperation ++ skip > MemberReference Literal == MemberReference Literal ++ skip && BinaryOperation BinaryOperation ++ skip > MemberReference Literal == MemberReference Literal ++ skip && BinaryOperation BinaryOperation ++ skip < MemberReference MemberReference == MemberReference Literal length 0 ArraySelector bytes '3' < MemberReference MemberReference == MemberReference Literal length 0 ArraySelector bytes '-' < MemberReference MemberReference || BinaryOperation BinaryOperation skip length ArraySelector bytes '1' Literal skip length ArraySelector bytes '7' Literal skip length == Assignment Literal == MemberReference Literal MemberReference 0 MemberReference 0 MemberReference MemberReference = 'f' b 'F' skip skip b ArraySelector bytes MemberReference skip	1
MethodDeclaration Modifier BasicType calcArgsLength LocalVariableDeclaration IfStatement IfStatement IfStatement IfStatement ReturnStatement private int BasicType VariableDeclarator MemberReference BlockStatement MemberReference BlockStatement BinaryOperation BlockStatement BlockStatement MemberReference BlockStatement MemberReference int argsLength Literal needsThreadContext StatementExpression isStatic StatementExpression && BinaryOperation MemberReference StatementExpression StatementExpression needsBlock StatementExpression argsLength 0 MemberReference MemberReference && BinaryOperation BinaryOperation ! rest Assignment MemberReference MemberReference ++ argsLength ++ argsLength < MemberReference Literal == MemberReference Literal MemberReference MemberReference += ++ argsLength ++ argsLength required 4 optional 0 argsLength required	0
MethodDeclaration Modifier cleanIdentities LocalVariableDeclaration WhileStatement private ReferenceType VariableDeclarator BinaryOperation StatementExpression IdReference ref != Assignment Literal MethodInvocation MemberReference Cast = null identities ClassCreator remove ref ReferenceType MethodInvocation ReferenceType MethodInvocation IdReference deadIdentityReferences poll Long ref id	1
MethodDeclaration Modifier ReferenceType requiredLibraries ReturnStatement public List TypeArgument MemberReference ReferenceType requiredLibraries String	0
MethodDeclaration Modifier ReferenceType getNodeType ReturnStatement public NodeType MemberReference NodeType NILNODE	0
MethodDeclaration Modifier ReferenceType getBlockBody19 FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement final public BlockBody ReferenceType scriptObject ReferenceType context BasicType index ReferenceType descriptor ReferenceType VariableDeclarator BinaryOperation BlockStatement MemberReference Object ThreadContext int String BlockBody body MemberReference == MemberReference Literal ReturnStatement body ArraySelector blockBodies body null MethodInvocation MemberReference MemberReference MemberReference MemberReference MemberReference createBlockBody19 index scriptObject context index descriptor	0
MethodDeclaration Modifier BasicType isOverflowExceptionMode FormalParameter LocalVariableDeclaration LocalVariableDeclaration ReturnStatement private static boolean ReferenceType runtime ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation Ruby RubyFixnum currentExceptionMode Cast RubyFixnum EXCEPTION_OVERFLOW Cast != BinaryOperation Literal ReferenceType MethodInvocation ReferenceType MethodInvocation & MethodInvocation MethodInvocation 0 RubyFixnum runtime MethodInvocation Literal fastGetClass RubyFixnum runtime MethodInvocation Literal fastGetClass currentExceptionMode getLongValue EXCEPTION_OVERFLOW getLongValue Literal searchInternalModuleVariable "BigDecimal" Literal fastGetConstant "BigDecimal" "vpExceptionMode" "EXCEPTION_OVERFLOW"	1
MethodDeclaration Modifier Annotation setUp Exception StatementExpression LocalVariableDeclaration StatementExpression protected Override SuperMethodInvocation ReferenceType VariableDeclarator MethodInvocation setUp ClassLoader parent ClassReference Thread MethodInvocation currentThread MethodInvocation ReferenceType MemberReference setContextClassLoader getClassLoader JRubyThreadContextTest parent	0
MethodDeclaration Modifier ReferenceType dirGlobs FormalParameter FormalParameter FormalParameter LocalVariableDeclaration ForStatement ReturnStatement private static List TypeArgument ReferenceType cwd ReferenceType args BasicType flags ReferenceType VariableDeclarator ForControl BlockStatement MemberReference ReferenceType String IRubyObject int List TypeArgument dirs ClassCreator VariableDeclaration BinaryOperation MemberReference LocalVariableDeclaration StatementExpression dirs ByteList ReferenceType ReferenceType BasicType VariableDeclarator < MemberReference MemberReference ++ i ReferenceType VariableDeclarator MethodInvocation ByteList ArrayList TypeArgument int i Literal i args length ByteList globPattern MemberReference dirs MethodInvocation addAll ReferenceType 0 ArraySelector MethodInvocation MethodInvocation args Dir MemberReference MemberReference MemberReference push_glob ByteList MemberReference convertToString getByteList cwd globPattern flags i	1
MethodDeclaration Modifier Annotation ReferenceType owner FormalParameter ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context MemberReference name Literal ThreadContext implementationModule "owner"	0
MethodDeclaration Modifier compileUnoptimizedMultipleAsgn FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression private ReferenceType multipleAsgnNode ReferenceType context BasicType expr MethodInvocation MethodInvocation MultipleAsgnNode BodyCompiler boolean MethodInvocation MemberReference Literal compile MemberReference MemberReference MemberReference compileMultipleAsgnAssignment multipleAsgnNode getValueNode context true multipleAsgnNode context expr	0
MethodDeclaration Modifier Annotation clear StatementExpression public Override This RubyHash MethodInvocation clear	0
MethodDeclaration Modifier removeEventHook FormalParameter StatementExpression StatementExpression public ReferenceType hook MethodInvocation Assignment EventHook eventHooks MemberReference remove MemberReference MethodInvocation = hook hasEventHooks ! eventHooks isEmpty	0
MethodDeclaration Modifier ReferenceType setFunctionalCallSite FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement static public CallSite ReferenceType callSites BasicType index ReferenceType name Assignment MemberReference CallSite int String MemberReference MethodInvocation = callSites ArraySelector callSites MethodIndex MemberReference getFunctionalCallSite MemberReference name index	0
MethodDeclaration Modifier ReferenceType case99_line669 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support Cast Literal Cast new_colon2 ReferenceType MemberReference null ReferenceType Cast Token ArraySelector yyVals String ReferenceType MemberReference BinaryOperation Token ArraySelector yyVals + Literal MemberReference BinaryOperation 0 yyTop + Literal MemberReference 0 yyTop	1
MethodDeclaration Modifier BasicType getAndIncrementRescueNumber ReturnStatement public int MemberReference ++ rescueNumber	0
MethodDeclaration Modifier ReferenceType getCommand ReturnStatement public String MemberReference command	0
MethodDeclaration Modifier Annotation ReferenceType writable_p ReturnStatement public JRubyMethod ElementValuePair IRubyObject MethodInvocation name Literal MethodInvocation getRuntime "writable?" MethodInvocation newBoolean stat isWritable	1
MethodDeclaration Modifier ReferenceType case360_line1335 FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement LocalVariableDeclaration StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement ReferenceType VariableDeclarator Assignment MemberReference Object Object int Node node != Cast Literal StatementExpression IfStatement StatementExpression Node body TernaryExpression MemberReference ClassCreator = yyVal ReferenceType MemberReference null Assignment BinaryOperation BlockStatement Assignment BinaryOperation MemberReference MemberReference yyVal ReferenceType MethodInvocation Cast MemberReference Cast Node ArraySelector yyVals MemberReference MethodInvocation = != Cast Literal StatementExpression MemberReference Cast = == MemberReference Literal NilImplicitNode NIL node RescueBodyNode Cast getPosition ReferenceType MemberReference body ReferenceType MemberReference BinaryOperation node support MethodInvocation Cast appendToBlock ReferenceType MemberReference null MethodInvocation node ReferenceType MemberReference node null ReferenceType MemberReference Node ArraySelector yyVals RescueBodyNode ArraySelector yyVals + Literal MemberReference support Cast ClassCreator node_assign ReferenceType MemberReference Node ArraySelector yyVals node MethodInvocation setPosition Node ArraySelector yyVals Token ArraySelector yyVals BinaryOperation BinaryOperation - 3 yyTop ReferenceType MemberReference ReferenceType MethodInvocation Literal Node ArraySelector yyVals BinaryOperation support MethodInvocation Cast unwrapNewlineNode BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference Node ArraySelector yyVals GlobalVarNode Cast getPosition "$!" BinaryOperation + Literal MemberReference getPosition ReferenceType MemberReference + Literal MemberReference + Literal MemberReference - 4 yyTop 0 yyTop BinaryOperation ReferenceType MemberReference + Literal MemberReference - 1 yyTop Node ArraySelector yyVals - 1 yyTop - 5 yyTop + Literal MemberReference Token ArraySelector yyVals - 1 yyTop BinaryOperation - 3 yyTop BinaryOperation + Literal MemberReference + Literal MemberReference - 1 yyTop - 5 yyTop	1
MethodDeclaration Modifier ReferenceType fromNative FormalParameter FormalParameter ReturnStatement final public IRubyObject ReferenceType context BasicType value MethodInvocation ThreadContext long Util MethodInvocation MemberReference newUnsigned64 context getRuntime value	1
MethodDeclaration Modifier BasicType pipe IOException LocalVariableDeclaration SwitchStatement private int BasicType VariableDeclarator MemberReference SwitchStatementCase SwitchStatementCase SwitchStatementCase int c MethodInvocation c Literal StatementExpression IfStatement StatementExpression StatementExpression ReturnStatement Literal StatementExpression StatementExpression ReturnStatement StatementExpression StatementExpression StatementExpression ReturnStatement src read '|' Assignment BinaryOperation BlockStatement MethodInvocation Assignment MemberReference '=' Assignment Assignment MemberReference MethodInvocation MethodInvocation Assignment MemberReference MemberReference MemberReference = == Assignment Literal StatementExpression StatementExpression ReturnStatement src MemberReference unread MemberReference ClassCreator = Tokens tOROP MemberReference MemberReference = MemberReference ClassCreator = Tokens tOP_ASGN determineExpressionState src MemberReference unread MemberReference ClassCreator = Tokens tPIPE lex_state LexState EXPR_BEG MemberReference MethodInvocation = '=' Assignment Assignment MemberReference c yaccValue ReferenceType Literal MethodInvocation lex_state LexState EXPR_BEG yaccValue ReferenceType Literal MethodInvocation c yaccValue ReferenceType Literal MethodInvocation c src read MemberReference MemberReference = MemberReference ClassCreator = Tokens tOP_ASGN Token "||" getPosition Token "|" getPosition Token "|" getPosition lex_state LexState EXPR_BEG yaccValue ReferenceType Literal MethodInvocation Token "||" getPosition	1
MethodDeclaration Modifier becomeTrueOrFalse FormalParameter StatementExpression private ReferenceType context MethodInvocation BodyCompiler context ClassCreator ClassCreator performBooleanBranch ReferenceType MethodDeclaration ReferenceType MethodDeclaration BranchCallback Modifier branch FormalParameter StatementExpression BranchCallback Modifier branch FormalParameter StatementExpression public ReferenceType context MethodInvocation public ReferenceType context MethodInvocation BodyCompiler context loadTrue BodyCompiler context loadFalse	0
MethodDeclaration Modifier setFinalizer FormalParameter StatementExpression public ReferenceType finalizer Assignment Finalizer This MemberReference = MemberReference finalizer finalizer	0
MethodDeclaration Modifier Annotation addUsedVariables FormalParameter StatementExpression public Override ReferenceType l MethodInvocation List TypeArgument l This add ReferenceType Variable	0
MethodDeclaration Modifier ReferenceType convert FormalParameter FormalParameter IfStatement ReturnStatement public IRubyObject ReferenceType runtime ReferenceType object BinaryOperation ReturnStatement MethodInvocation Ruby Object == MemberReference Literal MethodInvocation RubyString MemberReference Cast newUnicodeString object null runtime getNil runtime ReferenceType MemberReference String object	1
MethodDeclaration Modifier ReferenceType createBacktrace2 FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement LocalVariableDeclaration IfStatement StatementExpression ReturnStatement public RubyStackTraceElement BasicType level BasicType nativeException BasicType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation ReturnStatement BasicType VariableDeclarator MemberReference BlockStatement Assignment MethodInvocation int boolean int traceSize BinaryOperation RubyStackTraceElement newTrace <= MemberReference Literal Literal int totalSize MemberReference nativeException StatementExpression MemberReference ArrayCreator = MemberReference buildTrace + BinaryOperation Literal traceSize 0 null traceSize Assignment newTrace ReferenceType MemberReference newTrace - MemberReference MemberReference 1 MemberReference BinaryOperation = RubyStackTraceElement totalSize frameIndex level totalSize + MemberReference Literal traceSize 1	1
MethodDeclaration Modifier defineFastProtectedMethod FormalParameter FormalParameter StatementExpression public ReferenceType name ReferenceType method MethodInvocation String Callback MemberReference ClassCreator addMethod name ReferenceType This MemberReference MemberReference SimpleCallbackMethod method PROTECTED	0
MethodDeclaration Modifier ReferenceType type ReturnStatement public String Literal "foo"	0
MethodDeclaration Modifier ReferenceType bytesToString FormalParameter FormalParameter FormalParameter ReturnStatement static public String BasicType bytes BasicType beg BasicType len ClassCreator byte int int ReferenceType MethodInvocation String ByteList MemberReference MemberReference MemberReference plain bytes beg len	0
MethodDeclaration Modifier ReferenceType getNodeType ReturnStatement public NodeType MemberReference NodeType INSTVARNODE	0
MethodDeclaration Modifier userNewMarshal FormalParameter IOException StatementExpression StatementExpression LocalVariableDeclaration StatementExpression LocalVariableDeclaration StatementExpression private ReferenceType value MethodInvocation MethodInvocation ReferenceType VariableDeclarator MethodInvocation ReferenceType VariableDeclarator MethodInvocation IRubyObject MemberReference registerLinkTarget MemberReference write RubyClass metaclass MethodInvocation MethodInvocation dumpObject IRubyObject marshaled MethodInvocation MemberReference dumpObject value TYPE_USRMARSHAL value MethodInvocation getMetaClass RubySymbol MemberReference MethodInvocation newSymbol value MethodInvocation Literal callMethod marshaled getRealClass runtime metaclass getName runtime getCurrentContext "marshal_dump"	0
MethodDeclaration Modifier Annotation ReferenceType accept FormalParameter ReturnStatement public Override Object ReferenceType iVisitor MethodInvocation NodeVisitor iVisitor This visitColon2Node	0
MethodDeclaration Modifier Annotation ReferenceType dup ReturnStatement public Override DynamicMethod This	0
MethodDeclaration Modifier ReferenceType case33_line434 FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Cast Assignment Cast MemberReference Object Object int ReferenceType MemberReference MemberReference Cast = ReferenceType MemberReference yyVal AssignableNode ArraySelector yyVals yyVal ReferenceType MemberReference MultipleAsgnNode ArraySelector yyVals BinaryOperation MultipleAsgnNode ArraySelector yyVals BinaryOperation + Literal MemberReference BinaryOperation + Literal MemberReference - 2 yyTop + Literal MemberReference - 2 yyTop - 2 yyTop	1
MethodDeclaration Modifier Annotation ReferenceType times FormalParameter FormalParameter ReturnStatement static public Deprecated IRubyObject ReferenceType recv ReferenceType unusedBlock MethodInvocation IRubyObject Block MethodInvocation times recv getRuntime	1
MethodDeclaration Modifier BasicType isMyFoo ReturnStatement public boolean MethodInvocation bri isMyFoo	0
MethodDeclaration Modifier ReferenceType iconv FormalParameter SwitchStatement public IRubyObject ReferenceType args MemberReference SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase IRubyObject args length Literal ReturnStatement Literal ReturnStatement Literal ReturnStatement StatementExpression ReturnStatement 1 MethodInvocation 2 MethodInvocation 3 MethodInvocation MethodInvocation Literal MemberReference iconv MemberReference MemberReference iconv MemberReference MemberReference MemberReference iconv Arity MethodInvocation MemberReference Literal Literal raiseArgumentError null ArraySelector args ArraySelector args ArraySelector args ArraySelector args ArraySelector args ArraySelector args getRuntime args length 1 2 Literal Literal Literal Literal Literal Literal 0 0 1 0 1 2	1
MethodDeclaration Modifier branch FormalParameter StatementExpression public ReferenceType context MethodInvocation BodyCompiler context pushNull	0
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration ReturnStatement public Override IRubyObject ReferenceType context ReferenceType args ReferenceType binding ReferenceType type ReferenceType block ReferenceType VariableDeclarator MethodInvocation ThreadContext IRubyObject Binding Block ReferenceType Block IRubyObject value TernaryExpression MemberReference MemberReference Literal Literal Literal MemberReference MemberReference MemberReference yield Type BinaryOperation MemberReference MethodInvocation context value null null true binding type block == MemberReference Literal ArraySelector args context MethodInvocation getRuntime args length 1 Literal MemberReference newArrayNoCopy 0 args	0
MethodDeclaration Modifier ReferenceType getPreprocessedRegexpFromCache FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement LocalVariableDeclaration StatementExpression StatementExpression StatementExpression ReturnStatement private static Regex ReferenceType runtime ReferenceType bytes ReferenceType enc BasicType options ReferenceType mode ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation ReturnStatement ReferenceType VariableDeclarator Assignment MethodInvocation MethodInvocation MemberReference Ruby ByteList Encoding int ErrorMode Map TypeArgument TypeArgument cache MethodInvocation Regex regex MethodInvocation && BinaryOperation BinaryOperation MemberReference ByteList preprocessed MethodInvocation MemberReference MethodInvocation = regex MemberReference setUserObject cache MemberReference MemberReference put regex ReferenceType ReferenceType preprocessedPatternCache get cache MemberReference get && BinaryOperation BinaryOperation == MethodInvocation MemberReference regex MemberReference MemberReference MemberReference ArrayCreator MemberReference preprocess regex MemberReference MemberReference MemberReference MemberReference makeRegexp preprocessed bytes regex ByteList Regex bytes != MemberReference Literal == MethodInvocation MemberReference regex getOptions options runtime bytes enc ReferenceType ArrayInitializer ErrorMode RAISE runtime preprocessed options enc regex null regex getEncoding enc Encoding Literal null	1
MethodDeclaration Modifier Annotation ReferenceType public_p ReturnStatement public JRubyMethod ElementValuePair RubyBoolean MethodInvocation name Literal MethodInvocation getRuntime "public?" MethodInvocation newBoolean Modifier MethodInvocation isPublic MethodInvocation javaClass getModifiers	1
MethodDeclaration Modifier BasicType size ReturnStatement public int This RubyHash MemberReference size	0
MethodDeclaration Modifier ReferenceType newArray FormalParameter FormalParameter ReturnStatement public RubyArray ReferenceType car ReferenceType cdr MethodInvocation IRubyObject IRubyObject RubyArray This MemberReference MemberReference newArray car cdr	0
MethodDeclaration Modifier Annotation ReferenceType initialize_m FormalParameter IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType arg BinaryOperation ReturnStatement MethodInvocation name Literal visibility MemberReference compat MemberReference IRubyObject instanceof MemberReference ReferenceType MethodInvocation MethodInvocation Literal initializeCommon "initialize" Visibility PRIVATE CompatVersion RUBY1_8 arg RubyRegexp Cast initializeByRegexp arg MethodInvocation convertToString 0 ReferenceType MemberReference getByteList RubyRegexp arg	1
MethodDeclaration Modifier Annotation ReferenceType append_features FormalParameter FormalParameter FormalParameter FormalParameter IfStatement ReturnStatement static public JRubyMethod ElementValuePair IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType block BinaryOperation BlockStatement IfStatement MethodInvocation frame Literal ThreadContext IRubyObject IRubyObject Block instanceof MemberReference ReferenceType StatementExpression BinaryOperation BlockStatement BlockStatement RuntimeHelpers MemberReference MemberReference MemberReference MemberReference invokeSuper true clazz RubyClass MethodInvocation instanceof MemberReference ReferenceType StatementExpression ThrowStatement context self clazz block MemberReference MemberReference Cast appendFeaturesToClass clazz RubyModule MethodInvocation MethodInvocation context self ReferenceType MemberReference MemberReference MemberReference Cast appendFeaturesToModule context MethodInvocation getRuntime RubyClass clazz context self ReferenceType MemberReference BinaryOperation newTypeError RubyModule clazz + BinaryOperation Literal + Literal MemberReference ", expected Class/Module" "received " clazz	1
MethodDeclaration Modifier loadBlock StatementExpression public MethodInvocation method MethodInvocation aload getClosureIndex	0
MethodDeclaration Modifier performRescue FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression public ReferenceType regularCode ReferenceType rubyCatchCode BasicType needsRetry ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation BranchCallback BranchCallback boolean String mname MethodInvocation BaseBodyCompiler rescueMethod MethodInvocation rescueMethod MemberReference MemberReference MemberReference performRescueLight rescueMethod endBody getNewRescueName MemberReference outline regularCode rubyCatchCode needsRetry mname	0
MethodDeclaration Modifier Annotation ReferenceType const_get FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType symbol MethodInvocation name Literal required Literal IRubyObject MethodInvocation getConstant "const_get" 1 MethodInvocation validateConstant symbol asJavaString	1
MethodDeclaration Modifier ReferenceType getDefaultExternalEncoding ReturnStatement public Encoding MemberReference defaultExternalEncoding	0
MethodDeclaration /** * Tries to support Java serialization of Ruby objects. This is * still experimental and might not work. */ Modifier writeObject FormalParameter IOException StatementExpression LocalVariableDeclaration StatementExpression ForStatement private ReferenceType out MethodInvocation ReferenceType VariableDeclarator MethodInvocation EnhancedForControl BlockStatement ObjectOutputStream out defaultWriteObject List TypeArgument names MethodInvocation out MethodInvocation writeInt VariableDeclaration MemberReference StatementExpression StatementExpression ReferenceType getInstanceVariableNameList names size ReferenceType VariableDeclarator names MethodInvocation MethodInvocation String String name out MemberReference writeObject out MethodInvocation writeObject name MethodInvocation getInstanceVariables MemberReference getInstanceVariable name	0
MethodDeclaration Modifier ReferenceType case1_line271 FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop MethodInvocation MethodInvocation MemberReference Object Object int lexer MemberReference setState support initTopLocalVariables yyVal LexState EXPR_BEG	1
MethodDeclaration Modifier testToS StatementExpression public MethodInvocation Literal MethodInvocation assertEquals "" RubyNil MethodInvocation MemberReference to_s toString rubyNil	0
MethodDeclaration Modifier ReferenceType case79_line582 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference Cast = yyVal yyVal ReferenceType MemberReference ListNode ArraySelector yyVals BinaryOperation + Literal MemberReference - 2 yyTop	1
MethodDeclaration Modifier Annotation ReferenceType append FormalParameter Exception StatementExpression ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType arg MethodInvocation This name Literal required Literal IRubyObject defl MemberReference append "<<" 1 arg	0
MethodDeclaration Modifier testEmptyMap Exception LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression public ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation SimpleInterface si Cast Map map MethodInvocation Literal MethodInvocation assertEquals MethodInvocation assertTrue ReferenceType MethodInvocation si getEmptyMap 0 map size map isEmpty SimpleInterface manager Literal Literal Literal Literal Literal eval "ruby" "(java)" 1 1 "EMPTY_MAP = SimpleInterfaceImpl.new"	0
MethodDeclaration Modifier run ForStatement public ForControl BlockStatement VariableDeclaration BinaryOperation MemberReference LocalVariableDeclaration IfStatement BasicType VariableDeclarator < MemberReference MemberReference ++ i ReferenceType VariableDeclarator BinaryOperation BlockStatement int i Literal i count_ ITest test MethodInvocation != MemberReference Literal TryStatement 0 getTest test null LocalVariableDeclaration IfStatement CatchClause ReferenceType VariableDeclarator MethodInvocation BlockStatement CatchClauseParameter StatementExpression StatementExpression BreakStatement Object result MethodInvocation ! result MethodInvocation toString StatementExpression RuntimeException re Assignment Assignment test Literal exec Literal equals Assignment MemberReference Literal = MemberReference MemberReference = "foo" "VALUE: 5000" MemberReference Literal = failed true failureException re failed true	0
MethodDeclaration Modifier load FormalParameter FormalParameter IOException IfStatement public ReferenceType runtime BasicType wrap ClassReference BlockStatement Ruby boolean MethodInvocation ReferenceType TryStatement MemberReference isAssignableFrom BasicLibraryService StatementExpression CatchClause theClass Cast CatchClauseParameter ThrowStatement ReferenceType MethodInvocation Exception ee ClassCreator BasicLibraryService theClass newInstance ReferenceType MethodInvocation MemberReference RuntimeException ee getMessage ee	1
MethodDeclaration Modifier BasicType callWithBoolean FormalParameter ReturnStatement static public boolean BasicType arg MemberReference boolean arg	0
MethodDeclaration Modifier ReferenceType getSymbol5 FormalParameter FormalParameter ReturnStatement final public RubySymbol ReferenceType runtime ReferenceType name MethodInvocation Ruby String runtimeCache MemberReference Literal MemberReference getSymbol runtime 5 name	0
MethodDeclaration Modifier ReferenceType react FormalParameter FormalParameter LocalVariableDeclaration StatementExpression ReturnStatement public Object ReferenceType join ReferenceType args ReferenceType VariableDeclarator MethodInvocation BinaryOperation Join Object InputBuffer buffer Cast join MemberReference MemberReference send - MemberReference MemberReference ReferenceType MemberReference Channel BUFFER buffer buffer.bytes length buffer offset InputBuffer ArraySelector args Literal 1	0
MethodDeclaration Modifier ReferenceType case276_line1034 FormalParameter FormalParameter FormalParameter IfStatement StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop MethodInvocation StatementExpression Assignment MemberReference Object Object int warnings isVerbose MethodInvocation MemberReference Cast = yyVal warnings MemberReference MethodInvocation Literal warning yyVal ReferenceType MemberReference ID GROUPED_EXPRESSION Cast getPosition "(...) interpreted as grouped expression" Node ArraySelector yyVals ReferenceType MemberReference BinaryOperation Token ArraySelector yyVals + Literal MemberReference BinaryOperation - 3 yyTop + Literal MemberReference - 4 yyTop	1
MethodDeclaration Modifier ReferenceType getAnnotatedBindingClassName FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement ReturnStatement static public String ReferenceType javaMethodName ReferenceType typeName BasicType isStatic BasicType required BasicType optional BasicType multi BasicType framed ReferenceType VariableDeclarator ReferenceType VariableDeclarator MemberReference BlockStatement BlockStatement BinaryOperation String String boolean int int boolean boolean String commonClassSuffix String marker TernaryExpression multi StatementExpression StatementExpression + MemberReference MemberReference MemberReference Literal Literal Assignment Assignment typeName commonClassSuffix framed "$RUBYFRAMEDINVOKER$" "$RUBYINVOKER$" MemberReference BinaryOperation = MemberReference BinaryOperation = commonClassSuffix + BinaryOperation MemberReference commonClassSuffix + BinaryOperation MemberReference + BinaryOperation MemberReference javaMethodName + BinaryOperation MemberReference javaMethodName + TernaryExpression Literal marker + BinaryOperation MemberReference marker MemberReference Literal Literal "_method_multi" + BinaryOperation Literal optional isStatic "$s" "$i" + BinaryOperation MemberReference "_" + TernaryExpression Literal required MemberReference Literal Literal "_method_" isStatic "$s" "$i"	0
MethodDeclaration Modifier ReferenceType case21_line377 FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop MethodInvocation MethodInvocation Assignment MemberReference Object Object int support MethodInvocation getResult support popCurrentScope MemberReference Literal = yyVal ClassCreator addBeginNode yyVal null ReferenceType MethodInvocation MethodInvocation Cast PreExeNode Cast getPosition support getCurrentScope ReferenceType MemberReference ReferenceType MemberReference Node ArraySelector yyVals Node ArraySelector yyVals BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference - 1 yyTop - 1 yyTop	1
MethodDeclaration Modifier Annotation ReferenceType to_s FormalParameter IfStatement StatementExpression ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context MethodInvocation ReturnStatement MethodInvocation MemberReference name Literal ThreadContext message isNil MethodInvocation message MethodInvocation setTaint message "to_s" context MethodInvocation getRuntime isTaint MethodInvocation newString MethodInvocation getMetaClass getName	1
MethodDeclaration Modifier BasicType getFastSwitchSingleCharSymbol FormalParameter LocalVariableDeclaration ReturnStatement static public int ReferenceType sym ReferenceType VariableDeclarator Cast IRubyObject String str Cast BasicType MethodInvocation ReferenceType MemberReference int str Literal charAt RubySymbol sym 0	0
MethodDeclaration Modifier ReferenceType callVirtualMethod ReturnStatement public String MethodInvocation virtualMethod	0
MethodDeclaration Modifier Annotation ReferenceType sticky_p FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType recv ReferenceType filename ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation name Literal required Literal module Literal IRubyObject IRubyObject Ruby runtime MethodInvocation JRubyFile file MethodInvocation runtime BinaryOperation newBoolean "sticky?" 1 true recv getRuntime MemberReference file && MethodInvocation MethodInvocation filename file exists runtime MethodInvocation MethodInvocation getPosix MethodInvocation stat isSticky file getAbsolutePath	1
MethodDeclaration Modifier create FormalParameter LocalVariableDeclaration LocalVariableDeclaration StatementExpression LocalVariableDeclaration StatementExpression static public ReferenceType runtime ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation ReferenceType VariableDeclarator MethodInvocation Ruby RubyModule mNet MethodInvocation RubyClass cBufferedIO Cast cBufferedIO ClassReference defineAnnotatedMethods RubyModule mNativeImpl MethodInvocation mNativeImpl ClassReference defineAnnotatedMethods runtime Literal getModule ReferenceType MethodInvocation ReferenceType cBufferedIO Literal defineModuleUnder ReferenceType "Net" RubyClass mNet Literal getConstant NetProtocolBufferedIO "NativeImplementation" NativeImpl "BufferedIO"	0
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter TryStatement public IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType args ReferenceType block StatementExpression AssertStatement LocalVariableDeclaration LocalVariableDeclaration IfStatement TryStatement StatementExpression ThreadContext IRubyObject RubyModule String IRubyObject Block MethodInvocation BinaryOperation ReferenceType VariableDeclarator BasicType VariableDeclarator MemberReference BlockStatement ReturnStatement CatchClause IfStatement MethodInvocation callConfig MemberReference MemberReference MemberReference MemberReference MemberReference Literal This pre != MemberReference Literal Ruby runtime MethodInvocation boolean isTrace MethodInvocation isTrace StatementExpression MethodInvocation CatchClauseParameter IfStatement ThrowStatement MemberReference BlockStatement callConfig MemberReference post context self clazz name block null args null context getRuntime runtime hasEventHooks MethodInvocation callback MemberReference MemberReference MemberReference execute JumpException.ReturnJump rj BinaryOperation ReturnStatement MemberReference isTrace StatementExpression context runtime MemberReference MemberReference MethodInvocation MethodInvocation MemberReference MethodInvocation callEventHooks self args block == MethodInvocation This Cast rj MethodInvocation context RubyEvent C_CALL context getFile context getLine name getImplementationClass rj getTarget ReferenceType MethodInvocation runtime MemberReference MemberReference MethodInvocation MethodInvocation MemberReference MethodInvocation callEventHooks IRubyObject rj getValue context RubyEvent C_RETURN context getFile context getLine name getImplementationClass	1
MethodDeclaration Modifier setBackgroundColor FormalParameter StatementExpression StatementExpression synchronized public ReferenceType color Assignment MethodInvocation Color MemberReference MemberReference = repaint backgroundColor color	0
MethodDeclaration Modifier ReferenceType childNodes ReturnStatement public List TypeArgument MemberReference ReferenceType EMPTY_LIST Node	0
MethodDeclaration Modifier compileMultipleAsgn FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement public ReferenceType node ReferenceType context BasicType expr ReferenceType VariableDeclarator MemberReference BlockStatement BlockStatement Node BodyCompiler boolean MultipleAsgnNode multipleAsgnNode Cast expr StatementExpression StatementExpression ReferenceType MemberReference MethodInvocation MethodInvocation MultipleAsgnNode node MemberReference MemberReference MemberReference compileUnoptimizedMultipleAsgn MemberReference MemberReference MemberReference compileOptimizedMultipleAsgn multipleAsgnNode context expr multipleAsgnNode context expr	0
MethodDeclaration Modifier Annotation ReferenceType rjust FormalParameter SwitchStatement public Deprecated IRubyObject ReferenceType args MemberReference SwitchStatementCase SwitchStatementCase SwitchStatementCase IRubyObject args length Literal ReturnStatement Literal ReturnStatement StatementExpression ReturnStatement 1 MethodInvocation 2 MethodInvocation MethodInvocation Literal MemberReference rjust MemberReference MemberReference rjust Arity MethodInvocation MemberReference Literal Literal raiseArgumentError null ArraySelector args ArraySelector args ArraySelector args getRuntime args length 1 2 Literal Literal Literal 0 0 1	1
MethodDeclaration Modifier Annotation Annotation ReferenceType fdiv FormalParameter FormalParameter LocalVariableDeclaration ReturnStatement public JRubyMethod ElementValuePair Override IRubyObject ReferenceType context ReferenceType other ReferenceType VariableDeclarator MethodInvocation name Literal ThreadContext IRubyObject IRubyObject complex MethodInvocation MemberReference MemberReference MemberReference f_div "fdiv" MemberReference MethodInvocation MethodInvocation MethodInvocation newComplex context complex other context getMetaClass MemberReference MemberReference f_to_f MemberReference MemberReference f_to_f context real context image	0
MethodDeclaration Modifier Annotation ReferenceType getrlimit FormalParameter FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType arg MethodInvocation name Literal required Literal module Literal visibility MemberReference ThreadContext IRubyObject IRubyObject MethodInvocation MemberReference getrlimit "getrlimit" 1 true Visibility PRIVATE context getRuntime arg	0
MethodDeclaration Modifier ReferenceType sysopen FormalParameter FormalParameter FormalParameter InvalidValueException TryStatement private ChannelDescriptor ReferenceType path ReferenceType modes BasicType perm LocalVariableDeclaration ReturnStatement CatchClause CatchClause CatchClause CatchClause String ModeFlags int ReferenceType VariableDeclarator MemberReference CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement ChannelDescriptor descriptor MethodInvocation descriptor FileNotFoundException fnfe MethodInvocation DirectoryAsFileException dafe MethodInvocation FileExistsException fee MethodInvocation IOException ioe MethodInvocation ChannelDescriptor MethodInvocation MemberReference MemberReference MemberReference MethodInvocation open MethodInvocation getRuntime MethodInvocation getRuntime MethodInvocation getRuntime MethodInvocation getRuntime MethodInvocation getRuntime path modes perm MethodInvocation getRuntime newErrnoENOENTError newErrnoEISDirError BinaryOperation newErrnoEEXISTError MemberReference newIOErrorFromException getCurrentDirectory getPosix + Literal MemberReference ioe "file exists: " path	1
MethodDeclaration Modifier Annotation ReferenceType const_set FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType symbol ReferenceType value MethodInvocation name Literal required Literal IRubyObject IRubyObject MethodInvocation MemberReference fastSetConstant "const_set" 2 MethodInvocation MethodInvocation validateConstant value intern symbol asJavaString	1
MethodDeclaration Modifier Annotation ReferenceType initialize19 FormalParameter FormalParameter FormalParameter IfStatement IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType args ReferenceType block BinaryOperation BlockStatement BinaryOperation BlockStatement MethodInvocation name Literal required Literal optional Literal frame Literal visibility MemberReference compat MemberReference ThreadContext IRubyObject Block == MemberReference Literal ThrowStatement && BinaryOperation BinaryOperation LocalVariableDeclaration IfStatement MemberReference MemberReference openFile19 "initialize" 1 2 true Visibility PRIVATE CompatVersion RUBY1_9 openFile null MethodInvocation > MemberReference Literal <= MemberReference Literal ReferenceType VariableDeclarator MethodInvocation BlockStatement context args context MethodInvocation getRuntime args length 0 args length 3 IRubyObject fd MethodInvocation ! fd isNil StatementExpression IfStatement ReturnStatement Literal newRuntimeError TypeConverter MemberReference MethodInvocation Literal convertToTypeWithCheck Assignment BinaryOperation BlockStatement IfStatement SuperMethodInvocation "reinitializing File" ArraySelector args context MethodInvocation getRuntime "to_int" MemberReference MemberReference = == MemberReference Literal ReturnStatement BinaryOperation BlockStatement MemberReference MemberReference MemberReference MemberReference MemberReference initialize19 Literal getFixnum ArraySelector args fd args length 1 SuperMethodInvocation == MemberReference Literal ReturnStatement context ArraySelector args ArraySelector args ArraySelector args block 0 Literal MemberReference MemberReference MemberReference initialize19 args length 2 SuperMethodInvocation Literal Literal Literal 0 context ArraySelector args block MemberReference MemberReference MemberReference MemberReference initialize19 0 1 2 Literal context ArraySelector args ArraySelector args block 0 Literal Literal 0 1	0
MethodDeclaration Modifier Annotation ReferenceType read FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement TryStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType path ReferenceType length ReferenceType offset ReferenceType VariableDeclarator MethodInvocation StatementExpression ReturnStatement StatementExpression name Literal meta Literal compat MemberReference ThreadContext IRubyObject IRubyObject IRubyObject IRubyObject RubyIO file MethodInvocation ! offset isNil MethodInvocation TernaryExpression MethodInvocation "read" true CompatVersion RUBY1_8 MemberReference MemberReference MemberReference newFile file MemberReference MemberReference seek MethodInvocation MethodInvocation MethodInvocation file close context recv path context offset ! length isNil file MemberReference MemberReference read file MemberReference read context length context	1
MethodDeclaration Modifier actionPerformed FormalParameter TryStatement public ReferenceType e LocalVariableDeclaration StatementExpression CatchClause ActionEvent ReferenceType VariableDeclarator MethodInvocation CatchClauseParameter StatementExpression StatementExpression String expression MethodInvocation input MethodInvocation setText BSFException excptn MethodInvocation MethodInvocation JOptionPane MemberReference Literal showInputDialog String MethodInvocation valueOf excptn printStackTrace JOptionPane MemberReference MethodInvocation showMessageDialog frame "Please enter a Ruby expression:" manager Literal Literal Literal Literal MemberReference eval frame excptn getMessage "ruby" "initUI" 1 1 expression	0
MethodDeclaration Modifier ReferenceType create FormalParameter LocalVariableDeclaration StatementExpression ReturnStatement static public String ReferenceType node ReferenceType VariableDeclarator MethodInvocation MethodInvocation Node SexpMaker maker ClassCreator maker MemberReference process maker toString ReferenceType node SexpMaker	0
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter TryStatement public IRubyObject ReferenceType context ReferenceType self ReferenceType args ReferenceType block ReturnStatement CatchClause CatchClause CatchClause ThreadContext IRubyObject IRubyObject Block Cast CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement CatchClauseParameter LocalVariableDeclaration IfStatement ReferenceType MethodInvocation IllegalAccessException ex ClassCreator IllegalArgumentException ex ClassCreator InvocationTargetException ex ReferenceType VariableDeclarator BinaryOperation BlockStatement IfStatement IRubyObject blockMethod Literal MemberReference MemberReference MemberReference MemberReference MemberReference invoke ReferenceType MemberReference ReferenceType MemberReference Throwable cause MethodInvocation instanceof MemberReference ReferenceType ThrowStatement BinaryOperation BlockStatement BlockStatement null scriptObject context self args block RuntimeException ex RuntimeException ex ex getCause cause RuntimeException Cast instanceof MemberReference ReferenceType ThrowStatement ThrowStatement ReferenceType MemberReference cause Error Cast ClassCreator RuntimeException cause ReferenceType MemberReference ReferenceType MemberReference Error cause RuntimeException ex	1
MethodDeclaration Modifier Annotation ReferenceType field_writer FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType args MethodInvocation MethodInvocation meta Literal rest Literal ThreadContext IRubyObject IRubyObject MemberReference Cast MemberReference Literal Literal findFields context MethodInvocation getRuntime true true context ReferenceType MemberReference args false true getNil RubyModule recv	1
MethodDeclaration Modifier ReferenceType constructObjectArray FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement static public IRubyObject ReferenceType one ReferenceType two ReferenceType three ReferenceType four ArrayCreator IRubyObject IRubyObject IRubyObject IRubyObject ReferenceType ArrayInitializer IRubyObject MemberReference MemberReference MemberReference MemberReference one two three four	0
MethodDeclaration Modifier BasicType isSecurityProtected FormalParameter TryStatement static public boolean ReferenceType property StatementExpression ReturnStatement CatchClause String MethodInvocation Literal CatchClauseParameter ReturnStatement System MemberReference getProperty false SecurityException se Literal property true	0
MethodDeclaration Modifier BasicType hashCode ReturnStatement public int MethodInvocation constructor hashCode	0
MethodDeclaration Modifier ReferenceType accessibleObject ReturnStatement protected AccessibleObject MemberReference constructor	0
MethodDeclaration Modifier Annotation ReferenceType assign FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Override IRubyObject ReferenceType runtime ReferenceType context ReferenceType self ReferenceType value ReferenceType block BasicType checkArity MethodInvocation MethodInvocation Ruby ThreadContext IRubyObject IRubyObject Block boolean runtime MethodInvocation getGlobalVariables runtime getNil MemberReference MemberReference set name value	0
MethodDeclaration Modifier BasicType getClassId ReturnStatement public int MemberReference classId	0
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType arg0 ReferenceType arg1 MethodInvocation ThreadContext IRubyObject RubyModule String IRubyObject IRubyObject MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference call context self clazz name arg0 arg1 Block NULL_BLOCK	0
MethodDeclaration Modifier ReferenceType getNodeType ReturnStatement public NodeType MemberReference NodeType CLASSNODE	0
MethodDeclaration Modifier ReferenceType newBE64ArrayIO ReturnStatement private static final ArrayIO ClassCreator ReferenceType BE64ArrayIO	1
MethodDeclaration Modifier Annotation ReferenceType get_bytes FormalParameter FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context ReferenceType offArg ReferenceType lenArg MethodInvocation name Literal ThreadContext IRubyObject IRubyObject MemoryUtil MethodInvocation MethodInvocation MethodInvocation MethodInvocation getTaintedByteString "get_bytes" context getRuntime getMemoryIO MemberReference getOffset Util MemberReference int32Value offArg lenArg	1
MethodDeclaration Modifier BasicType getFieldCount ReturnStatement final public int MethodInvocation fields size	1
MethodDeclaration Modifier checkStringSafety FormalParameter FormalParameter LocalVariableDeclaration IfStatement LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration ForStatement final static public ReferenceType runtime ReferenceType value ReferenceType VariableDeclarator BinaryOperation BlockStatement ReferenceType VariableDeclarator Modifier BasicType VariableDeclarator Modifier BasicType VariableDeclarator ForControl BlockStatement Ruby IRubyObject RubyString s MethodInvocation && BinaryOperation MethodInvocation ThrowStatement ByteList bl MethodInvocation final byte array MethodInvocation final int end MethodInvocation VariableDeclaration BinaryOperation MemberReference IfStatement value asString > MethodInvocation Literal s isTaint MethodInvocation s getByteList bl unsafeBytes bl length BasicType VariableDeclarator < MemberReference MemberReference ++ i BinaryOperation BlockStatement runtime getSafeLevel 0 runtime Literal newSecurityError int i MethodInvocation i end == MemberReference Cast ThrowStatement "Unsafe string parameter" bl begin ArraySelector array BasicType Literal MethodInvocation MemberReference byte 0 runtime Literal newSecurityError i "string contains null byte"	1
MethodDeclaration Modifier ReferenceType quote19 FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration DoStatement LocalVariableDeclaration StatementExpression LocalVariableDeclaration LocalVariableDeclaration StatementExpression WhileStatement StatementExpression ReturnStatement static ByteList ReferenceType bs BasicType asciiOnly BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator ReferenceType VariableDeclarator metaFound Literal BlockStatement ReferenceType VariableDeclarator Assignment BasicType VariableDeclarator BasicType VariableDeclarator MethodInvocation BinaryOperation BlockStatement Assignment MemberReference ByteList boolean int p MemberReference int end BinaryOperation byte bytes MemberReference Encoding enc MemberReference false WhileStatement IfStatement ReturnStatement ByteList result ClassCreator MemberReference TernaryExpression = byte obytes MemberReference int op BinaryOperation System MemberReference MemberReference MemberReference Literal MemberReference arraycopy < MemberReference MemberReference LocalVariableDeclaration LocalVariableDeclaration IfStatement IfStatement StatementExpression SwitchStatement StatementExpression MemberReference MemberReference = result bs begin + MemberReference MemberReference bs bytes bs encoding BinaryOperation BlockStatement MemberReference BlockStatement MemberReference ReferenceType BinaryOperation result encoding MemberReference MemberReference MemberReference result bytes - MemberReference MemberReference bytes bs begin obytes 0 op p end Modifier BasicType VariableDeclarator Modifier BasicType VariableDeclarator MethodInvocation BlockStatement BlockStatement MethodInvocation BlockStatement Assignment MemberReference SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase Assignment result realSize op p bs realSize < MemberReference MemberReference LocalVariableDeclaration LocalVariableDeclaration IfStatement IfStatement SwitchStatement StatementExpression asciiOnly LocalVariableDeclaration StatementExpression ReturnStatement bs ByteList * MemberReference Literal asciiOnly USASCIIEncoding INSTANCE bs encoding p bs begin final int c final int cl enc isAsciiCompatible StatementExpression StatementExpression StatementExpression StatementExpression ! Encoding MemberReference isAscii LocalVariableDeclaration WhileStatement ContinueStatement MemberReference MemberReference += c Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal StatementExpression BreakStatement Literal StatementExpression StatementExpression ContinueStatement Literal StatementExpression StatementExpression ContinueStatement Literal StatementExpression StatementExpression ContinueStatement Literal StatementExpression StatementExpression ContinueStatement Literal StatementExpression StatementExpression ContinueStatement MemberReference MethodInvocation += p end Modifier BasicType VariableDeclarator Modifier BasicType VariableDeclarator MethodInvocation BlockStatement BlockStatement MethodInvocation BlockStatement MemberReference SwitchStatementCase Assignment ReferenceType VariableDeclarator Assignment MemberReference end 2 Assignment Assignment Assignment Assignment c BasicType VariableDeclarator BinaryOperation StatementExpression p cl '[' ']' '{' '}' '(' ')' '|' '-' '*' '.' '\\' '?' '+' '^' '$' '#' Assignment ' ' Assignment Assignment '\t' Assignment Assignment '\n' Assignment Assignment '\r' Assignment Assignment '\f' Assignment Assignment op enc MemberReference MemberReference MemberReference codeToMbc final int c final int cl enc isAsciiCompatible StatementExpression StatementExpression StatementExpression StatementExpression ! Encoding MemberReference isAscii StatementExpression ContinueStatement c Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal BreakStatement MemberReference MemberReference += ByteList tmp MethodInvocation MemberReference MemberReference = tmp MemberReference Literal = MemberReference BinaryOperation = MemberReference MethodInvocation = MemberReference MethodInvocation = int n MethodInvocation > MemberReference Literal Assignment MemberReference MethodInvocation += MemberReference MethodInvocation += MemberReference MethodInvocation += MemberReference MethodInvocation += MemberReference MethodInvocation += MemberReference MethodInvocation += MemberReference MethodInvocation += MemberReference MethodInvocation += MemberReference MethodInvocation += MemberReference MethodInvocation += MemberReference MethodInvocation += c obytes op Assignment Assignment Assignment Assignment c Assignment '[' ']' '{' '}' '(' ')' '|' '-' '*' '.' '\\' '?' '+' '^' '$' ' ' '#' '\t' '\f' '\n' '\r' metaFound p cl bs shallowDup tmp encoding USASCIIEncoding INSTANCE cl 1 c & MemberReference Literal cl StringSupport MemberReference MemberReference MemberReference MemberReference preciseLength c enc MemberReference MemberReference MemberReference mbcToCode StringSupport MemberReference MemberReference MemberReference MemberReference length -- n 0 MemberReference MemberReference = op enc Literal MemberReference MemberReference codeToMbc op enc Literal MemberReference MemberReference codeToMbc op enc Literal MemberReference MemberReference codeToMbc op enc Literal MemberReference MemberReference codeToMbc op enc Literal MemberReference MemberReference codeToMbc op enc Literal MemberReference MemberReference codeToMbc op enc Literal MemberReference MemberReference codeToMbc op enc Literal MemberReference MemberReference codeToMbc op enc Literal MemberReference MemberReference codeToMbc op enc Literal MemberReference MemberReference codeToMbc op enc Literal MemberReference MemberReference codeToMbc MemberReference Literal = MemberReference BinaryOperation = MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation += ArraySelector bytes 0xff enc bytes p end bytes p end enc bytes p end ArraySelector obytes ArraySelector bytes '\\' obytes op '\\' obytes op ' ' obytes op '\\' obytes op 't' obytes op '\\' obytes op 'n' obytes op '\\' obytes op 'r' obytes op '\\' obytes op 'f' obytes op cl 1 c & MemberReference Literal cl StringSupport MemberReference MemberReference MemberReference MemberReference preciseLength c enc MemberReference MemberReference MemberReference mbcToCode p StringSupport MemberReference MemberReference MemberReference MemberReference length MemberReference MemberReference MemberReference ArraySelector bytes 0xff enc bytes p end bytes p end enc bytes p end p ++ op ++ p MemberReference p	1
MethodDeclaration Modifier ReferenceType foo ReturnStatement final public String Literal "In foo"	0
MethodDeclaration Modifier ReferenceType buildTypeMap LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression IfStatement StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression ReturnStatement private static final Map TypeArgument TypeArgument ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation BinaryOperation BlockStatement BlockStatement MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MemberReference ReferenceType ReferenceType Map TypeArgument TypeArgument m ClassCreator m MemberReference MemberReference put m MemberReference MemberReference put m MemberReference MemberReference put m MemberReference MemberReference put m MemberReference MemberReference put m MemberReference MemberReference put m MemberReference MemberReference put m MemberReference MemberReference put m MemberReference MemberReference put m MemberReference MemberReference put == MethodInvocation Literal StatementExpression StatementExpression StatementExpression StatementExpression m MemberReference MemberReference put m MemberReference MemberReference put m MemberReference MemberReference put m MemberReference MemberReference put m MemberReference MemberReference put m MemberReference MemberReference put m MemberReference MemberReference put m NativeType com ReferenceType ReferenceType ReferenceType ReferenceType ClassReference NativeType VOID com.kenai.jffi.Type VOID NativeType BOOL com.kenai.jffi.Type UINT32 NativeType CHAR com.kenai.jffi.Type SINT8 NativeType SHORT com.kenai.jffi.Type SINT16 NativeType INT com.kenai.jffi.Type SINT32 NativeType LONG_LONG com.kenai.jffi.Type SINT64 NativeType UCHAR com.kenai.jffi.Type UINT8 NativeType USHORT com.kenai.jffi.Type UINT16 NativeType UINT com.kenai.jffi.Type UINT32 NativeType ULONG_LONG com.kenai.jffi.Type UINT64 com.kenai.jffi.Platform MethodInvocation getPlatform 32 MethodInvocation MethodInvocation MethodInvocation MethodInvocation NativeType FLOAT com.kenai.jffi.Type FLOAT NativeType DOUBLE com.kenai.jffi.Type DOUBLE NativeType POINTER com.kenai.jffi.Type POINTER NativeType BUFFER_IN com.kenai.jffi.Type POINTER NativeType BUFFER_OUT com.kenai.jffi.Type POINTER NativeType BUFFER_INOUT com.kenai.jffi.Type POINTER NativeType STRING com.kenai.jffi.Type POINTER kenai ReferenceType NativeType com ReferenceType EnumMap TypeArgument TypeArgument ReferenceType longSize m MemberReference MemberReference put m MemberReference MemberReference put m MemberReference MemberReference put m MemberReference MemberReference put jffi ReferenceType kenai ReferenceType ReferenceType ReferenceType NativeType NativeType LONG com.kenai.jffi.Type SINT32 NativeType ULONG com.kenai.jffi.Type UINT32 NativeType LONG com.kenai.jffi.Type SINT64 NativeType ULONG com.kenai.jffi.Type UINT64 Type jffi ReferenceType NativeType com ReferenceType Type kenai ReferenceType jffi ReferenceType Type	1
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter TryStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReturnStatement CatchClause ThreadContext IRubyObject RubyModule String MethodInvocation CatchClauseParameter ThrowStatement JavaUtil MethodInvocation MethodInvocation convertJavaToUsableRubyObject IllegalAccessException iae MethodInvocation context getRuntime field Literal get context MethodInvocation getRuntime null BinaryOperation newTypeError + Literal MethodInvocation "illegal access getting variable: " iae getMessage	1
MethodDeclaration Modifier testDefault Exception StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression public MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation Literal MethodInvocation assertEquals Literal MethodInvocation assertEquals Literal eval Literal MethodInvocation assertEquals Literal MethodInvocation assertEquals "nil" Literal eval "nil" Literal eval "$h.default = 'missing'" "\"missing\"" Literal eval "\"missing\"" Literal eval "p $h['njet']" "p $h.default" "p $h['njet']" "p $h.default"	0
MethodDeclaration Modifier Annotation aset FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression protected Override ReferenceType runtime ReferenceType hash ReferenceType key ReferenceType value MethodInvocation Ruby RubyHash IRubyObject IRubyObject hash MemberReference MemberReference MemberReference fastASetCheckString19 runtime key value	0
MethodDeclaration Modifier ReferenceType getFrameSelf ReturnStatement public IRubyObject MethodInvocation MethodInvocation getCurrentFrame getSelf	0
MethodDeclaration Modifier ReferenceType clone FormalParameter ReturnStatement public Binding ReferenceType visibility ClassCreator Visibility ReferenceType MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference Binding self frame visibility klass dynamicScope file line	0
MethodDeclaration Modifier ReferenceType childNodes ReturnStatement public List TypeArgument MemberReference ReferenceType list Node	0
MethodDeclaration Modifier BasicType remove FormalParameter ThrowStatement public boolean ReferenceType o ClassCreator Object ReferenceType UnsupportedOperationException	0
MethodDeclaration Modifier ReferenceType handlelIllegalArgumentEx FormalParameter FormalParameter FormalParameter RaiseException ThrowStatement private IRubyObject ReferenceType method ReferenceType iae ReferenceType arguments  MethodInvocation Method IllegalArgumentException Object MethodInvocation getRuntime BinaryOperation newTypeError + BinaryOperation MethodInvocation + BinaryOperation Literal iae getMessage + BinaryOperation MethodInvocation "; error: " + BinaryOperation Literal MemberReference dumpArgTypes + BinaryOperation MethodInvocation "; got: " arguments + BinaryOperation Literal MethodInvocation argument_types + BinaryOperation MethodInvocation " expected " inspect + BinaryOperation Literal method getName + Literal MethodInvocation "." "for method " method MethodInvocation getDeclaringClass getSimpleName	0
MethodDeclaration Modifier tearDown Exception StatementExpression StatementExpression public SuperMethodInvocation Assignment tearDown MemberReference Literal = manager null	0
MethodDeclaration Modifier ReferenceType fillNewFrameStack FormalParameter FormalParameter StatementExpression ForStatement ReturnStatement private Frame ReferenceType newFrameStack BasicType newSize MethodInvocation ForControl BlockStatement MemberReference Frame int System MemberReference Literal MemberReference Literal MemberReference arraycopy VariableDeclaration BinaryOperation MemberReference StatementExpression newFrameStack frameStack 0 newFrameStack 0 frameStack length BasicType VariableDeclarator < MemberReference MemberReference ++ i Assignment int i MemberReference i newSize MemberReference ClassCreator = frameStack length ArraySelector newFrameStack ReferenceType MemberReference Frame i	0
MethodDeclaration Modifier ReferenceType case460_line1753 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference Literal = yyVal yyVal null	1
MethodDeclaration Modifier ReferenceType case369_line1392 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference Cast = yyVal yyVal ReferenceType MemberReference Node ArraySelector yyVals BinaryOperation + Literal MemberReference - 1 yyTop	1
MethodDeclaration Modifier ReferenceType getJavaObjectClass LocalVariableDeclaration IfStatement ReturnStatement public RubyClass ReferenceType VariableDeclarator BinaryOperation ReturnStatement Assignment RubyClass clazz != Assignment Literal MemberReference MemberReference MethodInvocation = MemberReference MemberReference = null clazz javaObjectClass MethodInvocation getJavaModule clazz javaObjectClass Literal fastGetClass "JavaObject"	1
MethodDeclaration Modifier Annotation addMethod FormalParameter FormalParameter ThrowStatement public Override ReferenceType name ReferenceType method ClassCreator String DynamicMethod ReferenceType Literal UnsupportedOperationException "An included class is only a wrapper for a module"	0
MethodDeclaration Modifier instVarNode FormalParameter StatementExpression private ReferenceType node MethodInvocation InstVarNode sb MethodInvocation Literal append MethodInvocation append " " node getName	0
MethodDeclaration Modifier ReferenceType variableTableFastStore FormalParameter FormalParameter ReturnStatement protected Object ReferenceType internedName ReferenceType value MethodInvocation String Object MemberReference MemberReference variableTableStore internedName value	0
MethodDeclaration Modifier register FormalParameter IfStatement public ReferenceType config MemberReference StatementExpression ConfigMBean managementEnabled MethodInvocation BinaryOperation MemberReference register + MemberReference Literal config base "service=Config"	1
MethodDeclaration Modifier ReferenceType case253_line992 FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement MemberReference Object Object int Node node Literal && BinaryOperation BinaryOperation StatementExpression StatementExpression yyVal null instanceof Cast ReferenceType != Assignment Literal Assignment Assignment ReferenceType MemberReference ArrayNode MemberReference MethodInvocation = null MemberReference MethodInvocation = MemberReference MethodInvocation = Node ArraySelector yyVals node support Cast splat_array yyVal support MemberReference Cast list_concat yyVal support MethodInvocation Cast Cast arg_concat BinaryOperation ReferenceType MemberReference node ReferenceType MemberReference Cast getPosition ReferenceType MemberReference ReferenceType MemberReference + Literal MemberReference Node ArraySelector yyVals Node ArraySelector yyVals ReferenceType MemberReference Node ArraySelector yyVals Node ArraySelector yyVals 0 yyTop BinaryOperation BinaryOperation Node ArraySelector yyVals BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference BinaryOperation + Literal MemberReference + Literal MemberReference - 3 yyTop 0 yyTop + Literal MemberReference - 3 yyTop 0 yyTop - 3 yyTop	1
MethodDeclaration Modifier Annotation ReferenceType hash FormalParameter LocalVariableDeclaration IfStatement TryStatement public JRubyMethod ElementValuePair RubyFixnum ReferenceType context ReferenceType VariableDeclarator MethodInvocation ReturnStatement StatementExpression LocalVariableDeclaration LocalVariableDeclaration ForStatement ReturnStatement StatementExpression name Literal ThreadContext Ruby runtime MethodInvocation runtime This isInspecting MethodInvocation MethodInvocation BasicType VariableDeclarator BasicType VariableDeclarator ForControl BlockStatement MethodInvocation MethodInvocation "hash" context getRuntime RubyFixnum MemberReference zero runtime This registerInspecting int begin This int h MemberReference VariableDeclaration BinaryOperation MemberReference StatementExpression LocalVariableDeclaration TryStatement StatementExpression runtime MemberReference newFixnum runtime This unregisterInspecting runtime MemberReference realLength BasicType VariableDeclarator < MemberReference BinaryOperation ++ i Assignment Modifier ReferenceType VariableDeclarator StatementExpression CatchClause Assignment h begin int i MemberReference i + MemberReference MemberReference MemberReference BinaryOperation = final IRubyObject value Assignment CatchClauseParameter StatementExpression ContinueStatement MemberReference MethodInvocation ^= begin begin realLength h | BinaryOperation TernaryExpression MemberReference MemberReference = ArrayIndexOutOfBoundsException e MethodInvocation h RubyNumeric MethodInvocation num2long << MemberReference Literal BinaryOperation Literal Literal value ArraySelector values concurrentModification value MemberReference Literal callMethod h 1 < MemberReference Literal 1 0 MemberReference context "hash" h 0 i	1
MethodDeclaration Modifier checkArity FormalParameter IfStatement protected BasicType length BinaryOperation BlockStatement int != MemberReference MethodInvocation ThrowStatement length getArity MethodInvocation MethodInvocation getRuntime MemberReference MethodInvocation newArgumentError length getArity	0
MethodDeclaration Modifier prepare FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement IfStatement public ReferenceType context ReferenceType runtime ReferenceType self ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 ReferenceType block ReferenceType VariableDeclarator MemberReference BlockStatement BlockStatement BinaryOperation StatementExpression ThreadContext Ruby IRubyObject IRubyObject IRubyObject IRubyObject Block DynamicScope scope MethodInvocation isSimple StatementExpression StatementExpression != MethodInvocation Literal MethodInvocation context getCurrentScope MethodInvocation MethodInvocation getBlock null MemberReference MemberReference MemberReference processBlockArg scope MemberReference MemberReference MemberReference setArgValues MemberReference MemberReference MemberReference ArrayCreator MemberReference prepare scope runtime block arg0 arg1 arg2 context runtime self ReferenceType ArrayInitializer block IRubyObject MemberReference MemberReference MemberReference arg0 arg1 arg2	1
MethodDeclaration Modifier yyerror FormalParameter FormalParameter FormalParameter LocalVariableDeclaration ThrowStatement public ReferenceType message ReferenceType expected ReferenceType found ReferenceType VariableDeclarator ClassCreator String String String String text BinaryOperation ReferenceType MemberReference MethodInvocation MethodInvocation MemberReference MemberReference + BinaryOperation Literal SyntaxException PID GRAMMAR_ERROR Literal getPosition lexer getCurrentLine text found + Literal MemberReference "\n" null ", unexpected " found	0
MethodDeclaration Modifier Annotation setArgValues FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression StatementExpression public Override ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 Assignment Assignment Assignment IRubyObject IRubyObject IRubyObject MemberReference MemberReference = MemberReference MemberReference = MemberReference MemberReference = variableValueZero arg0 variableValueOne arg1 variableValueTwo arg2	0
MethodDeclaration Modifier Annotation ReferenceType chomp_bang FormalParameter SwitchStatement public Deprecated IRubyObject ReferenceType args MemberReference SwitchStatementCase SwitchStatementCase SwitchStatementCase IRubyObject args length Literal ReturnStatement Literal ReturnStatement StatementExpression ReturnStatement 0 MethodInvocation 1 MethodInvocation MethodInvocation Literal MethodInvocation chomp_bang MethodInvocation MemberReference chomp_bang Arity MethodInvocation MemberReference Literal Literal raiseArgumentError null MethodInvocation getRuntime MethodInvocation getRuntime ArraySelector args getRuntime args length 0 1 getCurrentContext getCurrentContext Literal 0	1
MethodDeclaration Modifier BasicType isRunning ReturnStatement public boolean MemberReference running	0
MethodDeclaration Modifier Annotation ReferenceType chdir FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration TryStatement LocalVariableDeclaration IfStatement ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType args ReferenceType block ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator StatementExpression CatchClause ReferenceType VariableDeclarator MethodInvocation BlockStatement BlockStatement MemberReference name Literal optional Literal frame Literal meta Literal ThreadContext IRubyObject IRubyObject Block Ruby runtime MethodInvocation RubyString path TernaryExpression String adjustedPath MethodInvocation MemberReference MemberReference checkDirIsTwoSlashesOnWindows JRubyFile dir MethodInvocation String realPath Literal String oldCwd MethodInvocation Assignment CatchClauseParameter StatementExpression IRubyObject result Literal block isGiven StatementExpression TryStatement StatementExpression StatementExpression result "chdir" 1 true true context getRuntime BinaryOperation Cast MethodInvocation RubyFile MemberReference MethodInvocation Literal adjustRootPathOnWindows runtime adjustedPath MemberReference MemberReference Literal getDir null runtime getCurrentDirectory MemberReference MethodInvocation = IOException e Assignment null MethodInvocation StatementExpression StatementExpression StatementExpression MethodInvocation Assignment == MemberReference Literal ReferenceType MemberReference MemberReference getHomeDirectoryPath runtime path getUnicodeValue null runtime adjustedPath true realPath dir getCanonicalPath MemberReference MethodInvocation = runtime MemberReference setCurrentDirectory Assignment Assignment MethodInvocation runtime MemberReference setCurrentDirectory MemberReference MethodInvocation = args length 1 RubyString ArraySelector MethodInvocation args context realPath dir getAbsolutePath realPath MemberReference MethodInvocation = MemberReference MethodInvocation = runtime MemberReference setCurrentDirectory realPath result runtime Literal newFixnum Literal convertToString result block MemberReference MemberReference yield dir MemberReference MemberReference Literal getDir oldCwd 0 0 context path runtime oldCwd true	1
MethodDeclaration Modifier ReferenceType callIter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter TryStatement public IRubyObject ReferenceType context ReferenceType caller ReferenceType self ReferenceType args ReferenceType block ReturnStatement CatchClause CatchClause StatementExpression ThreadContext IRubyObject IRubyObject IRubyObject Block MethodInvocation CatchClauseParameter ReturnStatement CatchClauseParameter ThrowStatement MethodInvocation MemberReference MemberReference MemberReference MemberReference MemberReference callBlock JumpException.BreakJump bj MethodInvocation JumpException.RetryJump rj MethodInvocation block escape context caller self args block MemberReference MemberReference handleBreakJump MemberReference retryJumpError context bj context	1
MethodDeclaration Modifier definePasswdStruct FormalParameter LocalVariableDeclaration StatementExpression private static ReferenceType runtime ReferenceType VariableDeclarator MethodInvocation Ruby IRubyObject args ArrayCreator runtime MethodInvocation setPasswdStruct ReferenceType ArrayInitializer RubyStruct MethodInvocation MemberReference MemberReference newInstance IRubyObject MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation runtime getStructClass args Block NULL_BLOCK runtime Literal newString runtime Literal newSymbol runtime Literal newSymbol runtime Literal newSymbol runtime Literal newSymbol runtime Literal newSymbol runtime Literal newSymbol runtime Literal newSymbol runtime Literal newSymbol runtime Literal newSymbol runtime Literal newSymbol "Passwd" "name" "passwd" "uid" "gid" "gecos" "dir" "shell" "change" "uclass" "expire"	0
MethodDeclaration Modifier ReferenceType opElementAsgnWithMethod FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration StatementExpression ReturnStatement static public IRubyObject ReferenceType context ReferenceType self ReferenceType receiver ReferenceType arg1 ReferenceType arg2 ReferenceType arg3 ReferenceType value ReferenceType elementSite ReferenceType opSite ReferenceType elementAsgnSite ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MemberReference ThreadContext IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject CallSite CallSite CallSite IRubyObject var MethodInvocation IRubyObject result MethodInvocation elementAsgnSite MemberReference MemberReference MemberReference ArrayCreator call result elementSite MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference call opSite MemberReference MemberReference MemberReference MemberReference call context self receiver ReferenceType ArrayInitializer context self receiver arg1 arg2 arg3 context self var value IRubyObject MemberReference MemberReference MemberReference MemberReference arg1 arg2 arg3 result	1
MethodDeclaration Modifier BasicType fwrite FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement TryStatement protected int ReferenceType buffer BasicType VariableDeclarator VariableDeclarator VariableDeclarator VariableDeclarator BasicType VariableDeclarator ReferenceType VariableDeclarator BasicType VariableDeclarator BinaryOperation ReturnStatement IfStatement ReturnStatement CatchClause CatchClause ByteList int n r l offset Literal boolean eagain Literal Stream writeStream MethodInvocation int len MethodInvocation <= Assignment Literal MemberReference MethodInvocation BlockStatement MethodInvocation CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement 0 false openFile getWriteStream buffer length MemberReference MemberReference = 0 n openFile isSync StatementExpression WhileStatement writeStream MemberReference fwrite IOException ex MethodInvocation BadDescriptorException ex MethodInvocation n len MethodInvocation BinaryOperation BlockStatement buffer MethodInvocation getRuntime MethodInvocation getRuntime openFile MemberReference fflush < MemberReference MemberReference StatementExpression StatementExpression IfStatement IfStatement IfStatement MemberReference newIOErrorFromException newErrnoEBADFError writeStream offset len Assignment Assignment BinaryOperation BlockStatement BinaryOperation BlockStatement BinaryOperation BlockStatement BlockStatement ex MemberReference MemberReference = MemberReference MethodInvocation = == MemberReference MemberReference ReturnStatement <= Literal MemberReference StatementExpression StatementExpression StatementExpression && MemberReference MethodInvocation StatementExpression IfStatement StatementExpression ReturnStatement l n r writeStream MethodInvocation getDescriptor r len MemberReference 0 r Assignment Assignment Assignment eagain MethodInvocation waitWritable MethodInvocation BinaryOperation BlockStatement Assignment Literal MemberReference MemberReference MemberReference write len MemberReference MemberReference += MemberReference MemberReference -= MemberReference Literal = writeStream getDescriptor openFile MethodInvocation checkClosed >= MemberReference MethodInvocation ReturnStatement MemberReference Literal = - 1 buffer offset l offset r n r eagain true getRuntime offset buffer length Literal eagain false - 1	1
MethodDeclaration Modifier ReferenceType getBlockFromBlockPassBody FormalParameter FormalParameter ReturnStatement static public Block ReferenceType proc ReferenceType currentBlock MethodInvocation IRubyObject Block MethodInvocation MemberReference MemberReference getBlockFromBlockPassBody proc getRuntime proc currentBlock	0
MethodDeclaration Modifier ReferenceType enumeratorize FormalParameter FormalParameter FormalParameter ReturnStatement static IRubyObject ReferenceType runtime ReferenceType object ReferenceType method ClassCreator Ruby IRubyObject String ReferenceType MemberReference MemberReference MethodInvocation MemberReference RubyEnumerator runtime object runtime MemberReference fastNewSymbol IRubyObject NULL_ARRAY method	0
MethodDeclaration Modifier ReferenceType getVariable6 FormalParameter FormalParameter FormalParameter ReturnStatement final public IRubyObject ReferenceType runtime ReferenceType name ReferenceType object MethodInvocation Ruby String IRubyObject runtimeCache MemberReference Literal MemberReference MemberReference getVariable runtime 6 name object	0
MethodDeclaration Modifier ReferenceType getValue ReturnStatement public CharSequence MethodInvocation toString	0
MethodDeclaration Modifier ReferenceType getAncestorList LocalVariableDeclaration ForStatement ReturnStatement public List TypeArgument ReferenceType VariableDeclarator ForControl BlockStatement MemberReference ReferenceType ArrayList TypeArgument list ClassCreator VariableDeclaration BinaryOperation Assignment IfStatement list IRubyObject ReferenceType ReferenceType ReferenceType VariableDeclarator != MemberReference Literal MemberReference MethodInvocation = MethodInvocation StatementExpression IRubyObject ArrayList TypeArgument RubyModule module This module null module module getSuperClass ! module isSingleton MethodInvocation ReferenceType list MethodInvocation add IRubyObject module getNonIncludedClass	1
MethodDeclaration Modifier BasicType f_negative_p FormalParameter FormalParameter IfStatement ReturnStatement static public boolean ReferenceType context ReferenceType x BinaryOperation ReturnStatement MethodInvocation ThreadContext IRubyObject instanceof MemberReference ReferenceType BinaryOperation x MethodInvocation MemberReference Literal MethodInvocation callMethod x RubyFixnum < Cast Literal isTrue context "<" RubyFixnum MethodInvocation zero ReferenceType MemberReference 0 context getRuntime RubyFixnum x	1
MethodDeclaration Modifier ReferenceType getMatchNode FormalParameter FormalParameter IfStatement ReturnStatement public Node ReferenceType firstNode ReferenceType secondNode BinaryOperation BlockStatement IfStatement MethodInvocation Node Node || BinaryOperation BinaryOperation ReturnStatement BinaryOperation BlockStatement MemberReference Literal MemberReference getOperatorCallNode instanceof MemberReference ReferenceType instanceof MemberReference ReferenceType ClassCreator || BinaryOperation BinaryOperation ReturnStatement firstNode "=~" secondNode firstNode DRegexpNode firstNode RegexpNode ReferenceType MethodInvocation MemberReference MemberReference instanceof MemberReference ReferenceType instanceof MemberReference ReferenceType ClassCreator Match2Node firstNode getPosition firstNode secondNode secondNode DRegexpNode secondNode RegexpNode ReferenceType MethodInvocation MemberReference MemberReference Match3Node firstNode getPosition secondNode firstNode	0
MethodDeclaration Modifier Annotation ReferenceType truncate FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement IfStatement IfStatement LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType arg1 ReferenceType arg2 ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation BlockStatement BlockStatement MethodInvocation BlockStatement BinaryOperation BlockStatement ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation required Literal meta Literal ThreadContext IRubyObject IRubyObject IRubyObject Ruby runtime MethodInvocation RubyString filename MethodInvocation RubyInteger newLength MethodInvocation File testFile File childFile ClassCreator childFile isAbsolute StatementExpression StatementExpression ! testFile exists ThrowStatement < MethodInvocation Literal ThrowStatement IRubyObject args ArrayCreator RubyFile file Cast file MemberReference MemberReference truncate file close RubyFixnum MemberReference zero 2 true context getRuntime arg1 convertToString arg2 convertToInteger ReferenceType MethodInvocation Assignment Assignment MethodInvocation newLength getLongValue 0 MethodInvocation ReferenceType ArrayInitializer ReferenceType MethodInvocation context newLength runtime File filename getUnicodeValue MemberReference MemberReference = MemberReference ClassCreator = runtime BinaryOperation newErrnoENOENTError runtime BinaryOperation newErrnoEINVALError IRubyObject MemberReference MethodInvocation RubyFile MemberReference MemberReference MemberReference MemberReference open testFile childFile testFile ReferenceType MethodInvocation MethodInvocation + Literal MethodInvocation + Literal MemberReference filename runtime Literal newString context recv args Block NULL_BLOCK File runtime getCurrentDirectory filename MethodInvocation getByteList "No such file or directory - " filename MethodInvocation getByteList "invalid argument: " filename "r+" toString toString	1
MethodDeclaration Modifier ReferenceType getNodeType ReturnStatement public NodeType MemberReference NodeType ALIASNODE	0
MethodDeclaration Modifier ReferenceType asRubyStringList FormalParameter FormalParameter LocalVariableDeclaration ForStatement LocalVariableDeclaration StatementExpression ReturnStatement private static IRubyObject ReferenceType runtime ReferenceType dirs ReferenceType VariableDeclarator EnhancedForControl BlockStatement ReferenceType VariableDeclarator MethodInvocation MethodInvocation Ruby List TypeArgument List TypeArgument allFiles ClassCreator VariableDeclaration MemberReference StatementExpression IRubyObject tempFileList ArrayCreator allFiles MemberReference toArray runtime MemberReference newArrayNoCopy ReferenceType ReferenceType ReferenceType ReferenceType VariableDeclarator dirs MethodInvocation ReferenceType MethodInvocation tempFileList tempFileList ByteList RubyString ArrayList TypeArgument ByteList dir allFiles MethodInvocation add IRubyObject allFiles size ReferenceType RubyString MemberReference MemberReference newString RubyString runtime dir	1
MethodDeclaration Modifier BasicType isPrivate ReturnStatement public boolean BinaryOperation == This MemberReference PRIVATE	0
MethodDeclaration Modifier assignLocalVariable FormalParameter FormalParameter FormalParameter FormalParameter IfStatement public BasicType index BasicType depth ReferenceType value BasicType expr BinaryOperation BlockStatement BlockStatement int int CompilerCallback boolean == MemberReference Literal StatementExpression StatementExpression depth 0 MethodInvocation MethodInvocation MemberReference MemberReference MemberReference assignLocalVariable MemberReference MemberReference MemberReference MemberReference assignHeapLocal index value expr value depth index expr	0
MethodDeclaration Modifier Annotation ReferenceType op_truncate FormalParameter FormalParameter LocalVariableDeclaration ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context ReferenceType n ReferenceType VariableDeclarator MethodInvocation name Literal ThreadContext IRubyObject IRubyObject b MethodInvocation MemberReference Cast MemberReference MemberReference op_roundCommonPost "truncate" MemberReference MemberReference op_roundCommonPre context ReferenceType MethodInvocation n b context n RubyRational MemberReference This MemberReference f_mul context b	1
MethodDeclaration Modifier ReferenceType invoke FormalParameter FormalParameter ThrowStatement public Object ReferenceType receiver ReferenceType args  MethodInvocation Object Object fail	0
MethodDeclaration Modifier Annotation ReferenceType protected_methods19 FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType args MethodInvocation name Literal optional Literal compat MemberReference ThreadContext IRubyObject MethodInvocation getMetaClass "protected_methods" 1 CompatVersion RUBY1_9 MethodInvocation protected_instance_methods19 MemberReference MemberReference trueIfNoArgument context args	1
MethodDeclaration Modifier invalidateCacheDescendants StatementExpression SynchronizedStatement public MethodInvocation MethodInvocation IfStatement generation update MethodInvocation getRuntime BinaryOperation ForStatement getHierarchyLock != MemberReference Literal EnhancedForControl BlockStatement includingHierarchies null VariableDeclaration MemberReference StatementExpression ReferenceType VariableDeclarator includingHierarchies MethodInvocation RubyClass includingHierarchy includingHierarchy invalidateCacheDescendants	1
MethodDeclaration Modifier Annotation ReferenceType file_p ReturnStatement public JRubyMethod ElementValuePair RubyBoolean MethodInvocation name Literal MethodInvocation getRuntime "file?" MethodInvocation newBoolean stat isFile	1
MethodDeclaration Modifier ReferenceType case368_line1387 FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment Cast MemberReference Object Object int MemberReference Cast = ReferenceType MemberReference yyVal yyVal ReferenceType MemberReference ISourcePositionHolder yyVal ArgsNode ArraySelector yyVals BinaryOperation + Literal MemberReference - 1 yyTop	1
MethodDeclaration Modifier BasicType isCallableFrom FormalParameter FormalParameter SwitchStatement ReturnStatement public boolean ReferenceType caller ReferenceType callType MemberReference SwitchStatementCase SwitchStatementCase SwitchStatementCase Literal IRubyObject CallType visibility PUBLIC ReturnStatement PRIVATE ReturnStatement PROTECTED ReturnStatement true Literal BinaryOperation MethodInvocation true != MemberReference MemberReference MemberReference protectedAccessOk callType CallType NORMAL caller	1
MethodDeclaration Modifier Annotation ReferenceType new_instance FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration ForStatement LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration TryStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair RubyObject ReferenceType args ReferenceType block BasicType VariableDeclarator Modifier ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement ReferenceType VariableDeclarator ReferenceType VariableDeclarator BasicType VariableDeclarator ReferenceType VariableDeclarator ForControl BlockStatement Modifier ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator StatementExpression CatchClause MethodInvocation required Literal optional Literal frame Literal IRubyObject Block int size BinaryOperation final RubyProc proc instanceof MemberReference ReferenceType StatementExpression StatementExpression StatementExpression RubyArray constructor_args Cast Class TypeArgument parameterTypes MethodInvocation int count Cast Object converted ArrayCreator VariableDeclaration BinaryOperation MemberReference LocalVariableDeclaration StatementExpression final IRubyObject recv This JavaProxyInvocationHandler handler ClassCreator Object result Assignment CatchClauseParameter LocalVariableDeclaration StatementExpression ThrowStatement JavaObject MethodInvocation MemberReference wrap 1 1 true - MethodInvocation Literal ArraySelector args RubyProc Assignment Assignment MemberReference ReferenceType MemberReference ? getParameterTypes BasicType MethodInvocation ReferenceType MemberReference BasicType VariableDeclarator < MemberReference MemberReference ++ i ReferenceType VariableDeclarator Assignment ReferenceType MethodDeclaration MethodDeclaration MemberReference MethodInvocation = Exception e ReferenceType VariableDeclarator MethodInvocation MemberReference getRuntime result Arity MethodInvocation MemberReference Literal Literal checkArgumentCount 1 MemberReference MemberReference Cast = MemberReference MethodInvocation = ++ size RubyArray ArraySelector args int constructor_args MethodInvocation length Object count int i Literal i count IRubyObject ith MethodInvocation MemberReference MethodInvocation = JavaProxyInvocationHandler Modifier ReferenceType getOrig ReturnStatement Modifier ReferenceType invoke FormalParameter FormalParameter FormalParameter Throwable LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression ForStatement LocalVariableDeclaration LocalVariableDeclaration ReturnStatement result MemberReference MemberReference newInstance RaiseException ex MethodInvocation ex MemberReference initCause ex getRuntime args 1 2 size proc ReferenceType MemberReference proc MethodInvocation getRuntime Literal getLongValue 0 constructor_args MethodInvocation aref ArraySelector converted ith MemberReference toJava public IRubyObject Literal public Object ReferenceType proxy ReferenceType method ReferenceType nargs BasicType VariableDeclarator ReferenceType VariableDeclarator Assignment Assignment ForControl BlockStatement ReferenceType VariableDeclarator ReferenceType VariableDeclarator MemberReference converted handler MethodInvocation getRuntime e RubyProc ArraySelector args MemberReference MemberReference newProc 0 MethodInvocation getRuntime MemberReference ArraySelector parameterTypes null Object JavaProxyMethod Object int length TernaryExpression IRubyObject rubyArgs ArrayCreator MemberReference MethodInvocation = MemberReference MemberReference = VariableDeclaration BinaryOperation MemberReference StatementExpression IRubyObject call_result MethodInvocation Object converted_result MethodInvocation converted_result BinaryOperation newArgumentError MemberReference Block.Type PROC block MemberReference newFixnum i MemberReference BinaryOperation Literal MemberReference ReferenceType BinaryOperation ArraySelector rubyArgs JavaObject MethodInvocation MemberReference wrap ArraySelector rubyArgs method BasicType VariableDeclarator < MemberReference MemberReference ++ i Assignment proc MethodInvocation MemberReference call call_result MethodInvocation toJava + Literal MethodInvocation size i i == MemberReference Literal 0 nargs length IRubyObject + MemberReference Literal Literal recv getRuntime proxy Literal int i Literal i length MemberReference MethodInvocation = MethodInvocation getRuntime rubyArgs method getReturnType "Constructor invocation failed: " e getMessage nargs null length 2 0 1 0 ArraySelector rubyArgs JavaUtil MethodInvocation MemberReference convertJavaToRuby getCurrentContext BinaryOperation getRuntime ArraySelector nargs + MemberReference Literal MemberReference i 2 i	1
MethodDeclaration Modifier get FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression final public BasicType offset BasicType dst BasicType off BasicType len MethodInvocation long float int int IO BinaryOperation MemberReference MemberReference MemberReference getFloatArray + MemberReference MemberReference dst off len address offset	0
MethodDeclaration Modifier ReferenceType getAccessor ReturnStatement public IAccessor MemberReference accessor	0
MethodDeclaration Modifier ReferenceType getBasicObject ReturnStatement public RubyClass MemberReference basicObjectClass	0
MethodDeclaration Modifier BasicType writeDataBuffered ReturnStatement public boolean MethodInvocation openFile MethodInvocation getMainStream writeDataBuffered	1
MethodDeclaration Modifier Annotation Annotation ReferenceType push FormalParameter FormalParameter StatementExpression IfStatement StatementExpression StatementExpression ReturnStatement synchronized public JRubyMethod ElementValuePair Override IRubyObject ReferenceType context ReferenceType value MethodInvocation BinaryOperation BlockStatement SuperMethodInvocation MethodInvocation MethodInvocation name ElementArrayValue ThreadContext IRubyObject MemberReference checkShutdown >= MethodInvocation MemberReference StatementExpression TryStatement MemberReference MemberReference push notifyAll context MethodInvocation getRuntime Literal Literal context java_length capacity MemberReference WhileStatement StatementExpression context value getNil "push" "<<" ++ numWaiting BinaryOperation BlockStatement MemberReference >= MethodInvocation MemberReference TryStatement StatementExpression -- numWaiting java_length capacity StatementExpression CatchClause MethodInvocation MethodInvocation CatchClauseParameter MemberReference checkShutdown context MethodInvocation getThread InterruptedException e context This Literal wait_timeout null	1
MethodDeclaration Modifier Annotation ReferenceType aref FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement ReturnStatement final public JRubyMethod ElementValuePair IRubyObject ReferenceType context ReferenceType indexArg Modifier BasicType VariableDeclarator Modifier BasicType VariableDeclarator BinaryOperation BlockStatement MethodInvocation name Literal ThreadContext IRubyObject final int index MethodInvocation final int offset BinaryOperation >= MemberReference MemberReference ThrowStatement MethodInvocation MemberReference slice "[]" RubyNumeric MemberReference num2int * MemberReference MemberReference offset size MethodInvocation context getRuntime offset indexArg index typeSize context MethodInvocation getRuntime MethodInvocation newIndexError String Literal MemberReference format "Index %d out of range" index	0
MethodDeclaration Modifier testPrintf Exception StatementExpression StatementExpression public MethodInvocation MethodInvocation Literal MethodInvocation assertEquals Literal MethodInvocation assertEquals "hello" Literal eval "" Literal eval "printf(\"%s\", \"hello\")" "printf(\"%s\", nil)"	0
MethodDeclaration Modifier ReferenceType preparePattern FormalParameter StatementExpression LocalVariableDeclaration IfStatement ReturnStatement final Regex ReferenceType str MethodInvocation ReferenceType VariableDeclarator BinaryOperation ReturnStatement MethodInvocation RubyString check Encoding enc MethodInvocation == MemberReference MethodInvocation MemberReference MethodInvocation This MemberReference MethodInvocation MemberReference getPreprocessedRegexpFromCache MemberReference Literal checkEncoding enc pattern getEncoding pattern getRuntime MemberReference enc pattern getOptions ErrorMode PREPROCESS str true str	1
MethodDeclaration Modifier ReferenceType backrefMatchLast FormalParameter LocalVariableDeclaration ReturnStatement static public IRubyObject ReferenceType context ReferenceType VariableDeclarator MethodInvocation ThreadContext IRubyObject backref MethodInvocation RubyRegexp MemberReference match_last context MethodInvocation getCurrentScope backref MethodInvocation getBackRef context getRuntime	0
MethodDeclaration Modifier ReferenceType ret_args FormalParameter FormalParameter IfStatement ReturnStatement public Node ReferenceType node ReferenceType position BinaryOperation BlockStatement MemberReference Node ISourcePosition != MemberReference Literal IfStatement node node null BinaryOperation BlockStatement IfStatement instanceof MemberReference ReferenceType ThrowStatement BinaryOperation BlockStatement IfStatement node BlockPassNode ClassCreator && BinaryOperation BinaryOperation StatementExpression BinaryOperation BlockStatement ReferenceType MemberReference MemberReference MethodInvocation Literal instanceof MemberReference ReferenceType == Cast Literal Assignment instanceof MemberReference ReferenceType StatementExpression SyntaxException PID DYNAMIC_CONSTANT_ASSIGNMENT position lexer getCurrentLine "Dynamic constant assignment." node ArrayNode ReferenceType MemberReference 1 MemberReference Cast = node SplatNode Assignment ArrayNode node node ReferenceType MemberReference MemberReference ClassCreator = ArrayNode node node ReferenceType MemberReference MemberReference SValueNode position node	1
MethodDeclaration Modifier Annotation ReferenceType list FormalParameter LocalVariableDeclaration IfStatement LocalVariableDeclaration ForStatement ReturnStatement public Override String ReferenceType filter ReferenceType VariableDeclarator BinaryOperation BlockStatement ReferenceType VariableDeclarator ForControl BlockStatement MemberReference FilenameFilter String files SuperMethodInvocation == MemberReference Literal ReturnStatement String smartFiles ArrayCreator VariableDeclaration BinaryOperation MemberReference StatementExpression smartFiles MemberReference list files null Literal ReferenceType MemberReference BasicType VariableDeclarator < MemberReference MemberReference ++ i Assignment filter null String files length int i Literal i files length MemberReference MethodInvocation = 0 ArraySelector smartFiles MemberReference normalizeSeps MemberReference ArraySelector files i MemberReference i	1
MethodDeclaration Modifier Annotation ReferenceType delete_bang19 FormalParameter ThrowStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context MethodInvocation name Literal compat MemberReference ThreadContext context MethodInvocation getRuntime "delete!" CompatVersion RUBY1_9 Literal newArgumentError "wrong number of arguments"	1
MethodDeclaration Modifier ReferenceType callIt2 FormalParameter FormalParameter FormalParameter ReturnStatement public Object ReferenceType a ReferenceType b ReferenceType obj MethodInvocation Object Object SingleMethodInterface obj callIt	0
MethodDeclaration Modifier Annotation ReferenceType accept FormalParameter ThrowStatement public Override Object ReferenceType visitor ClassCreator NodeVisitor ReferenceType Literal UnsupportedOperationException "Not supported yet."	0
MethodDeclaration Modifier compileRoot FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression LocalVariableDeclaration LocalVariableDeclaration IfStatement StatementExpression StatementExpression public ReferenceType node ReferenceType context ReferenceType inspector BasicType load BasicType main ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement MethodInvocation MethodInvocation Node ScriptCompiler ASTInspector boolean boolean RootNode rootNode Cast StaticScope staticScope MethodInvocation context MemberReference startScript staticScope Literal setRestArg BodyCompiler methodCompiler MethodInvocation Node nextNode MethodInvocation != MemberReference Literal IfStatement StatementExpression methodCompiler endBody context MemberReference MemberReference endScript ReferenceType MemberReference rootNode getStaticScope staticScope - 2 context Literal MemberReference MemberReference startFileMethod rootNode getBodyNode nextNode null BinaryOperation BlockStatement BlockStatement MethodInvocation load main RootNode node null staticScope inspector == MethodInvocation MemberReference LocalVariableDeclaration ForStatement StatementExpression methodCompiler loadNil nextNode getNodeType NodeType BLOCKNODE ReferenceType VariableDeclarator ForControl BlockStatement MethodInvocation BlockNode blockNode Cast VariableDeclaration BinaryOperation MemberReference IfStatement StatementExpression MemberReference MemberReference Literal compile ReferenceType MemberReference BasicType VariableDeclarator < MemberReference MethodInvocation ++ i BinaryOperation BlockStatement MethodInvocation nextNode methodCompiler true BlockNode nextNode int i Literal i blockNode size == BinaryOperation Literal StatementExpression MethodInvocation MemberReference BinaryOperation compile 0 % BinaryOperation MemberReference 0 Assignment blockNode MemberReference get methodCompiler >= BinaryOperation MethodInvocation + MemberReference Literal RubyInstanceConfig CHAINED_COMPILE_LINE_COUNT MemberReference MethodInvocation = i + MemberReference Literal blockNode size i 1 methodCompiler methodCompiler BinaryOperation chainToMethod i 1 + Literal BinaryOperation "__file__from_line_" + MemberReference Literal i 1	0
MethodDeclaration Modifier setMethods FormalParameter ThrowStatement public ReferenceType newMethods ClassCreator Map ReferenceType Literal UnsupportedOperationException "An included class is only a wrapper for a module"	0
MethodDeclaration Modifier Annotation ReferenceType allocateInput FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair Buffer ReferenceType context ReferenceType recv ReferenceType sizeArg ReferenceType arg2 MethodInvocation name ElementArrayValue meta Literal ThreadContext IRubyObject IRubyObject IRubyObject MemberReference MemberReference MemberReference MethodInvocation MemberReference allocate Literal Literal Literal true context recv sizeArg MemberReference getCount IN "new_in" "alloc_in" "__alloc_in" arg2	0
MethodDeclaration Modifier ReferenceType yieldSpecific FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType context ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 ReferenceType arg3 ReferenceType arg4 ReferenceType arg5 ReferenceType arg6 ReferenceType arg7 ReferenceType arg8 MethodInvocation ThreadContext IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject body MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference yieldSpecific context arg0 arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8 binding type	1
MethodDeclaration Modifier ReferenceType f_inspect FormalParameter FormalParameter ReturnStatement static public IRubyObject ReferenceType context ReferenceType x MethodInvocation ThreadContext IRubyObject x MemberReference Literal callMethod context "inspect"	1
MethodDeclaration Modifier ReferenceType findImplementerIfNecessary FormalParameter FormalParameter IfStatement static public RubyModule ReferenceType clazz ReferenceType implementationClass BinaryOperation BlockStatement BlockStatement RubyModule RubyModule && BinaryOperation MethodInvocation ReturnStatement ReturnStatement != MemberReference Literal implementationClass needsImplementer MethodInvocation MemberReference implementationClass null clazz MemberReference findImplementer implementationClass implementationClass	0
MethodDeclaration Modifier ReferenceType op_aset19 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement private IRubyObject ReferenceType context BasicType idx ReferenceType arg1 MethodInvocation MemberReference ThreadContext int IRubyObject MethodInvocation Literal MethodInvocation replaceInternal19 arg1 MemberReference MethodInvocation checkIndex 1 arg1 convertToString idx strLength	1
MethodDeclaration Modifier resizeAndAdjustThreshold FormalParameter LocalVariableDeclaration StatementExpression StatementExpression private ReferenceType oldTable BasicType VariableDeclarator MethodInvocation Assignment RubyHashEntry int newCapacity BinaryOperation MemberReference resize MemberReference BinaryOperation = << MemberReference Literal newCapacity threshold - MemberReference BinaryOperation oldTable length 1 newCapacity >> MemberReference Literal newCapacity 2	0
MethodDeclaration Modifier Annotation ReferenceType interpret FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression ReturnStatement public Override IRubyObject ReferenceType runtime ReferenceType context ReferenceType self ReferenceType aBlock ReferenceType VariableDeclarator MethodInvocation MethodInvocation Ruby ThreadContext IRubyObject Block Block block MethodInvocation runtime MethodInvocation pushExitBlock runtime getNil SharedScopeBlock MemberReference This MethodInvocation MemberReference newInterpretedSharedScopeClosure runtime MemberReference MemberReference newProc context context getCurrentScope self Block.Type LAMBDA block	0
MethodDeclaration Modifier BasicType body FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration ForStatement StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression LocalVariableDeclaration StatementExpression StatementExpression ReturnStatement private static final int BasicType schedule BasicType Eswap0 BasicType Eswap1 BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator ForControl BlockStatement Assignment Assignment Assignment Assignment Assignment BasicType VariableDeclarator MethodInvocation Assignment Assignment MethodInvocation Assignment Assignment MethodInvocation Assignment Assignment MethodInvocation Assignment Assignment MethodInvocation Assignment Assignment BasicType VariableDeclarator Assignment Assignment MemberReference int int int int left Literal int right Literal int t Literal VariableDeclaration BinaryOperation MemberReference ForStatement StatementExpression StatementExpression StatementExpression MemberReference MemberReference = MemberReference BinaryOperation = MemberReference BinaryOperation = MemberReference Literal &= MemberReference Literal &= int results ArrayCreator MemberReference MemberReference Literal Literal MemberReference PERM_OP MemberReference MemberReference = MemberReference MemberReference = MemberReference MemberReference Literal Literal MemberReference PERM_OP MemberReference MemberReference = MemberReference MemberReference = MemberReference MemberReference Literal Literal MemberReference PERM_OP MemberReference MemberReference = MemberReference MemberReference = MemberReference MemberReference Literal Literal MemberReference PERM_OP MemberReference MemberReference = MemberReference MemberReference = MemberReference MemberReference Literal Literal MemberReference PERM_OP MemberReference MemberReference = MemberReference MemberReference = int out ArrayCreator MemberReference MemberReference = MemberReference MemberReference = out 0 0 0 BasicType VariableDeclarator < MemberReference Literal ++ j ForControl BlockStatement Assignment Assignment Assignment t right right | BinaryOperation BinaryOperation left | BinaryOperation BinaryOperation left - 1 right - 1 BasicType Literal right left 1 1431655765 results right ArraySelector results left ArraySelector results left right 8 16711935 results left ArraySelector results right ArraySelector results right left 2 858993459 results right ArraySelector results left ArraySelector results left right 16 65535 results left ArraySelector results right ArraySelector results right left 4 252645135 results right ArraySelector results left ArraySelector results BasicType Literal ArraySelector out left ArraySelector out right int j Literal j 25 VariableDeclaration BinaryOperation Assignment StatementExpression StatementExpression MemberReference MemberReference = MemberReference MemberReference = MemberReference MemberReference = >>> MemberReference Literal << MemberReference Literal >>> MemberReference Literal << MemberReference Literal int 2 Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal int 2 Literal Literal 0 BasicType VariableDeclarator < MemberReference BinaryOperation MemberReference Literal += Assignment Assignment t left left right right t left 1 left 31 t 1 t 31 0 1 0 1 0 1 0 1 0 1 0 1 int i Literal i * MemberReference Literal i 4 MemberReference MethodInvocation = MemberReference MethodInvocation = 0 ITERATIONS 2 left MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference D_ENCRYPT right MemberReference MemberReference BinaryOperation MemberReference MemberReference MemberReference D_ENCRYPT left right i Eswap0 Eswap1 schedule right left + MemberReference Literal Eswap0 Eswap1 schedule i 2	1
MethodDeclaration Modifier ReferenceType invoke FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter AssertStatement LocalVariableDeclaration LocalVariableDeclaration IfStatement ReturnStatement public IRubyObject ReferenceType context ReferenceType self ReferenceType name ReferenceType args ReferenceType callType BinaryOperation ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation BlockStatement MethodInvocation ThreadContext IRubyObject String IRubyObject CallType != MemberReference Literal DynamicMethod method MethodInvocation IRubyObject caller MethodInvocation MemberReference MemberReference MemberReference MemberReference shouldCallMethodMissing ReturnStatement method MemberReference MemberReference This MemberReference MemberReference call args null MemberReference searchMethod context getFrameSelf method name caller callType MethodInvocation context self name args name RuntimeHelpers MemberReference MemberReference MethodInvocation MemberReference MemberReference MemberReference MemberReference callMethodMissing context self method getVisibility name callType args Block NULL_BLOCK	1
MethodDeclaration Modifier BasicType greaterThan IOException StatementExpression LocalVariableDeclaration SwitchStatement private int MethodInvocation BasicType VariableDeclarator MemberReference SwitchStatementCase SwitchStatementCase SwitchStatementCase determineExpressionState int c MethodInvocation c Literal StatementExpression ReturnStatement Literal IfStatement StatementExpression StatementExpression ReturnStatement StatementExpression StatementExpression ReturnStatement src read '=' Assignment MemberReference '>' BinaryOperation BlockStatement MethodInvocation Assignment MemberReference MethodInvocation Assignment MemberReference MemberReference ClassCreator = Tokens tGEQ == Assignment Literal StatementExpression StatementExpression ReturnStatement src MemberReference unread MemberReference ClassCreator = Tokens tRSHFT src MemberReference unread MemberReference ClassCreator = Tokens tGT yaccValue ReferenceType Literal MethodInvocation MemberReference MethodInvocation = '=' Assignment Assignment MemberReference c yaccValue ReferenceType Literal MethodInvocation c yaccValue ReferenceType Literal MethodInvocation Token ">=" getPosition c src read MemberReference MemberReference = MemberReference ClassCreator = Tokens tOP_ASGN Token ">>" getPosition Token ">" getPosition lex_state LexState EXPR_BEG yaccValue ReferenceType Literal MethodInvocation Token ">>" getPosition	1
MethodDeclaration Modifier Annotation ReferenceType newAligned FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType sizeArg ReferenceType count ReferenceType align ReferenceType block MethodInvocation name ElementArrayValue meta Literal ThreadContext IRubyObject IRubyObject IRubyObject IRubyObject Block MemberReference MemberReference MemberReference MethodInvocation MethodInvocation Literal MemberReference allocate Literal true context recv sizeArg RubyNumeric MemberReference fix2int RubyNumeric MemberReference num2int true block "new_aligned" count align	0
MethodDeclaration Modifier Annotation ReferenceType send FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType args ReferenceType block ReferenceType VariableDeclarator BasicType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement MethodInvocation name ElementArrayValue rest Literal ThreadContext IRubyObject Block String name MemberReference int newArgsLength BinaryOperation IRubyObject newArgs == MemberReference Literal StatementExpression StatementExpression StatementExpression MethodInvocation getMetaClass Literal Literal true ArraySelector MethodInvocation args - MemberReference Literal newArgsLength 0 Assignment Assignment MethodInvocation MemberReference This MemberReference MemberReference MemberReference finvoke "send" "__send__" Literal asJavaString args length 1 MemberReference MemberReference = MemberReference ArrayCreator = System MemberReference Literal MemberReference Literal MemberReference arraycopy context name newArgs block 0 newArgs IRubyObject NULL_ARRAY newArgs ReferenceType MemberReference args 1 newArgs 0 newArgs length IRubyObject newArgsLength	0
MethodDeclaration Modifier ReferenceType setInstanceVariable FormalParameter FormalParameter AssertStatement StatementExpression ReturnStatement public IRubyObject ReferenceType name ReferenceType value BinaryOperation MethodInvocation Cast String IRubyObject && MethodInvocation BinaryOperation ensureInstanceVariablesSettable ReferenceType MethodInvocation IdUtil MemberReference isInstanceVariable != MemberReference Literal IRubyObject MemberReference MemberReference variableTableStore name value null name value	1
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement public Override IRubyObject ReferenceType context ReferenceType caller ReferenceType self ReferenceType name ReferenceType VariableDeclarator MethodInvocation BlockStatement BlockStatement ThreadContext IRubyObject IRubyObject IRubyObject RubyClass klass MethodInvocation MemberReference MemberReference isDefaultRespondTo LocalVariableDeclaration IfStatement ReturnStatement ReturnStatement self getMetaClass klass context ReferenceType VariableDeclarator MethodInvocation BlockStatement MemberReference SuperMethodInvocation String newString MethodInvocation MemberReference MemberReference isCacheInvalid StatementExpression respondsTo MemberReference MemberReference MemberReference MemberReference call name asJavaString newString klass MethodInvocation context caller self name MemberReference MemberReference Literal MemberReference recacheRespondsTo newString klass true context	0
MethodDeclaration Modifier ReferenceType createBlockCallback19 FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration ReturnStatement static public CompiledBlockCallback19 ReferenceType runtime ReferenceType scriptObject ReferenceType closureMethod ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation Ruby Object String Class scriptClass MethodInvocation ClassLoader scriptClassLoader MethodInvocation MethodFactory factory MethodInvocation factory MemberReference MemberReference getBlockCallback19 scriptObject getClass scriptClass getClassLoader MethodFactory MemberReference createFactory closureMethod scriptObject scriptClassLoader	1
MethodDeclaration Modifier Annotation ReferenceType match FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType pattern MethodInvocation name Literal compat MemberReference reads MemberReference ThreadContext IRubyObject MethodInvocation MemberReference getPattern "match" CompatVersion RUBY1_8 BACKREF MemberReference Literal This callMethod pattern context "match"	1
MethodDeclaration Modifier ReferenceType receiveByteObj FormalParameter ReturnStatement public Byte ReferenceType b MethodInvocation Byte vri MemberReference receiveByteObj b	0
MethodDeclaration Modifier ReferenceType singleByteLStrip FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration WhileStatement IfStatement ReturnStatement private IRubyObject ReferenceType runtime ReferenceType enc BasicType bytes BasicType s BasicType end BasicType VariableDeclarator BinaryOperation StatementExpression BinaryOperation BlockStatement MethodInvocation Ruby Encoding byte int int int p MemberReference && BinaryOperation MethodInvocation MemberReference > MemberReference MemberReference StatementExpression ReturnStatement runtime getNil s < MemberReference MemberReference enc BinaryOperation isSpace ++ p p s MethodInvocation This p end & MemberReference Literal BinaryOperation BinaryOperation view ArraySelector bytes 0xff - MemberReference MemberReference - MemberReference MemberReference MemberReference p s end p p	1
MethodDeclaration Modifier Annotation ReferenceType interpret FormalParameter FormalParameter FormalParameter FormalParameter ThrowStatement public Override IRubyObject ReferenceType runtime ReferenceType context ReferenceType self ReferenceType aBlock MethodInvocation Ruby ThreadContext IRubyObject Block context MethodInvocation returnJump valueNode MemberReference MemberReference MemberReference MemberReference interpret runtime context self aBlock	0
MethodDeclaration Modifier dup_x1 StatementExpression public MethodInvocation MethodInvocation getMethodVisitor MemberReference visitInsn DUP_X1	1
MethodDeclaration Modifier ReferenceType case175_line717 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support MethodInvocation Cast Cast Cast Cast new_opElementAsgnNode Cast getPosition ReferenceType MemberReference ReferenceType Cast ReferenceType MemberReference ReferenceType MemberReference ReferenceType MemberReference Node ArraySelector yyVals String ReferenceType MemberReference Node ArraySelector yyVals Node ArraySelector yyVals Node ArraySelector yyVals BinaryOperation Token ArraySelector yyVals BinaryOperation BinaryOperation BinaryOperation + Literal MemberReference BinaryOperation + Literal MemberReference + Literal MemberReference + Literal MemberReference - 5 yyTop + Literal MemberReference - 3 yyTop 0 yyTop - 5 yyTop - 1 yyTop	1
MethodDeclaration Modifier setSuperClass FormalParameter StatementExpression protected ReferenceType superClass Assignment RubyClass This MemberReference = MemberReference superClass superClass	0
MethodDeclaration Modifier BasicType smartLoad FormalParameter StatementExpression IfStatement IfStatement TryStatement public boolean ReferenceType file MethodInvocation MethodInvocation BlockStatement MemberReference BlockStatement LocalVariableDeclaration ReturnStatement CatchClause String MemberReference checkEmptyLoad file Literal endsWith StatementExpression Platform IS_WINDOWS StatementExpression ReferenceType VariableDeclarator MethodInvocation CatchClauseParameter ReturnStatement file ".so" Assignment Assignment SearchState state MethodInvocation MemberReference MemberReference tryLoadingLibraryOrScript AlreadyLoaded al Literal MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference findFileForLoad runtime state false file file Literal Literal replaceAll file file Literal Literal replace file ".so$" ".jar" '\\' '/'	0
MethodDeclaration Modifier BasicType isNext_identchar IOException LocalVariableDeclaration StatementExpression ReturnStatement private boolean BasicType VariableDeclarator MethodInvocation BinaryOperation int c MethodInvocation src MemberReference unread && BinaryOperation BinaryOperation src read c != MemberReference MemberReference || MethodInvocation BinaryOperation c EOF Character MemberReference isLetterOrDigit == MemberReference Literal c c '_'	1
MethodDeclaration Modifier ReferenceType getSymbol1 FormalParameter FormalParameter ReturnStatement final public RubySymbol ReferenceType runtime ReferenceType name MethodInvocation Ruby String runtimeCache MemberReference Literal MemberReference getSymbol runtime 1 name	0
MethodDeclaration Modifier send FormalParameter FormalParameter IfStatement public BasicType channel ReferenceType message MethodInvocation BlockStatement BlockStatement int Object MemberReference isAsync StatementExpression StatementExpression channel MethodInvocation MethodInvocation MemberReference MemberReference sendRaw MemberReference ClassCreator sendRaw channel message channel ReferenceType MemberReference AsyncCall message	0
MethodDeclaration Modifier Annotation ReferenceType upcase_bang19 FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement StatementExpression LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator MethodInvocation BlockStatement BlockStatement name Literal compat MemberReference ThreadContext Ruby runtime MethodInvocation Encoding enc MethodInvocation == MemberReference Literal StatementExpression ReturnStatement modifyAndKeepCodeRange int s MemberReference int end BinaryOperation byte bytes MemberReference MemberReference singleByteOptimizable ReturnStatement ReturnStatement "upcase!" CompatVersion RUBY1_9 context getRuntime checkDummyEncoding value realSize 0 MethodInvocation MethodInvocation value begin + MemberReference MemberReference value bytes enc MethodInvocation MethodInvocation modifyCheck runtime getNil s value realSize MemberReference MemberReference MemberReference MemberReference singleByteUpcase MemberReference MemberReference MemberReference MemberReference MemberReference multiByteUpcase runtime bytes s end runtime enc bytes s end	1
MethodDeclaration Modifier ReferenceType case293_line1130 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support MethodInvocation Cast Cast newCaseNode Cast getPosition ReferenceType MemberReference ReferenceType MemberReference ReferenceType MemberReference Node ArraySelector yyVals Node ArraySelector yyVals Token ArraySelector yyVals BinaryOperation BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference + Literal MemberReference - 3 yyTop - 1 yyTop - 4 yyTop	1
MethodDeclaration Modifier ReferenceType case276_line1078 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference ClassCreator = yyVal yyVal ReferenceType MethodInvocation ZYieldNode Cast getPosition ReferenceType MemberReference Token ArraySelector yyVals BinaryOperation + Literal MemberReference - 2 yyTop	1
MethodDeclaration Modifier BasicType isDirect ReturnStatement public boolean Literal true	0
MethodDeclaration Modifier ReferenceType getCallback ReturnStatement public Callback MemberReference callback	0
MethodDeclaration Modifier ReferenceType arrayEntryOrNilTwo FormalParameter IfStatement static public IRubyObject ReferenceType array BinaryOperation BlockStatement BlockStatement RubyArray < Literal MethodInvocation ReturnStatement ReturnStatement 2 array getLength MethodInvocation MethodInvocation array Literal eltInternal array MethodInvocation getRuntime 2 getNil	0
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType klazz ReferenceType name ReferenceType args MethodInvocation ThreadContext IRubyObject RubyModule String IRubyObject oldMethod MemberReference MemberReference MemberReference MemberReference MemberReference call context self klazz oldName args	0
MethodDeclaration Modifier Annotation ReferenceType getFastOptSingletonMethod FormalParameter LocalVariableDeclaration LocalVariableDeclaration SynchronizedStatement public Deprecated Callback ReferenceType method ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation LocalVariableDeclaration TryStatement String String mname BinaryOperation String mnamePath BinaryOperation runtime getJRubyClassLoader ReferenceType VariableDeclarator IfStatement LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression ReturnStatement CatchClause CatchClause + BinaryOperation Literal + BinaryOperation Literal Class c MethodInvocation BinaryOperation BlockStatement ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MemberReference CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement + BinaryOperation MemberReference "_FSopt" + BinaryOperation MemberReference "_FSopt" MemberReference tryClass == MemberReference Literal LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression FastInvocationCallback ic Cast ic MethodInvocation setArity ic MemberReference setArgumentTypes ic MemberReference setJavaName ic Literal setSingleton ic IllegalArgumentException e MemberReference Exception e ClassCreator + MethodInvocation Literal method + MemberReference Literal method mname c null ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation Assignment ReferenceType MethodInvocation Arity optional InvocationCallback OPTIONAL_ARGS method true e ReferenceType MethodInvocation type getName "Callback$" typePath "Callback$" Class signature ArrayCreator Class ret MethodInvocation ClassWriter cw MethodInvocation MethodVisitor mv MethodInvocation mv MemberReference MemberReference visitVarInsn MemberReference ClassReference checkCast mv MemberReference MemberReference MemberReference MethodInvocation visitMethodInsn mv MemberReference visitInsn mv Literal Literal visitMaxs MemberReference MethodInvocation = FastInvocationCallback c newInstance IllegalArgumentException e getMessage ReferenceType ArrayInitializer MemberReference MemberReference getReturnClass MemberReference createCtorFast MemberReference startCallSFast ALOAD METHOD_ARGS_INDEX mv ReferenceType INVOKESTATIC typePath method MemberReference MemberReference sig ARETURN 2 3 c MemberReference MemberReference MemberReference endCall Class MemberReference ClassReference method signature mnamePath cw IRubyObject ret signature cw mv mname RubyKernel IRUBY_OBJECT ReferenceType IRubyObject	1
MethodDeclaration Modifier aconst_null StatementExpression public MethodInvocation MethodInvocation getMethodVisitor MemberReference visitInsn ACONST_NULL	1
MethodDeclaration Modifier isTrue StatementExpression private MethodInvocation Literal MethodInvocation invokeIRubyObject "isTrue" MemberReference sig Boolean TYPE	0
MethodDeclaration Modifier ReferenceType foreachCommon FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter IfStatement ReturnStatement private static IRubyObject ReferenceType context ReferenceType recv ReferenceType runtime ReferenceType _path ReferenceType block MethodInvocation BlockStatement MethodInvocation ThreadContext IRubyObject Ruby RubyString Block block isGiven StatementExpression LocalVariableDeclaration LocalVariableDeclaration StatementExpression ReturnStatement MemberReference MemberReference Literal MemberReference enumeratorize MethodInvocation ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation runtime recv "foreach" _path runtime MemberReference checkSafeString RubyClass dirClass MethodInvocation RubyDir dir Cast dir MemberReference MemberReference each runtime getNil _path runtime getDir ReferenceType MethodInvocation context block RubyDir dirClass MemberReference ArrayCreator MemberReference newInstance context ReferenceType ArrayInitializer block IRubyObject MemberReference _path	1
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name MethodInvocation ThreadContext IRubyObject RubyModule String MemberReference MemberReference javaToRuby ruby cls	0
MethodDeclaration Modifier spliceOne FormalParameter FormalParameter IfStatement StatementExpression LocalVariableDeclaration IfStatement TryStatement private final BasicType beg ReferenceType rpl BinaryOperation ThrowStatement MethodInvocation BasicType VariableDeclarator BinaryOperation BlockStatement BlockStatement StatementExpression CatchClause long IRubyObject && BinaryOperation BinaryOperation MethodInvocation modify int valuesLength BinaryOperation >= MemberReference MemberReference LocalVariableDeclaration IfStatement StatementExpression StatementExpression LocalVariableDeclaration LocalVariableDeclaration IfStatement IfStatement Assignment CatchClauseParameter StatementExpression < MemberReference Literal < Assignment Literal MethodInvocation getRuntime - MemberReference MemberReference beg realLength BasicType VariableDeclarator BinaryOperation StatementExpression MethodInvocation Assignment BasicType VariableDeclarator BasicType VariableDeclarator BinaryOperation StatementExpression BinaryOperation BlockStatement MemberReference MemberReference = ArrayIndexOutOfBoundsException e MethodInvocation beg 0 MemberReference MemberReference += 0 BinaryOperation newIndexError values length begin int len BinaryOperation >= MemberReference MemberReference MethodInvocation RuntimeHelpers MemberReference BinaryOperation BinaryOperation MethodInvocation fillNil MemberReference Cast = int len TernaryExpression int alen BinaryOperation >= MemberReference MemberReference MethodInvocation == MemberReference Literal TryStatement StatementExpression ArraySelector values rpl concurrentModification beg realLength + BinaryOperation Literal + Cast Literal len valuesLength Cast MemberReference spliceRealloc values + MemberReference MemberReference + MemberReference Cast getRuntime realLength BasicType MemberReference BinaryOperation BinaryOperation Literal - BinaryOperation MemberReference alen valuesLength Cast MemberReference spliceRealloc len 0 StatementExpression CatchClause Assignment BinaryOperation + Literal BinaryOperation " out of array" BasicType MemberReference 1 BasicType MemberReference valuesLength begin realLength begin BasicType MemberReference int len > MemberReference MemberReference - MemberReference Cast 0 + MemberReference Literal len BasicType MemberReference valuesLength MethodInvocation CatchClauseParameter StatementExpression MemberReference MemberReference = + MemberReference Cast "index " - MemberReference MemberReference int beg int len int beg beg realLength realLength BasicType MemberReference realLength 1 int alen System MemberReference BinaryOperation MemberReference BinaryOperation BinaryOperation arraycopy ArrayIndexOutOfBoundsException e MethodInvocation realLength alen begin BasicType MemberReference beg realLength int beg values + MemberReference Cast values + BinaryOperation Literal - MemberReference Cast concurrentModification int beg begin BasicType MemberReference + MemberReference Cast 1 realLength BasicType MemberReference int beg begin BasicType MemberReference int beg int beg	1
MethodDeclaration Modifier ReferenceType searchMethodInner FormalParameter LocalVariableDeclaration IfStatement ReturnStatement protected DynamicMethod ReferenceType name ReferenceType VariableDeclarator BinaryOperation ReturnStatement TernaryExpression String DynamicMethod method MethodInvocation != MemberReference Literal MemberReference BinaryOperation Literal MethodInvocation MethodInvocation getMethods method null method == MemberReference Literal null superClass MemberReference searchMethodInner MemberReference get superClass null name name	1
MethodDeclaration Modifier ReferenceType getName ReturnStatement public String MemberReference name	0
MethodDeclaration Modifier ReferenceType accept FormalParameter ReturnStatement public Object ReferenceType iVisitor MethodInvocation NodeVisitor iVisitor This visitSymbolNode	0
MethodDeclaration Modifier BasicType fnmatch FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement static public int BasicType bytes BasicType pstart BasicType pend BasicType string BasicType sstart BasicType send BasicType flags BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator MemberReference BlockStatement BlockStatement byte int int byte int int int boolean period BinaryOperation boolean pathname BinaryOperation int pat_pos MemberReference int str_pos MemberReference int ptmp Literal int stmp Literal pathname WhileStatement ReturnStatement == BinaryOperation Literal != BinaryOperation Literal pstart sstart - 1 - 1 Literal BlockStatement MethodInvocation & MemberReference MemberReference 0 & MemberReference MemberReference 0 true IfStatement LocalVariableDeclaration LocalVariableDeclaration IfStatement IfStatement ReturnStatement MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference fnmatch_helper flags FNM_DOTMATCH flags FNM_PATHNAME MethodInvocation BlockStatement BasicType VariableDeclarator BasicType VariableDeclarator BinaryOperation BlockStatement BinaryOperation BlockStatement MemberReference bytes pstart pend string sstart send flags MemberReference MemberReference isDoubleStarAndSlash DoStatement StatementExpression StatementExpression int patSlashIdx MethodInvocation int strSlashIdx MethodInvocation == MethodInvocation Literal IfStatement IfStatement && BinaryOperation BinaryOperation StatementExpression IfStatement FNM_NOMATCH bytes pat_pos MethodInvocation BlockStatement Assignment Assignment MemberReference MemberReference MemberReference nextSlashIndex MemberReference MemberReference MemberReference nextSlashIndex MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference fnmatch_helper 0 BinaryOperation BlockStatement BinaryOperation BlockStatement && BinaryOperation BinaryOperation && MemberReference BinaryOperation Assignment BinaryOperation BlockStatement MemberReference MemberReference isDoubleStarAndSlash StatementExpression MemberReference MemberReference = MemberReference MemberReference = bytes pat_pos pend string str_pos send bytes pat_pos patSlashIdx string str_pos strSlashIdx flags && BinaryOperation BinaryOperation StatementExpression StatementExpression ContinueStatement && BinaryOperation BinaryOperation ReturnStatement != MemberReference Literal != MemberReference Literal period == MemberReference Literal MemberReference MethodInvocation = < MemberReference MemberReference StatementExpression StatementExpression StatementExpression ContinueStatement bytes pat_pos Assignment ptmp pat_pos stmp str_pos < MemberReference MemberReference < MemberReference MemberReference Assignment Assignment == MemberReference MemberReference == MemberReference MemberReference Literal ptmp - 1 stmp - 1 ArraySelector string '.' stmp MemberReference MemberReference MemberReference nextSlashIndex stmp send Assignment MemberReference Assignment MemberReference Literal += patSlashIdx pend strSlashIdx send MemberReference MemberReference = MemberReference MemberReference = patSlashIdx pend strSlashIdx send 0 MemberReference string stmp send MemberReference MemberReference = ++ stmp MemberReference MemberReference = pat_pos 3 pat_pos ++ patSlashIdx str_pos ++ strSlashIdx stmp pat_pos ptmp str_pos stmp	1
MethodDeclaration Modifier ReferenceType case454_line1731 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference ClassCreator = yyVal yyVal ReferenceType Literal MemberReference Cast Token "__LINE__" Tokens k__LINE__ ReferenceType MemberReference Token ArraySelector yyVals BinaryOperation + Literal MemberReference 0 yyTop	1
MethodDeclaration Modifier ReferenceType case70_line552 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference ClassCreator = yyVal yyVal ReferenceType MethodInvocation Literal Cast Literal MultipleAsgn19Node Cast getPosition null ReferenceType MemberReference null ReferenceType MemberReference Node ArraySelector yyVals Token ArraySelector yyVals BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference 0 yyTop - 1 yyTop	1
MethodDeclaration Modifier Annotation ReferenceType op_ge FormalParameter FormalParameter IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType other BinaryOperation BlockStatement MethodInvocation name Literal required Literal ThreadContext IRubyObject instanceof MemberReference ReferenceType ReturnStatement RubyComparable MemberReference This MemberReference op_ge ">=" 1 other RubyTime MethodInvocation context other MethodInvocation getRuntime BinaryOperation newBoolean >= MethodInvocation Literal Cast cmp 0 ReferenceType MemberReference RubyTime other	1
MethodDeclaration Modifier BasicType isJarfileLibrary FormalParameter FormalParameter ReturnStatement protected boolean ReferenceType state Modifier ReferenceType file BinaryOperation SearchState final String && BinaryOperation MethodInvocation instanceof MemberReference ReferenceType file Literal endsWith state library JarredScript ".jar"	0
MethodDeclaration Modifier ReferenceType getString ReturnStatement static public String Literal "foo"	0
MethodDeclaration Modifier defineReadonly FormalParameter FormalParameter AssertStatement AssertStatement AssertStatement StatementExpression public ReferenceType name ReferenceType accessor BinaryOperation BinaryOperation MethodInvocation MethodInvocation String IAccessor != MemberReference Literal != MemberReference Literal name Literal startsWith globalVariables MemberReference ClassCreator put name null accessor null "$" name ReferenceType ClassCreator GlobalVariable ReferenceType MemberReference MemberReference ReadonlyAccessor name accessor	1
MethodDeclaration Modifier BasicType nextId ReturnStatement private synchronized static int MemberReference ++ _nextId	0
MethodDeclaration /** * SSS FIXME: Used anywhere?  I don't see calls to this anywhere *    public Operand buildDAsgnAssignment(Node node, IR_Scope s) { *        DAsgnNode dasgnNode = (DAsgnNode) node; *        s.getVariableCompiler().assignLocalVariable(dasgnNode.getIndex(), dasgnNode.getDepth()); *    } */ Modifier ReferenceType defineNewMethod FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression IfStatement StatementExpression ReturnStatement private Operand ReferenceType defnNode ReferenceType s BasicType isInstanceMethod ReferenceType VariableDeclarator MethodInvocation BinaryOperation BlockStatement BlockStatement MethodInvocation MemberReference MethodDefNode IR_Scope boolean IR_Method m ClassCreator MethodInvocation MemberReference receiveArgs != MethodInvocation Literal LocalVariableDeclaration IfStatement StatementExpression s MemberReference addMethod Nil NIL ReferenceType MemberReference MemberReference MethodInvocation MemberReference defnNode getArgsNode m defnNode getBodyNode null ReferenceType VariableDeclarator BinaryOperation StatementExpression MethodInvocation m IR_Method s s defnNode getName isInstanceMethod Operand rv MethodInvocation != MemberReference Literal MethodInvocation m ClassCreator addInstr MethodInvocation MemberReference build rv null m ClassCreator addInstr ReferenceType MemberReference defnNode getBodyNode m ReferenceType MemberReference RETURN_Instr Nil NIL RETURN_Instr rv	1
MethodDeclaration Modifier Annotation ReferenceType path FormalParameter ReturnStatement public JRubyMethod ElementValuePair RubyString ReferenceType context MethodInvocation name ElementArrayValue ThreadContext context MethodInvocation getRuntime Literal Literal MemberReference newString "path" "to_path" path	0
MethodDeclaration Modifier Annotation ReferenceType aset FormalParameter FormalParameter ThrowStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType index ReferenceType someValue MethodInvocation name Literal required Literal IRubyObject IRubyObject MethodInvocation getRuntime "[]=" 2 Literal newTypeError "not a java array"	0
MethodDeclaration Modifier ReferenceType getFieldListFromArgs FormalParameter LocalVariableDeclaration ForStatement ReturnStatement private static Map TypeArgument TypeArgument ReferenceType args Modifier ReferenceType VariableDeclarator ForControl BlockStatement MemberReference ReferenceType ReferenceType IRubyObject final Map TypeArgument TypeArgument map ClassCreator VariableDeclaration BinaryOperation MemberReference IfStatement map String String ReferenceType ReferenceType ReferenceType BasicType VariableDeclarator < MemberReference MemberReference ++ i BinaryOperation BlockStatement BlockStatement String String HashMap TypeArgument TypeArgument int i Literal i args length instanceof MemberReference ReferenceType StatementExpression LocalVariableDeclaration StatementExpression ReferenceType ReferenceType 0 ArraySelector args RubyHash Cast ReferenceType VariableDeclarator MethodInvocation String String MemberReference ReferenceType MemberReference String value MemberReference map MemberReference MemberReference put i RubyHash ArraySelector args ArraySelector MethodInvocation MethodInvocation args value value MemberReference MemberReference asString toString i i	1
MethodDeclaration Modifier Annotation ReferenceType flatten FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement LocalVariableDeclaration StatementExpression StatementExpression ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context ReferenceType arg ReferenceType VariableDeclarator BasicType VariableDeclarator BinaryOperation ReturnStatement ReferenceType VariableDeclarator MethodInvocation MethodInvocation MemberReference name Literal ThreadContext IRubyObject Ruby runtime MethodInvocation int level MethodInvocation == MemberReference Literal This RubyArray result ClassCreator MemberReference MemberReference MemberReference flatten result This infectBy result "flatten" context getRuntime RubyNumeric MemberReference num2int level 0 ReferenceType MemberReference MethodInvocation MemberReference context level result arg RubyArray runtime getMetaClass realLength	1
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType context ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 ReferenceType arg3 ReferenceType arg4 ReferenceType arg5 ReferenceType arg6 ReferenceType block MethodInvocation ThreadContext IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject Block body MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference call context arg0 arg1 arg2 arg3 arg4 arg5 arg6 binding type block	1
MethodDeclaration Modifier Annotation BasicType getLongValue ReturnStatement public Override long MethodInvocation value longValue	0
MethodDeclaration Modifier BasicType isSourceFromStdin ReturnStatement private boolean BinaryOperation == MethodInvocation Literal getScriptFileName null	0
MethodDeclaration Modifier ReferenceType dumpArgTypes FormalParameter LocalVariableDeclaration ForStatement StatementExpression ReturnStatement protected static String ReferenceType arguments ReferenceType VariableDeclarator ForControl BlockStatement MethodInvocation MethodInvocation Object StringBuilder str ClassCreator VariableDeclaration BinaryOperation MemberReference IfStatement IfStatement str Literal append str toString ReferenceType Literal BasicType VariableDeclarator < MemberReference MemberReference ++ i BinaryOperation BlockStatement BinaryOperation BlockStatement BlockStatement "]" StringBuilder "[" int i Literal i arguments length > MemberReference Literal StatementExpression == MemberReference Literal StatementExpression StatementExpression 0 i 0 MethodInvocation ArraySelector arguments null MethodInvocation MethodInvocation str Literal append MemberReference str Literal append str MemberReference append "," i "null" ArraySelector MethodInvocation MethodInvocation arguments MemberReference getClass getName i	0
MethodDeclaration Modifier ReferenceType rehash AssertStatement LocalVariableDeclaration LocalVariableDeclaration IfStatement LocalVariableDeclaration LocalVariableDeclaration StatementExpression LocalVariableDeclaration LocalVariableDeclaration ForStatement StatementExpression ReturnStatement private Entry TypeArgument BinaryOperation BinaryOperation ReferenceType VariableDeclarator BasicType VariableDeclarator BinaryOperation BlockStatement BasicType VariableDeclarator BasicType VariableDeclarator Assignment ReferenceType VariableDeclarator ReferenceType VariableDeclarator ForControl BlockStatement Assignment MemberReference ReferenceType == MemberReference MethodInvocation + BinaryOperation MethodInvocation Entry TypeArgument oldTable MemberReference int oldCapacity >= Assignment MemberReference ReturnStatement int newCapacity BinaryOperation int sizeMask BinaryOperation MemberReference Cast = Entry TypeArgument newTable MethodInvocation Entry TypeArgument e VariableDeclaration BinaryOperation IfStatement MemberReference MemberReference = newTable T tableSize count + BinaryOperation Literal count ReferenceType entryTable MemberReference MemberReference = MAX_CAPACITY MemberReference << MemberReference Literal - MemberReference Literal threshold BasicType BinaryOperation ReferenceType Entry MemberReference newArray ReferenceType BasicType VariableDeclarator >= MemberReference Literal BinaryOperation BlockStatement entryTable newTable + Literal MemberReference " != count() " T oldCapacity oldTable length oldTable oldCapacity 1 newCapacity 1 int * MemberReference MemberReference T newCapacity T int i MemberReference -- i 0 != Assignment Literal LocalVariableDeclaration LocalVariableDeclaration IfStatement "tableSize " tableSize newCapacity DEFAULT_LOAD_FACTOR oldCapacity MemberReference MemberReference = null BasicType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement e ArraySelector oldTable int idx BinaryOperation Entry TypeArgument next == Assignment Literal StatementExpression LocalVariableDeclaration LocalVariableDeclaration ForStatement StatementExpression ForStatement MemberReference & MemberReference MemberReference ReferenceType MemberReference MemberReference = null Assignment BasicType VariableDeclarator ReferenceType VariableDeclarator ForControl BlockStatement Assignment ForControl BlockStatement i e hash sizeMask T next e next MemberReference MemberReference = int lastIdx MemberReference Entry TypeArgument lastRun MemberReference VariableDeclaration BinaryOperation Assignment LocalVariableDeclaration IfStatement MemberReference MemberReference = VariableDeclaration BinaryOperation Assignment LocalVariableDeclaration LocalVariableDeclaration StatementExpression ArraySelector newTable e idx ReferenceType e ReferenceType VariableDeclarator != MemberReference Literal MemberReference MemberReference = BasicType VariableDeclarator BinaryOperation BlockStatement ArraySelector newTable lastRun ReferenceType VariableDeclarator != MemberReference MemberReference MemberReference MemberReference = BasicType VariableDeclarator ReferenceType VariableDeclarator Assignment MemberReference T Entry TypeArgument last MemberReference last null last last next int k != Assignment MemberReference StatementExpression StatementExpression MemberReference Entry TypeArgument p MemberReference p lastRun p p next int k BinaryOperation Entry TypeArgument m ClassCreator MemberReference MemberReference = idx ReferenceType next MemberReference BinaryOperation = lastIdx Assignment Assignment lastIdx ReferenceType e & MemberReference MemberReference ReferenceType ReferenceType MemberReference MemberReference MemberReference MemberReference ArraySelector newTable m T k & MemberReference MemberReference MemberReference MemberReference = MemberReference MemberReference = T p hash sizeMask T Entry TypeArgument p objectRef p hash p proxyRef ArraySelector newTable MemberReference last hash sizeMask lastIdx k lastRun last ReferenceType MemberReference k T k	1
MethodDeclaration Modifier BasicType isFullTraceEnabled ReturnStatement public boolean MemberReference RubyInstanceConfig FULL_TRACE_ENABLED	0
MethodDeclaration Modifier setArgValues FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression public ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 ReferenceType arg3 ReferenceType arg4 MethodInvocation IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject ArrayCreator Literal setArgValues ReferenceType ArrayInitializer 5 IRubyObject MemberReference MemberReference MemberReference MemberReference MemberReference arg0 arg1 arg2 arg3 arg4	0
MethodDeclaration Modifier remove ThrowStatement public ClassCreator ReferenceType UnsupportedOperationException	0
MethodDeclaration Modifier ReferenceType allocate FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType runtime ReferenceType klass ClassCreator Ruby RubyClass ReferenceType MemberReference MemberReference RubyBasicObject runtime klass	0
MethodDeclaration Modifier load FormalParameter FormalParameter IOException StatementExpression public Modifier ReferenceType runtime BasicType wrap MethodInvocation final Ruby boolean org.jruby.RubyDigest MemberReference createDigestSHA2 runtime	0
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public IRubyObject ReferenceType context ReferenceType args ReferenceType block MethodInvocation MethodInvocation ThreadContext IRubyObject Block oldHandler ClassCreator handle runtime getNil ReferenceType MemberReference Signal handler signal	0
MethodDeclaration Modifier ReferenceType getScope2 FormalParameter FormalParameter ReturnStatement final public StaticScope ReferenceType context ReferenceType varNamesDescriptor MethodInvocation ThreadContext String runtimeCache MemberReference MemberReference Literal getScope context varNamesDescriptor 2	0
MethodDeclaration Modifier ReferenceType get FormalParameter IfStatement LocalVariableDeclaration ReturnStatement public T ReferenceType javaObject BinaryOperation ReturnStatement BasicType VariableDeclarator MethodInvocation Object == MemberReference Literal Literal int hash MethodInvocation MethodInvocation MemberReference segmentFor javaObject null null MemberReference hash MemberReference MemberReference get hash javaObject javaObject hash	1
MethodDeclaration Modifier Annotation ReferenceType convertJavaToRuby FormalParameter FormalParameter ReturnStatement static public Deprecated IRubyObject ReferenceType runtime BasicType l MethodInvocation Ruby long runtime MemberReference newFixnum l	1
MethodDeclaration Modifier Annotation ReferenceType inspect19 FormalParameter LocalVariableDeclaration IfStatement TryStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType VariableDeclarator MethodInvocation ReturnStatement StatementExpression ReturnStatement StatementExpression name Literal compat MemberReference ThreadContext Ruby runtime MethodInvocation runtime This isInspecting MethodInvocation MethodInvocation MethodInvocation MethodInvocation "inspect" CompatVersion RUBY1_9 context getRuntime MemberReference Literal inspect runtime This registerInspecting MemberReference Literal inspect runtime This unregisterInspecting context true context false	1
MethodDeclaration Modifier Annotation ReferenceType set_pos FormalParameter StatementExpression ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType newPos Assignment MemberReference name Literal required Literal IRubyObject This MethodInvocation = newPos "pos=" 1 MemberReference RubyNumeric MemberReference fix2int pos newPos	1
MethodDeclaration Modifier Annotation ReferenceType force_encoding FormalParameter FormalParameter StatementExpression LocalVariableDeclaration StatementExpression ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType enc MethodInvocation ReferenceType VariableDeclarator MethodInvocation This name Literal compat MemberReference ThreadContext IRubyObject modify19 Encoding encoding MethodInvocation MemberReference associateEncoding "force_encoding" CompatVersion RUBY1_9 RubyEncoding MethodInvocation MemberReference getEncodingFromObject encoding context getRuntime enc	1
MethodDeclaration Modifier visitIincInsn FormalParameter FormalParameter StatementExpression public BasicType arg0 BasicType arg1 MethodInvocation int int MethodInvocation getMethodVisitor MemberReference MemberReference visitIincInsn arg0 arg1	0
MethodDeclaration Modifier syncVariables FormalParameter StatementExpression public ReferenceType variables MethodInvocation List TypeArgument MemberReference variableTableSync ReferenceType variables Variable TypeArgument ReferenceType Object	0
MethodDeclaration Modifier ReferenceType newInterpretedSharedScopeClosure FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration ReturnStatement static public Block ReferenceType context ReferenceType iterNode ReferenceType dynamicScope ReferenceType self ReferenceType VariableDeclarator ReferenceType VariableDeclarator ClassCreator ThreadContext IterNode DynamicScope IRubyObject Binding binding MethodInvocation InterpretedBlock body ClassCreator ReferenceType MemberReference MemberReference context MemberReference MemberReference currentBinding ReferenceType MemberReference Block body binding self dynamicScope SharedScopeBlock iterNode	0
MethodDeclaration Modifier ReferenceType case390_line1477 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference Literal = yyVal yyVal null	1
MethodDeclaration Modifier Annotation ReferenceType constants FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair RubyArray ReferenceType context MethodInvocation name Literal compat MemberReference ThreadContext MemberReference Literal constantsCommon "constants" CompatVersion RUBY1_8 context true	0
MethodDeclaration Modifier ReferenceType getDummyScope FormalParameter IfStatement ReturnStatement public DynamicScope ReferenceType staticScope BinaryOperation BlockStatement MemberReference StaticScope || BinaryOperation BinaryOperation ReturnStatement dummyScope == MemberReference Literal != MethodInvocation MemberReference Assignment dummyScope null dummyScope getStaticScope staticScope MemberReference MethodInvocation = dummyScope DynamicScope MemberReference MemberReference newDummyScope staticScope dynamicScope	1
MethodDeclaration Modifier installClassConstants FormalParameter FormalParameter LocalVariableDeclaration ForStatement private Modifier ReferenceType javaClass Modifier ReferenceType proxy ReferenceType VariableDeclarator ForControl BlockStatement final Class TypeArgument final RubyClass Class TypeArgument classes MethodInvocation VariableDeclaration BinaryOperation IfStatement ? ? MemberReference getClasses BasicType VariableDeclarator >= MemberReference Literal BinaryOperation BlockStatement javaClass int i MemberReference -- i 0 == MemberReference MemberReference LocalVariableDeclaration LocalVariableDeclaration IfStatement IfStatement classes length javaClass ArraySelector MethodInvocation classes ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement BinaryOperation BlockStatement MemberReference getDeclaringClass Class TypeArgument clazz MemberReference String simpleName MethodInvocation == MethodInvocation Literal ContinueStatement && MethodInvocation BinaryOperation StatementExpression i ? ArraySelector classes MemberReference getSimpleName simpleName length 0 IdUtil MemberReference isConstant == MethodInvocation Literal MethodInvocation MemberReference clazz simpleName proxy MemberReference getConstantAt null proxy MemberReference MethodInvocation setConstant i simpleName simpleName Java MemberReference MethodInvocation get_proxy_class JAVA_UTILITIES MethodInvocation MemberReference get getRuntime clazz	1
MethodDeclaration Modifier buildDataFlowVars FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement public ReferenceType i ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement IR_Instr LiveVariablesProblem lvp Cast Variable v MethodInvocation && BinaryOperation BinaryOperation StatementExpression ReferenceType MemberReference i getResult != MemberReference Literal == MethodInvocation Literal MethodInvocation LiveVariablesProblem _prob v null lvp MemberReference getDFVar null lvp MemberReference addDFVar v v	1
MethodDeclaration Modifier ReferenceType parse FormalParameter FormalParameter ThrowStatement public Date ReferenceType source ReferenceType pos ClassCreator String ParsePosition ReferenceType UnsupportedOperationException	0
MethodDeclaration Modifier Annotation ReferenceType link FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration TryStatement ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType from ReferenceType to ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator IfStatement CatchClause MethodInvocation required Literal meta Literal ThreadContext IRubyObject IRubyObject IRubyObject Ruby runtime MethodInvocation RubyString fromStr MethodInvocation RubyString toStr MethodInvocation BinaryOperation BlockStatement CatchClauseParameter ThrowStatement runtime Literal newFixnum 2 true context getRuntime RubyString MemberReference stringValue RubyString MemberReference stringValue == MethodInvocation Literal ThrowStatement java.lang.UnsatisfiedLinkError ule MethodInvocation 0 from to runtime MethodInvocation getPosix - 1 MethodInvocation runtime Literal newNotImplementedError MethodInvocation MethodInvocation link runtime BinaryOperation newErrnoEEXISTError "link() function is unimplemented on this machine" fromStr getUnicodeValue toStr getUnicodeValue + BinaryOperation MemberReference + BinaryOperation Literal toStr + Literal MemberReference " or " "File exists - " fromStr	1
MethodDeclaration Modifier assignLocalVariable FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression private BasicType index ReferenceType value BasicType expr MethodInvocation MethodInvocation int CompilerCallback boolean value MemberReference call MemberReference MemberReference assignLocalVariable methodCompiler index expr	0
MethodDeclaration Modifier ReferenceType receiveLongObj FormalParameter ReturnStatement public Long ReferenceType l MethodInvocation Long vri MemberReference receiveLongObj l	0
MethodDeclaration Modifier ReferenceType singletonMethods FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement LocalVariableDeclaration IfStatement ReturnStatement public RubyArray ReferenceType context ReferenceType args BasicType asSymbols BasicType VariableDeclarator BinaryOperation BlockStatement ReferenceType VariableDeclarator MethodInvocation BlockStatement BlockStatement MemberReference ThreadContext IRubyObject boolean boolean all Literal == MemberReference Literal StatementExpression RubyArray singletonMethods MethodInvocation getMetaClass IfStatement IfStatement StatementExpression singletonMethods true args length 1 Assignment isSingleton MemberReference BlockStatement BlockStatement MemberReference BlockStatement Assignment MemberReference MemberReference = asSymbols StatementExpression StatementExpression all LocalVariableDeclaration WhileStatement MemberReference MethodInvocation = all ArraySelector MethodInvocation args Assignment Assignment ReferenceType VariableDeclarator BinaryOperation BlockStatement singletonMethods context MethodInvocation getRuntime Literal isTrue MemberReference MethodInvocation = MemberReference MethodInvocation = RubyClass superClass MethodInvocation || MethodInvocation MethodInvocation StatementExpression StatementExpression newEmptyArray 0 singletonMethods MethodInvocation getMetaClass singletonMethods MethodInvocation getMetaClass MethodInvocation getMetaClass superClass isSingleton superClass isIncluded MethodInvocation Assignment ArrayCreator instance_methods19 ArrayCreator instance_methods getSuperClass singletonMethods MethodInvocation concat MemberReference MethodInvocation = ReferenceType ArrayInitializer ReferenceType ArrayInitializer superClass ArrayCreator instance_methods superClass superClass getSuperClass IRubyObject MethodInvocation IRubyObject MethodInvocation ReferenceType ArrayInitializer context MethodInvocation getRuntime context MethodInvocation getRuntime IRubyObject MethodInvocation getFalse getFalse context MethodInvocation getRuntime getFalse	0
MethodDeclaration Modifier Annotation BasicType size StatementExpression ReturnStatement public Override int MethodInvocation SuperMethodInvocation expunge size	0
MethodDeclaration Modifier Annotation ReferenceType each_char19 FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject Modifier ReferenceType context Modifier ReferenceType block TernaryExpression name Literal frame Literal final ThreadContext final Block MethodInvocation MethodInvocation MethodInvocation "each_char" true block isGiven MemberReference MemberReference each_char MethodInvocation This Literal enumeratorize context block context getRuntime "each_char"	1
MethodDeclaration Modifier ReferenceType getMethodAnnotations IfStatement ReturnStatement public Map TypeArgument TypeArgument BinaryOperation ReturnStatement MemberReference ReferenceType ReferenceType == MemberReference Literal MemberReference methodAnnotations String Map TypeArgument TypeArgument methodAnnotations null Collections EMPTY_MAP ReferenceType ReferenceType Class Map TypeArgument TypeArgument ReferenceType ReferenceType String Object	1
MethodDeclaration Modifier Annotation ReferenceType constructors ReturnStatement public JRubyMethod RubyArray This MemberReference constructors	0
MethodDeclaration Modifier postBacktraceAndScope FormalParameter StatementExpression protected static final ReferenceType context MethodInvocation ThreadContext context postMethodBacktraceAndScope	1
MethodDeclaration Modifier BasicType bufferedRead IOException BadDescriptorException StatementExpression IfStatement ReturnStatement private int MethodInvocation MethodInvocation BlockStatement BinaryOperation ensureRead ! buffer hasRemaining LocalVariableDeclaration IfStatement & MethodInvocation Literal BasicType VariableDeclarator BinaryOperation BlockStatement IfStatement buffer get 0xFF int len MethodInvocation == MemberReference Literal StatementExpression ReturnStatement BinaryOperation BlockStatement refillBuffer len - 1 Assignment Literal == MemberReference Literal ReturnStatement MemberReference Literal = - 1 len 0 Literal eof true - 1	0
MethodDeclaration Modifier BasicType isConstant IfStatement ReturnStatement public boolean BinaryOperation BlockStatement Literal != MemberReference Literal ForStatement true _pieces null EnhancedForControl IfStatement VariableDeclaration MemberReference MethodInvocation ReturnStatement ReferenceType VariableDeclarator _pieces ! o isConstant Literal Operand o false	1
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter SwitchStatement public IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType args MemberReference SwitchStatementCase SwitchStatementCase SwitchStatementCase ThreadContext IRubyObject RubyModule String IRubyObject args length Literal ReturnStatement Literal ReturnStatement ReturnStatement 1 MethodInvocation 2 MethodInvocation MethodInvocation MemberReference MemberReference MemberReference MemberReference MemberReference call MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference call This MemberReference MemberReference MemberReference Literal Literal raiseArgumentError context self clazz name ArraySelector args context self clazz name ArraySelector args ArraySelector args context name args length 1 2 Literal Literal Literal 0 0 1	0
MethodDeclaration Modifier ReferenceType inflate FormalParameter FormalParameter IfStatement public IRubyObject ReferenceType context ReferenceType str BinaryOperation BlockStatement BlockStatement ThreadContext ByteList == Literal MemberReference ReturnStatement StatementExpression ReturnStatement null str MethodInvocation MethodInvocation MethodInvocation internalFinish MemberReference append MethodInvocation flushOutput str context getRuntime	0
MethodDeclaration Modifier BasicType bufferedRead FormalParameter FormalParameter IOException BadDescriptorException LocalVariableDeclaration StatementExpression LocalVariableDeclaration WhileStatement WhileStatement IfStatement ReturnStatement private int ReferenceType dst BasicType number BasicType VariableDeclarator Assignment BasicType VariableDeclarator BinaryOperation BlockStatement BinaryOperation BlockStatement BinaryOperation BlockStatement MemberReference ByteList int int bytesRead Literal MemberReference MethodInvocation += boolean done Literal >= BinaryOperation MemberReference LocalVariableDeclaration LocalVariableDeclaration IfStatement StatementExpression && MemberReference BinaryOperation LocalVariableDeclaration IfStatement LocalVariableDeclaration StatementExpression StatementExpression && BinaryOperation BinaryOperation IfStatement bytesRead 0 bytesRead MemberReference MemberReference copyBufferedBytes false - MemberReference MemberReference BUFSIZE Modifier BasicType VariableDeclarator Modifier BasicType VariableDeclarator BinaryOperation BlockStatement IfStatement Assignment ! done < MemberReference MemberReference BasicType VariableDeclarator BinaryOperation BlockStatement IfStatement Modifier BasicType VariableDeclarator MethodInvocation Assignment == MemberReference Literal != MemberReference Literal MemberReference BlockStatement dst number number bytesRead final int bytesToRead MethodInvocation final int n MethodInvocation == MemberReference Literal StatementExpression StatementExpression BreakStatement BinaryOperation BlockStatement MemberReference MemberReference += bytesRead number int read MethodInvocation == MemberReference Literal StatementExpression BreakStatement BinaryOperation BlockStatement final int len MethodInvocation dst MemberReference MemberReference append MemberReference MemberReference += bytesRead 0 number 0 eof ThrowStatement Math MemberReference BinaryOperation min descriptor MemberReference MemberReference read n - 1 Assignment Assignment == MemberReference Literal StatementExpression BreakStatement bytesRead n refillBuffer read - 1 Assignment == MemberReference Literal BreakStatement Math MethodInvocation BinaryOperation min buffer len bytesRead len ClassCreator BULK_READ_SIZE - MemberReference MemberReference bytesToRead dst MemberReference Literal = MemberReference Literal = n 0 Assignment MemberReference Literal = read 0 buffer remaining - MemberReference MemberReference ReferenceType number bytesRead eof true done true MemberReference Literal = eof true number bytesRead EOFException done true	1
MethodDeclaration Modifier reset StatementExpression StatementExpression public Assignment Assignment MemberReference Literal = MemberReference Literal = inSingleton 0 inDefinition false	0
MethodDeclaration Modifier ReferenceType toArray ReturnStatement public Object MethodInvocation map MethodInvocation keySet toArray	0
MethodDeclaration Modifier BasicType isFastLongMethod FormalParameter FormalParameter ForStatement ReturnStatement final boolean ReferenceType returnType ReferenceType parameterTypes ForControl BlockStatement BinaryOperation Type Type VariableDeclaration BinaryOperation MemberReference IfStatement && BinaryOperation MethodInvocation BasicType VariableDeclarator < MemberReference MemberReference ++ i MethodInvocation BlockStatement <= MemberReference Literal MemberReference isFastLongResult int i Literal i parameterTypes length ! MemberReference isFastLongParam ReturnStatement parameterTypes length 3 returnType 0 ArraySelector parameterTypes Literal MemberReference false i	1
MethodDeclaration Modifier marshal FormalParameter FormalParameter FormalParameter StatementExpression final public ReferenceType context ReferenceType buffer ReferenceType parameter MethodInvocation ThreadContext InvocationBuffer IRubyObject buffer MethodInvocation putByte Util MemberReference int8Value parameter	1
MethodDeclaration Modifier setEnvironment FormalParameter StatementExpression public ReferenceType newEnvironment Assignment Map MemberReference MemberReference = environment newEnvironment	0
MethodDeclaration Modifier Annotation Annotation ReferenceType magnitude FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair Override IRubyObject ReferenceType context MethodInvocation name Literal compat MemberReference ThreadContext MemberReference abs "magnitude" CompatVersion RUBY1_9 context	0
MethodDeclaration Modifier Annotation ReferenceType op_lt19 FormalParameter FormalParameter IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType other BinaryOperation ReturnStatement MethodInvocation name Literal compat MemberReference ThreadContext IRubyObject instanceof MemberReference ReferenceType MethodInvocation MemberReference MemberReference op_ltOther "<" CompatVersion RUBY1_9 other RubyFixnum RubyBoolean MethodInvocation BinaryOperation newBoolean context other context getRuntime < MemberReference Cast value ReferenceType MemberReference RubyFixnum other	1
MethodDeclaration Modifier BasicType nextReal LocalVariableDeclaration LocalVariableDeclaration ReturnStatement public double BasicType VariableDeclarator BasicType VariableDeclarator BinaryOperation int a BinaryOperation int b BinaryOperation * BinaryOperation BinaryOperation >>> MethodInvocation Literal >>> MethodInvocation Literal + BinaryOperation MemberReference / Literal Literal nextInt32 5 nextInt32 6 * MemberReference Literal b 1.0 9007199254740992.0 a 67108864.0	0
MethodDeclaration Modifier ReferenceType getCallSite5 ReturnStatement final public CallSite MemberReference runtimeCache ArraySelector callSites Literal 5	0
MethodDeclaration Modifier setUntrusted FormalParameter IfStatement public BasicType untrusted MemberReference BlockStatement BlockStatement boolean untrusted StatementExpression StatementExpression Assignment Assignment MemberReference MemberReference |= MemberReference MemberReference &= flags UNTRUSTED_F flags ~ UNTRUSTED_F	0
MethodDeclaration Modifier emitDEF_CLS_METH FormalParameter LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression public ReferenceType instr ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation DEFINE_CLASS_METHOD_Instr IR_Method irMethod MemberReference GeneratorAdapter adapter ClassCreator adapter returnValue adapter endMethod instr _method ReferenceType BinaryOperation MethodInvocation Literal Literal MethodInvocation GeneratorAdapter | MemberReference MemberReference Method BinaryOperation getMethod null null cls ACC_PUBLIC ACC_STATIC + BinaryOperation Literal + Literal MemberReference " ()" "void " irMethod _name	1
MethodDeclaration Modifier ReferenceType invoke FormalParameter ThrowStatement public Object ReferenceType receiver MethodInvocation Object fail	0
MethodDeclaration Modifier ReferenceType getCWD FormalParameter TryStatement private static String ReferenceType runtime ReturnStatement CatchClause Ruby ClassCreator CatchClauseParameter ReturnStatement MethodInvocation ReferenceType MethodInvocation Exception e MethodInvocation getCanonicalPath org ReferenceType runtime getCurrentDirectory runtime getCurrentDirectory jruby ReferenceType util ReferenceType NormalizedFile	1
MethodDeclaration Modifier ReferenceType new_super FormalParameter FormalParameter IfStatement ReturnStatement public Node ReferenceType args ReferenceType operation BinaryOperation BlockStatement ClassCreator Node Token && BinaryOperation BinaryOperation ReturnStatement ReferenceType MethodInvocation MemberReference != MemberReference Literal instanceof MemberReference ReferenceType ClassCreator SuperNode operation getPosition args args null args BlockPassNode ReferenceType MethodInvocation Cast MemberReference SuperNode MemberReference MemberReference position ReferenceType MemberReference args operation args BlockPassNode args	1
MethodDeclaration Modifier ReferenceType cacheAndCall FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement StatementExpression StatementExpression ReturnStatement protected IRubyObject ReferenceType caller ReferenceType selfType ReferenceType context ReferenceType self ReferenceType name ReferenceType arg1 ReferenceType arg2 ReferenceType arg3 ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation BlockStatement Assignment Assignment MethodInvocation IRubyObject RubyClass ThreadContext IRubyObject String IRubyObject IRubyObject IRubyObject CacheEntry entry TernaryExpression DynamicMethod method MemberReference MemberReference MemberReference methodMissing ReturnStatement MemberReference MemberReference = MemberReference MemberReference = method MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference call BinaryOperation MethodInvocation MemberReference entry method method caller MethodInvocation lastName name cache entry context self selfType name arg1 arg2 arg3 != MemberReference Literal selfType MemberReference searchWithCache CacheEntry NULL_CACHE MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference callMethodMissing selfType null name context self name method arg1 arg2 arg3	1
MethodDeclaration Modifier BasicType isGlobalAbortOnExceptionEnabled ReturnStatement public boolean MemberReference globalAbortOnExceptionEnabled	0
MethodDeclaration Modifier marshalTo FormalParameter FormalParameter FormalParameter FormalParameter IOException LocalVariableDeclaration StatementExpression LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression public ReferenceType runtime ReferenceType obj ReferenceType type ReferenceType marshalStream ReferenceType VariableDeclarator MethodInvocation ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation Ruby Object RubyClass MarshalStream RubyRange range Cast marshalStream MemberReference registerLinkTarget List TypeArgument attrs MethodInvocation attrs ClassCreator add attrs ClassCreator add attrs ClassCreator add marshalStream MemberReference dumpVariables ReferenceType MemberReference range ReferenceType range getVariableList ReferenceType Literal MemberReference ReferenceType Literal MemberReference ReferenceType Literal TernaryExpression attrs RubyRange obj Variable TypeArgument VariableEntry TypeArgument "begin" range begin VariableEntry TypeArgument "end" range end VariableEntry TypeArgument "excl" MemberReference MethodInvocation MethodInvocation ReferenceType ReferenceType ReferenceType ReferenceType range isExclusive runtime getTrue runtime getFalse Object Object Object Object	0
MethodDeclaration Modifier ReferenceType getParameterTypes ReturnStatement public Class TypeArgument MemberReference ? parameterTypes	0
MethodDeclaration Modifier ReferenceType getDefiningModule ReturnStatement public IR_Module TernaryExpression BinaryOperation Cast Literal instanceof MemberReference ReferenceType ReferenceType Cast null _parent MetaObject IR_Module ReferenceType MemberReference MetaObject _parent	1
MethodDeclaration Modifier expandParentsIfNecessary LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression private BasicType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation Assignment int newSize BinaryOperation RubyModule newParentStack ArrayCreator System MemberReference Literal MemberReference Literal MemberReference arraycopy MemberReference MemberReference = * MemberReference Literal ReferenceType MemberReference parentStack 0 newParentStack 0 parentStack length parentStack newParentStack parentStack length 2 RubyModule newSize	0
MethodDeclaration Modifier ReferenceType get FormalParameter FormalParameter FormalParameter ReturnStatement final public IRubyObject ReferenceType runtime ReferenceType io BasicType offset MethodInvocation Ruby MemoryIO long Util MemberReference MethodInvocation newSigned64 runtime io MemberReference getLong offset	1
MethodDeclaration Modifier BasicType waitReadable FormalParameter IOException LocalVariableDeclaration IfStatement LocalVariableDeclaration LocalVariableDeclaration SynchronizedStatement protected boolean ReferenceType descriptor ReferenceType VariableDeclarator BinaryOperation BlockStatement ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation LocalVariableDeclaration TryStatement ChannelDescriptor Channel channel MethodInvocation || BinaryOperation BinaryOperation ReturnStatement SelectableChannel selectable Cast Selector selector Literal selectable blockingLock BasicType VariableDeclarator StatementExpression StatementExpression LocalVariableDeclaration LocalVariableDeclaration IfStatement WhileStatement ForStatement ReturnStatement IfStatement StatementExpression descriptor getChannel == MemberReference Literal instanceof MemberReference ReferenceType Literal ReferenceType MemberReference null boolean oldBlocking MethodInvocation Assignment MethodInvocation BasicType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement BinaryOperation Statement ForControl BlockStatement Literal BinaryOperation BlockStatement MethodInvocation channel null channel SelectableChannel false SelectableChannel channel selectable isBlocking MemberReference MethodInvocation = selectable Literal configureBlocking int real_ops BinaryOperation SelectionKey key MethodInvocation == MemberReference Literal StatementExpression StatementExpression == MethodInvocation Literal VariableDeclaration MethodInvocation LocalVariableDeclaration IfStatement false != MemberReference Literal TryStatement selectable MemberReference configureBlocking selector Selector open false & MethodInvocation BinaryOperation selectable MemberReference keyFor key null MethodInvocation MethodInvocation selector select 0 ReferenceType VariableDeclarator i hasNext ReferenceType VariableDeclarator BinaryOperation BlockStatement selector null StatementExpression CatchClause oldBlocking selectable validOps | MemberReference MemberReference selector selectable MemberReference MemberReference MemberReference register key BinaryOperation interestOps Iterator i MethodInvocation SelectionKey skey Cast != BinaryOperation Literal IfStatement MethodInvocation CatchClauseParameter SelectionKey OP_READ SelectionKey OP_ACCEPT selector real_ops descriptor | MethodInvocation MemberReference selector MethodInvocation selectedKeys ReferenceType MethodInvocation & BinaryOperation BinaryOperation 0 BinaryOperation BlockStatement selector close Exception e key interestOps real_ops iterator SelectionKey i next & MethodInvocation MethodInvocation | MemberReference MemberReference == MethodInvocation MemberReference ReturnStatement skey interestOps skey readyOps SelectionKey OP_READ SelectionKey OP_ACCEPT skey attachment descriptor Literal true	1
MethodDeclaration Modifier ReferenceType getMethodSignature FormalParameter SwitchStatement static public String BasicType args MemberReference SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase int args Literal ReturnStatement Literal ReturnStatement Literal ReturnStatement Literal ReturnStatement Literal ReturnStatement ThrowStatement 0 MethodInvocation 1 MethodInvocation 2 MethodInvocation 3 MethodInvocation 4 MethodInvocation ClassCreator ClassReference ClassReference ClassReference ClassReference sig ClassReference ClassReference ClassReference ClassReference ClassReference sig ClassReference ClassReference ClassReference ClassReference ClassReference ClassReference sig ClassReference ClassReference ClassReference ClassReference ClassReference ClassReference ClassReference sig ClassReference ClassReference ClassReference ClassReference ClassReference sig ReferenceType BinaryOperation ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType RuntimeException + Literal MemberReference IRubyObject ThreadContext IRubyObject Block IRubyObject ThreadContext IRubyObject IRubyObject Block IRubyObject ThreadContext IRubyObject IRubyObject IRubyObject Block IRubyObject ThreadContext IRubyObject IRubyObject IRubyObject IRubyObject Block IRubyObject ThreadContext IRubyObject IRubyObject Block "unsupported arity: " args	1
MethodDeclaration Modifier ReferenceType integerFib FormalParameter IfStatement static public Integer ReferenceType n BinaryOperation BlockStatement BlockStatement Integer < MethodInvocation MethodInvocation ReturnStatement ReturnStatement n intValue TWO intValue MemberReference BinaryOperation n + MethodInvocation MethodInvocation MethodInvocation integerFib MethodInvocation integerFib Integer BinaryOperation valueOf Integer BinaryOperation valueOf - MethodInvocation MethodInvocation - MethodInvocation MethodInvocation n intValue TWO intValue n intValue ONE intValue	0
MethodDeclaration Modifier ReferenceType newRange FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression ReturnStatement static public RubyRange ReferenceType runtime ReferenceType context ReferenceType begin ReferenceType end BasicType isExclusive ReferenceType VariableDeclarator MethodInvocation MemberReference Ruby ThreadContext IRubyObject IRubyObject boolean RubyRange range ClassCreator range MemberReference MemberReference MemberReference MemberReference init range ReferenceType MemberReference MethodInvocation context begin end isExclusive RubyRange runtime runtime getRange	0
MethodDeclaration Modifier ReferenceType case201_line806 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support Cast Literal Cast MethodInvocation getOperatorCallNode ReferenceType MemberReference "<=" ReferenceType MemberReference getPosition Node ArraySelector yyVals Node ArraySelector yyVals BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference - 2 yyTop 0 yyTop	1
MethodDeclaration Modifier Annotation BasicType hashCode LocalVariableDeclaration StatementExpression ReturnStatement public Override int BasicType VariableDeclarator Assignment MemberReference int result MemberReference MemberReference BinaryOperation = result a result + BinaryOperation MemberReference * Literal MemberReference b 31 result	0
MethodDeclaration Modifier Annotation ReferenceType current FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv MethodInvocation compat MemberReference meta Literal ThreadContext IRubyObject context MethodInvocation MethodInvocation getRuntime CompatVersion RUBY1_9 true getCurrentContext getFiber	0
MethodDeclaration Modifier computeDataFlowInfo FormalParameter FormalParameter StatementExpression LocalVariableDeclaration StatementExpression IfStatement StatementExpression LocalVariableDeclaration IfStatement public ReferenceType workList ReferenceType bbSet MethodInvocation ReferenceType VariableDeclarator MethodInvocation BinaryOperation BlockStatement IfStatement MethodInvocation BasicType VariableDeclarator MemberReference BlockStatement List TypeArgument BitSet bbSet MethodInvocation clear List TypeArgument dsts ClassCreator initSolnForNode == MethodInvocation MemberReference ForStatement ForStatement BinaryOperation BlockStatement BlockStatement finalizeSolnForNode boolean changed MethodInvocation changed ForStatement ReferenceType _bb getID ReferenceType ReferenceType _prob getFlowDirection DataFlowProblem.DF_Direction FORWARD EnhancedForControl StatementExpression EnhancedForControl StatementExpression == MethodInvocation MemberReference ForStatement ForStatement ThrowStatement applyTransferFunction EnhancedForControl BlockStatement FlowGraphNode BasicBlock ArrayList TypeArgument VariableDeclaration MethodInvocation MethodInvocation VariableDeclaration MethodInvocation MethodInvocation _prob getFlowDirection DataFlowProblem.DF_Direction BACKWARD EnhancedForControl StatementExpression EnhancedForControl StatementExpression ClassCreator VariableDeclaration MemberReference LocalVariableDeclaration IfStatement ReferenceType ReferenceType VariableDeclarator _prob MemberReference incomingEdgesOf MemberReference MethodInvocation compute_MEET ReferenceType VariableDeclarator _prob MemberReference outgoingEdgesOf dsts MemberReference add VariableDeclaration MethodInvocation MethodInvocation VariableDeclaration MethodInvocation MethodInvocation ReferenceType Literal ReferenceType VariableDeclarator dsts BasicType VariableDeclarator BinaryOperation BlockStatement BasicBlock CFG_Edge e _bb e _prob MemberReference getFlowGraphNode CFG_Edge e _bb e _dst ReferenceType VariableDeclarator _prob MemberReference outgoingEdgesOf MemberReference MethodInvocation compute_MEET ReferenceType VariableDeclarator _prob MemberReference incomingEdgesOf dsts MemberReference add RuntimeException "Bidirectional data flow computation not implemented yet!" BasicBlock d int id MethodInvocation == MethodInvocation Literal StatementExpression StatementExpression e _src CFG_Edge e _bb e _prob MemberReference getFlowGraphNode CFG_Edge e _bb e _src d getID bbSet MemberReference get false MethodInvocation MethodInvocation e _dst id bbSet MemberReference set workList MethodInvocation add id _prob MemberReference getFlowGraphNode d	1
MethodDeclaration Modifier ReferenceType newNameError FormalParameter FormalParameter FormalParameter FormalParameter IfStatement ReturnStatement public RaiseException ReferenceType message ReferenceType name ReferenceType origException BasicType printWhenVerbose BinaryOperation BlockStatement ClassCreator String String Throwable boolean && BinaryOperation This StatementExpression ReferenceType ClassCreator Literal && MemberReference BinaryOperation MethodInvocation MethodInvocation RaiseException ReferenceType This MethodInvocation MemberReference MemberReference true printWhenVerbose != MemberReference Literal isVerbose origException MethodInvocation printStackTrace RubyNameError getNameError message name origException null getErrorStream	0
MethodDeclaration Modifier BasicType num2long FormalParameter IfStatement static public long ReferenceType arg BinaryOperation BlockStatement BlockStatement IRubyObject instanceof MemberReference ReferenceType ReturnStatement ReturnStatement arg RubyFixnum Cast MethodInvocation ReferenceType MemberReference MemberReference other2long RubyFixnum arg arg	0
MethodDeclaration Modifier BasicType allowBuiltin FormalParameter StatementExpression ReturnStatement public boolean ReferenceType name MethodInvocation Literal String System.err BinaryOperation println true + BinaryOperation Literal + Literal MemberReference ")" "allowBuiltin(" name	1
MethodDeclaration Modifier ReferenceType makeShared ReturnStatement private RubyArray MethodInvocation MemberReference MemberReference MethodInvocation makeShared begin realLength getMetaClass	0
MethodDeclaration Modifier Annotation ReferenceType ceil ReturnStatement public JRubyMethod ElementValuePair IRubyObject MethodInvocation name Literal MethodInvocation convertToFloat "ceil" ceil	0
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType block MethodInvocation ThreadContext IRubyObject RubyModule String Block MemberReference MemberReference MemberReference MemberReference MemberReference call context self clazz name IRubyObject NULL_ARRAY	0
MethodDeclaration Modifier ReferenceType castJavaProxy FormalParameter IfStatement LocalVariableDeclaration ReturnStatement static JavaProxy ReferenceType self BinaryOperation BlockStatement ReferenceType VariableDeclarator MemberReference IRubyObject instanceof MemberReference ReferenceType ThrowStatement JavaProxy proxy Cast proxy self JavaProxy MethodInvocation ReferenceType MemberReference self MethodInvocation getRuntime JavaProxy self Literal newTypeError "Java methods can only be invoked on Java objects"	1
MethodDeclaration Modifier ReferenceType getReceiverNode ReturnStatement public Node MemberReference receiverNode	0
MethodDeclaration Modifier BasicType shouldJIT SwitchStatement ReturnStatement public boolean This SwitchStatementCase Literal JIT FORCE ReturnStatement false Literal true	1
MethodDeclaration Modifier Annotation ReferenceType mkdir FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration StatementExpression ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType recv ReferenceType args ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation name Literal required Literal optional Literal meta Literal compat MemberReference IRubyObject IRubyObject Ruby runtime MethodInvocation RubyString stringArg MemberReference runtime MemberReference checkSafeString MemberReference MethodInvocation MemberReference mkdirCommon "mkdir" 1 1 true CompatVersion RUBY1_8 recv getRuntime ArraySelector MethodInvocation args stringArg runtime stringArg getUnicodeValue args Literal convertToString 0	0
MethodDeclaration Modifier Annotation ReferenceType setrlimit FormalParameter FormalParameter ThrowStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType recv ReferenceType args MethodInvocation name Literal rest Literal module Literal visibility MemberReference IRubyObject IRubyObject recv MethodInvocation getRuntime "setrlimit" true true Visibility PRIVATE Literal newNotImplementedError "Process#setrlimit not yet implemented"	0
MethodDeclaration Modifier putMemoryIO FormalParameter FormalParameter ThrowStatement final public BasicType offset ReferenceType value MethodInvocation long MemoryIO ex	0
MethodDeclaration Modifier Annotation ReferenceType false_and FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair IRubyObject ReferenceType f ReferenceType oth MemberReference name Literal IRubyObject IRubyObject f "&"	1
MethodDeclaration Modifier ReferenceType convertJavaToUsableRubyObject FormalParameter FormalParameter LocalVariableDeclaration IfStatement LocalVariableDeclaration IfStatement ReturnStatement static public IRubyObject ReferenceType runtime ReferenceType object ReferenceType VariableDeclarator BinaryOperation ReturnStatement ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation Ruby Object IRubyObject result MethodInvocation != MemberReference Literal MemberReference JavaConverter converter MethodInvocation || BinaryOperation BinaryOperation ReturnStatement converter MemberReference MemberReference convert MemberReference MemberReference trySimpleConversions result null result MethodInvocation getJavaConverter == MemberReference Literal == MemberReference MemberReference MethodInvocation runtime object runtime object object getClass converter null converter JAVA_DEFAULT_CONVERTER Java MemberReference MemberReference getInstance runtime object	1
MethodDeclaration Modifier BasicType receiveChar FormalParameter ReturnStatement public char BasicType c MethodInvocation char vri MemberReference receiveChar c	0
MethodDeclaration Modifier Annotation ReferenceType toString IfStatement public Override String MethodInvocation BlockStatement BlockStatement isFixed ReturnStatement ReturnStatement BinaryOperation Literal + Literal MethodInvocation "Opt" "Fixed" required	0
MethodDeclaration Modifier prepare FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement IfStatement public ReferenceType context ReferenceType runtime ReferenceType self ReferenceType arg0 ReferenceType arg1 ReferenceType block ReferenceType VariableDeclarator MemberReference BlockStatement BlockStatement BinaryOperation StatementExpression ThreadContext Ruby IRubyObject IRubyObject IRubyObject Block DynamicScope scope MethodInvocation isSimple StatementExpression StatementExpression != MethodInvocation Literal MethodInvocation context getCurrentScope MethodInvocation MethodInvocation getBlock null MemberReference MemberReference MemberReference processBlockArg scope MemberReference MemberReference setArgValues MemberReference MemberReference MemberReference ArrayCreator MemberReference prepare scope runtime block arg0 arg1 context runtime self ReferenceType ArrayInitializer block IRubyObject MemberReference MemberReference arg0 arg1	1
MethodDeclaration Modifier protect FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression LocalVariableDeclaration StatementExpression LocalVariableDeclaration StatementExpression TryStatement StatementExpression StatementExpression StatementExpression IfStatement StatementExpression public ReferenceType regularCode ReferenceType protectedCode ReferenceType ret ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator BasicType VariableDeclarator Assignment ReferenceType VariableDeclarator Assignment BasicType VariableDeclarator Assignment StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression MethodInvocation MethodInvocation MethodInvocation BinaryOperation BlockStatement BlockStatement MethodInvocation BranchCallback BranchCallback Class String mname MethodInvocation SkinnyMethodAdapter mv ClassCreator SkinnyMethodAdapter old_method Literal SkinnyMethodAdapter var_old_method Literal SkinnyMethodAdapter inv_old_method Literal boolean oldInNestedMethod MemberReference MemberReference Literal = Label oldLoopLabels MemberReference MemberReference Literal = int oldArgCount MemberReference MemberReference Literal = Assignment Assignment Assignment Assignment MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation Assignment MethodInvocation MethodInvocation Assignment Assignment Assignment method MemberReference aload loadThreadContext loadSelf instanceof This ReferenceType StatementExpression StatementExpression method MethodInvocation MemberReference MethodInvocation invokestatic getNewEnsureName ReferenceType MethodInvocation null null null inNestedMethod inNestedMethod true currentLoopLabels currentLoopLabels null argParamCount argParamCount 0 MemberReference This = MemberReference MethodInvocation = MemberReference MethodInvocation = This MemberReference = MethodInvocation getVariableCompiler MethodInvocation getInvocationCompiler mv visitCode mv MemberReference aload mv dup mv MethodInvocation Literal MethodInvocation invokevirtual mv dup mv MethodInvocation astore mv MethodInvocation Literal MethodInvocation invokevirtual mv MethodInvocation astore mv MethodInvocation Literal MethodInvocation invokevirtual mv dup mv MethodInvocation astore mv MethodInvocation Literal MethodInvocation invokevirtual mv MethodInvocation astore Label codeBegin ClassCreator Label codeEnd ClassCreator Label ensureBegin ClassCreator Label ensureEnd ClassCreator method MemberReference label regularCode This branch method MemberReference label protectedCode This branch mv areturn method MemberReference label method MethodInvocation astore method MemberReference label protectedCode This branch method MethodInvocation aload method athrow method MemberReference MemberReference MemberReference Literal trycatch method MemberReference MemberReference MemberReference Literal trycatch mv Literal Literal visitMaxs mv visitEnd This MemberReference = MethodInvocation getVariableCompiler MethodInvocation getInvocationCompiler MemberReference MemberReference = MemberReference MemberReference = MemberReference MemberReference = StandardASMCompiler THIS ChildScopedBodyCompiler MethodInvocation MethodInvocation script getClassname mname MemberReference BinaryOperation ClassReference ClassReference ClassReference sig SkinnyMethodAdapter script MethodInvocation getClassVisitor old_method MemberReference var_old_method MethodInvocation getVariableCompiler inv_old_method MethodInvocation getInvocationCompiler MemberReference mv MemberReference setMethodAdapter MemberReference setMethodAdapter StandardASMCompiler THREADCONTEXT_INDEX ClassReference p "getRuntime" ClassReference sig getRuntimeIndex ClassReference p "getNil" ClassReference sig getNilIndex ClassReference p "getCurrentScope" ClassReference sig getDynamicScopeIndex ClassReference p "getValues" ClassReference sig getVarsArrayIndex ReferenceType ReferenceType ReferenceType ReferenceType codeBegin codeEnd ensureBegin getExceptionIndex ensureEnd getExceptionIndex codeBegin codeEnd ensureBegin null ensureBegin ensureEnd ensureBegin null 1 1 MemberReference old_method MemberReference setMethodAdapter MemberReference setMethodAdapter inNestedMethod oldInNestedMethod currentLoopLabels oldLoopLabels argParamCount oldArgCount pushNull loadBlock ret + BinaryOperation Literal ReferenceType ReferenceType ReferenceType BinaryOperation MemberReference MethodInvocation Literal Literal visitMethod method getMethodAdapter getMethodAdapter method mv mv ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType Label Label Label Label method var_old_method inv_old_method + Literal MethodInvocation ";" ThreadContext IRubyObject Block | BinaryOperation MemberReference mname MemberReference BinaryOperation ClassReference ClassReference ClassReference sig null null ThreadContext Ruby Ruby IRubyObject ThreadContext DynamicScope DynamicScope IRubyObject "L" script getClassname | MemberReference MemberReference ACC_STATIC ret + BinaryOperation Literal ReferenceType ReferenceType ReferenceType ACC_PUBLIC ACC_SYNTHETIC + Literal MethodInvocation ";" ThreadContext IRubyObject Block "L" script getClassname	1
MethodDeclaration Modifier ReferenceType objAsString FormalParameter FormalParameter IfStatement LocalVariableDeclaration IfStatement IfStatement ReturnStatement static public RubyString ReferenceType context ReferenceType obj BinaryOperation ReturnStatement ReferenceType VariableDeclarator BinaryOperation ReturnStatement MethodInvocation StatementExpression Cast ThreadContext IRubyObject instanceof MemberReference ReferenceType Cast IRubyObject str MethodInvocation instanceof MemberReference ReferenceType Cast obj isTaint MethodInvocation ReferenceType MemberReference obj RubyString ReferenceType MemberReference obj MemberReference Literal callMethod str RubyString ReferenceType MethodInvocation str Literal setTaint RubyString str RubyString obj context "to_s" RubyString obj anyToString true	1
MethodDeclaration Modifier ReferenceType getMethod1 FormalParameter FormalParameter FormalParameter ReturnStatement protected DynamicMethod ReferenceType context ReferenceType self ReferenceType methodName MethodInvocation ThreadContext IRubyObject String runtimeCache MemberReference MemberReference Literal MemberReference getMethod context self 1 methodName	0
MethodDeclaration Modifier ReferenceType convertToArray FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType runtime ReferenceType value MethodInvocation Ruby IRubyObject ArgsUtil MemberReference MemberReference Literal convertToRubyArray runtime value true	0
MethodDeclaration Modifier ReferenceType case17_line354 FormalParameter FormalParameter FormalParameter IfStatement ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop BinaryOperation BlockStatement BlockStatement MemberReference Object Object int && BinaryOperation BinaryOperation StatementExpression StatementExpression yyVal != Cast Literal instanceof Cast ReferenceType Assignment Assignment ReferenceType MemberReference null ReferenceType MemberReference BeginNode MemberReference ClassCreator = MemberReference ClassCreator = Node ArraySelector yyVals Node ArraySelector yyVals yyVal ReferenceType MethodInvocation MethodInvocation Cast Literal yyVal ReferenceType MethodInvocation MethodInvocation Cast Literal BinaryOperation BinaryOperation WhileNode Cast getPosition support Cast getConditionNode ReferenceType MemberReference false WhileNode Cast getPosition support Cast getConditionNode ReferenceType MemberReference true + Literal MemberReference + Literal MemberReference ReferenceType MemberReference ReferenceType MemberReference BeginNode ArraySelector yyVals ReferenceType MemberReference ReferenceType MemberReference Node ArraySelector yyVals - 2 yyTop - 2 yyTop Node ArraySelector yyVals Node ArraySelector yyVals BinaryOperation Node ArraySelector yyVals Node ArraySelector yyVals BinaryOperation BinaryOperation BinaryOperation + Literal MemberReference BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference + Literal MemberReference - 2 yyTop + Literal MemberReference + Literal MemberReference - 2 yyTop - 2 yyTop 0 yyTop - 2 yyTop 0 yyTop	1
MethodDeclaration Modifier Annotation ReferenceType binmode IfStatement ReturnStatement public JRubyMethod ElementValuePair IRubyObject MethodInvocation BlockStatement This name Literal isClosed ThrowStatement "binmode" MethodInvocation MethodInvocation getRuntime Literal newIOError "closed stream"	0
MethodDeclaration Modifier ReferenceType case393_line1489 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference Literal = yyVal yyVal null	1
MethodDeclaration Modifier BasicType identifier FormalParameter FormalParameter IOException IfStatement StatementExpression LocalVariableDeclaration StatementExpression LocalVariableDeclaration IfStatement LocalVariableDeclaration LocalVariableDeclaration IfStatement LocalVariableDeclaration IfStatement IfStatement IfStatement ReturnStatement private int BasicType c BasicType commandState MethodInvocation BlockStatement MethodInvocation BasicType VariableDeclarator Assignment BasicType VariableDeclarator BinaryOperation BlockStatement BlockStatement BasicType VariableDeclarator ReferenceType VariableDeclarator MemberReference BlockStatement BlockStatement ReferenceType VariableDeclarator BinaryOperation BlockStatement BinaryOperation BlockStatement BinaryOperation BlockStatement BlockStatement MethodInvocation int boolean ! MemberReference isIdentifierChar LocalVariableDeclaration ThrowStatement tokenBuffer Literal setLength int first MemberReference MemberReference MethodInvocation = boolean lastBangOrPredicate Literal || BinaryOperation BinaryOperation IfStatement StatementExpression int result Literal LexState last_state MemberReference lastBangOrPredicate StatementExpression IfStatement IfStatement String tempVal MethodInvocation && MemberReference BinaryOperation LocalVariableDeclaration IfStatement StatementExpression != MemberReference MemberReference LocalVariableDeclaration IfStatement || BinaryOperation MethodInvocation StatementExpression StatementExpression MemberReference MemberReference MemberReference identifierToken c ReferenceType VariableDeclarator ClassCreator 0 c c MemberReference getIdentifier false == MemberReference Literal == MemberReference Literal MethodInvocation BlockStatement BlockStatement MethodInvocation 0 lex_state Assignment BinaryOperation BlockStatement BinaryOperation BlockStatement BlockStatement tokenBuffer MethodInvocation toString ! isOneEight || BinaryOperation BinaryOperation BasicType VariableDeclarator BinaryOperation BlockStatement MethodInvocation lex_state LexState EXPR_DOT ReferenceType VariableDeclarator BinaryOperation BlockStatement || MethodInvocation BinaryOperation isARG Assignment Assignment last_state result tempVal String badChar BinaryOperation ReferenceType MemberReference MethodInvocation BinaryOperation MemberReference c c '!' c '?' ! src Literal peek StatementExpression StatementExpression StatementExpression src MemberReference unread MemberReference MemberReference = == MemberReference MemberReference IfStatement && BinaryOperation MethodInvocation StatementExpression StatementExpression intern || BinaryOperation BinaryOperation == MemberReference MemberReference int c2 MethodInvocation && BinaryOperation MethodInvocation StatementExpression StatementExpression StatementExpression StatementExpression ReturnStatement src MemberReference unread Keyword keyword MethodInvocation && BinaryOperation BinaryOperation LocalVariableDeclaration StatementExpression IfStatement IfStatement IfStatement ReturnStatement isBEG == MemberReference MemberReference MemberReference TernaryExpression = MemberReference MemberReference = + Literal MethodInvocation SyntaxException PID CHARACTER_BAD getPosition + BinaryOperation Literal badChar '=' Assignment MethodInvocation MethodInvocation c result Tokens tFID lex_state LexState EXPR_FNAME BinaryOperation BlockStatement BlockStatement == MemberReference Literal Character MemberReference isUpperCase Assignment Assignment && BinaryOperation MemberReference == MemberReference MemberReference lex_state LexState EXPR_CMDARG src read == MemberReference Literal ! src Literal peek MethodInvocation Assignment MethodInvocation Assignment MemberReference c2 MemberReference getKeyword != MemberReference Literal || BinaryOperation MemberReference ReferenceType VariableDeclarator Assignment BinaryOperation BlockStatement BlockStatement BinaryOperation ReturnStatement BinaryOperation StatementExpression MemberReference lex_state LexState EXPR_DOT lex_state MemberReference MemberReference MemberReference lex_state LexState EXPR_END "\\" Integer BinaryOperation toOctalString + BinaryOperation Cast "') in expression" MemberReference Literal = tokenBuffer Cast append src MemberReference unread == Assignment Literal LocalVariableDeclaration IfStatement StatementExpression result 0 first MemberReference MemberReference = MemberReference MemberReference = == MemberReference MemberReference ! commandState lex_state LexState EXPR_ARG c2 ':' ':' src MemberReference unread MemberReference MemberReference = src read MemberReference ClassCreator = Tokens tLABEL tempVal keyword null != MemberReference MemberReference ! isOneEight LexState state MemberReference MemberReference MemberReference = == MemberReference MemberReference StatementExpression StatementExpression IfStatement || BinaryOperation BinaryOperation MemberReference != MemberReference MemberReference Assignment keyword id1 commandState LexState EXPR_CMDARG LexState EXPR_ARG & MemberReference Literal + BinaryOperation Literal BasicType MemberReference lastBangOrPredicate true BasicType MemberReference c MemberReference MethodInvocation = '=' BasicType VariableDeclarator BinaryOperation BlockStatement BlockStatement MethodInvocation result Tokens tCONSTANT result Tokens tIDENTIFIER lex_state LexState EXPR_BEG c2 lex_state LexState EXPR_BEG yaccValue ReferenceType MemberReference MethodInvocation keyword Keyword __ENCODING__ lex_state lex_state keyword state state LexState EXPR_FNAME Assignment Assignment BinaryOperation BlockStatement == MemberReference MemberReference && MemberReference BinaryOperation keyword id0 keyword id0 keyword id1 MemberReference MemberReference = c 0xff + Literal MemberReference "' ('" char c char c c src read int c2 MethodInvocation && BinaryOperation BinaryOperation StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression src MemberReference unread Token tempVal getPosition MemberReference ClassCreator = MemberReference ClassCreator = == MemberReference MemberReference StatementExpression IfStatement IfStatement IfStatement IfStatement ReturnStatement state LexState EXPR_BEG ! isOneEight == MemberReference MemberReference lex_state LexState EXPR_BEG "Invalid char `" badChar src read && BinaryOperation BinaryOperation || BinaryOperation BinaryOperation Assignment MethodInvocation MethodInvocation MethodInvocation MethodInvocation c yaccValue ReferenceType MemberReference MethodInvocation yaccValue ReferenceType MemberReference MethodInvocation keyword id0 Tokens kDO Assignment BinaryOperation BlockStatement MethodInvocation ReturnStatement BinaryOperation BlockStatement BinaryOperation ReturnStatement MemberReference state LexState EXPR_VALUE != MemberReference Literal != MemberReference Literal != MemberReference Literal && BinaryOperation MethodInvocation MemberReference MemberReference = tokenBuffer Cast append src MemberReference unread src MemberReference unread src MemberReference unread Token keyword name getPosition Token tempVal getPosition MemberReference Literal = && BinaryOperation BinaryOperation StatementExpression StatementExpression ReturnStatement conditionState isInState MemberReference && BinaryOperation MethodInvocation ReturnStatement || BinaryOperation BinaryOperation MemberReference Tokens kDO c2 '~' c2 '>' c2 '=' == MemberReference Literal src Literal peek result Tokens tIDENTIFIER BasicType MemberReference c2 c2 c commandStart true && MemberReference BinaryOperation == MemberReference MemberReference Assignment MemberReference MemberReference Tokens kDO_COND != MemberReference MemberReference cmdArgumentState isInState MemberReference == MemberReference MemberReference && MemberReference BinaryOperation Tokens kDO_BLOCK c2 '\n' '>' char c ! isOneEight > MemberReference Literal leftParenBegin parenNest MemberReference Literal = -- parenNest Tokens kDO_LAMBDA state LexState EXPR_CMDARG Tokens kDO_BLOCK state LexState EXPR_ENDARG ! isOneEight == MemberReference MemberReference leftParenBegin 0 leftParenBegin 0 state LexState EXPR_BEG	1
MethodDeclaration Modifier generateConstructors FormalParameter FormalParameter FormalParameter LocalVariableDeclaration ForStatement private static ReferenceType superClass ReferenceType selfType ReferenceType cw ReferenceType VariableDeclarator ForControl BlockStatement Class Type ClassVisitor Constructor cons MethodInvocation VariableDeclaration BinaryOperation MemberReference LocalVariableDeclaration StatementExpression superClass getDeclaredConstructors BasicType VariableDeclarator < MemberReference MemberReference ++ i ReferenceType VariableDeclarator MethodInvocation int i Literal i cons length Constructor constructor MemberReference MemberReference MemberReference MemberReference generateConstructor 0 ArraySelector cons selfType constructor cw MemberReference i	1
MethodDeclaration Modifier BasicType remove FormalParameter FormalParameter IfStatement ReturnStatement public boolean ReferenceType hash ReferenceType o BinaryOperation ReturnStatement BinaryOperation RubyHash Object instanceof MemberReference ReferenceType Literal != MethodInvocation MemberReference o RubyHashEntry false hash Cast internalDeleteEntry NO_ENTRY ReferenceType MemberReference RubyHashEntry o	1
MethodDeclaration Modifier ReferenceType buildRubyArray FormalParameter LocalVariableDeclaration ForStatement ReturnStatement protected RubyArray ReferenceType constructors ReferenceType VariableDeclarator ForControl BlockStatement MemberReference IRubyObject RubyArray result MethodInvocation VariableDeclaration BinaryOperation MemberReference StatementExpression result MethodInvocation getRuntime BasicType VariableDeclarator < MemberReference MemberReference ++ i MethodInvocation MemberReference newArray int i Literal i constructors length result MemberReference append constructors length 0 ArraySelector constructors MemberReference i	1
MethodDeclaration Modifier BasicType longValue FormalParameter LocalVariableDeclaration IfStatement ThrowStatement private static final long ReferenceType parameter ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation RubyString CharSequence cs MethodInvocation == MethodInvocation Literal ReturnStatement parameter MethodInvocation getRuntime parameter asJavaString cs length 1 MethodInvocation BinaryOperation newRangeError cs Literal charAt + BinaryOperation Literal 0 + Literal MemberReference " is not an integer" "Value " parameter	1
MethodDeclaration Modifier putShort FormalParameter FormalParameter StatementExpression StatementExpression final public BasicType offset BasicType value MethodInvocation MethodInvocation long short MemberReference Literal checkBounds IO MemberReference MethodInvocation MemberReference putInt16 offset 2 buffer MemberReference index value offset	1
MethodDeclaration Modifier ReferenceType allocate FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType runtime ReferenceType klass ClassCreator Ruby RubyClass ReferenceType MemberReference MemberReference RubyGzipReader runtime klass	0
MethodDeclaration Modifier ReferenceType case475_line1803 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support MethodInvocation Literal Cast Literal Literal Cast new_args Cast getPosition null ReferenceType MemberReference null null ReferenceType MemberReference ReferenceType MemberReference ListNode ArraySelector yyVals BlockArgNode ArraySelector yyVals ListNode ArraySelector yyVals BinaryOperation BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference + Literal MemberReference - 1 yyTop 0 yyTop - 1 yyTop	1
MethodDeclaration Modifier ReferenceType buildDRegexp FormalParameter FormalParameter LocalVariableDeclaration ForStatement ReturnStatement public Operand ReferenceType dregexpNode ReferenceType s ReferenceType VariableDeclarator EnhancedForControl StatementExpression ClassCreator DRegexpNode IR_Scope List TypeArgument strPieces ClassCreator VariableDeclaration MethodInvocation MethodInvocation ReferenceType ClassCreator MethodInvocation ReferenceType ReferenceType ReferenceType VariableDeclarator dregexpNode childNodes strPieces MethodInvocation add Regexp ReferenceType MemberReference dregexpNode getOptions Operand ArrayList TypeArgument Node n MemberReference MemberReference build CompoundString strPieces ReferenceType n s Operand	1
MethodDeclaration Modifier writeExp FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression IfStatement IfStatement StatementExpression private static ReferenceType buf BasicType exponent BasicType expChar MethodInvocation MethodInvocation BinaryOperation BlockStatement BinaryOperation BlockStatement BlockStatement MethodInvocation ByteList int byte buf MemberReference append buf TernaryExpression append < MemberReference Literal StatementExpression > MemberReference Literal StatementExpression StatementExpression StatementExpression buf BinaryOperation append expChar BinaryOperation Literal Literal exponent 0 Assignment exponent 99 MethodInvocation MethodInvocation MethodInvocation + BinaryOperation Literal >= MemberReference Literal '+' '-' MemberReference MemberReference = buf BinaryOperation append buf BinaryOperation append buf BinaryOperation append % MemberReference Literal '0' exponent 0 exponent - exponent + BinaryOperation Literal + BinaryOperation Literal + BinaryOperation Literal exponent 10 / MemberReference Literal '0' / BinaryOperation Literal '0' / MemberReference Literal '0' exponent 100 % MemberReference Literal 10 exponent 10 exponent 100	0
MethodDeclaration Modifier BasicType fastPackedContains FormalParameter LocalVariableDeclaration ForStatement ReturnStatement private boolean ReferenceType name ReferenceType VariableDeclarator ForControl BlockStatement Literal String Object table MemberReference VariableDeclaration BinaryOperation MemberReference IfStatement false packedVTable BasicType VariableDeclarator < MemberReference MemberReference ++ i BinaryOperation ReturnStatement int i Literal i vTableSize == MemberReference MemberReference Literal 0 ArraySelector table name true MemberReference i	1
MethodDeclaration Modifier ReferenceType getBodyNode ReturnStatement public Node MemberReference bodyNode	0
MethodDeclaration Modifier windowClosing FormalParameter StatementExpression public ReferenceType e MethodInvocation WindowEvent tar shutdown	1
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType arg1 MethodInvocation MemberReference ThreadContext IRubyObject RubyModule String IRubyObject MethodInvocation MethodInvocation verifyAccessor arg1 MemberReference MemberReference set self MethodInvocation getMetaClass self arg1 getRealClass	0
MethodDeclaration Modifier ReferenceType getArity IfStatement public Arity BinaryOperation BlockStatement BlockStatement > MemberReference Literal IfStatement ReturnStatement IfStatement ReturnStatement optionalArgs 0 BinaryOperation BlockStatement MethodInvocation BinaryOperation BlockStatement MethodInvocation >= MemberReference Literal ReturnStatement Arity MemberReference required >= MemberReference Literal ReturnStatement Arity MemberReference fixed restArg 0 MethodInvocation requiredArgs restArg 0 MethodInvocation requiredArgs Arity optional Arity optional	0
MethodDeclaration setProc FormalParameter StatementExpression ReferenceType procClass Assignment RubyClass This MemberReference = MemberReference procClass procClass	0
MethodDeclaration Modifier setRandomSeed FormalParameter StatementExpression public BasicType randomSeed Assignment long This MemberReference = MemberReference randomSeed randomSeed	0
MethodDeclaration Modifier Annotation ReferenceType isdst ReturnStatement public JRubyMethod ElementValuePair RubyBoolean MethodInvocation name ElementArrayValue MethodInvocation getRuntime Literal Literal MethodInvocation newBoolean "isdst" "dst?" ! dt MethodInvocation getZone MethodInvocation isStandardOffset dt getMillis	0
MethodDeclaration Modifier ReferenceType case31_line429 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support Cast Cast node_assign ReferenceType MemberReference ReferenceType MemberReference Node ArraySelector yyVals Node ArraySelector yyVals BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference - 2 yyTop 0 yyTop	1
MethodDeclaration Modifier BasicType codePoint FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter IfStatement LocalVariableDeclaration IfStatement ReturnStatement static public int ReferenceType runtime ReferenceType enc BasicType bytes BasicType p BasicType end BinaryOperation ThrowStatement BasicType VariableDeclarator BinaryOperation ThrowStatement MethodInvocation Ruby Encoding byte int int >= MemberReference MemberReference MethodInvocation int cl MethodInvocation <= MemberReference Literal MethodInvocation enc MemberReference MemberReference MemberReference mbcToCode p end runtime Literal newArgumentError MemberReference MemberReference MemberReference MemberReference preciseLength cl 0 runtime BinaryOperation newArgumentError bytes p end "empty string" enc bytes p end + Literal MemberReference "invalid byte sequence in " enc	1
MethodDeclaration Modifier ReferenceType react FormalParameter FormalParameter ReturnStatement public Object ReferenceType join ReferenceType args MemberReference Join Object ArraySelector args Literal 1	0
MethodDeclaration Modifier encode FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement public ReferenceType runtime ReferenceType o ReferenceType result BasicType VariableDeclarator BinaryOperation StatementExpression StatementExpression Ruby IRubyObject ByteList int s TernaryExpression == MemberReference MemberReference MethodInvocation MethodInvocation BinaryOperation Literal Cast Platform BYTE_ORDER Platform BIG_ENDIAN MemberReference MemberReference encodeIntBigEndian MemberReference MemberReference encodeIntLittleEndian == MemberReference MethodInvocation 0 BasicType MethodInvocation result s result s o runtime getNil int RubyNumeric MemberReference num2long o	0
MethodDeclaration Modifier ReferenceType stepCommon FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement IfStatement ReturnStatement private IRubyObject ReferenceType context ReferenceType step ReferenceType block Modifier ReferenceType VariableDeclarator BasicType VariableDeclarator BinaryOperation ThrowStatement BinaryOperation BlockStatement BlockStatement This ThreadContext IRubyObject Block final Ruby runtime MethodInvocation long unit MethodInvocation < MemberReference Literal MethodInvocation && BinaryOperation BinaryOperation IfStatement StatementExpression LocalVariableDeclaration IfStatement context getRuntime RubyNumeric MemberReference num2long unit 0 runtime Literal newArgumentError instanceof MemberReference ReferenceType instanceof MemberReference ReferenceType BinaryOperation ThrowStatement MethodInvocation ReferenceType VariableDeclarator MethodInvocation BlockStatement IfStatement step "step can't be negative" begin RubyFixnum end RubyFixnum == MemberReference Literal MethodInvocation MemberReference MemberReference MemberReference MemberReference fixnumStep IRubyObject tmp MethodInvocation ! tmp isNil IfStatement LocalVariableDeclaration LocalVariableDeclaration StatementExpression BinaryOperation BlockStatement BlockStatement unit 0 runtime Literal newArgumentError context runtime unit block begin checkStringType BinaryOperation ThrowStatement ReferenceType VariableDeclarator ReferenceType VariableDeclarator Cast instanceof MemberReference ReferenceType IfStatement StatementExpression IfStatement IfStatement StatementExpression "step can't be 0" == MemberReference Literal MethodInvocation StepBlockCallBack callback ClassCreator Block blockCallback MethodInvocation ReferenceType MemberReference begin RubyNumeric MethodInvocation ThrowStatement MethodInvocation BinaryOperation ThrowStatement MethodInvocation ThrowStatement MethodInvocation unit 0 runtime Literal newArgumentError ReferenceType MemberReference MethodInvocation MemberReference CallBlock This MethodInvocation MethodInvocation MemberReference MemberReference newCallClosure RubyString tmp MemberReference MemberReference MethodInvocation equalInternal MethodInvocation MemberReference MemberReference MemberReference MemberReference numericStep == MemberReference Literal MethodInvocation ! begin Literal respondsTo MethodInvocation MemberReference ClassCreator rangeEach "step can't be 0" StepBlockCallBack block RubyFixnum MemberReference one step runtime getRange Arity singleArgument callback context context step RubyFixnum MemberReference zero runtime Literal newArgumentError context runtime step block unit 0 runtime Literal newArgumentError "succ" runtime BinaryOperation newTypeError context ReferenceType MemberReference MethodInvocation MemberReference runtime runtime "step can't be 0" "step can't be 0" + Literal MethodInvocation StepBlockCallBack block RubyFixnum MemberReference one step "can't iterate from " begin MethodInvocation getMetaClass runtime getName	1
MethodDeclaration Modifier ReferenceType reject FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration StatementExpression ReturnStatement static public IRubyObject ReferenceType context ReferenceType self Modifier ReferenceType block Modifier ReferenceType VariableDeclarator Modifier ReferenceType VariableDeclarator MethodInvocation MemberReference ThreadContext IRubyObject final Block final Ruby runtime MethodInvocation final RubyArray result MethodInvocation MemberReference MemberReference MemberReference ClassCreator callEach result context getRuntime runtime newArray runtime context self ReferenceType MethodDeclaration BlockCallback Modifier ReferenceType call FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement public IRubyObject ReferenceType ctx ReferenceType largs ReferenceType blk ReferenceType VariableDeclarator MethodInvocation BlockStatement MethodInvocation ThreadContext IRubyObject Block IRubyObject larg MethodInvocation ! block MethodInvocation MemberReference MemberReference yield SynchronizedStatement runtime getNil MemberReference MemberReference checkArgs isTrue ctx larg MemberReference StatementExpression runtime largs result MethodInvocation result MemberReference append larg	0
MethodDeclaration Modifier setStaticScope FormalParameter StatementExpression public ReferenceType newScope Assignment StaticScope This MemberReference = MemberReference newScope staticScope	0
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType args ReferenceType block MethodInvocation ThreadContext IRubyObject RubyModule String IRubyObject Block context MethodInvocation getRuntime getNil	0
MethodDeclaration Modifier ReferenceType getEnsureNode ReturnStatement public Node MemberReference ensureNode	0
MethodDeclaration Modifier Annotation ReferenceType toString ReturnStatement public Override String MethodInvocation SuperMethodInvocation normalizeSeps toString	0
MethodDeclaration Modifier ReferenceType case406_line1535 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference Cast = yyVal yyVal ReferenceType MemberReference Node ArraySelector yyVals BinaryOperation + Literal MemberReference 0 yyTop	1
MethodDeclaration Modifier ReferenceType cat FormalParameter StatementExpression StatementExpression StatementExpression ReturnStatement final public RubyString ReferenceType str MethodInvocation MethodInvocation Assignment This ByteList BinaryOperation modify System MemberReference MemberReference MemberReference BinaryOperation MemberReference arraycopy MemberReference MemberReference += + MemberReference MemberReference str bytes str begin value bytes + MemberReference MemberReference str realSize value realSize str realSize value realSize str realSize value begin value realSize	0
MethodDeclaration Modifier ReferenceType newUsAsciiStringShared FormalParameter FormalParameter LocalVariableDeclaration StatementExpression ReturnStatement static public RubyString ReferenceType runtime ReferenceType bytes ReferenceType VariableDeclarator Assignment MemberReference Ruby ByteList RubyString str MethodInvocation MemberReference MemberReference = str MemberReference MemberReference MemberReference MemberReference newStringNoCopy str shareLevel SHARE_LEVEL_BYTELIST runtime bytes USASCIIEncoding INSTANCE CR_7BIT	0
MethodDeclaration Modifier ReferenceType op_aref19 FormalParameter FormalParameter LocalVariableDeclaration ReturnStatement private IRubyObject ReferenceType runtime BasicType idx ReferenceType VariableDeclarator TernaryExpression Ruby int IRubyObject str MethodInvocation BinaryOperation MethodInvocation MemberReference MemberReference MemberReference Literal substr19 && MethodInvocation BinaryOperation runtime getNil str runtime idx 1 ! str isNil == Cast Literal ReferenceType MemberReference 0 RubyString str	1
MethodDeclaration Modifier BasicType moreImportantThan FormalParameter ReturnStatement public boolean ReferenceType other BinaryOperation AssignedName || BinaryOperation BinaryOperation == MemberReference Literal > MemberReference MemberReference other null other.type value value	0
MethodDeclaration Modifier ReferenceType yieldSpecific FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType context ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 ReferenceType arg3 ReferenceType arg4 ReferenceType arg5 ReferenceType arg6 MethodInvocation ThreadContext IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject body MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference yieldSpecific context arg0 arg1 arg2 arg3 arg4 arg5 arg6 binding type	1
MethodDeclaration Modifier ReferenceType get FormalParameter FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType runtime ReferenceType array BasicType i MethodInvocation Ruby Object int RubyBoolean MemberReference Cast newBoolean runtime BasicType MemberReference boolean array	0
MethodDeclaration Modifier ReferenceType getInstance ReturnStatement final static public BetaSingleton MemberReference INSTANCE	0
MethodDeclaration Modifier call FormalParameter StatementExpression public ReferenceType context MethodInvocation BodyCompiler MethodInvocation MemberReference Literal compile opAsgnNode getReceiverNode context true	0
MethodDeclaration Modifier Annotation ReferenceType read FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement IfStatement IfStatement WhileStatement static public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType args ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator VariableDeclarator VariableDeclarator BasicType VariableDeclarator BinaryOperation BlockStatement BlockStatement MethodInvocation StatementExpression MethodInvocation BlockStatement Literal BlockStatement name Literal optional Literal ThreadContext IRubyObject IRubyObject Ruby runtime MethodInvocation ArgsFileData data MethodInvocation IRubyObject tmp str length long len Literal > MemberReference Literal StatementExpression StatementExpression StatementExpression StatementExpression ! length isNil Assignment ! str isNil StatementExpression StatementExpression StatementExpression StatementExpression true IfStatement IfStatement IfStatement IfStatement ReturnStatement "read" 2 context getRuntime ArgsFileData MemberReference getDataFrom 0 args length 0 Assignment Assignment Assignment Assignment MemberReference MethodInvocation = Assignment Cast Cast Assignment MethodInvocation ReturnStatement BinaryOperation BlockStatement BlockStatement MethodInvocation BlockStatement IfStatement BinaryOperation BlockStatement IfStatement MemberReference recv MemberReference MemberReference = MemberReference TernaryExpression = MemberReference MethodInvocation = MemberReference MethodInvocation = len RubyNumeric MemberReference num2long MemberReference MethodInvocation = ReferenceType MemberReference ReferenceType MemberReference MemberReference MethodInvocation = ! data MemberReference next_argv MemberReference instanceof MemberReference ReferenceType StatementExpression StatementExpression str isNil StatementExpression MethodInvocation BlockStatement || MethodInvocation MethodInvocation IfStatement BinaryOperation BlockStatement str length ArraySelector args str BinaryOperation MemberReference MethodInvocation length runtime getNil str runtime getNil length str str convertToString RubyString str RubyString str ArraySelector args runtime getNil context str data currentFile RubyIO Assignment Assignment Assignment ! tmp isNil StatementExpression tmp isNil length isNil BinaryOperation BlockStatement >= MemberReference Literal IfStatement Literal > MemberReference Literal ArraySelector args runtime getNil Literal MemberReference MethodInvocation = MemberReference Cast = MemberReference MemberReference = Cast != MemberReference Literal StatementExpression StatementExpression ContinueStatement args length 1 BinaryOperation BlockStatement 0 args length 1 Literal 1 tmp data.currentFile MemberReference Literal MemberReference callMethod tmp ReferenceType MemberReference str tmp ReferenceType MemberReference data next_p - 1 MethodInvocation Assignment < Cast MemberReference StatementExpression StatementExpression ContinueStatement 1 context "read" args RubyIO data currentFile RubyString str MemberReference MemberReference argf_close MemberReference Literal = ReferenceType MemberReference len Assignment Assignment context data currentFile data next_p 1 RubyString str MemberReference Cast -= MemberReference MethodInvocation = len ReferenceType MemberReference ArraySelector args runtime MemberReference newFixnum RubyString str Literal len 0	1
MethodDeclaration Modifier ReferenceType getReceiverNode ReturnStatement public Node MemberReference receiverNode	0
MethodDeclaration Modifier ReferenceType case304_line1137 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference ClassCreator = yyVal yyVal ReferenceType MethodInvocation Cast Cast Cast ForNode Cast getPosition ReferenceType MemberReference ReferenceType MemberReference ReferenceType MemberReference ReferenceType MemberReference Node ArraySelector yyVals Node ArraySelector yyVals Node ArraySelector yyVals Token ArraySelector yyVals BinaryOperation BinaryOperation BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference + Literal MemberReference + Literal MemberReference - 7 yyTop - 1 yyTop - 4 yyTop - 8 yyTop	1
MethodDeclaration Modifier Annotation ReferenceType zip19 FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType self Modifier ReferenceType args Modifier ReferenceType block MethodInvocation name Literal rest Literal frame Literal compat MemberReference ThreadContext IRubyObject final IRubyObject final Block MemberReference MemberReference MemberReference MemberReference Literal zipCommon "zip" true true CompatVersion RUBY1_9 context self args block "to_ary"	0
MethodDeclaration Modifier ReferenceType getBlock ReturnStatement public Block MemberReference block	0
MethodDeclaration Modifier ReferenceType convertJavaToUsableRubyObjectWithConverter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement IfStatement ReturnStatement static public IRubyObject ReferenceType runtime ReferenceType object ReferenceType converter ReferenceType VariableDeclarator BinaryOperation ReturnStatement BinaryOperation BlockStatement MethodInvocation Ruby Object JavaConverter IRubyObject result MethodInvocation != MemberReference Literal MemberReference || BinaryOperation BinaryOperation ReturnStatement converter MemberReference MemberReference convert MemberReference MemberReference trySimpleConversions result null result == MemberReference Literal == MemberReference MemberReference MethodInvocation runtime object runtime object converter null converter JAVA_DEFAULT_CONVERTER Java MemberReference MemberReference getInstance runtime object	1
MethodDeclaration Modifier ReferenceType getValueDepthZeroOrNil FormalParameter FormalParameter ThrowStatement public IRubyObject BasicType offset ReferenceType nil ClassCreator int IRubyObject ReferenceType BinaryOperation RuntimeException + This Literal MethodInvocation MethodInvocation " does not support scopes with any variables" getClass getSimpleName	1
MethodDeclaration Modifier BasicType getDFVarsCount ReturnStatement public int MethodInvocation _dfVars size	0
MethodDeclaration Modifier createNKF FormalParameter LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression static public ReferenceType runtime ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation Ruby RubyModule nkfModule MethodInvocation nkfModule Literal MethodInvocation defineConstant nkfModule Literal MethodInvocation defineConstant nkfModule Literal MethodInvocation defineConstant nkfModule Literal MethodInvocation defineConstant nkfModule Literal MethodInvocation defineConstant nkfModule Literal MethodInvocation defineConstant nkfModule Literal MethodInvocation defineConstant nkfModule Literal MethodInvocation defineConstant nkfModule Literal MethodInvocation defineConstant nkfModule Literal MethodInvocation defineConstant nkfModule Literal MethodInvocation defineConstant nkfModule Literal MethodInvocation defineConstant RubyString version MethodInvocation RubyString nkfVersion MethodInvocation RubyString nkfDate MethodInvocation ThreadContext context MethodInvocation version MemberReference freeze nkfVersion MemberReference freeze nkfDate MemberReference freeze nkfModule ClassReference defineAnnotatedMethods runtime Literal defineModule "AUTO" RubyFixnum MemberReference MethodInvocation newFixnum "JIS" RubyFixnum MemberReference MethodInvocation newFixnum "EUC" RubyFixnum MemberReference MethodInvocation newFixnum "SJIS" RubyFixnum MemberReference MethodInvocation newFixnum "BINARY" RubyFixnum MemberReference MethodInvocation newFixnum "NOCONV" RubyFixnum MemberReference MethodInvocation newFixnum "UNKNOWN" RubyFixnum MemberReference MethodInvocation newFixnum "ASCII" RubyFixnum MemberReference MethodInvocation newFixnum "UTF8" RubyFixnum MemberReference MethodInvocation newFixnum "UTF16" RubyFixnum MemberReference MethodInvocation newFixnum "UTF32" RubyFixnum MemberReference MethodInvocation newFixnum "OTHER" RubyFixnum MemberReference MethodInvocation newFixnum runtime Literal newString runtime Literal newString runtime Literal newString runtime getCurrentContext context context context ReferenceType "NKF" runtime AUTO getValue runtime JIS getValue runtime EUC getValue runtime SJIS getValue runtime BINARY getValue runtime NOCONV getValue runtime UNKNOWN getValue runtime ASCII getValue runtime UTF8 getValue runtime UTF16 getValue runtime UTF32 getValue runtime OTHER getValue "2.0.7 (JRuby 2007-05-11)" "2.0.7" "2007-05-11" RubyNKF	0
MethodDeclaration Modifier BasicType headerIsWritten ReturnStatement public boolean MemberReference headerIsWritten	0
MethodDeclaration Modifier Annotation ReferenceType remove_method FormalParameter FormalParameter ForStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair RubyModule ReferenceType context ReferenceType args ForControl BlockStatement This name Literal required Literal rest Literal visibility MemberReference ThreadContext IRubyObject VariableDeclaration BinaryOperation MemberReference StatementExpression "remove_method" 1 true PRIVATE BasicType VariableDeclarator < MemberReference MemberReference ++ i MethodInvocation int i Literal i args length MemberReference MemberReference removeMethod 0 context ArraySelector MethodInvocation args MemberReference asJavaString i	1
MethodDeclaration Modifier Annotation ReferenceType s_set_completion_append_character FormalParameter FormalParameter Exception ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType recv ReferenceType achar MethodInvocation name Literal module Literal visibility MemberReference IRubyObject IRubyObject recv MethodInvocation getRuntime "completion_append_character=" true Visibility PRIVATE getNil	1
MethodDeclaration Modifier setLeftParenBegin FormalParameter StatementExpression public BasicType value Assignment int MemberReference MemberReference = leftParenBegin value	0
MethodDeclaration Modifier ReferenceType powerFixnum19 FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement IfStatement IfStatement IfStatement IfStatement IfStatement ReturnStatement private IRubyObject ReferenceType context ReferenceType other ReferenceType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator BinaryOperation BlockStatement BinaryOperation BlockStatement BinaryOperation BlockStatement BinaryOperation BlockStatement BinaryOperation BlockStatement BinaryOperation BlockStatement MethodInvocation ThreadContext IRubyObject Ruby runtime MethodInvocation long a MemberReference long b Cast < MemberReference Literal ReturnStatement == MemberReference Literal ReturnStatement == MemberReference Literal ReturnStatement == MemberReference Literal ReturnStatement == MemberReference Literal ReturnStatement == MemberReference Literal ReturnStatement Numeric MemberReference MemberReference MemberReference int_pow context getRuntime value ReferenceType MemberReference b 0 MethodInvocation b 0 MethodInvocation b 1 This a 0 TernaryExpression a 1 MethodInvocation a - 1 TernaryExpression context a b RubyFixnum other RubyRational MethodInvocation MemberReference This newRationalRaw RubyFixnum MemberReference one BinaryOperation MethodInvocation MethodInvocation RubyFixnum MemberReference one BinaryOperation MethodInvocation MethodInvocation MemberReference Literal MemberReference callMethod runtime runtime > MemberReference Literal RubyFixnum MemberReference zero RubyNumeric MemberReference BinaryOperation dbl2num runtime == BinaryOperation Literal RubyFixnum MemberReference one RubyFixnum MemberReference minus_one context "**" other b 0 runtime runtime / Literal Literal % MemberReference Literal 0 runtime runtime 1.0 0.0 b 2	1
MethodDeclaration Modifier attach FormalParameter FormalParameter LocalVariableDeclaration StatementExpression StatementExpression public ReferenceType runtime ReferenceType applet Modifier ReferenceType VariableDeclarator MethodInvocation MethodInvocation Ruby Applet final IRubyObject wrappedApplet MethodInvocation runtime Literal MemberReference defineGlobalConstant wrappedApplet MethodInvocation getMetaClass JavaEmbedUtils MemberReference MemberReference javaToRuby "JRUBY_APPLET" wrappedApplet ClassReference defineAnnotatedMethods runtime applet ReferenceType RubyMethods	0
MethodDeclaration Modifier BasicType isUndefined ReturnStatement final public boolean BinaryOperation == This MemberReference UndefinedMethod INSTANCE	0
MethodDeclaration Modifier ReferenceType getClassMethod FormalParameter ForStatement ReturnStatement public IR_Method ReferenceType name EnhancedForControl IfStatement Literal String VariableDeclaration MemberReference BinaryOperation ReturnStatement null ReferenceType VariableDeclarator _methods && MemberReference MethodInvocation MemberReference IR_Method m ! m _isInstanceMethod _name MemberReference equals m name	1
MethodDeclaration Modifier Annotation ReferenceType getSingletonMethod FormalParameter ReturnStatement public Deprecated Callback ReferenceType method ClassCreator String ReferenceType MemberReference MemberReference MemberReference Literal Literal MethodInvocation Literal ReflectionCallback type method NULL_CLASS_ARRAY false true Arity noArguments false	1
MethodDeclaration Modifier BasicType isConstant ForStatement ReturnStatement public boolean EnhancedForControl IfStatement Literal VariableDeclaration MemberReference MethodInvocation ReturnStatement true ReferenceType VariableDeclarator _elts ! o isConstant Literal Operand o false	1
MethodDeclaration Modifier ReferenceType case189_line766 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support Cast Literal Cast MethodInvocation getOperatorCallNode ReferenceType MemberReference "**" ReferenceType MemberReference getPosition Node ArraySelector yyVals Node ArraySelector yyVals BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference - 2 yyTop 0 yyTop	1
MethodDeclaration Modifier checkReadable FormalParameter IOException BadDescriptorException PipeException InvalidValueException StatementExpression IfStatement IfStatement public ReferenceType runtime MethodInvocation BinaryOperation BlockStatement BinaryOperation BlockStatement Ruby MemberReference checkClosed == BinaryOperation Literal ThrowStatement && BinaryOperation BinaryOperation TryStatement runtime & MemberReference MemberReference 0 MethodInvocation && BinaryOperation MethodInvocation == MemberReference Literal StatementExpression CatchClause mode READABLE runtime Literal newIOError || BinaryOperation BinaryOperation ! mainStream feof pipeStream null MethodInvocation CatchClauseParameter "not opened for reading" != BinaryOperation Literal == BinaryOperation MemberReference Literal MemberReference seek IOException ioe & MemberReference MemberReference 0 & MemberReference BinaryOperation SYNCWRITE 0 Stream SEEK_CUR mode WBUF mode | MemberReference MemberReference SYNCWRITE RBUF	1
MethodDeclaration Modifier Annotation ReferenceType superclass ReturnStatement public JRubyMethod RubyObject MethodInvocation JavaClass MethodInvocation MethodInvocation get getRuntime getSuperclass	0
MethodDeclaration Modifier visitIntInsn FormalParameter FormalParameter StatementExpression public BasicType arg0 BasicType arg1 MethodInvocation int int MethodInvocation getMethodVisitor MemberReference MemberReference visitIntInsn arg0 arg1	0
MethodDeclaration Modifier Annotation ReferenceType zero_p ReturnStatement public JRubyMethod ElementValuePair IRubyObject MethodInvocation name Literal RubyBoolean MethodInvocation BinaryOperation newBoolean "zero?" getRuntime == MemberReference Literal value 0	1
MethodDeclaration Modifier Annotation BasicType isKindOf FormalParameter FormalParameter ReturnStatement public Override boolean ReferenceType obj ReferenceType type BinaryOperation IRubyObject RubyModule instanceof MemberReference ReferenceType obj RubyIO	0
MethodDeclaration Modifier Annotation ReferenceType to_f ReturnStatement public JRubyMethod IRubyObject MethodInvocation RubyFloat MethodInvocation Cast newFloat getRuntime BasicType MemberReference double value	1
MethodDeclaration Modifier ReferenceType newConcurrencyError FormalParameter ReturnStatement public RaiseException ReferenceType message MethodInvocation String MethodInvocation MemberReference newRaiseException getConcurrencyError message	0
MethodDeclaration Modifier ReferenceType str_to_c_internal FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement LocalVariableDeclaration StatementExpression LocalVariableDeclaration LocalVariableDeclaration IfStatement IfStatement IfStatement LocalVariableDeclaration LocalVariableDeclaration IfStatement IfStatement ReturnStatement static RubyArray ReferenceType context ReferenceType recv ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation ReturnStatement ReferenceType VariableDeclarator VariableDeclarator VariableDeclarator Assignment BasicType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation BlockStatement MethodInvocation BlockStatement MethodInvocation BlockStatement ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation BlockStatement MethodInvocation BlockStatement MethodInvocation ThreadContext IRubyObject RubyString s MethodInvocation ByteList bytes MethodInvocation Ruby runtime MethodInvocation == MemberReference Literal MethodInvocation IRubyObject sr si re MemberReference Assignment = boolean po Literal IRubyObject m MethodInvocation ! m isNil StatementExpression StatementExpression StatementExpression StatementExpression m isNil StatementExpression IfStatement m isNil StatementExpression IfStatement StatementExpression IfStatement StatementExpression StatementExpression IRubyObject r MethodInvocation IRubyObject i MemberReference ! sr isNil IfStatement ! si isNil IfStatement runtime TernaryExpression MemberReference newArray recv convertToString s getByteList context getRuntime bytes realSize 0 runtime MethodInvocation MemberReference newArray sr MemberReference Assignment = false RubyRegexp MethodInvocation MemberReference MemberReference newDummyRegexp Assignment Assignment Assignment Assignment Assignment MethodInvocation BlockStatement Assignment MethodInvocation ReturnStatement Assignment MethodInvocation BlockStatement BlockStatement Assignment Assignment RubyFixnum MemberReference zero r MethodInvocation BlockStatement IfStatement MethodInvocation BlockStatement IfStatement MemberReference MethodInvocation MethodInvocation re runtime getNil recv si MemberReference MethodInvocation = MemberReference Literal MemberReference callMethod runtime Numeric.ComplexPatterns comp_pat0 MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference Literal = MemberReference MethodInvocation = ! m isNil StatementExpression StatementExpression IfStatement LocalVariableDeclaration IfStatement StatementExpression StatementExpression StatementExpression MemberReference MethodInvocation = m isNil MethodInvocation MemberReference MethodInvocation = m MethodInvocation MemberReference Literal MethodInvocation callMethod StatementExpression StatementExpression LocalVariableDeclaration IfStatement StatementExpression MemberReference MethodInvocation = MemberReference Literal = runtime sr MethodInvocation MemberReference Literal MethodInvocation callMethod StatementExpression MethodInvocation BlockStatement BlockStatement si MethodInvocation MemberReference Literal MethodInvocation callMethod StatementExpression MethodInvocation BlockStatement BlockStatement po MemberReference MemberReference MemberReference newComplexPolar MemberReference MemberReference MemberReference newComplexCanonicalize re runtime getNil context "match" s sr m MemberReference Literal MethodInvocation callMethod si m MemberReference Literal MethodInvocation callMethod re m MemberReference Literal callMethod po true m RubyRegexp MethodInvocation MemberReference MemberReference newDummyRegexp Assignment Assignment MethodInvocation StatementExpression ReferenceType VariableDeclarator MethodInvocation StatementExpression MethodInvocation Assignment Assignment m RubyRegexp MethodInvocation MemberReference MemberReference newDummyRegexp runtime MethodInvocation MemberReference newArray sr m MemberReference Literal MethodInvocation callMethod isNil context "[]" RubyFixnum MemberReference two Assignment Assignment ReferenceType VariableDeclarator MethodInvocation StatementExpression MethodInvocation re m MemberReference Literal callMethod po false isTrue context "include?" runtime ClassCreator newString Assignment MethodInvocation MemberReference MethodInvocation MethodInvocation f_gt_p StatementExpression StatementExpression isTrue context "include?" runtime ClassCreator newString Assignment MethodInvocation MemberReference MethodInvocation MethodInvocation f_gt_p StatementExpression StatementExpression context r i context r i context "[]" RubyFixnum MemberReference one context "[]" RubyFixnum MemberReference two context "post_match" MemberReference Literal MemberReference callMethod runtime Numeric.ComplexPatterns comp_pat1 MemberReference MethodInvocation = MemberReference MethodInvocation = si isNil Assignment IRubyObject t MethodInvocation t isNil Assignment si MethodInvocation convertToString MemberReference MethodInvocation = MemberReference Literal = MemberReference Literal MemberReference callMethod runtime Numeric.ComplexPatterns comp_pat2 runtime getNil recv context "[]" RubyFixnum MemberReference one runtime MemberReference MethodInvocation = MemberReference MethodInvocation = IRubyObject t MethodInvocation t isNil Assignment si MethodInvocation convertToString context "post_match" ReferenceType ArrayCreator MemberReference MethodInvocation = isTrue context sr MemberReference Literal MethodInvocation callMethod RubyFixnum MemberReference zero Assignment Assignment ReferenceType ArrayCreator MemberReference MethodInvocation = isTrue context si MemberReference Literal MethodInvocation callMethod RubyFixnum MemberReference zero Assignment Assignment runtime runtime context "match" s sr runtime getNil si m MemberReference Literal MethodInvocation callMethod MemberReference MethodInvocation = m MemberReference Literal MethodInvocation callMethod MemberReference MethodInvocation = MethodInvocation cat re m MemberReference Literal callMethod po false context "match" s runtime si runtime getNil si m MemberReference Literal MethodInvocation callMethod m MemberReference Literal MethodInvocation callMethod MemberReference MethodInvocation = MethodInvocation cat ByteList BasicType ArrayInitializer r MemberReference MemberReference f_to_r context "count" runtime Literal newString runtime MemberReference MethodInvocation = MemberReference MethodInvocation = ByteList BasicType ArrayInitializer i MemberReference MemberReference f_to_r context "count" runtime Literal newString runtime MemberReference MethodInvocation = MemberReference MethodInvocation = context "[]" RubyFixnum MemberReference one si runtime newString context "[]" RubyFixnum MemberReference two t runtime ClassCreator newString t MethodInvocation convertToString context "post_match" context "[]" RubyFixnum MemberReference three context "[]" RubyFixnum MemberReference four t runtime ClassCreator newString t MethodInvocation convertToString byte Literal context sr ".eE" r MemberReference MemberReference f_to_f r MemberReference MemberReference f_to_i byte Literal context si ".eE" i MemberReference MemberReference f_to_f i MemberReference MemberReference f_to_i runtime runtime ReferenceType ArrayCreator getByteList runtime runtime ReferenceType ArrayCreator getByteList '/' context sr context sr '/' context si context si ByteList BasicType ArrayInitializer ByteList BasicType ArrayInitializer byte Literal byte Literal '1' '1'	1
MethodDeclaration Modifier Annotation ReferenceType readline FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType args ReferenceType VariableDeclarator MethodInvocation BlockStatement MemberReference name Literal optional Literal ThreadContext IRubyObject IRubyObject IRubyObject line MethodInvocation line isNil ThrowStatement line "readline" 1 MemberReference MemberReference MemberReference gets MethodInvocation context recv args context MethodInvocation getRuntime newEOFError	0
MethodDeclaration Modifier ReferenceType case344_line1287 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support Cast Cast Literal new_fcall ReferenceType MemberReference ReferenceType MemberReference null Token ArraySelector yyVals Node ArraySelector yyVals BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference - 1 yyTop 0 yyTop	1
MethodDeclaration Modifier BasicType getNumberOfVariables ReturnStatement public int MemberReference variableNames length	0
MethodDeclaration Modifier ReferenceType group FormalParameter ReturnStatement public IRubyObject BasicType n MethodInvocation int RubyRegexp MemberReference This nth_match n	0
MethodDeclaration Modifier Annotation BasicType hashCode ReturnStatement public Override int MethodInvocation entry hashCode	0
MethodDeclaration Modifier ReferenceType case194_line785 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support Cast Literal Cast MethodInvocation getOperatorCallNode ReferenceType MemberReference "|" ReferenceType MemberReference getPosition Node ArraySelector yyVals Node ArraySelector yyVals BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference - 2 yyTop 0 yyTop	1
MethodDeclaration Modifier BasicType isWritable ReturnStatement public boolean BinaryOperation instanceof MemberReference ReferenceType channel WritableByteChannel	0
MethodDeclaration Modifier Annotation ReferenceType to_i ReturnStatement public Deprecated RubyFixnum MethodInvocation MethodInvocation to_i getRuntime	1
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType context ReferenceType self ReferenceType klazz ReferenceType name ReferenceType args ReferenceType block MethodInvocation ThreadContext IRubyObject RubyModule String IRubyObject Block method MethodInvocation MemberReference MemberReference MemberReference bind MemberReference MemberReference MemberReference call context self block context args block	0
MethodDeclaration Modifier ReferenceType case21_line367 FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop MethodInvocation MethodInvocation Assignment MemberReference Object Object int support MethodInvocation getResult support popCurrentScope MemberReference Literal = yyVal ClassCreator addBeginNode yyVal null ReferenceType MethodInvocation MethodInvocation Cast PreExeNode Cast getPosition support getCurrentScope ReferenceType MemberReference ReferenceType MemberReference Node ArraySelector yyVals Node ArraySelector yyVals BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference - 1 yyTop - 1 yyTop	1
MethodDeclaration Modifier prepare FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement IfStatement public ReferenceType context ReferenceType runtime ReferenceType self ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 ReferenceType arg3 ReferenceType arg4 ReferenceType arg5 ReferenceType arg6 ReferenceType block ReferenceType VariableDeclarator MemberReference BlockStatement BlockStatement BinaryOperation StatementExpression ThreadContext Ruby IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject Block DynamicScope scope MethodInvocation isSimple StatementExpression StatementExpression != MethodInvocation Literal MethodInvocation context getCurrentScope MethodInvocation MethodInvocation getBlock null MemberReference MemberReference MemberReference processBlockArg scope MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference setArgValues MemberReference MemberReference MemberReference ArrayCreator MemberReference prepare scope runtime block arg0 arg1 arg2 arg3 arg4 arg5 arg6 context runtime self ReferenceType ArrayInitializer block IRubyObject MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference arg0 arg1 arg2 arg3 arg4 arg5 arg6	1
MethodDeclaration Modifier ReferenceType newArray FormalParameter FormalParameter LocalVariableDeclaration StatementExpression StatementExpression ReturnStatement static public RubyArray ReferenceType runtime ReferenceType args ReferenceType VariableDeclarator MethodInvocation Assignment MemberReference Ruby IRubyObject RubyArray arr ClassCreator System MemberReference Literal MemberReference Literal MemberReference arraycopy MemberReference MemberReference = arr ReferenceType MemberReference ArrayCreator args 0 arr values 0 args length arr realLength args length RubyArray runtime ReferenceType MemberReference IRubyObject args length	0
MethodDeclaration Modifier Annotation ReferenceType yieldSpecific FormalParameter FormalParameter FormalParameter ReturnStatement public Override IRubyObject ReferenceType context ReferenceType binding ReferenceType type MethodInvocation ThreadContext Binding Block ReferenceType MemberReference MemberReference MemberReference MemberReference yieldSpecificInternal Type context IRubyObject NULL_ARRAY binding type	0
MethodDeclaration Modifier Annotation ReferenceType delete19 FormalParameter FormalParameter LocalVariableDeclaration StatementExpression ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType arg ReferenceType VariableDeclarator MethodInvocation MemberReference name Literal compat MemberReference ThreadContext IRubyObject RubyString str MethodInvocation str MemberReference MemberReference delete_bang19 str "delete" CompatVersion RUBY1_9 MethodInvocation strDup context arg context getRuntime	0
MethodDeclaration Modifier compileHashCommon FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement protected ReferenceType hashNode ReferenceType context BasicType expr BasicType VariableDeclarator BasicType VariableDeclarator MemberReference BlockStatement BlockStatement HashNode BodyCompiler boolean boolean doit BinaryOperation boolean popit BinaryOperation doit IfStatement LocalVariableDeclaration StatementExpression IfStatement ForStatement || MemberReference MemberReference && MemberReference MemberReference BinaryOperation BlockStatement ReferenceType VariableDeclarator MethodInvocation MemberReference StatementExpression EnhancedForControl BlockStatement expr ! RubyInstanceConfig PEEPHOLE_OPTZ ! RubyInstanceConfig PEEPHOLE_OPTZ ! expr || BinaryOperation BinaryOperation StatementExpression ReturnStatement ArrayCallback hashCallback ClassCreator MemberReference MemberReference MemberReference createNewHash popit MethodInvocation VariableDeclaration MethodInvocation StatementExpression == MethodInvocation Literal == MethodInvocation Literal MethodInvocation ReferenceType MethodDeclaration context hashNode hashCallback context consumeCurrentValue ReferenceType VariableDeclarator hashNode MethodInvocation getListNode MethodInvocation hashNode getListNode null hashNode MethodInvocation getListNode 0 context createEmptyHash ArrayCallback Modifier nextValue FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression Node nextNode childNodes MemberReference MemberReference Literal compile size public ReferenceType context ReferenceType sourceArray BasicType index ReferenceType VariableDeclarator BasicType VariableDeclarator MethodInvocation MethodInvocation nextNode context false BodyCompiler Object int ListNode listNode Cast int keyIndex BinaryOperation MethodInvocation MemberReference Literal compile MethodInvocation MemberReference Literal compile ReferenceType MemberReference * MemberReference Literal listNode MemberReference get context true listNode BinaryOperation get context true ListNode sourceArray index 2 keyIndex + MemberReference Literal keyIndex 1	1
MethodDeclaration Modifier Annotation ReferenceType enable FormalParameter StatementExpression ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType recv MethodInvocation MethodInvocation module Literal visibility MemberReference IRubyObject recv MethodInvocation MethodInvocation getRuntime recv MethodInvocation getRuntime true Visibility PRIVATE getWarnings MemberReference Literal Literal warn getNil ID EMPTY_IMPLEMENTATION "GC.enable will not work on JRuby" "GC.enable"	0
MethodDeclaration Modifier ReferenceType getPropertyHelp LocalVariableDeclaration StatementExpression ReturnStatement public String ReferenceType VariableDeclarator MethodInvocation MethodInvocation StringBuilder sb ClassCreator sb MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation Literal append sb toString ReferenceType Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append BinaryOperation append Literal append Literal append Literal append Literal append Literal append Literal append BinaryOperation append Literal append Literal append BinaryOperation append Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append "These properties can be used to alter runtime behavior for perf or compatibility.\n" StringBuilder "Specify them by passing -J-D<property>=<value>\n" "\nCOMPILER SETTINGS:\n" "    jruby.compile.mode=JIT|FORCE|OFF\n" "       Set compilation mode. JIT is default; FORCE compiles all, OFF disables\n" "    jruby.compile.fastest=true|false\n" "       (EXPERIMENTAL) Turn on all experimental compiler optimizations\n" "    jruby.compile.frameless=true|false\n" "       (EXPERIMENTAL) Turn on frameless compilation where possible\n" "    jruby.compile.positionless=true|false\n" "       (EXPERIMENTAL) Turn on compilation that avoids updating Ruby position info. Default is false\n" "    jruby.compile.threadless=true|false\n" "       (EXPERIMENTAL) Turn on compilation without polling for \"unsafe\" thread events. Default is false\n" "    jruby.compile.fastops=true|false\n" "       (EXPERIMENTAL) Turn on fast operators for Fixnum. Default is false\n" "    jruby.compile.fastcase=true|false\n" "       (EXPERIMENTAL) Turn on fast case/when for all-Fixnum whens. Default is false\n" "    jruby.compile.chainsize=<line count>\n" + BinaryOperation Literal "    jruby.compile.lazyHandles=true|false\n" "       Generate method bindings (handles) for compiled methods lazily. Default is false.\n" "    jruby.compile.peephole=true|false\n" "       Enable or disable peephole optimizations. Default is true (on).\n" "\nJIT SETTINGS:\n" "    jruby.jit.threshold=<invocation count>\n" + BinaryOperation Literal "    jruby.jit.max=<method count>\n" "       Set the max count of active methods eligible for JIT-compilation.\n" + BinaryOperation Literal "    jruby.jit.maxsize=<jitted method size (full .class)>\n" "       Set the maximum full-class byte size allowed for jitted methods. Default is Integer.MAX_VALUE\n" "    jruby.jit.logging=true|false\n" "       Enable JIT logging (reports successful compilation). Default is false\n" "    jruby.jit.logging.verbose=true|false\n" "       Enable verbose JIT logging (reports failed compilation). Default is false\n" "    jruby.jit.logEvery=<method count>\n" "       Log a message every n methods JIT compiled. Default is 0 (off).\n" "    jruby.jit.exclude=<ClsOrMod,ClsOrMod::method_name,-::method_name>\n" "       Exclude methods from JIT by class/module short name, c/m::method_name,\n" "       or -::method_name for anon/singleton classes/modules. Comma-delimited.\n" "\nNATIVE SUPPORT:\n" "    jruby.native.enabled=true|false\n" "       Enable/disable native extensions (like JNA for non-Java APIs; Default is true\n" "       (This affects all JRuby instances in a given JVM)\n" "    jruby.native.verbose=true|false\n" "       Enable verbose logging of native extension loading. Default is false.\n" "    jruby.fork.enabled=true|false\n" "       (EXPERIMENTAL, maybe dangerous) Enable fork(2) on platforms that support it.\n" "\nTHREAD POOLING:\n" "    jruby.thread.pool.enabled=true|false\n" "       Enable reuse of native backing threads via a thread pool. Default is false.\n" "    jruby.thread.pool.min=<min thread count>\n" "       The minimum number of threads to keep alive in the pool. Default is 0.\n" "    jruby.thread.pool.max=<max thread count>\n" "       The maximum number of threads to allow in the pool. Default is unlimited.\n" "    jruby.thread.pool.ttl=<time to live, in seconds>\n" "       The maximum number of seconds to keep alive an idle thread. Default is 60.\n" "\nMISCELLANY:\n" "    jruby.compat.version=RUBY1_8|RUBY1_9\n" "       Specify the major Ruby version to be compatible with; Default is RUBY1_8\n" "    jruby.objectspace.enabled=true|false\n" "       Enable or disable ObjectSpace.each_object (default is disabled)\n" "    jruby.launch.inproc=true|false\n" "       Set in-process launching of e.g. system('ruby ...'). Default is true\n" "    jruby.bytecode.version=1.5|1.6\n" "       Set bytecode version for JRuby to generate. Default is current JVM version.\n" "    jruby.management.enabled=true|false\n" "       Set whether JMX management is enabled. Default is true.\n" "    jruby.debug.fullTrace=true|false\n" "       Set whether full traces are enabled (c-call/c-return). Default is false.\n" "    jruby.debug.loadService=true|false\n" "       Log the process of locating and loading libraries. Default is false.\n" "    jruby.jump.backtrace=true|false\n" "       Make non-local flow jumps generate backtraces. Default is false.\n" + Literal MemberReference "\n" + Literal MemberReference ".\n" + Literal MemberReference " per runtime. A value of 0 disables JIT, -1 disables max.\n" "       Set the number of lines at which compiled bodies are \"chained\". Default is " CHAINED_COMPILE_LINE_COUNT_DEFAULT "       Set the JIT threshold to the specified method invocation count. Default is " JIT_THRESHOLD "       Default is " JIT_MAX_METHODS_LIMIT	0
MethodDeclaration Modifier report IfStatement static public MemberReference BlockStatement ! reported StatementExpression StatementExpression LocalVariableDeclaration StatementExpression StatementExpression ForStatement LocalVariableDeclaration ForStatement StatementExpression MethodInvocation MethodInvocation ReferenceType VariableDeclarator MethodInvocation MethodInvocation EnhancedForControl BlockStatement ReferenceType VariableDeclarator EnhancedForControl BlockStatement Assignment System.err println System.err Literal println List TypeArgument samples ClassCreator samples MethodInvocation addAll Collections MemberReference ClassCreator sort VariableDeclaration MemberReference IfStatement String BLANKS Literal VariableDeclaration MemberReference LocalVariableDeclaration StatementExpression MemberReference Literal = "Samples - " ReferenceType ReferenceType SAMPLES keySet samples ReferenceType MethodDeclaration ReferenceType VariableDeclarator TRACES BinaryOperation BlockStatement "                                                            " ReferenceType VariableDeclarator samples BasicType VariableDeclarator MethodInvocation reported true String ArrayList TypeArgument Comparator TypeArgument Modifier BasicType compare FormalParameter FormalParameter ReturnStatement List TypeArgument ls > MethodInvocation Literal StatementExpression ForStatement StatementExpression String ss int len MethodInvocation System.err BinaryOperation println ReferenceType ReferenceType public int ReferenceType o1 ReferenceType o2 BinaryOperation ReferenceType ls size 1 MethodInvocation EnhancedForControl BlockStatement MethodInvocation Math BinaryOperation Literal max + BinaryOperation MethodInvocation String String String String - MethodInvocation MethodInvocation String System.err BinaryOperation println VariableDeclaration MemberReference StatementExpression System.err println - Literal MethodInvocation 0 + BinaryOperation Literal SAMPLES MemberReference get SAMPLES MemberReference get SAMPLES MemberReference get + Literal MethodInvocation ReferenceType VariableDeclarator ls MethodInvocation 60 ss length + BinaryOperation MethodInvocation "==> " ss o2 o1 "Trace #" System MemberReference identityHashCode String ss System.err BinaryOperation println + Literal MemberReference BLANKS Literal MemberReference substring ls + Literal MemberReference " " ss 0 len "  " ss	1
MethodDeclaration Modifier createEmptyArray StatementExpression StatementExpression public MethodInvocation MethodInvocation loadRuntime Literal MethodInvocation invokeRuby "newArray" ClassReference sig ReferenceType RubyArray	0
MethodDeclaration Modifier Annotation ReferenceType get_top_level_proxy_or_package FormalParameter FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType arg0 MethodInvocation module Literal visibility MemberReference ThreadContext IRubyObject IRubyObject Java MemberReference MemberReference MemberReference get_top_level_proxy_or_package true Visibility PRIVATE context recv arg0	1
MethodDeclaration Modifier ReferenceType buildLocalVar FormalParameter FormalParameter ReturnStatement public Operand ReferenceType node ReferenceType s ClassCreator LocalVarNode IR_Scope ReferenceType MethodInvocation Variable node getName	1
MethodDeclaration Modifier BasicType equalInternal FormalParameter FormalParameter FormalParameter ReturnStatement protected static boolean Modifier ReferenceType context Modifier ReferenceType that Modifier ReferenceType other BinaryOperation final ThreadContext final IRubyObject final IRubyObject || BinaryOperation MethodInvocation == MemberReference MemberReference that MethodInvocation MemberReference Literal MemberReference callMethod that other isTrue context "==" other	0
MethodDeclaration Modifier Annotation ReferenceType enclosed_p FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType block MethodInvocation name Literal frame Literal Block MethodInvocation getRuntime "enclosed?" true MemberReference newBoolean enclosed	1
MethodDeclaration Modifier ReferenceType newErrnoEADDRINUSEError ReturnStatement public RaiseException MethodInvocation MethodInvocation Literal newRaiseException MethodInvocation getErrno "Address in use" Literal fastGetClass "EADDRINUSE"	0
MethodDeclaration Modifier ReferenceType f_to_r FormalParameter FormalParameter ReturnStatement static public IRubyObject ReferenceType context ReferenceType x MethodInvocation ThreadContext IRubyObject x MemberReference Literal callMethod context "to_r"	1
MethodDeclaration Modifier escapeCodePointCat FormalParameter FormalParameter FormalParameter FormalParameter ForStatement private ReferenceType runtime BasicType bytes BasicType p BasicType n ForControl BlockStatement Ruby byte int int VariableDeclaration BinaryOperation MemberReference StatementExpression BasicType VariableDeclarator < MemberReference MemberReference ++ q MethodInvocation int q BinaryOperation q p Sprintf MemberReference MemberReference Literal BinaryOperation sprintf - MemberReference MemberReference runtime value "\\x%02X" & MemberReference Literal p n ArraySelector bytes 0377 MemberReference q	1
MethodDeclaration Modifier createNewForLoop FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression public BasicType arity ReferenceType body ReferenceType args BasicType hasMultipleArgsHead ReferenceType argsNodeId ReferenceType inspector ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation int CompilerCallback CompilerCallback boolean NodeType ASTInspector String closureMethodName BinaryOperation ChildScopedBodyCompiler closureCompiler ClassCreator closureCompiler MemberReference Literal beginMethod body MemberReference call closureCompiler endBody loadThreadContext loadSelf method MemberReference pushInt script MethodInvocation getCacheCompiler method MethodInvocation ldc method MethodInvocation ldc Literal MethodInvocation invokeUtilityMethod + BinaryOperation Literal ReferenceType MemberReference MemberReference MemberReference MemberReference args null closureCompiler arity This MemberReference cacheSpecialClosure Boolean MemberReference valueOf BlockBody MemberReference asArgumentType "createSharedScopeBlock" ClassReference MethodInvocation sig + Literal MethodInvocation "$RUBY$__for__" ChildScopedBodyCompiler script closureMethodName inspector scope closureMethodName hasMultipleArgsHead argsNodeId ReferenceType ClassReference ClassReference MemberReference ClassReference MemberReference MemberReference params "block_" script getAndIncrementInnerIndex Block ReferenceType ReferenceType Integer TYPE ReferenceType Boolean TYPE Integer TYPE ThreadContext IRubyObject CompiledBlockCallback	0
MethodDeclaration Modifier BasicType getAndIncrementMethodIndex StatementExpression ReturnStatement public int MemberReference MemberReference ++ _nextMethodIndex _nextMethodIndex	0
MethodDeclaration Modifier ReferenceType getRunnable ReturnStatement public Runnable MethodInvocation returnsInterface getRunnable	0
MethodDeclaration Modifier nextState LocalVariableDeclaration IfStatement StatementExpression StatementExpression ForStatement ForStatement StatementExpression private BasicType VariableDeclarator BinaryOperation StatementExpression Assignment Assignment ForControl BlockStatement ForControl BlockStatement Assignment int p Literal == MemberReference Literal MethodInvocation MemberReference MemberReference = MemberReference Literal = VariableDeclaration BinaryOperation MemberReference StatementExpression VariableDeclaration BinaryOperation MemberReference StatementExpression MemberReference BinaryOperation = 0 initf false Literal init left N next 0 BasicType VariableDeclarator != MemberReference Literal ++ p Assignment BasicType VariableDeclarator != MemberReference Literal ++ p Assignment ArraySelector state ^ MemberReference MethodInvocation 5489 int j BinaryOperation -- j 0 MemberReference BinaryOperation = int j MemberReference -- j 0 MemberReference BinaryOperation = MemberReference ArraySelector state MemberReference MemberReference TWIST + BinaryOperation Literal ArraySelector state ^ MemberReference MethodInvocation M ArraySelector state ^ MemberReference MethodInvocation p BinaryOperation ArraySelector state ArraySelector state - MemberReference MemberReference 1 MemberReference ArraySelector state MemberReference MemberReference TWIST MemberReference ArraySelector state MemberReference MemberReference TWIST - BinaryOperation MemberReference MemberReference Literal N M p BinaryOperation ArraySelector state ArraySelector state p BinaryOperation ArraySelector state ArraySelector state + MemberReference MemberReference N p 0 + MemberReference MemberReference BinaryOperation BinaryOperation - BinaryOperation MemberReference BinaryOperation BinaryOperation p M p M + MemberReference Literal + MemberReference Literal + MemberReference MemberReference N + MemberReference Literal + MemberReference Literal p 0 p 1 p M p 0 p 1	1
MethodDeclaration Modifier Annotation ReferenceType superclass LocalVariableDeclaration IfStatement ReturnStatement public JRubyMethod IRubyObject ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation Class TypeArgument superclass MethodInvocation == MemberReference Literal ReturnStatement JavaClass MethodInvocation MemberReference get ? MethodInvocation javaClass superclass null MethodInvocation getRuntime superclass getSuperclass MethodInvocation getRuntime getNil	0
MethodDeclaration Modifier putInt64 FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression final public BasicType buffer BasicType offset BasicType value Assignment Assignment Assignment Assignment Assignment Assignment Assignment Assignment byte int long MemberReference Cast = MemberReference Cast = MemberReference Cast = MemberReference Cast = MemberReference Cast = MemberReference Cast = MemberReference Cast = MemberReference Cast = ArraySelector buffer BasicType BinaryOperation ArraySelector buffer BasicType BinaryOperation ArraySelector buffer BasicType BinaryOperation ArraySelector buffer BasicType BinaryOperation ArraySelector buffer BasicType BinaryOperation ArraySelector buffer BasicType BinaryOperation ArraySelector buffer BasicType BinaryOperation ArraySelector buffer BasicType BinaryOperation BinaryOperation byte >> MemberReference Literal BinaryOperation byte >> MemberReference Literal BinaryOperation byte >> MemberReference Literal BinaryOperation byte >> MemberReference Literal BinaryOperation byte >> MemberReference Literal BinaryOperation byte >> MemberReference Literal BinaryOperation byte >> MemberReference Literal BinaryOperation byte >> MemberReference Literal + MemberReference Literal value 0 + MemberReference Literal value 8 + MemberReference Literal value 16 + MemberReference Literal value 24 + MemberReference Literal value 32 + MemberReference Literal value 40 + MemberReference Literal value 48 + MemberReference Literal value 56 offset 0 offset 1 offset 2 offset 3 offset 4 offset 5 offset 6 offset 7	0
MethodDeclaration Modifier ReferenceType getGenericExceptionTypes ReturnStatement public Type MethodInvocation constructor getGenericExceptionTypes	0
MethodDeclaration Modifier Annotation ReferenceType getbyte FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType index ReferenceType VariableDeclarator BasicType VariableDeclarator BinaryOperation StatementExpression BinaryOperation ReturnStatement MethodInvocation name Literal compat MemberReference ThreadContext IRubyObject Ruby runtime MethodInvocation int i MethodInvocation < MemberReference Literal Assignment || BinaryOperation BinaryOperation MethodInvocation RubyFixnum MemberReference BinaryOperation newFixnum "getbyte" CompatVersion RUBY1_9 context getRuntime RubyNumeric MemberReference num2int i 0 MemberReference MemberReference += < MemberReference Literal >= MemberReference MemberReference runtime getNil runtime & MemberReference Literal index i value realSize i 0 i value realSize value ArraySelector bytes 0xff BinaryOperation + MemberReference MemberReference value begin i	1
MethodDeclaration Modifier ReferenceType newErrnoEACCESError FormalParameter ReturnStatement public RaiseException ReferenceType message MethodInvocation String MethodInvocation MemberReference newRaiseException MethodInvocation getErrno message Literal fastGetClass "EACCES"	0
MethodDeclaration Modifier Annotation ReferenceType write_nonblock FormalParameter FormalParameter LocalVariableDeclaration TryStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType obj ReferenceType VariableDeclarator StatementExpression LocalVariableDeclaration IfStatement IfStatement LocalVariableDeclaration ReturnStatement CatchClause CatchClause CatchClause CatchClause name Literal required Literal ThreadContext IRubyObject OpenFile myOpenFile MethodInvocation MethodInvocation ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation BlockStatement BasicType VariableDeclarator MethodInvocation CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement "write_nonblock" 1 getOpenFileChecked myOpenFile MethodInvocation checkWritable RubyString str MethodInvocation == MethodInvocation Literal ReturnStatement myOpenFile isWriteBuffered StatementExpression int written MethodInvocation context MethodInvocation getRuntime IOException ex MethodInvocation BadDescriptorException ex MethodInvocation InvalidValueException ex MethodInvocation PipeException ex MethodInvocation context getRuntime obj asString str MethodInvocation getByteList 0 MethodInvocation MethodInvocation myOpenFile MethodInvocation MethodInvocation getWriteStream MemberReference newFixnum context MethodInvocation getRuntime context MethodInvocation getRuntime context MethodInvocation getRuntime context MethodInvocation getRuntime length context MethodInvocation getRuntime context MethodInvocation MethodInvocation getRuntime getDescriptor MethodInvocation write written MemberReference newIOErrorFromException newErrnoEBADFError newErrnoEINVALError newErrnoEPIPEError Literal newFixnum getWarnings MemberReference Literal warn str getByteList ex 0 ID SYSWRITE_BUFFERED_IO "write_nonblock for buffered IO"	1
MethodDeclaration Modifier Annotation ReferenceType op_equal FormalParameter IfStatement LocalVariableDeclaration ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType other BinaryOperation BlockStatement BasicType VariableDeclarator TernaryExpression name ElementArrayValue IRubyObject instanceof MemberReference ReferenceType LocalVariableDeclaration IfStatement StatementExpression boolean isEqual MethodInvocation MemberReference MethodInvocation MethodInvocation Literal Literal other JavaProxyReflectionObject ReferenceType VariableDeclarator BinaryOperation BlockStatement Assignment MemberReference equals isEqual MethodInvocation getRuntime MethodInvocation getRuntime "==" "eql?" Object otherObj MethodInvocation instanceof MemberReference ReferenceType ReturnStatement MemberReference Cast = other getTrue getFalse other dataGetStruct otherObj JavaObject MethodInvocation other ReferenceType MemberReference MethodInvocation getRuntime IRubyObject otherObj getFalse	1
MethodDeclaration Modifier ReferenceType multiAssign FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration ForStatement IfStatement LocalVariableDeclaration IfStatement WhileStatement ReturnStatement static public IRubyObject ReferenceType runtime ReferenceType context ReferenceType self ReferenceType node ReferenceType value BasicType checkArity BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator ForControl BlockStatement BinaryOperation BlockStatement ReferenceType VariableDeclarator BinaryOperation BlockStatement IfStatement BinaryOperation BlockStatement MemberReference Ruby ThreadContext IRubyObject MultipleAsgn19Node RubyArray boolean int valueLen MethodInvocation int varLen TernaryExpression int j Literal BinaryOperation MemberReference StatementExpression && MemberReference BinaryOperation ThrowStatement Node restArgument MethodInvocation != MemberReference Literal IfStatement BinaryOperation BlockStatement < MemberReference MemberReference StatementExpression value value getLength BinaryOperation Literal MethodInvocation 0 && BinaryOperation BinaryOperation ++ j MethodInvocation checkArity < MemberReference MemberReference MethodInvocation node getRest restArgument null BinaryOperation BlockStatement BlockStatement && MemberReference BinaryOperation ThrowStatement j varLen MethodInvocation == MethodInvocation Literal 0 node MethodInvocation getPre < MemberReference MemberReference < MemberReference MemberReference node MethodInvocation MethodInvocation getPre j varLen runtime BinaryOperation newArgumentError < MemberReference MemberReference StatementExpression StatementExpression checkArity < MemberReference MemberReference MethodInvocation node MethodInvocation MethodInvocation getPre node getPre null size j valueLen j varLen MemberReference get MemberReference MemberReference MemberReference MethodInvocation MemberReference MemberReference assign + BinaryOperation Literal varLen valueLen MethodInvocation MethodInvocation valueLen varLen runtime BinaryOperation newArgumentError MemberReference get MemberReference MemberReference MemberReference MethodInvocation MemberReference MemberReference assign j runtime context self value MemberReference eltInternal Block NULL_BLOCK checkArity + BinaryOperation MemberReference ")" restArgument MemberReference MemberReference MemberReference MethodInvocation MemberReference MemberReference assign restArgument MemberReference MemberReference MemberReference MethodInvocation MemberReference MemberReference assign + BinaryOperation Literal ++ j runtime context self runtime getNil Block NULL_BLOCK checkArity j + BinaryOperation Literal varLen runtime context self value MemberReference MemberReference subseqLight Block NULL_BLOCK checkArity runtime context self RubyArray MemberReference Literal newArrayLight Block NULL_BLOCK checkArity + BinaryOperation MemberReference ")" + Literal MemberReference " for " varLen valueLen runtime 0 + BinaryOperation Literal varLen "Wrong # of arguments (" valueLen + Literal MemberReference " for " "Wrong # of arguments (" valueLen	1
MethodDeclaration Modifier growIfNeeded StatementExpression public MethodInvocation MemberReference MemberReference growIfNeeded SIZE GROW_ERROR	0
MethodDeclaration Modifier Annotation ReferenceType callSuper FormalParameter FormalParameter FormalParameter ReturnStatement public Deprecated IRubyObject ReferenceType context ReferenceType args ReferenceType block MethodInvocation ThreadContext IRubyObject Block RuntimeHelpers MemberReference This MemberReference MemberReference invokeSuper context args block	1
MethodDeclaration Modifier BasicType scanHex FormalParameter FormalParameter FormalParameter ReturnStatement static public int BasicType bytes BasicType p BasicType len MethodInvocation byte int int MemberReference MemberReference MemberReference MemberReference scanHex bytes p len ASCIIEncoding INSTANCE	0
MethodDeclaration Modifier ReferenceType to_s FormalParameter ReturnStatement private final IRubyObject ReferenceType runtime MethodInvocation Ruby RubyString MemberReference MemberReference newStringShared runtime symbolBytes	1
MethodDeclaration Modifier update FormalParameter StatementExpression public Modifier BasicType b This final int MemberReference MethodInvocation intern MemberReference update b	0
MethodDeclaration Modifier ReferenceType case234_line911 FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment Assignment MemberReference Object Object int MemberReference Cast = MemberReference MethodInvocation = yyVal yyVal ReferenceType MemberReference yyVal support Cast Cast arg_blk_pass ListNode ArraySelector yyVals ReferenceType MemberReference ReferenceType MemberReference BinaryOperation Node yyVal BlockPassNode ArraySelector yyVals + Literal MemberReference BinaryOperation - 3 yyTop + Literal MemberReference 0 yyTop	1
MethodDeclaration Modifier validateArgs FormalParameter FormalParameter FormalParameter IfStatement LocalVariableDeclaration LocalVariableDeclaration IfStatement LocalVariableDeclaration IfStatement private static ReferenceType runtime ReferenceType targetClassName ReferenceType superClass MethodInvocation BlockStatement ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation BlockStatement ReferenceType VariableDeclarator BinaryOperation BlockStatement Ruby String Class Modifier MethodInvocation isFinal ThrowStatement String targetPackage MethodInvocation String pkg MethodInvocation pkg Literal startsWith ThrowStatement Package p MethodInvocation != MemberReference Literal IfStatement superClass getModifiers MethodInvocation MemberReference packageName targetPackage Literal Literal replace "java" MethodInvocation Package MemberReference getPackage p null MethodInvocation BlockStatement runtime BinaryOperation newTypeError targetClassName '.' '/' runtime BinaryOperation newTypeError pkg p isSealed ThrowStatement + Literal MethodInvocation + Literal MemberReference MethodInvocation "cannot extend final class " superClass getName "cannot add classes to package " pkg runtime BinaryOperation newTypeError + BinaryOperation Literal + Literal MemberReference " is sealed" "package " p	1
MethodDeclaration Modifier ReferenceType getID ReturnStatement public String MemberReference id	0
MethodDeclaration Modifier Annotation ReferenceType addr FormalParameter LocalVariableDeclaration IfStatement ReturnStatement public JRubyMethod IRubyObject ReferenceType context ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation ThreadContext InetSocketAddress address MethodInvocation == MemberReference Literal ThrowStatement MemberReference MemberReference addrFor getLocalSocket address null MethodInvocation context address context MethodInvocation getRuntime Literal newErrnoENOTSOCKError "Not socket or not connected"	0
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter IfStatement ReturnStatement public Override IRubyObject ReferenceType context ReferenceType caller ReferenceType self ReferenceType arg BinaryOperation BlockStatement SuperMethodInvocation ThreadContext IRubyObject IRubyObject IRubyObject instanceof MemberReference ReferenceType ReturnStatement MemberReference MemberReference MemberReference MemberReference call self RubyFixnum Cast context caller self arg ReferenceType MemberReference RubyFixnum self	0
MethodDeclaration Modifier Annotation BasicType equals FormalParameter IfStatement IfStatement LocalVariableDeclaration IfStatement ReturnStatement public Override boolean ReferenceType obj BinaryOperation BlockStatement BinaryOperation BlockStatement Modifier ReferenceType VariableDeclarator BinaryOperation BlockStatement Literal Object == MemberReference Literal ReturnStatement != MethodInvocation MethodInvocation ReturnStatement final RubyThread other Cast && BinaryOperation BinaryOperation ReturnStatement true obj null Literal getClass obj getClass Literal ReferenceType MemberReference != This MemberReference || BinaryOperation This Literal false false RubyThread obj MemberReference other threadImpl == This Literal ! MemberReference MethodInvocation false threadImpl MemberReference null threadImpl MemberReference equals threadImpl other threadImpl	1
MethodDeclaration Modifier Annotation ReferenceType length StatementExpression ReturnStatement public JRubyMethod ElementValuePair IRubyObject MethodInvocation MethodInvocation name ElementArrayValue checkFinalized MethodInvocation getRuntime Literal Literal MethodInvocation newFixnum "length" "size" internal MethodInvocation getByteList length	0
MethodDeclaration Modifier main FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement ForStatement static public ReferenceType args BasicType VariableDeclarator BasicType VariableDeclarator BinaryOperation BlockStatement ForControl BlockStatement String int times Literal int n Literal >= MemberReference Literal StatementExpression IfStatement VariableDeclaration BinaryOperation MemberReference StatementExpression 5 30 args length 1 Assignment BinaryOperation BlockStatement BasicType VariableDeclarator < MemberReference MemberReference ++ j MethodInvocation MemberReference MethodInvocation = >= MemberReference Literal StatementExpression int j Literal j times MemberReference benchFixnumFib times Integer MemberReference parseInt args length 2 Assignment 0 n ArraySelector args MemberReference MethodInvocation = Literal n Integer MemberReference parseInt 0 ArraySelector args Literal 1	0
MethodDeclaration Modifier ReferenceType yyDefault FormalParameter ReturnStatement protected Object ReferenceType first MemberReference Object first	0
MethodDeclaration Modifier ReferenceType case257_line991 FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop MethodInvocation Assignment MemberReference Object Object int support Cast checkExpression MemberReference ClassCreator = yyVal ReferenceType MemberReference yyVal ReferenceType MethodInvocation Cast Node ArraySelector yyVals BlockPassNode Cast getPosition ReferenceType MemberReference BinaryOperation ReferenceType MemberReference Node ArraySelector yyVals + Literal MemberReference Token ArraySelector yyVals BinaryOperation 0 yyTop BinaryOperation + Literal MemberReference + Literal MemberReference 0 yyTop - 1 yyTop	1
MethodDeclaration Modifier ReferenceType case336_line1243 FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment Assignment MemberReference Object Object int MemberReference ClassCreator = MemberReference Literal = yyVal yyVal ReferenceType MethodInvocation lexer commandStart true ZeroArgNode Cast getPosition ReferenceType MemberReference Token ArraySelector yyVals BinaryOperation + Literal MemberReference - 1 yyTop	1
MethodDeclaration Modifier Annotation ReferenceType convertToString ReturnStatement public Override RubyString This	0
MethodDeclaration Modifier ReferenceType getBodyNode ReturnStatement public Node MemberReference bodyNode	0
MethodDeclaration Modifier Annotation ReferenceType initialize FormalParameter StatementExpression ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType arg0 MethodInvocation This frame Literal visibility MemberReference IRubyObject MemberReference replace true Visibility PRIVATE arg0	0
MethodDeclaration Modifier BasicType isBindingFrame ReturnStatement public boolean MemberReference isBindingFrame	0
MethodDeclaration Modifier ReferenceType callCoerced FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement protected IRubyObject ReferenceType context ReferenceType method ReferenceType other BasicType err ReferenceType VariableDeclarator BinaryOperation BlockStatement MemberReference ThreadContext String IRubyObject boolean IRubyObject args MethodInvocation == MemberReference Literal ReturnStatement ArraySelector MethodInvocation args MemberReference MemberReference MemberReference getCoerced args null MethodInvocation Literal MemberReference MemberReference MemberReference callMethod context other err MethodInvocation getRuntime 0 context method ArraySelector args getNil Literal 1	0
MethodDeclaration Modifier BasicType getJitMax ReturnStatement public int MemberReference jitMax	0
MethodDeclaration Modifier ReferenceType newTime FormalParameter FormalParameter ReturnStatement static public RubyTime ReferenceType runtime ReferenceType dt ClassCreator Ruby DateTime ReferenceType MemberReference MethodInvocation MemberReference RubyTime runtime runtime getTime dt	0
MethodDeclaration Modifier Annotation ReferenceType put FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType ptr ReferenceType name ReferenceType value MethodInvocation MemberReference name Literal required Literal ThreadContext IRubyObject IRubyObject IRubyObject MethodInvocation MethodInvocation MemberReference getMember value "put" 3 MethodInvocation MemberReference MemberReference MemberReference put context getRuntime name context getRuntime nullStorage ptr value	0
MethodDeclaration Modifier ReferenceType getClassInitMethod IfStatement ReturnStatement public SkinnyMethodAdapter BinaryOperation BlockStatement MemberReference == MemberReference Literal StatementExpression clinitMethod clinitMethod null MethodInvocation beginClassInit	0
MethodDeclaration Modifier ReferenceType case329_line1254 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference Cast = yyVal yyVal ReferenceType MemberReference ListNode ArraySelector yyVals BinaryOperation + Literal MemberReference - 2 yyTop	1
MethodDeclaration Modifier ReferenceType resolveType FormalParameter FormalParameter IfStatement LocalVariableDeclaration LocalVariableDeclaration IfStatement LocalVariableDeclaration IfStatement IfStatement ReturnStatement static final Type ReferenceType context ReferenceType obj BinaryOperation BlockStatement Modifier ReferenceType VariableDeclarator Modifier ReferenceType VariableDeclarator BinaryOperation BlockStatement ReferenceType VariableDeclarator BinaryOperation BlockStatement BinaryOperation BlockStatement Cast ThreadContext IRubyObject instanceof MemberReference ReferenceType ReturnStatement final RubyModule ffi MethodInvocation final IRubyObject typeDefs MethodInvocation instanceof MemberReference ReferenceType ThrowStatement IRubyObject type Cast || BinaryOperation MethodInvocation StatementExpression instanceof MemberReference ReferenceType ThrowStatement ReferenceType MemberReference obj Type Cast context MethodInvocation getRuntime ffi Literal fastFetchConstant typeDefs RubyHash MethodInvocation ReferenceType MemberReference == MemberReference Literal type isNil Assignment type Type MethodInvocation Type type ReferenceType MemberReference Literal fastGetModule "TypeDefs" context MethodInvocation getRuntime RubyHash typeDefs type null MemberReference MethodInvocation = context MethodInvocation getRuntime Type obj "FFI" Literal newRuntimeError type ffi MemberReference Literal MemberReference callMethod BinaryOperation newTypeError "invalid or corrupted FFI::TypeDefs" context "find_type" obj + Literal MemberReference "Could not resolve type: " obj	1
MethodDeclaration setMath FormalParameter StatementExpression ReferenceType mathModule Assignment RubyModule This MemberReference = MemberReference mathModule mathModule	0
MethodDeclaration Modifier Annotation ReferenceType length ThrowStatement public JRubyMethod RubyFixnum MethodInvocation MethodInvocation getRuntime Literal newTypeError "not a java array"	1
MethodDeclaration Modifier beginMethod FormalParameter FormalParameter StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression IfStatement StatementExpression StatementExpression public ReferenceType args ReferenceType scope MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation BinaryOperation BlockStatement BlockStatement Assignment MethodInvocation CompilerCallback StaticScope method start method MemberReference aload Literal MethodInvocation invokeThreadContext method MethodInvocation astore method MethodInvocation aload Literal MethodInvocation invokeRuby method MethodInvocation astore == MemberReference Literal StatementExpression StatementExpression MemberReference ClassCreator = method MemberReference label StandardASMCompiler THREADCONTEXT_INDEX "getRuntime" ClassReference sig getRuntimeIndex getRuntimeIndex "getNil" ClassReference sig getNilIndex scope null MethodInvocation MethodInvocation redoJump ReferenceType scopeStart ReferenceType ReferenceType variableCompiler MemberReference This beginFlatClosure variableCompiler MemberReference MemberReference beginClosure Label Ruby IRubyObject args MemberReference args scope scope	0
MethodDeclaration Modifier ReferenceType accept FormalParameter ReturnStatement public Object ReferenceType iVisitor MethodInvocation NodeVisitor iVisitor This visitRetryNode	0
MethodDeclaration Modifier ReferenceType opElementAsgnWithMethod FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration StatementExpression ReturnStatement static public IRubyObject ReferenceType context ReferenceType self ReferenceType receiver ReferenceType args ReferenceType value ReferenceType elementSite ReferenceType opSite ReferenceType elementAsgnSite ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MemberReference ThreadContext IRubyObject IRubyObject IRubyObject IRubyObject CallSite CallSite CallSite IRubyObject var MethodInvocation IRubyObject result MethodInvocation elementAsgnSite MemberReference MemberReference MemberReference MethodInvocation call result elementSite MemberReference MemberReference MemberReference call opSite MemberReference MemberReference MemberReference MemberReference call context self receiver MemberReference MemberReference appendToObjectArray context self receiver context self var value args result	1
MethodDeclaration Modifier ReferenceType fetchConstant FormalParameter AssertStatement ReturnStatement public IRubyObject ReferenceType name MethodInvocation MethodInvocation String IdUtil MemberReference isConstant MemberReference constantTableFetch name name	1
MethodDeclaration Modifier testEnvCommand LocalVariableDeclaration IfStatement IfStatement IfStatement public ReferenceType VariableDeclarator MemberReference BlockStatement BinaryOperation BlockStatement MemberReference BlockStatement String command MethodInvocation Platform IS_WINDOWS_9X StatementExpression & MemberReference MemberReference StatementExpression ! Platform IS_WINDOWS StatementExpression Platform envCommand MethodInvocation Platform IS_WINDOWS ! Platform IS_WINDOWS_9X MethodInvocation MethodInvocation Literal Literal MemberReference assertEquals Literal Literal MemberReference assertEquals Literal Literal MemberReference assertEquals "Fails on Windows 95/98" "command.com /c set" command "Fails on Windows other than 95/98" "cmd.exe /c set" command "Fails on Non-Windows platform" "env" command	0
MethodDeclaration Modifier ReferenceType allocate FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType runtime ReferenceType klazz ClassCreator Ruby RubyClass ReferenceType MemberReference MemberReference InterfaceJavaProxy runtime klazz	0
MethodDeclaration Modifier Annotation ReferenceType select FormalParameter FormalParameter LocalVariableDeclaration ForStatement ReturnStatement public JRubyMethod RubyArray ReferenceType context ReferenceType block ReferenceType VariableDeclarator ForControl BlockStatement MemberReference ThreadContext Block RubyArray array MethodInvocation VariableDeclaration BinaryOperation MemberReference IfStatement array RubyArray MethodInvocation newArray BasicType VariableDeclarator < MemberReference MemberReference ++ i MethodInvocation BlockStatement context getRuntime int i Literal i values length block MethodInvocation MemberReference MemberReference yield StatementExpression 0 isTrue context ArraySelector values MethodInvocation MemberReference array MemberReference append i ArraySelector values MemberReference i	1
MethodDeclaration Modifier get FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression LocalVariableDeclaration ForStatement final public BasicType offset BasicType dst BasicType off BasicType len MethodInvocation BasicType VariableDeclarator ForControl BlockStatement long double int int MemberReference BinaryOperation checkBounds int begin MethodInvocation VariableDeclaration BinaryOperation MemberReference StatementExpression offset << MemberReference Literal MemberReference index BasicType VariableDeclarator < MemberReference MemberReference ++ i Assignment len 3 offset int i Literal i len MemberReference MethodInvocation = 0 ArraySelector dst IO MemberReference BinaryOperation getFloat64 BinaryOperation buffer + MemberReference BinaryOperation + MemberReference MemberReference begin << MemberReference Literal off i i 3	1
MethodDeclaration Modifier Annotation ReferenceType truncate ReturnStatement public JRubyMethod IRubyObject MethodInvocation MethodInvocation truncate RubyFixnum MethodInvocation zero getRuntime	0
MethodDeclaration Modifier testTaint StatementExpression StatementExpression StatementExpression public MethodInvocation MethodInvocation MethodInvocation MethodInvocation assertTrue rubyObject Literal setTaint MethodInvocation assertTrue ! rubyObject isTaint true rubyObject isTaint	1
MethodDeclaration Modifier ReferenceType case255_line984 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop MethodInvocation MemberReference Object Object int lexer MemberReference setState yyVal LexState EXPR_ENDARG	1
MethodDeclaration Modifier Annotation setUp StatementExpression public Override Assignment MemberReference MethodInvocation = runtime Ruby newInstance	0
MethodDeclaration Modifier ReferenceType loadPaths ReturnStatement public List TypeArgument MemberReference ReferenceType loadPaths String	0
MethodDeclaration Modifier invokeOpElementAsgnWithMethod FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression public ReferenceType operatorName ReferenceType receiverCallback ReferenceType argsCallback MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation String CompilerCallback ArgumentsCallback methodCompiler loadThreadContext methodCompiler loadSelf receiverCallback MemberReference call argsCallback MemberReference call methodCompiler MethodInvocation MethodInvocation getScriptCompiler methodCompiler MethodInvocation MethodInvocation getScriptCompiler methodCompiler MethodInvocation MethodInvocation getScriptCompiler methodCompiler Literal MethodInvocation invokeUtilityMethod methodCompiler methodCompiler getCacheCompiler MemberReference Literal MemberReference cacheCallSite getCacheCompiler MemberReference MemberReference MemberReference cacheCallSite getCacheCompiler MemberReference Literal MemberReference cacheCallSite "opElementAsgnWithMethod" ClassReference ClassReference ClassReference ClassReference ClassReference ClassReference ClassReference ClassReference sig methodCompiler "[]" CallType FUNCTIONAL methodCompiler operatorName CallType FUNCTIONAL methodCompiler "[]=" CallType NORMAL ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType IRubyObject ThreadContext IRubyObject IRubyObject IRubyObject CallSite CallSite CallSite	0
MethodDeclaration Modifier ReferenceType getVersionString ReturnStatement public String MethodInvocation ruby MethodInvocation MethodInvocation get getInstanceConfig getVersionString	0
MethodDeclaration Modifier Annotation ReferenceType op_plus FormalParameter FormalParameter IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType other BinaryOperation BlockStatement IfStatement MethodInvocation name Literal required Literal ThreadContext IRubyObject instanceof MemberReference ReferenceType ReturnStatement BinaryOperation BlockStatement IfStatement MemberReference MemberReference addOther "+" 1 other RubyFixnum MethodInvocation instanceof MemberReference ReferenceType ReturnStatement BinaryOperation BlockStatement context other Cast addFixnum other RubyBignum MethodInvocation instanceof MemberReference ReferenceType ReturnStatement ReferenceType MemberReference Cast addBignum other RubyFloat MethodInvocation RubyFixnum other ReferenceType MemberReference Cast addFloat RubyBignum other ReferenceType MemberReference RubyFloat other	1
MethodDeclaration Modifier Annotation ReferenceType getBlockCallback FormalParameter FormalParameter TryStatement public Deprecated CompiledBlockCallback ReferenceType method Modifier ReferenceType scriptObject LocalVariableDeclaration ReturnStatement CatchClause String final Object Modifier ReferenceType VariableDeclarator ClassCreator CatchClauseParameter ThrowStatement final Method blockMethod MethodInvocation ReferenceType MethodDeclaration NoSuchMethodException nsme ClassCreator scriptObject MethodInvocation getClass CompiledBlockCallback Modifier ReferenceType call FormalParameter FormalParameter FormalParameter TryStatement ReferenceType MemberReference MemberReference ArrayCreator getMethod public IRubyObject ReferenceType context ReferenceType self ReferenceType args ReturnStatement CatchClause CatchClause CatchClause RuntimeException nsme method ReferenceType ArrayInitializer ThreadContext IRubyObject IRubyObject Cast CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement CatchClauseParameter LocalVariableDeclaration IfStatement Class ClassReference ClassReference ClassReference ReferenceType MethodInvocation IllegalAccessException ex ClassCreator IllegalArgumentException ex ClassCreator InvocationTargetException ex ReferenceType VariableDeclarator BinaryOperation BlockStatement IfStatement ReferenceType ReferenceType ReferenceType IRubyObject blockMethod MemberReference ArrayCreator invoke ReferenceType MemberReference ReferenceType MemberReference Throwable cause MethodInvocation instanceof MemberReference ReferenceType ThrowStatement BinaryOperation BlockStatement BlockStatement ThreadContext IRubyObject IRubyObject scriptObject ReferenceType ArrayInitializer RuntimeException ex RuntimeException ex ex getCause cause RuntimeException Cast instanceof MemberReference ReferenceType ThrowStatement ThrowStatement Object MemberReference MemberReference MemberReference ReferenceType MemberReference cause Error Cast ClassCreator context self args RuntimeException cause ReferenceType MemberReference ReferenceType MemberReference Error cause RuntimeException ex	1
MethodDeclaration Modifier ReferenceType case64_line530 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference ClassCreator = yyVal yyVal ReferenceType MethodInvocation Cast Literal MultipleAsgnNode Cast getPosition ReferenceType MemberReference null ReferenceType MemberReference ListNode ArraySelector yyVals ListNode ArraySelector yyVals BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference 0 yyTop 0 yyTop	1
MethodDeclaration Modifier setKCode FormalParameter StatementExpression public ReferenceType kcode Assignment KCode This MemberReference = MemberReference kcode kcode	0
MethodDeclaration Modifier BasicType accept FormalParameter FormalParameter ReturnStatement public boolean ReferenceType types ReferenceType args MethodInvocation Class TypeArgument IRubyObject MemberReference MemberReference assignableAndPrimitivable ? types args	0
MethodDeclaration Modifier BasicType yyTable2 ReturnStatement private static final short ArrayCreator BasicType ArrayInitializer short Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal 540 540 540 540 540 244 540 540 540 0 244 244 244 244 244 244 353 0 0 244 0 244 244 0 244 244 244 244 244 0 244 277 277 277 244 244 277 277 277 244 277 244 244 244 244 244 244 244 0 0 277 277 244 244 244 244 244 244 244 277 277 244 277 277 277 277 277 0 244 0 0 244 244 244 0 244 244 244 244 244 244 244 244 244 244 244 277 277 277 277 277 277 277 277 277 277 277 277 277 277 0 0 277 277 277 244 0 277 244 0 277 244 244 277 244 277 244 277 244 277 244 277 277 277 277 277 277 277 244 277 518 277 0 244 244 244 244 244 244 0 518 0 244 0 244 244 0 244 244 248 248 248 0 0 248 248 248 0 248 0 0 0 0 0 0 0 0 0 248 248 0 0 0 0 82 0 0 248 248 0 248 248 248 248 248 0 0 0 0 518 0 90 0 518 0 0 0 0 0 0 0 328 329 330 331 332 333 334 335 336 337 338 0 339 340 0 0 341 342 0 0 518 0 0 0 0 0 0 248 0 0 248 343 248 344 0 345 346 347 348 349 350 351 0 352 0 0 0 0 248 705 0 0 519 0 0 0 0 0 0 0 0 0 519 0 0 0 0 0 0 328 329 330 331 332 333 334 335 336 337 338 0 339 340 0 0 341 342 0 0 0 0 0 0 0 0 0 84 0 0 0 343 0 344 0 345 346 347 348 349 350 351 519 352 92 0 519 0 0 0 583 550 0 0 584 0 0 0 165 166 0 167 168 169 170 171 172 173 0 0 174 175 0 0 519 176 177 178 179 0 0 0 0 0 258 0 0 0 0 0 102 181 182 0 183 184 185 186 187 188 189 190 191 192 193 0 41 194 0 0 0 0 0 0 0 0 41 518 518 518 0 518 518 518 518 518 518 0 518 518 518 518 518 518 518 518 518 518 518 102 518 0 0 518 518 518 518 518 518 518 518 518 518 518 518 518 518 518 0 518 0 0 518 518 518 41 518 518 518 518 518 518 518 518 518 518 518 518 518 518 518 518 518 518 518 518 518 518 518 518 518 0 0 518 518 518 518 0 0 518 518 518 518 518 0 518 0 518 518 518 518 518 518 518 518 518 518 518 518 518 518 518 518 0 518 518 518 518 518 518 0 0 0 518 0 518 518 353 518 518 519 519 519 0 519 519 519 519 519 519 0 519 519 519 519 519 519 519 519 519 519 519 0 519 0 0 519 519 519 519 519 519 519 519 519 519 519 519 519 519 519 0 519 0 0 519 519 519 0 519 519 519 519 519 519 519 519 519 519 519 519 519 519 519 519 519 519 519 519 519 519 519 519 519 0 0 519 519 519 519 0 0 519 519 519 519 519 0 519 0 519 519 519 519 519 519 519 519 519 519 519 519 519 519 519 519 0 519 519 519 519 519 519 522 0 0 519 0 519 519 0 519 519 522 0 0 0 0 41 41 41 0 0 41 41 41 0 41 0 0 0 0 0 0 0 0 102 41 102 102 102 102 0 0 0 0 0 83 0 41 41 41 41 41 0 0 0 0 447 0 0 0 522 0 91 447 522 0 0 102 102 0 0 0 0 0 0 102 102 102 102 0 0 0 0 0 0 0 0 0 0 0 0 0 522 0 0 41 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 41 0 0 710 0 0 0 0 270 0 0 0 0 0 0 0 0 0 270 0 0 0 0 328 329 330 331 332 333 334 335 336 337 338 0 339 340 0 0 341 342 0 0 0 0 0 0 0 0 0 0 0 85 0 343 0 344 0 345 346 347 348 349 350 351 0 352 270 0 93 0 270 0 0 0 604 544 0 0 605 0 0 0 165 166 0 167 168 169 170 171 172 173 0 0 174 175 0 0 270 176 177 178 179 0 0 0 0 0 258 0 0 0 0 0 0 181 182 0 183 184 185 186 187 188 189 190 191 192 193 0 540 194 0 0 0 0 0 0 0 0 540 518 518 518 0 518 522 522 522 518 518 0 522 522 518 522 518 518 518 518 518 518 518 0 522 0 0 518 518 518 518 518 518 518 522 522 518 522 522 522 522 522 0 518 0 0 518 518 518 540 518 518 518 518 518 518 518 518 518 518 518 522 522 522 522 522 522 522 522 522 522 522 522 522 522 0 0 522 522 522 518 0 0 518 518 522 518 518 0 518 0 518 522 518 522 518 522 522 522 522 522 522 522 518 522 522 522 0 518 518 518 518 518 518 0 0 0 518 0 518 518 0 518 518 519 519 519 0 519 270 270 270 519 519 0 270 270 519 270 519 519 519 519 519 519 519 0 0 0 0 519 519 519 519 519 519 519 270 270 519 270 270 270 270 270 0 519 0 0 519 519 519 289 519 519 519 519 519 519 519 519 519 519 519 270 270 270 270 270 270 270 270 270 270 270 270 270 270 0 0 270 270 270 519 0 0 519 519 270 519 519 0 519 0 519 270 519 270 519 270 270 270 270 270 270 270 519 270 0 270 0 519 519 519 519 519 519 0 0 0 519 0 519 519 0 519 519 244 244 244 0 244 540 540 540 244 244 540 540 540 244 540 244 244 244 244 244 244 244 0 0 540 0 244 244 244 244 244 244 244 540 540 244 540 540 540 540 540 0 244 0 0 244 244 244 0 244 244 244 244 244 244 244 244 244 244 244 0 0 0 0 0 0 0 0 0 0 384 540 0 0 0 0 0 0 540 244 384 0 244 0 540 244 244 0 244 0 244 0 244 0 244 0 0 0 0 0 0 0 244 0 0 540 0 244 244 244 244 244 244 0 384 0 244 0 244 244 0 244 244 0 0 0 0 0 384 384 0 89 0 384 0 0 0 0 4 5 6 0 8 0 0 0 9 10 0 0 0 11 0 12 13 14 99 100 17 18 0 384 0 0 101 102 103 22 23 24 25 383 0 104 0 0 0 0 0 0 105 383 0 31 32 33 0 34 35 36 37 38 39 0 40 0 0 108 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 383 0 288 0 0 111 0 0 46 47 0 48 0 0 383 383 0 0 0 383 0 0 0 0 0 0 0 0 0 0 52 53 54 55 56 57 0 0 0 58 0 59 60 0 61 62 0 383 0 0 0 0 764 0 0 0 0 0 0 0 0 0 777 0 0 781 0 0 0 0 456 0 0 0 0 0 0 0 0 0 456 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 456 0 0 384 384 384 0 0 384 384 384 0 384 0 456 456 0 88 0 456 0 384 384 384 0 0 0 0 0 0 0 384 384 0 384 384 384 384 384 0 0 0 0 0 0 0 384 456 0 0 0 0 0 0 0 0 0 0 384 384 384 384 384 384 384 384 384 384 384 384 384 384 0 0 384 384 384 0 0 384 0 0 384 0 0 384 0 384 0 384 540 384 0 384 384 384 384 384 384 384 540 384 384 384 383 383 383 0 0 383 383 383 884 383 886 384 887 0 0 0 890 0 383 383 383 895 0 0 0 0 0 0 383 383 540 383 383 383 383 383 0 0 0 0 0 0 0 383 540 540 0 0 0 540 0 0 0 0 0 383 383 383 383 383 383 383 383 383 383 383 383 383 383 0 0 383 383 383 0 0 383 540 930 383 0 0 383 0 383 933 383 935 383 936 383 383 383 383 383 383 383 0 383 383 383 0 0 0 0 0 943 0 0 0 0 0 383 0 456 456 456 0 0 456 456 456 0 456 0 0 0 0 0 0 0 0 0 456 456 0 0 0 0 0 0 0 456 456 0 456 456 456 456 456 0 0 0 0 0 0 0 456 0 0 0 0 0 0 0 0 0 0 0 456 456 456 456 456 456 456 456 456 456 456 456 456 456 0 264 456 456 456 0 457 456 0 0 456 264 0 456 0 456 0 456 0 456 0 456 456 456 456 456 456 456 0 456 0 456 0 0 0 0 0 0 0 0 0 0 0 456 0 264 0 0 0 0 0 0 0 0 0 0 0 0 0 264 264 0 95 0 264 540 540 540 0 0 540 540 540 0 540 0 0 0 0 0 0 0 0 540 540 540 0 0 0 0 0 0 264 540 540 0 540 540 540 540 540 0 0 0 0 0 0 0 540 0 0 0 0 0 0 0 0 0 0 0 540 540 540 540 540 540 540 540 540 540 540 540 540 540 0 271 540 540 540 0 0 540 0 0 540 271 0 540 0 540 0 540 0 540 0 540 540 540 540 540 540 540 0 540 540 540 0 0 0 0 0 0 0 0 0 0 0 540 0 271 0 0 0 0 0 0 0 0 0 0 0 606 550 271 271 607 94 0 271 165 166 0 167 168 169 170 171 172 173 0 0 174 175 0 0 0 176 177 178 179 0 0 0 0 0 258 271 0 0 0 0 0 181 182 0 183 184 185 186 187 188 189 190 191 192 193 0 0 194 404 0 0 0 0 0 0 0 0 0 404 0 0 0 264 264 264 0 0 264 264 264 0 264 0 0 0 0 0 0 0 0 0 264 264 0 0 0 0 0 0 0 264 264 404 264 264 264 264 264 0 0 0 0 0 0 0 264 404 404 0 0 0 404 0 0 0 0 0 264 264 264 264 264 264 264 264 264 264 264 264 264 264 0 0 264 264 264 0 0 264 404 0 264 0 0 264 0 264 0 264 282 264 0 264 264 264 264 264 264 264 282 264 0 264 0 0 0 0 0 0 0 0 0 0 0 264 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 282 0 0 271 271 271 0 0 271 271 271 0 271 0 282 282 0 0 0 282 0 0 271 271 0 0 0 0 0 0 0 271 271 0 271 271 271 271 271 0 0 0 0 0 0 0 271 282 0 0 0 0 0 0 0 0 0 0 271 271 271 271 271 271 271 271 271 271 271 271 271 271 0 0 271 271 271 0 0 271 0 0 271 0 0 271 0 271 0 271 0 271 0 271 271 271 271 271 271 271 228 271 0 271 0 0 0 0 0 0 228 0 0 0 0 271 0 404 404 404 0 0 404 404 404 0 404 0 0 0 0 0 0 0 0 0 404 404 0 0 0 0 0 0 228 404 404 0 404 404 404 404 404 0 0 0 0 0 228 228 404 0 0 228 0 0 0 0 0 0 0 0 404 404 404 404 404 404 404 404 404 404 404 404 404 404 0 0 404 404 404 314 0 404 0 0 404 0 0 404 0 404 0 404 277 404 0 404 404 404 404 404 404 404 277 404 0 404 282 282 282 0 0 282 282 282 0 282 0 404 0 0 0 0 0 0 0 282 282 0 0 0 0 0 0 0 282 282 277 282 282 282 282 282 0 0 0 0 0 0 0 282 277 277 0 0 0 277 0 0 0 0 0 282 282 282 282 282 282 282 282 282 282 282 282 282 282 0 0 282 282 282 0 0 282 277 0 282 0 0 282 0 282 0 282 0 282 0 282 282 282 282 282 282 282 0 282 442 282 0 0 0 0 0 0 0 0 442 0 0 282 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 442 228 228 228 0 0 228 228 228 0 228 0 0 0 442 442 0 0 0 442 228 228 0 0 0 0 0 0 0 228 228 0 228 228 228 228 228 0 0 0 0 0 0 0 228 0 0 442 0 0 0 0 0 0 0 0 228 228 228 228 228 228 228 228 228 228 228 314 228 228 0 0 228 228 314 0 0 228 0 0 228 0 0 228 0 228 0 228 443 228 0 228 228 228 228 228 228 228 443 228 0 228 0 0 0 277 277 277 0 0 277 277 277 228 277 0 0 0 0 0 0 0 0 0 277 277 0 0 0 0 0 0 443 277 277 0 277 277 277 277 277 0 0 0 0 0 443 443 277 0 0 443 0 0 0 0 0 0 0 0 277 277 277 277 277 277 277 277 277 277 277 277 277 277 0 0 277 277 277 443 0 277 0 0 277 0 0 277 0 277 0 277 0 277 0 277 277 277 277 277 277 277 0 277 206 277 0 0 0 0 0 0 0 0 206 0 0 277 442 442 442 0 0 442 442 442 0 442 0 0 0 0 0 0 0 0 0 442 442 0 0 0 0 0 0 0 442 442 206 442 442 442 442 442 0 0 0 0 0 0 0 442 206 206 0 0 0 206 0 0 0 0 0 0 442 442 442 442 442 442 442 442 442 442 442 442 442 0 0 442 442 442 0 0 442 0 0 442 0 0 442 0 442 0 442 202 442 0 442 442 442 442 442 442 442 202 442 0 442 0 0 0 0 0 0 0 0 0 0 0 442 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 202 443 443 443 0 0 443 443 443 0 443 0 0 0 202 202 0 0 0 202 443 443 0 0 0 0 0 0 0 443 443 0 443 443 443 443 443 0 0 0 0 0 0 0 443 0 0 0 0 0 0 0 0 0 0 0 0 443 443 443 443 443 443 443 443 443 443 443 443 443 0 199 443 443 443 0 0 443 0 0 443 199 0 443 0 443 0 443 0 443 0 443 443 443 443 443 443 443 0 443 0 443 0 0 0 0 0 0 0 0 0 0 0 443 0 199 0 206 206 206 0 0 206 206 206 0 206 0 0 199 199 0 0 0 199 0 206 206 0 0 0 0 0 0 0 206 206 0 206 206 206 206 206 0 0 0 0 0 0 0 206 0 0 0 0 0 0 0 0 0 0 0 0 206 206 206 206 206 206 206 206 206 206 0 206 206 0 0 206 206 0 0 0 206 0 0 206 0 0 206 0 206 0 206 201 206 0 206 206 206 206 206 206 206 201 206 0 206 202 202 202 0 0 202 202 202 0 202 0 206 0 0 0 0 0 0 0 202 202 0 0 0 0 0 0 0 202 202 201 202 202 202 202 202 0 0 0 0 0 0 0 202 201 201 0 0 0 201 0 0 0 0 0 0 202 202 202 202 202 202 202 202 202 202 0 202 202 0 0 202 202 0 0 0 202 0 0 202 0 0 202 0 202 0 202 0 202 0 202 202 202 202 202 202 202 0 202 0 202 200 0 0 0 0 0 0 0 0 0 200 202 0 0 199 199 199 0 0 199 199 199 0 199 0 0 0 0 0 0 0 0 0 199 199 0 0 0 0 0 0 0 199 199 200 199 199 199 199 199 0 0 0 0 0 0 0 199 200 200 0 0 0 200 0 0 0 0 0 0 199 199 199 199 199 199 199 199 199 199 0 199 199 0 0 199 199 0 0 0 199 0 0 199 0 0 199 0 199 0 199 203 199 0 199 199 199 199 199 199 199 203 199 0 199 0 0 0 0 0 0 0 0 0 0 0 199 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 203 0 201 201 201 0 0 201 201 201 0 201 0 0 203 203 0 0 0 203 0 201 201 0 0 0 0 0 0 0 201 201 0 201 201 201 201 201 0 0 0 0 0 0 0 201 0 0 0 0 0 0 0 0 0 0 0 0 201 201 201 201 201 201 201 201 201 201 0 201 201 0 204 201 201 0 0 0 201 0 0 201 204 0 201 0 201 0 201 0 201 0 201 201 201 201 201 201 201 0 201 0 201 0 0 0 0 0 0 0 0 0 0 0 201 0 204 200 200 200 0 0 200 200 200 0 200 0 0 0 204 204 0 0 0 204 200 200 0 0 0 0 0 0 0 200 200 0 200 200 200 200 200 0 0 0 0 0 0 0 200 0 0 0 0 0 0 0 0 0 0 0 0 200 200 200 200 200 200 200 200 200 200 0 200 200 0 0 200 200 0 0 0 200 0 0 200 0 0 200 0 200 0 200 197 200 0 200 200 200 200 200 200 200 197 200 0 200 203 203 203 0 0 203 203 203 0 203 0 200 0 0 0 0 0 0 0 203 203 0 0 0 0 0 0 0 203 203 197 203 203 203 203 203 0 0 0 0 0 0 0 203 197 197 0 0 0 197 0 0 0 0 0 0 203 203 203 203 203 203 203 203 203 203 0 203 203 0 0 203 203 0 0 0 203 0 0 203 0 0 203 0 203 0 203 0 203 0 203 203 203 203 203 203 203 0 203 198 203 0 0 0 0 0 0 0 0 198 0 0 203 0 0 0 204 204 204 0 0 204 204 204 0 204 0 0 0 0 0 0 0 0 0 204 204 0 0 0 0 0 0 198 204 204 0 204 204 204 204 204 0 0 0 0 0 198 198 204 0 0 198 0 0 0 0 0 0 0 0 0 204 204 204 204 204 204 204 204 204 204 0 204 204 0 0 204 204 0 0 0 204 0 0 204 0 0 204 0 204 0 204 222 204 0 204 204 204 204 204 204 204 222 204 0 204 0 0 0 0 0 0 0 0 0 0 0 204 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 222 197 197 197 0 0 197 197 197 0 197 0 0 0 222 222 0 0 0 222 197 197 0 0 0 0 0 0 0 197 197 0 197 197 197 197 197 0 0 0 0 0 0 0 197 0 0 0 0 0 0 0 0 0 0 0 0 197 197 197 197 197 197 197 197 197 197 0 197 197 0 0 197 197 0 0 0 197 223 0 197 0 0 197 0 197 0 0 223 197 0 0 0 197 197 197 197 197 0 197 0 197 0 0 0 0 0 0 0 0 0 0 0 197 198 198 198 0 0 198 198 198 223 198 0 0 0 0 0 0 0 0 0 198 198 0 223 223 0 0 0 223 198 198 0 198 198 198 198 198 0 0 0 0 0 0 0 198 0 0 0 0 0 0 0 0 0 0 0 0 198 198 198 198 198 198 198 198 198 198 0 198 198 0 0 198 198 0 0 0 198 0 0 198 0 0 198 0 198 0 0 209 198 0 0 0 198 198 198 198 198 209 198 0 198 0 0 0 222 222 222 0 0 222 222 222 198 222 0 0 0 0 0 0 0 0 0 222 222 0 0 0 0 0 0 209 222 222 0 222 222 222 222 222 0 0 0 0 0 209 209 222 0 0 209 0 0 0 0 0 0 0 0 0 222 222 222 222 222 222 222 222 222 222 0 222 222 0 0 222 222 0 0 0 222 0 0 222 0 0 222 0 222 0 0 0 222 0 0 0 0 0 222 222 222 0 222 0 222 207 0 0 0 0 0 0 0 0 0 207 222 0 0 0 0 0 0 0 0 0 223 223 223 0 0 223 223 223 0 223 0 0 0 0 0 0 0 0 0 223 223 0 0 207 0 0 0 0 223 223 0 223 223 223 223 223 0 207 207 0 0 0 207 223 0 0 0 0 0 0 0 0 0 0 0 0 223 223 223 223 223 223 223 223 223 223 0 223 223 0 0 223 223 0 0 0 223 0 0 223 0 0 223 0 223 0 0 208 223 0 0 0 0 0 223 223 223 208 223 0 223 0 0 0 0 0 0 0 0 0 0 0 223 0 0 0 0 0 0 0 0 0 0 209 209 209 0 0 209 209 209 208 209 0 0 0 0 0 0 0 0 0 209 209 0 208 208 0 0 0 208 209 209 0 209 209 209 209 209 0 0 0 0 0 0 0 209 0 0 0 0 0 0 0 0 0 0 0 0 209 209 209 209 209 209 209 209 209 209 0 209 209 0 0 0 0 212 0 0 209 0 0 209 0 0 209 212 209 0 0 0 209 0 0 0 0 0 209 209 209 0 209 0 209 0 0 0 0 0 0 0 0 0 0 0 209 0 0 0 0 212 207 207 207 0 0 207 207 207 0 207 0 0 0 212 212 0 0 0 212 207 207 0 0 0 0 0 0 0 207 207 0 207 207 207 207 207 0 0 0 0 0 0 0 207 0 0 0 0 0 0 0 0 0 0 0 0 207 207 207 207 207 207 207 207 207 207 0 207 207 0 0 0 0 0 0 214 207 0 0 207 0 0 207 0 207 214 0 0 0 0 0 0 0 0 207 207 207 0 207 0 207 0 0 0 0 0 0 0 208 208 208 0 207 208 208 208 0 208 0 214 0 0 0 0 0 0 0 208 208 0 0 0 0 214 214 0 208 208 214 208 208 208 208 208 0 0 0 0 0 0 0 208 0 0 0 0 0 0 0 0 0 0 0 0 208 208 208 208 208 208 208 208 208 208 0 208 208 0 0 0 0 0 0 0 208 0 0 208 0 0 208 0 208 0 0 213 0 0 0 0 0 0 208 208 208 213 208 0 208 0 0 0 0 0 0 0 0 212 212 212 208 0 212 212 212 0 212 0 0 0 0 0 0 0 0 0 212 212 0 213 0 0 0 0 0 212 212 0 212 212 212 212 212 213 213 0 0 0 213 0 212 0 0 0 0 0 0 0 0 0 0 0 0 212 212 212 212 212 212 212 212 212 212 0 212 212 0 0 0 0 0 0 211 212 0 0 212 0 0 212 0 212 211 0 0 0 0 0 0 0 0 212 212 0 0 0 0 212 0 0 0 0 0 0 0 0 0 0 0 212 0 0 0 0 0 0 211 214 214 214 0 0 214 214 214 0 214 0 0 0 211 211 0 0 0 211 214 214 0 0 0 0 0 0 0 214 214 0 214 214 214	1
MethodDeclaration Modifier ReferenceType convertToInteger FormalParameter LocalVariableDeclaration IfStatement ReturnStatement public RubyInteger ReferenceType convertMethod ReferenceType VariableDeclarator BinaryOperation ThrowStatement Cast String IRubyObject val MethodInvocation instanceof MemberReference ReferenceType MethodInvocation ReferenceType MemberReference TypeConverter This MethodInvocation MemberReference Literal convertToType val RubyInteger MethodInvocation getRuntime RubyInteger val MethodInvocation getRuntime convertMethod true BinaryOperation newTypeError getInteger + BinaryOperation Literal + BinaryOperation MemberReference " should return Integer" + MethodInvocation Literal convertMethod MethodInvocation getMetaClass "#" getName	1
MethodDeclaration Modifier ReferenceType getKey ReturnStatement public Object MethodInvocation MethodInvocation unmaskKey getMaskedKey	0
MethodDeclaration Modifier ReferenceType get FormalParameter ReturnStatement public Object ReferenceType object Cast Object ReferenceType MemberReference IRubyObject object	0
MethodDeclaration Modifier BasicType alwaysFalse SwitchStatement public boolean This SwitchStatementCase SwitchStatementCase NILNODE FALSENODE ReturnStatement ReturnStatement Literal Literal true false	0
MethodDeclaration Modifier ReferenceType case429_line1603 FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop MethodInvocation Assignment MemberReference Object Object int yyerrok MemberReference Literal = yyVal yyVal null	1
MethodDeclaration Modifier ifgt FormalParameter StatementExpression public ReferenceType arg0 MethodInvocation Label MethodInvocation getMethodVisitor MemberReference MemberReference visitJumpInsn IFGT arg0	0
MethodDeclaration Modifier call FormalParameter StatementExpression public ReferenceType context MethodInvocation BodyCompiler MemberReference MemberReference Literal compile superNode context true	0
MethodDeclaration Modifier ReferenceType allocate FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType runtime ReferenceType klass ClassCreator Ruby RubyClass ReferenceType MemberReference MemberReference RubyDir runtime klass	0
MethodDeclaration Modifier Annotation checkFrozen StatementExpression IfStatement protected Override MethodInvocation MethodInvocation ThrowStatement checkInitialized internal isFrozen MethodInvocation MethodInvocation getRuntime Literal newIOError "not modifiable string"	1
MethodDeclaration Modifier simplifyOperands FormalParameter StatementExpression ForStatement public ReferenceType valueMap SuperMethodInvocation ForControl BlockStatement Map TypeArgument TypeArgument MemberReference simplifyOperands VariableDeclaration BinaryOperation MemberReference StatementExpression ReferenceType ReferenceType valueMap BasicType VariableDeclarator < MemberReference MemberReference ++ i Assignment Operand Operand int i Literal i variables length MemberReference MemberReference = 0 ArraySelector variables ArraySelector MethodInvocation variables MemberReference MemberReference MemberReference getSimplifiedOperand i i valueMap	0
MethodDeclaration Modifier Annotation ReferenceType getArgValues IfStatement LocalVariableDeclaration IfStatement public Override IRubyObject MethodInvocation BlockStatement BasicType VariableDeclarator BinaryOperation BlockStatement BlockStatement ! staticScope isArgumentScope ReturnStatement int totalArgs BinaryOperation < MethodInvocation Literal IfStatement LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression IfStatement ReturnStatement MethodInvocation + MethodInvocation MethodInvocation staticScope getRestArg 0 BinaryOperation BlockStatement BlockStatement ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation BinaryOperation BlockStatement MemberReference parent getArgValues staticScope getRequiredArgs staticScope getOptionalArgs == MemberReference Literal ReturnStatement ReturnStatement IRubyObject restArg MethodInvocation RubyArray splattedArgs MethodInvocation IRubyObject argValues ArrayCreator System MethodInvocation Literal MemberReference MemberReference MethodInvocation arraycopy == MemberReference Literal StatementExpression argValues totalArgs 1 ArrayCreator MemberReference MethodInvocation Literal getValue RuntimeHelpers MemberReference splatValue ReferenceType BinaryOperation splattedArgs toJavaArray 0 argValues totalArgs splattedArgs size totalArgs 1 Assignment ReferenceType ArrayInitializer IRubyObject NULL_ARRAY staticScope getRestArg 0 restArg IRubyObject + MemberReference MethodInvocation MemberReference MemberReference = IRubyObject MemberReference totalArgs splattedArgs size ArraySelector argValues variableValueZero variableValueZero Literal 0	1
MethodDeclaration Modifier Annotation ReferenceType cloneBlock FormalParameter ReturnStatement public Override Block ReferenceType binding ClassCreator Binding ReferenceType This MemberReference Block binding	0
MethodDeclaration Modifier BasicType isPrintable FormalParameter ReturnStatement private static final boolean BasicType aChar BinaryOperation byte && BinaryOperation BinaryOperation > MemberReference Literal < MemberReference Literal aChar 32 aChar 127	1
MethodDeclaration Modifier Annotation BasicType getLongValue ReturnStatement public Override long MemberReference value	1
MethodDeclaration Modifier ReferenceType getNodeType ReturnStatement public NodeType MemberReference NodeType OPASGNNODE	0
MethodDeclaration Modifier Annotation ReferenceType readline FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType separator ReferenceType VariableDeclarator MethodInvocation ThrowStatement MemberReference name Literal writes MemberReference ThreadContext IRubyObject IRubyObject line MethodInvocation line isNil MethodInvocation line "readline" FrameField LASTLINE MemberReference MemberReference gets context MethodInvocation getRuntime context separator newEOFError	1
MethodDeclaration Modifier ReferenceType setVariable8 FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement final public IRubyObject ReferenceType runtime ReferenceType name ReferenceType object ReferenceType value MethodInvocation Ruby String IRubyObject IRubyObject runtimeCache MemberReference Literal MemberReference MemberReference MemberReference setVariable runtime 8 name object value	0
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType context ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 ReferenceType arg3 ReferenceType arg4 ReferenceType arg5 ReferenceType arg6 ReferenceType arg7 ReferenceType arg8 ReferenceType binding ReferenceType type ReferenceType unusedBlock MethodInvocation ThreadContext IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject Binding Block ReferenceType Block MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference call Type context arg0 arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8 binding type	1
MethodDeclaration ReferenceType initMethod FormalParameter FormalParameter FormalParameter LocalVariableDeclaration TryStatement JavaProxyMethod ReferenceType name ReferenceType desc BasicType hasSuper ReferenceType VariableDeclarator LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement LocalVariableDeclaration StatementExpression LocalVariableDeclaration IfStatement StatementExpression ReturnStatement CatchClause CatchClause CatchClause String String boolean Class proxy MemberReference ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MemberReference BlockStatement ReferenceType VariableDeclarator MethodInvocation ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation MemberReference CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement proxyClass Class parms MethodInvocation Method m MethodInvocation Method sm Literal hasSuper StatementExpression JavaProxyMethod jpm ClassCreator methods MemberReference add List TypeArgument methodsWithName MethodInvocation == MemberReference Literal StatementExpression StatementExpression methodsWithName MemberReference add jpm ClassNotFoundException e ClassCreator SecurityException e ClassCreator NoSuchMethodException e ClassCreator MethodInvocation MemberReference parse proxy MemberReference MemberReference getDeclaredMethod null Assignment ReferenceType MethodInvocation This MemberReference MemberReference jpm ReferenceType methodMap MemberReference get methodsWithName null Assignment MethodInvocation jpm ReferenceType MethodInvocation ReferenceType MethodInvocation ReferenceType MethodInvocation proxy getClassLoader desc name parms MemberReference MethodInvocation = ProxyMethodImpl getRuntime m sm JavaProxyMethod name MemberReference ClassCreator = methodMap MemberReference MemberReference put InternalError e getMessage InternalError e getMessage InternalError e getMessage sm proxy BinaryOperation MemberReference getDeclaredMethod methodsWithName ReferenceType Literal name methodsWithName + Literal MemberReference parms ArrayList TypeArgument 2 "__super$" name ReferenceType JavaProxyMethod	1
MethodDeclaration Modifier ReferenceType getModuleFromPath FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement static public RubyModule ReferenceType runtime ReferenceType path ReferenceType VariableDeclarator MethodInvocation ThrowStatement MemberReference Ruby String RubyModule value MethodInvocation ! value isModule MethodInvocation value runtime MemberReference getClassFromPath runtime BinaryOperation newArgumentError path + MemberReference Literal path " does not refer module"	1
MethodDeclaration Modifier branch FormalParameter IfStatement public ReferenceType context BinaryOperation BlockStatement BlockStatement BodyCompiler != MethodInvocation Literal StatementExpression IfStatement ifNode getThenBody null MethodInvocation MemberReference StatementExpression MethodInvocation MemberReference MemberReference compile expr MethodInvocation ifNode getThenBody context expr context loadNil	1
MethodDeclaration Modifier ReferenceType case246_line956 FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment Assignment MemberReference Object Object int MemberReference MethodInvocation = MemberReference MethodInvocation = yyVal yyVal support MethodInvocation MethodInvocation Cast arg_concat yyVal support Cast Cast arg_blk_pass Cast getPosition support MethodInvocation MethodInvocation Cast newArrayNode ReferenceType MemberReference ReferenceType MemberReference ReferenceType MemberReference ReferenceType MemberReference ClassCreator add Cast getPosition ReferenceType MemberReference Node ArraySelector yyVals Node yyVal BlockPassNode ArraySelector yyVals Node ArraySelector yyVals ReferenceType MethodInvocation Cast ReferenceType MemberReference Node ArraySelector yyVals BinaryOperation BinaryOperation BinaryOperation HashNode getPosition ReferenceType MemberReference Node ArraySelector yyVals BinaryOperation + Literal MemberReference + Literal MemberReference + Literal MemberReference ListNode ArraySelector yyVals BinaryOperation + Literal MemberReference - 1 yyTop 0 yyTop - 6 yyTop BinaryOperation + Literal MemberReference - 6 yyTop + Literal MemberReference - 6 yyTop - 4 yyTop	1
MethodDeclaration Modifier ReferenceType toString ReturnStatement public String BinaryOperation + MemberReference MemberReference s i	0
MethodDeclaration Modifier ReferenceType simplifyAndGetResult FormalParameter StatementExpression ReturnStatement public Operand ReferenceType valueMap MethodInvocation Literal Map TypeArgument TypeArgument MemberReference simplifyOperands null ReferenceType ReferenceType valueMap Operand Operand	0
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration ReturnStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 MethodInvocation ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation ThreadContext IRubyObject RubyModule String IRubyObject IRubyObject IRubyObject MethodInvocation createJavaMethods JavaMethod method Cast Object cArg0 MethodInvocation Object cArg1 MethodInvocation Object cArg2 MethodInvocation method MemberReference MemberReference MemberReference invokeStaticDirect self getRuntime ReferenceType MethodInvocation MemberReference MemberReference MemberReference Literal convertArg MemberReference MemberReference MemberReference Literal convertArg MemberReference MemberReference MemberReference Literal convertArg cArg0 cArg1 cArg2 JavaMethod MemberReference MemberReference MemberReference MemberReference MemberReference findCallableArityThree context arg0 method 0 context arg1 method 1 context arg2 method 2 self name arg0 arg1 arg2	0
MethodDeclaration Modifier ReferenceType createBlockCtor FormalParameter FormalParameter Exception LocalVariableDeclaration StatementExpression StatementExpression LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression ReturnStatement private ClassWriter ReferenceType namePath ReferenceType fieldClass ReferenceType VariableDeclarator MethodInvocation MethodInvocation ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MemberReference String Class ClassWriter cw ClassCreator cw MemberReference BinaryOperation MemberReference Literal MethodInvocation Literal visit cw BinaryOperation Literal MethodInvocation Literal Literal visitField SkinnyMethodAdapter mv ClassCreator mv start mv Literal aload mv MethodInvocation Literal MethodInvocation invokespecial mv Literal aload mv Literal aload mv MethodInvocation checkcast mv MemberReference Literal MethodInvocation putfield mv voidreturn mv end cw ReferenceType BinaryOperation RubyInstanceConfig JAVA_VERSION + MemberReference MemberReference namePath null ClassReference p null | MemberReference MemberReference "$scriptObject" MemberReference ci null null ReferenceType MethodInvocation 0 ClassReference p "<init>" VoidClassReference sig 0 1 MemberReference p namePath "$scriptObject" MemberReference ci ClassWriter | MemberReference MemberReference ACC_PUBLIC ACC_SUPER ReferenceType ACC_PRIVATE ACC_FINAL fieldClass SkinnyMethodAdapter cw MemberReference Literal MethodInvocation Literal Literal visitMethod ReferenceType fieldClass fieldClass ClassWriter COMPUTE_MAXS ClassWriter COMPUTE_FRAMES CompiledBlockCallback ACC_PUBLIC "<init>" MemberReference MethodInvocation sig null null CompiledBlockCallback Void TYPE ClassReference params ReferenceType Object	1
MethodDeclaration Modifier popmethod StatementExpression public MethodInvocation MethodInvocation clsData popmethod	0
MethodDeclaration Modifier ReferenceType getParameterAnnotations ReturnStatement public Annotation MethodInvocation method getParameterAnnotations	0
MethodDeclaration Modifier addRootMethod LocalVariableDeclaration StatementExpression StatementExpression private ReferenceType VariableDeclarator Assignment MethodInvocation String n BinaryOperation MemberReference ClassCreator = MemberReference addMethod + MemberReference MemberReference _rootMethod ReferenceType This This MemberReference MemberReference Literal _rootMethod ROOT_METHOD_PREFIX _name IR_Method n n false	0
MethodDeclaration Modifier ReferenceType subBangNoIter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement private IRubyObject ReferenceType context ReferenceType pattern ReferenceType repl BasicType VariableDeclarator BasicType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement ThreadContext Regex RubyString int tuFlags MemberReference int range BinaryOperation Matcher matcher MethodInvocation DynamicScope scope MethodInvocation >= MethodInvocation Literal StatementExpression StatementExpression ReturnStatement ReturnStatement repl flags + MemberReference MemberReference pattern MemberReference MemberReference MemberReference matcher context getCurrentScope matcher MemberReference MemberReference MemberReference search 0 Assignment MethodInvocation MethodInvocation MethodInvocation value begin value realSize value bytes value begin range value begin range Option NONE MemberReference MethodInvocation = RubyRegexp MemberReference This MemberReference MemberReference MemberReference updateBackRef MemberReference MemberReference MemberReference MemberReference MemberReference subBangCommon scope MethodInvocation setBackRef repl RubyRegexp MemberReference This MemberReference MethodInvocation regsub context scope matcher pattern context pattern matcher repl tuFlags context MethodInvocation getRuntime repl matcher context MethodInvocation MethodInvocation getRuntime getNil getKCode getEncoding	0
MethodDeclaration Modifier Annotation BasicType isImmediate ReturnStatement public Override boolean Literal true	0
MethodDeclaration Modifier ReferenceType newCompiledClosure FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration ReturnStatement static public Block ReferenceType context ReferenceType self ReferenceType arity ReferenceType scope ReferenceType callback BasicType hasMultipleArgsHead BasicType argumentType ReferenceType VariableDeclarator ReferenceType VariableDeclarator ClassCreator ThreadContext IRubyObject Arity StaticScope CompiledBlockCallback19 boolean int Binding binding MethodInvocation BlockBody body ClassCreator ReferenceType MemberReference MemberReference context MemberReference MemberReference currentBinding ReferenceType MemberReference MemberReference MemberReference MemberReference MemberReference Block body binding self Visibility PUBLIC CompiledBlock19 arity scope callback hasMultipleArgsHead argumentType	0
MethodDeclaration Modifier Annotation ReferenceType op_cmp FormalParameter IfStatement IfStatement LocalVariableDeclaration IfStatement IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType obj BinaryOperation ReturnStatement BinaryOperation ReturnStatement ReferenceType VariableDeclarator MethodInvocation ReturnStatement This ReturnStatement MethodInvocation name Literal required Literal IRubyObject == This MemberReference MethodInvocation instanceof MemberReference ReferenceType MethodInvocation RubyModule module Cast module This isKindOfModule MethodInvocation MethodInvocation MethodInvocation MethodInvocation getRuntime "<=>" 1 obj MethodInvocation getRuntime obj RubyModule MethodInvocation getRuntime ReferenceType MemberReference MethodInvocation getRuntime MemberReference isKindOfModule MethodInvocation getRuntime getNil Literal newFixnum getNil RubyModule obj Literal newFixnum module Literal newFixnum 0 1 - 1	1
MethodDeclaration Modifier ReferenceType getClassLoader LocalVariableDeclaration IfStatement ReturnStatement static public ClassLoader ReferenceType VariableDeclarator BinaryOperation BlockStatement MemberReference ClassLoader loader ClassReference == MemberReference Literal StatementExpression loader MethodInvocation ReferenceType loader null Assignment getClassLoader Ruby MemberReference MethodInvocation = loader ClassLoader getSystemClassLoader	0
MethodDeclaration Modifier ReferenceType getCurrentContext LocalVariableDeclaration LocalVariableDeclaration WhileStatement ReturnStatement public ThreadContext ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement MemberReference SoftReference sr Literal ThreadContext context Literal == MemberReference Literal IfStatement IfStatement context null null context null BinaryOperation BlockStatement BlockStatement BinaryOperation BlockStatement == Assignment Literal StatementExpression StatementExpression StatementExpression == MemberReference Literal StatementExpression MemberReference Cast = null Assignment Assignment Assignment context null MethodInvocation sr ReferenceType MethodInvocation MemberReference MethodInvocation = MemberReference Cast = MemberReference Cast = localContext Literal set SoftReference localContext get sr adoptCurrentThread context ReferenceType MethodInvocation context ReferenceType MethodInvocation null ThreadContext sr get ThreadContext sr get	1
MethodDeclaration Modifier ReferenceType getBlock FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement static public Block ReferenceType runtime ReferenceType context ReferenceType self ReferenceType node ReferenceType aBlock MethodInvocation Ruby ThreadContext IRubyObject Node Block RuntimeHelpers MemberReference MethodInvocation MemberReference getBlockFromBlockPassBody runtime node MemberReference MemberReference MemberReference MemberReference interpret aBlock runtime context self aBlock	0
MethodDeclaration Modifier BasicType isMethodBound FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement public boolean ReferenceType name BasicType checkVisibility ReferenceType VariableDeclarator MethodInvocation BlockStatement Literal String boolean DynamicMethod method MethodInvocation ! method isUndefined ReturnStatement false MemberReference searchMethod BinaryOperation name && MemberReference BinaryOperation checkVisibility == MethodInvocation MemberReference method getVisibility PRIVATE	0
MethodDeclaration Modifier Annotation ReferenceType op_rshift FormalParameter IfStatement LocalVariableDeclaration IfStatement ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType other BinaryOperation ReturnStatement BasicType VariableDeclarator BinaryOperation ReturnStatement TernaryExpression name Literal IRubyObject instanceof MemberReference ReferenceType MethodInvocation long width Cast == MemberReference Literal This BinaryOperation MethodInvocation MethodInvocation ">>" other RubyFixnum RubyBignum MethodInvocation MethodInvocation MemberReference newBignum ReferenceType MemberReference width 0 < MemberReference Literal MemberReference lshift MemberReference rshift MemberReference op_rshift getRuntime value RubyFixnum other width 0 - width width other	1
MethodDeclaration Modifier Annotation ReferenceType accept FormalParameter ReturnStatement public Override Object ReferenceType iVisitor MethodInvocation NodeVisitor iVisitor This visitDXStrNode	0
MethodDeclaration Modifier ReferenceType case88_line625 FormalParameter FormalParameter FormalParameter IfStatement LocalVariableDeclaration StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop BinaryOperation BlockStatement ReferenceType VariableDeclarator Assignment MemberReference Object Object int || MethodInvocation MethodInvocation StatementExpression ISourcePosition position MethodInvocation MemberReference ClassCreator = yyVal support isInDef support isInSingle MethodInvocation Cast getPosition yyVal ReferenceType MemberReference Literal MethodInvocation MemberReference Literal yyerror ReferenceType MemberReference ConstDeclNode position null support MemberReference Cast new_colon3 NilImplicitNode NIL "dynamic constant assignment" Token ArraySelector yyVals position ReferenceType Cast BinaryOperation String ReferenceType MemberReference + Literal MemberReference Token ArraySelector yyVals - 1 yyTop BinaryOperation + Literal MemberReference 0 yyTop	1
MethodDeclaration Modifier ReferenceType getMethod9 FormalParameter FormalParameter FormalParameter ReturnStatement protected DynamicMethod ReferenceType context ReferenceType self ReferenceType methodName MethodInvocation ThreadContext IRubyObject String runtimeCache MemberReference MemberReference Literal MemberReference getMethod context self 9 methodName	0
MethodDeclaration Modifier ReferenceType to_s FormalParameter SwitchStatement public RubyString ReferenceType args MemberReference SwitchStatementCase SwitchStatementCase SwitchStatementCase IRubyObject args length Literal ReturnStatement Literal ReturnStatement ThrowStatement 0 MethodInvocation 1 MethodInvocation MethodInvocation to_s MemberReference to_s MethodInvocation getRuntime ArraySelector args MemberReference Literal newArgumentError Literal args length 1 0	1
MethodDeclaration Modifier assignMethodArguments19 FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter IfStatement IfStatement public ReferenceType preArgs BasicType preArgsCount ReferenceType postArgs BasicType postArgsCount BasicType postArgsIndex ReferenceType optArgs BasicType optArgsCount ReferenceType requiredAssignment ReferenceType optGivenAssignment ReferenceType optNotGivenAssignment ReferenceType restAssignment ReferenceType blockAssignment MemberReference BlockStatement BlockStatement BinaryOperation BlockStatement Object int Object int int Object int ArrayCallback ArrayCallback ArrayCallback CompilerCallback CompilerCallback specificArity LocalVariableDeclaration ForStatement IfStatement != MemberReference Literal StatementExpression StatementExpression StatementExpression StatementExpression BasicType VariableDeclarator ForControl BlockStatement BinaryOperation BlockStatement blockAssignment null MethodInvocation MethodInvocation MethodInvocation MethodInvocation int currentArgElement Literal BinaryOperation MemberReference StatementExpression StatementExpression || BinaryOperation BinaryOperation LocalVariableDeclaration ForStatement IfStatement IfStatement ForStatement methodCompiler loadRuntime method MethodInvocation aload methodCompiler Literal MethodInvocation invokeUtilityMethod blockAssignment MemberReference call 0 < MemberReference MethodInvocation ++ currentArgElement MethodInvocation MethodInvocation || BinaryOperation BinaryOperation != MemberReference Literal BasicType VariableDeclarator ForControl BlockStatement BinaryOperation BlockStatement BinaryOperation BlockStatement ForControl BlockStatement methodCompiler getClosureIndex "processBlockArgument" ClassReference MethodInvocation sig methodCompiler currentArgElement scope getRequiredArgs method BinaryOperation aload requiredAssignment MemberReference MemberReference MemberReference nextValue || BinaryOperation BinaryOperation > MemberReference Literal restAssignment null int currentArgElement Literal BinaryOperation MemberReference StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression > MemberReference Literal LocalVariableDeclaration LocalVariableDeclaration ForStatement ForStatement StatementExpression ForStatement StatementExpression StatementExpression != MemberReference Literal StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression BinaryOperation MemberReference StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression ReferenceType ClassReference ClassReference params + MemberReference MemberReference methodCompiler preArgs currentArgElement > MemberReference Literal > MemberReference Literal optArgsCount 0 0 < MemberReference MemberReference ++ currentArgElement MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation optArgsCount 0 ReferenceType VariableDeclarator ReferenceType VariableDeclarator ForControl StatementExpression ForControl BlockStatement MethodInvocation ForControl BlockStatement MethodInvocation MethodInvocation restAssignment null MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation < MemberReference MemberReference ++ currentArgElement MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation IRubyObject ReferenceType ReferenceType argsIndex currentArgElement preArgsCount 0 postArgsCount 0 currentArgElement preArgsCount method MemberReference aload method MemberReference pushInt methodCompiler loadNil methodCompiler Literal MethodInvocation invokeUtilityMethod requiredAssignment MemberReference MemberReference MemberReference nextValue Label doneWithOpt ClassCreator Label optLabels ArrayCreator VariableDeclaration BinaryOperation MemberReference Assignment VariableDeclaration BinaryOperation MemberReference MemberReference StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression method MemberReference go_to VariableDeclaration BinaryOperation MemberReference StatementExpression StatementExpression method pop method MemberReference label method MemberReference aload methodCompiler loadRuntime method MemberReference pushInt method MemberReference pushInt methodCompiler Literal MethodInvocation invokeUtilityMethod restAssignment MemberReference call currentArgElement postArgsCount method MemberReference aload method MemberReference pushInt methodCompiler loadNil methodCompiler Literal MethodInvocation invokeUtilityMethod requiredAssignment MemberReference MemberReference MemberReference nextValue Ruby Block argsIndex currentArgElement "elementOrNil" ClassReference ClassReference ClassReference ClassReference sig methodCompiler preArgs currentArgElement ReferenceType ReferenceType MemberReference BasicType VariableDeclarator < MemberReference MemberReference ++ i MemberReference ClassCreator = BasicType VariableDeclarator < MemberReference MemberReference ++ currentArgElement ++ optArgElement MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation doneWithOpt BasicType VariableDeclarator < MemberReference MemberReference ++ optArgElement MethodInvocation MethodInvocation doneWithOpt argsIndex currentArgElement postArgsCount "createSubarray" ClassReference ClassReference ClassReference ClassReference ClassReference sig methodCompiler argsIndex currentArgElement "elementOrNil" ClassReference ClassReference ClassReference ClassReference sig methodCompiler postArgs currentArgElement ReferenceType ReferenceType BasicType ReferenceType Label Label optArgsCount int i Literal i optLabels length ArraySelector optLabels ReferenceType int optArgElement Literal optArgElement optArgsCount method MemberReference aload method MemberReference pushInt methodCompiler Literal MethodInvocation invokeUtilityMethod method dup method MemberReference ifnull optGivenAssignment MemberReference MemberReference MemberReference nextValue int optArgElement Literal optArgElement optArgsCount method MemberReference label optNotGivenAssignment MemberReference MemberReference MemberReference nextValue ReferenceType ReferenceType ReferenceType BasicType BasicType ReferenceType ReferenceType BasicType ReferenceType IRubyObject IRubyObject int IRubyObject 0 MemberReference Label 0 argsIndex currentArgElement "elementOrNull" ClassReference ClassReference ClassReference sig ArraySelector optLabels methodCompiler optArgs optArgElement 0 ArraySelector optLabels methodCompiler optArgs optArgElement RubyArray IRubyObject Ruby int int IRubyObject IRubyObject int IRubyObject i ReferenceType ReferenceType BasicType MemberReference MemberReference IRubyObject IRubyObject int optArgElement optArgElement	1
MethodDeclaration Modifier visitTableSwitchInsn FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression public BasicType arg0 BasicType arg1 ReferenceType arg2 ReferenceType arg3 MethodInvocation int int Label Label MethodInvocation getMethodVisitor MemberReference MemberReference MemberReference MemberReference visitTableSwitchInsn arg0 arg1 arg2 arg3	0
MethodDeclaration Modifier Annotation ReferenceType to_c FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv MethodInvocation name Literal compat MemberReference ThreadContext IRubyObject RubyComplex MemberReference MethodInvocation newComplexCanonicalize "to_c" CompatVersion RUBY1_9 context RubyFixnum MethodInvocation zero context getRuntime	1
MethodDeclaration Modifier BasicType isSymbolName FormalParameter IfStatement LocalVariableDeclaration LocalVariableDeclaration SwitchStatement IfStatement LocalVariableDeclaration LocalVariableDeclaration ForStatement IfStatement ReturnStatement private static boolean ReferenceType s BinaryOperation ReturnStatement BasicType VariableDeclarator BasicType VariableDeclarator MemberReference SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase MethodInvocation ReturnStatement BasicType VariableDeclarator BasicType VariableDeclarator ForControl BlockStatement BinaryOperation BlockStatement IfStatement Literal String || BinaryOperation BinaryOperation Literal int length MethodInvocation char c MethodInvocation c Literal IfStatement ReturnStatement Literal LocalVariableDeclaration IfStatement ReturnStatement Literal ReturnStatement Literal ReturnStatement Literal ReturnStatement Literal ReturnStatement Literal ReturnStatement Literal ReturnStatement Literal Literal Literal Literal Literal Literal Literal ReturnStatement Literal ReturnStatement ! MemberReference isIdentStart Literal boolean localID BinaryOperation int last Literal BinaryOperation MemberReference LocalVariableDeclaration IfStatement == MemberReference MemberReference ReturnStatement BinaryOperation BlockStatement false == MemberReference Literal < MethodInvocation Literal false s length s Literal charAt '$' BinaryOperation BlockStatement MethodInvocation '@' BasicType VariableDeclarator BinaryOperation BlockStatement MethodInvocation '<' BinaryOperation '>' BinaryOperation '=' BinaryOperation '*' BinaryOperation '+' BinaryOperation '-' BinaryOperation '|' '^' '&' '/' '%' '~' '`' BinaryOperation '[' BinaryOperation c false && BinaryOperation BinaryOperation 1 < MemberReference MemberReference ++ last BasicType VariableDeclarator MethodInvocation BlockStatement last length Literal && MemberReference BinaryOperation LocalVariableDeclaration ReturnStatement s null s length 1 0 && BinaryOperation MethodInvocation ReturnStatement MethodInvocation isIdentifier int offset Literal && BinaryOperation BinaryOperation StatementExpression MethodInvocation isIdentifier || BinaryOperation BinaryOperation || BinaryOperation BinaryOperation || BinaryOperation BinaryOperation || BinaryOperation BinaryOperation || BinaryOperation BinaryOperation || BinaryOperation BinaryOperation == MemberReference Literal || MethodInvocation MethodInvocation >= MemberReference Literal <= MemberReference Literal last length char d MethodInvocation ! MemberReference isIdentChar BreakStatement true localID == MemberReference BinaryOperation BasicType VariableDeclarator BinaryOperation > MemberReference Literal MethodInvocation isSpecialGlobalName Literal s Literal substring 1 >= MemberReference Literal == MethodInvocation Literal MemberReference s MemberReference substring || BinaryOperation BinaryOperation && BinaryOperation MethodInvocation == MemberReference Literal && BinaryOperation BinaryOperation && BinaryOperation BinaryOperation && BinaryOperation MethodInvocation == MemberReference Literal && BinaryOperation MethodInvocation == MemberReference Literal && BinaryOperation MethodInvocation == MemberReference Literal && BinaryOperation MethodInvocation length 1 s Literal equals s Literal equals c 'a' c 'z' s MemberReference charAt d last - MemberReference Literal char d MethodInvocation || BinaryOperation BinaryOperation length 1 s Literal substring true 1 length 2 s Literal charAt '@' ++ offset offset == MemberReference Literal && BinaryOperation BinaryOperation == MemberReference Literal s Literal equals length 1 == MemberReference Literal || MethodInvocation MethodInvocation == MemberReference Literal || MethodInvocation MethodInvocation == MemberReference Literal s Literal equals length 1 == MemberReference Literal s Literal equals length 1 == MemberReference Literal s Literal equals length 1 == MemberReference Literal s Literal equals "[]" "[]=" last length 1 s MemberReference charAt || BinaryOperation BinaryOperation == MemberReference Literal 1 1 length 1 == MemberReference Literal || MethodInvocation MethodInvocation length 3 "<=>" length 2 s Literal equals s Literal equals length 2 s Literal equals s Literal equals length 3 "===" length 2 "**" length 2 "+@" length 2 "-@" last == MemberReference Literal == MemberReference Literal d '=' length 2 s Literal equals s Literal equals ">>" ">=" "==" "=~" d '!' d '?' "<<" "<="	1
MethodDeclaration Modifier ReferenceType push_glob FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement static public List TypeArgument ReferenceType cwd ReferenceType globByteList BasicType flags ReferenceType VariableDeclarator BinaryOperation BlockStatement MemberReference ReferenceType String ByteList int List TypeArgument result ClassCreator > MethodInvocation Literal StatementExpression result ByteList ReferenceType ReferenceType globByteList length 0 MethodInvocation ByteList ArrayList TypeArgument MemberReference MemberReference ClassCreator push_braces ReferenceType cwd result ReferenceType MemberReference MemberReference ByteList GlobPattern globByteList flags	1
MethodDeclaration Modifier actionPerformed FormalParameter TryStatement public ReferenceType e StatementExpression CatchClause ActionEvent MethodInvocation CatchClauseParameter StatementExpression StatementExpression manager Literal Literal Literal Literal MethodInvocation exec BSFException excptn MethodInvocation MethodInvocation "ruby" "initUI" 1 1 input getText excptn printStackTrace JOptionPane MemberReference MethodInvocation showMessageDialog frame excptn getMessage	0
MethodDeclaration Modifier Annotation ReferenceType definition FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public Override String ReferenceType runtime ReferenceType context ReferenceType self ReferenceType aBlock Literal Ruby ThreadContext IRubyObject Block "method"	0
MethodDeclaration Modifier ReferenceType getVersion ReturnStatement public CompatVersion MemberReference version	0
MethodDeclaration Modifier Annotation ReferenceType gid ReturnStatement public JRubyMethod ElementValuePair IRubyObject MethodInvocation name Literal MethodInvocation getRuntime "gid" MethodInvocation newFixnum stat gid	0
MethodDeclaration Modifier Annotation ReferenceType mapLibraryName FormalParameter ReturnStatement public Override String ReferenceType libName TernaryExpression String BinaryOperation Literal SuperMethodInvocation || Literal Literal "libc.so.6" MemberReference mapLibraryName MethodInvocation "c" MethodInvocation "libc.so" libName MemberReference equals MemberReference equals libName libName	0
MethodDeclaration Modifier invokeAttrAssignMasgn FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression LocalVariableDeclaration IfStatement StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression public ReferenceType name ReferenceType receiverCallback ReferenceType argsCallback BasicType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation String CompilerCallback ArgumentsCallback int temp MethodInvocation methodCompiler MethodInvocation getVariableCompiler receiverCallback MemberReference call method dup methodCompiler loadSelf methodCompiler MethodInvocation MethodInvocation getScriptCompiler methodCompiler MethodInvocation MethodInvocation getScriptCompiler methodCompiler Literal MethodInvocation invokeUtilityMethod String signature Literal == MemberReference Literal StatementExpression SwitchStatement methodCompiler MethodInvocation getVariableCompiler methodCompiler MethodInvocation getVariableCompiler methodCompiler loadThreadContext methodCompiler loadSelf methodCompiler Literal MemberReference invokeUtilityMethod methodCompiler MethodInvocation getVariableCompiler MemberReference setTempLocal methodCompiler getCacheCompiler MemberReference MemberReference MemberReference cacheCallSite getCacheCompiler MemberReference MemberReference MemberReference cacheCallSite "selectAttrAsgnCallSite" ClassReference ClassReference ClassReference ClassReference ClassReference sig null argsCallback null Assignment MethodInvocation SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase MemberReference getTempLocal releaseTempLocal "doAttrAsgn" signature grabTempLocal temp methodCompiler name CallType NORMAL methodCompiler name CallType VARIABLE ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType MemberReference MethodInvocation = argsCallback getArity Literal StatementExpression StatementExpression BreakStatement Literal StatementExpression StatementExpression BreakStatement Literal StatementExpression StatementExpression BreakStatement StatementExpression StatementExpression temp CallSite IRubyObject IRubyObject CallSite CallSite signature ClassReference ClassReference ClassReference ClassReference ClassReference ClassReference sig 1 MethodInvocation Assignment 2 MethodInvocation Assignment 3 MethodInvocation Assignment MethodInvocation Assignment ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType argsCallback MemberReference call MemberReference MethodInvocation = argsCallback MemberReference call MemberReference MethodInvocation = argsCallback MemberReference call MemberReference MethodInvocation = argsCallback MemberReference call MemberReference MethodInvocation = IRubyObject IRubyObject CallSite IRubyObject ThreadContext IRubyObject methodCompiler signature ClassReference ClassReference ClassReference ClassReference ClassReference ClassReference ClassReference sig methodCompiler signature ClassReference ClassReference ClassReference ClassReference ClassReference ClassReference ClassReference ClassReference sig methodCompiler signature ClassReference ClassReference ClassReference ClassReference ClassReference ClassReference ClassReference ClassReference ClassReference sig methodCompiler signature ClassReference ClassReference ClassReference ClassReference ClassReference ClassReference ClassReference sig ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType IRubyObject IRubyObject CallSite IRubyObject IRubyObject ThreadContext IRubyObject IRubyObject IRubyObject CallSite IRubyObject IRubyObject IRubyObject ThreadContext IRubyObject IRubyObject IRubyObject CallSite IRubyObject IRubyObject IRubyObject IRubyObject ThreadContext IRubyObject IRubyObject IRubyObject CallSite IRubyObject IRubyObject ThreadContext IRubyObject	1
MethodDeclaration ReferenceType thePackageScopeMethod ReturnStatement String Literal "42"	0
MethodDeclaration Modifier setClassCache FormalParameter StatementExpression public ReferenceType classCache Assignment ClassCache This MemberReference = MemberReference classCache classCache	0
MethodDeclaration Modifier ReferenceType format FormalParameter ReturnStatement private String ReferenceType args MemberReference IRubyObject ArraySelector MethodInvocation args Literal toString 0	0
MethodDeclaration Modifier ReferenceType toString ReturnStatement public String BinaryOperation + BinaryOperation Literal + BinaryOperation MemberReference ")" + BinaryOperation Literal _method _name + BinaryOperation MemberReference ", " + SuperMethodInvocation Literal _module _name toString "("	0
MethodDeclaration Modifier Annotation ReferenceType id2name FormalParameter ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context MethodInvocation name Literal ThreadContext MemberReference to_s "id2name" context	0
MethodDeclaration Modifier load FormalParameter FormalParameter IOException StatementExpression public ReferenceType runtime BasicType wrap MethodInvocation Ruby boolean RubyStringScanner MemberReference createScannerClass runtime	0
MethodDeclaration Modifier ReferenceType case223_line896 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support Cast Literal Cast MethodInvocation getOperatorCallNode ReferenceType MemberReference ">>" ReferenceType MemberReference getPosition Node ArraySelector yyVals Node ArraySelector yyVals BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference - 2 yyTop 0 yyTop	1
MethodDeclaration Modifier BasicType isDoubleFloatable FormalParameter ReturnStatement private static boolean BasicType value BinaryOperation double || BinaryOperation BinaryOperation || BinaryOperation BinaryOperation == MemberReference MemberReference || BinaryOperation MethodInvocation == MemberReference MemberReference value Double NEGATIVE_INFINITY || BinaryOperation BinaryOperation Double MemberReference isNaN value Double POSITIVE_INFINITY || BinaryOperation BinaryOperation && BinaryOperation BinaryOperation value == MemberReference Literal && BinaryOperation BinaryOperation >= MemberReference MemberReference <= MemberReference MemberReference value 0.0 >= MemberReference MemberReference <= MemberReference MemberReference value - Float MAX_VALUE value - Float MIN_VALUE value Float MIN_VALUE value Float MAX_VALUE	1
MethodDeclaration Modifier ReferenceType getArity ReturnStatement public Arity MethodInvocation Arity noArguments	0
MethodDeclaration Modifier ReferenceType case456_line1725 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference ClassCreator = yyVal yyVal ReferenceType Cast MethodInvocation UnnamedRestArgNode ReferenceType MemberReference support MethodInvocation MethodInvocation getCurrentScope Token ArraySelector yyVals getLocalScope Literal addVariable BinaryOperation "*" + Literal MemberReference 0 yyTop	1
MethodDeclaration Modifier Annotation ReferenceType op_aref FormalParameter FormalParameter IfStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType arg BinaryOperation BlockStatement BlockStatement name Literal backtrace Literal ThreadContext IRubyObject instanceof MemberReference ReferenceType LocalVariableDeclaration ReturnStatement ReturnStatement "[]" true arg RubyInteger BasicType VariableDeclarator MethodInvocation MethodInvocation int index Cast MethodInvocation getJavaArray MemberReference MemberReference getRange BasicType Cast MemberReference arefDirect context arg int ReferenceType MemberReference index RubyInteger arg	1
MethodDeclaration Modifier ReferenceType setByte FormalParameter ReturnStatement static public String BasicType b MethodInvocation byte String MemberReference valueOf b	0
MethodDeclaration Modifier ReferenceType case104_line672 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support Cast ClassCreator appendToBlock ReferenceType MemberReference ReferenceType MethodInvocation Cast Node ArraySelector yyVals UndefNode Cast getPosition ReferenceType Cast BinaryOperation ReferenceType MemberReference String ReferenceType MemberReference + Literal MemberReference Node ArraySelector yyVals Token ArraySelector yyVals - 3 yyTop BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference - 3 yyTop 0 yyTop	1
MethodDeclaration Modifier ReferenceType __type__ ReturnStatement public String Literal "foo"	1
MethodDeclaration Modifier ReferenceType callMethodMissing FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement private static IRubyObject ReferenceType entry ReferenceType callType ReferenceType context ReferenceType self ReferenceType name ReferenceType arg MethodInvocation CacheEntry CallType ThreadContext IRubyObject String IRubyObject RuntimeHelpers MethodInvocation MemberReference MemberReference MethodInvocation MemberReference MemberReference selectMethodMissing MemberReference MemberReference MethodInvocation MemberReference MemberReference MemberReference call context self entry.method getVisibility name callType context self self getMetaClass name arg Block NULL_BLOCK	0
MethodDeclaration Modifier Annotation ReferenceType constants19 FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair RubyArray ReferenceType context ReferenceType allConstants MethodInvocation name Literal compat MemberReference ThreadContext IRubyObject MemberReference MethodInvocation constantsCommon "constants" CompatVersion RUBY1_9 context allConstants isTrue	0
MethodDeclaration Modifier Annotation ReferenceType empty_p ReturnStatement public JRubyMethod ElementValuePair IRubyObject TernaryExpression name Literal BinaryOperation MethodInvocation MethodInvocation "empty?" == MemberReference Literal MethodInvocation getRuntime MethodInvocation getRuntime realLength 0 getTrue getFalse	1
MethodDeclaration Modifier ReferenceType getConstant FormalParameter FormalParameter FormalParameter LocalVariableDeclaration ReturnStatement final public IRubyObject ReferenceType context ReferenceType name BasicType index ReferenceType VariableDeclarator TernaryExpression ThreadContext String int IRubyObject value MethodInvocation BinaryOperation MemberReference MethodInvocation MemberReference MemberReference MemberReference getValue != MemberReference Literal value context MethodInvocation MethodInvocation MethodInvocation getCurrentScope context name index value null getStaticScope getModule MemberReference Literal MethodInvocation callMethod context "const_missing" context MethodInvocation getRuntime MemberReference fastNewSymbol name	0
MethodDeclaration Modifier Annotation BasicType utf8Length FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement WhileStatement ReturnStatement static public SuppressWarnings Literal int BasicType bytes BasicType p BasicType end BasicType VariableDeclarator BinaryOperation BlockStatement BinaryOperation BlockStatement MemberReference "deprecation" byte int int int len Literal != MemberReference Literal IfStatement < MemberReference MemberReference IfStatement len 0 UNSAFE null BinaryOperation BlockStatement p end BinaryOperation StatementExpression > BinaryOperation BinaryOperation LocalVariableDeclaration WhileStatement LocalVariableDeclaration LocalVariableDeclaration WhileStatement != BinaryOperation Literal MemberReference - MemberReference MemberReference * MemberReference Literal BasicType VariableDeclarator BinaryOperation BlockStatement ReferenceType VariableDeclarator BasicType VariableDeclarator BinaryOperation BlockStatement & MemberReference Literal 0x80 ++ len end p LONG_SIZE 2 int ep BinaryOperation < MemberReference MemberReference IfStatement Unsafe us Cast int eend BinaryOperation < MemberReference MemberReference StatementExpression StatementExpression ArraySelector bytes 0xc0 & MemberReference BinaryOperation p ep BinaryOperation StatementExpression ReferenceType MemberReference & MemberReference MemberReference p eend Assignment Assignment MemberReference ~ LOWBITS + MemberReference MemberReference != BinaryOperation Literal MemberReference Unsafe UNSAFE ~ LOWBITS end MemberReference MethodInvocation += MemberReference MemberReference += ++ p p LOWBITS & MemberReference Literal 0x80 ++ len len MethodInvocation countUtf8LeadBytes p LONG_SIZE ArraySelector bytes 0xc0 us MemberReference BinaryOperation getLong MemberReference bytes + MemberReference MemberReference ++ p OFFSET p	1
MethodDeclaration Modifier ReferenceType getCompileMode ReturnStatement public String MethodInvocation ruby MethodInvocation MethodInvocation MethodInvocation get getInstanceConfig getCompileMode name	0
MethodDeclaration Modifier ReferenceType arrayEntryOrNilZero FormalParameter IfStatement static public IRubyObject ReferenceType array BinaryOperation BlockStatement BlockStatement RubyArray < Literal MethodInvocation ReturnStatement ReturnStatement 0 array getLength MethodInvocation MethodInvocation array Literal eltInternal array MethodInvocation getRuntime 0 getNil	0
MethodDeclaration Modifier ReferenceType case396_line1502 FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression StatementExpression StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop MethodInvocation MethodInvocation MethodInvocation Assignment MemberReference Object Object int lexer Cast setStrTerm lexer MethodInvocation getConditionState lexer MethodInvocation getCmdArgumentState MemberReference MethodInvocation = yyVal ReferenceType MemberReference restart restart yyVal support MethodInvocation Cast newEvStrNode StrTerm ArraySelector yyVals Cast getPosition ReferenceType MemberReference BinaryOperation ReferenceType MemberReference Node ArraySelector yyVals + Literal MemberReference Token ArraySelector yyVals BinaryOperation - 2 yyTop BinaryOperation + Literal MemberReference + Literal MemberReference - 1 yyTop - 3 yyTop	1
MethodDeclaration Modifier Annotation ReferenceType mapLibraryName FormalParameter ReturnStatement public Override String ReferenceType libName TernaryExpression String BinaryOperation MemberReference SuperMethodInvocation || Literal Literal LIBC MemberReference mapLibraryName MethodInvocation "c" MethodInvocation "libc.so" libName MemberReference equals MemberReference equals libName libName	0
MethodDeclaration Modifier ReferenceType invoke FormalParameter FormalParameter FormalParameter Throwable LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration ForStatement IfStatement public Object ReferenceType proxy ReferenceType m ReferenceType nargs ReferenceType VariableDeclarator ReferenceType VariableDeclarator BasicType VariableDeclarator ReferenceType VariableDeclarator ForControl BlockStatement BinaryOperation BlockStatement BlockStatement Object JavaProxyMethod Object String name MethodInvocation DynamicMethod method MethodInvocation int v MethodInvocation IRubyObject newArgs ArrayCreator VariableDeclaration BinaryOperation StatementExpression || BinaryOperation BinaryOperation ReturnStatement LocalVariableDeclaration ReturnStatement m getName self MethodInvocation getMetaClass method MethodInvocation getArity ReferenceType MemberReference BasicType VariableDeclarator >= MemberReference Literal Assignment < MemberReference Literal == MemberReference MemberReference MethodInvocation ReferenceType VariableDeclarator MethodInvocation MemberReference searchMethod getValue IRubyObject nargs length int i MemberReference -- i 0 MemberReference MethodInvocation = v 0 v newArgs length RuntimeHelpers MethodInvocation MethodInvocation MemberReference MemberReference MemberReference invoke RubyClass superClass MethodInvocation RuntimeHelpers MethodInvocation MethodInvocation MemberReference MemberReference MemberReference MemberReference MemberReference invokeAs name nargs length ArraySelector newArgs JavaUtil MemberReference MemberReference convertJavaToUsableRubyObject MethodInvocation toJava runtime getCurrentContext self name newArgs self MethodInvocation getMetaClass MethodInvocation toJava runtime getCurrentContext superClass self name newArgs Block NULL_BLOCK MemberReference runtime ArraySelector nargs m getReturnType getSuperClass m getReturnType i MemberReference i	0
MethodDeclaration Modifier Annotation Annotation ReferenceType close IfStatement ReturnStatement public JRubyMethod Override IRubyObject BinaryOperation BlockStatement SuperMethodInvocation != MemberReference Literal TryStatement close currentLock null StatementExpression CatchClause MethodInvocation CatchClauseParameter ThrowStatement currentLock release IOException e MethodInvocation MethodInvocation getRuntime MethodInvocation newIOError e getMessage	1
MethodDeclaration Modifier Annotation ReferenceType yieldSpecific FormalParameter FormalParameter FormalParameter FormalParameter ThrowStatement public Override IRubyObject ReferenceType context ReferenceType arg0 ReferenceType binding ReferenceType type MethodInvocation ThreadContext IRubyObject Binding Type context MethodInvocation getRuntime MemberReference MethodInvocation Literal newLocalJumpError RubyLocalJumpError.Reason NOREASON context MethodInvocation getRuntime "yield called out of block" getNil	0
MethodDeclaration Modifier Annotation ReferenceType definition FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public Override String ReferenceType runtime ReferenceType context ReferenceType self ReferenceType aBlock Literal Ruby ThreadContext IRubyObject Block "true"	0
MethodDeclaration Modifier Annotation ReferenceType insert FormalParameter IfStatement LocalVariableDeclaration IfStatement IfStatement LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType args BinaryOperation ReturnStatement BasicType VariableDeclarator BinaryOperation StatementExpression BinaryOperation StatementExpression ReferenceType VariableDeclarator Assignment Assignment Assignment MethodInvocation This name Literal required Literal rest Literal compat MemberReference IRubyObject == MemberReference Literal This long pos MethodInvocation == MemberReference Literal Assignment < MemberReference Literal MemberReference RubyArray inserted ClassCreator MemberReference MemberReference = MemberReference Literal = MemberReference BinaryOperation = MemberReference Literal MemberReference splice "insert" 1 true CompatVersion RUBY1_8 args length 1 RubyNumeric MemberReference num2long pos - 1 MemberReference MemberReference = pos 0 ++ pos ReferenceType MethodInvocation Literal inserted values args inserted begin 1 inserted realLength - MemberReference Literal pos 0 inserted ArraySelector args pos realLength RubyArray getRuntime false args length 1 Literal 0	1
MethodDeclaration Modifier ReferenceType preprocess FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement LocalVariableDeclaration IfStatement IfStatement ReturnStatement private static ByteList ReferenceType runtime ReferenceType str ReferenceType enc ReferenceType fixedEnc ReferenceType mode ReferenceType VariableDeclarator MethodInvocation BlockStatement BlockStatement BasicType VariableDeclarator BinaryOperation StatementExpression BinaryOperation StatementExpression MemberReference Ruby ByteList Encoding Encoding ErrorMode ByteList to ClassCreator enc isAsciiCompatible StatementExpression StatementExpression StatementExpression boolean hasProperty MethodInvocation && MemberReference BinaryOperation Assignment != MemberReference Literal Assignment to ReferenceType MemberReference Assignment Assignment Assignment MemberReference MemberReference MemberReference MemberReference BinaryOperation MemberReference MemberReference MemberReference MemberReference unescapeNonAscii hasProperty == MemberReference Literal MemberReference MemberReference = ArraySelector fixedEnc null MemberReference MemberReference = ByteList str realSize MemberReference Literal = MemberReference MemberReference = MemberReference MemberReference = runtime to str bytes str begin + MemberReference MemberReference enc fixedEnc str mode ArraySelector fixedEnc null ArraySelector fixedEnc enc Literal to encoding ArraySelector fixedEnc ArraySelector fixedEnc null ArraySelector fixedEnc enc to encoding enc str begin str realSize Literal Literal 0 Literal Literal Literal 0 0 0 0 0	1
MethodDeclaration Modifier ReferenceType getMatchingCallable FormalParameter FormalParameter FormalParameter FormalParameter IfStatement static public JavaCallable ReferenceType runtime ReferenceType javaClass ReferenceType methodName ReferenceType argumentTypes Literal BlockStatement BlockStatement Ruby Class TypeArgument String Class TypeArgument MethodInvocation "<init>" ReturnStatement ReturnStatement ? ? MemberReference equals MethodInvocation MethodInvocation methodName JavaConstructor MemberReference MemberReference MemberReference getMatchingConstructor JavaMethod MemberReference MemberReference MemberReference MemberReference getMatchingDeclaredMethod runtime javaClass argumentTypes runtime javaClass methodName argumentTypes	1
MethodDeclaration Modifier ReferenceType getMemoryIO ReturnStatement final MemoryIO Cast ReferenceType MemberReference AbstractMemory memory	0
MethodDeclaration Modifier Annotation ReferenceType newInstance FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair StructLayoutBuilder ReferenceType context ReferenceType recv ClassCreator name Literal meta Literal ThreadContext IRubyObject ReferenceType MethodInvocation "new" true StructLayoutBuilder context getRuntime	0
MethodDeclaration Modifier Annotation ReferenceType step FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType block TernaryExpression name Literal frame Literal compat MemberReference ThreadContext Block MethodInvocation MethodInvocation MethodInvocation "step" true CompatVersion RUBY1_8 block isGiven MemberReference MethodInvocation MemberReference stepCommon MethodInvocation This Literal enumeratorize context RubyFixnum MethodInvocation one block context getRuntime "step" context getRuntime	0
MethodDeclaration Modifier createTCPSocket FormalParameter LocalVariableDeclaration StatementExpression StatementExpression StatementExpression static ReferenceType runtime ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation Ruby RubyClass rb_cTCPSocket MethodInvocation rb_cTCPSocket MethodInvocation includeModule rb_cTCPSocket ClassReference defineAnnotatedMethods runtime MethodInvocation getObject runtime Literal MethodInvocation MemberReference defineClass runtime MethodInvocation Literal fastGetClass ReferenceType Literal MemberReference fastSetConstant "TCPSocket" runtime Literal fastGetClass TCPSOCKET_ALLOCATOR Literal fastGetConstant "Socket" RubyTCPSocket "TCPsocket" rb_cTCPSocket "IPSocket" "Constants"	1
MethodDeclaration Modifier ReferenceType gsubCommon FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement LocalVariableDeclaration LocalVariableDeclaration StatementExpression LocalVariableDeclaration LocalVariableDeclaration WhileStatement IfStatement IfStatement StatementExpression IfStatement private IRubyObject ReferenceType context Modifier BasicType bang ReferenceType pattern ReferenceType block ReferenceType repl BasicType tuFlags ReferenceType VariableDeclarator ReferenceType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator ReferenceType VariableDeclarator BasicType VariableDeclarator BinaryOperation BlockStatement BasicType VariableDeclarator ReferenceType VariableDeclarator Assignment BasicType VariableDeclarator VariableDeclarator VariableDeclarator VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement BinaryOperation BlockStatement BlockStatement BinaryOperation BlockStatement Assignment MemberReference BlockStatement BlockStatement ThreadContext final boolean Regex Block RubyString int Ruby runtime MethodInvocation DynamicScope scope MethodInvocation int begin MemberReference int slen MemberReference int range BinaryOperation byte bytes MemberReference Matcher matcher MethodInvocation int beg MethodInvocation < MemberReference Literal StatementExpression ReturnStatement int blen BinaryOperation ByteList dest ClassCreator MemberReference MemberReference = int offset Literal buf Literal bp Literal cp MemberReference RubyMatchData match Literal >= MemberReference Literal LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement StatementExpression LocalVariableDeclaration LocalVariableDeclaration IfStatement StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression IfStatement StatementExpression IfStatement StatementExpression == MemberReference Literal StatementExpression StatementExpression > MemberReference MemberReference LocalVariableDeclaration IfStatement StatementExpression StatementExpression MemberReference BinaryOperation = bang StatementExpression ReturnStatement ReturnStatement context getRuntime context getCurrentScope value begin value realSize + MemberReference MemberReference value bytes pattern MemberReference MemberReference MemberReference matcher matcher MemberReference MemberReference MemberReference search beg 0 MethodInvocation TernaryExpression + MemberReference Literal ReferenceType MemberReference dest realSize blen 0 0 0 begin null beg 0 Modifier ReferenceType VariableDeclarator Modifier BasicType VariableDeclarator Modifier BasicType VariableDeclarator BinaryOperation BlockStatement BlockStatement Assignment ReferenceType VariableDeclarator BasicType VariableDeclarator BinaryOperation BlockStatement Assignment MethodInvocation Assignment MethodInvocation Assignment Assignment BinaryOperation BlockStatement Assignment BinaryOperation BreakStatement Assignment repl null MethodInvocation MethodInvocation slen offset BasicType VariableDeclarator BinaryOperation BlockStatement MethodInvocation Assignment dest realSize - MemberReference MemberReference MethodInvocation MethodInvocation ClassCreator begin slen bytes begin range begin range Option NONE scope MethodInvocation setBackRef MemberReference MethodInvocation MethodInvocation slen 30 ByteList blen final RubyString val final int begz MethodInvocation final int endz MethodInvocation == MemberReference Literal StatementExpression StatementExpression StatementExpression IfStatement StatementExpression MemberReference MemberReference |= ByteList vbuf MemberReference int len BinaryOperation < MemberReference MemberReference WhileStatement StatementExpression StatementExpression StatementExpression StatementExpression MemberReference BinaryOperation = System MemberReference MemberReference MemberReference MemberReference MemberReference arraycopy MemberReference MemberReference += System MemberReference MemberReference MemberReference MemberReference MemberReference arraycopy MemberReference MemberReference += MemberReference MemberReference = == MemberReference MemberReference IfStatement StatementExpression StatementExpression StatementExpression StatementExpression MemberReference BinaryOperation = > MemberReference MemberReference MemberReference MethodInvocation = scope MemberReference setBackRef RubyRegexp MemberReference This MemberReference MemberReference MemberReference updateBackRef int len BinaryOperation < BinaryOperation BinaryOperation StatementExpression StatementExpression StatementExpression System MemberReference MemberReference MemberReference MemberReference BinaryOperation arraycopy MemberReference BinaryOperation += bp buf MemberReference view MemberReference infectBy MethodInvocation ReferenceType MemberReference MethodInvocation MemberReference runtime getNil bang runtime getNil MemberReference strDup matcher getBegin matcher getEnd repl null Assignment Assignment MethodInvocation MemberReference StatementExpression Assignment tuFlags val flags val value + BinaryOperation Literal blen len BinaryOperation StatementExpression Assignment MethodInvocation Assignment Assignment len - MemberReference MemberReference bytes cp dest bytes bp len bp len vbuf bytes vbuf begin dest bytes bp vbuf realSize bp vbuf realSize offset endz begz endz BinaryOperation BreakStatement Assignment MethodInvocation Assignment Assignment cp + MemberReference MemberReference offset slen beg matcher MemberReference MemberReference MemberReference search match context scope matcher pattern - MemberReference MemberReference - MemberReference MemberReference - MemberReference MemberReference Assignment MethodInvocation Assignment bytes cp dest bytes bp - MemberReference MemberReference bp - MemberReference MemberReference dest tuFlags BinaryOperation infectBy RubyString runtime getMetaClass dest runtime MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MemberReference modifyCheck bang MethodInvocation MemberReference MethodInvocation = + BinaryOperation MemberReference 3 < MemberReference MemberReference Assignment MemberReference BinaryOperation = dest MemberReference realloc MemberReference MemberReference = MemberReference BinaryOperation = beg offset <= MemberReference MemberReference MemberReference MethodInvocation = System MemberReference BinaryOperation MemberReference MemberReference MemberReference arraycopy MemberReference MemberReference += MemberReference BinaryOperation = begin offset cp range Option NONE bp buf blen len slen offset MemberReference BinaryOperation = dest MemberReference realloc MemberReference BinaryOperation = slen offset slen offset | MemberReference MemberReference match RubyRegexp MemberReference This MemberReference MemberReference MemberReference updateBackRef val MemberReference MethodInvocation objAsString bytes slen frozenCheck val RubyRegexp MemberReference This MemberReference MethodInvocation regsub + BinaryOperation BinaryOperation vbuf realSize blen len MemberReference Literal <<= len - MemberReference MemberReference blen dest realSize blen bp + MemberReference MemberReference slen endz len pattern MethodInvocation getEncoding bytes + MemberReference MemberReference dest bytes bp len bp len offset + MemberReference MemberReference blen - BinaryOperation MemberReference blen bp + MemberReference MemberReference tuFlags flags context scope matcher pattern context block MemberReference MethodInvocation yield repl matcher runtime MethodInvocation getKCode - MemberReference MemberReference - MemberReference MemberReference blen 1 bp buf buf len MemberReference BinaryOperation MemberReference length begin endz endz len + MemberReference MemberReference offset buf len context MemberReference MemberReference BinaryOperation substr getEncoding bp buf beg offset bytes + MemberReference MemberReference range len slen runtime begz - MemberReference MemberReference begin endz endz begz	1
MethodDeclaration Modifier Annotation ReferenceType reopen FormalParameter FormalParameter InvalidValueException LocalVariableDeclaration IfStatement LocalVariableDeclaration IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType args ReferenceType VariableDeclarator BinaryOperation BlockStatement ReferenceType VariableDeclarator MethodInvocation BlockStatement BlockStatement This name Literal required Literal optional Literal ThreadContext IRubyObject Ruby runtime MethodInvocation < MemberReference Literal ThrowStatement IRubyObject tmp MethodInvocation ! tmp isNil TryStatement LocalVariableDeclaration IfStatement TryStatement "reopen" 1 1 context getRuntime args length 1 MethodInvocation TypeConverter MemberReference MethodInvocation Literal convertToTypeWithCheck LocalVariableDeclaration IfStatement LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement IfStatement IfStatement StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression LocalVariableDeclaration LocalVariableDeclaration IfStatement IfStatement CatchClause CatchClause CatchClause ReferenceType VariableDeclarator BinaryOperation BlockStatement LocalVariableDeclaration IfStatement LocalVariableDeclaration StatementExpression IfStatement CatchClause CatchClause CatchClause CatchClause runtime Literal newArgumentError ArraySelector args runtime getIO "to_io" ReferenceType VariableDeclarator BinaryOperation BlockStatement ReferenceType VariableDeclarator ReferenceType VariableDeclarator BasicType VariableDeclarator MethodInvocation BlockStatement BinaryOperation BlockStatement IfStatement MethodInvocation BlockStatement MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement BinaryOperation BlockStatement CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement IRubyObject pathString MemberReference == MemberReference Literal StatementExpression ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement ReferenceType VariableDeclarator MethodInvocation BinaryOperation BlockStatement BlockStatement CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement "wrong number of arguments" Literal RubyIO ios Cast == MemberReference This ReturnStatement OpenFile originalFile MethodInvocation OpenFile selfFile MethodInvocation long pos Literal originalFile isReadable StatementExpression != MethodInvocation Literal StatementExpression MethodInvocation BlockStatement selfFile isWritable StatementExpression selfFile MethodInvocation setMode selfFile MethodInvocation setProcess selfFile MethodInvocation setLineNumber selfFile MethodInvocation setPath selfFile MethodInvocation setFinalizer ChannelDescriptor selfDescriptor MethodInvocation ChannelDescriptor originalDescriptor MethodInvocation != MethodInvocation MethodInvocation IfStatement IfStatement && BinaryOperation BinaryOperation LocalVariableDeclaration IfStatement IOException ex MethodInvocation BadDescriptorException ex MethodInvocation PipeException ex MethodInvocation ArraySelector MethodInvocation args openFile null Assignment ModeFlags modes > MemberReference Literal LocalVariableDeclaration StatementExpression StatementExpression StatementExpression String path MethodInvocation openFile MemberReference setPath == MethodInvocation Literal TryStatement StatementExpression IfStatement ReturnStatement StatementExpression StatementExpression IfStatement PipeException pe MethodInvocation IOException ex MethodInvocation BadDescriptorException ex MethodInvocation InvalidValueException e MethodInvocation 0 ReferenceType MemberReference ios openFile MemberReference This ios getOpenFileChecked getOpenFileChecked 0 Assignment originalFile getPipeStream null MethodInvocation originalFile isWritable StatementExpression MethodInvocation originalFile getMode originalFile getProcess originalFile getLineNumber originalFile getPath originalFile getFinalizer selfFile MethodInvocation getMainStream originalFile MethodInvocation getMainStream selfDescriptor getChannel originalDescriptor getChannel BinaryOperation BlockStatement BlockStatement BinaryOperation BlockStatement != MethodInvocation Literal != MethodInvocation MethodInvocation BasicType VariableDeclarator BinaryOperation BlockStatement IfStatement runtime BinaryOperation newIOError runtime BinaryOperation newIOError runtime BinaryOperation newIOError Literal convertToString MemberReference ClassCreator = args length 1 ReferenceType VariableDeclarator Assignment MethodInvocation Assignment pathString toString path openFile getMainStream null StatementExpression CatchClause MethodInvocation BinaryOperation BlockStatement This MethodInvocation MethodInvocation BinaryOperation BlockStatement runtime newErrnoEPIPEError runtime MemberReference newIOErrorFromException runtime newErrnoEBADFError runtime newErrnoEINVALError RubyIO tmp openFile MemberReference MethodInvocation = originalFile MethodInvocation getPipeStream MethodInvocation selfFile MethodInvocation getWriteStream getDescriptor getDescriptor && BinaryOperation BinaryOperation StatementExpression StatementExpression StatementExpression LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression IfStatement StatementExpression && MethodInvocation BinaryOperation StatementExpression StatementExpression selfFile getPipeStream null selfDescriptor getFileno selfFile MethodInvocation MethodInvocation getPipeStream int fd MethodInvocation == MethodInvocation Literal StatementExpression StatementExpression BinaryOperation BlockStatement + Literal MethodInvocation + Literal MethodInvocation + Literal MethodInvocation 0 openFile ReferenceType IRubyObject modeString MemberReference MemberReference MethodInvocation = openFile MethodInvocation setMode MemberReference MethodInvocation = MethodInvocation CatchClauseParameter ThrowStatement MethodInvocation registerDescriptor != MethodInvocation Literal StatementExpression StatementExpression StatementExpression openFile MethodInvocation getMainStream MethodInvocation registerDescriptor != MethodInvocation Literal ex pos originalFile MethodInvocation getMainStream fflush originalFile MethodInvocation getMainStream fflush >= MethodInvocation Literal <= MethodInvocation Literal MethodInvocation MethodInvocation MethodInvocation ReferenceType VariableDeclarator BasicType VariableDeclarator MethodInvocation MethodInvocation BinaryOperation BlockStatement BlockStatement MethodInvocation originalFile isReadable >= MemberReference Literal MethodInvocation MethodInvocation getDescriptor getFileno selfFile MethodInvocation MethodInvocation getPipeStream originalFile getPipeStream null MethodInvocation MethodInvocation != MemberReference MethodInvocation StatementExpression LocalVariableDeclaration StatementExpression StatementExpression "could not reopen: " ex getMessage "could not reopen: " ex getMessage "could not reopen: " ex getMessage OpenFile ArraySelector MethodInvocation args modes MemberReference MethodInvocation getIOModes modes getOpenFileFlags modes MemberReference Literal getIOModes openFile MethodInvocation setMainStream FileExistsException fee MethodInvocation openFile MethodInvocation getMainStream openFile getPipeStream null MethodInvocation MethodInvocation MethodInvocation MemberReference MemberReference MethodInvocation freopen openFile MethodInvocation getMainStream openFile getPipeStream null fgetpos fflush selfDescriptor getFileno 0 selfDescriptor getFileno 2 selfFile MethodInvocation getMainStream originalDescriptor MemberReference dup2Into MemberReference registerDescriptor Stream pipeFile MethodInvocation int mode MethodInvocation selfFile MethodInvocation getMainStream selfFile Literal setPipeStream != MemberReference Literal StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression selfFile MemberReference setMode pos 0 selfFile MemberReference MemberReference seek originalFile MemberReference MemberReference seek getDescriptor getFileno selfFile MethodInvocation getPipeStream selfFile Literal setPipeStream fd originalFile MethodInvocation MethodInvocation getPipeStream MethodInvocation ReferenceType VariableDeclarator MethodInvocation MethodInvocation Literal convertToString runtime modeString toString runtime "r" ChannelStream MemberReference MemberReference MemberReference fopen runtime MemberReference newErrnoEEXISTError getDescriptor openFile MethodInvocation getPipeStream MethodInvocation unregisterDescriptor openFile Literal setPipeStream runtime path MemberReference MethodInvocation getIOModes getDescriptor clearerr selfDescriptor selfDescriptor selfFile getPipeStream selfFile getMode fclose null pipeFile null MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation mode pos Stream SEEK_SET pos Stream SEEK_SET fclose null getDescriptor getFileno selfFile MethodInvocation getPipeStream ChannelDescriptor newFD2 MethodInvocation selfFile MethodInvocation setPipeStream MemberReference registerDescriptor 1 runtime path modes path fclose openFile MethodInvocation MethodInvocation getPipeStream null runtime openFile MemberReference getModeAsString selfFile MethodInvocation setMainStream selfFile MemberReference setPipeStream selfFile ClassCreator setMainStream MethodInvocation registerDescriptor selfFile MethodInvocation getMainStream fclose originalFile MethodInvocation MethodInvocation getPipeStream ChannelStream MemberReference MemberReference MethodInvocation fdopen newFD2 getDescriptor getFileno runtime ChannelStream MemberReference MemberReference ClassCreator fdopen pipeFile ReferenceType MemberReference MethodInvocation selfFile MethodInvocation getMainStream MethodInvocation setSync getDescriptor MemberReference dup2 runtime newFD2 MemberReference Literal getIOModes runtime originalDescriptor ReferenceType ChannelStream runtime originalDescriptor MethodInvocation dup2 getDescriptor selfFile MethodInvocation getMainStream fd runtime "w" ModeFlags selfDescriptor getFileno isSync	1
MethodDeclaration Modifier Annotation ReferenceType new_complex FormalParameter FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType arg MethodInvocation name Literal module Literal visibility MemberReference compat MemberReference ThreadContext IRubyObject IRubyObject RuntimeHelpers MemberReference MethodInvocation Literal MemberReference invoke "Complex" true PRIVATE CompatVersion RUBY1_9 context context MethodInvocation getRuntime "convert" arg getComplex	1
MethodDeclaration Modifier Annotation ReferenceType newInstance FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType recv ReferenceType args ReferenceType block ReferenceType VariableDeclarator MethodInvocation MemberReference name Literal rest Literal meta Literal IRubyObject IRubyObject Block IRubyObject obj Cast obj MethodInvocation Literal MemberReference MemberReference callMethod obj "new" true true ReferenceType MemberReference recv MethodInvocation getRuntime "initialize" args block RubyClass recv getCurrentContext	0
MethodDeclaration Modifier BasicType getChannelSoType FormalParameter IfStatement private int ReferenceType channel BinaryOperation BlockStatement IfStatement Channel || BinaryOperation BinaryOperation ReturnStatement BinaryOperation BlockStatement BlockStatement instanceof MemberReference ReferenceType instanceof MemberReference ReferenceType MethodInvocation instanceof MemberReference ReferenceType ReturnStatement ReturnStatement channel SocketChannel channel ServerSocketChannel SOCK_STREAM value channel DatagramChannel MethodInvocation MethodInvocation SOCK_DGRAM value getSoTypeDefault	0
MethodDeclaration Modifier localAsgnNode FormalParameter StatementExpression private ReferenceType node MethodInvocation LocalAsgnNode sb MethodInvocation Literal append MethodInvocation append " " node getName	0
MethodDeclaration Modifier Annotation ReferenceType center FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType arg0 ReferenceType arg1 MethodInvocation name Literal compat MemberReference IRubyObject IRubyObject MemberReference MemberReference Literal justify "center" CompatVersion RUBY1_8 arg0 arg1 'c'	0
MethodDeclaration warning FormalParameter FormalParameter IfStatement ReferenceType id ReferenceType message MethodInvocation StatementExpression ID String runtime isVerbose MethodInvocation runtime MethodInvocation getWarnings MemberReference MemberReference warning id message	1
MethodDeclaration Modifier ReferenceType yield FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType context ReferenceType value ReferenceType binding ReferenceType type MethodInvocation ThreadContext IRubyObject Binding Block ReferenceType MemberReference MemberReference Literal Literal Literal MemberReference MemberReference yield Type context value null null false binding type	0
MethodDeclaration Modifier ReferenceType allocate FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType runtime ReferenceType klass ClassCreator Ruby RubyClass ReferenceType MemberReference MemberReference RubyNameError runtime klass	0
MethodDeclaration Modifier ReferenceType getIntParameterConverter FormalParameter ReturnStatement final IntParameterConverter ReferenceType type TernaryExpression Type BinaryOperation MethodInvocation Literal instanceof MemberReference ReferenceType MethodInvocation getIntParameterConverter null type Type ReferenceType type getNativeType Builtin	0
MethodDeclaration Modifier ReferenceType subpat FormalParameter FormalParameter FormalParameter FormalParameter IfStatement ReturnStatement private IRubyObject ReferenceType runtime ReferenceType context ReferenceType regex BasicType nth BinaryOperation BlockStatement MethodInvocation Ruby ThreadContext RubyRegexp int >= MethodInvocation Literal ReturnStatement runtime getNil regex MemberReference This Literal Literal search 0 MethodInvocation context 0 false RubyRegexp MemberReference MethodInvocation nth_match nth context MethodInvocation getCurrentScope MemberReference getBackRef runtime	0
MethodDeclaration Modifier Annotation ReferenceType accept FormalParameter ThrowStatement public Override Object ReferenceType visitor ClassCreator NodeVisitor ReferenceType Literal UnsupportedOperationException "Not supported yet."	0
MethodDeclaration Modifier ReferenceType case278_line1045 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support MethodInvocation Cast Cast new_colon2 Cast getPosition ReferenceType MemberReference ReferenceType Cast ReferenceType MemberReference Node ArraySelector yyVals String ReferenceType MemberReference Node ArraySelector yyVals BinaryOperation Token ArraySelector yyVals BinaryOperation + Literal MemberReference BinaryOperation + Literal MemberReference - 2 yyTop + Literal MemberReference - 2 yyTop 0 yyTop	1
MethodDeclaration Modifier setCodeRange FormalParameter StatementExpression final public BasicType codeRange Assignment int MemberReference BinaryOperation |= flags & MemberReference MemberReference codeRange CR_MASK	0
MethodDeclaration Modifier Annotation ReferenceType autorelease FormalParameter FormalParameter StatementExpression ReturnStatement final public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType release Cast MethodInvocation name Literal required Literal ThreadContext IRubyObject ReferenceType MethodInvocation context MethodInvocation getRuntime "autorelease=" 1 AllocatedDirectMemoryIO getMemoryIO getNil	1
MethodDeclaration Modifier ReferenceType yield FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType context ReferenceType value ReferenceType self ReferenceType klass BasicType aValue ReferenceType binding ReferenceType type MethodInvocation ThreadContext IRubyObject IRubyObject RubyModule boolean Binding Block ReferenceType MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference yield Type context value self klass aValue binding type Block NULL_BLOCK	0
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType context ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 ReferenceType arg3 ReferenceType arg4 ReferenceType arg5 ReferenceType arg6 ReferenceType arg7 ReferenceType arg8 ReferenceType arg9 ReferenceType binding ReferenceType type ReferenceType unusedBlock MethodInvocation ThreadContext IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject Binding Block ReferenceType Block MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference call Type context arg0 arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8 arg9 binding type	1
MethodDeclaration Modifier ReferenceType javaClass ReturnStatement public Class Cast ReferenceType MethodInvocation Class getValue	0
MethodDeclaration Modifier ReferenceType buildIter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement LocalVariableDeclaration StatementExpression LocalVariableDeclaration StatementExpression ReturnStatement public Operand Modifier ReferenceType iterNode ReferenceType s ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation StatementExpression ReferenceType VariableDeclarator MethodInvocation ReferenceType VariableDeclarator MethodInvocation MemberReference final IterNode IR_Scope IR_Scope closure ClassCreator NodeType argsNodeId MethodInvocation && BinaryOperation BinaryOperation MethodInvocation Operand closureRetVal TernaryExpression closure ClassCreator addInstr Variable blockVar MethodInvocation s ClassCreator addInstr blockVar ReferenceType MemberReference MemberReference BlockBody MemberReference getArgumentTypeWackyHack != MethodInvocation Literal != MemberReference Literal MethodInvocation MemberReference Literal Literal buildBlockArgsAssignment BinaryOperation MemberReference MethodInvocation ReferenceType MemberReference s getNewVariable ReferenceType MemberReference ClassCreator IR_Closure s s iterNode iterNode getVarNode null argsNodeId null iterNode getVarNode closure 0 false == MethodInvocation Literal Nil NIL MethodInvocation MemberReference build CLOSURE_RETURN_Instr closureRetVal COPY_Instr blockVar ReferenceType MemberReference iterNode getBodyNode null iterNode getBodyNode closure MetaObject closure	1
MethodDeclaration Modifier ReferenceType allocate FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType runtime ReferenceType klass ClassCreator Ruby RubyClass ReferenceType MemberReference MemberReference RubyUDPSocket runtime klass	0
MethodDeclaration Modifier Annotation ReferenceType sub FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType arg0 ReferenceType block ReferenceType VariableDeclarator MethodInvocation MemberReference name Literal frame Literal reads MemberReference writes MemberReference compat MemberReference ThreadContext IRubyObject Block RubyString str MethodInvocation str MemberReference MemberReference MemberReference sub_bang str "sub" true BACKREF BACKREF CompatVersion RUBY1_8 MethodInvocation strDup context arg0 block context getRuntime	0
MethodDeclaration Modifier testMapEntrySetContainsAndRemove Exception LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression public ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation SimpleInterface si Cast Map map MethodInvocation Set entrySet MethodInvocation Iterator e MethodInvocation Object next1 MethodInvocation Object next2 MethodInvocation MethodInvocation assertFalse MethodInvocation assertTrue MethodInvocation assertTrue entrySet MemberReference remove MethodInvocation assertFalse entrySet MemberReference remove MethodInvocation assertFalse ReferenceType MethodInvocation si getMap map entrySet entrySet iterator e next e next e hasNext entrySet MemberReference contains entrySet MemberReference contains next1 entrySet MemberReference contains next2 entrySet MemberReference contains SimpleInterface manager Literal Literal Literal Literal Literal eval next1 next2 next1 next2 "ruby" "(java)" 1 1 "SimpleInterfaceImpl.new"	0
MethodDeclaration Modifier Annotation ReferenceType all_symbols FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv MethodInvocation name Literal meta Literal ThreadContext IRubyObject context MethodInvocation MethodInvocation getRuntime "all_symbols" true getSymbolTable all_symbols	1
MethodDeclaration Modifier ReferenceType allocate FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType runtime ReferenceType klass ClassCreator Ruby RubyClass ReferenceType MemberReference MemberReference RubyMatchData runtime klass	0
MethodDeclaration Modifier Annotation ReferenceType dimensions FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement AssertStatement AssertStatement LocalVariableDeclaration ReturnStatement static public JRubyMethod IRubyObject ReferenceType context ReferenceType maybeArray ReferenceType dims ReferenceType index ReferenceType VariableDeclarator BinaryOperation BlockStatement BinaryOperation BinaryOperation ReferenceType VariableDeclarator MethodInvocation ThreadContext IRubyObject IRubyObject IRubyObject Ruby runtime MethodInvocation instanceof MemberReference ReferenceType ReturnStatement instanceof MemberReference ReferenceType instanceof MemberReference ReferenceType RubyArray rubyArray Cast MemberReference MemberReference Cast Cast dimsRecurse context getRuntime maybeArray RubyArray MethodInvocation dims RubyArray index RubyFixnum ReferenceType MemberReference context rubyArray ReferenceType MemberReference BasicType Cast runtime newEmptyArray RubyArray maybeArray RubyArray dims int ReferenceType MemberReference RubyFixnum index	1
MethodDeclaration Modifier ReferenceType getArity ReturnStatement public Arity MemberReference arity	0
MethodDeclaration Modifier close IOException StatementExpression public Assignment MemberReference Literal = open false	0
MethodDeclaration Modifier ReferenceType getLoadPath ReturnStatement public IRubyObject MemberReference loadPath	0
MethodDeclaration Modifier ReferenceType newArrayNoCopyLight FormalParameter FormalParameter LocalVariableDeclaration StatementExpression StatementExpression ReturnStatement static public RubyArray ReferenceType runtime ReferenceType args ReferenceType VariableDeclarator Assignment Assignment MemberReference Ruby IRubyObject RubyArray arr ClassCreator MemberReference MemberReference = MemberReference MemberReference = arr ReferenceType MemberReference Literal arr values args arr realLength args length RubyArray runtime false	0
MethodDeclaration Modifier ReferenceType buildDXStr FormalParameter FormalParameter LocalVariableDeclaration ForStatement ReturnStatement public Operand Modifier ReferenceType dstrNode ReferenceType m ReferenceType VariableDeclarator EnhancedForControl StatementExpression ClassCreator final DXStrNode IR_Scope List TypeArgument strPieces ClassCreator VariableDeclaration MethodInvocation MethodInvocation ReferenceType MemberReference ReferenceType ReferenceType ReferenceType VariableDeclarator dstrNode childNodes strPieces MethodInvocation add BacktickString strPieces Operand ArrayList TypeArgument Node nextNode MemberReference MemberReference build ReferenceType nextNode m Operand	1
MethodDeclaration Modifier BasicType JavaSoftHashValue FormalParameter StatementExpression ReturnStatement private static int BasicType h Assignment BinaryOperation int MemberReference BinaryOperation ^= ^ BinaryOperation BinaryOperation h ^ BinaryOperation BinaryOperation ^ MemberReference BinaryOperation >>> MemberReference Literal >>> MemberReference Literal >>> MemberReference Literal h >>> MemberReference Literal h 4 h 20 h 12 h 7	1
MethodDeclaration Modifier ReferenceType variableTableFastFetch FormalParameter ReturnStatement protected Object ReferenceType internedName MethodInvocation String MemberReference variableTableFetch internedName	0
MethodDeclaration Modifier ReferenceType getIterNode ReturnStatement public Node MemberReference iterNode	0
MethodDeclaration Modifier splatCurrentValue StatementExpression public MethodInvocation method MethodInvocation Literal MethodInvocation invokestatic ClassReference p "splatValue" ClassReference MethodInvocation sig ReferenceType ReferenceType ClassReference params RuntimeHelpers RubyArray ReferenceType IRubyObject	0
MethodDeclaration Modifier compileOptimizedMultipleAsgn FormalParameter FormalParameter FormalParameter IfStatement StatementExpression private ReferenceType multipleAsgnNode ReferenceType context BasicType expr BinaryOperation BlockStatement MethodInvocation MultipleAsgnNode BodyCompiler boolean instanceof MethodInvocation ReferenceType IfStatement MemberReference MemberReference MemberReference compileUnoptimizedMultipleAsgn multipleAsgnNode getValueNode ArrayNode BinaryOperation BlockStatement multipleAsgnNode context expr && BinaryOperation BinaryOperation IfStatement != MethodInvocation Literal == MethodInvocation Literal BinaryOperation BlockStatement multipleAsgnNode getHeadNode null multipleAsgnNode getArgsNode null == MethodInvocation Cast LocalVariableDeclaration ForStatement IfStatement multipleAsgnNode MethodInvocation getHeadNode ReferenceType MethodInvocation BasicType VariableDeclarator EnhancedForControl BlockStatement MemberReference BlockStatement size ArrayNode multipleAsgnNode getValueNode boolean normalAssigns Literal VariableDeclaration MethodInvocation IfStatement normalAssigns LocalVariableDeclaration IfStatement true ReferenceType VariableDeclarator multipleAsgnNode MethodInvocation getHeadNode BinaryOperation BlockStatement BasicType VariableDeclarator BinaryOperation BlockStatement Node asgn childNodes instanceof MemberReference ReferenceType StatementExpression BreakStatement int size MethodInvocation && BinaryOperation BinaryOperation LocalVariableDeclaration ForStatement StatementExpression ForStatement ReturnStatement asgn ListNode Assignment multipleAsgnNode MethodInvocation getHeadNode >= MemberReference Literal <= MemberReference Literal ReferenceType VariableDeclarator EnhancedForControl BlockStatement MethodInvocation EnhancedForControl BlockStatement MemberReference Literal = size size 2 size 10 ArrayNode values Cast VariableDeclaration MethodInvocation StatementExpression context MemberReference reverseValues VariableDeclaration MethodInvocation StatementExpression normalAssigns false ReferenceType MethodInvocation ReferenceType VariableDeclarator values childNodes MethodInvocation size ReferenceType VariableDeclarator multipleAsgnNode MethodInvocation getHeadNode MethodInvocation ArrayNode multipleAsgnNode getValueNode Node value MemberReference MemberReference Literal compile Node asgn childNodes MemberReference MemberReference Literal compileAssignment value context true asgn context false	1
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement ReturnStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType args ReferenceType block ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement MethodInvocation ThreadContext IRubyObject RubyModule String IRubyObject Block RubyClass selfClass Cast Ruby ruby MethodInvocation String methodName MemberReference Field field MethodInvocation == MemberReference Literal TryStatement context MethodInvocation getRuntime ReferenceType MemberReference selfClass getClassRuntime ArraySelector MethodInvocation args allFields MemberReference get field null StatementExpression CatchClause CatchClause getNil RubyClass self Literal asJavaString methodName MethodInvocation CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement 0 field Literal MethodInvocation set IllegalAccessException iae MethodInvocation IllegalArgumentException iae MethodInvocation null selfClass MemberReference searchMethod MemberReference MemberReference BinaryOperation error MemberReference MemberReference BinaryOperation error methodName ruby iae + BinaryOperation MemberReference ruby iae + BinaryOperation MemberReference + BinaryOperation Literal methodName + BinaryOperation Literal methodName + Literal MemberReference "." + Literal MemberReference "." "Could not set new method into field: " selfClass "Could not set new method into field: " selfClass	1
MethodDeclaration Modifier ReferenceType getPath ReturnStatement public String MemberReference path	0
MethodDeclaration Modifier writeTrailer IOException LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression private Modifier BasicType VariableDeclarator Modifier BasicType VariableDeclarator Modifier BasicType VariableDeclarator MethodInvocation final int originalDataSize MethodInvocation final int checksumInt Cast final byte trailer ArrayInitializer out MemberReference write def getTotalIn BasicType MethodInvocation Cast Cast Cast Cast Cast Cast Cast Cast trailer int checksum getValue BasicType MemberReference BasicType BinaryOperation BasicType BinaryOperation BasicType BinaryOperation BasicType MemberReference BasicType BinaryOperation BasicType BinaryOperation BasicType BinaryOperation byte checksumInt byte >> MemberReference Literal byte >> MemberReference Literal byte >> MemberReference Literal byte originalDataSize byte >> MemberReference Literal byte >> MemberReference Literal byte >> MemberReference Literal checksumInt 8 checksumInt 16 checksumInt 24 originalDataSize 8 originalDataSize 16 originalDataSize 24	0
MethodDeclaration Modifier ReferenceType getBigInteger5 FormalParameter FormalParameter ReturnStatement final public BigInteger ReferenceType runtime ReferenceType name MethodInvocation Ruby String runtimeCache MemberReference Literal MemberReference getBigInteger runtime 5 name	0
MethodDeclaration Modifier ReferenceType getNodeType ReturnStatement public NodeType MemberReference NodeType OPELEMENTASGNNODE	0
MethodDeclaration Modifier BasicType getSoTypeDefault ReturnStatement protected int Literal 0	0
MethodDeclaration Modifier ReferenceType getRealClass ReturnStatement public RubyClass This	0
MethodDeclaration Modifier visitInsn FormalParameter StatementExpression public BasicType arg0 MethodInvocation int MethodInvocation getMethodVisitor MemberReference visitInsn arg0	0
MethodDeclaration Modifier ReferenceType case420_line1574 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference ClassCreator = yyVal yyVal ReferenceType Literal MemberReference Cast Token "__FILE__" Tokens k__FILE__ ReferenceType MemberReference Token ArraySelector yyVals BinaryOperation + Literal MemberReference 0 yyTop	1
MethodDeclaration Modifier BasicType strIndex FormalParameter FormalParameter LocalVariableDeclaration IfStatement LocalVariableDeclaration IfStatement IfStatement ReturnStatement private int ReferenceType sub BasicType offset ReferenceType VariableDeclarator BinaryOperation BlockStatement ReferenceType VariableDeclarator MethodInvocation ReturnStatement BinaryOperation ReturnStatement MethodInvocation RubyString int ByteList byteList MemberReference < MemberReference Literal StatementExpression IfStatement ByteList other MemberReference MemberReference MemberReference MemberReference sizeIsSmaller Literal == MemberReference Literal MemberReference byteList MemberReference MemberReference indexOf value offset 0 Assignment BinaryOperation ReturnStatement sub value byteList offset other - 1 other realSize 0 offset other offset MemberReference MemberReference += < MemberReference Literal Literal offset byteList realSize offset 0 - 1	1
MethodDeclaration Modifier ReferenceType findEncodingEntry FormalParameter ReturnStatement public Entry ReferenceType bytes MethodInvocation ByteList encodings MemberReference MemberReference BinaryOperation get bytes bytes bytes begin + MemberReference MemberReference bytes begin bytes realSize	0
MethodDeclaration Modifier load FormalParameter FormalParameter IOException IfStatement IfStatement LocalVariableDeclaration TryStatement public Modifier ReferenceType runtime BasicType wrap MemberReference BlockStatement MethodInvocation BlockStatement ReferenceType VariableDeclarator StatementExpression CatchClause final Ruby boolean ! RubyInstanceConfig nativeEnabled ThrowStatement ! Platform MethodInvocation getPlatform ThrowStatement RubyModule ffi MethodInvocation MethodInvocation CatchClauseParameter ThrowStatement MethodInvocation isSupported MethodInvocation runtime Literal defineModule Factory MethodInvocation getInstance Exception e MethodInvocation runtime Literal newLoadError runtime BinaryOperation newLoadError "FFI" MemberReference MemberReference init runtime BinaryOperation newLoadError "Native API access is disabled" + Literal MethodInvocation runtime ffi + Literal MethodInvocation "Unsupported platform: " Platform MethodInvocation getPlatform "Could not load FFI Provider: " e getLocalizedMessage getName	1
MethodDeclaration Modifier ReferenceType constructRubyArray FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement static public RubyArray ReferenceType runtime ReferenceType one ReferenceType two ReferenceType three ReferenceType four MethodInvocation Ruby IRubyObject IRubyObject IRubyObject IRubyObject RubyArray MemberReference MemberReference MemberReference MemberReference MemberReference newArrayLight runtime one two three four	0
MethodDeclaration Modifier Annotation ReferenceType each FormalParameter FormalParameter FormalParameter IOException LocalVariableDeclaration IfStatement ForStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType args ReferenceType block ReferenceType VariableDeclarator BinaryOperation BlockStatement ForControl BlockStatement MethodInvocation name Literal optional Literal frame Literal ThreadContext IRubyObject Block ByteList sep Cast && BinaryOperation MemberReference StatementExpression VariableDeclaration MethodInvocation Assignment StatementExpression MethodInvocation getRuntime "each" 1 true ReferenceType MethodInvocation > MemberReference Literal ! ArraySelector MethodInvocation args Assignment ReferenceType VariableDeclarator ! result isNil MemberReference MethodInvocation = MethodInvocation getNil RubyString MethodInvocation MethodInvocation getRuntime args length 0 Literal isNil MemberReference MemberReference = IRubyObject result MethodInvocation result MemberReference internalSepGets block MemberReference MemberReference yield getGlobalVariables Literal get 0 sep ArraySelector MethodInvocation MethodInvocation args MemberReference internalSepGets sep context result "$/" Literal convertToString getByteList sep 0	0
MethodDeclaration Modifier ReferenceType toString ReturnStatement public String BinaryOperation + BinaryOperation MemberReference + BinaryOperation Literal _value + BinaryOperation TernaryExpression ") = " + BinaryOperation MemberReference BinaryOperation Literal BinaryOperation + SuperMethodInvocation Literal _target == MemberReference Literal "" + Literal MemberReference toString "(" _ref null ", " _ref	0
MethodDeclaration Modifier Annotation BasicType hashCode ReturnStatement public Override int MethodInvocation method hashCode	0
MethodDeclaration Modifier ReferenceType case419_line1571 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference ClassCreator = yyVal yyVal ReferenceType Literal MemberReference Cast Token "false" Tokens kFALSE ReferenceType MemberReference Token ArraySelector yyVals BinaryOperation + Literal MemberReference 0 yyTop	1
MethodDeclaration Modifier BasicType MIXBITS FormalParameter FormalParameter ReturnStatement private static int BasicType u BasicType v BinaryOperation int int | BinaryOperation BinaryOperation & MemberReference MemberReference & MemberReference MemberReference u UMASK v LMASK	1
MethodDeclaration Modifier Annotation ReferenceType op_plus FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType b MethodInvocation name Literal required Literal frame Literal ThreadContext IRubyObject MemberReference MemberReference Literal MethodInvocation addInternal "+" 1 true context b "add" MethodInvocation MethodInvocation getRuntime Literal fastGetClass Literal searchInternalModuleVariable "BigDecimal" "vpPrecLimit"	1
MethodDeclaration Modifier Annotation ReferenceType setValueDepthZero FormalParameter FormalParameter AssertStatement SwitchStatement public Override IRubyObject ReferenceType value BasicType offset BinaryOperation MemberReference MemberReference SwitchStatementCase SwitchStatementCase SwitchStatementCase IRubyObject int < MemberReference MemberReference SIZE_ERROR offset Literal ReturnStatement Literal ReturnStatement ThrowStatement offset SIZE 0 Assignment 1 Assignment ClassCreator MemberReference MemberReference = MemberReference MemberReference = ReferenceType MemberReference variableValueZero value variableValueOne value RuntimeException SIZE_ERROR	1
MethodDeclaration Modifier warn FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter IfStatement LocalVariableDeclaration StatementExpression StatementExpression LocalVariableDeclaration StatementExpression public ReferenceType id ReferenceType fileName BasicType lineNumber ReferenceType message ReferenceType data  MethodInvocation ReturnStatement ReferenceType VariableDeclarator MethodInvocation MethodInvocation ReferenceType VariableDeclarator MethodInvocation ID String int String Object ! runtime warningsEnabled StringBuilder buffer ClassCreator buffer MethodInvocation MethodInvocation MethodInvocation MemberReference append buffer MethodInvocation MethodInvocation Literal append IRubyObject errorStream MethodInvocation errorStream MethodInvocation Literal MethodInvocation callMethod ReferenceType Literal Literal append BinaryOperation append Literal append fileName MemberReference append Literal append "warning: " runtime MethodInvocation getGlobalVariables runtime getCurrentContext "write" runtime MethodInvocation newString StringBuilder 100 ':' + MemberReference Literal ' ' message '\n' Literal get buffer toString lineNumber 1 "$stderr"	1
MethodDeclaration Modifier Annotation ReferenceType convertToType FormalParameter FormalParameter FormalParameter FormalParameter IfStatement LocalVariableDeclaration IfStatement ReturnStatement final static public Deprecated IRubyObject ReferenceType obj ReferenceType target BasicType convertMethodIndex ReferenceType convertMethod MethodInvocation ReturnStatement ReferenceType VariableDeclarator MethodInvocation ThrowStatement MemberReference IRubyObject RubyClass int String target MemberReference isInstance MemberReference IRubyObject val MethodInvocation ! target MemberReference isInstance MethodInvocation val obj obj MemberReference MemberReference MemberReference Literal convertToType val obj MethodInvocation getRuntime obj target convertMethod true BinaryOperation newTypeError + BinaryOperation MethodInvocation + BinaryOperation Literal target getName + BinaryOperation MemberReference " should return " + MethodInvocation Literal convertMethod obj getMetaClass "#"	1
MethodDeclaration Modifier ReferenceType getOperands ReturnStatement public Operand ArrayCreator ReferenceType ArrayInitializer Operand MemberReference _arg	0
MethodDeclaration Modifier Annotation ReferenceType set FormalParameter IfStatement ReturnStatement public Override IRubyObject ReferenceType value BinaryOperation BlockStatement MethodInvocation IRubyObject && BinaryOperation BinaryOperation ThrowStatement runtime MethodInvocation getCurrentContext && MethodInvocation MethodInvocation && MethodInvocation BinaryOperation MethodInvocation MemberReference setErrorInfo ! value isNil ! runtime MethodInvocation getException JavaUtil MemberReference isJavaObject instanceof MethodInvocation ReferenceType runtime Literal newTypeError value MemberReference isInstance value JavaUtil MemberReference unwrapJavaObject Throwable "assigning non-exception to $!" value value	0
MethodDeclaration Modifier BasicType isALU ReturnStatement public boolean BinaryOperation == MemberReference MemberReference _type OpType alu_op	0
MethodDeclaration Modifier Annotation ReferenceType sin FormalParameter FormalParameter LocalVariableDeclaration ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair RubyFloat ReferenceType recv ReferenceType x BasicType VariableDeclarator MethodInvocation name Literal required Literal module Literal visibility MemberReference IRubyObject IRubyObject double value Cast RubyFloat MethodInvocation MethodInvocation newFloat "sin" 1 true Visibility PRIVATE ReferenceType MethodInvocation recv getRuntime Math MemberReference sin RubyFloat RubyKernel MemberReference MemberReference new_float value recv x	0
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType klazz ReferenceType name MethodInvocation ThreadContext IRubyObject RubyModule String resultConverter MemberReference MethodInvocation fromNative context invoker MemberReference invokeVrI function	0
MethodDeclaration Modifier ReferenceType toString ReturnStatement public String Literal "nil"	0
MethodDeclaration Modifier Annotation ReferenceType open FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement TryStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType path ReferenceType block ReferenceType VariableDeclarator MethodInvocation ReturnStatement ReturnStatement StatementExpression name Literal required Literal frame Literal meta Literal compat MemberReference ThreadContext IRubyObject IRubyObject Block RubyDir directory Cast ! block isGiven MemberReference MethodInvocation MethodInvocation "open" 1 true true CompatVersion RUBY1_8 ReferenceType MethodInvocation directory block MemberReference MemberReference yield directory close RubyDir context MethodInvocation MethodInvocation getRuntime context directory getDir MemberReference ArrayCreator MemberReference newInstance context ReferenceType ArrayInitializer Block NULL_BLOCK IRubyObject MemberReference path	1
MethodDeclaration Modifier ReferenceType getBlockCallback1 FormalParameter FormalParameter ReturnStatement final public CompiledBlockCallback ReferenceType runtime ReferenceType method MethodInvocation Ruby String runtimeCache This MemberReference Literal MemberReference getBlockCallback runtime 1 method	0
MethodDeclaration Modifier Annotation ReferenceType log10_19 FormalParameter FormalParameter LocalVariableDeclaration StatementExpression ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair ElementValuePair RubyFloat ReferenceType recv ReferenceType x BasicType VariableDeclarator MethodInvocation MethodInvocation name Literal required Literal module Literal visibility MemberReference compat MemberReference IRubyObject IRubyObject double value Cast MemberReference MemberReference zeroInLogCheck MemberReference MemberReference Literal log_common "log10" 1 true Visibility PRIVATE CompatVersion RUBY1_9 ReferenceType MethodInvocation recv value recv x 10 RubyFloat RubyKernel MemberReference MemberReference new_float recv x	1
MethodDeclaration Annotation call FormalParameter FormalParameter StatementExpression Override ReferenceType context ReferenceType arg MethodInvocation ThreadContext IRubyObject block MemberReference MemberReference yield context arg	0
MethodDeclaration Modifier ReferenceType getFileDescriptor ReturnStatement public FileDescriptor MemberReference fileDescriptor	0
MethodDeclaration Modifier BasicType untraceVar FormalParameter FormalParameter AssertStatement AssertStatement IfStatement ReturnStatement public boolean ReferenceType name ReferenceType command BinaryOperation MethodInvocation MethodInvocation BlockStatement Literal String IRubyObject != MemberReference Literal name Literal startsWith MemberReference isDefined LocalVariableDeclaration ReturnStatement false name null "$" name ReferenceType VariableDeclarator MethodInvocation GlobalVariable variable Cast variable MemberReference removeTrace ReferenceType MethodInvocation command GlobalVariable globalVariables MemberReference get name	1
MethodDeclaration Modifier ReferenceType deleteConstant FormalParameter AssertStatement StatementExpression ReturnStatement public IRubyObject ReferenceType name MethodInvocation MethodInvocation MethodInvocation String IdUtil MemberReference isConstant ensureConstantsSettable MemberReference constantTableRemove name name	1
MethodDeclaration Modifier ReferenceType getCurrentScope ReturnStatement public DynamicScope MemberReference ArraySelector scopeStack MemberReference scopeIndex	0
MethodDeclaration Modifier ReferenceType case432_line1620 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support MethodInvocation Cast Cast Cast Literal Cast new_args Cast getPosition ReferenceType MemberReference ReferenceType MemberReference ReferenceType MemberReference null ReferenceType MemberReference ReferenceType MemberReference ListNode ArraySelector yyVals ListNode ArraySelector yyVals RestArgNode ArraySelector yyVals BlockArgNode ArraySelector yyVals ListNode ArraySelector yyVals BinaryOperation BinaryOperation BinaryOperation BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference + Literal MemberReference + Literal MemberReference + Literal MemberReference - 5 yyTop - 3 yyTop - 1 yyTop 0 yyTop - 5 yyTop	1
MethodDeclaration Modifier Annotation ReferenceType last IfStatement ReturnStatement public JRubyMethod ElementValuePair IRubyObject BinaryOperation ReturnStatement MemberReference name Literal == MemberReference Literal MethodInvocation ArraySelector values "last" realLength 0 MethodInvocation getRuntime BinaryOperation getNil - BinaryOperation Literal + MemberReference MemberReference 1 begin realLength	1
MethodDeclaration Modifier BasicType isSeekable ReturnStatement public boolean BinaryOperation && MemberReference BinaryOperation canBeSeekable instanceof MemberReference ReferenceType channel FileChannel	0
MethodDeclaration Modifier ReferenceType getType FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement static public String BasicType i ReferenceType o ReferenceType o2 ReferenceType o3 Literal long String String String "long,string,string,string"	0
MethodDeclaration Modifier BasicType getPostCount ReturnStatement public int MemberReference postCount	0
MethodDeclaration Modifier Annotation ReferenceType partition FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType block MethodInvocation name Literal frame Literal ThreadContext Block RubyEnumerable MemberReference This MemberReference partition19 "partition" true context block	0
MethodDeclaration Modifier Annotation ReferenceType chars18 FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType block TernaryExpression name Literal frame Literal compat MemberReference ThreadContext Block MethodInvocation MethodInvocation MethodInvocation "chars" true CompatVersion RUBY1_8 block isGiven MemberReference MemberReference each_charCommon18 MethodInvocation This Literal enumeratorize context block context getRuntime "chars"	0
MethodDeclaration Modifier ReferenceType getMath ReturnStatement public RubyModule MemberReference mathModule	0
MethodDeclaration Modifier ReferenceType case44_line466 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference ClassCreator = yyVal yyVal ReferenceType MethodInvocation MethodInvocation ReturnNode Cast getPosition support Cast MethodInvocation ret_args ReferenceType MemberReference ReferenceType MemberReference Cast getPosition Token ArraySelector yyVals Node ArraySelector yyVals ReferenceType MemberReference BinaryOperation BinaryOperation Token ArraySelector yyVals + Literal MemberReference + Literal MemberReference BinaryOperation - 1 yyTop 0 yyTop + Literal MemberReference - 1 yyTop	1
MethodDeclaration Modifier escaped FormalParameter FormalParameter java.io.IOException LocalVariableDeclaration SwitchStatement private ReferenceType src ReferenceType buffer BasicType VariableDeclarator Assignment SwitchStatementCase SwitchStatementCase SwitchStatementCase LexerSource ByteList int c MemberReference MethodInvocation = Literal StatementExpression BreakStatement MemberReference ThrowStatement StatementExpression c src read '\\' MethodInvocation RubyYaccLexer EOF ClassCreator MethodInvocation MemberReference MemberReference parseEscapeIntoBuffer ReferenceType MemberReference MethodInvocation MethodInvocation Literal buffer MemberReference append src buffer SyntaxException PID INVALID_ESCAPE_SYNTAX src getPosition src getCurrentLine "Invalid escape character syntax" c	1
MethodDeclaration Modifier detach IfStatement public BinaryOperation BlockStatement != MemberReference Literal StatementExpression StatementExpression StatementExpression prevAdded null Assignment Assignment Assignment MemberReference MemberReference = MemberReference MemberReference = MemberReference Literal = prevAdded nextAdded nextAdded nextAdded prevAdded prevAdded prevAdded null	0
MethodDeclaration Modifier recacheRespondsTo FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression StatementExpression IfStatement private synchronized ReferenceType newString ReferenceType klass BasicType checkVisibility ReferenceType context ReferenceType VariableDeclarator Assignment Assignment MethodInvocation BlockStatement BlockStatement String RubyClass boolean ThreadContext Ruby runtime MethodInvocation MemberReference MemberReference = MemberReference MethodInvocation = ! respondEntry.method isUndefined StatementExpression StatementExpression context getRuntime lastString newString respondEntry klass MemberReference searchWithCache Assignment Assignment newString MemberReference MethodInvocation = MemberReference MethodInvocation = respondsTo MemberReference MemberReference MemberReference checkVisibilityAndCache respondsTo runtime getFalse respondEntry checkVisibility runtime	0
MethodDeclaration Modifier ReferenceType getVpValue FormalParameter FormalParameter IfStatement IfStatement ReturnStatement private static RubyBigDecimal ReferenceType v BasicType must BinaryOperation BlockStatement IfStatement MemberReference BlockStatement Literal IRubyObject boolean instanceof MemberReference ReferenceType ReturnStatement BinaryOperation BlockStatement must LocalVariableDeclaration IfStatement ThrowStatement null v RubyBigDecimal Cast || BinaryOperation BinaryOperation LocalVariableDeclaration ReturnStatement ReferenceType VariableDeclarator MethodInvocation BlockStatement BlockStatement MethodInvocation ReferenceType MemberReference instanceof MemberReference ReferenceType instanceof MemberReference ReferenceType ReferenceType VariableDeclarator MethodInvocation String err v isImmediate LocalVariableDeclaration StatementExpression StatementExpression v MethodInvocation getRuntime RubyBigDecimal v v RubyFixnum v RubyBignum String s MethodInvocation MethodInvocation ArrayCreator newInstance ReferenceType VariableDeclarator Assignment Assignment BinaryOperation newTypeError v toString v MethodInvocation getRuntime ReferenceType ArrayInitializer ThreadContext context MethodInvocation MemberReference MethodInvocation = MemberReference MethodInvocation = + MemberReference Literal Literal fastGetClass IRubyObject MethodInvocation v MethodInvocation getRuntime err RubyObject MethodInvocation MemberReference MemberReference inspect err v MethodInvocation getMetaClass err " can't be coerced into BigDecimal" "BigDecimal" v MethodInvocation getRuntime getCurrentContext toString context v getBaseName MemberReference newString s	0
MethodDeclaration Modifier ReferenceType getConstant8 FormalParameter FormalParameter ReturnStatement final public IRubyObject ReferenceType context ReferenceType name MethodInvocation ThreadContext String runtimeCache MemberReference MemberReference Literal getConstant context name 8	0
MethodDeclaration Modifier puts FormalParameter StatementExpression static public ReferenceType obj MethodInvocation Object System.out MethodInvocation println obj toString	1
MethodDeclaration Modifier Annotation ReferenceType grant_privilege FormalParameter FormalParameter ThrowStatement static public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType self ReferenceType arg MethodInvocation name Literal module Literal IRubyObject IRubyObject self MethodInvocation getRuntime "grant_privilege" true Literal newNotImplementedError "Process::UID::grant_privilege not implemented yet"	1
MethodDeclaration Modifier Annotation ReferenceType induced_from FormalParameter FormalParameter FormalParameter IfStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType other BinaryOperation BlockStatement IfStatement name Literal meta Literal compat MemberReference ThreadContext IRubyObject IRubyObject || BinaryOperation BinaryOperation ReturnStatement BinaryOperation BlockStatement BlockStatement "induced_from" true CompatVersion RUBY1_8 instanceof MemberReference ReferenceType instanceof MemberReference ReferenceType MemberReference || BinaryOperation BinaryOperation ReturnStatement ThrowStatement other RubyFixnum other RubyBignum other instanceof MemberReference ReferenceType instanceof MemberReference ReferenceType MethodInvocation MethodInvocation other RubyFloat other RubyRational other MemberReference Literal callMethod recv MethodInvocation getRuntime context "to_i" BinaryOperation newTypeError + BinaryOperation Literal + Literal MethodInvocation " into Integer" "failed to convert " other MethodInvocation getMetaClass getName	1
MethodDeclaration Modifier Annotation ReferenceType reverse_bang FormalParameter IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair RubyString ReferenceType context BinaryOperation BlockStatement This name Literal compat MemberReference ThreadContext > MemberReference Literal StatementExpression LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration ForStatement "reverse!" CompatVersion RUBY1_8 value realSize 1 MethodInvocation BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator ForControl BlockStatement modify byte bytes MemberReference int p MemberReference int len MemberReference VariableDeclaration BinaryOperation MemberReference LocalVariableDeclaration StatementExpression StatementExpression value bytes value begin value realSize BasicType VariableDeclarator < MemberReference BinaryOperation ++ i BasicType VariableDeclarator Assignment Assignment int i Literal i >> MemberReference Literal byte b MemberReference MemberReference MemberReference = MemberReference MemberReference = 0 len 1 ArraySelector bytes ArraySelector bytes ArraySelector bytes ArraySelector bytes b BinaryOperation BinaryOperation BinaryOperation BinaryOperation + MemberReference MemberReference + MemberReference MemberReference - BinaryOperation Literal - BinaryOperation Literal p i p i - BinaryOperation MemberReference 1 - BinaryOperation MemberReference 1 + MemberReference MemberReference i + MemberReference MemberReference i p len p len	1
MethodDeclaration Modifier Annotation ReferenceType conv FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType args ReferenceType unusedBlock MethodInvocation name Literal required Literal rest Literal meta Literal ThreadContext IRubyObject IRubyObject Block MethodInvocation MemberReference MemberReference MemberReference Literal convertWithArgs "conv" 3 true true MemberReference MethodInvocation join context recv args "conv" context RubyString MethodInvocation newEmptyString recv getRuntime	0
MethodDeclaration Modifier ReferenceType rshift FormalParameter IfStatement ReturnStatement private IRubyObject BasicType width BinaryOperation BlockStatement MethodInvocation long >= MemberReference BinaryOperation ReturnStatement RubyFixnum MethodInvocation BinaryOperation newFixnum width - MemberReference Literal TernaryExpression getRuntime >> MemberReference MemberReference BIT_SIZE 1 BinaryOperation MethodInvocation MethodInvocation value width < MemberReference Literal RubyFixnum MethodInvocation minus_one RubyFixnum MethodInvocation zero value 0 getRuntime getRuntime	0
MethodDeclaration Modifier Annotation Annotation ReferenceType rbClone ReturnStatement public JRubyMethod ElementValuePair ElementValuePair Override IRubyObject SuperMethodInvocation name Literal frame Literal rbClone "clone" true	0
MethodDeclaration Modifier ReferenceType subtractOther FormalParameter FormalParameter ReturnStatement private IRubyObject ReferenceType context ReferenceType other MethodInvocation ThreadContext IRubyObject MemberReference Literal MemberReference coerceBin context "-" other	0
MethodDeclaration Modifier Annotation write FormalParameter FormalParameter FormalParameter IOException StatementExpression public Override Modifier BasicType b Modifier BasicType off Modifier BasicType len MethodInvocation final byte final int final int writeAdapter MethodInvocation MemberReference MemberReference MethodInvocation call io MethodInvocation getRuntime io io RubyString MethodInvocation ClassCreator newStringLight getCurrentContext io getRuntime ReferenceType MemberReference MemberReference MemberReference Literal ByteList b off len false	0
MethodDeclaration Modifier verifyExit FormalParameter FormalParameter Exception TryStatement private ReferenceType expectedStatus ReferenceType argument StatementExpression StatementExpression CatchClause RubyObject String MethodInvocation MethodInvocation CatchClauseParameter LocalVariableDeclaration IfStatement BinaryOperation eval Literal fail RaiseException re ReferenceType VariableDeclarator MethodInvocation BlockStatement BlockStatement + Literal MemberReference "Expected a SystemExit to be thrown by calling exit." RubyException raisedException MethodInvocation runtime MethodInvocation Literal getClass LocalVariableDeclaration StatementExpression ThrowStatement "exit " argument re getException MemberReference isInstance "SystemExit" ReferenceType VariableDeclarator MethodInvocation MemberReference raisedException IRubyObject status MethodInvocation MemberReference MemberReference assertEquals re raisedException MethodInvocation Literal callMethod expectedStatus status runtime getCurrentContext "status"	0
MethodDeclaration Modifier ReferenceType case220_line887 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference ClassCreator = yyVal yyVal ReferenceType MethodInvocation MethodInvocation NotNode Cast getPosition support Cast getConditionNode ReferenceType MemberReference ReferenceType MemberReference Token ArraySelector yyVals Node ArraySelector yyVals BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference - 1 yyTop 0 yyTop	1
MethodDeclaration Modifier BasicType twosComplementToBinaryBytes FormalParameter ReturnStatement final static public byte BasicType in MethodInvocation byte MemberReference Literal Literal twosComplementToUnsignedBytes in 1 false	0
MethodDeclaration Modifier generateGetProxyClass FormalParameter FormalParameter LocalVariableDeclaration StatementExpression StatementExpression StatementExpression private static ReferenceType selfType ReferenceType cw ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation Type ClassVisitor GeneratorAdapter gpc ClassCreator gpc MemberReference MemberReference MemberReference getStatic gpc returnValue gpc endMethod ReferenceType MemberReference ClassCreator Literal MemberReference MemberReference selfType PROXY_CLASS_FIELD_NAME PROXY_CLASS_TYPE GeneratorAdapter Opcodes ACC_PUBLIC ReferenceType Literal MemberReference MemberReference null EMPTY_TYPE_ARR cw org ReferenceType "___getProxyClass" PROXY_CLASS_TYPE EMPTY_TYPE_ARR objectweb ReferenceType asm ReferenceType commons ReferenceType Method	0
MethodDeclaration Modifier Annotation assign FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression StatementExpression public Override ReferenceType runtime ReferenceType context ReferenceType self ReferenceType value1 ReferenceType value2 ReferenceType value3 ReferenceType block MethodInvocation MethodInvocation MethodInvocation Ruby ThreadContext IRubyObject IRubyObject IRubyObject IRubyObject Block parameter1 MemberReference MemberReference MemberReference MemberReference MemberReference Literal assign parameter2 MemberReference MemberReference MemberReference MemberReference MemberReference Literal assign rest MemberReference MemberReference MemberReference MethodInvocation MemberReference Literal assign runtime context self value1 block false runtime context self value2 block false runtime context self runtime MemberReference newArrayNoCopyLight block true value3	0
MethodDeclaration Modifier Annotation ReferenceType open FormalParameter FormalParameter FormalParameter ReturnStatement static public Deprecated IRubyObject ReferenceType recv ReferenceType args ReferenceType block MethodInvocation IRubyObject IRubyObject Block MethodInvocation MemberReference MemberReference MemberReference open recv MethodInvocation getRuntime recv args block getCurrentContext	1
MethodDeclaration Modifier init FormalParameter StatementExpression StatementExpression StatementExpression ForStatement LocalVariableDeclaration LocalVariableDeclaration IfStatement IfStatement IfStatement public ReferenceType additionalDirectories Assignment Assignment Assignment ForControl BlockStatement ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation BlockStatement MethodInvocation BlockStatement BinaryOperation BlockStatement List MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation = VariableDeclaration MethodInvocation StatementExpression RubyHash env Cast RubyString env_rubylib MethodInvocation env MethodInvocation MemberReference has_key_p LocalVariableDeclaration LocalVariableDeclaration ForStatement ! Ruby isSecurityRestricted TryStatement == MethodInvocation Literal StatementExpression loadPath RubyArray MemberReference newArray loadedFeatures RubyArray MemberReference newArray loadedFeaturesInternal Collections MemberReference synchronizedList ReferenceType VariableDeclarator iter hasNext MethodInvocation ReferenceType MethodInvocation runtime Literal newString isTrue env_rubylib ReferenceType VariableDeclarator ReferenceType VariableDeclarator ForControl BlockStatement LocalVariableDeclaration IfStatement CatchClause runtime getSafeLevel 0 MethodInvocation runtime runtime loadedFeatures Iterator iter MethodInvocation Cast addPath RubyHash runtime MethodInvocation getObject "RUBYLIB" String rubylib MethodInvocation String paths MethodInvocation VariableDeclaration BinaryOperation MemberReference StatementExpression ReferenceType VariableDeclarator BinaryOperation BlockStatement CatchClauseParameter Literal addPath additionalDirectories iterator ReferenceType MethodInvocation Literal fastGetConstant env MethodInvocation MethodInvocation MemberReference op_aref rubylib MemberReference split BasicType VariableDeclarator < MemberReference MemberReference ++ i MethodInvocation String jrubyHome MethodInvocation != MemberReference Literal LocalVariableDeclaration LocalVariableDeclaration IfStatement SecurityException e "." String iter next "ENV" toString runtime getCurrentContext env_rubylib File pathSeparator int i Literal i paths length MemberReference addPath runtime getJRubyHome jrubyHome null BasicType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation BlockStatement BlockStatement 0 ArraySelector paths char sep Literal String rubyDir BinaryOperation runtime is1_9 StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression MemberReference '/' + BinaryOperation MemberReference MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation i + BinaryOperation Literal sep BinaryOperation addPath BinaryOperation addPath BinaryOperation addPath BinaryOperation addPath BinaryOperation addPath BinaryOperation addPath BinaryOperation addPath + BinaryOperation MemberReference "ruby" + BinaryOperation MemberReference + BinaryOperation Literal + BinaryOperation MemberReference + MemberReference MemberReference + BinaryOperation MemberReference + BinaryOperation Literal + MemberReference MemberReference + BinaryOperation Literal sep + BinaryOperation MemberReference Constants RUBY1_9_MAJOR_VERSION + BinaryOperation MemberReference "shared" + BinaryOperation MemberReference Constants RUBY_MAJOR_VERSION rubyDir Constants RUBY1_9_MAJOR_VERSION + BinaryOperation MemberReference Constants RUBY_MAJOR_VERSION + BinaryOperation MemberReference "shared" rubyDir Constants RUBY_MAJOR_VERSION + MemberReference MemberReference "lib" + MemberReference Literal sep + MemberReference Literal sep + MemberReference Literal sep + MemberReference Literal sep + MemberReference Literal sep jrubyHome sep rubyDir "site_ruby" rubyDir "site_ruby" rubyDir "site_ruby" rubyDir "site_ruby" rubyDir "site_ruby"	1
MethodDeclaration Modifier ReferenceType falseIfTrue FormalParameter FormalParameter ReturnStatement private static RubyBoolean ReferenceType runtime ReferenceType truish TernaryExpression Ruby IRubyObject MethodInvocation MethodInvocation MethodInvocation truish isTrue runtime getFalse runtime getTrue	0
MethodDeclaration Modifier ReferenceType case236_line920 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support MethodInvocation Cast arg_blk_pass support MethodInvocation Cast newSplatNode ReferenceType MemberReference Cast getPosition ReferenceType MemberReference BlockPassNode ArraySelector yyVals ReferenceType MemberReference Node ArraySelector yyVals BinaryOperation Token ArraySelector yyVals BinaryOperation + Literal MemberReference BinaryOperation + Literal MemberReference 0 yyTop + Literal MemberReference - 1 yyTop - 2 yyTop	1
MethodDeclaration Modifier checkSuperDisabledOrOutOfMethod FormalParameter FormalParameter FormalParameter IfStatement protected static ReferenceType context ReferenceType frameClass ReferenceType frameName BinaryOperation BlockStatement ThreadContext RubyModule String == MemberReference Literal IfStatement frameClass null BinaryOperation BlockStatement BlockStatement != MemberReference Literal ThrowStatement ThrowStatement frameName null MethodInvocation MethodInvocation context MethodInvocation getRuntime context MethodInvocation getRuntime BinaryOperation MemberReference newNameError Literal Literal MethodInvocation newNoMethodError + BinaryOperation Literal frameName "super called outside of method" null context MethodInvocation getRuntime + Literal MemberReference "' disabled" getNil "superclass method '" frameName	0
MethodDeclaration Modifier ReferenceType getState ReturnStatement public Object MemberReference state	0
MethodDeclaration Modifier ReferenceType kcode FormalParameter ReturnStatement public IRubyObject ReferenceType runtime TernaryExpression Ruby BinaryOperation MethodInvocation MethodInvocation == MemberReference Literal runtime getNil runtime MemberReference newString kcode null kcode	0
MethodDeclaration Modifier ReferenceType getMethods ReturnStatement public JavaProxyMethod MethodInvocation methods ArrayCreator toArray ReferenceType MethodInvocation JavaProxyMethod methods size	1
MethodDeclaration Modifier Annotation eventHandler FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression public Override ReferenceType context ReferenceType eventName ReferenceType file BasicType line ReferenceType name ReferenceType type MethodInvocation ThreadContext String String int String IRubyObject lines MemberReference add line	0
MethodDeclaration Modifier ReferenceType subInspect FormalParameter LocalVariableDeclaration ForStatement ReturnStatement static public ASTInspector ReferenceType nodes  ReferenceType VariableDeclarator EnhancedForControl BlockStatement MemberReference Node ASTInspector newInspector ClassCreator VariableDeclaration MemberReference StatementExpression newInspector ReferenceType ReferenceType VariableDeclarator nodes MethodInvocation ASTInspector Node node newInspector MemberReference inspect node	0
MethodDeclaration Modifier createNewString FormalParameter FormalParameter StatementExpression StatementExpression StatementExpression ForStatement public ReferenceType callback BasicType count MethodInvocation MethodInvocation MethodInvocation ForControl BlockStatement ArrayCallback int loadRuntime method MemberReference ldc method MethodInvocation Literal MethodInvocation invokestatic VariableDeclaration BinaryOperation MemberReference StatementExpression StatementExpression StandardASMCompiler STARTING_DSTR_SIZE ClassReference p "newStringLight" ClassReference ClassReference ClassReference sig BasicType VariableDeclarator < MemberReference MemberReference ++ i MethodInvocation MethodInvocation ReferenceType ReferenceType ReferenceType BasicType int i Literal i count callback This Literal MemberReference nextValue method MethodInvocation Literal MethodInvocation invokevirtual RubyString RubyString Ruby int 0 null i ClassReference p "append" ClassReference MethodInvocation sig ReferenceType ReferenceType ClassReference params RubyString RubyString ReferenceType IRubyObject	0
MethodDeclaration Modifier ReferenceType unmarshalFrom FormalParameter java.io.IOException LocalVariableDeclaration StatementExpression ReturnStatement static public RubyString ReferenceType input ReferenceType VariableDeclarator MethodInvocation MemberReference UnmarshalStream RubyString result MethodInvocation input MemberReference registerLinkTarget result MethodInvocation MethodInvocation newString result input getRuntime input unmarshalString	0
MethodDeclaration Modifier ReferenceType buildHash FormalParameter FormalParameter IfStatement public Operand ReferenceType hashNode ReferenceType m BinaryOperation BlockStatement BlockStatement HashNode IR_Scope || BinaryOperation BinaryOperation ReturnStatement LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration ForStatement ReturnStatement == MethodInvocation Literal == MethodInvocation Literal ClassCreator BasicType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator EnhancedForControl BlockStatement ClassCreator hashNode getListNode null hashNode MethodInvocation getListNode 0 ReferenceType Literal int i Literal Operand key Literal Operand value Literal List TypeArgument args ClassCreator VariableDeclaration MethodInvocation LocalVariableDeclaration IfStatement ReferenceType MemberReference size Hash null 0 null null ReferenceType ReferenceType ReferenceType VariableDeclarator hashNode MethodInvocation getListNode ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement Hash args KeyValuePair ArrayList TypeArgument Node nextNode childNodes Operand v MethodInvocation == MemberReference Literal StatementExpression StatementExpression StatementExpression ReferenceType MemberReference MemberReference build key null Assignment MethodInvocation Assignment KeyValuePair nextNode m MemberReference MemberReference = args ClassCreator add MemberReference Literal = key v ReferenceType MemberReference MemberReference key null KeyValuePair key v	1
MethodDeclaration Modifier simplifyOperands FormalParameter StatementExpression StatementExpression IfStatement public ReferenceType valueMap SuperMethodInvocation Assignment BinaryOperation StatementExpression Map TypeArgument TypeArgument MemberReference simplifyOperands MemberReference MethodInvocation = != MemberReference Literal Assignment ReferenceType ReferenceType valueMap _methAddr _methAddr MemberReference getSimplifiedOperand _closure null MemberReference MethodInvocation = Operand Operand valueMap _closure _closure MemberReference getSimplifiedOperand valueMap	1
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression IfStatement ReturnStatement public IRubyObject ReferenceType ctx ReferenceType largs ReferenceType blk ReferenceType VariableDeclarator MethodInvocation BinaryOperation BlockStatement MethodInvocation ThreadContext IRubyObject Block IRubyObject larg MethodInvocation MemberReference MemberReference Literal checkContext || BinaryOperation BinaryOperation StatementExpression runtime getNil MemberReference MemberReference checkArgs localContext ctx "max{}" == MemberReference Literal > MethodInvocation Literal Assignment runtime largs ArraySelector result null RubyComparable MemberReference MethodInvocation MemberReference MemberReference cmpint 0 MemberReference MemberReference = Literal ctx block MemberReference MethodInvocation Literal Literal Literal yield larg ArraySelector result ArraySelector result larg 0 ctx runtime MemberReference MemberReference newArray null null true Literal Literal larg ArraySelector result 0 0 Literal 0	0
MethodDeclaration Modifier marshal FormalParameter FormalParameter FormalParameter StatementExpression final public ReferenceType invocation ReferenceType buffer ReferenceType parameter MethodInvocation Invocation InvocationBuffer IRubyObject buffer Cast putFloat BasicType MethodInvocation float RubyNumeric MemberReference num2dbl parameter	1
MethodDeclaration Modifier ReferenceType getline FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType runtime ReferenceType separator MethodInvocation Ruby ByteList MemberReference MemberReference Literal getline runtime separator - 1	0
MethodDeclaration Modifier ReferenceType eltInternalSet FormalParameter FormalParameter ReturnStatement final public IRubyObject BasicType offset ReferenceType item Assignment int IRubyObject MemberReference MemberReference = ArraySelector values item BinaryOperation + MemberReference MemberReference begin offset	1
MethodDeclaration Modifier Annotation ReferenceType count19 FormalParameter FormalParameter LocalVariableDeclaration IfStatement LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType arg ReferenceType VariableDeclarator BinaryOperation ReturnStatement ReferenceType VariableDeclarator ReferenceType VariableDeclarator Modifier BasicType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation name Literal compat MemberReference ThreadContext IRubyObject Ruby runtime MethodInvocation == MemberReference Literal MethodInvocation RubyString otherStr MethodInvocation Encoding enc MethodInvocation final boolean table ArrayCreator TrTables tables MethodInvocation MemberReference MemberReference MemberReference MemberReference countCommon19 "count" CompatVersion RUBY1_9 context getRuntime value realSize 0 RubyFixnum MemberReference zero arg convertToString MemberReference checkEncoding BasicType MemberReference otherStr MethodInvocation MemberReference Literal Literal MemberReference trSetupTable runtime table tables enc runtime otherStr boolean TRANS_SIZE context getRuntime table null true enc	1
MethodDeclaration Modifier Annotation assign FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression public Override ReferenceType runtime ReferenceType context ReferenceType self ReferenceType value1 ReferenceType block MethodInvocation MethodInvocation Ruby ThreadContext IRubyObject IRubyObject Block parameter1 MemberReference MemberReference MemberReference MemberReference MemberReference Literal assign rest MemberReference MemberReference MemberReference MethodInvocation MemberReference Literal assign runtime context self value1 block false runtime context self runtime MemberReference newArrayNoCopyLight block true IRubyObject NULL_ARRAY	0
MethodDeclaration Modifier emitPUT_FIELD FormalParameter LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression public ReferenceType putField ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation PUT_FIELD_Instr String field Cast MemberReference declareField MethodInvocation emit MethodInvocation emit MethodInvocation method ReferenceType MethodInvocation field putField ArraySelector getOperands putField ArraySelector getOperands MethodInvocation MemberReference MethodInvocation putField FieldRef putField ArraySelector getOperands Literal Literal Type ClassReference getType field Type ClassReference getType Literal 0 2 ReferenceType ReferenceType 1 Object Object	1
MethodDeclaration Modifier blockArgWarning FormalParameter FormalParameter StatementExpression private ReferenceType ruby BasicType length MethodInvocation Ruby int ruby MethodInvocation getWarnings MemberReference BinaryOperation warn ID MULTIPLE_VALUES_FOR_BLOCK + BinaryOperation Literal + Literal MemberReference " for 1)" "multiple values for a block parameter (" length	0
MethodDeclaration Modifier ReferenceType case225_line883 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support MethodInvocation Cast newArrayNode Cast getPosition ReferenceType MemberReference ReferenceType MemberReference Node ArraySelector yyVals Token ArraySelector yyVals BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference - 2 yyTop - 3 yyTop	1
MethodDeclaration Modifier ReferenceType unixpath FormalParameter FormalParameter IfStatement private String ReferenceType addr ReferenceType len BinaryOperation BlockStatement BlockStatement LibCSocket ReferenceType IntByReference > MethodInvocation Literal ReturnStatement ReturnStatement sockaddr_un len getValue 2 MethodInvocation Literal addr MethodInvocation path "" toString	0
MethodDeclaration Modifier Annotation ReferenceType tell ReturnStatement public JRubyMethod ElementValuePair IRubyObject MethodInvocation name Literal MethodInvocation getRuntime "tell" getNil	0
MethodDeclaration Modifier ReferenceType case184_line727 FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment Cast MemberReference Object Object int MemberReference MethodInvocation = ReferenceType MemberReference yyVal yyVal support Cast Cast node_assign Node yyVal ReferenceType MemberReference ReferenceType MemberReference Node ArraySelector yyVals Node ArraySelector yyVals BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference - 2 yyTop 0 yyTop	1
MethodDeclaration Modifier ReferenceType case220_line864 FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop MethodInvocation Assignment MemberReference Object Object int support Cast checkExpression MemberReference MethodInvocation = yyVal ReferenceType MemberReference yyVal support MethodInvocation Cast Cast arg_concat Node ArraySelector yyVals Cast getPosition ReferenceType MemberReference ReferenceType MemberReference BinaryOperation ReferenceType MemberReference ListNode ArraySelector yyVals Node ArraySelector yyVals + Literal MemberReference ListNode ArraySelector yyVals BinaryOperation BinaryOperation - 1 yyTop BinaryOperation + Literal MemberReference + Literal MemberReference + Literal MemberReference - 4 yyTop - 1 yyTop - 4 yyTop	1
MethodDeclaration Modifier Annotation ReferenceType op_binmode FormalParameter FormalParameter LocalVariableDeclaration ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType VariableDeclarator Cast name Literal compat MemberReference ThreadContext IRubyObject ArgsFileData data MethodInvocation ReferenceType MemberReference "binmode?" CompatVersion RUBY1_9 MemberReference MemberReference Literal getData RubyIO data currentFile context recv "no stream"	1
MethodDeclaration Modifier ReferenceType getSimplifiedOperand FormalParameter StatementExpression ReturnStatement public Operand ReferenceType valueMap Assignment This Map TypeArgument TypeArgument MemberReference MethodInvocation = ReferenceType ReferenceType _re _re MemberReference getSimplifiedOperand Operand Operand valueMap	0
MethodDeclaration Modifier ReferenceType getPackageName ReturnStatement public String MethodInvocation String Literal ClassReference MemberReference MemberReference format "%s.%s.%s" MethodInvocation MethodInvocation ReferenceType OS ARCH getPackage getName Platform	0
MethodDeclaration Modifier Annotation ReferenceType times FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType recv ReferenceType unusedBlock ReferenceType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation name Literal module Literal IRubyObject Block Ruby runtime MethodInvocation double system BinaryOperation double user BinaryOperation RubyFloat zero MethodInvocation RubyStruct MethodInvocation ArrayCreator MemberReference newStruct "times" true recv getRuntime / MethodInvocation Literal / MethodInvocation Literal runtime Literal newFloat runtime getTmsStruct ReferenceType ArrayInitializer Block NULL_BLOCK threadBean getCurrentThreadCpuTime 1000000000.0 threadBean getCurrentThreadUserTime 1000000000.0 0.0 IRubyObject MethodInvocation MethodInvocation MemberReference MemberReference RubyFloat MemberReference MemberReference newFloat RubyFloat MemberReference MemberReference newFloat zero zero runtime user runtime system	0
MethodDeclaration Modifier irem StatementExpression public MethodInvocation MethodInvocation getMethodVisitor MemberReference visitInsn IREM	0
MethodDeclaration Modifier ReferenceType getSingletonClass FormalParameter FormalParameter IfStatement static public RubyClass ReferenceType runtime ReferenceType receiver BinaryOperation BlockStatement BlockStatement Ruby IRubyObject || BinaryOperation BinaryOperation ThrowStatement IfStatement ReturnStatement instanceof MemberReference ReferenceType instanceof MemberReference ReferenceType MethodInvocation BinaryOperation BlockStatement MethodInvocation receiver RubyFixnum receiver RubySymbol runtime BinaryOperation newTypeError && BinaryOperation MethodInvocation ThrowStatement receiver getSingletonClass + Literal MethodInvocation >= MethodInvocation Literal ! receiver isTaint MethodInvocation "no virtual class for " receiver MethodInvocation getMetaClass runtime getSafeLevel 4 runtime Literal newSecurityError getBaseName "Insecure: can't extend object."	0
MethodDeclaration Modifier ReferenceType addAsBignum FormalParameter FormalParameter ReturnStatement private IRubyObject ReferenceType context ReferenceType other MethodInvocation ThreadContext RubyFixnum RubyBignum MethodInvocation MethodInvocation MemberReference newBignum MemberReference MemberReference op_plus context getRuntime value context other	0
MethodDeclaration Modifier ReferenceType getStaticAnnotatedMethods1_8 ReturnStatement public Map TypeArgument TypeArgument MemberReference ReferenceType ReferenceType staticAnnotatedMethods1_8 String List TypeArgument ReferenceType JavaMethodDescriptor	1
MethodDeclaration clear FormalParameter StatementExpression StatementExpression StatementExpression StatementExpression BasicType size Assignment Assignment Assignment Assignment int MemberReference MemberReference = This Literal = MemberReference MemberReference = MemberReference ArrayCreator = range size MemberReference 0 ratio DEFAULT_RATIO table ReferenceType MemberReference size Entry range	0
MethodDeclaration Modifier ReferenceType case49_line481 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support Cast Cast Cast Literal new_call ReferenceType MemberReference ReferenceType MemberReference ReferenceType MemberReference null Node ArraySelector yyVals Token ArraySelector yyVals Node ArraySelector yyVals BinaryOperation BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference + Literal MemberReference - 3 yyTop - 1 yyTop 0 yyTop	1
MethodDeclaration Modifier setTraceFunc FormalParameter StatementExpression public ReferenceType traceFunc Assignment RubyProc This MemberReference = MemberReference traceFunc traceFunc	0
MethodDeclaration Modifier ReferenceType sub FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement static public IRubyObject ReferenceType context ReferenceType recv ReferenceType args ReferenceType block ReferenceType VariableDeclarator MethodInvocation BlockStatement MemberReference ThreadContext IRubyObject IRubyObject Block RubyString str Cast ! str MethodInvocation MemberReference MemberReference MemberReference sub_bang StatementExpression str ReferenceType MethodInvocation isNil context args block MethodInvocation RubyString MethodInvocation MemberReference MethodInvocation getLastlineString context MethodInvocation getCurrentScope dup context context getRuntime MemberReference setLastLine str	1
MethodDeclaration Modifier Annotation ReferenceType op_cmp FormalParameter IfStatement ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType other BinaryOperation BlockStatement MethodInvocation name Literal IRubyObject == This MemberReference ReturnStatement MethodInvocation getRuntime "<=>" other MethodInvocation getNil RubyFixnum MethodInvocation zero getRuntime	1
MethodDeclaration Modifier BasicType isInDef ReturnStatement public boolean MemberReference inDefinition	0
MethodDeclaration Modifier ReferenceType toHex FormalParameter LocalVariableDeclaration ForStatement ReturnStatement private static ByteList BasicType val ReferenceType VariableDeclarator ForControl BlockStatement MemberReference byte ByteList byteList ClassCreator VariableDeclaration BinaryOperation MemberReference LocalVariableDeclaration StatementExpression StatementExpression byteList ReferenceType BinaryOperation BasicType VariableDeclarator VariableDeclarator < MemberReference MemberReference ++ i BasicType VariableDeclarator MethodInvocation MethodInvocation ByteList * MemberReference Literal int i Literal j MemberReference i j int b BinaryOperation byteList MemberReference append byteList MemberReference append val length 2 0 val length & MemberReference Literal ArraySelector digits ArraySelector digits ArraySelector val 0xFF BinaryOperation BinaryOperation MemberReference >> MemberReference Literal & MemberReference Literal i b 4 b 0xF	0
MethodDeclaration Modifier BasicType isFrame ReturnStatement public boolean MemberReference frame	0
MethodDeclaration Modifier ReferenceType newBoolean FormalParameter ReturnStatement public RubyBoolean BasicType value TernaryExpression boolean MemberReference MemberReference MemberReference value trueObject falseObject	0
MethodDeclaration Modifier call FormalParameter StatementExpression public ReferenceType context MethodInvocation BodyCompiler MethodInvocation MemberReference Literal compile attrAssignNode getReceiverNode context true	0
MethodDeclaration Modifier BasicType getValue ReturnStatement public long This MemberReference MethodInvocation intern getValue	0
MethodDeclaration Modifier setCurrentVisibility FormalParameter StatementExpression public ReferenceType visibility MethodInvocation Visibility MethodInvocation getCurrentFrame MemberReference setVisibility visibility	0
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement SynchronizedStatement ReturnStatement public IRubyObject ReferenceType ctx ReferenceType largs ReferenceType blk ReferenceType VariableDeclarator MethodInvocation ThrowStatement MemberReference StatementExpression MethodInvocation ThreadContext IRubyObject Block IRubyObject larg MethodInvocation ! block MethodInvocation MemberReference MemberReference yield MemberReference result MethodInvocation runtime getNil MemberReference MemberReference checkArgs isTrue ctx larg JumpException SPECIAL_JUMP result MemberReference append runtime largs larg	1
MethodDeclaration Modifier Annotation ReferenceType interpret FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression ReturnStatement public Override IRubyObject ReferenceType runtime ReferenceType context ReferenceType self ReferenceType aBlock ReferenceType VariableDeclarator MethodInvocation MemberReference Ruby ThreadContext IRubyObject Block IRubyObject result MethodInvocation runtime MethodInvocation getGlobalVariables result MethodInvocation getValueNode MemberReference MemberReference set MemberReference MemberReference MemberReference MemberReference interpret name result runtime context self aBlock	0
MethodDeclaration Modifier ReferenceType case464_line1757 FormalParameter FormalParameter FormalParameter IfStatement StatementExpression StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop BinaryOperation BlockStatement IfStatement MethodInvocation Assignment MemberReference Object Object int == Cast Literal StatementExpression BinaryOperation BlockStatement support Cast checkExpression MemberReference Cast = yyVal ReferenceType MemberReference null MethodInvocation instanceof Cast ReferenceType StatementExpression ReferenceType MemberReference yyVal ReferenceType MemberReference Node ArraySelector yyVals Literal yyerror ReferenceType MemberReference ILiteralNode MethodInvocation Node ArraySelector yyVals Node ArraySelector yyVals BinaryOperation "can't define single method for ()." Node ArraySelector yyVals Literal yyerror BinaryOperation BinaryOperation + Literal MemberReference BinaryOperation "can't define single method for literals." + Literal MemberReference + Literal MemberReference - 2 yyTop + Literal MemberReference - 2 yyTop - 2 yyTop - 2 yyTop	1
MethodDeclaration Modifier ReferenceType newCompiledBlockLight FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement static public BlockBody ReferenceType arity ReferenceType scope ReferenceType callback BasicType hasMultipleArgsHead BasicType argumentType ClassCreator Arity StaticScope CompiledBlockCallback boolean int ReferenceType MemberReference MemberReference MemberReference MemberReference MemberReference CompiledBlockLight arity scope callback hasMultipleArgsHead argumentType	0
MethodDeclaration Modifier invoke FormalParameter LocalVariableDeclaration IfStatement StatementExpression public ReferenceType buffer ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation Closure ReferenceType Object recv MethodInvocation == MemberReference Literal StatementExpression ReturnStatement MemberReference MemberReference invoke Buffer proc get recv null MethodInvocation buffer recv buffer Literal setIntReturn 0	0
MethodDeclaration Modifier ReferenceType case10_line323 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference ClassCreator = yyVal yyVal ReferenceType MethodInvocation Cast Cast AliasNode Cast getPosition ReferenceType Cast ReferenceType Cast ReferenceType MemberReference String ReferenceType MemberReference String ReferenceType MemberReference Token ArraySelector yyVals Token ArraySelector yyVals Token ArraySelector yyVals BinaryOperation BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference + Literal MemberReference - 3 yyTop - 2 yyTop 0 yyTop	1
MethodDeclaration Modifier ReferenceType asByteBuffer ThrowStatement public java ReferenceType MethodInvocation nio ReferenceType ex ByteBuffer	0
MethodDeclaration Modifier compileOpElementAsgnWithOr FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression IfStatement public ReferenceType node ReferenceType context BasicType expr Modifier ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MemberReference StatementExpression Node BodyCompiler boolean final OpElementAsgnNode opElementAsgnNode Cast CompilerCallback receiverCallback ClassCreator ArgumentsCallback argsCallback ClassCreator CompilerCallback valueCallback ClassCreator context MethodInvocation getInvocationCompiler ! expr MethodInvocation ReferenceType MemberReference ReferenceType MethodDeclaration ReferenceType MethodInvocation ReferenceType MethodDeclaration MemberReference MemberReference MemberReference opElementAsgnWithOr context consumeCurrentValue OpElementAsgnNode node CompilerCallback Modifier call FormalParameter StatementExpression OpElementAsgnArgumentsCallback opElementAsgnNode getArgsNode CompilerCallback Modifier call FormalParameter StatementExpression receiverCallback argsCallback valueCallback public ReferenceType context MethodInvocation public ReferenceType context MethodInvocation BodyCompiler MethodInvocation MemberReference Literal compile BodyCompiler MethodInvocation MemberReference Literal compile opElementAsgnNode getReceiverNode context true opElementAsgnNode getValueNode context true	1
MethodDeclaration Modifier ReferenceType convert FormalParameter FormalParameter IfStatement ReturnStatement public IRubyObject ReferenceType runtime ReferenceType object BinaryOperation ReturnStatement MethodInvocation Ruby Object == MemberReference Literal MethodInvocation RubyFloat MemberReference Cast newFloat object null runtime getNil runtime ReferenceType MemberReference Float object	0
MethodDeclaration Modifier ReferenceType createProxyClass FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement StatementExpression LocalVariableDeclaration StatementExpression StatementExpression StatementExpression IfStatement StatementExpression StatementExpression StatementExpression ReturnStatement private static RubyClass ReferenceType runtime ReferenceType baseType ReferenceType javaClass BasicType invokeInherited ReferenceType VariableDeclarator BinaryOperation ReturnStatement MethodInvocation ReferenceType VariableDeclarator Assignment MethodInvocation MethodInvocation MemberReference BlockStatement MethodInvocation MethodInvocation MethodInvocation MemberReference Ruby RubyClass JavaClass boolean RubyClass proxyClass MethodInvocation != MemberReference Literal MemberReference RubyClass MemberReference checkInheritable RubyClass superClass Cast MemberReference MethodInvocation = proxyClass MethodInvocation makeMetaClass proxyClass MethodInvocation setAllocator invokeInherited StatementExpression proxyClass MethodInvocation Literal MemberReference callMethod javaClass MemberReference setupProxy proxyClass ClassReference defineAnnotatedMethods proxyClass javaClass getProxyClass proxyClass null proxyClass baseType ReferenceType MemberReference proxyClass RubyClass MemberReference MemberReference newClass superClass getMetaClass superClass getAllocator MethodInvocation runtime getCurrentContext "java_class=" javaClass proxyClass ReferenceType RubyClass baseType runtime superClass proxyClass MemberReference inherit JavaProxyClassMethods superClass	1
MethodDeclaration Modifier unregisterThread FormalParameter StatementExpression StatementExpression StatementExpression StatementExpression synchronized public ReferenceType thread MethodInvocation MethodInvocation MethodInvocation MethodInvocation RubyThread rubyThreadMap MethodInvocation remove threadContextMap MemberReference remove MethodInvocation getCurrentContext localContext Literal set Thread currentThread thread Literal setThread null null	0
MethodDeclaration Modifier arraystore StatementExpression public MethodInvocation MethodInvocation getMethodVisitor MemberReference visitInsn AASTORE	0
MethodDeclaration Modifier ReferenceType getJavaClass FormalParameter FormalParameter TryStatement private static Class TypeArgument ReferenceType context ReferenceType module LocalVariableDeclaration ReturnStatement CatchClause ? ThreadContext RubyModule ReferenceType VariableDeclarator TernaryExpression CatchClauseParameter ReturnStatement IRubyObject jClass MethodInvocation BinaryOperation Literal Cast Exception e Literal RuntimeHelpers MemberReference MemberReference Literal invoke instanceof MemberReference ReferenceType null ReferenceType MemberReference null context module "java_class" jClass JavaClass JavaClass jClass	0
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter IfStatement ReturnStatement public IRubyObject ReferenceType context ReferenceType caller ReferenceType self BasicType fixnum BinaryOperation BlockStatement SuperMethodInvocation ThreadContext IRubyObject IRubyObject long instanceof MemberReference ReferenceType ReturnStatement MemberReference MemberReference MemberReference MemberReference call self RubyFixnum Cast context caller self fixnum ReferenceType MemberReference RubyFixnum self	0
MethodDeclaration Modifier branch FormalParameter StatementExpression public ReferenceType context MethodInvocation BodyCompiler context pushNull	0
MethodDeclaration Modifier ReferenceType case246_line965 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference ClassCreator = yyVal yyVal ReferenceType MethodInvocation Cast BlockPassNode Cast getPosition ReferenceType MemberReference ReferenceType MemberReference Node ArraySelector yyVals Token ArraySelector yyVals BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference 0 yyTop - 1 yyTop	1
MethodDeclaration Modifier BasicType isInterestedInEvent FormalParameter ReturnStatement public boolean ReferenceType event Literal RubyEvent true	0
MethodDeclaration Modifier ReferenceType getSecurityError ReturnStatement public RubyClass MemberReference securityError	0
MethodDeclaration Modifier ReferenceType getObjectSpace ReturnStatement public ObjectSpace MemberReference objectSpace	0
MethodDeclaration Modifier ReferenceType aref FormalParameter SwitchStatement public IRubyObject ReferenceType args MemberReference SwitchStatementCase SwitchStatementCase SwitchStatementCase IRubyObject args length Literal ReturnStatement Literal ReturnStatement StatementExpression ReturnStatement 1 MethodInvocation 2 MethodInvocation MethodInvocation Literal MemberReference aref MemberReference MemberReference aref Arity MethodInvocation MemberReference Literal Literal raiseArgumentError null ArraySelector args ArraySelector args ArraySelector args getRuntime args length 1 2 Literal Literal Literal 0 0 1	1
MethodDeclaration Modifier putZeroTerminatedByteArray FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression public BasicType offset BasicType bytes BasicType off BasicType len MethodInvocation long byte int int FFIUtil BinaryOperation MemberReference MemberReference MemberReference putZeroTerminatedByteArray + MemberReference MemberReference bytes off len address offset	0
MethodDeclaration Modifier BasicType getGlobalState SynchronizedStatement public long This ReturnStatement MemberReference globalState	0
MethodDeclaration Modifier BasicType addressSize ReturnStatement final public int MemberReference addressSize	0
MethodDeclaration Modifier Annotation run LocalVariableDeclaration StatementExpression TryStatement public Override ReferenceType VariableDeclarator MethodInvocation WhileStatement CatchClause SynchronizedStatement ByteBuffer buf MethodInvocation buf clear BinaryOperation BlockStatement CatchClauseParameter MemberReference SwitchStatement ByteBuffer Literal allocateDirect && BinaryOperation MethodInvocation LocalVariableDeclaration IfStatement StatementExpression StatementExpression StatementExpression Exception e sync MemberReference SwitchStatementCase SwitchStatementCase 1024 && MemberReference MethodInvocation outChannel isOpen BasicType VariableDeclarator BinaryOperation BreakStatement MethodInvocation MethodInvocation MethodInvocation slave OUT TryStatement BreakStatement IN TryStatement ! quit inChannel isOpen int read MethodInvocation == MemberReference Literal buf flip outChannel MemberReference write buf clear StatementExpression CatchClause StatementExpression CatchClause inChannel MemberReference read read - 1 buf MethodInvocation CatchClauseParameter MethodInvocation CatchClauseParameter buf outChannel close IOException ioe inChannel close IOException ioe	1
MethodDeclaration Modifier Annotation ReferenceType definition FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public Override String ReferenceType runtime ReferenceType context ReferenceType self ReferenceType aBlock TernaryExpression Ruby ThreadContext IRubyObject Block MethodInvocation Literal Literal runtime MethodInvocation getGlobalVariables "global-variable" null MemberReference isDefined name	0
MethodDeclaration Modifier bastore StatementExpression public MethodInvocation MethodInvocation getMethodVisitor MemberReference visitInsn BASTORE	0
MethodDeclaration Modifier ReferenceType newEOFError FormalParameter ReturnStatement public RaiseException ReferenceType message MethodInvocation String MethodInvocation MemberReference newRaiseException getEOFError message	0
MethodDeclaration Modifier BasicType write FormalParameter IOException BadDescriptorException StatementExpression LocalVariableDeclaration StatementExpression StatementExpression ReturnStatement public int BasicType c MethodInvocation ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation int checkOpen ByteBuffer buf MethodInvocation buf Cast put buf flip MemberReference internalWrite ByteBuffer Literal allocate BasicType MemberReference buf 1 byte c	0
MethodDeclaration Modifier ReferenceType append FormalParameter LocalVariableDeclaration StatementExpression ReturnStatement public RubyString ReferenceType other ReferenceType VariableDeclarator MethodInvocation MethodInvocation IRubyObject RubyString otherStr MethodInvocation MemberReference infectBy MemberReference cat other convertToString otherStr otherStr value	0
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name Cast ThreadContext IRubyObject RubyModule String ReferenceType MemberReference RubyObject self	0
MethodDeclaration Modifier Annotation ReferenceType restsize FormalParameter LocalVariableDeclaration IfStatement ReturnStatement public JRubyMethod ElementValuePair RubyFixnum ReferenceType context ReferenceType VariableDeclarator MethodInvocation BlockStatement MethodInvocation name Literal ThreadContext Ruby runtime MethodInvocation runtime isVerbose StatementExpression rest_size "restsize" context getRuntime MethodInvocation runtime MethodInvocation getWarnings MemberReference Literal Literal Literal warning ID DEPRECATED_METHOD "StringScanner#restsize is obsolete; use #rest_size instead" "StringScanner#restsize" "#rest_size"	0
MethodDeclaration Modifier f2d StatementExpression public MethodInvocation MethodInvocation getMethodVisitor MemberReference visitInsn F2D	0
MethodDeclaration Modifier BasicType isComparedByIdentity ReturnStatement protected boolean BinaryOperation != BinaryOperation Literal & MemberReference MemberReference 0 flags COMPARE_BY_IDENTITY_F	0
MethodDeclaration Modifier ReferenceType getName ReturnStatement public String MethodInvocation m getName	0
MethodDeclaration Modifier Annotation ReferenceType executable_p ReturnStatement public JRubyMethod ElementValuePair IRubyObject MethodInvocation name Literal MethodInvocation getRuntime "executable?" MethodInvocation newBoolean stat isExecutable	1
MethodDeclaration Modifier ReferenceType rangeLt FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement private IRubyObject ReferenceType context ReferenceType a ReferenceType b ReferenceType VariableDeclarator MethodInvocation ReturnStatement TernaryExpression ThreadContext IRubyObject IRubyObject IRubyObject result MethodInvocation result isNil Literal BinaryOperation MethodInvocation Literal a MemberReference Literal MemberReference callMethod null < MethodInvocation Literal MethodInvocation getRuntime null context "<=>" b RubyComparable MemberReference MemberReference MemberReference MemberReference cmpint 0 getTrue context result a b	1
MethodDeclaration Modifier ReferenceType setValueOneDepthZero FormalParameter ThrowStatement public IRubyObject ReferenceType value ClassCreator IRubyObject ReferenceType BinaryOperation RuntimeException + This Literal MethodInvocation MethodInvocation " does not support scopes with two or more variables" getClass getSimpleName	1
MethodDeclaration Modifier ReferenceType newCompiledClosure FormalParameter FormalParameter FormalParameter LocalVariableDeclaration ReturnStatement static public Block ReferenceType context ReferenceType self ReferenceType body ReferenceType VariableDeclarator ClassCreator ThreadContext IRubyObject BlockBody Binding binding MethodInvocation ReferenceType MemberReference MemberReference context MemberReference MemberReference currentBinding Block body binding self Visibility PUBLIC	0
MethodDeclaration Modifier setupModes StatementExpression StatementExpression IfStatement IfStatement private Assignment Assignment MethodInvocation StatementExpression MethodInvocation StatementExpression MemberReference Literal = MemberReference Literal = modes isReadOnly Assignment ! modes isReadable Assignment closedWrite false closedRead false MemberReference Literal = MemberReference Literal = closedWrite true closedRead true	1
MethodDeclaration Modifier ReferenceType getTypeInstance FormalParameter FormalParameter FormalParameter ReturnStatement public String BasicType i ReferenceType o ReferenceType o2 Literal double String String "double,string,string"	0
MethodDeclaration Modifier marshal FormalParameter FormalParameter FormalParameter StatementExpression final public ReferenceType invocation ReferenceType buffer ReferenceType parameter MethodInvocation Invocation InvocationBuffer IRubyObject buffer MethodInvocation putInt Util MemberReference int32Value parameter	1
MethodDeclaration Modifier put FormalParameter FormalParameter FormalParameter FormalParameter ThrowStatement public ReferenceType runtime ReferenceType cache ReferenceType ptr ReferenceType value MethodInvocation Ruby StructLayout ReferenceType IRubyObject IRubyObject runtime Literal newNotImplementedError Storage "Cannot set Array fields"	0
MethodDeclaration Modifier BasicType getStatus ReturnStatement public int MemberReference status	0
MethodDeclaration Modifier ReferenceType case374_line1387 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support MethodInvocation Cast Cast literal_concat Cast getPosition ReferenceType MemberReference ReferenceType MemberReference ReferenceType MemberReference Node ArraySelector yyVals Node ArraySelector yyVals Node ArraySelector yyVals BinaryOperation BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference + Literal MemberReference - 1 yyTop 0 yyTop - 1 yyTop	1
MethodDeclaration Modifier ReferenceType m_sqrt FormalParameter FormalParameter IfStatement private static IRubyObject ReferenceType context ReferenceType x MethodInvocation BlockStatement BlockStatement ThreadContext IRubyObject MethodInvocation MemberReference MemberReference f_real_p IfStatement ReturnStatement LocalVariableDeclaration IfStatement isTrue context x MethodInvocation ReturnStatement MethodInvocation ReferenceType VariableDeclarator MethodInvocation BlockStatement BlockStatement ! MemberReference MemberReference f_negative_p MethodInvocation MemberReference MethodInvocation MethodInvocation MethodInvocation newComplex RubyComplex complex Cast MemberReference MemberReference f_negative_p ReturnStatement LocalVariableDeclaration LocalVariableDeclaration ReturnStatement context x RubyMath MemberReference MemberReference sqrt context context MethodInvocation getRuntime RubyFixnum MethodInvocation zero RubyMath MemberReference MethodInvocation sqrt ReferenceType MemberReference context complex image MethodInvocation ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation x x getComplex context getRuntime x MemberReference MemberReference f_negate RubyComplex x MemberReference MethodInvocation f_conjugate IRubyObject a MethodInvocation IRubyObject two MethodInvocation MemberReference MethodInvocation MethodInvocation MethodInvocation newComplex context x context MemberReference MethodInvocation m_sqrt MemberReference MemberReference f_abs RubyFixnum MethodInvocation two context context MethodInvocation getRuntime RubyMath MemberReference MethodInvocation sqrt RubyMath MemberReference MethodInvocation sqrt context MemberReference MemberReference f_conjugate context x context getRuntime getComplex x MemberReference MethodInvocation MemberReference f_div x MemberReference MethodInvocation MemberReference f_div context x context MemberReference MemberReference MemberReference f_add two context MemberReference MemberReference MemberReference f_sub two context a complex real context a complex real	1
MethodDeclaration Modifier getfield FormalParameter FormalParameter FormalParameter StatementExpression public ReferenceType arg1 ReferenceType arg2 ReferenceType arg3 MethodInvocation String String String MethodInvocation getMethodVisitor MemberReference MemberReference MemberReference MemberReference visitFieldInsn GETFIELD arg1 arg2 arg3	0
MethodDeclaration Modifier ReferenceType setsid FormalParameter ReturnStatement static public IRubyObject ReferenceType runtime MethodInvocation Ruby runtime MethodInvocation newFixnum runtime MethodInvocation getPosix setsid	0
MethodDeclaration Modifier Annotation ReferenceType hash FormalParameter LocalVariableDeclaration LocalVariableDeclaration ForStatement ReturnStatement public JRubyMethod RubyFixnum ReferenceType context ReferenceType VariableDeclarator BasicType VariableDeclarator ForControl BlockStatement MethodInvocation ThreadContext Ruby runtime MethodInvocation int h MethodInvocation VariableDeclaration BinaryOperation MemberReference StatementExpression StatementExpression runtime MemberReference newFixnum getRuntime MethodInvocation MethodInvocation getMetaClass BasicType VariableDeclarator < MemberReference MemberReference ++ i Assignment Assignment h getRealClass hashCode int i Literal i values length MemberReference BinaryOperation = MemberReference MethodInvocation ^= 0 h | BinaryOperation TernaryExpression h RubyNumeric MemberReference num2long << MemberReference Literal BinaryOperation Literal Literal ArraySelector MethodInvocation values h 1 < MemberReference Literal 1 0 MemberReference MemberReference Literal callMethod h 0 i context "hash"	1
MethodDeclaration Modifier pushRubyClass FormalParameter LocalVariableDeclaration LocalVariableDeclaration StatementExpression IfStatement public ReferenceType currentModule BasicType VariableDeclarator ReferenceType VariableDeclarator Assignment BinaryOperation BlockStatement RubyModule int index MemberReference RubyModule stack MemberReference MemberReference MemberReference = == BinaryOperation MemberReference StatementExpression ++ parentIndex parentStack ArraySelector stack currentModule + MemberReference Literal stack length MethodInvocation MemberReference index 1 expandParentsIfNecessary index	1
MethodDeclaration Modifier ReferenceType createBacktrace FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement IfStatement StatementExpression ReturnStatement public Frame BasicType level BasicType nativeException BasicType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation ReturnStatement MemberReference BlockStatement BlockStatement MethodInvocation MemberReference int boolean int traceSize BinaryOperation Frame traceFrames <= MemberReference Literal Literal nativeException StatementExpression StatementExpression StatementExpression System MemberReference Literal MemberReference Literal MemberReference arraycopy traceFrames + BinaryOperation Literal traceSize 0 null Assignment Assignment Assignment frameStack 0 traceFrames 0 traceSize - MemberReference MemberReference 1 MemberReference ArrayCreator = MemberReference MemberReference = MemberReference ArrayCreator = frameIndex level traceFrames ReferenceType BinaryOperation ArraySelector traceFrames ArraySelector frameStack traceFrames ReferenceType MemberReference Frame + MemberReference Literal MemberReference MemberReference Frame traceSize traceSize 1 traceSize frameIndex	1
MethodDeclaration Modifier BasicType hasNext ReturnStatement public boolean MethodInvocation iter hasNext	0
MethodDeclaration Modifier ReferenceType newArrayNoCopy FormalParameter FormalParameter FormalParameter ReturnStatement static public RubyArray ReferenceType runtime ReferenceType args BasicType begin ClassCreator Ruby IRubyObject int ReferenceType MemberReference MemberReference MemberReference RubyArray runtime args begin	0
MethodDeclaration Modifier Annotation ReferenceType newInstance FormalParameter FormalParameter FormalParameter SwitchStatement StatementExpression ReturnStatement static public Deprecated IRubyObject ReferenceType context ReferenceType clazz ReferenceType args MemberReference SwitchStatementCase SwitchStatementCase MethodInvocation Literal ThreadContext IRubyObject IRubyObject args length Literal ReturnStatement Literal ReturnStatement Arity MethodInvocation MemberReference Literal Literal raiseArgumentError null 1 MethodInvocation 2 MethodInvocation context getRuntime args length 1 1 MemberReference MemberReference MemberReference newInstance MemberReference MemberReference MemberReference MemberReference newInstance context clazz ArraySelector args context clazz ArraySelector args ArraySelector args Literal Literal Literal 0 0 1	1
MethodDeclaration Modifier BasicType getFileno ReturnStatement public int MemberReference fileno	0
MethodDeclaration Modifier ReferenceType handleUncoercibleObject FormalParameter FormalParameter FormalParameter RaiseException IfStatement private static IRubyObject BasicType raise ReferenceType obj ReferenceType target MemberReference BlockStatement BlockStatement boolean IRubyObject RubyClass raise LocalVariableDeclaration IfStatement ThrowStatement ReturnStatement ReferenceType VariableDeclarator MethodInvocation BlockStatement IfStatement MethodInvocation MethodInvocation String type obj isNil StatementExpression BinaryOperation BlockStatement BlockStatement obj MethodInvocation getRuntime obj MethodInvocation getRuntime Assignment instanceof MemberReference ReferenceType StatementExpression StatementExpression BinaryOperation newTypeError getNil MemberReference Literal = obj RubyBoolean Assignment Assignment + BinaryOperation MemberReference type "nil" MemberReference TernaryExpression = MemberReference MethodInvocation = + BinaryOperation Literal target type MethodInvocation Literal Literal type obj MethodInvocation MethodInvocation getMetaClass + Literal MemberReference " into " obj isTrue "true" "false" getRealClass getName "can't convert " type	0
MethodDeclaration Modifier ReferenceType invoke FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement ReturnStatement public IRubyObject ReferenceType context ReferenceType self ReferenceType name ReferenceType arg ReferenceType callType ReferenceType block ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation BlockStatement MethodInvocation ThreadContext IRubyObject String IRubyObject CallType Block DynamicMethod method MethodInvocation IRubyObject caller MethodInvocation MemberReference MemberReference MemberReference MemberReference shouldCallMethodMissing ReturnStatement method MemberReference MemberReference This MemberReference MemberReference MemberReference call MemberReference searchMethod context getFrameSelf method name caller callType MethodInvocation context self name arg block name RuntimeHelpers MemberReference MemberReference MethodInvocation MemberReference MemberReference MemberReference MemberReference callMethodMissing context self method getVisibility name callType arg block	0
MethodDeclaration Modifier BasicType isObjectSpaceEnabled ReturnStatement public boolean MemberReference objectSpaceEnabled	0
MethodDeclaration Modifier setPreviousCRefScope FormalParameter StatementExpression public ReferenceType crefScope Assignment StaticScope This MemberReference = MemberReference crefScope previousCRefScope	0
MethodDeclaration Modifier issueRedoEvent IfStatement public BinaryOperation BlockStatement IfStatement != MemberReference Literal StatementExpression MemberReference BlockStatement BlockStatement currentLoopLabels null MethodInvocation inNestedMethod StatementExpression StatementExpression issueLoopRedo MethodInvocation MethodInvocation Literal MethodInvocation invokeUtilityMethod method MemberReference go_to "redoJump" ClassReference sig scopeStart ReferenceType IRubyObject	1
MethodDeclaration Modifier ReferenceType selectCache FormalParameter ReturnStatement private List ReferenceType value TernaryExpression IRubyObject BinaryOperation MemberReference MemberReference instanceof MemberReference ReferenceType symbols links value RubySymbol	1
MethodDeclaration Modifier Annotation ReferenceType inspect19 ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject MethodInvocation name Literal compat MemberReference Literal inspectCommon "inspect" CompatVersion RUBY1_9 true	0
MethodDeclaration Modifier ReferenceType case84_line607 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support Cast Cast attrset ReferenceType MemberReference ReferenceType Cast Node ArraySelector yyVals String ReferenceType MemberReference BinaryOperation Token ArraySelector yyVals + Literal MemberReference BinaryOperation - 2 yyTop + Literal MemberReference 0 yyTop	1
MethodDeclaration Modifier Annotation ReferenceType module_eval FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType arg0 ReferenceType arg1 ReferenceType block MethodInvocation name ElementArrayValue frame Literal ThreadContext IRubyObject IRubyObject Block MemberReference This MemberReference MemberReference MemberReference specificEval Literal Literal true context arg0 arg1 block "module_eval" "class_eval"	1
MethodDeclaration Modifier resize FormalParameter LocalVariableDeclaration LocalVariableDeclaration ForStatement StatementExpression private final BasicType newCapacity Modifier ReferenceType VariableDeclarator Modifier ReferenceType VariableDeclarator ForControl BlockStatement Assignment int final RubyHashEntry oldTable MemberReference final RubyHashEntry newTable ArrayCreator VariableDeclaration BinaryOperation MemberReference LocalVariableDeclaration StatementExpression WhileStatement MemberReference MemberReference = table ReferenceType MemberReference BasicType VariableDeclarator < MemberReference MemberReference ++ j ReferenceType VariableDeclarator Assignment BinaryOperation BlockStatement table newTable RubyHashEntry newCapacity int j Literal j oldTable length RubyHashEntry entry MemberReference MemberReference Literal = != MemberReference Literal LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression 0 ArraySelector oldTable ArraySelector oldTable null entry null ReferenceType VariableDeclarator BasicType VariableDeclarator Assignment Assignment Assignment MemberReference MemberReference RubyHashEntry next MemberReference int i MethodInvocation MemberReference MemberReference = MemberReference MemberReference = MemberReference MemberReference = j j entry next MemberReference MemberReference bucketIndex entry next ArraySelector newTable ArraySelector newTable entry entry next entry hash newCapacity MemberReference MemberReference i i	1
MethodDeclaration Modifier ReferenceType case376_line1398 FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop ReferenceType VariableDeclarator BinaryOperation BlockStatement IfStatement MemberReference Object Object int ISourcePosition position MethodInvocation == Cast Literal StatementExpression BinaryOperation BlockStatement IfStatement yyVal Cast getPosition ReferenceType MemberReference null Assignment instanceof Cast ReferenceType StatementExpression BinaryOperation BlockStatement BlockStatement ReferenceType MemberReference Node ArraySelector yyVals MemberReference ClassCreator = ReferenceType MemberReference StrNode Assignment instanceof Cast ReferenceType StatementExpression StatementExpression StatementExpression Token ArraySelector yyVals BinaryOperation yyVal ReferenceType MemberReference Literal Node ArraySelector yyVals MemberReference ClassCreator = ReferenceType MemberReference DStrNode Assignment Cast Assignment BinaryOperation + Literal MemberReference XStrNode position null BinaryOperation yyVal ReferenceType MemberReference Cast Node ArraySelector yyVals MemberReference ClassCreator = ReferenceType MemberReference MemberReference ClassCreator = + Literal MemberReference - 1 yyTop + Literal MemberReference XStrNode position ReferenceType Cast BinaryOperation yyVal ReferenceType MemberReference Cast Node yyVal yyVal MethodInvocation ReferenceType MemberReference - 2 yyTop - 1 yyTop ByteList ReferenceType MemberReference + Literal MemberReference DXStrNode position ReferenceType MemberReference Cast add DXStrNode position StrNode ArraySelector yyVals - 1 yyTop DStrNode ArraySelector yyVals ReferenceType MemberReference BinaryOperation BinaryOperation Node ArraySelector yyVals + Literal MemberReference + Literal MemberReference BinaryOperation - 1 yyTop - 1 yyTop + Literal MemberReference - 1 yyTop	1
MethodDeclaration Modifier Annotation ReferenceType java_method FormalParameter FormalParameter FormalParameter LocalVariableDeclaration ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType proxyClass ReferenceType rubyName ReferenceType VariableDeclarator MethodInvocation backtrace Literal meta Literal ThreadContext IRubyObject IRubyObject String name MethodInvocation MemberReference MemberReference MemberReference getRubyMethod true true rubyName asJavaString context proxyClass name	1
MethodDeclaration Modifier Annotation assign FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression public Override ReferenceType runtime ReferenceType context ReferenceType self ReferenceType block MethodInvocation MethodInvocation Ruby ThreadContext IRubyObject Block parameter1 MemberReference MemberReference MemberReference MethodInvocation MemberReference Literal assign parameter2 MemberReference MemberReference MemberReference MethodInvocation MemberReference Literal assign runtime context self runtime getNil block false runtime context self runtime getNil block false	0
MethodDeclaration Modifier ReferenceType createInvokerClass FormalParameter FormalParameter LocalVariableDeclaration StatementExpression StatementExpression StatementExpression ReturnStatement static public RubyClass ReferenceType runtime ReferenceType module ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MemberReference Ruby RubyModule RubyClass result MethodInvocation result ClassReference defineAnnotatedMethods result ClassReference defineAnnotatedMethods result ClassReference defineAnnotatedConstants result module Literal MethodInvocation MemberReference defineClassUnder ReferenceType ReferenceType ReferenceType "Invoker" module Literal fastGetClass ObjectAllocator NOT_ALLOCATABLE_ALLOCATOR AbstractInvoker JFFIInvoker JFFIInvoker "AbstractInvoker"	1
MethodDeclaration Modifier BasicType isBinmode ReturnStatement public boolean BinaryOperation != BinaryOperation Literal & MemberReference MemberReference 0 mode BINMODE	0
MethodDeclaration Modifier preFrameAndDummyScope FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression protected final ReferenceType context ReferenceType self ReferenceType name ReferenceType block MethodInvocation ThreadContext IRubyObject String Block context MemberReference MemberReference MemberReference MemberReference MemberReference preMethodFrameAndDummyScope implementationClass name self block staticScope	0
MethodDeclaration Modifier post FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression protected ReferenceType context ReferenceType binding ReferenceType vis ReferenceType lastFrame MethodInvocation MethodInvocation ThreadContext Binding Visibility Frame binding MethodInvocation getFrame context MemberReference MemberReference postYield MemberReference setVisibility binding lastFrame vis	0
MethodDeclaration setTmsStruct FormalParameter StatementExpression ReferenceType tmsStruct Assignment RubyClass This MemberReference = MemberReference tmsStruct tmsStruct	0
MethodDeclaration Modifier Annotation ReferenceType add2 FormalParameter FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType b ReferenceType digits MethodInvocation name Literal required Literal frame Literal ThreadContext IRubyObject IRubyObject MemberReference MemberReference Literal MemberReference addInternal "add" 2 true context b "add" digits	0
MethodDeclaration Modifier Annotation Annotation ReferenceType op_equal FormalParameter FormalParameter LocalVariableDeclaration IfStatement IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair Override IRubyObject ReferenceType context ReferenceType other ReferenceType VariableDeclarator BinaryOperation ReturnStatement BinaryOperation BlockStatement MethodInvocation name Literal compat MemberReference ThreadContext IRubyObject Ruby runtime MethodInvocation == This MemberReference MethodInvocation instanceof MemberReference ReferenceType ReturnStatement MemberReference MemberReference op_equalCommon "==" CompatVersion RUBY1_8 context getRuntime other runtime getTrue other RubyString TernaryExpression context other MethodInvocation MethodInvocation MethodInvocation value Cast equal runtime getTrue runtime getFalse ReferenceType MemberReference RubyString other	1
MethodDeclaration setBignum FormalParameter StatementExpression ReferenceType bignumClass Assignment RubyClass This MemberReference = MemberReference bignumClass bignumClass	0
MethodDeclaration setRational FormalParameter StatementExpression ReferenceType rationalClass Assignment RubyClass This MemberReference = MemberReference rationalClass rationalClass	0
MethodDeclaration Modifier Annotation ReferenceType get ReturnStatement public Override IRubyObject MethodInvocation runtime MethodInvocation getKCode MemberReference kcode runtime	0
MethodDeclaration Modifier setLoadServiceCreator FormalParameter StatementExpression public ReferenceType creator Assignment LoadServiceCreator This MemberReference = MemberReference creator creator	0
MethodDeclaration Modifier updateFrame FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression StatementExpression public ReferenceType name ReferenceType fileName BasicType line Assignment Assignment Assignment String String int This MemberReference = This MemberReference = This MemberReference = MemberReference name MemberReference fileName MemberReference line name fileName line	0
MethodDeclaration Modifier Annotation ReferenceType srand FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair RubyInteger ReferenceType context ReferenceType recv ReferenceType arg ReferenceType VariableDeclarator ReferenceType VariableDeclarator BasicType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation name Literal module Literal visibility MemberReference ThreadContext IRubyObject IRubyObject RubyInteger integerSeed MethodInvocation Ruby runtime MethodInvocation long oldRandomSeed MethodInvocation runtime MethodInvocation setRandomSeed runtime MethodInvocation getRandom runtime MemberReference newFixnum "srand" true PRIVATE arg Literal convertToInteger context getRuntime runtime getRandomSeed integerSeed getLongValue MethodInvocation setSeed oldRandomSeed "to_int" runtime getRandomSeed	0
MethodDeclaration Modifier Annotation ReferenceType rjust FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType arg0 ReferenceType arg1 MethodInvocation name Literal compat MemberReference IRubyObject IRubyObject MemberReference MemberReference Literal justify "rjust" CompatVersion RUBY1_8 arg0 arg1 'r'	0
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter IfStatement ReturnStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 ReferenceType arg3 ReferenceType arg4 ReferenceType arg5 ReferenceType arg6 ReferenceType arg7 ReferenceType block BinaryOperation BlockStatement MethodInvocation ThreadContext IRubyObject RubyModule String IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject Block >= MemberReference Literal ReturnStatement box.actualMethod MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference call box callCount 0 MethodInvocation context self clazz name arg0 arg1 arg2 arg3 arg4 arg5 arg6 arg7 block MethodInvocation MemberReference MemberReference tryJitReturnMethod MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference call context name context self clazz name arg0 arg1 arg2 arg3 arg4 arg5 arg6 arg7 block	0
MethodDeclaration Modifier ReferenceType case494_line1898 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support Cast Cast appendToBlock ReferenceType MemberReference ReferenceType MemberReference ListNode ArraySelector yyVals Node ArraySelector yyVals BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference - 2 yyTop 0 yyTop	1
MethodDeclaration Modifier Annotation ReferenceType getlogin FormalParameter LocalVariableDeclaration TryStatement static public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType recv ReferenceType VariableDeclarator LocalVariableDeclaration IfStatement StatementExpression IfStatement ReturnStatement CatchClause name Literal module Literal IRubyObject Ruby runtime MethodInvocation ReferenceType VariableDeclarator BinaryOperation BlockStatement Assignment BinaryOperation BlockStatement MethodInvocation CatchClauseParameter ReturnStatement "getlogin" true recv getRuntime String login MethodInvocation != MemberReference Literal ReturnStatement MemberReference MethodInvocation = != MemberReference Literal ReturnStatement runtime getNil Exception e MethodInvocation runtime MethodInvocation getPosix login null MethodInvocation login System Literal getenv login null MethodInvocation runtime MethodInvocation newString getlogin runtime MemberReference newString "USER" runtime MemberReference newString System Literal getProperty login login "user.name"	0
MethodDeclaration Modifier ReferenceType hashStore FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration ForStatement StatementExpression StatementExpression StatementExpression StatementExpression ReturnStatement private Object ReferenceType name ReferenceType value ReferenceType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator ReferenceType VariableDeclarator ForControl BlockStatement Assignment Assignment MemberReference Assignment MemberReference String Object VariableTableEntry table TernaryExpression int index int hash MethodInvocation VariableTableEntry e Assignment BinaryOperation Assignment IfStatement MemberReference ClassCreator = MemberReference MemberReference = ++ vTableSize MemberReference MemberReference = value BinaryOperation MethodInvocation MemberReference name hashCode MemberReference MemberReference = != MemberReference Literal MemberReference MemberReference = BinaryOperation BlockStatement e ReferenceType MemberReference MethodInvocation MemberReference MemberReference ArraySelector table e vTable table > BinaryOperation MemberReference rehash vTable e ArraySelector table e null e e next && BinaryOperation MethodInvocation StatementExpression ReturnStatement VariableTableEntry hash name intern value ArraySelector table MemberReference + MemberReference Literal vTableThreshold Assignment == MemberReference MemberReference name MemberReference equals Assignment MemberReference MemberReference index vTableSize 1 MemberReference BinaryOperation = hash e hash e name MemberReference MemberReference = value index index & MemberReference BinaryOperation e value value hash - MemberReference Literal table length 1	1
MethodDeclaration Modifier Annotation ReferenceType ungetc FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType arg MethodInvocation name Literal required Literal IRubyObject MethodInvocation getRuntime "ungetc" 1 getNil	0
MethodDeclaration Modifier Annotation ReferenceType arity ReturnStatement public Override Arity Literal null	0
MethodDeclaration Modifier Annotation ReferenceType setValueDepthZero FormalParameter FormalParameter ReturnStatement public Override IRubyObject ReferenceType value BasicType offset Assignment IRubyObject int MemberReference MemberReference = variableValueZero value	1
MethodDeclaration Modifier BasicType refillBuffer IOException StatementExpression LocalVariableDeclaration StatementExpression ReturnStatement private final int MethodInvocation BasicType VariableDeclarator MethodInvocation MemberReference buffer clear int n Cast buffer flip n ReferenceType MethodInvocation ReadableByteChannel descriptor getChannel	1
MethodDeclaration Modifier ReferenceType getSuperMethod ReturnStatement public Method MemberReference sm	0
MethodDeclaration Modifier ReferenceType getString3 FormalParameter ReturnStatement final public RubyString ReferenceType runtime MethodInvocation Ruby runtimeCache MemberReference Literal getString runtime 3	0
MethodDeclaration Modifier ReferenceType getBlock FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter IfStatement IfStatement AssertStatement ReturnStatement static public Block ReferenceType runtime ReferenceType context ReferenceType self ReferenceType currentBlock ReferenceType blockNode BinaryOperation ReturnStatement BinaryOperation BlockStatement IfStatement Literal Literal Literal Ruby ThreadContext IRubyObject Block Node == MemberReference Literal MemberReference instanceof MemberReference ReferenceType ReturnStatement BinaryOperation BlockStatement false "Trying to get block from something which cannot deliver" null blockNode null Block NULL_BLOCK blockNode IterNode MethodInvocation instanceof MemberReference ReferenceType ReturnStatement MemberReference MemberReference MemberReference getIterNodeBlock blockNode BlockPassNode MethodInvocation blockNode context self MemberReference MemberReference MemberReference MemberReference MemberReference getBlockPassBlock blockNode runtime context self currentBlock	1
MethodDeclaration Modifier get FormalParameter FormalParameter FormalParameter FormalParameter ThrowStatement final public BasicType offset BasicType dst BasicType off BasicType len MethodInvocation long short int int ex	0
MethodDeclaration Modifier ReferenceType getLocalTimeZone FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement static public DateTimeZone ReferenceType runtime ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement Ruby RubyString tzVar MethodInvocation RubyHash h Cast IRubyObject tz MethodInvocation || BinaryOperation BinaryOperation ReturnStatement ReturnStatement runtime MemberReference newString ReferenceType MethodInvocation h MethodInvocation MemberReference op_aref == MemberReference Literal instanceof MemberReference ReferenceType MethodInvocation MethodInvocation TZ_STRING RubyHash runtime MethodInvocation getObject runtime getCurrentContext tzVar tz null tz RubyString DateTimeZone getDefault MemberReference MethodInvocation getTimeZone Literal fastGetConstant runtime tz toString "ENV"	1
MethodDeclaration Modifier ReferenceType cmp FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement SwitchStatement ReturnStatement private IRubyObject ReferenceType context ReferenceType r BasicType op BasicType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement MemberReference SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase MethodInvocation ThreadContext IRubyObject char int e Literal RubyBigDecimal rb MethodInvocation == MemberReference Literal LocalVariableDeclaration IfStatement StatementExpression IfStatement IfStatement op Literal ReturnStatement Literal ReturnStatement Literal ReturnStatement Literal ReturnStatement Literal ReturnStatement Literal ReturnStatement Literal ReturnStatement MethodInvocation getRuntime 0 MemberReference Literal getVpValue rb null ReferenceType VariableDeclarator MethodInvocation BlockStatement Assignment BinaryOperation BlockStatement BinaryOperation BlockStatement BlockStatement '*' MethodInvocation '=' TernaryExpression '!' TernaryExpression 'G' TernaryExpression '>' TernaryExpression 'L' TernaryExpression '<' TernaryExpression getNil r false IRubyObject ee MethodInvocation ee isNil ReturnStatement MemberReference MethodInvocation = | MethodInvocation MethodInvocation ReturnStatement || BinaryOperation BinaryOperation StatementExpression StatementExpression MethodInvocation getRuntime BinaryOperation MethodInvocation MethodInvocation BinaryOperation MethodInvocation MethodInvocation BinaryOperation MethodInvocation MethodInvocation BinaryOperation MethodInvocation MethodInvocation BinaryOperation MethodInvocation MethodInvocation BinaryOperation MethodInvocation MethodInvocation MemberReference Literal MemberReference callCoerced MethodInvocation e RubyNumeric MemberReference fix2int isNaN rb isNaN MethodInvocation != MemberReference Literal != MemberReference Literal Assignment Assignment MemberReference newFixnum == MemberReference Literal MethodInvocation getRuntime MethodInvocation getRuntime != MemberReference Literal MethodInvocation getRuntime MethodInvocation getRuntime >= MemberReference Literal MethodInvocation getRuntime MethodInvocation getRuntime > MemberReference Literal MethodInvocation getRuntime MethodInvocation getRuntime <= MemberReference Literal MethodInvocation getRuntime MethodInvocation getRuntime < MemberReference Literal MethodInvocation getRuntime MethodInvocation getRuntime context "<=>" r MethodInvocation getRuntime ee MethodInvocation getRuntime infinitySign 0 rb infinitySign 0 MemberReference BinaryOperation = MemberReference MethodInvocation = e e 0 getTrue getFalse e 0 getTrue getFalse e 0 getTrue getFalse e 0 getTrue getFalse e 0 getTrue getFalse e 0 getTrue getFalse getNil getNil e - MemberReference MemberReference e value MemberReference compareTo infinitySign rb infinitySign rb value	1
MethodDeclaration Modifier Annotation ReferenceType to_i FormalParameter LocalVariableDeclaration IfStatement ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType arg0 BasicType VariableDeclarator BinaryOperation BlockStatement MethodInvocation name Literal IRubyObject long base MethodInvocation < MemberReference Literal ThrowStatement Cast Literal stringToInum "to_i" arg0 MethodInvocation convertToInteger base 0 MethodInvocation BasicType MemberReference false getLongValue MethodInvocation getRuntime int base BinaryOperation newArgumentError + Literal MemberReference "illegal radix " base	1
MethodDeclaration Modifier ReferenceType parseOpt FormalParameter LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression ForStatement ReturnStatement private static Map TypeArgument TypeArgument ReferenceType s ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation ForControl BlockStatement MemberReference ReferenceType ReferenceType String Map TypeArgument TypeArgument options ClassCreator options Literal MemberReference put options Literal MemberReference put options Literal MemberReference put options Literal MemberReference put VariableDeclaration BinaryOperation MemberReference SwitchStatement options String NKFCharset ReferenceType ReferenceType ReferenceType "input" AUTO "output" JIS "mime-decode" MIME_DETECT "mime-encode" NOCONV BasicType VariableDeclarator < MemberReference MethodInvocation ++ i MethodInvocation SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase String NKFCharset HashMap TypeArgument TypeArgument int i Literal i s length s MemberReference charAt Literal BreakStatement Literal BreakStatement Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement Literal BlockStatement BreakStatement Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement Literal BlockStatement BreakStatement Literal BreakStatement Literal BreakStatement Literal BreakStatement Literal IfStatement SwitchStatement BreakStatement Literal IfStatement SwitchStatement BreakStatement Literal BreakStatement Literal BreakStatement Literal BreakStatement Literal BreakStatement Literal BreakStatement Literal BreakStatement Literal BreakStatement Literal BreakStatement Literal BreakStatement Literal BreakStatement Literal BreakStatement Literal BreakStatement Literal IfStatement ReferenceType ReferenceType 0 i 'b' 'u' 'j' MethodInvocation 's' MethodInvocation 'e' MethodInvocation 'w' LocalVariableDeclaration IfStatement 'J' MethodInvocation 'S' MethodInvocation 'E' MethodInvocation 'W' LocalVariableDeclaration IfStatement 't' 'r' 'h' 'm' BinaryOperation BlockStatement MethodInvocation SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase 'M' BinaryOperation BlockStatement MethodInvocation SwitchStatementCase SwitchStatementCase 'l' 'f' 'F' 'Z' 'X' 'x' 'B' 'T' 'd' 'c' 'I' 'L' '-' BinaryOperation BlockStatement String NKFCharset options Literal MemberReference put options Literal MemberReference put options Literal MemberReference put BasicType VariableDeclarator BinaryOperation StatementExpression IfStatement options Literal MemberReference put options Literal MemberReference put options Literal MemberReference put BasicType VariableDeclarator BinaryOperation StatementExpression IfStatement >= BinaryOperation MethodInvocation StatementExpression BreakStatement s BinaryOperation charAt Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement Literal BreakStatement Literal StatementExpression BreakStatement >= BinaryOperation MethodInvocation StatementExpression s BinaryOperation charAt Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement == MethodInvocation Literal "output" JIS "output" SJIS "output" EUC int n MethodInvocation == MemberReference Literal MethodInvocation BinaryOperation StatementExpression StatementExpression "input" JIS "input" SJIS "input" EUC int n MethodInvocation == MemberReference Literal MethodInvocation BinaryOperation StatementExpression StatementExpression + MemberReference Literal s length MethodInvocation + MemberReference Literal 'B' MethodInvocation 'Q' MethodInvocation 'N' '0' MethodInvocation + MemberReference Literal s length MethodInvocation + MemberReference Literal 'B' MethodInvocation 'Q' MethodInvocation s BinaryOperation charAt '-' MemberReference MemberReference optionUTF n 32 options Literal MemberReference put == MemberReference Literal MethodInvocation MethodInvocation MemberReference MemberReference optionUTF n 32 options Literal MemberReference put == MemberReference Literal MethodInvocation MethodInvocation i 1 options Literal MemberReference put i 1 options Literal MemberReference put options Literal MemberReference put options Literal MemberReference put i 1 options Literal MemberReference put i 1 options Literal MemberReference put options Literal MemberReference put + MemberReference Literal s i "output" UTF32 n 16 options Literal MemberReference put options Literal MemberReference put s i "input" UTF32 n 16 options Literal MemberReference put options Literal MemberReference put "mime-decode" MIME_DETECT "mime-decode" BASE64 "mime-decode" QENCODE "mime-decode" NOCONV "mime-encode" NOCONV "mime-encode" BASE64 "mime-encode" QENCODE i 1 "output" UTF16 "output" UTF8 "input" UTF16 "input" UTF8	1
MethodDeclaration Modifier Annotation ReferenceType guess1 FormalParameter FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType str MethodInvocation name Literal required Literal module Literal ThreadContext IRubyObject IRubyObject MemberReference MemberReference MemberReference guess "guess1" 1 true context recv str	0
MethodDeclaration Modifier nextValue FormalParameter FormalParameter FormalParameter StatementExpression public ReferenceType context ReferenceType object BasicType index MethodInvocation BodyCompiler Object int context MethodInvocation getVariableCompiler MemberReference Literal assignLocalVariable index false	1
MethodDeclaration Modifier ReferenceType runInterpreter FormalParameter LocalVariableDeclaration AssertStatement TryStatement public IRubyObject ReferenceType scriptNode ReferenceType VariableDeclarator BinaryOperation Literal ReturnStatement CatchClause Node ThreadContext context MethodInvocation != MemberReference Literal "scriptNode is not null" MethodInvocation CatchClauseParameter ReturnStatement getCurrentContext scriptNode null scriptNode This MemberReference MethodInvocation MemberReference interpret JumpException.ReturnJump rj Cast context getTopSelf Block NULL_BLOCK ReferenceType MethodInvocation IRubyObject rj getValue	1
MethodDeclaration Modifier registerRubyMethods FormalParameter FormalParameter StatementExpression StatementExpression protected static ReferenceType runtime ReferenceType result MethodInvocation MethodInvocation Ruby RubyClass result ClassReference defineAnnotatedMethods result MethodInvocation getMetaClass ReferenceType Literal Literal defineAlias JavaProxyReflectionObject "__j_allocate" "allocate"	1
MethodDeclaration Modifier ReferenceType case443_line1711 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support Cast negateFloat ReferenceType MemberReference FloatNode ArraySelector yyVals BinaryOperation + Literal MemberReference 0 yyTop	1
MethodDeclaration Modifier Annotation BasicType hashCode LocalVariableDeclaration IfStatement ReturnStatement public Override int ReferenceType VariableDeclarator BinaryOperation ReturnStatement MethodInvocation IRubyObject hashValue MethodInvocation instanceof MemberReference ReferenceType Cast MemberReference nonFixnumHashCode MethodInvocation Literal callMethod hashValue RubyFixnum BasicType MethodInvocation hashValue MethodInvocation getRuntime "hash" int RubyNumeric MemberReference fix2long getCurrentContext hashValue	1
MethodDeclaration Modifier Annotation ReferenceType backtrace ReturnStatement public JRubyMethod IRubyObject MethodInvocation getBacktrace	0
MethodDeclaration Modifier ReferenceType getPosition2 FormalParameter ReturnStatement private ISourcePosition ReferenceType pos TernaryExpression ISourcePositionHolder BinaryOperation MethodInvocation MethodInvocation == MemberReference Literal lexer getPosition pos getPosition pos null	0
MethodDeclaration Modifier ReferenceType buildRoot FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression LocalVariableDeclaration StatementExpression ReturnStatement public IR_Scope ReferenceType node ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation ReferenceType VariableDeclarator MethodInvocation MemberReference Node IR_Script script ClassCreator IR_Class rootClass MemberReference IR_Method rootMethod MethodInvocation rootMethod ClassCreator addInstr RootNode rootNode Cast MethodInvocation MemberReference build script ReferenceType Literal MethodInvocation script _dummyClass rootClass getRootMethod ReferenceType MethodInvocation Literal ReferenceType MemberReference rootNode getBodyNode rootMethod IR_Script "__file__" node MethodInvocation getPosition RECV_ARG_Instr rootClass getSelf 0 RootNode node getFile	1
MethodDeclaration Modifier ReferenceType startThread FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement private static RubyThread Modifier ReferenceType recv Modifier ReferenceType args BasicType callInit ReferenceType block ReferenceType VariableDeclarator MemberReference BlockStatement BlockStatement MemberReference final IRubyObject final IRubyObject boolean Block RubyThread rubyThread ClassCreator callInit StatementExpression StatementExpression rubyThread ReferenceType MethodInvocation Cast MethodInvocation MethodInvocation RubyThread recv getRuntime ReferenceType MemberReference rubyThread MemberReference MemberReference callInit rubyThread MethodInvocation MemberReference MemberReference initialize RubyClass recv args block recv MethodInvocation getRuntime args block getCurrentContext	0
MethodDeclaration Modifier ReferenceType new_call_blockpass FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement IfStatement SwitchStatement private Node ReferenceType receiver ReferenceType operation ReferenceType blockPass ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation ReturnStatement BinaryOperation ReturnStatement Cast SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase Node Token BlockPassNode ISourcePosition position MethodInvocation String name Cast Node args MethodInvocation == MemberReference Literal ClassCreator instanceof MemberReference ReferenceType ClassCreator ReferenceType MemberReference Literal ReturnStatement Literal ReturnStatement Literal ReturnStatement Literal ReturnStatement ReturnStatement MemberReference MemberReference position ReferenceType MethodInvocation blockPass getArgsNode args null ReferenceType MemberReference MemberReference MemberReference MemberReference MemberReference args ArrayNode ReferenceType MemberReference MemberReference MemberReference MemberReference MemberReference ArrayNode args 0 ClassCreator 1 ClassCreator 2 ClassCreator 3 ClassCreator ClassCreator receiver blockPass String operation getValue CallNoArgBlockPassNode position receiver name args blockPass CallSpecialArgBlockPassNode position receiver name args blockPass ReferenceType MemberReference MemberReference MemberReference MemberReference MemberReference ReferenceType MemberReference MemberReference MemberReference Cast MemberReference ReferenceType MemberReference MemberReference MemberReference Cast MemberReference ReferenceType MemberReference MemberReference MemberReference Cast MemberReference ReferenceType MemberReference MemberReference MemberReference MemberReference MemberReference CallNoArgBlockPassNode position receiver name args blockPass CallOneArgBlockPassNode position receiver name ReferenceType MemberReference blockPass CallTwoArgBlockPassNode position receiver name ReferenceType MemberReference blockPass CallThreeArgBlockPassNode position receiver name ReferenceType MemberReference blockPass CallManyArgsBlockPassNode position receiver name args blockPass ArrayNode args ArrayNode args ArrayNode args	1
MethodDeclaration Modifier Annotation ReferenceType convertToInteger FormalParameter FormalParameter ReturnStatement public Deprecated RubyInteger BasicType methodIndex ReferenceType convertMethod MethodInvocation int String MemberReference convertToInteger convertMethod	1
MethodDeclaration Modifier Annotation Annotation ReferenceType to_s LocalVariableDeclaration ReturnStatement public JRubyMethod Override RubyString BasicType VariableDeclarator MethodInvocation int base Literal MethodInvocation getRuntime 10 MethodInvocation newString Convert2 MemberReference MemberReference longToByteList value base	0
MethodDeclaration Modifier releaseTempLocal StatementExpression public MemberReference -- tempVariableIndex	0
MethodDeclaration Modifier ReferenceType getStandardError ReturnStatement public RubyClass MemberReference standardError	0
MethodDeclaration Modifier ReferenceType getDFVar FormalParameter ReturnStatement public DataFlowVar ReferenceType v MethodInvocation Variable _dfVarMap MemberReference get v	0
MethodDeclaration Modifier ReferenceType invoke FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement ReturnStatement public IRubyObject ReferenceType context ReferenceType self ReferenceType name ReferenceType arg0 ReferenceType arg1 ReferenceType callType ReferenceType block ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation BlockStatement MethodInvocation ThreadContext IRubyObject String IRubyObject IRubyObject CallType Block DynamicMethod method MethodInvocation IRubyObject caller MethodInvocation MemberReference MemberReference MemberReference MemberReference shouldCallMethodMissing ReturnStatement method MemberReference MemberReference This MemberReference MemberReference MemberReference MemberReference call MemberReference searchMethod context getFrameSelf method name caller callType MethodInvocation context self name arg0 arg1 block name RuntimeHelpers MemberReference MemberReference MethodInvocation MemberReference MemberReference MemberReference MemberReference MemberReference callMethodMissing context self method getVisibility name callType arg0 arg1 block	0
MethodDeclaration Modifier marshal FormalParameter FormalParameter FormalParameter StatementExpression public ReferenceType invocation ReferenceType buffer ReferenceType parameter MethodInvocation Invocation InvocationBuffer IRubyObject buffer MethodInvocation putByte Util MemberReference int8Value parameter	0
MethodDeclaration Modifier Annotation BasicType isSame FormalParameter ReturnStatement protected Override boolean ReferenceType module MethodInvocation RubyModule delegate MemberReference isSame module	0
MethodDeclaration Modifier ReferenceType mangleStringForCleanJavaIdentifier FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration ForStatement ReturnStatement static public String ReferenceType name BasicType VariableDeclarator ReferenceType VariableDeclarator BasicType VariableDeclarator ForControl BlockStatement MethodInvocation String char characters MethodInvocation StringBuilder cleanBuffer ClassCreator boolean prevWasReplaced Literal VariableDeclaration BinaryOperation MemberReference IfStatement cleanBuffer toString name toCharArray ReferenceType false BasicType VariableDeclarator < MemberReference MemberReference ++ i BinaryOperation BlockStatement BlockStatement StringBuilder int i Literal i characters length || BinaryOperation MethodInvocation StatementExpression StatementExpression IfStatement StatementExpression SwitchStatement 0 && BinaryOperation MethodInvocation Character MemberReference isJavaIdentifierPart MethodInvocation Assignment MemberReference BlockStatement Assignment MemberReference SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase == MemberReference Literal Character MemberReference isJavaIdentifierStart ArraySelector characters cleanBuffer MemberReference append MemberReference Literal = ! prevWasReplaced StatementExpression MemberReference Literal = ArraySelector characters Literal StatementExpression ContinueStatement Literal StatementExpression ContinueStatement Literal StatementExpression ContinueStatement Literal StatementExpression ContinueStatement Literal StatementExpression ContinueStatement Literal IfStatement ContinueStatement Literal StatementExpression ContinueStatement Literal StatementExpression ContinueStatement Literal StatementExpression ContinueStatement Literal StatementExpression ContinueStatement Literal StatementExpression ContinueStatement Literal StatementExpression ContinueStatement Literal StatementExpression ContinueStatement StatementExpression i 0 ArraySelector characters MemberReference ArraySelector characters prevWasReplaced false MethodInvocation prevWasReplaced true MemberReference '?' MethodInvocation '!' MethodInvocation '<' MethodInvocation '>' MethodInvocation '=' MethodInvocation '[' BinaryOperation BlockStatement BlockStatement ']' MethodInvocation '+' MethodInvocation '-' MethodInvocation '*' MethodInvocation '/' MethodInvocation '&' MethodInvocation '.' MethodInvocation MethodInvocation MemberReference i MemberReference cleanBuffer Literal append i cleanBuffer Literal append cleanBuffer Literal append cleanBuffer Literal append cleanBuffer Literal append cleanBuffer Literal append && BinaryOperation BinaryOperation StatementExpression StatementExpression StatementExpression cleanBuffer Literal append cleanBuffer Literal append cleanBuffer Literal append cleanBuffer Literal append cleanBuffer Literal append cleanBuffer Literal append cleanBuffer Literal append cleanBuffer MethodInvocation MethodInvocation append i i "_" "p_" "b_" "lt_" "gt_" "equal_" < BinaryOperation MemberReference == MemberReference Literal MethodInvocation MemberReference MethodInvocation "rbracket_" "plus_" "minus_" "times_" "div_" "and_" "dot_" Literal append Integer MemberReference toHexString + MemberReference Literal characters length ArraySelector characters ']' cleanBuffer Literal append ++ i cleanBuffer Literal append "_" ArraySelector characters i 1 BinaryOperation "aref_" "lbracket_" MemberReference + MemberReference Literal i i 1	1
MethodDeclaration Modifier Annotation BasicType hashCode LocalVariableDeclaration StatementExpression ReturnStatement public Override int BasicType VariableDeclarator Assignment MemberReference int hash Literal MemberReference BinaryOperation = hash 5 hash + BinaryOperation MethodInvocation * Literal MemberReference nativeType hashCode 23 hash	0
MethodDeclaration Modifier BasicType longToOctalBytes FormalParameter ReturnStatement final static public byte BasicType i MethodInvocation long ByteList MethodInvocation plain Long MemberReference toOctalString i	0
MethodDeclaration Modifier setReuseAddr FormalParameter IOException LocalVariableDeclaration IfStatement private ReferenceType val ReferenceType VariableDeclarator BinaryOperation BlockStatement IRubyObject Channel socketChannel MethodInvocation instanceof MemberReference ReferenceType StatementExpression openFile MethodInvocation MethodInvocation getMainStream socketChannel ServerSocketChannel MethodInvocation getDescriptor getChannel MethodInvocation asServerSocket MethodInvocation setReuseAddress MemberReference asBoolean val	1
MethodDeclaration Modifier Annotation unreadMany FormalParameter LocalVariableDeclaration StatementExpression public Override ReferenceType line BasicType VariableDeclarator Assignment CharSequence int length MethodInvocation MemberReference MemberReference -= line length index length	0
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement final public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType args ReferenceType block MethodInvocation MethodInvocation ThreadContext IRubyObject RubyModule String IRubyObject Block arity MethodInvocation MemberReference checkArity MemberReference MemberReference MemberReference MemberReference invoke context getRuntime args context ArraySelector args ArraySelector args ArraySelector args Literal Literal Literal 0 1 2	1
MethodDeclaration Modifier main FormalParameter LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression static public ReferenceType args ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation String IR_Scope scope MethodInvocation System.out Literal println scope ClassCreator runCompilerPass scope ClassCreator runCompilerPass System.out Literal println scope ClassCreator runCompilerPass scope ClassCreator runCompilerPass System.out Literal println scope ClassCreator runCompilerPass scope ClassCreator runCompilerPass MemberReference buildFromMain "################## Before local optimization pass ##################" ReferenceType ReferenceType "################## After local optimization pass ##################" ReferenceType ReferenceType "################## After dead code elimination pass ##################" ReferenceType ReferenceType args org ReferenceType org ReferenceType org ReferenceType org ReferenceType org ReferenceType org ReferenceType jruby ReferenceType jruby ReferenceType jruby ReferenceType jruby ReferenceType jruby ReferenceType jruby ReferenceType compiler ReferenceType compiler ReferenceType compiler ReferenceType compiler ReferenceType compiler ReferenceType compiler ReferenceType ir ReferenceType ir ReferenceType ir ReferenceType ir ReferenceType ir ReferenceType ir ReferenceType compiler_pass ReferenceType compiler_pass ReferenceType compiler_pass ReferenceType compiler_pass ReferenceType compiler_pass ReferenceType compiler_pass ReferenceType IR_Printer opts ReferenceType IR_Printer CFG_Builder opts ReferenceType IR_Printer LocalOptimizationPass DeadCodeElimination	1
MethodDeclaration Modifier generateMethodAnnotations FormalParameter FormalParameter FormalParameter IfStatement IfStatement private ReferenceType methodAnnos ReferenceType m ReferenceType parameterAnnos BinaryOperation BlockStatement BinaryOperation BlockStatement Map TypeArgument TypeArgument SkinnyMethodAdapter List TypeArgument && BinaryOperation BinaryOperation ForStatement && BinaryOperation BinaryOperation ForStatement ReferenceType ReferenceType ReferenceType != MemberReference Literal != MethodInvocation Literal EnhancedForControl BlockStatement != MemberReference Literal != MethodInvocation Literal ForControl BlockStatement Class Map TypeArgument TypeArgument Map TypeArgument TypeArgument methodAnnos null methodAnnos size 0 VariableDeclaration MethodInvocation StatementExpression parameterAnnos null parameterAnnos size 0 VariableDeclaration BinaryOperation MemberReference LocalVariableDeclaration IfStatement ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType VariableDeclarator methodAnnos entrySet MethodInvocation BasicType VariableDeclarator < MemberReference MethodInvocation ++ i ReferenceType VariableDeclarator BinaryOperation BlockStatement String Object Class Map TypeArgument TypeArgument Map ReferenceType entry m MethodInvocation Literal MethodInvocation visitAnnotationWithFields int i Literal i parameterAnnos size Map TypeArgument TypeArgument annos MethodInvocation && BinaryOperation BinaryOperation ForStatement ReferenceType ReferenceType Entry TypeArgument TypeArgument MethodInvocation ci true entry getValue 0 ReferenceType ReferenceType parameterAnnos MemberReference get != MemberReference Literal != MethodInvocation Literal ForControl BlockStatement String Object ReferenceType ReferenceType entry getKey Class Map TypeArgument TypeArgument i annos null annos size 0 VariableDeclaration MethodInvocation LocalVariableDeclaration StatementExpression Class Map TypeArgument TypeArgument ReferenceType ReferenceType ReferenceType VariableDeclarator it hasNext ReferenceType VariableDeclarator MethodInvocation ReferenceType ReferenceType String Object Iterator TypeArgument it MethodInvocation Map ReferenceType entry MethodInvocation m MemberReference MethodInvocation Literal MethodInvocation visitParameterAnnotationWithFields String Object ReferenceType annos MethodInvocation entrySet Entry TypeArgument TypeArgument it next i MethodInvocation ci true entry getValue Map ReferenceType iterator ReferenceType ReferenceType entry getKey Entry TypeArgument TypeArgument Class Map TypeArgument TypeArgument ReferenceType ReferenceType ReferenceType ReferenceType Class Map TypeArgument TypeArgument String Object ReferenceType ReferenceType String Object	1
MethodDeclaration Modifier Annotation ReferenceType toString ReturnStatement public Override String MemberReference symbol	0
MethodDeclaration setComplex FormalParameter StatementExpression ReferenceType complexClass Assignment RubyClass This MemberReference = MemberReference complexClass complexClass	0
MethodDeclaration Modifier ReferenceType arity ReturnStatement public Arity MemberReference arity	0
MethodDeclaration Modifier ReferenceType dumpExtended FormalParameter IOException IfStatement WhileStatement ReturnStatement private RubyClass ReferenceType type MethodInvocation BlockStatement MethodInvocation BlockStatement MemberReference RubyClass type isSingleton IfStatement StatementExpression type isIncluded StatementExpression StatementExpression StatementExpression type BinaryOperation BlockStatement Assignment MethodInvocation MethodInvocation Assignment || MethodInvocation MethodInvocation ThrowStatement MemberReference MethodInvocation = Literal write MethodInvocation dumpObject MemberReference MethodInvocation = MemberReference hasSingletonMethods type hasVariables MethodInvocation type type getSuperClass 'e' RubySymbol MemberReference Cast newSymbol type type getSuperClass type type MethodInvocation getRuntime runtime ReferenceType MemberReference Literal newTypeError IncludedModuleWrapper type "singleton can't be dumped"	0
MethodDeclaration Modifier Annotation ReferenceType exception FormalParameter SwitchStatement public JRubyMethod ElementValuePair RubyException ReferenceType args MemberReference SwitchStatementCase SwitchStatementCase SwitchStatementCase optional Literal IRubyObject args length Literal ReturnStatement Literal IfStatement LocalVariableDeclaration StatementExpression ReturnStatement ThrowStatement 1 0 This 1 BinaryOperation BlockStatement ReferenceType VariableDeclarator MethodInvocation MemberReference MethodInvocation == MemberReference This ReturnStatement RubyException ret Cast ret MemberReference MemberReference initialize ret MethodInvocation getRuntime ArraySelector args This ReferenceType MethodInvocation args Block NULL_BLOCK Literal newArgumentError Literal RubyException rbClone "Wrong argument count" 0	0
MethodDeclaration Modifier assignLastLine FormalParameter StatementExpression StatementExpression StatementExpression StatementExpression public ReferenceType value MethodInvocation MethodInvocation MethodInvocation MethodInvocation CompilerCallback methodCompiler loadRuntime methodCompiler loadThreadContext value MemberReference call method MethodInvocation Literal MethodInvocation invokestatic methodCompiler ClassReference p "setLastLine" ClassReference ClassReference ClassReference ClassReference sig ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType RuntimeHelpers IRubyObject Ruby ThreadContext IRubyObject	0
MethodDeclaration Modifier ReferenceType foo ReturnStatement public String Literal "foo"	0
MethodDeclaration Modifier postExecuteUnder StatementExpression StatementExpression StatementExpression public MethodInvocation MethodInvocation MethodInvocation popFrame popScope popRubyClass	0
MethodDeclaration Modifier BasicType hashCode ReturnStatement public int MethodInvocation m hashCode	0
MethodDeclaration Modifier Annotation assignArray FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression public Override ReferenceType runtime ReferenceType context ReferenceType self ReferenceType value ReferenceType block MethodInvocation Ruby ThreadContext IRubyObject IRubyObject Block MemberReference MemberReference MemberReference MemberReference MemberReference assign runtime context self value block	0
MethodDeclaration Modifier ReferenceType callMethodMissing FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement private static IRubyObject ReferenceType entry ReferenceType callType ReferenceType context ReferenceType self ReferenceType name ReferenceType block MethodInvocation CacheEntry CallType ThreadContext IRubyObject String Block RuntimeHelpers MethodInvocation MemberReference MemberReference MethodInvocation MemberReference MemberReference selectMethodMissing MemberReference MemberReference MethodInvocation MemberReference MemberReference call context self entry.method getVisibility name callType context self self getMetaClass name block	0
MethodDeclaration Modifier Annotation ReferenceType op_aref19 FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType arg ReferenceType VariableDeclarator BinaryOperation BlockStatement IfStatement MethodInvocation name ElementArrayValue reads MemberReference writes MemberReference compat MemberReference ThreadContext IRubyObject Ruby runtime MethodInvocation instanceof MemberReference ReferenceType ReturnStatement BinaryOperation BlockStatement IfStatement MemberReference MethodInvocation op_aref19 Literal Literal BACKREF BACKREF CompatVersion RUBY1_9 context getRuntime arg RubyFixnum MethodInvocation instanceof MemberReference ReferenceType ReturnStatement BinaryOperation BlockStatement IfStatement runtime RubyNumeric MemberReference num2int "[]" "slice" MemberReference MethodInvocation op_aref19 arg RubyRegexp MethodInvocation instanceof MemberReference ReferenceType LocalVariableDeclaration ReturnStatement BinaryOperation BlockStatement arg runtime RubyNumeric Cast fix2int MemberReference MemberReference Cast subpat19 arg RubyString ReferenceType VariableDeclarator TernaryExpression instanceof MemberReference ReferenceType LocalVariableDeclaration LocalVariableDeclaration ReturnStatement ReferenceType MemberReference runtime context ReferenceType MemberReference RubyString str Cast BinaryOperation MethodInvocation MethodInvocation arg RubyRange BasicType VariableDeclarator BasicType VariableDeclarator TernaryExpression RubyFixnum arg RubyRegexp arg ReferenceType MemberReference != MethodInvocation Literal str MemberReference strDup runtime getNil int len MethodInvocation int begLen Cast BinaryOperation MethodInvocation MethodInvocation RubyString arg MemberReference Literal strIndex19 - 1 runtime strLength ReferenceType MemberReference == MemberReference Literal runtime getNil MemberReference MemberReference MemberReference substr19 str 0 RubyRange arg begLen null runtime ArraySelector begLen ArraySelector begLen Literal Literal 0 1	1
MethodDeclaration Modifier ReferenceType f_muldiv FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter IfStatement LocalVariableDeclaration IfStatement ReturnStatement private IRubyObject ReferenceType context ReferenceType anum ReferenceType aden ReferenceType bnum ReferenceType bden BasicType mult MemberReference BlockStatement Modifier ReferenceType VariableDeclarator VariableDeclarator BinaryOperation BlockStatement BlockStatement MethodInvocation ThreadContext IRubyObject IRubyObject IRubyObject IRubyObject boolean ! mult IfStatement LocalVariableDeclaration StatementExpression StatementExpression final IRubyObject num den && BinaryOperation BinaryOperation LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression RubyRational MemberReference MethodInvocation MemberReference MemberReference newRationalNoReduce MethodInvocation BlockStatement ReferenceType VariableDeclarator Assignment Assignment && BinaryOperation BinaryOperation instanceof MemberReference ReferenceType BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator Assignment Assignment ReferenceType VariableDeclarator ReferenceType VariableDeclarator Assignment Assignment context getMetaClass num den MemberReference MemberReference f_negative_p StatementExpression StatementExpression IRubyObject tmp MemberReference MemberReference MemberReference = MemberReference MemberReference = && BinaryOperation BinaryOperation instanceof MemberReference ReferenceType bden RubyFixnum long an Cast long ad Cast long bn Cast long bd Cast long g1 MethodInvocation long g2 MethodInvocation MemberReference MethodInvocation = MemberReference MethodInvocation = IRubyObject g1 MethodInvocation IRubyObject g2 MethodInvocation MemberReference MethodInvocation = MemberReference MethodInvocation = context bnum Assignment Assignment bnum bnum bden bden tmp instanceof MemberReference ReferenceType instanceof MemberReference ReferenceType bnum RubyFixnum ReferenceType MemberReference ReferenceType MemberReference ReferenceType MemberReference ReferenceType MemberReference MemberReference MemberReference i_gcd MemberReference MemberReference i_gcd num MemberReference BinaryOperation BinaryOperation f_imul den MemberReference BinaryOperation BinaryOperation f_imul MemberReference MemberReference MemberReference f_gcd MemberReference MemberReference MemberReference f_gcd num MemberReference MethodInvocation MethodInvocation f_mul den MemberReference MethodInvocation MethodInvocation f_mul MemberReference MethodInvocation = MemberReference MethodInvocation = anum RubyFixnum aden RubyFixnum RubyFixnum anum RubyFixnum aden RubyFixnum bnum RubyFixnum bden an bd ad bn context / MemberReference MemberReference / MemberReference MemberReference context / MemberReference MemberReference / MemberReference MemberReference context anum bden context aden bnum context MemberReference MemberReference MemberReference f_idiv MemberReference MemberReference MemberReference f_idiv context MemberReference MemberReference MemberReference f_idiv MemberReference MemberReference MemberReference f_idiv anum MemberReference MemberReference f_negate bnum MemberReference MemberReference f_negate an g1 bn g2 ad g2 bd g1 context anum g1 context bnum g2 context aden g2 context bden g1 context anum context bnum	1
MethodDeclaration Modifier Annotation ReferenceType alignment FormalParameter ReturnStatement public JRubyMethod IRubyObject ReferenceType context MethodInvocation ThreadContext context MethodInvocation getRuntime MethodInvocation newFixnum type getNativeAlignment	0
MethodDeclaration Modifier beginMethod FormalParameter FormalParameter IfStatement IfStatement public ReferenceType argsCallback ReferenceType scope BinaryOperation BlockStatement BinaryOperation BlockStatement CompilerCallback StaticScope > MethodInvocation Literal StatementExpression StatementExpression StatementExpression IfStatement != MemberReference Literal StatementExpression scope getNumberOfVariables 0 MethodInvocation MethodInvocation MethodInvocation BinaryOperation BlockStatement argsCallback null MethodInvocation methodCompiler loadThreadContext methodCompiler Literal MethodInvocation invokeThreadContext method MethodInvocation astore > MethodInvocation Literal StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression argsCallback MemberReference call "getCurrentScope" ClassReference sig methodCompiler getDynamicScopeIndex scope getNumberOfVariables 4 MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation methodCompiler ReferenceType method MethodInvocation aload method MethodInvocation Literal MethodInvocation invokevirtual method MethodInvocation astore method MethodInvocation aload methodCompiler loadRuntime methodCompiler Literal MethodInvocation invokeUtilityMethod DynamicScope methodCompiler getDynamicScopeIndex ClassReference p "getValues" ClassReference sig methodCompiler getVarsArrayIndex methodCompiler getVarsArrayIndex "fillNil" VoidClassReference ClassReference ClassReference sig ReferenceType ReferenceType ReferenceType ReferenceType DynamicScope IRubyObject IRubyObject Ruby	1
MethodDeclaration Modifier MRICheckResize IfStatement private final BinaryOperation BlockStatement > BinaryOperation MemberReference LocalVariableDeclaration ForStatement ReturnStatement / MemberReference MemberReference ST_DEFAULT_MAX_DENSITY BasicType VariableDeclarator ForControl BlockStatement size table length int forSize BinaryOperation VariableDeclaration BinaryOperation MemberReference Assignment IfStatement + MemberReference Literal BasicType VariableDeclarator VariableDeclarator < MemberReference MemberReference ++ i MemberReference Literal <<= BinaryOperation BlockStatement table length 1 int i Literal newCapacity MemberReference i MRI_PRIMES length newCapacity 1 > MemberReference MemberReference StatementExpression ReturnStatement 0 MIN_CAPA newCapacity forSize MethodInvocation MemberReference resize ArraySelector MRI_PRIMES MemberReference i	1
MethodDeclaration Modifier raiseTypeError FormalParameter StatementExpression StatementExpression StatementExpression StatementExpression public ReferenceType msg MethodInvocation MethodInvocation MethodInvocation MethodInvocation String loadRuntime method MemberReference ldc Literal MethodInvocation invokeRuby method athrow msg "newTypeError" ClassReference MethodInvocation sig ReferenceType ClassReference params RaiseException ReferenceType String	0
MethodDeclaration Modifier putInt16 FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression final public BasicType buffer BasicType offset BasicType value Assignment Assignment byte int int MemberReference Cast = MemberReference Cast = ArraySelector buffer BasicType BinaryOperation ArraySelector buffer BasicType BinaryOperation BinaryOperation byte >> MemberReference Literal BinaryOperation byte >> MemberReference Literal + MemberReference Literal value 8 + MemberReference Literal value 0 offset 0 offset 1	0
MethodDeclaration Modifier ReferenceType case242_line940 FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment Assignment MemberReference Object Object int MemberReference MethodInvocation = MemberReference MethodInvocation = yyVal yyVal support MethodInvocation ClassCreator newArrayNode yyVal support Cast Cast arg_blk_pass Cast getPosition ReferenceType MethodInvocation Cast ReferenceType MemberReference ReferenceType MemberReference ReferenceType MemberReference HashNode getPosition ReferenceType MemberReference Node yyVal BlockPassNode ArraySelector yyVals ListNode ArraySelector yyVals ListNode ArraySelector yyVals BinaryOperation BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference + Literal MemberReference 0 yyTop - 1 yyTop - 1 yyTop	1
MethodDeclaration Modifier ReferenceType case50_line486 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop MethodInvocation MemberReference Object Object int support pushBlockScope yyVal	1
MethodDeclaration Modifier ReferenceType getDefaultExternal FormalParameter LocalVariableDeclaration IfStatement ReturnStatement static public IRubyObject ReferenceType runtime ReferenceType VariableDeclarator MethodInvocation BlockStatement MemberReference Ruby IRubyObject defaultExternal MethodInvocation defaultExternal isNil LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression defaultExternal MemberReference MethodInvocation convertEncodingToRubyEncoding ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation Assignment runtime runtime getDefaultExternalEncoding ByteList encodingName MethodInvocation Encoding encoding MethodInvocation runtime MemberReference setDefaultExternalEncoding MemberReference MethodInvocation = ByteList MethodInvocation create runtime MethodInvocation getEncodingService encoding defaultExternal MemberReference MemberReference convertEncodingToRubyEncoding Charset MethodInvocation defaultCharset MemberReference loadEncoding runtime encoding name encodingName	0
MethodDeclaration Modifier Annotation ReferenceType get ReturnStatement public Override IRubyObject MethodInvocation runtime getDebug	0
MethodDeclaration Modifier ReferenceType getBlockBody193 FormalParameter FormalParameter ReturnStatement final public BlockBody ReferenceType context ReferenceType descriptor MethodInvocation ThreadContext String runtimeCache This MemberReference Literal MemberReference getBlockBody19 context 3 descriptor	0
MethodDeclaration Modifier run StatementExpression public MethodInvocation MemberReference MemberReference MemberReference raiseInThread runtime currentThread exception	0
MethodDeclaration Modifier Annotation ReferenceType annotations ReturnStatement public JRubyMethod IRubyObject MethodInvocation Java MethodInvocation MethodInvocation getInstance getRuntime MethodInvocation javaClass getAnnotations	0
MethodDeclaration Modifier BasicType getShort FormalParameter ThrowStatement final public short BasicType offset MethodInvocation long ex	0
MethodDeclaration Modifier ReferenceType f_to_f FormalParameter FormalParameter ReturnStatement static public IRubyObject ReferenceType context ReferenceType x MethodInvocation ThreadContext IRubyObject x MemberReference Literal callMethod context "to_f"	1
MethodDeclaration Modifier defineMethod FormalParameter FormalParameter LocalVariableDeclaration StatementExpression public ReferenceType name ReferenceType method ReferenceType VariableDeclarator MethodInvocation String Callback Visibility visibility TernaryExpression MemberReference ClassCreator addMethod MethodInvocation MemberReference MemberReference name ReferenceType This MemberReference MemberReference name Literal equals PRIVATE PUBLIC FullFunctionCallbackMethod method visibility "initialize"	1
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name Cast ThreadContext IRubyObject RubyModule String ReferenceType MemberReference RubyStruct self	0
MethodDeclaration Modifier Annotation BasicType equals FormalParameter ReturnStatement public Override boolean ReferenceType other BinaryOperation Object == This MemberReference other	0
MethodDeclaration Modifier ReferenceType javaTraceFromRubyTrace FormalParameter LocalVariableDeclaration ForStatement ReturnStatement private StackTraceElement ReferenceType trace ReferenceType VariableDeclarator ForControl BlockStatement MemberReference ThreadContext ReferenceType StackTraceElement newTrace ArrayCreator VariableDeclaration BinaryOperation MemberReference StatementExpression newTrace RubyStackTraceElement ReferenceType MemberReference BasicType VariableDeclarator < MemberReference MemberReference ++ i Assignment StackTraceElement trace length int i Literal i newTrace length MemberReference MemberReference = 0 ArraySelector newTrace ArraySelector MethodInvocation trace MemberReference MemberReference getElement i i	0
MethodDeclaration Modifier createNewRange FormalParameter FormalParameter StatementExpression StatementExpression StatementExpression IfStatement public ReferenceType beginEndCallback BasicType isExclusive MethodInvocation MethodInvocation MethodInvocation MemberReference BlockStatement BlockStatement CompilerCallback boolean loadRuntime loadThreadContext beginEndCallback This call isExclusive StatementExpression StatementExpression MethodInvocation MethodInvocation method MethodInvocation Literal MethodInvocation invokestatic method MethodInvocation Literal MethodInvocation invokestatic ClassReference p "newExclusiveRange" ClassReference MethodInvocation sig ClassReference p "newInclusiveRange" ClassReference MethodInvocation sig ReferenceType ReferenceType ClassReference ClassReference ClassReference ClassReference params ReferenceType ReferenceType ClassReference ClassReference ClassReference ClassReference params RubyRange RubyRange ReferenceType ReferenceType ReferenceType ReferenceType RubyRange RubyRange ReferenceType ReferenceType ReferenceType ReferenceType Ruby ThreadContext IRubyObject IRubyObject Ruby ThreadContext IRubyObject IRubyObject	0
MethodDeclaration Modifier BasicType f_zero_p FormalParameter FormalParameter IfStatement ReturnStatement static public boolean ReferenceType context ReferenceType x BinaryOperation ReturnStatement MethodInvocation ThreadContext IRubyObject instanceof MemberReference ReferenceType BinaryOperation x MethodInvocation MemberReference Literal MethodInvocation callMethod x RubyFixnum == Cast Literal isTrue context "==" RubyFixnum MethodInvocation zero ReferenceType MemberReference 0 context getRuntime RubyFixnum x	1
MethodDeclaration Modifier BasicType intValue FormalParameter FormalParameter ReturnStatement final public int ReferenceType context ReferenceType obj MethodInvocation ThreadContext IRubyObject Float Cast floatToRawIntBits BasicType MethodInvocation float RubyNumeric MemberReference num2dbl obj	1
MethodDeclaration Modifier Annotation ReferenceType empty_p FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context MethodInvocation name Literal compat MemberReference ThreadContext MethodInvocation MethodInvocation newShared "empty?" CompatVersion RUBY1_9 MemberReference empty_p context getRuntime context	1
MethodDeclaration Modifier Annotation BasicType equals FormalParameter IfStatement IfStatement ReturnStatement public Override boolean ReferenceType obj BinaryOperation BlockStatement BinaryOperation BlockStatement This Object == MemberReference Literal ReturnStatement != MethodInvocation MethodInvocation ReturnStatement MemberReference MethodInvocation obj null Literal getClass obj getClass Literal _name Cast equals false false ReferenceType MemberReference Variable obj	0
MethodDeclaration Modifier checkSafeString FormalParameter IfStatement StatementExpression IfStatement public ReferenceType object BinaryOperation BlockStatement MethodInvocation BinaryOperation BlockStatement IRubyObject && BinaryOperation MethodInvocation LocalVariableDeclaration IfStatement ThrowStatement Literal secure instanceof MemberReference ReferenceType ThrowStatement > MethodInvocation Literal object isTaint ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation 4 object RubyString MethodInvocation getSafeLevel 0 ThreadContext tc MethodInvocation != MethodInvocation Literal ThrowStatement Literal newSecurityError BinaryOperation newTypeError getCurrentContext tc getFrameName null MethodInvocation "Insecure operation: -r" + BinaryOperation Literal BinaryOperation newSecurityError + Literal MethodInvocation " (expected String)" + Literal MethodInvocation "wrong argument type " object MethodInvocation getMetaClass "Insecure operation - " tc getFrameName getName	0
MethodDeclaration Modifier Annotation ReferenceType peeraddr FormalParameter LocalVariableDeclaration IfStatement ReturnStatement public JRubyMethod IRubyObject ReferenceType context ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation ThreadContext InetSocketAddress address MethodInvocation == MemberReference Literal ThrowStatement MemberReference MemberReference addrFor getRemoteSocket address null MethodInvocation context address context MethodInvocation getRuntime Literal newErrnoENOTSOCKError "Not socket or not connected"	0
MethodDeclaration Modifier registerDescriptor FormalParameter StatementExpression public ReferenceType descriptor MethodInvocation ChannelDescriptor MemberReference Literal registerDescriptor descriptor false	0
MethodDeclaration Modifier BasicType yylex2 IOException LocalVariableDeclaration StatementExpression ReturnStatement private int BasicType VariableDeclarator MethodInvocation MemberReference int token MethodInvocation MemberReference printToken token yylex2 token	1
MethodDeclaration Modifier ReferenceType newIOErrorFromException FormalParameter IfStatement public RaiseException ReferenceType ioe BinaryOperation BlockStatement BlockStatement IOException != MethodInvocation Literal IfStatement ReturnStatement ReturnStatement ioe getMessage null MethodInvocation BlockStatement IfStatement MethodInvocation MethodInvocation ioe MethodInvocation getMessage ThrowStatement MethodInvocation BlockStatement MethodInvocation MethodInvocation newRaiseException MethodInvocation Literal newRaiseException Literal equals MethodInvocation ioe MethodInvocation getMessage ThrowStatement getIOError ioe getMessage getIOError "IO Error" "Broken pipe" newErrnoEPIPEError Literal equals MethodInvocation "Connection reset by peer" newErrnoECONNRESETError	1
MethodDeclaration Modifier BasicType isDebug ReturnStatement public boolean MemberReference isDebug	0
MethodDeclaration Modifier Annotation ReferenceType interpret FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration ReturnStatement public Override IRubyObject ReferenceType runtime ReferenceType context ReferenceType self ReferenceType aBlock ReferenceType VariableDeclarator MethodInvocation Ruby ThreadContext IRubyObject Block IRubyObject receiver MethodInvocation callAdapter MemberReference MemberReference MemberReference MethodInvocation MethodInvocation MethodInvocation MethodInvocation call MethodInvocation getReceiverNode context self receiver arg1 MemberReference MemberReference MemberReference MemberReference interpret arg2 MemberReference MemberReference MemberReference MemberReference interpret arg3 MemberReference MemberReference MemberReference MemberReference interpret RuntimeHelpers MemberReference MemberReference MemberReference MemberReference MemberReference getBlock MemberReference MemberReference MemberReference MemberReference interpret runtime context self aBlock runtime context self aBlock runtime context self aBlock runtime context self iterNode aBlock runtime context self aBlock	0
MethodDeclaration Modifier Annotation ReferenceType at FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement LocalVariableDeclaration IfStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context ReferenceType indexObj ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement BasicType VariableDeclarator BinaryOperation BlockStatement BlockStatement backtrace Literal ThreadContext IRubyObject RubyFixnum lengthF MethodInvocation RubyInteger indexI MethodInvocation < MethodInvocation Literal StatementExpression long index MethodInvocation && BinaryOperation BinaryOperation ReturnStatement ReturnStatement true MethodInvocation getJavaArray indexObj convertToInteger indexI getLongValue 0 Assignment indexI getLongValue >= MemberReference Literal < MemberReference MethodInvocation MethodInvocation MethodInvocation length MemberReference MethodInvocation = index 0 index lengthF getLongValue MethodInvocation getJavaArray context MethodInvocation getRuntime indexI RubyFixnum MethodInvocation BinaryOperation newFixnum Cast arefDirect getNil context getRuntime + MethodInvocation MethodInvocation BasicType MethodInvocation indexI getLongValue lengthF getLongValue int indexI getLongValue	0
MethodDeclaration Modifier main FormalParameter TryStatement static public ReferenceType args LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration ForStatement CatchClause String ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ForControl BlockStatement CatchClauseParameter StatementExpression StatementExpression Method method ClassReference Handle handle MethodInvocation String prop1 Literal String prop2 Literal String tmp Object result VariableDeclaration BinaryOperation MemberReference LocalVariableDeclaration StatementExpression StatementExpression ForStatement StatementExpression StatementExpression StatementExpression ForStatement StatementExpression StatementExpression StatementExpression ForStatement StatementExpression Exception e MethodInvocation MethodInvocation MethodInvocation ReferenceType Literal MemberReference createHandle "java.class.path" "" BasicType VariableDeclarator < MemberReference Literal ++ i BasicType VariableDeclarator MethodInvocation Assignment ForControl BlockStatement MethodInvocation MethodInvocation Assignment ForControl BlockStatement MethodInvocation MethodInvocation Assignment ForControl BlockStatement MethodInvocation e printStackTrace System Literal exit Literal ArrayCreator getMethod HandleFactory null method int i Literal i 10 long time System.out Literal print MemberReference MethodInvocation = VariableDeclaration BinaryOperation MemberReference StatementExpression IfStatement StatementExpression StatementExpression StatementExpression StatementExpression System.out BinaryOperation println System.out Literal print MemberReference MethodInvocation = VariableDeclaration BinaryOperation MemberReference StatementExpression IfStatement StatementExpression StatementExpression StatementExpression StatementExpression IfStatement System.out BinaryOperation println System.out Literal print MemberReference MethodInvocation = VariableDeclaration BinaryOperation MemberReference StatementExpression IfStatement StatementExpression StatementExpression StatementExpression StatementExpression IfStatement System.out BinaryOperation println 1 "dummy" ReferenceType ArrayInitializer 0 "handle invocation: " time System currentTimeMillis BasicType VariableDeclarator < MemberReference Literal ++ j Assignment BinaryOperation BlockStatement MethodInvocation Assignment Assignment Assignment - MethodInvocation MemberReference "reflected invocation: " time System currentTimeMillis BasicType VariableDeclarator < MemberReference Literal ++ j Assignment BinaryOperation BlockStatement MethodInvocation Assignment Assignment Assignment BinaryOperation BlockStatement - MethodInvocation MemberReference "method invocation: " time System currentTimeMillis BasicType VariableDeclarator < MemberReference Literal ++ j Assignment BinaryOperation BlockStatement MethodInvocation Assignment Assignment Assignment BinaryOperation BlockStatement - MethodInvocation MemberReference Class ClassReference int j Literal j 50000000 MemberReference MethodInvocation = == BinaryOperation Literal StatementExpression handle Literal MemberReference invoke MemberReference MemberReference = MemberReference MemberReference = MemberReference MemberReference = System currentTimeMillis time int j Literal j 50000000 MemberReference MethodInvocation = == BinaryOperation Literal StatementExpression method Literal MemberReference invoke MemberReference MemberReference = MemberReference MemberReference = MemberReference MemberReference = == BinaryOperation Literal StatementExpression System currentTimeMillis time int j Literal j 50000000 MemberReference MethodInvocation = == BinaryOperation Literal StatementExpression MemberReference dummy MemberReference MemberReference = MemberReference MemberReference = MemberReference MemberReference = == BinaryOperation Literal StatementExpression System currentTimeMillis time ReferenceType 0 result handle Literal MemberReference invoke % MemberReference Literal 0 MethodInvocation null prop2 tmp prop1 prop1 prop2 prop2 tmp 0 result method Literal MemberReference invoke % MemberReference Literal 0 MethodInvocation null prop2 tmp prop1 prop1 prop2 prop2 tmp % MemberReference Literal 0 MethodInvocation 0 result MemberReference dummy % MemberReference Literal 0 MethodInvocation prop2 tmp prop1 prop1 prop2 prop2 tmp % MemberReference Literal 0 MethodInvocation String null prop1 j 10000000 System.out MemberReference println null prop1 j 10000000 System.out MemberReference println j 10000000 System.out MemberReference println prop1 j 10000000 System.out MemberReference println j 10000000 System.out MemberReference println result result prop2 result prop2	1
MethodDeclaration Modifier BasicType internalAdler ReturnStatement protected int MethodInvocation flater getAdler	0
MethodDeclaration Modifier ReferenceType getPrivateMethodMissing ReturnStatement public DynamicMethod MemberReference privateMethodMissing	0
MethodDeclaration Modifier ReferenceType getEvalScope IfStatement ReturnStatement final public DynamicScope BinaryOperation BlockStatement MemberReference == MemberReference Literal LocalVariableDeclaration IfStatement evalScope evalScope null ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement DynamicScope parent MethodInvocation && BinaryOperation BinaryOperation StatementExpression StatementExpression getNextCapturedScope != MemberReference Literal == MethodInvocation This Assignment Assignment parent null parent getEvalScope MemberReference This = MemberReference ClassCreator = evalScope evalScope ReferenceType ClassCreator This ManyVarsDynamicScope ReferenceType MethodInvocation EvalStaticScope getStaticScope	1
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name MethodInvocation MemberReference ThreadContext IRubyObject RubyModule String handle TernaryExpression invoke self MemberReference Literal Cast isStatic null ReferenceType MemberReference JavaObjectWrapper self	0
MethodDeclaration Modifier ReferenceType euid_set FormalParameter FormalParameter StatementExpression ReturnStatement static public IRubyObject ReferenceType runtime ReferenceType arg MethodInvocation MethodInvocation Ruby IRubyObject runtime MethodInvocation getPosix RubyFixnum MemberReference zero Cast seteuid runtime BasicType MethodInvocation int arg MethodInvocation convertToInteger getLongValue	1
MethodDeclaration Modifier setElseNode FormalParameter StatementExpression public ReferenceType elseNode Assignment Node This MemberReference = MemberReference elseNode elseNode	0
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration TryStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType block ReferenceType VariableDeclarator StatementExpression ReturnStatement CatchClause CatchClause StatementExpression ThreadContext IRubyObject RubyModule String Block Ruby runtime MethodInvocation MethodInvocation MethodInvocation CatchClauseParameter ReturnStatement CatchClauseParameter ReturnStatement MethodInvocation context getRuntime MemberReference MemberReference MemberReference MemberReference Literal pre jitCompiledScript MemberReference MemberReference MemberReference __file__ JumpException.ReturnJump rj MethodInvocation JumpException.RedoJump rj MethodInvocation MemberReference MemberReference MemberReference post context self name block 0 context self block MemberReference MemberReference handleReturn MemberReference handleRedo runtime context name context rj runtime	0
MethodDeclaration Modifier ReferenceType defineModuleUnder FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement ReturnStatement public RubyModule ReferenceType name ReferenceType parent ReferenceType VariableDeclarator BasicType VariableDeclarator BinaryOperation BlockStatement MethodInvocation String RubyModule IRubyObject moduleObj MethodInvocation boolean parentIsObject BinaryOperation != MemberReference Literal IfStatement IfStatement RubyModule This MemberReference MemberReference MemberReference newModule parent MemberReference getConstantAt == MemberReference MemberReference moduleObj null MethodInvocation ReturnStatement MemberReference BlockStatement BlockStatement name parent ! parentIsObject name parent objectClass moduleObj isModule Cast parentIsObject ThrowStatement ThrowStatement ReferenceType MemberReference MethodInvocation MethodInvocation RubyModule moduleObj BinaryOperation newTypeError BinaryOperation newTypeError + MethodInvocation Literal + BinaryOperation Literal moduleObj MethodInvocation getMetaClass " is not a module" + BinaryOperation MethodInvocation " is not a module" getName + MethodInvocation Literal moduleObj MethodInvocation getMetaClass parent getName "::" getName	1
MethodDeclaration Modifier ReferenceType getRubyCasedName FormalParameter LocalVariableDeclaration ReturnStatement static public String ReferenceType javaCasedName ReferenceType VariableDeclarator MethodInvocation String Matcher m MethodInvocation m MethodInvocation Literal replaceAll CAMEL_CASE_SPLITTER MemberReference matcher toLowerCase "$1_$2" javaCasedName	1
MethodDeclaration Modifier ReferenceType appendToBlock FormalParameter FormalParameter IfStatement IfStatement IfStatement IfStatement IfStatement StatementExpression ReturnStatement public Node ReferenceType head ReferenceType tail BinaryOperation ReturnStatement BinaryOperation ReturnStatement MethodInvocation BlockStatement BinaryOperation BlockStatement BinaryOperation BlockStatement Cast MemberReference Node Node == MemberReference Literal MemberReference == MemberReference Literal MemberReference ! configuration hasExtraPositionInformation StatementExpression instanceof MemberReference ReferenceType StatementExpression && MethodInvocation MethodInvocation StatementExpression ReferenceType MemberReference head tail null head head null tail Assignment head BlockNode Assignment warnings isVerbose Cast isBreakStatement MethodInvocation ListNode head MemberReference MethodInvocation = MemberReference ClassCreator = ReferenceType MemberReference warnings MemberReference MethodInvocation Literal warning head MemberReference compactNewlines head MethodInvocation ReferenceType MethodInvocation ListNode head ID STATEMENT_NOT_REACHED tail getPosition "Statement not reached." head MemberReference add BlockNode head getPosition head	1
MethodDeclaration Modifier setRequiredArgs FormalParameter StatementExpression public BasicType requiredArgs Assignment int This MemberReference = MemberReference requiredArgs requiredArgs	0
MethodDeclaration Modifier arrayload StatementExpression public MethodInvocation MethodInvocation getMethodVisitor MemberReference visitInsn AALOAD	0
MethodDeclaration Modifier compileNthRef FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement public ReferenceType node ReferenceType context BasicType expr ReferenceType VariableDeclarator MemberReference BlockStatement BlockStatement Node BodyCompiler boolean NthRefNode nthRefNode Cast RubyInstanceConfig PEEPHOLE_OPTZ IfStatement StatementExpression IfStatement ReferenceType MemberReference MemberReference StatementExpression MethodInvocation MemberReference StatementExpression NthRefNode node expr MethodInvocation context MethodInvocation nthRef ! expr MethodInvocation context MethodInvocation nthRef nthRefNode getMatchNumber context consumeCurrentValue nthRefNode getMatchNumber	1
MethodDeclaration Modifier ReferenceType newTypeError FormalParameter ReturnStatement public RaiseException ReferenceType message MethodInvocation String MethodInvocation MemberReference newRaiseException getTypeError message	0
MethodDeclaration Modifier Annotation ReferenceType each19 FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType block TernaryExpression name Literal frame Literal ThreadContext Block MethodInvocation MethodInvocation MethodInvocation "each" true block isGiven MemberReference MemberReference each MethodInvocation This Literal enumeratorize context block context getRuntime "each"	0
MethodDeclaration Modifier compileUnoptimizedMultipleAsgn19 FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression private ReferenceType multipleAsgn19Node ReferenceType context BasicType expr MethodInvocation MethodInvocation MultipleAsgn19Node BodyCompiler boolean MethodInvocation MemberReference Literal compile MemberReference MemberReference MemberReference compileMultipleAsgn19Assignment multipleAsgn19Node getValueNode context true multipleAsgn19Node context expr	0
MethodDeclaration Modifier if_icmpne FormalParameter StatementExpression public ReferenceType arg0 MethodInvocation Label MethodInvocation getMethodVisitor MemberReference MemberReference visitJumpInsn IF_ICMPNE arg0	1
MethodDeclaration Modifier Annotation ReferenceType s_exit FormalParameter FormalParameter LocalVariableDeclaration SynchronizedStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType receiver ReferenceType block ReferenceType VariableDeclarator MemberReference StatementExpression StatementExpression StatementExpression ThrowStatement name Literal frame Literal meta Literal IRubyObject Block RubyThread rubyThread MethodInvocation rubyThread Assignment Assignment MethodInvocation ClassCreator "exit" true true receiver MethodInvocation MethodInvocation MethodInvocation getRuntime MemberReference MemberReference = MemberReference Literal = receiver MethodInvocation MethodInvocation getRuntime ReferenceType getThreadService getCurrentContext getThread rubyThread status Status ABORTING rubyThread mail null getThreadService Literal setCritical ThreadKill false	1
MethodDeclaration Modifier ReferenceType case100_line672 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support MethodInvocation Cast Cast new_colon2 Cast getPosition ReferenceType MemberReference ReferenceType Cast ReferenceType MemberReference Node ArraySelector yyVals String ReferenceType MemberReference Node ArraySelector yyVals BinaryOperation Token ArraySelector yyVals BinaryOperation + Literal MemberReference BinaryOperation + Literal MemberReference - 2 yyTop + Literal MemberReference - 2 yyTop 0 yyTop	1
MethodDeclaration Modifier BasicType getDouble FormalParameter StatementExpression ReturnStatement final public double BasicType offset MethodInvocation MethodInvocation long MemberReference Literal checkBounds IO BinaryOperation getDouble offset 8 + MemberReference MemberReference address offset	0
MethodDeclaration Modifier ReferenceType invokeDirectSuperWithExceptionHandling FormalParameter FormalParameter FormalParameter TryStatement private IRubyObject ReferenceType method ReferenceType javaInvokee ReferenceType arguments  LocalVariableDeclaration ReturnStatement CatchClause CatchClause CatchClause CatchClause Method Object Object ReferenceType VariableDeclarator MethodInvocation CatchClauseParameter ReturnStatement CatchClauseParameter ReturnStatement CatchClauseParameter ReturnStatement CatchClauseParameter ReturnStatement Object result MethodInvocation MemberReference convertReturn IllegalArgumentException iae MethodInvocation IllegalAccessException iae MethodInvocation InvocationTargetException ite MethodInvocation Throwable t MethodInvocation method MemberReference MemberReference invoke result MemberReference MemberReference MemberReference handlelIllegalArgumentEx MemberReference MemberReference handleIllegalAccessEx MemberReference MemberReference handleInvocationTargetEx MemberReference MemberReference handleThrowable javaInvokee arguments method iae arguments method iae ite method t method	1
MethodDeclaration Modifier BasicType getLong FormalParameter ReturnStatement final public long BasicType offset MethodInvocation long IO BinaryOperation getLong + MemberReference MemberReference address offset	0
MethodDeclaration Modifier Annotation setUp Exception StatementExpression StatementExpression StatementExpression StatementExpression LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression protected Override Assignment Assignment MethodInvocation MethodInvocation ReferenceType VariableDeclarator Assignment Assignment Assignment SuperMethodInvocation MemberReference MethodInvocation = MemberReference MethodInvocation = System Literal Literal setProperty System Literal Literal setProperty ClassCache classCache MethodInvocation MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation = setUp savedMode System Literal getProperty savedThreshold System Literal getProperty "jruby.compile.mode" "JIT" "jruby.jit.threshold" "0" JavaEmbedUtils MethodInvocation createClassCache runtime1 JavaEmbedUtils ClassCreator MemberReference initialize runtime2 JavaEmbedUtils ClassCreator MemberReference initialize evaler JavaEmbedUtils newRuntimeAdapter "jruby.compile.mode" "jruby.jit.threshold" Thread MethodInvocation currentThread ReferenceType classCache ReferenceType classCache getContextClassLoader ArrayList TypeArgument ArrayList TypeArgument ReferenceType ReferenceType Object Object	0
MethodDeclaration Modifier ReferenceType getBigIntegerValue ReturnStatement public BigInteger MemberReference BigInteger ZERO	0
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression ReturnStatement public IRubyObject ReferenceType context ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 ReferenceType arg3 ReferenceType arg4 ReferenceType arg5 ReferenceType arg6 ReferenceType binding ReferenceType type ReferenceType VariableDeclarator Assignment MethodInvocation ThreadContext IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject Binding Block ReferenceType IRubyObject args ArrayCreator MemberReference MethodInvocation = MemberReference MethodInvocation Literal Literal Literal MemberReference MemberReference yield Type ReferenceType ArrayInitializer args MemberReference MemberReference MemberReference prepareArgumentsForCall context RubyArray MethodInvocation MemberReference newArrayNoCopy null null true binding type IRubyObject MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference context args type context getRuntime args arg0 arg1 arg2 arg3 arg4 arg5 arg6	1
MethodDeclaration Modifier ReferenceType yield FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration TryStatement public IRubyObject ReferenceType context ReferenceType binding ReferenceType type ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator IfStatement ReturnStatement CatchClause StatementExpression ThreadContext Binding Block ReferenceType IRubyObject self MethodInvocation Visibility oldVis MethodInvocation Frame lastFrame MethodInvocation MemberReference StatementExpression MethodInvocation CatchClauseParameter ReturnStatement MethodInvocation Type MemberReference prepareSelf binding MethodInvocation getFrame MemberReference Literal MemberReference pre ! noargblock MethodInvocation MemberReference MemberReference evalBlockBody JumpException.NextJump nj MethodInvocation MemberReference MemberReference MemberReference MemberReference post binding getVisibility context null binding assigner MethodInvocation MemberReference MemberReference MemberReference assign context self MemberReference MemberReference MemberReference handleNextJump context binding oldVis lastFrame context getRuntime context self Block NULL_BLOCK context nj type	1
MethodDeclaration Modifier call FormalParameter StatementExpression public ReferenceType context MethodInvocation BodyCompiler MethodInvocation MemberReference Literal compile opElementAsgnNode getValueNode context true	0
MethodDeclaration Modifier testNil StatementExpression public MethodInvocation MethodInvocation assertTrue ! rubyObject isNil	1
MethodDeclaration Modifier ReferenceType slice FormalParameter ReturnStatement public MemoryIO BasicType offset This long	0
MethodDeclaration Modifier BasicType shouldRunInShell FormalParameter FormalParameter ReturnStatement private static boolean ReferenceType shell ReferenceType args BinaryOperation String String || MemberReference BinaryOperation ! Platform IS_WINDOWS && BinaryOperation ClassCreator && BinaryOperation BinaryOperation ! MethodInvocation ReferenceType MemberReference != MemberReference Literal > MemberReference Literal exists File ArraySelector args shell null args length 1 Literal 0	1
MethodDeclaration Modifier reify FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement LocalVariableDeclaration StatementExpression IfStatement StatementExpression StatementExpression LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression ForStatement StatementExpression LocalVariableDeclaration StatementExpression LocalVariableDeclaration TryStatement StatementExpression StatementExpression synchronized public ReferenceType classDumpDir ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement ReferenceType VariableDeclarator MethodInvocation BinaryOperation BlockStatement MethodInvocation MethodInvocation ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation ReferenceType VariableDeclarator Assignment MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation Assignment Assignment MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation EnhancedForControl BlockStatement MethodInvocation BasicType VariableDeclarator MethodInvocation ReferenceType VariableDeclarator LocalVariableDeclaration StatementExpression CatchClause MethodInvocation Assignment String Class reifiedParent ClassReference String javaName BinaryOperation String javaPath BinaryOperation JRubyClassLoader parentCL MethodInvocation != MemberReference Literal StatementExpression ClassWriter cw ClassCreator cw MemberReference BinaryOperation MemberReference Literal MethodInvocation Literal visit && BinaryOperation BinaryOperation ForStatement cw BinaryOperation Literal MethodInvocation Literal Literal visitField cw BinaryOperation Literal MethodInvocation Literal Literal visitField SkinnyMethodAdapter m ClassCreator m start m Literal aload m MemberReference Literal MethodInvocation putstatic m Literal aload m MemberReference Literal MethodInvocation putstatic m voidreturn m end MethodVisitor mv MethodInvocation MemberReference ClassCreator = m Literal aload m Literal aload m Literal aload m MethodInvocation Literal MethodInvocation invokespecial m voidreturn m end MemberReference MethodInvocation = MemberReference ClassCreator = m Literal aload m MemberReference Literal MethodInvocation getstatic m MemberReference Literal MethodInvocation getstatic m MethodInvocation Literal MethodInvocation invokespecial m voidreturn m end VariableDeclaration MethodInvocation LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement StatementExpression cw visitEnd byte classBytes MethodInvocation MemberReference MemberReference MemberReference dumpReifiedClass Class result MethodInvocation ReferenceType VariableDeclarator MethodInvocation CatchClauseParameter ThrowStatement MemberReference setClassAllocator MemberReference MemberReference = ReferenceType + Literal MethodInvocation + Literal MethodInvocation runtime getJRubyClassLoader superClass reifiedClass null Assignment ReferenceType BinaryOperation RubyInstanceConfig JAVA_VERSION + MemberReference MemberReference javaPath null MemberReference p null != MemberReference Literal != MethodInvocation Literal EnhancedForControl BlockStatement | MemberReference MemberReference "ruby" ClassReference ci null null | MemberReference MemberReference "rubyClass" ClassReference ci null null ReferenceType MethodInvocation 0 javaPath "ruby" ClassReference ci 1 javaPath "rubyClass" ClassReference ci cw MemberReference Literal MethodInvocation Literal Literal visitMethod m ReferenceType MemberReference 0 1 2 MemberReference p "<init>" VoidClassReference ClassReference ClassReference sig mv cw MemberReference Literal MethodInvocation Literal Literal visitMethod m ReferenceType MemberReference 0 javaPath "ruby" ClassReference ci javaPath "rubyClass" ClassReference ci MemberReference p "<init>" VoidClassReference ClassReference ClassReference sig ReferenceType VariableDeclarator MethodInvocation getMethods ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement MethodInvocation cw toByteArray classDumpDir javaPath classBytes parentCL MemberReference MemberReference defineClass java ReferenceType clinit MethodInvocation clinit Literal MemberReference This invoke Exception e ClassCreator result reifiedClass result RubyObject "ruby." getBaseName "ruby/" getBaseName MemberReference MemberReference = ClassWriter | MemberReference MemberReference ACC_PUBLIC ACC_SUPER reifiedParent classAnnotations null classAnnotations size 0 VariableDeclaration MethodInvocation LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression ACC_STATIC ACC_PRIVATE ReferenceType ACC_STATIC ACC_PRIVATE ReferenceType SkinnyMethodAdapter cw BinaryOperation Literal MethodInvocation Literal Literal visitMethod ReferenceType ReferenceType ACC_PUBLIC "<init>" VoidClassReference ClassReference ClassReference sig null null SkinnyMethodAdapter mv reifiedParent ReferenceType ReferenceType ACC_PUBLIC "<init>" CodegenUtils VoidClassReference sig null null SkinnyMethodAdapter mv ReferenceType ReferenceType reifiedParent ReferenceType ReferenceType Map ReferenceType methodEntry entrySet String methodName MethodInvocation String javaMethodName MethodInvocation Map TypeArgument TypeArgument methodAnnos MethodInvocation List TypeArgument parameterAnnos MethodInvocation Class methodSignature MethodInvocation == MemberReference Literal SwitchStatement StatementExpression LocalVariableDeclaration StatementExpression LocalVariableDeclaration ForStatement LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression m end javaName classBytes lang ReferenceType result Literal ClassReference ClassReference getDeclaredMethod null runtime ReferenceType MemberReference reifiedParent superClass reifiedClass ClassWriter COMPUTE_FRAMES ClassWriter COMPUTE_MAXS ReferenceType VariableDeclarator classAnnotations entrySet ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation Ruby RubyClass | MemberReference MemberReference "clinit" VoidClassReference ClassReference ClassReference sig null null Ruby RubyClass ReferenceType ReferenceType Ruby RubyClass Ruby RubyClass Ruby RubyClass Entry TypeArgument TypeArgument methodEntry getKey JavaNameMangler MemberReference mangleStringForCleanJavaIdentifier ReferenceType ReferenceType MethodInvocation getMethodAnnotations ReferenceType MethodInvocation getParameterAnnotations MethodInvocation getMethodSignatures methodSignature null MethodInvocation SwitchStatementCase SwitchStatementCase MethodInvocation ReferenceType VariableDeclarator MethodInvocation BasicType VariableDeclarator EnhancedForControl BlockStatement BasicType VariableDeclarator Assignment Assignment MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation reflect ReferenceType "clinit" ReferenceType ReferenceType RuntimeException e Map ReferenceType entry Class annoType MethodInvocation Map TypeArgument TypeArgument fields MethodInvocation AnnotationVisitor av MethodInvocation CodegenUtils MemberReference MethodInvocation visitAnnotationFields av visitEnd ACC_PUBLIC ACC_STATIC ReferenceType ReferenceType Ruby RubyClass ReferenceType ReferenceType methodName Class Map TypeArgument TypeArgument MemberReference get Map TypeArgument TypeArgument MemberReference get MemberReference get methodEntry MethodInvocation MethodInvocation getValue Literal StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression BreakStatement StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression m areturn Class params ArrayCreator System MemberReference Literal MemberReference Literal MemberReference arraycopy int baseIndex Literal VariableDeclaration MemberReference IfStatement int rubyIndex MemberReference MemberReference MethodInvocation = MemberReference ClassCreator = MemberReference MemberReference MemberReference generateMethodAnnotations m MemberReference Literal MethodInvocation getstatic m MemberReference astore m Literal aload m MemberReference ldc MiniJava MemberReference MemberReference MemberReference coerceArgumentsToRuby m MemberReference Literal MethodInvocation invokevirtual MiniJava MemberReference MemberReference coerceResultAndReturn Method Ruby RubyClass Entry TypeArgument TypeArgument entry getKey ReferenceType ReferenceType entry getValue cw MethodInvocation Literal visitAnnotation av entry getValue Ruby RubyClass String DynamicMethod ReferenceType ReferenceType methodName ReferenceType ReferenceType methodName methodName getArity getValue 0 Assignment Assignment MethodInvocation MethodInvocation MethodInvocation MethodInvocation Assignment Assignment MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation ReferenceType BinaryOperation methodSignature 1 params 0 params length 1 ReferenceType VariableDeclarator params BinaryOperation BlockStatement BlockStatement baseIndex mv cw BinaryOperation MemberReference MethodInvocation Literal Literal visitMethod m ReferenceType MemberReference methodAnnos m parameterAnnos javaPath "ruby" ClassReference ci rubyIndex 0 methodName m params rubyIndex javaPath "callMethod" ClassReference ClassReference ClassReference sig m ArraySelector methodSignature ReferenceType ReferenceType String Object MemberReference ci true String Object Class Map TypeArgument TypeArgument MemberReference MethodInvocation = MemberReference ClassCreator = MemberReference MemberReference MemberReference generateMethodAnnotations m Literal aload m MemberReference ldc m MemberReference Literal MethodInvocation invokevirtual MemberReference MethodInvocation = MemberReference ClassCreator = MemberReference MemberReference MemberReference generateMethodAnnotations m Literal aload m MemberReference ldc m Literal aload m MemberReference Literal MethodInvocation invokevirtual Class - MemberReference Literal Class paramType || BinaryOperation BinaryOperation StatementExpression StatementExpression | MemberReference MemberReference javaMethodName MemberReference MemberReference sig null null SkinnyMethodAdapter mv ReferenceType ReferenceType ReferenceType ReferenceType Literal Class Map TypeArgument TypeArgument annoType ReferenceType ReferenceType mv cw BinaryOperation MemberReference MethodInvocation Literal Literal visitMethod m ReferenceType MemberReference methodAnnos m parameterAnnos 0 methodName javaPath "callMethod" ClassReference ClassReference sig mv cw BinaryOperation MemberReference MethodInvocation Literal Literal visitMethod m ReferenceType MemberReference methodAnnos m parameterAnnos 0 methodName 1 javaPath "callMethod" ClassReference ClassReference ClassReference sig methodSignature length 1 == MemberReference ClassReference == MemberReference ClassReference Assignment Assignment ACC_PUBLIC ACC_VARARGS ArraySelector methodSignature params Ruby IRubyObject String IRubyObject 0 ReferenceType ReferenceType String Object | MemberReference MemberReference javaMethodName ClassReference sig null null SkinnyMethodAdapter mv ReferenceType ReferenceType | MemberReference MemberReference javaMethodName ClassReference ClassReference sig null null SkinnyMethodAdapter mv ReferenceType ReferenceType ReferenceType paramType BasicType paramType BasicType MemberReference Literal += MemberReference Literal += Literal String Object ACC_PUBLIC ACC_VARARGS ReferenceType IRubyObject String ACC_PUBLIC ACC_VARARGS ReferenceType ReferenceType IRubyObject String IRubyObject double long baseIndex 2 baseIndex 1 0 IRubyObject IRubyObject IRubyObject	1
MethodDeclaration Modifier Annotation ReferenceType untrace_var FormalParameter FormalParameter FormalParameter FormalParameter IfStatement LocalVariableDeclaration IfStatement IfStatement ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType args ReferenceType block BinaryOperation ThrowStatement ReferenceType VariableDeclarator BinaryOperation ReturnStatement BinaryOperation BlockStatement BlockStatement MethodInvocation name Literal required Literal optional Literal frame Literal module Literal visibility MemberReference ThreadContext IRubyObject IRubyObject Block == MemberReference Literal MethodInvocation String var TernaryExpression != MethodInvocation Literal MethodInvocation > MemberReference Literal LocalVariableDeclaration ForStatement ReturnStatement StatementExpression context MethodInvocation getRuntime "untrace_var" 1 1 true true PRIVATE args length 0 context MethodInvocation getRuntime BinaryOperation MemberReference Literal var Literal charAt '$' context MethodInvocation getRuntime args length 1 ReferenceType VariableDeclarator ForControl BlockStatement MethodInvocation MethodInvocation getNil Literal Literal newArgumentError >= MemberReference Literal ArraySelector MethodInvocation args null 0 getNil ArrayList TypeArgument success ClassCreator VariableDeclaration BinaryOperation MemberReference IfStatement RubyArray MethodInvocation MemberReference newArray context MethodInvocation MethodInvocation getRuntime 0 1 args length 1 Literal toString ReferenceType ReferenceType BasicType VariableDeclarator < MemberReference MemberReference ++ i MethodInvocation BlockStatement context getRuntime success getGlobalVariables MemberReference untraceVar 0 IRubyObject ArrayList TypeArgument int i Literal i args length context MethodInvocation MethodInvocation getRuntime StatementExpression var ReferenceType 1 getGlobalVariables MemberReference MemberReference untraceVar MethodInvocation IRubyObject var ArraySelector args success MemberReference add MemberReference ArraySelector args i MemberReference i	1
MethodDeclaration Modifier ReferenceType convertToHash ReturnStatement public RubyHash Cast ReferenceType MethodInvocation RubyHash TypeConverter This MethodInvocation Literal convertToType MethodInvocation getRuntime "to_hash" getHash	0
MethodDeclaration Modifier defineEncodings LocalVariableDeclaration WhileStatement private ReferenceType VariableDeclarator MethodInvocation BlockStatement HashEntryIterator hei MethodInvocation hei hasNext LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression encodings entryIterator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator Assignment MethodInvocation CaseInsensitiveBytesHash ReferenceType e Cast Entry ee MemberReference RubyEncoding encoding MethodInvocation MemberReference MemberReference = MemberReference MemberReference MemberReference MemberReference defineEncodingConstants CaseInsensitiveBytesHashEntry TypeArgument ReferenceType MethodInvocation e value RubyEncoding MemberReference MemberReference MemberReference MemberReference MethodInvocation newEncoding ArraySelector encodingList encoding encoding e bytes e p e end ReferenceType CaseInsensitiveBytesHash ReferenceType hei next runtime e bytes e p e end ee isDummy MethodInvocation Entry CaseInsensitiveBytesHashEntry TypeArgument ee getIndex ReferenceType Entry	1
MethodDeclaration Modifier Annotation ReferenceType argument_types ReturnStatement public JRubyMethod RubyArray MethodInvocation MethodInvocation buildRubyArray getParameterTypes	1
MethodDeclaration Modifier Annotation Annotation ReferenceType abs FormalParameter IfStatement ReturnStatement public JRubyMethod Override IRubyObject ReferenceType context BinaryOperation BlockStatement This ThreadContext < MemberReference Literal IfStatement ReturnStatement value 0 BinaryOperation BlockStatement MethodInvocation == MemberReference MemberReference ReturnStatement RubyFixnum MethodInvocation MemberReference newFixnum value Long MIN_VALUE MethodInvocation context getRuntime - value RubyBignum MethodInvocation MethodInvocation newBignum context getRuntime BigInteger MethodInvocation MemberReference valueOf negate value	0
MethodDeclaration Modifier ReferenceType intoCommandArguments FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration ForStatement IfStatement ReturnStatement protected static String ReferenceType str ReferenceType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator ForControl BlockStatement BinaryOperation BlockStatement Cast String List TypeArgument args ClassCreator boolean inSingle Literal int contentStart Literal VariableDeclaration BinaryOperation MemberReference IfStatement IfStatement IfStatement IfStatement IfStatement != MemberReference Literal StatementExpression ReferenceType MethodInvocation ReferenceType ReferenceType false - 1 BasicType VariableDeclarator VariableDeclarator < MemberReference MemberReference ++ i BinaryOperation BlockStatement BinaryOperation BlockStatement BinaryOperation BlockStatement BinaryOperation BlockStatement BinaryOperation BlockStatement contentStart - 1 MethodInvocation String args ArrayCreator toArray String ArrayList TypeArgument int i Literal j MethodInvocation i j && BinaryOperation BinaryOperation StatementExpression StatementExpression ContinueStatement == MethodInvocation Literal ContinueStatement && BinaryOperation MemberReference StatementExpression StatementExpression ContinueStatement == MethodInvocation Literal StatementExpression StatementExpression StatementExpression ContinueStatement == MemberReference Literal StatementExpression args MethodInvocation add ReferenceType Literal ReferenceType 0 str length && BinaryOperation MemberReference != MemberReference Literal MethodInvocation Assignment str MemberReference charAt ' ' == MethodInvocation Literal ! inSingle Assignment Assignment str MemberReference charAt '\'' Assignment MethodInvocation Assignment contentStart - 1 Assignment str MemberReference substring String 0 String == MethodInvocation Literal ! inSingle contentStart - 1 args MethodInvocation add MemberReference Literal = i str MemberReference charAt '\'' MemberReference Literal = MemberReference BinaryOperation = i MemberReference Literal = args MethodInvocation add MemberReference Literal = MemberReference MemberReference = contentStart str MemberReference charAt ' ' str MemberReference MemberReference substring contentStart - 1 i inSingle true contentStart + MemberReference Literal inSingle false str MemberReference MemberReference substring contentStart - 1 contentStart i i contentStart i i 1 contentStart i	1
MethodDeclaration Modifier ReferenceType getGraph ReturnStatement public DirectedGraph MemberReference _cfg	0
MethodDeclaration Modifier Annotation ReferenceType rand FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement LocalVariableDeclaration LocalVariableDeclaration IfStatement IfStatement ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair RubyNumeric ReferenceType context ReferenceType recv ReferenceType arg ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement ReferenceType VariableDeclarator BasicType VariableDeclarator BinaryOperation ReturnStatement BinaryOperation ReturnStatement MethodInvocation name Literal module Literal visibility MemberReference ThreadContext IRubyObject IRubyObject Ruby runtime MethodInvocation Random random MethodInvocation instanceof MemberReference ReferenceType LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression LocalVariableDeclaration ReturnStatement RubyInteger integerCeil Cast long ceil MethodInvocation == MemberReference Literal MethodInvocation > MemberReference MemberReference MethodInvocation runtime MethodInvocation newFixnum "rand" true PRIVATE context getRuntime runtime getRandom arg RubyBignum BasicType VariableDeclarator ReferenceType VariableDeclarator BasicType VariableDeclarator MethodInvocation ReferenceType VariableDeclarator ClassCreator ReferenceType MethodInvocation Math MethodInvocation abs ceil 0 RubyFloat MemberReference MethodInvocation newFloat ceil Integer MAX_VALUE runtime BinaryOperation newFixnum random Cast nextInt byte bigCeilBytes Cast BigInteger bigCeil ClassCreator byte randBytes ArrayCreator random MemberReference nextBytes BigInteger result ClassCreator ReferenceType MemberReference MemberReference RubyInteger RubyKernel MemberReference MemberReference MemberReference new_integer integerCeil getLongValue runtime random nextDouble % MethodInvocation MemberReference BasicType MemberReference ReferenceType MemberReference MethodInvocation ReferenceType MemberReference BasicType MemberReference randBytes MethodInvocation MethodInvocation ReferenceType MemberReference RubyBignum runtime result context recv arg Math MethodInvocation abs ceil int ceil RubyBignum arg abs BigInteger bigCeilBytes byte bigCeilBytes length abs MemberReference mod BigInteger randBytes random nextLong bigCeil	1
MethodDeclaration Modifier ReferenceType convert FormalParameter FormalParameter ReturnStatement public Object ReferenceType context ReferenceType rubyObject MethodInvocation ThreadContext IRubyObject rubyObject ClassReference toJava ReferenceType Long	0
MethodDeclaration Modifier Annotation ReferenceType s_hist_set FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement TryStatement ReturnStatement static public JRubyMethod ElementValuePair IRubyObject ReferenceType recv ReferenceType index ReferenceType val ReferenceType VariableDeclarator ReferenceType VariableDeclarator BasicType VariableDeclarator BinaryOperation StatementExpression StatementExpression CatchClause MethodInvocation name Literal IRubyObject IRubyObject IRubyObject Ruby runtime MethodInvocation ConsoleHolder holder MethodInvocation int i Cast < MemberReference Literal Assignment MethodInvocation CatchClauseParameter ThrowStatement runtime getNil "[]=" recv getRuntime MemberReference getHolder BasicType MethodInvocation i 0 MemberReference MethodInvocation += holder.history MemberReference MethodInvocation set IndexOutOfBoundsException ioobe MethodInvocation runtime int index MethodInvocation convertToInteger i holder.history size i val asJavaString runtime BinaryOperation newIndexError getLongValue + Literal MemberReference "invalid history index: " i	1
MethodDeclaration ReferenceType getOrCreate FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration ForStatement StatementExpression TryStatement T ReferenceType object BasicType hash ReferenceType allocator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ForControl BlockStatement MethodInvocation StatementExpression LocalVariableDeclaration IfStatement LocalVariableDeclaration LocalVariableDeclaration ForStatement StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression ReturnStatement StatementExpression Object int A Entry TypeArgument table T proxy VariableDeclaration BinaryOperation Assignment IfStatement lock MethodInvocation BasicType VariableDeclarator BinaryOperation BlockStatement BlockStatement BasicType VariableDeclarator ReferenceType VariableDeclarator ForControl BlockStatement Assignment Assignment Assignment Assignment Assignment MemberReference MethodInvocation ReferenceType ReferenceType VariableDeclarator != MemberReference Literal MemberReference MemberReference = BinaryOperation BlockStatement expunge int potentialNewSize > Assignment MemberReference StatementExpression StatementExpression int index Entry TypeArgument e Assignment BinaryOperation Assignment IfStatement MemberReference MethodInvocation = MemberReference ClassCreator = MemberReference MemberReference = MemberReference MemberReference = MemberReference MemberReference = proxy unlock T Entry TypeArgument e Assignment e null e e next && BinaryOperation BinaryOperation IfStatement BreakStatement MemberReference BinaryOperation = threshold Assignment Assignment ReferenceType MemberReference MemberReference = != MemberReference Literal MemberReference MemberReference = BinaryOperation BlockStatement proxy cache MemberReference MemberReference allocateProxy e ReferenceType MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference ArraySelector table e tableSize potentialNewSize entryTable table ReferenceType MemberReference MemberReference = == MemberReference MemberReference == MemberReference MethodInvocation BinaryOperation ReturnStatement potentialNewSize + MemberReference Literal MemberReference MethodInvocation = MemberReference MemberReference = T e ArraySelector table e null e e next && BinaryOperation BinaryOperation IfStatement StatementExpression StatementExpression BreakStatement object allocator Entry TypeArgument object hash proxy cache referenceType ArraySelector table referenceQueue MemberReference T table entryTable hash e hash object e.objectRef get != Assignment Literal MemberReference tableSize 1 table rehash table entryTable Assignment == MemberReference MemberReference == MemberReference MethodInvocation BinaryOperation ReturnStatement MethodInvocation MemberReference ReferenceType MemberReference index MemberReference MethodInvocation = null proxy MemberReference BinaryOperation = hash e hash object e.objectRef get != Assignment Literal MemberReference MemberReference MemberReference MemberReference remove -- potentialNewSize T index proxy e.proxyRef get index & MemberReference BinaryOperation MemberReference MethodInvocation = null proxy table hash e hash - MemberReference Literal proxy e.proxyRef get table length 1	1
MethodDeclaration Modifier ReferenceType buildAlias FormalParameter FormalParameter LocalVariableDeclaration StatementExpression ReturnStatement public Operand Modifier ReferenceType alias ReferenceType s ReferenceType VariableDeclarator MethodInvocation MemberReference final AliasNode IR_Scope Operand args ArrayCreator s ClassCreator addInstr Nil NIL ReferenceType ArrayInitializer ReferenceType Literal MemberReference MemberReference Operand ClassCreator ClassCreator ClassCreator RUBY_INTERNALS_CALL_Instr null MethAddr DEFINE_ALIAS args ReferenceType MemberReference ReferenceType MethodInvocation ReferenceType MethodInvocation MetaObject s MethAddr alias getNewName MethAddr alias getOldName	1
MethodDeclaration Modifier ReferenceType createBacktraceFromFrames FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement LocalVariableDeclaration ForStatement ReturnStatement static public IRubyObject ReferenceType runtime ReferenceType backtraceFrames BasicType cropAtEval ReferenceType VariableDeclarator BinaryOperation ReturnStatement BasicType VariableDeclarator ForControl BlockStatement MemberReference Ruby RubyStackTraceElement boolean RubyArray backtrace MethodInvocation || BinaryOperation BinaryOperation MemberReference int traceSize MemberReference VariableDeclaration BinaryOperation MemberReference LocalVariableDeclaration IfStatement StatementExpression backtrace runtime newArray == MemberReference Literal <= MemberReference Literal backtrace backtraceFrames length BasicType VariableDeclarator < MemberReference BinaryOperation ++ i ReferenceType VariableDeclarator BinaryOperation BreakStatement MethodInvocation backtraceFrames null backtraceFrames length 0 int i Literal i - MemberReference Literal RubyStackTraceElement frame MemberReference && MemberReference MethodInvocation MemberReference MemberReference MemberReference MemberReference addBackTraceElement 0 traceSize 1 ArraySelector backtraceFrames cropAtEval frame isBinding runtime backtrace frame ArraySelector backtraceFrames MemberReference BinaryOperation i + MemberReference Literal i 1	1
MethodDeclaration Modifier Annotation ReferenceType assoc FormalParameter FormalParameter LocalVariableDeclaration ForStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType key ReferenceType VariableDeclarator ForControl BlockStatement MethodInvocation name Literal required Literal ThreadContext IRubyObject Ruby runtime MethodInvocation VariableDeclaration BinaryOperation MemberReference LocalVariableDeclaration IfStatement runtime getNil "assoc" 1 context getRuntime BasicType VariableDeclarator < MemberReference BinaryOperation ++ i ReferenceType VariableDeclarator BinaryOperation BlockStatement int i MemberReference i + MemberReference MemberReference IRubyObject v MemberReference instanceof MemberReference ReferenceType LocalVariableDeclaration IfStatement begin begin realLength ArraySelector values v RubyArray ReferenceType VariableDeclarator BinaryOperation ReturnStatement MemberReference RubyArray arr Cast && BinaryOperation MethodInvocation MemberReference i ReferenceType MemberReference > MemberReference Literal MemberReference MemberReference MemberReference equalInternal arr RubyArray v arr realLength 0 context arr ArraySelector values key MemberReference arr begin	1
MethodDeclaration Modifier ReferenceType format FormalParameter FormalParameter FormalParameter LocalVariableDeclaration ForStatement ReturnStatement public StringBuffer ReferenceType ignored ReferenceType toAppendTo ReferenceType fieldPosition ReferenceType VariableDeclarator EnhancedForControl BlockStatement MemberReference Date StringBuffer FieldPosition TimeOutputFormatter formatter Literal VariableDeclaration MemberReference LocalVariableDeclaration LocalVariableDeclaration SwitchStatement IfStatement toAppendTo null ReferenceType VariableDeclarator compiledPattern ReferenceType VariableDeclarator BasicType VariableDeclarator MethodInvocation SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase BinaryOperation BlockStatement Token token String output Literal boolean format Literal token getFormat FORMAT_OUTPUT StatementExpression BreakStatement FORMAT_STRING StatementExpression StatementExpression BreakStatement FORMAT_WEEK_LONG LocalVariableDeclaration IfStatement StatementExpression BreakStatement FORMAT_WEEK_SHORT StatementExpression IfStatement StatementExpression BreakStatement FORMAT_MONTH_LONG StatementExpression BreakStatement FORMAT_MONTH_SHORT StatementExpression BreakStatement FORMAT_DAY LocalVariableDeclaration StatementExpression BreakStatement FORMAT_DAY_S StatementExpression StatementExpression BreakStatement FORMAT_HOUR FORMAT_HOUR_BLANK StatementExpression StatementExpression IfStatement StatementExpression BreakStatement FORMAT_HOUR_M FORMAT_HOUR_S StatementExpression IfStatement IfStatement BreakStatement FORMAT_DAY_YEAR StatementExpression StatementExpression BreakStatement FORMAT_MINUTES StatementExpression StatementExpression BreakStatement FORMAT_MONTH StatementExpression StatementExpression BreakStatement FORMAT_MERIDIAN FORMAT_MERIDIAN_LOWER_CASE IfStatement BreakStatement FORMAT_SECONDS StatementExpression StatementExpression BreakStatement FORMAT_WEEK_YEAR_M StatementExpression BreakStatement FORMAT_WEEK_YEAR_S StatementExpression BreakStatement FORMAT_DAY_WEEK FORMAT_DAY_WEEK2 StatementExpression IfStatement StatementExpression BreakStatement FORMAT_YEAR_LONG StatementExpression StatementExpression BreakStatement FORMAT_YEAR_SHORT StatementExpression StatementExpression BreakStatement FORMAT_ZONE_OFF StatementExpression StatementExpression StatementExpression IfStatement StatementExpression StatementExpression IfStatement StatementExpression BreakStatement FORMAT_ZONE_ID StatementExpression BreakStatement FORMAT_CENTURY StatementExpression BreakStatement FORMAT_MILLISEC StatementExpression StatementExpression BreakStatement FORMAT_EPOCH StatementExpression BreakStatement FORMAT_WEEK_WEEKYEAR StatementExpression StatementExpression BreakStatement FORMAT_NANOSEC LocalVariableDeclaration StatementExpression StatementExpression BreakStatement FORMAT_WEEKYEAR StatementExpression BreakStatement != MemberReference Literal StatementExpression null true Assignment Assignment Assignment BasicType VariableDeclarator BinaryOperation BlockStatement Assignment Assignment BinaryOperation BlockStatement Assignment Assignment Assignment BasicType VariableDeclarator Assignment Assignment Assignment Assignment Assignment BinaryOperation BlockStatement Assignment Assignment BinaryOperation BlockStatement BinaryOperation BlockStatement BlockStatement Assignment Assignment Assignment Assignment Assignment Assignment BinaryOperation BlockStatement BlockStatement Assignment Assignment Assignment Assignment Assignment BinaryOperation BlockStatement Assignment Assignment Assignment Assignment Assignment Assignment Assignment Assignment BinaryOperation BlockStatement Assignment Assignment BinaryOperation BlockStatement Assignment MethodInvocation MethodInvocation Assignment Assignment Assignment Assignment Assignment BasicType VariableDeclarator Assignment Assignment Assignment output null MethodInvocation MemberReference Cast = MemberReference MethodInvocation = MemberReference Literal = int v BinaryOperation == MemberReference Literal StatementExpression MemberReference MethodInvocation = MemberReference BinaryOperation = == MemberReference Literal StatementExpression MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation = int value MethodInvocation MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference BinaryOperation = MemberReference MethodInvocation = MemberReference Literal = < MemberReference Literal StatementExpression MemberReference MemberReference += MemberReference MethodInvocation = > MemberReference Literal StatementExpression == MemberReference Literal StatementExpression StatementExpression IfStatement StatementExpression MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation = < MethodInvocation Literal StatementExpression StatementExpression MemberReference MethodInvocation = MemberReference BinaryOperation = MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation = == MethodInvocation MemberReference StatementExpression MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference BinaryOperation = MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference TernaryExpression = MemberReference MethodInvocation = < BinaryOperation Literal StatementExpression MemberReference BinaryOperation += MemberReference BinaryOperation = < MemberReference Literal StatementExpression MemberReference MemberReference += toAppendTo MethodInvocation append toAppendTo MethodInvocation append MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation = long nano MethodInvocation MemberReference Cast = MemberReference MethodInvocation = MemberReference MethodInvocation = toAppendTo TernaryExpression append formatter ReferenceType MethodInvocation output token MethodInvocation getData format false % BinaryOperation Literal v 0 MemberReference output formatSymbols ArraySelector getWeekdays v % BinaryOperation Literal v 0 MemberReference output formatSymbols ArraySelector getShortWeekdays output formatSymbols ArraySelector getMonths output formatSymbols ArraySelector getShortMonths dt getDayOfMonth output String Literal MemberReference format value dt getDayOfMonth output + TernaryExpression MethodInvocation value dt getHourOfDay output "" value 10 Assignment output value value dt getHourOfDay value 12 Assignment value 0 Assignment Assignment BinaryOperation BlockStatement Assignment value dt getDayOfYear output String Literal MemberReference format value dt getMinuteOfHour output String Literal MemberReference format value dt getMonthOfYear output String Literal MemberReference format dt getHourOfDay 12 Assignment Assignment value dt getSecondOfMinute output + TernaryExpression MethodInvocation output MemberReference formatWeekYear output MemberReference formatWeekYear value dt getDayOfWeek token getFormat FORMAT_DAY_WEEK Assignment output Integer MemberReference toString value dt getYear output String Literal MemberReference format value % MethodInvocation Literal output String Literal MemberReference format value dt MethodInvocation getZone output BinaryOperation Literal Literal value Math MemberReference abs / MemberReference Literal 10 Assignment output / MemberReference Literal value / BinaryOperation Literal value 10 Assignment output value dt MethodInvocation getZone dt getCenturyOfEra value dt getMillisOfSecond output String Literal MemberReference format output Long BinaryOperation toString value dt getWeekOfWeekyear output String Literal MemberReference format System nanoTime value BasicType BinaryOperation output Integer MemberReference toString output Integer MethodInvocation toString MemberReference MethodInvocation MemberReference TimeOutputFormatter token getData toString + MethodInvocation Literal 8 ++ v MemberReference + MethodInvocation Literal 8 ++ v MemberReference BinaryOperation BinaryOperation "%02d" value BinaryOperation Literal Literal Integer MemberReference toString MemberReference TernaryExpression += MemberReference Literal -= MemberReference Literal = MemberReference Literal = < MemberReference Literal StatementExpression MemberReference MemberReference += "%03d" value "%02d" value "%02d" value MemberReference TernaryExpression = MemberReference TernaryExpression = BinaryOperation Literal Literal Integer MemberReference toString java.util.Calendar MONDAY java.util.Calendar SUNDAY MemberReference BinaryOperation = value "%04d" value dt getYear 100 "%02d" value MethodInvocation getOffset < MemberReference Literal "-" "+" value value 3600000 MemberReference Literal += value 3600000 % MemberReference Literal 60000 MemberReference Literal += MethodInvocation getShortName "%03d" value / MethodInvocation Literal "%02d" value int % MemberReference Literal value dt getWeekyear format MemberReference MemberReference formatOutput output dt getDayOfWeek 1 v dt getDayOfWeek 1 v - MethodInvocation Literal - MethodInvocation Literal < MemberReference Literal " " "" value output BinaryOperation Literal Literal value 12 output "12" output "" value 10 Assignment output value output BinaryOperation Literal Literal output BinaryOperation Literal Literal < MemberReference Literal "0" "" value value % MemberReference Literal dt getMillis value 0 output "0" value 3600000 output "0" dt getMillis dt getMillis 1000 nano 1000000000 formatter output dt getMonthOfYear 1 dt getMonthOfYear 1 value 10 == MethodInvocation MemberReference "0" " " MemberReference TernaryExpression += == MethodInvocation MemberReference "AM" "am" == MethodInvocation MemberReference "PM" "pm" value 10 value 7 token getFormat FORMAT_HOUR output BinaryOperation Literal Literal token getFormat FORMAT_MERIDIAN token getFormat FORMAT_MERIDIAN == MethodInvocation MemberReference "0" " " token getFormat FORMAT_HOUR_M	1
MethodDeclaration Modifier ReferenceType case479_line1815 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support Cast Literal Literal Literal Literal Cast new_args ReferenceType MemberReference null null null null ReferenceType MemberReference BlockArgNode ArraySelector yyVals BlockArgNode ArraySelector yyVals BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference 0 yyTop 0 yyTop	1
MethodDeclaration Modifier BasicType internalAdler ReturnStatement protected int MethodInvocation defl MethodInvocation getDeflater getAdler	0
MethodDeclaration Modifier ReferenceType getSymbol2 FormalParameter FormalParameter ReturnStatement final public RubySymbol ReferenceType runtime ReferenceType name MethodInvocation Ruby String runtimeCache MemberReference Literal MemberReference getSymbol runtime 2 name	0
MethodDeclaration Modifier Annotation ReferenceType current FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair RubyThread ReferenceType recv MethodInvocation name Literal meta Literal IRubyObject recv MethodInvocation MethodInvocation getRuntime "current" true getCurrentContext getThread	0
MethodDeclaration Modifier ReferenceType case93_line646 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support MethodInvocation Literal Cast new_colon2 Cast getPosition null ReferenceType Cast ReferenceType MemberReference String ReferenceType MemberReference Token ArraySelector yyVals Token ArraySelector yyVals BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference 0 yyTop 0 yyTop	1
MethodDeclaration Modifier ReferenceType case15_line348 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference ClassCreator = yyVal yyVal ReferenceType MethodInvocation MethodInvocation Cast Literal IfNode Cast getPosition support Cast getConditionNode ReferenceType MemberReference null ReferenceType MemberReference ReferenceType MemberReference Node ArraySelector yyVals Node ArraySelector yyVals Node ArraySelector yyVals BinaryOperation BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference + Literal MemberReference - 2 yyTop - 2 yyTop 0 yyTop	1
MethodDeclaration Modifier ReferenceType as FormalParameter ThrowStatement public IRubyObject ReferenceType javaClass MethodInvocation Class MethodInvocation getRuntime BinaryOperation newTypeError + MethodInvocation Literal MethodInvocation getMetaClass " cannot coerce to a Java type." getBaseName	0
MethodDeclaration Modifier Annotation ReferenceType rb_import FormalParameter FormalParameter FormalParameter LocalVariableDeclaration TryStatement static public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType self ReferenceType name ReferenceType VariableDeclarator LocalVariableDeclaration LocalVariableDeclaration IfStatement StatementExpression ReturnStatement CatchClause name Literal module Literal ThreadContext IRubyObject IRubyObject String className MethodInvocation ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement MethodInvocation MethodInvocation CatchClauseParameter IfStatement ThrowStatement "import" true name toString Class cls MethodInvocation RubyModule namespace instanceof MemberReference ReferenceType StatementExpression StatementExpression namespace MethodInvocation MethodInvocation defineConstant context MethodInvocation getRuntime Exception e MethodInvocation BlockStatement MethodInvocation MethodInvocation MemberReference findClass self RubyModule Assignment Assignment cls getSimpleName MethodInvocation MemberReference getMirrorForClass getNil context MethodInvocation MethodInvocation getRuntime StatementExpression context MethodInvocation getRuntime context MethodInvocation getRuntime className MemberReference Cast = MemberReference MethodInvocation = context getRuntime cls getDebug isTrue MethodInvocation BinaryOperation newTypeError getJRubyClassLoader namespace ReferenceType MemberReference namespace self MethodInvocation getMetaClass e printStackTrace + BinaryOperation MemberReference RubyModule self getRealClass + BinaryOperation Literal e + Literal MemberReference ", exception: " "Could not find class " className	1
MethodDeclaration Modifier ReferenceType getCacheCompiler ReturnStatement public CacheCompiler MemberReference cacheCompiler	0
MethodDeclaration Modifier ReferenceType getArity ReturnStatement public Arity MethodInvocation Arity singleArgument	0
MethodDeclaration Modifier initRoot LocalVariableDeclaration IfStatement StatementExpression StatementExpression IfStatement StatementExpression StatementExpression StatementExpression LocalVariableDeclaration IfStatement StatementExpression StatementExpression StatementExpression IfStatement StatementExpression StatementExpression StatementExpression IfStatement StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression private BasicType VariableDeclarator MemberReference BlockStatement BlockStatement Assignment Assignment MemberReference StatementExpression MethodInvocation MethodInvocation MethodInvocation ReferenceType VariableDeclarator MemberReference StatementExpression Assignment Assignment Assignment MemberReference StatementExpression MethodInvocation MethodInvocation MethodInvocation MemberReference StatementExpression MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation Assignment boolean oneNine MethodInvocation oneNine StatementExpression StatementExpression StatementExpression MemberReference MethodInvocation = MemberReference MethodInvocation = oneNine MethodInvocation objectClass MemberReference setMetaClass moduleClass MemberReference setMetaClass classClass MemberReference setMetaClass RubyClass metaClass oneNine Assignment MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation = oneNine MethodInvocation RubyObject This MemberReference createObjectClass RubyModule This MemberReference createModuleClass RubyClass This MemberReference createClassClass oneNine MethodInvocation objectClass Literal MemberReference setConstant objectClass Literal MemberReference setConstant objectClass Literal MemberReference setConstant RubyKernel This createKernelModule objectClass MemberReference includeModule MemberReference MethodInvocation = is1_9 Assignment Assignment Assignment moduleClass RubyClass This Literal MemberReference MemberReference createBootstrapClass classClass RubyClass This Literal MemberReference MemberReference createBootstrapClass basicObjectClass MemberReference setMetaClass classClass classClass classClass MemberReference MethodInvocation = metaClass objectClass MemberReference makeMetaClass metaClass moduleClass MemberReference makeMetaClass metaClass classClass MemberReference makeMetaClass RubyBasicObject This MemberReference createBasicObjectClass objectClass moduleClass classClass objectClass Literal MemberReference setConstant "Object" objectClass "Class" classClass "Module" moduleClass kernelModule topSelf TopSelfFactory This createTopSelf MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation = "Module" objectClass RubyModule MODULE_ALLOCATOR "Class" moduleClass RubyClass CLASS_ALLOCATOR classClass metaClass basicObjectClass MemberReference makeMetaClass classClass metaClass metaClass basicObjectClass "BasicObject" basicObjectClass basicObjectClass RubyClass This Literal Literal MemberReference createBootstrapClass objectClass RubyClass This Literal MemberReference MemberReference createBootstrapClass objectClass RubyClass This Literal Literal MemberReference createBootstrapClass classClass "BasicObject" null RubyBasicObject OBJECT_ALLOCATOR "Object" basicObjectClass RubyObject OBJECT_ALLOCATOR "Object" null RubyObject OBJECT_ALLOCATOR	1
MethodDeclaration Modifier Annotation ReferenceType getArity ReturnStatement public Override Arity MethodInvocation argsNode getArity	0
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter IfStatement ReturnStatement public IRubyObject ReferenceType context ReferenceType caller ReferenceType self BasicType fixnum BinaryOperation BlockStatement SuperMethodInvocation ThreadContext IRubyObject IRubyObject long instanceof MemberReference ReferenceType ReturnStatement MemberReference MemberReference MemberReference MemberReference call self RubyFixnum Cast context caller self fixnum ReferenceType MemberReference RubyFixnum self	0
MethodDeclaration Modifier Annotation ReferenceType false_xor FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair IRubyObject ReferenceType f ReferenceType oth TernaryExpression name Literal IRubyObject IRubyObject MethodInvocation MethodInvocation MemberReference "^" oth isTrue f MethodInvocation getRuntime f getTrue	1
MethodDeclaration Modifier ReferenceType getFixnum4 FormalParameter FormalParameter ReturnStatement final public RubyFixnum ReferenceType runtime BasicType value MethodInvocation Ruby int runtimeCache MemberReference Literal MemberReference getFixnum runtime 4 value	0
MethodDeclaration Modifier Annotation ReferenceType op_xor FormalParameter FormalParameter StatementExpression IfStatement IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType other Assignment BinaryOperation BlockStatement BinaryOperation BlockStatement MethodInvocation name Literal required Literal compat MemberReference ThreadContext IRubyObject MemberReference MethodInvocation = instanceof MemberReference ReferenceType ReturnStatement instanceof MemberReference ReferenceType ReturnStatement MemberReference Literal MemberReference coerceBin "^" 1 CompatVersion RUBY1_8 other other convertToInteger other RubyBignum MethodInvocation other RubyFixnum MethodInvocation context "^" other MethodInvocation MethodInvocation bignorm MethodInvocation MethodInvocation bignorm getRuntime value Cast xor getRuntime value MethodInvocation xor ReferenceType MemberReference BigInteger Cast valueOf RubyBignum other ReferenceType MemberReference RubyFixnum other	1
MethodDeclaration Modifier ReferenceType getEncodingError ReturnStatement public RubyClass MemberReference encodingError	0
MethodDeclaration Modifier compileFalse FormalParameter FormalParameter FormalParameter IfStatement public ReferenceType node ReferenceType context BasicType expr MemberReference BlockStatement BlockStatement Node BodyCompiler boolean RubyInstanceConfig PEEPHOLE_OPTZ IfStatement StatementExpression StatementExpression IfStatement MemberReference BlockStatement MethodInvocation MethodInvocation MemberReference StatementExpression expr StatementExpression StatementExpression context loadFalse context pollThreadEvents ! expr MethodInvocation MethodInvocation MethodInvocation context consumeCurrentValue context loadFalse context pollThreadEvents	1
MethodDeclaration Modifier Annotation ReferenceType singleton_method_undefined FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType symbolId ReferenceType block MethodInvocation name Literal required Literal frame Literal module Literal visibility MemberReference ThreadContext IRubyObject IRubyObject Block context MethodInvocation getRuntime "singleton_method_undefined" 1 true true PRIVATE getNil	1
MethodDeclaration Modifier ReferenceType case490_line1808 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop MethodInvocation MemberReference Object Object int yyerrok yyVal	1
MethodDeclaration Modifier ReferenceType setValueThreeDepthZero FormalParameter StatementExpression ReturnStatement public IRubyObject ReferenceType value MethodInvocation Assignment IRubyObject MemberReference assertSetValueThreeDepthZero MemberReference MemberReference = value ArraySelector variableValues value Literal 3	1
MethodDeclaration Modifier Annotation ReferenceType sub19 FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType arg0 ReferenceType block ReferenceType VariableDeclarator MethodInvocation MemberReference name Literal frame Literal reads MemberReference writes MemberReference compat MemberReference ThreadContext IRubyObject Block RubyString str MethodInvocation str MemberReference MemberReference MemberReference sub_bang19 str "sub" true BACKREF BACKREF CompatVersion RUBY1_9 MethodInvocation strDup context arg0 block context getRuntime	0
MethodDeclaration Modifier Annotation Annotation ReferenceType ceil ReturnStatement public JRubyMethod ElementValuePair Override IRubyObject MethodInvocation name Literal MethodInvocation MethodInvocation dbl2num "ceil" getRuntime Math MemberReference ceil value	0
MethodDeclaration Modifier Annotation ReferenceType op_fdiv FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context ReferenceType other MethodInvocation name Literal ThreadContext IRubyObject MemberReference MethodInvocation MemberReference f_div "fdiv" context MemberReference This f_to_f other context	1
MethodDeclaration Modifier ReferenceType createSharedScopeBlock FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement static public Block ReferenceType context ReferenceType self BasicType arity ReferenceType callback BasicType hasMultipleArgsHead BasicType argsNodeType MethodInvocation ThreadContext IRubyObject int CompiledBlockCallback boolean int CompiledSharedScopeBlock MemberReference MemberReference MethodInvocation MethodInvocation MemberReference MemberReference MemberReference newCompiledSharedScopeClosure context self Arity MemberReference createArity context getCurrentScope callback hasMultipleArgsHead argsNodeType arity	0
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration TryStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType arg0 ReferenceType VariableDeclarator StatementExpression ReturnStatement CatchClause CatchClause StatementExpression ThreadContext IRubyObject RubyModule String IRubyObject Ruby runtime MethodInvocation MethodInvocation MethodInvocation CatchClauseParameter ReturnStatement CatchClauseParameter ReturnStatement MethodInvocation context getRuntime MemberReference MemberReference MemberReference MemberReference Literal pre jitCompiledScript MemberReference MemberReference MemberReference MemberReference __file__ JumpException.ReturnJump rj MethodInvocation JumpException.RedoJump rj MethodInvocation MemberReference MemberReference MemberReference post context self name Block NULL_BLOCK 1 context self arg0 Block NULL_BLOCK MemberReference MemberReference handleReturn MemberReference handleRedo runtime context name context rj runtime	0
MethodDeclaration Modifier ReferenceType get_package_module FormalParameter FormalParameter ReturnStatement static public IRubyObject ReferenceType recv ReferenceType symObject MethodInvocation IRubyObject IRubyObject MethodInvocation MethodInvocation getPackageModule recv getRuntime symObject asJavaString	1
MethodDeclaration Modifier ReferenceType addCoreClass FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression IfStatement ReturnStatement private static IR_Class ReferenceType name ReferenceType parent ReferenceType coreMethods ReferenceType VariableDeclarator MethodInvocation BinaryOperation BlockStatement MemberReference String IR_Scope String IR_Class c ClassCreator _coreClasses MemberReference MemberReference put != MemberReference Literal ForStatement c ReferenceType MemberReference Cast Literal MemberReference Literal c _name c coreMethods null EnhancedForControl BlockStatement IR_Class parent ReferenceType Literal null name false VariableDeclaration MemberReference LocalVariableDeclaration StatementExpression StatementExpression IR_Scope null ReferenceType VariableDeclarator coreMethods ReferenceType VariableDeclarator MethodInvocation MethodInvocation String m IR_Method meth ClassCreator meth Literal setCodeModificationFlag c MemberReference addMethod ReferenceType MemberReference Literal MemberReference Literal false meth IR_Method c null m true	1
MethodDeclaration Modifier Annotation ReferenceType readlines FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement IfStatement LocalVariableDeclaration LocalVariableDeclaration WhileStatement ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType args ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation BlockStatement BinaryOperation BlockStatement ReferenceType VariableDeclarator ReferenceType VariableDeclarator Assignment BlockStatement MemberReference name ElementArrayValue optional Literal frame Literal ThreadContext IRubyObject IRubyObject ArgsFileData data MethodInvocation Ruby runtime MethodInvocation ! data MemberReference next_argv ReturnStatement instanceof MemberReference ReferenceType ReturnStatement RubyArray ary MethodInvocation IRubyObject line MemberReference MethodInvocation = StatementExpression ary Literal 1 true ArgsFileData MemberReference getDataFrom context getRuntime context TernaryExpression data currentFile RubyIO MethodInvocation runtime newArray line MemberReference MemberReference MemberReference argf_getline MethodInvocation "readlines" recv MethodInvocation MethodInvocation MethodInvocation data.currentFile MemberReference Literal MemberReference callMethod context recv args ary MemberReference append runtime is1_9 runtime newEmptyArray runtime getNil context "readlines" args line	0
MethodDeclaration Modifier BasicType isKindOfModule FormalParameter ForStatement ReturnStatement public boolean ReferenceType type ForControl BlockStatement Literal RubyModule VariableDeclaration BinaryOperation Assignment IfStatement false ReferenceType VariableDeclarator != MemberReference Literal MemberReference MethodInvocation = MethodInvocation ReturnStatement RubyModule module This module null module module getSuperClass module MemberReference isSame Literal type true	1
MethodDeclaration Modifier Annotation ReferenceType truncate ReturnStatement public JRubyMethod ElementValuePair IRubyObject MethodInvocation name Literal MethodInvocation convertToFloat "truncate" truncate	0
MethodDeclaration Modifier Annotation ReferenceType path ReturnStatement public JRubyMethod ElementValuePair IRubyObject MethodInvocation name Literal MethodInvocation getRuntime "path" getNil	0
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration ForStatement StatementExpression ReturnStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType args ReferenceType VariableDeclarator MethodInvocation ReferenceType VariableDeclarator BasicType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ForControl BlockStatement MethodInvocation MemberReference ThreadContext IRubyObject RubyModule String IRubyObject Ruby runtime MethodInvocation MemberReference createJavaCallables JavaProxy proxy MethodInvocation int len MemberReference Object convertedArgs ArrayCreator JavaConstructor constructor Cast VariableDeclaration BinaryOperation MemberReference StatementExpression proxy MethodInvocation dataWrapStruct self context getRuntime runtime MemberReference castJavaProxy args length ReferenceType MemberReference ReferenceType MethodInvocation BasicType VariableDeclarator < MemberReference MemberReference ++ i Assignment JavaObject MemberReference MethodInvocation wrap self Object len JavaConstructor MemberReference MemberReference MemberReference MemberReference findCallable int i Literal i len MemberReference MethodInvocation = runtime constructor MemberReference newInstanceDirect self name args len 0 ArraySelector convertedArgs MemberReference MemberReference MemberReference MemberReference convertArg convertedArgs MemberReference context ArraySelector args constructor i i MemberReference i	0
MethodDeclaration Modifier Annotation ReferenceType aref FormalParameter AssertStatement IfStatement IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType arg0 MethodInvocation BinaryOperation ReturnStatement BinaryOperation ThrowStatement MethodInvocation name ElementArrayValue compat MemberReference IRubyObject ! arg0 MethodInvocation getRuntime instanceof MemberReference ReferenceType MethodInvocation instanceof MemberReference ReferenceType MethodInvocation MemberReference arefCommon Literal Literal CompatVersion RUBY1_8 is1_9 arg0 RubyFixnum Cast entry arg0 RubySymbol MethodInvocation getRuntime arg0 "[]" "slice" ReferenceType MemberReference Literal newTypeError RubyFixnum arg0 "Symbol as array index"	1
MethodDeclaration Modifier ReferenceType case288_line1085 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference ClassCreator = yyVal yyVal ReferenceType MethodInvocation Cast Cast FCallNoArgBlockNode Cast getPosition ReferenceType Cast ReferenceType MemberReference ReferenceType MemberReference String ReferenceType MemberReference IterNode ArraySelector yyVals Token ArraySelector yyVals Token ArraySelector yyVals BinaryOperation BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference + Literal MemberReference 0 yyTop - 1 yyTop - 1 yyTop	1
MethodDeclaration Modifier BasicType addVariable FormalParameter LocalVariableDeclaration IfStatement StatementExpression ReturnStatement public int ReferenceType name BasicType VariableDeclarator BinaryOperation ReturnStatement MethodInvocation BinaryOperation String int slot MethodInvocation >= MemberReference Literal MemberReference MemberReference growVariableNames - MemberReference Literal MemberReference isDefined slot 0 slot name variableNames length 1 name	1
MethodDeclaration Modifier ReferenceType singleByteUpcase FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration WhileStatement ReturnStatement private IRubyObject ReferenceType runtime BasicType bytes BasicType s BasicType end BasicType VariableDeclarator BinaryOperation BlockStatement TernaryExpression Ruby byte int int boolean modify Literal < MemberReference MemberReference LocalVariableDeclaration IfStatement StatementExpression MemberReference This MethodInvocation false s end BasicType VariableDeclarator MethodInvocation BlockStatement MemberReference modify runtime getNil int c BinaryOperation ASCII MemberReference isLower StatementExpression StatementExpression ++ s & MemberReference Literal c Assignment Assignment ArraySelector bytes 0xff MemberReference MemberReference = MemberReference Literal = MemberReference ArraySelector bytes AsciiTables ArraySelector ToUpperCaseTable modify true s MemberReference MemberReference s c	0
MethodDeclaration Modifier ReferenceType fastDeclareClassVariable FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement StatementExpression ReturnStatement static public IRubyObject ReferenceType context ReferenceType runtime ReferenceType self ReferenceType internedName ReferenceType value ReferenceType VariableDeclarator BinaryOperation ThrowStatement MethodInvocation MemberReference ThreadContext Ruby IRubyObject String IRubyObject RubyModule rubyClass MethodInvocation == MemberReference Literal MethodInvocation rubyClass MemberReference MemberReference fastSetClassVar value ASTInterpreter MemberReference MemberReference getClassVariableBase rubyClass null runtime Literal newTypeError internedName value context runtime "no class/module to define class variable"	1
MethodDeclaration Modifier ReferenceType getNodeType ReturnStatement public NodeType MemberReference NodeType RETURNNODE	0
MethodDeclaration Modifier Annotation ReferenceType ruby_to_java FormalParameter FormalParameter FormalParameter IfStatement ReturnStatement static public Deprecated IRubyObject Modifier ReferenceType recv ReferenceType object ReferenceType unusedBlock MethodInvocation BlockStatement MethodInvocation final IRubyObject IRubyObject Block object Literal respondsTo LocalVariableDeclaration IfStatement IfStatement ReturnStatement MemberReference MemberReference MemberReference primitive_to_java "to_java_object" ReferenceType VariableDeclarator BinaryOperation BlockStatement BinaryOperation BlockStatement MemberReference recv object unusedBlock IRubyObject result Cast == MemberReference Literal StatementExpression instanceof MemberReference ReferenceType StatementExpression result ReferenceType MethodInvocation result null Assignment result JavaObject MethodInvocation JavaObject object dataGetStruct MemberReference MethodInvocation = recv MethodInvocation MethodInvocation MethodInvocation getRuntime result object MethodInvocation Literal callMethod getJavaSupport getObjectProxyCache Cast MemberReference put recv MethodInvocation getRuntime "to_java_object" ReferenceType MemberReference object getCurrentContext JavaObject result	1
MethodDeclaration Modifier Annotation ReferenceType egid FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv MethodInvocation name Literal module Literal visibility MemberReference ThreadContext IRubyObject MethodInvocation egid "egid" true Visibility PRIVATE context getRuntime	0
MethodDeclaration Modifier BasicType incrementParenNest StatementExpression ReturnStatement public int MemberReference MemberReference ++ parenNest parenNest	0
MethodDeclaration Modifier ReferenceType get FormalParameter AssertStatement AssertStatement LocalVariableDeclaration IfStatement IfStatement ReturnStatement public IRubyObject ReferenceType name BinaryOperation MethodInvocation ReferenceType VariableDeclarator BinaryOperation ReturnStatement MethodInvocation BlockStatement MethodInvocation String != MemberReference Literal name Literal startsWith GlobalVariable variable Cast != MemberReference Literal MethodInvocation runtime isVerbose StatementExpression runtime getNil name null "$" ReferenceType MethodInvocation variable null variable MethodInvocation getAccessor MethodInvocation GlobalVariable globalVariables MemberReference get getValue runtime MethodInvocation getWarnings name MemberReference BinaryOperation MemberReference warning ID GLOBAL_NOT_INITIALIZED + BinaryOperation Literal name + Literal MemberReference "' not initialized" "global variable `" name	1
MethodDeclaration Modifier ReferenceType unmarshalFrom FormalParameter FormalParameter FormalParameter IOException LocalVariableDeclaration StatementExpression StatementExpression ReturnStatement public Object ReferenceType runtime ReferenceType type ReferenceType unmarshalStream ReferenceType VariableDeclarator MethodInvocation MethodInvocation MemberReference Ruby RubyClass UnmarshalStream IRubyObject result MethodInvocation unmarshalStream MemberReference registerLinkTarget unmarshalStream MemberReference defaultVariablesUnmarshal result type allocate result result	0
MethodDeclaration Modifier setArgValues FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression public ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 ReferenceType arg3 ReferenceType arg4 ReferenceType arg5 ReferenceType arg6 ReferenceType arg7 ReferenceType arg8 ReferenceType arg9 MethodInvocation IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject ArrayCreator Literal setArgValues ReferenceType ArrayInitializer 10 IRubyObject MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference arg0 arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8 arg9	1
MethodDeclaration Modifier ReferenceType case73_line559 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference Cast = yyVal yyVal ReferenceType MemberReference ListNode ArraySelector yyVals BinaryOperation + Literal MemberReference - 2 yyTop	1
MethodDeclaration Modifier ReferenceType childNodes ReturnStatement public List TypeArgument MemberReference ReferenceType EMPTY_LIST Node	0
MethodDeclaration Modifier sastore StatementExpression public MethodInvocation MethodInvocation getMethodVisitor MemberReference visitInsn SASTORE	0
MethodDeclaration Modifier ReferenceType getNativeType ReturnStatement final public NativeType This	0
MethodDeclaration Modifier compilePostExe FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration StatementExpression IfStatement public ReferenceType node ReferenceType context BasicType expr Modifier ReferenceType VariableDeclarator Modifier ReferenceType VariableDeclarator MethodInvocation MemberReference StatementExpression Node BodyCompiler boolean final PostExeNode postExeNode Cast final CompilerCallback closureBody ClassCreator context MemberReference createNewEndBlock ! expr MethodInvocation ReferenceType MemberReference ReferenceType MethodDeclaration closureBody context consumeCurrentValue PostExeNode node CompilerCallback Modifier call FormalParameter IfStatement public ReferenceType context BinaryOperation BlockStatement BlockStatement BodyCompiler != MethodInvocation Literal StatementExpression StatementExpression postExeNode getBodyNode null MethodInvocation MethodInvocation MethodInvocation MemberReference Literal compile context loadNil postExeNode getBodyNode context true	1
MethodDeclaration Modifier Annotation ReferenceType constantTableStore FormalParameter FormalParameter ReturnStatement protected Override IRubyObject ReferenceType name ReferenceType value MethodInvocation String IRubyObject delegate MemberReference MemberReference constantTableStore name value	1
MethodDeclaration Modifier ReferenceType getFirstNode ReturnStatement public Node MemberReference firstNode	0
MethodDeclaration Modifier Annotation ReferenceType getpeername ReturnStatement public Deprecated IRubyObject MethodInvocation MethodInvocation getpeername MethodInvocation getRuntime getCurrentContext	1
MethodDeclaration Modifier BasicType valueHash FormalParameter IfStatement protected int ReferenceType value BinaryOperation ReturnStatement ReturnStatement Object == MemberReference Literal Literal MethodInvocation value null 0 value hashCode	1
MethodDeclaration Modifier ReferenceType newCompiledBlockLight FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement static public BlockBody ReferenceType arity ReferenceType scope ReferenceType callback BasicType hasMultipleArgsHead BasicType argumentType ClassCreator Arity StaticScope CompiledBlockCallback19 boolean int ReferenceType MemberReference MemberReference MemberReference MemberReference MemberReference CompiledBlockLight19 arity scope callback hasMultipleArgsHead argumentType	0
MethodDeclaration Modifier Annotation ReferenceType eqq_p19 FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType obj MethodInvocation name Literal compat MemberReference ThreadContext IRubyObject MemberReference Literal MemberReference callMethod "===" CompatVersion RUBY1_9 context "include?" obj	1
MethodDeclaration Modifier Annotation ReferenceType declared_method_smart FormalParameter ClassNotFoundException LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement ThrowStatement public JRubyMethod ElementValuePair ElementValuePair JavaCallable ReferenceType args ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation ReturnStatement MethodInvocation required Literal rest Literal IRubyObject String methodName MemberReference Class TypeArgument argumentTypes MethodInvocation JavaCallable callable MethodInvocation != MemberReference Literal MemberReference MethodInvocation getRuntime 1 true ArraySelector MethodInvocation args ? MemberReference buildArgumentTypes MethodInvocation MethodInvocation MemberReference MemberReference getMatchingCallable callable null callable BinaryOperation MemberReference newNameError Literal asJavaString args getRuntime javaClass methodName argumentTypes + BinaryOperation Literal methodName 0 + BinaryOperation MethodInvocation "'" + BinaryOperation Literal MethodInvocation javaClass + Literal MemberReference "' for class '" getName "undefined method '" methodName	1
MethodDeclaration Modifier Annotation ReferenceType createCtorFast FormalParameter Exception LocalVariableDeclaration StatementExpression LocalVariableDeclaration StatementExpression StatementExpression StatementExpression LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression ReturnStatement private Deprecated ClassWriter ReferenceType namePath ReferenceType VariableDeclarator MethodInvocation ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MemberReference String ClassWriter cw ClassCreator cw MemberReference BinaryOperation MemberReference Literal MemberReference Literal visit MethodVisitor mv MethodInvocation mv visitCode mv MemberReference Literal visitVarInsn mv MemberReference MemberReference Literal Literal visitMethodInsn Label line ClassCreator mv Literal MemberReference visitLineNumber mv MemberReference visitInsn mv Literal Literal visitMaxs mv visitEnd cw ReferenceType MemberReference V1_4 + MemberReference MemberReference namePath null FAST_SUPER_CLASS null cw MemberReference Literal Literal Literal Literal visitMethod ALOAD 0 INVOKESPECIAL FAST_SUPER_CLASS "<init>" "()V" ReferenceType 0 line RETURN 1 1 ClassWriter ClassWriter COMPUTE_MAXS ACC_PUBLIC ACC_SUPER ACC_PUBLIC "<init>" "()V" null null Label	1
MethodDeclaration Modifier ReferenceType getAllNamesInScope ReturnStatement final public String MethodInvocation staticScope getAllNamesInScope	0
MethodDeclaration Modifier emitGET_FIELD FormalParameter LocalVariableDeclaration StatementExpression StatementExpression StatementExpression public ReferenceType putField ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation GET_FIELD_Instr String field Cast MemberReference declareField MethodInvocation emit MethodInvocation method ReferenceType MethodInvocation field putField ArraySelector getOperands MethodInvocation MemberReference MethodInvocation getField FieldRef putField ArraySelector getOperands Literal Type ClassReference getType field Type ClassReference getType Literal 0 ReferenceType ReferenceType 1 Object Object	1
MethodDeclaration Modifier BasicType isDebug ReturnStatement public boolean MemberReference debug	0
MethodDeclaration Modifier compileNewline FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression LocalVariableDeclaration StatementExpression public ReferenceType node ReferenceType context BasicType expr MethodInvocation MethodInvocation ReferenceType VariableDeclarator MethodInvocation Node BodyCompiler boolean context MethodInvocation lineNumber context MethodInvocation setLinePosition NewlineNode newlineNode Cast MethodInvocation MemberReference MemberReference compile node getPosition node getPosition ReferenceType MemberReference newlineNode getNextNode context expr NewlineNode node	1
MethodDeclaration Modifier ReferenceType op_minus FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType context BasicType other MethodInvocation ThreadContext long MemberReference MemberReference subtractFixnum context other	1
MethodDeclaration Modifier ReferenceType accept FormalParameter ReturnStatement public Object ReferenceType iVisitor MethodInvocation NodeVisitor iVisitor This visitConstNode	0
MethodDeclaration Modifier BasicType getZeroTerminatedByteArray FormalParameter ThrowStatement public byte BasicType offset MethodInvocation long ex	0
MethodDeclaration Modifier Annotation ReferenceType getDefaultExternal FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType recv MethodInvocation name Literal meta Literal compat MemberReference IRubyObject MethodInvocation getDefaultExternal "default_external" true CompatVersion RUBY1_9 recv getRuntime	0
MethodDeclaration Modifier Annotation ReferenceType read FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement LocalVariableDeclaration IfStatement LocalVariableDeclaration IfStatement ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context ReferenceType arg0 ReferenceType arg1 ReferenceType VariableDeclarator MethodInvocation BlockStatement BasicType VariableDeclarator BinaryOperation BlockStatement ReferenceType VariableDeclarator MethodInvocation BlockStatement BlockStatement MethodInvocation name Literal ThreadContext IRubyObject IRubyObject OpenFile myOpenFile MethodInvocation arg0 isNil TryStatement int length MethodInvocation < MemberReference Literal ThrowStatement RubyString str Literal arg1 isNil StatementExpression StatementExpression IfStatement MemberReference MemberReference MemberReference MemberReference readNotAll "read" getOpenFileChecked StatementExpression StatementExpression ReturnStatement CatchClause CatchClause CatchClause CatchClause CatchClause RubyNumeric MemberReference num2int length 0 MethodInvocation null Assignment MethodInvocation BinaryOperation BlockStatement context myOpenFile length str MethodInvocation MethodInvocation MethodInvocation CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement arg0 MethodInvocation getRuntime MemberReference MethodInvocation = str MemberReference modify == MemberReference Literal ReturnStatement myOpenFile MethodInvocation checkReadable myOpenFile setReadBuffered MemberReference readAll PipeException ex MethodInvocation InvalidValueException ex MethodInvocation EOFException ex MethodInvocation IOException ex MethodInvocation BadDescriptorException ex MethodInvocation BinaryOperation newArgumentError str arg1 convertToString length length 0 MemberReference getRuntime arg1 MethodInvocation getRuntime MethodInvocation getRuntime MethodInvocation getRuntime MethodInvocation getRuntime MethodInvocation getRuntime + BinaryOperation Literal str newErrnoEPIPEError newErrnoEINVALError newEOFError MemberReference newIOErrorFromException newErrnoEBADFError + Literal MemberReference " given" ex "negative length " length	1
MethodDeclaration Modifier ReferenceType listRoots ReturnStatement static public File ArrayCreator ReferenceType Literal File 0	0
MethodDeclaration Modifier ReferenceType case213_line860 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support Cast Literal Cast MethodInvocation getOperatorCallNode ReferenceType MemberReference "<" ReferenceType MemberReference getPosition Node ArraySelector yyVals Node ArraySelector yyVals BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference - 2 yyTop 0 yyTop	1
MethodDeclaration Modifier put FormalParameter FormalParameter FormalParameter FormalParameter IfStatement StatementExpression public ReferenceType runtime ReferenceType cache ReferenceType ptr ReferenceType value BinaryOperation BlockStatement IfStatement MethodInvocation Ruby StructLayout ReferenceType IRubyObject IRubyObject instanceof MemberReference ReferenceType StatementExpression BinaryOperation BlockStatement IfStatement cache This MemberReference putReference Storage value Pointer MethodInvocation instanceof MemberReference ReferenceType LocalVariableDeclaration IfStatement StatementExpression BinaryOperation BlockStatement IfStatement value MethodInvocation MemberReference getMemoryIO value Struct ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation instanceof MemberReference ReferenceType StatementExpression MethodInvocation BlockStatement IfStatement MethodInvocation Cast putMemoryIO ptr MemoryIO mem Cast instanceof MemberReference ReferenceType ThrowStatement MethodInvocation MemberReference getMemoryIO value RubyInteger MethodInvocation value Literal respondsTo LocalVariableDeclaration IfStatement MethodInvocation BlockStatement BlockStatement MemberReference getOffset ReferenceType MemberReference ReferenceType MemberReference mem DirectMemoryIO MethodInvocation MethodInvocation MemberReference putMemoryIO ptr MethodInvocation MemberReference getMemoryIO "to_ptr" ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement value isNil StatementExpression ThrowStatement ptr Pointer value Struct value runtime Literal newArgumentError MemberReference getOffset mem MemberReference MethodInvocation putAddress ptr IRubyObject addr MethodInvocation instanceof MemberReference ReferenceType StatementExpression ThrowStatement MethodInvocation MethodInvocation "Struct memory not backed by a native pointer" ptr offset Util MemberReference int64Value value MethodInvocation Literal callMethod addr Pointer MethodInvocation MethodInvocation MethodInvocation MemberReference getMemoryIO runtime Literal newArgumentError ptr runtime getCurrentContext "to_ptr" MethodInvocation MemberReference getMemoryIO runtime Literal newArgumentError MemberReference Literal putAddress ptr "Invalid pointer value" MemberReference Cast putMemoryIO ptr "Invalid pointer value" offset 0L offset ReferenceType MemberReference Pointer addr	0
MethodDeclaration Modifier ReferenceType childNodes ReturnStatement public List TypeArgument MemberReference ReferenceType EMPTY_LIST Node	0
MethodDeclaration Modifier Annotation ReferenceType op_plus FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType other ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation name Literal backtrace Literal ThreadContext IRubyObject JavaClass arrayClass MethodInvocation instanceof MemberReference ReferenceType LocalVariableDeclaration IfStatement arrayClass MemberReference MethodInvocation MemberReference concatArrays "+" true JavaClass MethodInvocation MethodInvocation get other ArrayJavaProxy ReferenceType VariableDeclarator MethodInvocation BlockStatement context getJavaArray other context getRuntime MethodInvocation getJavaArray JavaArray otherArray Cast MethodInvocation MethodInvocation getJavaArray ReturnStatement getComponentType ReferenceType MemberReference getComponentType MethodInvocation isAssignableFrom MethodInvocation ArrayJavaProxy other otherArray getComponentType arrayClass MemberReference MethodInvocation MemberReference concatArrays context getJavaArray otherArray	1
MethodDeclaration Modifier testFormatPaddingBlank LocalVariableDeclaration StatementExpression public ReferenceType VariableDeclarator MethodInvocation TimeOutputFormatter formatter MethodInvocation Literal MethodInvocation assertEquals TimeOutputFormatter Literal getFormatter "   up" formatter Literal format "%_5H" "up"	0
MethodDeclaration Modifier compileAssignment FormalParameter FormalParameter FormalParameter SwitchStatement public ReferenceType node ReferenceType context BasicType expr MethodInvocation SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase Node BodyCompiler boolean node getNodeType ATTRASSIGNNODE StatementExpression BreakStatement DASGNNODE LocalVariableDeclaration StatementExpression BreakStatement CLASSVARASGNNODE StatementExpression BreakStatement CLASSVARDECLNODE StatementExpression BreakStatement CONSTDECLNODE StatementExpression BreakStatement GLOBALASGNNODE StatementExpression BreakStatement INSTASGNNODE StatementExpression BreakStatement LOCALASGNNODE LocalVariableDeclaration StatementExpression BreakStatement MULTIPLEASGNNODE StatementExpression BreakStatement ZEROARGNODE ThrowStatement ThrowStatement MethodInvocation ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation ReferenceType VariableDeclarator MethodInvocation MethodInvocation ClassCreator ClassCreator MemberReference MemberReference MemberReference compileAttrAssignAssignment DAsgnNode dasgnNode Cast context MethodInvocation getVariableCompiler MemberReference MemberReference MemberReference compileClassVarAsgnAssignment MemberReference MemberReference MemberReference compileClassVarDeclAssignment MemberReference MemberReference MemberReference compileConstDeclAssignment MemberReference MemberReference MemberReference compileGlobalAsgnAssignment MemberReference MemberReference MemberReference compileInstAsgnAssignment LocalAsgnNode localAsgnNode Cast context MethodInvocation getVariableCompiler MemberReference MemberReference MemberReference compileMultipleAsgnAssignment ReferenceType BinaryOperation ReferenceType BinaryOperation node context expr ReferenceType MemberReference MethodInvocation MethodInvocation MemberReference assignLocalVariable node context expr node context expr node context expr node context expr node context expr ReferenceType MemberReference MethodInvocation MethodInvocation MemberReference assignLocalVariable node context expr NotCompilableException + Literal MemberReference NotCompilableException + Literal MemberReference DAsgnNode node dasgnNode getIndex dasgnNode getDepth expr LocalAsgnNode node localAsgnNode getIndex localAsgnNode getDepth expr "Shouldn't get here; zeroarg does not do assignment: " node "Can't compile assignment node: " node	0
MethodDeclaration Modifier populateFields FormalParameter FormalParameter RaiseException SecurityException LocalVariableDeclaration LocalVariableDeclaration ForStatement private static ReferenceType rubyMod Modifier ReferenceType cls ReferenceType VariableDeclarator ReferenceType VariableDeclarator EnhancedForControl BlockStatement RubyModule final Class Ruby ruby MethodInvocation Field fields MethodInvocation VariableDeclaration MemberReference IfStatement rubyMod getRuntime cls getDeclaredFields ReferenceType VariableDeclarator fields BinaryOperation BlockStatement Field field && BinaryOperation MethodInvocation LocalVariableDeclaration TryStatement StatementExpression && MethodInvocation MethodInvocation IdUtil MethodInvocation isConstant ReferenceType VariableDeclarator StatementExpression CatchClause MethodInvocation Modifier MethodInvocation isStatic Modifier MethodInvocation isPublic field getName Object value Literal Assignment CatchClauseParameter ThrowStatement rubyMod MethodInvocation ClassCreator defineConstant field getModifiers field getModifiers null MemberReference MethodInvocation = Exception e MethodInvocation field getName ReferenceType Cast MemberReference value field Literal get ruby BinaryOperation newTypeError JavaObjectWrapper ReferenceType MethodInvocation value null + BinaryOperation MethodInvocation RubyClass MemberReference MethodInvocation getMirrorForClass + BinaryOperation Literal MethodInvocation ci ruby value getClass + BinaryOperation MethodInvocation " using " field getType + BinaryOperation Literal field getName + Literal MethodInvocation "::" "Could not access field " cls getCanonicalName	1
MethodDeclaration Modifier branch FormalParameter StatementExpression public ReferenceType context MethodInvocation BodyCompiler context Literal pushString "instance-variable"	0
MethodDeclaration Modifier ReferenceType accept FormalParameter ReturnStatement public Object ReferenceType iVisitor MethodInvocation NodeVisitor iVisitor This visitAndNode	0
MethodDeclaration Modifier ReferenceType case11_line336 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference ClassCreator = yyVal yyVal ReferenceType MethodInvocation Cast Cast VAliasNode Cast getPosition ReferenceType Cast ReferenceType Cast ReferenceType MemberReference String ReferenceType MemberReference String ReferenceType MemberReference Token ArraySelector yyVals Token ArraySelector yyVals Token ArraySelector yyVals BinaryOperation BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference + Literal MemberReference - 2 yyTop - 1 yyTop 0 yyTop	1
MethodDeclaration Modifier BasicType packedContains FormalParameter LocalVariableDeclaration LocalVariableDeclaration ForStatement ReturnStatement private boolean ReferenceType name ReferenceType VariableDeclarator BasicType VariableDeclarator ForControl BlockStatement Literal String Object table MemberReference int hash MethodInvocation VariableDeclaration BinaryOperation MemberReference LocalVariableDeclaration IfStatement false packedVTable name hashCode BasicType VariableDeclarator < MemberReference MemberReference ++ i ReferenceType VariableDeclarator BinaryOperation ReturnStatement int i Literal i vTableSize String n Cast && BinaryOperation MethodInvocation Literal 0 ReferenceType MemberReference == MethodInvocation MemberReference name MemberReference equals true String ArraySelector table n hashCode hash n MemberReference i	1
MethodDeclaration Modifier Annotation ReferenceType each_pair19 FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject Modifier ReferenceType context Modifier ReferenceType block TernaryExpression name Literal frame Literal final ThreadContext final Block MethodInvocation MethodInvocation MethodInvocation "each_pair" true block isGiven MemberReference MemberReference each_pair MethodInvocation This Literal enumeratorize context block context getRuntime "each_pair"	1
MethodDeclaration Modifier BasicType hashCode LocalVariableDeclaration LocalVariableDeclaration WhileStatement ReturnStatement public int BasicType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation BlockStatement MemberReference int code Literal Iterator it MethodInvocation it hasNext StatementExpression code 0 entryIterator Assignment MemberReference MethodInvocation += code it MethodInvocation next hashCode	0
MethodDeclaration Modifier BasicType isTracing ReturnStatement public boolean MemberReference tracing	0
MethodDeclaration Modifier Annotation ReferenceType setsockopt FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration TryStatement ReturnStatement public JRubyMethod IRubyObject ReferenceType context ReferenceType lev ReferenceType optname ReferenceType val BasicType VariableDeclarator BasicType VariableDeclarator SwitchStatement CatchClause MethodInvocation ThreadContext IRubyObject IRubyObject IRubyObject int level MethodInvocation int opt MethodInvocation MethodInvocation SwitchStatementCase SwitchStatementCase CatchClauseParameter ThrowStatement context MethodInvocation getRuntime RubyNumeric MemberReference fix2int RubyNumeric MemberReference fix2int SocketLevel MemberReference valueOf SOL_IP SOL_SOCKET SOL_TCP SOL_UDP SwitchStatement BreakStatement IfStatement IOException e MethodInvocation Literal newFixnum lev optname level MethodInvocation SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase BinaryOperation BlockStatement BlockStatement context MethodInvocation getRuntime 0 SocketOption MemberReference valueOf SO_BROADCAST StatementExpression BreakStatement SO_KEEPALIVE StatementExpression BreakStatement SO_LINGER StatementExpression BreakStatement SO_OOBINLINE StatementExpression BreakStatement SO_RCVBUF StatementExpression BreakStatement SO_REUSEADDR StatementExpression BreakStatement SO_SNDBUF StatementExpression BreakStatement SO_RCVTIMEO SO_SNDTIMEO StatementExpression BreakStatement SO_TYPE SO_RCVLOWAT SO_SNDLOWAT SO_DEBUG SO_ERROR SO_DONTROUTE SO_TIMESTAMP BreakStatement IfStatement && BinaryOperation BinaryOperation StatementExpression ThrowStatement newErrnoENOPROTOOPTError opt MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation BinaryOperation BlockStatement BlockStatement == MethodInvocation MemberReference == MethodInvocation MemberReference MethodInvocation MethodInvocation MemberReference setBroadcast MemberReference setKeepAlive MemberReference setLinger MemberReference setOOBInline MemberReference setRcvBuf MemberReference setReuseAddr MemberReference setSndBuf MemberReference setTimeout && BinaryOperation BinaryOperation StatementExpression ThrowStatement IPPROTO_TCP value level TCP_NODELAY value opt MemberReference setTcpNoDelay context MethodInvocation getRuntime val val val val val val val val == MethodInvocation MemberReference == MethodInvocation MemberReference MethodInvocation MethodInvocation val newErrnoENOPROTOOPTError IPPROTO_TCP value level TCP_NODELAY value opt MemberReference setTcpNoDelay context MethodInvocation getRuntime val newErrnoENOPROTOOPTError	0
MethodDeclaration Modifier ReferenceType regexpDescription FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement private static ByteList ReferenceType runtime ReferenceType bytes ReferenceType enc BasicType options MethodInvocation Ruby ByteList Encoding int MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference regexpDescription runtime bytes bytes bytes begin bytes realSize enc options	0
MethodDeclaration Modifier ReferenceType suite Exception ReturnStatement static public Test ClassCreator ReferenceType MemberReference TestUnitTestSuite TEST_INDEX	0
MethodDeclaration Modifier encodeFloatBigEndian FormalParameter FormalParameter StatementExpression private static ReferenceType result BasicType f MethodInvocation ByteList float MemberReference MethodInvocation encodeIntBigEndian result Float MemberReference floatToRawIntBits f	0
MethodDeclaration Modifier ReferenceType convert FormalParameter FormalParameter ReturnStatement public Object ReferenceType context ReferenceType rubyObject MethodInvocation ThreadContext IRubyObject rubyObject ClassReference toJava ReferenceType Float	0
MethodDeclaration Modifier BasicType getLine ReturnStatement public int MemberReference line	0
MethodDeclaration Modifier Annotation ReferenceType op_aref FormalParameter FormalParameter LocalVariableDeclaration IfStatement IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType arg ReferenceType VariableDeclarator BinaryOperation BlockStatement BinaryOperation BlockStatement IfStatement MethodInvocation name ElementArrayValue reads MemberReference writes MemberReference compat MemberReference ThreadContext IRubyObject Ruby runtime MethodInvocation instanceof MemberReference ReferenceType ReturnStatement instanceof MemberReference ReferenceType ReturnStatement BinaryOperation BlockStatement IfStatement MemberReference MethodInvocation op_aref Literal Literal BACKREF BACKREF CompatVersion RUBY1_8 context getRuntime arg RubyFixnum MethodInvocation arg RubyRegexp MethodInvocation instanceof MemberReference ReferenceType LocalVariableDeclaration ReturnStatement BinaryOperation BlockStatement runtime RubyFixnum MemberReference num2int "[]" "slice" MemberReference MethodInvocation op_aref MemberReference MemberReference Cast Literal subpat arg RubyString ReferenceType VariableDeclarator TernaryExpression instanceof MemberReference ReferenceType LocalVariableDeclaration ReturnStatement arg runtime RubyFixnum Cast fix2int runtime context ReferenceType MemberReference 0 RubyString str Cast BinaryOperation MethodInvocation MethodInvocation arg RubyRange BasicType VariableDeclarator TernaryExpression ReferenceType MemberReference RubyRegexp arg ReferenceType MemberReference != MethodInvocation Literal str MemberReference strDup runtime getNil int begLen Cast BinaryOperation MethodInvocation MethodInvocation RubyFixnum arg RubyString arg value MemberReference indexOf - 1 runtime ReferenceType MemberReference == MemberReference Literal runtime getNil MemberReference MemberReference MemberReference substr str value RubyRange arg begLen null runtime ArraySelector begLen ArraySelector begLen Literal Literal 0 1	1
MethodDeclaration Modifier ReferenceType case364_line1369 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference Literal = yyVal yyVal null	1
MethodDeclaration Modifier ReferenceType newArity FormalParameter LocalVariableDeclaration SynchronizedStatement ReturnStatement private static Arity BasicType value ReferenceType VariableDeclarator MemberReference StatementExpression IfStatement MemberReference int Arity result arities Assignment BinaryOperation BlockStatement result MemberReference MethodInvocation = == MemberReference Literal StatementExpression StatementExpression result arities MemberReference get result null Assignment MethodInvocation value MemberReference ClassCreator = arities MemberReference MemberReference put result ReferenceType MemberReference value result Arity value	1
MethodDeclaration Modifier postScopedBody StatementExpression public MethodInvocation popScope	0
MethodDeclaration Modifier Annotation ReferenceType sysaccept ReturnStatement public Deprecated IRubyObject MethodInvocation MethodInvocation accept MethodInvocation getRuntime getCurrentContext	1
MethodDeclaration Modifier setSelf FormalParameter StatementExpression public ReferenceType self Assignment IRubyObject This MemberReference = MemberReference self self	0
MethodDeclaration Modifier ReferenceType case321_line1231 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference ClassCreator = yyVal yyVal ReferenceType MethodInvocation MethodInvocation Cast Cast IfNode Cast getPosition support Cast getConditionNode ReferenceType MemberReference ReferenceType MemberReference ReferenceType MemberReference ReferenceType MemberReference Node ArraySelector yyVals Node ArraySelector yyVals Token ArraySelector yyVals Node ArraySelector yyVals BinaryOperation BinaryOperation BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference + Literal MemberReference + Literal MemberReference - 1 yyTop 0 yyTop - 4 yyTop - 3 yyTop	1
MethodDeclaration Modifier BasicType getPriority ReturnStatement public int Literal 1	0
MethodDeclaration Modifier Annotation ReferenceType fdiv FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType other MethodInvocation name Literal compat MemberReference ThreadContext IRubyObject RuntimeHelpers MemberReference This Literal MemberReference invoke "fdiv" CompatVersion RUBY1_9 context MethodInvocation "/" other convertToFloat	0
MethodDeclaration Modifier Annotation ReferenceType sync_set FormalParameter StatementExpression StatementExpression ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType newSync MethodInvocation MethodInvocation This name Literal required Literal IRubyObject MethodInvocation getOpenFileChecked MethodInvocation MethodInvocation getOpenFileChecked "sync=" 1 MethodInvocation setSync getMainStream MethodInvocation setSync newSync isTrue newSync isTrue	1
MethodDeclaration Modifier Annotation ReferenceType join FormalParameter FormalParameter LocalVariableDeclaration IfStatement LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration ForStatement LocalVariableDeclaration IfStatement LocalVariableDeclaration ForStatement LocalVariableDeclaration IfStatement IfStatement ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context ReferenceType sep Modifier ReferenceType VariableDeclarator BinaryOperation ReturnStatement BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator ForControl BlockStatement ReferenceType VariableDeclarator MethodInvocation BlockStatement ReferenceType VariableDeclarator ForControl BlockStatement ReferenceType VariableDeclarator MemberReference StatementExpression MemberReference StatementExpression MemberReference name Literal ThreadContext IRubyObject final Ruby runtime MethodInvocation == MemberReference Literal MethodInvocation boolean taint BinaryOperation boolean untrusted BinaryOperation int len Literal VariableDeclaration BinaryOperation MemberReference LocalVariableDeclaration TryStatement LocalVariableDeclaration StatementExpression ByteList sepBytes Literal ! sep isNil StatementExpression StatementExpression ByteList buf ClassCreator VariableDeclaration BinaryOperation MemberReference LocalVariableDeclaration TryStatement IfStatement IfStatement StatementExpression IfStatement IfStatement RubyString result MethodInvocation taint MethodInvocation untrusted MethodInvocation result "join" context getRuntime realLength 0 RubyString MemberReference newEmptyString || MethodInvocation MethodInvocation || MethodInvocation MethodInvocation 1 BasicType VariableDeclarator < MemberReference BinaryOperation ++ i ReferenceType VariableDeclarator StatementExpression IfStatement CatchClause ReferenceType VariableDeclarator Assignment null Assignment Assignment ReferenceType MemberReference BasicType VariableDeclarator < MemberReference MemberReference ++ i ReferenceType VariableDeclarator StatementExpression CatchClause BinaryOperation BlockStatement BinaryOperation StatementExpression MethodInvocation MethodInvocation StatementExpression MethodInvocation StatementExpression runtime MemberReference newString result Literal setTaint result MemberReference untrust runtime isTaint sep isTaint isUntrusted sep isUntrusted int i MemberReference i + MemberReference MemberReference IRubyObject value Assignment BinaryOperation BlockStatement CatchClauseParameter StatementExpression ReturnStatement IRubyObject tmp MethodInvocation MemberReference TernaryExpression += MemberReference MethodInvocation = MemberReference BinaryOperation += ByteList len int i Literal i realLength IRubyObject tmp Assignment CatchClauseParameter StatementExpression ReturnStatement instanceof MemberReference ReferenceType IfStatement && BinaryOperation BinaryOperation MethodInvocation buf MethodInvocation append tmp isTaint Assignment tmp isUntrusted Assignment buf true context begin begin realLength MemberReference MemberReference = && MethodInvocation MethodInvocation ThrowStatement ArrayIndexOutOfBoundsException e MethodInvocation MethodInvocation value checkStringType len MethodInvocation Literal Cast sepBytes sep MethodInvocation convertToString len * MemberReference BinaryOperation 0 MemberReference MemberReference = ArrayIndexOutOfBoundsException e MethodInvocation MethodInvocation tmp RubyString BinaryOperation BlockStatement BlockStatement > MemberReference Literal != MemberReference Literal buf MemberReference append tmp MethodInvocation asString MemberReference Literal = MemberReference Literal = value ArraySelector values runtime is1_9 MemberReference This MemberReference equalInternal MethodInvocation concurrentModification RubyString MemberReference newEmptyString tmp isNil 10 ReferenceType MemberReference getByteList sepBytes realSize - MemberReference Literal tmp ArraySelector values concurrentModification RubyString MemberReference newEmptyString instanceof MemberReference ReferenceType IfStatement StatementExpression i 0 sepBytes null sepBytes getByteList taint true untrusted true MemberReference context value runtime Literal newArgumentError runtime RubyString tmp realLength 1 BinaryOperation runtime tmp RubyArray BinaryOperation BlockStatement BlockStatement Assignment i "recursive array join" + MemberReference MemberReference || BinaryOperation MethodInvocation StatementExpression StatementExpression MemberReference MethodInvocation = begin i == MemberReference This runtime MemberReference isInspecting Assignment Assignment tmp RubyString MemberReference MemberReference objAsString tmp tmp MemberReference MethodInvocation = MemberReference MethodInvocation = context tmp tmp runtime Literal newString tmp MemberReference Cast MemberReference inspectJoin "[...]" context ReferenceType MemberReference sep RubyArray tmp	1
MethodDeclaration Modifier if_icmpgt FormalParameter StatementExpression public ReferenceType arg0 MethodInvocation Label MethodInvocation getMethodVisitor MemberReference MemberReference visitJumpInsn IF_ICMPGT arg0	1
MethodDeclaration Modifier BasicType twosComplementToUnsignedBytes FormalParameter FormalParameter FormalParameter IfStatement LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration ForStatement ReturnStatement final static public byte BasicType in BasicType shift BasicType upper BinaryOperation BlockStatement BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator ForControl BlockStatement MemberReference byte int boolean || BinaryOperation BinaryOperation ThrowStatement int ilen MemberReference int olen BinaryOperation byte out ArrayCreator int mask BinaryOperation byte digits TernaryExpression int bitbuf Literal int bitcnt Literal VariableDeclaration BinaryOperation IfStatement StatementExpression StatementExpression StatementExpression out < MemberReference Literal > MemberReference Literal ClassCreator in length / BinaryOperation MemberReference BasicType MemberReference - BinaryOperation Literal MemberReference MemberReference MemberReference 0 0 BasicType VariableDeclarator VariableDeclarator >= MemberReference Literal BinaryOperation BlockStatement Assignment Assignment Assignment shift 1 shift 4 ReferenceType Literal - BinaryOperation Literal shift byte olen << Literal MemberReference 1 upper UPPER_DIGITS LOWER_DIGITS int i MemberReference o MemberReference -- o 0 < MemberReference MemberReference StatementExpression StatementExpression MemberReference MemberReference = MemberReference MemberReference >>= MemberReference MemberReference -= IllegalArgumentException "shift value must be 1-4" + BinaryOperation MemberReference 1 1 shift ilen olen bitcnt shift Assignment Assignment ArraySelector out ArraySelector digits bitbuf shift bitcnt shift * MemberReference Literal shift MemberReference BinaryOperation |= MemberReference Literal += MemberReference BinaryOperation ilen 8 bitbuf << BinaryOperation MemberReference bitcnt 8 o & MemberReference MemberReference & Cast Cast bitcnt bitbuf mask BasicType MemberReference BasicType Literal int ArraySelector in int 0xff MemberReference -- i	1
MethodDeclaration Modifier ReferenceType create FormalParameter StatementExpression ReturnStatement public LoadService ReferenceType runtime Assignment ClassCreator Ruby MemberReference Literal = ReferenceType MemberReference ArraySelector called true NullLoadService runtime Literal 0	0
MethodDeclaration Modifier Annotation BasicType getDoubleValue ReturnStatement public Override double MemberReference value	0
MethodDeclaration Modifier ReferenceType finvoke FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement public IRubyObject ReferenceType context ReferenceType self ReferenceType name ReferenceType arg0 ReferenceType arg1 ReferenceType VariableDeclarator MethodInvocation BlockStatement MethodInvocation ThreadContext IRubyObject String IRubyObject IRubyObject DynamicMethod method MethodInvocation MemberReference shouldCallMethodMissing ReturnStatement method MemberReference MemberReference This MemberReference MemberReference MemberReference call MemberReference searchMethod method MethodInvocation context self name arg0 arg1 name RuntimeHelpers MemberReference MemberReference MethodInvocation MemberReference MemberReference MemberReference MemberReference MemberReference callMethodMissing context self method getVisibility name CallType FUNCTIONAL arg0 arg1 Block NULL_BLOCK	0
MethodDeclaration Modifier ReferenceType getString1 FormalParameter ReturnStatement final public RubyString ReferenceType runtime MethodInvocation Ruby runtimeCache MemberReference Literal getString runtime 1	0
MethodDeclaration Modifier Annotation ReferenceType flatten FormalParameter LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MemberReference name Literal ThreadContext Ruby runtime MethodInvocation RubyArray result ClassCreator MemberReference Literal MemberReference flatten result This infectBy result "flatten" context getRuntime ReferenceType MemberReference MethodInvocation MemberReference context - 1 result RubyArray runtime getMetaClass realLength	0
MethodDeclaration Modifier setPosition FormalParameter StatementExpression public ReferenceType position Assignment ISourcePosition This MemberReference = MemberReference position position	0
MethodDeclaration Modifier ReferenceType callMethodMissing FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement private IRubyObject ReferenceType context ReferenceType self ReferenceType method ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 MethodInvocation ThreadContext IRubyObject DynamicMethod IRubyObject IRubyObject IRubyObject RuntimeHelpers MethodInvocation MemberReference MemberReference MethodInvocation MemberReference MemberReference selectMethodMissing MemberReference MemberReference MethodInvocation MemberReference MemberReference MemberReference MemberReference MemberReference call context self method getVisibility methodName callType context self self getMetaClass methodName arg0 arg1 arg2 Block NULL_BLOCK	0
MethodDeclaration Modifier Annotation ReferenceType find_index FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement LocalVariableDeclaration TryStatement ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType self Modifier ReferenceType block Modifier ReferenceType VariableDeclarator MethodInvocation ReturnStatement Modifier BasicType VariableDeclarator StatementExpression CatchClause MethodInvocation name Literal frame Literal ThreadContext IRubyObject final Block final Ruby runtime MethodInvocation ! block isGiven MethodInvocation final long result ArrayCreator MethodInvocation CatchClauseParameter ReturnStatement runtime getNil "find_index" true context getRuntime MemberReference MemberReference Literal enumeratorize BasicType ArrayInitializer MemberReference MemberReference MemberReference ClassCreator callEach JumpException.SpecialJump sj MethodInvocation runtime self "find_index" long Literal runtime context self ReferenceType MethodDeclaration RubyFixnum MemberReference MemberReference newFixnum 0 BlockCallback Modifier ReferenceType call FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement StatementExpression ReturnStatement runtime ArraySelector result public IRubyObject ReferenceType ctx ReferenceType largs ReferenceType blk ReferenceType VariableDeclarator MethodInvocation ThrowStatement MemberReference MethodInvocation Literal ThreadContext IRubyObject Block IRubyObject larg MethodInvocation block MethodInvocation MemberReference MemberReference yield MemberReference ++ ArraySelector result runtime getNil 0 MemberReference MemberReference checkArgs isTrue ctx larg JumpException SPECIAL_JUMP Literal runtime largs 0	1
MethodDeclaration Modifier ReferenceType getArgumentDefinition FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter IfStatement IfStatement ReturnStatement static public String ReferenceType runtime ReferenceType context ReferenceType node ReferenceType type ReferenceType self ReferenceType block BinaryOperation ReturnStatement BinaryOperation BlockStatement IfStatement MemberReference Ruby ThreadContext Node String IRubyObject Block == MemberReference Literal MemberReference instanceof MemberReference ReferenceType LocalVariableDeclaration LocalVariableDeclaration ForStatement BinaryOperation BlockStatement type node null type node ArrayNode ReferenceType VariableDeclarator BasicType VariableDeclarator ForControl BlockStatement == MethodInvocation Literal ReturnStatement ArrayNode list Cast int size MethodInvocation VariableDeclaration BinaryOperation MemberReference IfStatement node MemberReference MemberReference MemberReference MemberReference definition null Literal ReferenceType MemberReference list size BasicType VariableDeclarator < MemberReference MemberReference ++ i BinaryOperation ReturnStatement runtime context self block null ArrayNode node int i Literal i size == MethodInvocation Literal Literal 0 list MethodInvocation MemberReference get null null MemberReference MemberReference MemberReference MemberReference definition i runtime context self block	1
MethodDeclaration Modifier Annotation ReferenceType bytes FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject Modifier ReferenceType context ReferenceType recv ReferenceType args Modifier ReferenceType block TernaryExpression name Literal optional Literal frame Literal final ThreadContext IRubyObject IRubyObject final Block MethodInvocation MethodInvocation MethodInvocation "bytes" 1 true block isGiven MemberReference MemberReference MemberReference each_byte MethodInvocation MemberReference Literal enumeratorize context recv block context getRuntime recv "bytes"	0
MethodDeclaration Modifier put FormalParameter FormalParameter FormalParameter FormalParameter ThrowStatement final public BasicType offset BasicType src BasicType off BasicType len MethodInvocation long long int int ex	0
MethodDeclaration Modifier ReferenceType createId FormalParameter StatementExpression StatementExpression LocalVariableDeclaration StatementExpression StatementExpression ReturnStatement private Long ReferenceType object MethodInvocation Assignment ReferenceType VariableDeclarator MethodInvocation MethodInvocation MemberReference IRubyObject cleanIdentities MemberReference Literal += Long longMaxId ClassCreator identities MemberReference ClassCreator put identitiesByObject MemberReference MemberReference put longMaxId maxId 2 ReferenceType MemberReference longMaxId ReferenceType MemberReference MemberReference MemberReference object longMaxId Long maxId IdReference object maxId deadIdentityReferences	1
MethodDeclaration Modifier ReferenceType yieldSpecific FormalParameter ReturnStatement public IRubyObject ReferenceType context MethodInvocation ThreadContext body MemberReference MemberReference MemberReference yieldSpecific context binding type	0
MethodDeclaration Modifier putArrayOfUnsigned8 FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration ForStatement StatementExpression final static public ReferenceType runtime ReferenceType io BasicType offset ReferenceType ary BasicType VariableDeclarator ForControl BlockStatement MethodInvocation Ruby MemoryIO long RubyArray byte array ArrayCreator VariableDeclaration BinaryOperation MemberReference StatementExpression io MemberReference MemberReference Literal MemberReference put BasicType MethodInvocation BasicType VariableDeclarator < MemberReference MemberReference ++ i Assignment offset array 0 array length byte ary size int i Literal i array length MemberReference Cast = 0 ArraySelector array BasicType MethodInvocation MemberReference byte Util MethodInvocation uint8Value i ary MemberReference entry i	1
MethodDeclaration Modifier unread FormalParameter IfStatement StatementExpression IfStatement StatementExpression StatementExpression public BasicType c BinaryOperation ReturnStatement MethodInvocation BinaryOperation StatementExpression Assignment MethodInvocation int == MemberReference MemberReference retreat == MemberReference Literal MemberReference MemberReference Cast = growBuf c RubyYaccLexer EOF c '\n' -- line ArraySelector buf BasicType MemberReference MemberReference char c ++ bufLength	1
MethodDeclaration Modifier BasicType isStaticCallTarget ReturnStatement public boolean Literal true	0
MethodDeclaration Modifier ReferenceType checkData FormalParameter IfStatement LocalVariableDeclaration IfStatement ThrowStatement final static public IRubyObject ReferenceType obj BinaryOperation BlockStatement ReferenceType VariableDeclarator MethodInvocation BlockStatement IfStatement MethodInvocation IRubyObject instanceof MemberReference ReferenceType ReturnStatement String type obj isNil StatementExpression BinaryOperation BlockStatement BlockStatement obj MethodInvocation getRuntime obj org ReferenceType MemberReference Assignment instanceof MemberReference ReferenceType StatementExpression StatementExpression BinaryOperation newTypeError jruby ReferenceType obj MemberReference Literal = obj RubyBoolean Assignment Assignment + BinaryOperation Literal runtime ReferenceType type "nil" MemberReference TernaryExpression = MemberReference MethodInvocation = + Literal MemberReference " (expected Data)" marshal ReferenceType type MethodInvocation Literal Literal type obj MethodInvocation MethodInvocation getMetaClass "wrong argument type " type DataType obj isTrue "true" "false" getRealClass getName	0
MethodDeclaration Modifier ReferenceType getArity ReturnStatement public Arity MethodInvocation Arity optional	0
MethodDeclaration Modifier ReferenceType getNodeName LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration ReturnStatement protected String ReferenceType VariableDeclarator BasicType VariableDeclarator ReferenceType VariableDeclarator MemberReference String name MethodInvocation int i MethodInvocation String nodeType MethodInvocation nodeType MethodInvocation getClass name Literal lastIndexOf name BinaryOperation substring getName '.' + MemberReference Literal i 1	1
MethodDeclaration Modifier ReferenceType method ReturnStatement public GeneratorAdapter MethodInvocation MemberReference methodData method	0
MethodDeclaration Modifier Annotation ReferenceType intern IfStatement ForStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair RubySymbol BinaryOperation ThrowStatement ForControl BlockStatement MethodInvocation name ElementArrayValue compat MemberReference == MemberReference Literal MethodInvocation VariableDeclaration BinaryOperation MemberReference IfStatement to_sym Literal Literal CompatVersion RUBY1_8 value realSize 0 MethodInvocation getRuntime BasicType VariableDeclarator < MemberReference MemberReference ++ i BinaryOperation ThrowStatement "to_sym" "intern" Literal newArgumentError int i Literal i value realSize == MemberReference Literal MethodInvocation "interning empty string" 0 value ArraySelector bytes 0 MethodInvocation getRuntime BinaryOperation Literal newArgumentError + MemberReference MemberReference "symbol string may not contain '\\0'" value begin i	1
MethodDeclaration Modifier BasicType swallow FormalParameter IOException BadDescriptorException LocalVariableDeclaration LocalVariableDeclaration DoStatement ReturnStatement protected boolean BasicType term ReferenceType VariableDeclarator BasicType VariableDeclarator BinaryOperation BlockStatement Literal int Stream readStream MethodInvocation int c != MemberReference Literal StatementExpression TryStatement IfStatement false openFile getMainStream c - 1 MethodInvocation StatementExpression CatchClause BinaryOperation BlockStatement MemberReference readCheck Assignment CatchClauseParameter StatementExpression != MemberReference MemberReference StatementExpression ReturnStatement readStream MemberReference MethodInvocation = EOFException e Assignment c term MethodInvocation Literal c readStream fgetc MemberReference Literal = readStream MemberReference ungetc true c - 1 c	0
MethodDeclaration Modifier ReferenceType getValue ReturnStatement public Node MemberReference node	0
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration TryStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 ReferenceType arg3 ReferenceType arg4 ReferenceType arg5 ReferenceType arg6 ReferenceType block ReferenceType VariableDeclarator StatementExpression StatementExpression StatementExpression ReturnStatement CatchClause CatchClause StatementExpression ThreadContext IRubyObject RubyModule String IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject Block Ruby runtime MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation CatchClauseParameter ReturnStatement CatchClauseParameter ReturnStatement MethodInvocation context getRuntime MemberReference MemberReference MemberReference MemberReference MemberReference pre argsNode MemberReference Literal checkArgCount argsNode MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference prepare body MemberReference MemberReference MemberReference MemberReference interpret JumpException.ReturnJump rj MethodInvocation JumpException.RedoJump rj MethodInvocation MemberReference MemberReference MemberReference post context name self block runtime runtime 7 context runtime self arg0 arg1 arg2 arg3 arg4 arg5 arg6 block runtime context self block MemberReference MemberReference handleReturn MemberReference handleRedo runtime context name context rj runtime	0
MethodDeclaration Modifier Annotation BasicType isKindOf FormalParameter FormalParameter ReturnStatement public Override boolean ReferenceType obj ReferenceType type BinaryOperation IRubyObject RubyModule instanceof MemberReference ReferenceType obj RubyComplex	0
MethodDeclaration Modifier ReferenceType getNodeType ReturnStatement public NodeType MemberReference NodeType COLON3NODE	0
MethodDeclaration Modifier Annotation ReferenceType op_aref FormalParameter FormalParameter FormalParameter IfStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType self ReferenceType args BinaryOperation BlockStatement BlockStatement name Literal rest Literal backtrace Literal ThreadContext IRubyObject IRubyObject == MemberReference Literal ReturnStatement LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression ReturnStatement "[]" true true args length 0 MethodInvocation ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation Assignment MethodInvocation JavaUtilities MemberReference Cast get_proxy_class RubyClass arrayJavaProxyCreator MethodInvocation IRubyObject newArgs ArrayCreator System MemberReference Literal MemberReference Literal MemberReference arraycopy MemberReference MethodInvocation = RuntimeHelpers MemberReference MemberReference Literal MemberReference invoke self ReferenceType MethodInvocation context MethodInvocation getRuntime ReferenceType BinaryOperation args 0 newArgs 1 args length ArraySelector newArgs RuntimeHelpers MemberReference MemberReference Literal invoke context arrayJavaProxyCreator "new" newArgs JavaClass RuntimeHelpers MemberReference MemberReference Literal invoke Literal getClass IRubyObject + MemberReference Literal Literal context self "java_class" context self "java_class" "ArrayJavaProxyCreator" args length 1 0	1
MethodDeclaration Modifier Annotation ReferenceType connect FormalParameter FormalParameter FormalParameter TryStatement public JRubyMethod IRubyObject ReferenceType context ReferenceType host ReferenceType port LocalVariableDeclaration StatementExpression StatementExpression ReturnStatement CatchClause CatchClause ThreadContext IRubyObject IRubyObject ReferenceType VariableDeclarator Assignment Cast MethodInvocation CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement InetSocketAddress addr MemberReference ClassCreator = ReferenceType This RubyFixnum MethodInvocation zero UnknownHostException e MethodInvocation IOException e MethodInvocation addr ReferenceType MethodInvocation MethodInvocation DatagramChannel MethodInvocation context getRuntime MethodInvocation Literal sockerr MethodInvocation Literal sockerr InetSocketAddress InetAddress MethodInvocation getByName RubyNumeric MemberReference fix2int getChannel context getRuntime "connect: name or service not known" context getRuntime "connect: name or service not known" host MethodInvocation convertToString port toString	1
MethodDeclaration Modifier ReferenceType getNewVariable ReturnStatement public Variable MethodInvocation Literal getNewVariable "%v_"	0
MethodDeclaration Modifier Annotation ReferenceType getNonIncludedClass ReturnStatement public Override RubyModule MemberReference delegate	0
MethodDeclaration /** *    private class OpElementAsgnArgumentsCallback implements ArgumentsCallback  { *        private Node node; * *        public OpElementAsgnArgumentsCallback(Node node) { *            this.node = node; *        } * *        public int getArity() { *            switch (node.getNodeType()) { *            case ARGSCATNODE: *            case ARGSPUSHNODE: *            case SPLATNODE: *                return -1; *            case ARRAYNODE: *                ArrayNode arrayNode = (ArrayNode)node; *                if (arrayNode.size() == 0) { *                    return 0; *                } else if (arrayNode.size() > 3) { *                    return -1; *                } else { *                    return ((ArrayNode)node).size(); *                } *            default: *                return 1; *            } *        } * *        public void call(IR_Scope m) { *            if (getArity() == 1) { *                // if arity 1, just build the one element to save us the array cost *                build(((ArrayNode)node).get(0), m,true); *            } else { *                // build into array *                buildArguments(node, m); *            } *        } *    }; * *    public Operand buildOpElementAsgnWithOr(Node node, IR_Scope m) { *        final OpElementAsgnNode opElementAsgnNode = (OpElementAsgnNode) node; * *        CompilerCallback receiverCallback = new CompilerCallback() { *            public void call(IR_Scope m) { *                build(opElementAsgnNode.getReceiverNode(), m); *            } *        }; * *        ArgumentsCallback argsCallback = new OpElementAsgnArgumentsCallback(opElementAsgnNode.getArgsNode()); * *        CompilerCallback valueCallback = new CompilerCallback() { *            public void call(IR_Scope m) { *                build(opElementAsgnNode.getValueNode(), m, true); *            } *        }; * *        m.getInvocationCompiler().opElementAsgnWithOr(receiverCallback, argsCallback, valueCallback); *        // TODO: don't require pop *        if (!expr) m.consumeCurrentValue(); *    } * *    public Operand buildOpElementAsgnWithAnd(Node node, IR_Scope m) { *        final OpElementAsgnNode opElementAsgnNode = (OpElementAsgnNode) node; * *        CompilerCallback receiverCallback = new CompilerCallback() { *            public void call(IR_Scope m) { *                build(opElementAsgnNode.getReceiverNode(), m); *            } *        }; * *        ArgumentsCallback argsCallback = new OpElementAsgnArgumentsCallback(opElementAsgnNode.getArgsNode()); * *        CompilerCallback valueCallback = new CompilerCallback() { *            public void call(IR_Scope m) { *                build(opElementAsgnNode.getValueNode(), m); *            } *        }; * *        m.getInvocationCompiler().opElementAsgnWithAnd(receiverCallback, argsCallback, valueCallback); *    } * *    public Operand buildOpElementAsgnWithMethod(Node node, IR_Scope m) { *        final OpElementAsgnNode opElementAsgnNode = (OpElementAsgnNode) node; * *        CompilerCallback receiverCallback = new CompilerCallback() { *            public void call(IR_Scope m) { *                build(opElementAsgnNode.getReceiverNode(), m); *            } *        }; * *        ArgumentsCallback argsCallback = setupCallArgs(opElementAsgnNode.getArgsNode()); * *        CompilerCallback valueCallback = new CompilerCallback() { *            public void call(IR_Scope m) { *                build(opElementAsgnNode.getValueNode(), m); *            } *        }; * *        m.getInvocationCompiler().opElementAsgnWithMethod(receiverCallback, argsCallback, valueCallback, opElementAsgnNode.getOperatorName()); *    } */ Modifier ReferenceType buildOr FormalParameter FormalParameter IfStatement public Operand Modifier ReferenceType orNode ReferenceType m MethodInvocation BlockStatement IfStatement final OrNode IR_Scope orNode MethodInvocation MethodInvocation getFirstNode StatementExpression ReturnStatement MethodInvocation BlockStatement BlockStatement getNodeType alwaysTrue MethodInvocation MemberReference orNode MethodInvocation MethodInvocation getFirstNode StatementExpression ReturnStatement LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression LocalVariableDeclaration StatementExpression StatementExpression ReturnStatement MethodInvocation MemberReference build BooleanLiteral TRUE getNodeType alwaysFalse MethodInvocation MethodInvocation ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation ReferenceType VariableDeclarator MethodInvocation MethodInvocation MemberReference orNode getFirstNode m MethodInvocation MemberReference build MethodInvocation MemberReference build Variable ret MethodInvocation Label l MethodInvocation Operand v1 MethodInvocation m ClassCreator addInstr m ClassCreator addInstr Operand v2 MethodInvocation m ClassCreator addInstr m ClassCreator addInstr ret orNode getFirstNode m orNode getSecondNode m m getNewVariable m getNewLabel MethodInvocation MemberReference build ReferenceType MemberReference MemberReference ReferenceType MemberReference MemberReference MemberReference MethodInvocation MemberReference build ReferenceType MemberReference MemberReference ReferenceType MemberReference orNode getFirstNode m COPY_Instr ret BooleanLiteral TRUE BEQ_Instr v1 BooleanLiteral TRUE l orNode getSecondNode m COPY_Instr ret v2 LABEL_Instr l	0
MethodDeclaration Modifier ReferenceType case106_line688 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference Cast = yyVal yyVal ReferenceType MemberReference Token ArraySelector yyVals BinaryOperation + Literal MemberReference 0 yyTop	1
MethodDeclaration Modifier createSysErr FormalParameter FormalParameter IfStatement private BasicType i ReferenceType name MethodInvocation BlockStatement int String profile MemberReference allowClass LocalVariableDeclaration StatementExpression StatementExpression name ReferenceType VariableDeclarator MethodInvocation MethodInvocation RubyClass errno MethodInvocation errnos MemberReference MemberReference put errno Literal MethodInvocation defineConstant MethodInvocation getErrno i errno "Errno" MemberReference newFixnum MemberReference MemberReference MethodInvocation defineClassUnder i name systemCallError systemCallError getAllocator	0
MethodDeclaration Modifier ReferenceType getEnclosingModule FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public RubyModule ReferenceType runtime ReferenceType context ReferenceType self ReferenceType aBlock MethodInvocation Ruby ThreadContext IRubyObject Block runtime getObject	0
MethodDeclaration Modifier invokevirtual FormalParameter FormalParameter FormalParameter StatementExpression public ReferenceType arg1 ReferenceType arg2 ReferenceType arg3 MethodInvocation String String String MethodInvocation getMethodVisitor MemberReference MemberReference MemberReference MemberReference visitMethodInsn INVOKEVIRTUAL arg1 arg2 arg3	0
MethodDeclaration Modifier ReferenceType buildNot FormalParameter FormalParameter LocalVariableDeclaration StatementExpression ReturnStatement public Operand ReferenceType node ReferenceType m ReferenceType VariableDeclarator MethodInvocation MemberReference NotNode IR_Scope Variable ret MethodInvocation m ClassCreator addInstr ret m getNewVariable ReferenceType MemberReference MemberReference MethodInvocation ALU_Instr Operation NOT ret MethodInvocation MemberReference build node getConditionNode m	0
MethodDeclaration Modifier Annotation ReferenceType exclude_end_p ReturnStatement public JRubyMethod ElementValuePair RubyBoolean MethodInvocation name Literal MethodInvocation getRuntime "exclude_end?" MemberReference newBoolean isExclusive	1
MethodDeclaration Modifier Annotation ReferenceType op_not_equal FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType other MethodInvocation name Literal required Literal compat MemberReference ThreadContext IRubyObject context MethodInvocation getRuntime "!=" 1 CompatVersion RUBY1_9 MethodInvocation newBoolean ! MethodInvocation MemberReference MemberReference op_equal isTrue context other	1
MethodDeclaration Modifier ReferenceType run FormalParameter FormalParameter IOException ReturnStatement static public Process ReferenceType runtime ReferenceType string MethodInvocation Ruby IRubyObject MemberReference ArrayCreator run runtime ReferenceType ArrayInitializer IRubyObject MemberReference string	0
MethodDeclaration Modifier testSetup LocalVariableDeclaration IfStatement StatementExpression public ReferenceType VariableDeclarator MemberReference BlockStatement BlockStatement MethodInvocation JavaFileStat fs ClassCreator Platform IS_WINDOWS StatementExpression StatementExpression MethodInvocation assertFalse ReferenceType Literal Literal MethodInvocation MethodInvocation fs isSymlink JavaFileStat null null fs Literal setup fs Literal setup "c:/" "/"	0
MethodDeclaration Modifier ReferenceType createMatchDataClass FormalParameter LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression ReturnStatement static public RubyClass ReferenceType runtime ReferenceType VariableDeclarator MethodInvocation MethodInvocation Assignment MethodInvocation MethodInvocation MemberReference Ruby RubyClass matchDataClass MethodInvocation runtime MemberReference setMatchData runtime Literal MemberReference defineGlobalConstant MemberReference ClassCreator = matchDataClass MethodInvocation getMetaClass matchDataClass ClassReference defineAnnotatedMethods matchDataClass runtime Literal MethodInvocation MemberReference defineClass matchDataClass "MatchingData" matchDataClass matchDataClass kindOf ReferenceType MethodDeclaration Literal undefineMethod ReferenceType "MatchData" runtime getObject MATCH_DATA_ALLOCATOR RubyModule ReferenceType Modifier Annotation BasicType isKindOf FormalParameter FormalParameter ReturnStatement "new" RubyMatchData KindOf public Override boolean ReferenceType obj ReferenceType type BinaryOperation IRubyObject RubyModule instanceof MemberReference ReferenceType obj RubyMatchData	0
MethodDeclaration Modifier BasicType feof IOException BadDescriptorException StatementExpression IfStatement public boolean MethodInvocation MemberReference BlockStatement BlockStatement checkReadable eof ReturnStatement ReturnStatement Literal Literal true false	1
MethodDeclaration Modifier Annotation ReferenceType op_aref FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType args ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement name Literal meta Literal rest Literal ThreadContext IRubyObject IRubyObject IRubyObject javaClass MethodInvocation > MemberReference Literal LocalVariableDeclaration StatementExpression StatementExpression ReturnStatement ReturnStatement "[]" true true RuntimeHelpers MemberReference MemberReference Literal invoke args length 0 ReferenceType VariableDeclarator Assignment MethodInvocation MethodInvocation MethodInvocation context recv "java_class" IRubyObject newArgs ArrayCreator MemberReference MemberReference = System MemberReference Literal MemberReference Literal MemberReference arraycopy context MethodInvocation MethodInvocation getRuntime Java MemberReference MethodInvocation get_proxy_class ReferenceType BinaryOperation ArraySelector newArgs javaClass args 0 newArgs 1 args length Literal fastGetClass MemberReference MemberReference MemberReference newInstance javaClass RuntimeHelpers MemberReference MemberReference Literal invoke IRubyObject + MemberReference Literal Literal "ArrayJavaProxyCreator" context newArgs Block NULL_BLOCK context javaClass "array_class" args length 1 0	1
MethodDeclaration Modifier Annotation ReferenceType interpret FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement StatementExpression ReturnStatement public Override IRubyObject ReferenceType runtime ReferenceType context ReferenceType self ReferenceType aBlock ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement MethodInvocation MethodInvocation Ruby ThreadContext IRubyObject Block IRubyObject receiver MethodInvocation RubyClass singletonClass || BinaryOperation BinaryOperation ThrowStatement IfStatement StatementExpression scope MemberReference setModule ASTInterpreter MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference evalClassDefinitionBody receiverNode MemberReference MemberReference MemberReference MemberReference interpret instanceof MemberReference ReferenceType instanceof MemberReference ReferenceType MethodInvocation BinaryOperation BlockStatement Assignment singletonClass runtime context scope bodyNode singletonClass self aBlock runtime context self aBlock receiver RubyFixnum receiver RubySymbol runtime BinaryOperation newTypeError && BinaryOperation MethodInvocation ThrowStatement MemberReference MethodInvocation = + Literal MethodInvocation >= MethodInvocation Literal ! receiver isTaint MethodInvocation singletonClass receiver getSingletonClass "no virtual class for " receiver MethodInvocation getMetaClass runtime getSafeLevel 4 runtime Literal newSecurityError getBaseName "Insecure: can't extend object."	0
MethodDeclaration Modifier putAddress FormalParameter FormalParameter FormalParameter StatementExpression final public BasicType buffer BasicType offset BasicType value MethodInvocation byte int long MemberReference MemberReference Cast putInt32 buffer offset BasicType MemberReference int value	0
MethodDeclaration Modifier ReferenceType accept FormalParameter ReturnStatement public Object ReferenceType iVisitor MethodInvocation NodeVisitor iVisitor This visitDefnNode	0
MethodDeclaration Modifier defineClass FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression IfStatement StatementExpression StatementExpression public Modifier ReferenceType name Modifier ReferenceType staticScope Modifier ReferenceType superCallback Modifier ReferenceType pathCallback Modifier ReferenceType bodyCallback Modifier ReferenceType receiverCallback Modifier ReferenceType inspector ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement Modifier ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation BinaryOperation BlockStatement BlockStatement MethodInvocation MethodInvocation final String final StaticScope final CompilerCallback final CompilerCallback final CompilerCallback final CompilerCallback final ASTInspector String classMethodName Literal == MemberReference Literal LocalVariableDeclaration StatementExpression StatementExpression final RootScopedBodyCompiler classBody ClassCreator CompilerCallback bodyPrep ClassCreator Label start ClassCreator Label end ClassCreator Label after ClassCreator Label noException ClassCreator classBody.method MemberReference MemberReference MemberReference Literal trycatch classBody MemberReference MemberReference beginMethod classBody.method MemberReference label bodyCallback MemberReference call classBody.method MemberReference label classBody loadThreadContext classBody Literal MethodInvocation invokeThreadContext classBody.method MemberReference go_to classBody.method MemberReference label classBody loadThreadContext classBody Literal MethodInvocation invokeThreadContext classBody.method athrow classBody.method MemberReference label classBody endBody method MemberReference aload loadThreadContext == MemberReference Literal IfStatement StatementExpression method MethodInvocation Literal MethodInvocation getstatic method MethodInvocation MemberReference MethodInvocation invokestatic null receiverCallback null ReferenceType VariableDeclarator Assignment Assignment ReferenceType MemberReference MemberReference MemberReference MemberReference ReferenceType MethodDeclaration ReferenceType ReferenceType ReferenceType ReferenceType start end after null bodyPrep staticScope start classBody end "postCompiledClass" MemberReference MethodInvocation sig noException after "postCompiledClass" MemberReference MethodInvocation sig noException StandardASMCompiler THIS receiverCallback null BinaryOperation BlockStatement BlockStatement MethodInvocation ClassReference p "NULL_BLOCK" ClassReference ci script getClassname classMethodName StandardASMCompiler MethodInvocation Literal getStaticMethodSignature String mangledName MethodInvocation MemberReference BinaryOperation = MemberReference BinaryOperation = ClassBodyCompiler script classMethodName inspector staticScope CompilerCallback Modifier call FormalParameter IfStatement StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression IfStatement Label Label Label Label Void TYPE params Void TYPE params != MemberReference Literal StatementExpression StatementExpression receiverCallback This call ReferenceType ReferenceType script getClassname 0 JavaNameMangler MemberReference mangleStringForCleanJavaIdentifier classMethodName + BinaryOperation MemberReference classMethodName + BinaryOperation Literal public ReferenceType context BinaryOperation BlockStatement BlockStatement MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation BinaryOperation BlockStatement BlockStatement superCallback null MethodInvocation MethodInvocation Block Block name + BinaryOperation Literal mangledName + Literal MethodInvocation "$RUBY$__singleton__" BodyCompiler == MemberReference Literal IfStatement StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression LocalVariableDeclaration StatementExpression StatementExpression StatementExpression classBody.method dup classBody.method MemberReference astore classBody loadThreadContext classBody.method swap script MethodInvocation getCacheCompiler || MethodInvocation MethodInvocation StatementExpression StatementExpression superCallback This call method MemberReference aload + Literal MethodInvocation "$RUBY$" "sclass_" script getAndIncrementMethodIndex receiverCallback null BinaryOperation BlockStatement BlockStatement MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation BasicType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation StandardASMCompiler SELF_INDEX MemberReference MemberReference cacheStaticScope inspector hasClosure inspector hasScopeAwareMethods MethodInvocation MethodInvocation StandardASMCompiler SELF_INDEX "class_" script getAndIncrementMethodIndex != MemberReference Literal StatementExpression StatementExpression StatementExpression StatementExpression classBody loadThreadContext pathCallback MemberReference call classBody Literal MethodInvocation invokeUtilityMethod classBody.method swap classBody.method MemberReference ldc classBody.method swap classBody.method MethodInvocation Literal MethodInvocation invokevirtual classBody loadRuntime classBody.method MemberReference aload int selfTemp MethodInvocation classBody MethodInvocation getVariableCompiler classBody.method MemberReference aload classBody Literal MethodInvocation invokeUtilityMethod classBody staticScope classBody Literal MethodInvocation invokeThreadContext classBody Literal MethodInvocation invokeThreadContext superCallback null MethodInvocation MethodInvocation MethodInvocation MethodInvocation classBody "prepareClassNamespace" ClassReference MethodInvocation sig name ClassReference p "defineOrGetClassUnder" ClassReference MethodInvocation sig StandardASMCompiler SELF_INDEX classBody MethodInvocation getVariableCompiler MemberReference setTempLocal StandardASMCompiler SELF_INDEX "getSingletonClass" ClassReference MethodInvocation sig "preCompiledClass" MemberReference MethodInvocation sig "preCompiledClassDummyScope" MemberReference MethodInvocation sig classBody loadRuntime classBody.method MemberReference aload classBody Literal MethodInvocation invokeUtilityMethod classBody.method aconst_null ReferenceType ClassReference ClassReference params ReferenceType ReferenceType ClassReference ClassReference params grabTempLocal selfTemp ReferenceType ClassReference ClassReference params Void TYPE ClassReference ClassReference params Void TYPE ClassReference ClassReference params StandardASMCompiler SELF_INDEX "prepareSuperClass" ClassReference MethodInvocation sig RubyModule ReferenceType ReferenceType RubyModule RubyClass ReferenceType ReferenceType RubyClass ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ClassReference ClassReference params ThreadContext IRubyObject String RubyClass Ruby IRubyObject RubyModule StaticScope RubyModule StaticScope RubyClass ReferenceType ReferenceType Ruby IRubyObject	1
MethodDeclaration Modifier ReferenceType wrapDirectMemory FormalParameter FormalParameter ReturnStatement public DirectMemoryIO ReferenceType runtime BasicType address MethodInvocation Ruby long NativeMemoryIO MemberReference MemberReference wrap runtime address	0
MethodDeclaration Modifier trace FormalParameter IfStatement LocalVariableDeclaration IfStatement TryStatement public ReferenceType value BinaryOperation ReturnStatement ReferenceType VariableDeclarator MethodInvocation ReturnStatement StatementExpression ForStatement StatementExpression IRubyObject == MemberReference Literal ThreadContext context MethodInvocation context isWithinTrace MethodInvocation ForControl BlockStatement MethodInvocation traces null value MethodInvocation getRuntime context Literal setWithinTrace VariableDeclaration BinaryOperation MemberReference StatementExpression context Literal setWithinTrace getCurrentContext true BasicType VariableDeclarator < MemberReference MethodInvocation ++ i Cast false int i Literal i traces size ReferenceType MethodInvocation 0 RubyProc traces MemberReference get i	1
MethodDeclaration Modifier Annotation ReferenceType re_exchange FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType self MethodInvocation name Literal module Literal ThreadContext IRubyObject MemberReference MemberReference MemberReference switch_rb "re_exchange" true context self Block NULL_BLOCK	1
MethodDeclaration Modifier Annotation ReferenceType hour ReturnStatement public JRubyMethod ElementValuePair RubyInteger MethodInvocation name Literal MethodInvocation getRuntime "hour" MethodInvocation newFixnum dt getHourOfDay	0
MethodDeclaration Modifier ReferenceType buildFixnum FormalParameter FormalParameter ReturnStatement public Operand ReferenceType node ReferenceType m ClassCreator FixnumNode IR_Scope ReferenceType MethodInvocation Fixnum node getValue	1
MethodDeclaration Modifier Annotation ReferenceType sprintf FormalParameter FormalParameter FormalParameter IfStatement LocalVariableDeclaration LocalVariableDeclaration StatementExpression ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType args BinaryOperation BlockStatement ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation name ElementArrayValue required Literal rest Literal module Literal visibility MemberReference ThreadContext IRubyObject IRubyObject == MemberReference Literal ThrowStatement RubyString str MethodInvocation RubyArray newArgs MethodInvocation newArgs MemberReference shift str MemberReference MemberReference op_format Literal Literal 1 true true PRIVATE args length 0 MethodInvocation RubyString MemberReference stringValue context MethodInvocation getRuntime context context newArgs "sprintf" "format" context MethodInvocation getRuntime ArraySelector args MemberReference newArrayNoCopy Literal newArgumentError Literal args "sprintf must have at least one argument" 0	0
MethodDeclaration Modifier ReferenceType multiplyWith FormalParameter FormalParameter ReturnStatement public RubyNumeric ReferenceType context ReferenceType value Cast ThreadContext RubyFloat ReferenceType MethodInvocation RubyNumeric MemberReference MemberReference op_mul context value	0
MethodDeclaration Modifier Annotation ReferenceType newInstanceBang FormalParameter FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType num MethodInvocation name Literal meta Literal visibility MemberReference compat MemberReference ThreadContext IRubyObject IRubyObject MemberReference MemberReference MemberReference MethodInvocation newInstanceBang "new!" true Visibility PRIVATE CompatVersion RUBY1_8 context recv num RubyFixnum MethodInvocation one context getRuntime	0
MethodDeclaration Modifier colon3Node FormalParameter StatementExpression private ReferenceType node MethodInvocation Colon3Node sb MethodInvocation Literal append MethodInvocation append " " node getName	0
MethodDeclaration Modifier ReferenceType toString ReturnStatement public String BinaryOperation + SuperMethodInvocation MethodInvocation toString Arrays MemberReference toString _args	0
MethodDeclaration Modifier Annotation ReferenceType set_string FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType arg MethodInvocation name Literal required Literal IRubyObject ArrayCreator reopen "string=" 1 ReferenceType ArrayInitializer IRubyObject MethodInvocation arg convertToString	1
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter AssertStatement LocalVariableDeclaration LocalVariableDeclaration TryStatement public IRubyObject ReferenceType context ReferenceType args ReferenceType self ReferenceType passedBlock BinaryOperation ReferenceType VariableDeclarator ReferenceType VariableDeclarator IfStatement ReturnStatement CatchClause CatchClause CatchClause ThreadContext IRubyObject IRubyObject Block != MemberReference Literal Block newBlock MethodInvocation JumpTarget jumpTarget MethodInvocation BinaryOperation StatementExpression MethodInvocation CatchClauseParameter ReturnStatement CatchClauseParameter ReturnStatement CatchClauseParameter ReturnStatement args null block cloneBlock newBlock MethodInvocation MethodInvocation getBinding != MemberReference Literal MethodInvocation newBlock MemberReference MemberReference MemberReference call JumpException.BreakJump bj MethodInvocation JumpException.ReturnJump rj MethodInvocation JumpException.RetryJump rj MethodInvocation getFrame getJumpTarget self null newBlock MethodInvocation getBinding context args passedBlock MethodInvocation MemberReference MemberReference MemberReference handleBreakJump MethodInvocation MemberReference MemberReference handleReturnJump MethodInvocation MemberReference handleRetryJump MemberReference setSelf getRuntime newBlock bj jumpTarget getRuntime rj jumpTarget getRuntime rj self	1
MethodDeclaration Modifier ReferenceType handleAddSpecialValues FormalParameter IfStatement IfStatement IfStatement IfStatement ReturnStatement private RubyBigDecimal ReferenceType val BinaryOperation BlockStatement BinaryOperation BlockStatement BinaryOperation BlockStatement BinaryOperation BlockStatement Literal RubyBigDecimal || MethodInvocation MemberReference ReturnStatement > BinaryOperation Literal ReturnStatement < BinaryOperation Literal ReturnStatement == BinaryOperation Literal LocalVariableDeclaration IfStatement null isNaN val isNaN MethodInvocation * MemberReference MemberReference 0 TernaryExpression * MemberReference MemberReference 0 MethodInvocation * MemberReference MemberReference 0 BasicType VariableDeclarator BinaryOperation BlockStatement MethodInvocation newNaN infinitySign val infinitySign MethodInvocation This MemberReference infinitySign val infinitySign MethodInvocation newNaN infinitySign val infinitySign int sign BinaryOperation != MemberReference Literal ReturnStatement getRuntime isInfinity val getRuntime + MemberReference MemberReference sign 0 MethodInvocation infinitySign val infinitySign MethodInvocation MemberReference newInfinity getRuntime sign	1
MethodDeclaration Modifier ReferenceType createEnumClass FormalParameter FormalParameter LocalVariableDeclaration StatementExpression StatementExpression ReturnStatement static public RubyClass ReferenceType runtime ReferenceType ffiModule ReferenceType VariableDeclarator MethodInvocation MethodInvocation MemberReference Ruby RubyModule RubyClass enumClass MethodInvocation enumClass ClassReference defineAnnotatedMethods enumClass ClassReference defineAnnotatedConstants enumClass ffiModule Literal MethodInvocation MemberReference defineClassUnder ReferenceType ReferenceType "Enum" ffiModule Literal fastGetClass Allocator INSTANCE Enum Enum "Type"	1
MethodDeclaration Modifier Annotation ReferenceType eof_p FormalParameter LocalVariableDeclaration TryStatement public JRubyMethod ElementValuePair RubyBoolean ReferenceType context ReferenceType VariableDeclarator LocalVariableDeclaration StatementExpression StatementExpression IfStatement IfStatement StatementExpression StatementExpression LocalVariableDeclaration IfStatement StatementExpression StatementExpression ReturnStatement CatchClause CatchClause CatchClause CatchClause name ElementArrayValue ThreadContext Ruby runtime MethodInvocation ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation BlockStatement MethodInvocation BlockStatement MethodInvocation MethodInvocation BasicType VariableDeclarator BinaryOperation BlockStatement MethodInvocation MethodInvocation MethodInvocation CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement Literal Literal context getRuntime OpenFile myOpenFile MethodInvocation myOpenFile MemberReference checkReadable myOpenFile setReadBuffered myOpenFile MethodInvocation getMainStream ReturnStatement myOpenFile MethodInvocation getMainStream ReturnStatement MethodInvocation readCheck myOpenFile MethodInvocation getMainStream int c MethodInvocation != MemberReference Literal StatementExpression ReturnStatement myOpenFile MemberReference checkClosed myOpenFile MethodInvocation getMainStream runtime getTrue PipeException ex MethodInvocation InvalidValueException ex MethodInvocation BadDescriptorException e MethodInvocation IOException e MethodInvocation "eof?" "eof" getOpenFileChecked runtime feof MethodInvocation readDataBuffered MethodInvocation myOpenFile getMainStream clearerr myOpenFile MethodInvocation getMainStream c - 1 MethodInvocation MethodInvocation runtime clearerr runtime newErrnoEPIPEError runtime newErrnoEINVALError runtime newErrnoEBADFError runtime MethodInvocation newIOError runtime getTrue runtime getFalse fgetc myOpenFile MethodInvocation getMainStream runtime getFalse e getMessage MemberReference ungetc c	1
MethodDeclaration Modifier Annotation BasicType isNative IfStatement ReturnStatement public Override boolean BinaryOperation StatementExpression MethodInvocation == MemberReference Literal MethodInvocation compiledMethod isNative compiledMethod null initializeMethod	1
MethodDeclaration Modifier ReferenceType getOutputStream ReturnStatement public PrintStream MemberReference System out	1
MethodDeclaration Modifier ReferenceType getDir FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement LocalVariableDeclaration IfStatement ReturnStatement protected static JRubyFile Modifier ReferenceType runtime Modifier ReferenceType path Modifier BasicType mustExist ReferenceType VariableDeclarator BinaryOperation BlockStatement BasicType VariableDeclarator BinaryOperation BlockStatement IfStatement MemberReference final Ruby final String final boolean JRubyFile result MethodInvocation && MemberReference MethodInvocation ThrowStatement boolean isDirectory MethodInvocation || MethodInvocation BinaryOperation ThrowStatement BinaryOperation BlockStatement result JRubyFile MethodInvocation MemberReference create mustExist ! result exists MethodInvocation result isDirectory path Literal startsWith && MemberReference MemberReference MethodInvocation && MemberReference MemberReference ThrowStatement runtime getCurrentDirectory path runtime BinaryOperation newErrnoENOENTError "file:" mustExist ! isDirectory runtime BinaryOperation newErrnoENOTDIRError ! mustExist isDirectory MethodInvocation + Literal MemberReference + MemberReference Literal runtime BinaryOperation newErrnoEEXISTError "No such file or directory - " path path " is not a directory" + Literal MemberReference "File exists - " path	1
MethodDeclaration Modifier ReferenceType intToBinaryByteList FormalParameter ReturnStatement final static public ByteList BasicType i ClassCreator int ReferenceType MethodInvocation ByteList MemberReference intToBinaryBytes i	0
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType klazz ReferenceType name ReferenceType arg1 ReferenceType arg2 ReferenceType arg3 MethodInvocation ThreadContext IRubyObject RubyModule String IRubyObject IRubyObject IRubyObject oldMethod MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference call context self klazz oldName arg1 arg2 arg3	0
MethodDeclaration Modifier ReferenceType fetchClassVariable FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement static public IRubyObject ReferenceType context ReferenceType runtime ReferenceType self ReferenceType name ReferenceType VariableDeclarator BinaryOperation StatementExpression MethodInvocation ThreadContext Ruby IRubyObject String RubyModule rubyClass MethodInvocation == MemberReference Literal Assignment rubyClass MemberReference getClassVar ASTInterpreter MemberReference MemberReference getClassVariableBase rubyClass null MemberReference MethodInvocation = name context runtime rubyClass self getMetaClass	1
MethodDeclaration Modifier ReferenceType getBlockBody FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement final public BlockBody ReferenceType scriptObject ReferenceType context BasicType index ReferenceType descriptor ReferenceType VariableDeclarator BinaryOperation BlockStatement MemberReference Object ThreadContext int String BlockBody body MemberReference == MemberReference Literal ReturnStatement body ArraySelector blockBodies body null MethodInvocation MemberReference MemberReference MemberReference MemberReference MemberReference createBlockBody index scriptObject context index descriptor	0
MethodDeclaration Modifier tearDown Exception StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression protected MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation Assignment Assignment Assignment Assignment Assignment Assignment in close out close err close printOut close printErr close MemberReference Literal = MemberReference Literal = MemberReference Literal = MemberReference Literal = MemberReference Literal = MemberReference Literal = in null out null err null printOut null printErr null runtime null	0
MethodDeclaration Modifier ReferenceType accept FormalParameter ReturnStatement public Object ReferenceType visitor MethodInvocation NodeVisitor visitor This visitSplatNode	0
MethodDeclaration Modifier ReferenceType case264_line1014 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support MethodInvocation Cast newSplatNode Cast getPosition ReferenceType MemberReference ReferenceType MemberReference Node ArraySelector yyVals Token ArraySelector yyVals BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference 0 yyTop - 1 yyTop	1
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration ReturnStatement public IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType VariableDeclarator TernaryExpression ThreadContext IRubyObject RubyModule String IRubyObject variable Cast BinaryOperation MethodInvocation MemberReference ReferenceType MethodInvocation == MemberReference Literal runtime getNil variable IRubyObject MethodInvocation MethodInvocation verifyAccessor variable null MemberReference get self MethodInvocation getMetaClass self getRealClass	0
MethodDeclaration Modifier ReferenceType getVersionToken StatementExpression ReturnStatement static public CodeVersion MemberReference ClassCreator ++ _nextVersionNumber ReferenceType MemberReference CodeVersion _nextVersionNumber	0
MethodDeclaration Modifier Annotation ReferenceType get_array_of_int8 FormalParameter FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType offset ReferenceType length MethodInvocation name ElementArrayValue required Literal ThreadContext IRubyObject IRubyObject MemoryUtil MethodInvocation MemberReference MethodInvocation MethodInvocation getArrayOfSigned8 Literal Literal 2 context getRuntime io MemberReference getOffset Util MemberReference int32Value "get_array_of_int8" "get_array_of_char" offset length	1
MethodDeclaration Modifier BasicType safeGet FormalParameter ReturnStatement private static int ReferenceType encode TernaryExpression ByteBuffer MethodInvocation BinaryOperation Literal encode hasRemaining & MethodInvocation Literal 0 encode get 0xff	0
MethodDeclaration Modifier Annotation ReferenceType delete_if19 FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject Modifier ReferenceType context Modifier ReferenceType block TernaryExpression name Literal frame Literal final ThreadContext final Block MethodInvocation MethodInvocation MethodInvocation "delete_if" true block isGiven MemberReference MemberReference delete_if MethodInvocation This Literal enumeratorize context block context getRuntime "delete_if"	1
MethodDeclaration Modifier ReferenceType listRoots LocalVariableDeclaration LocalVariableDeclaration ForStatement ReturnStatement static public File ReferenceType VariableDeclarator ReferenceType VariableDeclarator ForControl BlockStatement MemberReference File roots MethodInvocation JRubyFile smartRoots ArrayCreator VariableDeclaration BinaryOperation MemberReference StatementExpression smartRoots File listRoots ReferenceType MemberReference BasicType VariableDeclarator VariableDeclarator < MemberReference MemberReference ++ i Assignment JRubyFile roots length int i Literal j MemberReference i j MemberReference ClassCreator = 0 roots length ArraySelector smartRoots ReferenceType MemberReference MemberReference JRubyFile ArraySelector MethodInvocation roots i MemberReference getPath i	0
MethodDeclaration Modifier backAction FormalParameter IfStatement protected ReferenceType event BinaryOperation StatementExpression KeyEvent <= MethodInvocation MemberReference MethodInvocation area getCaretPosition startPos event consume	1
MethodDeclaration Modifier ReferenceType values LocalVariableDeclaration ReturnStatement public Collection ReferenceType VariableDeclarator TernaryExpression Collection vs MemberReference BinaryOperation MemberReference Assignment values != MemberReference Literal vs MemberReference ClassCreator = vs null values ReferenceType Values	1
MethodDeclaration Modifier Annotation setArgValues FormalParameter StatementExpression public Override ReferenceType arg0 Assignment IRubyObject MemberReference MemberReference = variableValueZero arg0	0
MethodDeclaration Modifier ReferenceType getCoreClass FormalParameter ReturnStatement static public IR_Class ReferenceType n MethodInvocation String _coreClasses MemberReference get n	0
MethodDeclaration Modifier Annotation ReferenceType get_uint16 FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType offset MethodInvocation name ElementArrayValue required Literal ThreadContext IRubyObject Util MethodInvocation MethodInvocation newUnsigned16 Literal Literal 1 context getRuntime MethodInvocation getMemoryIO "get_uint16" "get_ushort" MethodInvocation getShort MemberReference getOffset offset	1
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name MethodInvocation ThreadContext IRubyObject RubyModule String RuntimeHelpers MemberReference MemberReference Literal invoke context self "__jcreate!"	0
MethodDeclaration Modifier ReferenceType getName ReturnStatement public String MemberReference name	0
MethodDeclaration Modifier ReferenceType dispatchObject FormalParameter ReturnStatement public String ReferenceType iObject TernaryExpression Object BinaryOperation Literal MethodInvocation == MemberReference Literal null iObject toString iObject null	0
MethodDeclaration Modifier ReferenceType case51_line486 FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MethodInvocation MemberReference Object Object int MemberReference ClassCreator = support popCurrentScope yyVal yyVal ReferenceType MethodInvocation Cast MethodInvocation Cast IterNode Cast getPosition ReferenceType MemberReference support getCurrentScope ReferenceType MemberReference ReferenceType MemberReference Node ArraySelector yyVals Node ArraySelector yyVals Token ArraySelector yyVals BinaryOperation BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference + Literal MemberReference - 2 yyTop - 1 yyTop - 4 yyTop	1
MethodDeclaration Modifier Annotation assign FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression StatementExpression public Override ReferenceType runtime ReferenceType context ReferenceType self ReferenceType value1 ReferenceType block MethodInvocation MethodInvocation MethodInvocation Ruby ThreadContext IRubyObject IRubyObject Block pre MethodInvocation Literal get MemberReference MemberReference MemberReference MemberReference Literal assignNilTo rest MemberReference MemberReference MemberReference MethodInvocation MemberReference Literal assign MemberReference MemberReference MemberReference MemberReference MemberReference Literal assign 0 runtime context self block 1 runtime context self runtime MemberReference newArrayNoCopyLight block true runtime context self value1 block false IRubyObject NULL_ARRAY	0
MethodDeclaration Modifier ReferenceType asDatagramSocket LocalVariableDeclaration IfStatement ReturnStatement private DatagramSocket ReferenceType VariableDeclarator BinaryOperation BlockStatement Cast Channel socketChannel MethodInvocation instanceof MemberReference ReferenceType ThrowStatement ReferenceType MemberReference openFile MethodInvocation MethodInvocation getMainStream socketChannel DatagramChannel MethodInvocation DatagramChannel socketChannel getDescriptor getChannel MethodInvocation getRuntime newErrnoENOPROTOOPTError	0
MethodDeclaration Modifier branch FormalParameter IfStatement public ReferenceType context BinaryOperation BlockStatement BlockStatement BodyCompiler != MethodInvocation Literal StatementExpression StatementExpression rescueBodyNode getOptRescueNode null MethodInvocation MethodInvocation MethodInvocation MemberReference MemberReference compileRescueBodyInternal context rethrowException rescueBodyNode getOptRescueNode context light	0
MethodDeclaration Modifier Annotation ReferenceType interpret FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement public Override IRubyObject ReferenceType runtime ReferenceType context ReferenceType self ReferenceType aBlock ReferenceType VariableDeclarator MethodInvocation ReturnStatement MethodInvocation Ruby ThreadContext IRubyObject Block IRubyObject result MethodInvocation ! result isTrue MethodInvocation secondNode MemberReference MemberReference MemberReference MemberReference interpret firstNode MemberReference MemberReference MemberReference MemberReference interpret ASTInterpreter MemberReference MemberReference pollAndReturn runtime context self aBlock runtime context self aBlock context result	1
MethodDeclaration Modifier Annotation ReferenceType autoload FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement IfStatement LocalVariableDeclaration IfStatement LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement StatementExpression StatementExpression ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject Modifier ReferenceType recv ReferenceType symbol Modifier ReferenceType file ReferenceType VariableDeclarator Modifier ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation BlockStatement BinaryOperation ThrowStatement ReferenceType VariableDeclarator MethodInvocation BlockStatement Modifier ReferenceType VariableDeclarator Modifier ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation ReturnStatement MethodInvocation MethodInvocation MethodInvocation name Literal required Literal frame Literal module Literal visibility MemberReference final IRubyObject IRubyObject final IRubyObject Ruby runtime MethodInvocation final LoadService loadService MethodInvocation String nonInternedName MethodInvocation ! IdUtil MemberReference isValidConstantName ThrowStatement instanceof MemberReference ReferenceType MethodInvocation RubyString fileString MethodInvocation fileString isEmpty ThrowStatement final String baseName MethodInvocation final RubyModule module TernaryExpression String nm BinaryOperation IRubyObject existingValue MethodInvocation && BinaryOperation BinaryOperation MethodInvocation module MemberReference MemberReference fastStoreConstant loadService MemberReference ClassCreator addAutoload runtime getNil "autoload" 2 true true PRIVATE recv getRuntime runtime getLoadService symbol asJavaString nonInternedName MethodInvocation file RubyString runtime MemberReference MethodInvocation newTypeError file convertToString MethodInvocation symbol MethodInvocation asJavaString BinaryOperation Cast MethodInvocation + BinaryOperation MemberReference module MemberReference fastFetchConstant != MemberReference Literal != MemberReference MemberReference runtime getNil baseName RubyObject UNDEF nm ReferenceType MethodDeclaration MethodDeclaration runtime Literal MemberReference newNameError file runtime getString runtime Literal newArgumentError intern instanceof MemberReference ReferenceType ReferenceType MemberReference runtime getObject + MethodInvocation Literal baseName baseName existingValue null existingValue RubyObject UNDEF IAutoloadMethod Modifier ReferenceType file ReturnStatement /**         * @see org.jruby.runtime.load.IAutoloadMethod#load(Ruby, String)         */ Modifier ReferenceType load FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement "autoload must be constant name" nonInternedName "empty file name" recv RubyModule RubyModule recv module getName "::" public String MethodInvocation public IRubyObject ReferenceType runtime ReferenceType name BasicType VariableDeclarator MemberReference ReturnStatement MethodInvocation file toString Ruby String boolean required MethodInvocation ! required Literal module MemberReference fastGetConstant loadService MethodInvocation require null baseName file	1
MethodDeclaration Modifier ReferenceType getFixnum FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement final public RubyFixnum ReferenceType runtime BasicType index BasicType value ReferenceType VariableDeclarator BinaryOperation ReturnStatement MemberReference Ruby int long RubyFixnum fixnum MemberReference == MemberReference Literal Assignment fixnum ArraySelector fixnums fixnum null MemberReference MethodInvocation = MemberReference ArraySelector fixnums RubyFixnum MemberReference MemberReference newFixnum index MemberReference runtime value index	1
MethodDeclaration Modifier ReferenceType unmarshalFrom FormalParameter FormalParameter FormalParameter IOException LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression ReturnStatement public Object ReferenceType runtime ReferenceType type ReferenceType unmarshalStream ReferenceType VariableDeclarator MethodInvocation MethodInvocation Assignment MethodInvocation MemberReference Ruby RubyClass UnmarshalStream RubyException exc Cast unmarshalStream MemberReference registerLinkTarget unmarshalStream MemberReference defaultVariablesUnmarshal MemberReference Cast = exc Cast set_backtrace exc ReferenceType MethodInvocation exc exc exc message ReferenceType MethodInvocation ReferenceType MethodInvocation RubyException type allocate IRubyObject exc Literal removeInternalVariable IRubyObject exc Literal removeInternalVariable "mesg" "bt"	0
MethodDeclaration Modifier ReferenceType internalGet FormalParameter ReturnStatement private final IRubyObject ReferenceType key MethodInvocation IRubyObject MemberReference MemberReference internalGetEntry value key	1
MethodDeclaration Modifier ReferenceType case378_line1430 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support Cast Cast Cast Literal new_call ReferenceType MemberReference ReferenceType MemberReference ReferenceType MemberReference null Node ArraySelector yyVals Token ArraySelector yyVals Node ArraySelector yyVals BinaryOperation BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference + Literal MemberReference - 3 yyTop - 1 yyTop 0 yyTop	1
MethodDeclaration Modifier Annotation ReferenceType sign IfStatement IfStatement IfStatement IfStatement public JRubyMethod ElementValuePair IRubyObject MethodInvocation BlockStatement MethodInvocation BlockStatement MethodInvocation BlockStatement BinaryOperation BlockStatement BlockStatement name Literal isNaN ReturnStatement isInfinity IfStatement isZero IfStatement < MethodInvocation Literal ReturnStatement ReturnStatement "sign" MethodInvocation BinaryOperation BlockStatement BlockStatement BinaryOperation BlockStatement BlockStatement value signum 0 MethodInvocation MethodInvocation MethodInvocation getMetaClass < MemberReference Literal ReturnStatement ReturnStatement < MemberReference Literal ReturnStatement ReturnStatement MethodInvocation getMetaClass MethodInvocation getMetaClass Literal fastGetConstant infinitySign 0 MethodInvocation MethodInvocation zeroSign 0 MethodInvocation MethodInvocation Literal fastGetConstant Literal fastGetConstant "SIGN_NaN" MethodInvocation getMetaClass MethodInvocation getMetaClass MethodInvocation getMetaClass MethodInvocation getMetaClass "SIGN_NEGATIVE_FINITE" "SIGN_POSITIVE_FINITE" Literal fastGetConstant Literal fastGetConstant Literal fastGetConstant Literal fastGetConstant "SIGN_NEGATIVE_INFINITE" "SIGN_POSITIVE_INFINITE" "SIGN_NEGATIVE_ZERO" "SIGN_POSITIVE_ZERO"	0
MethodDeclaration Modifier Annotation ReferenceType op_gt FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType arg MethodInvocation name Literal required Literal ThreadContext IRubyObject MemberReference MemberReference Literal cmp ">" 1 context arg '>'	1
MethodDeclaration Modifier BasicType waitWritable FormalParameter IOException LocalVariableDeclaration IfStatement LocalVariableDeclaration LocalVariableDeclaration SynchronizedStatement protected boolean ReferenceType descriptor ReferenceType VariableDeclarator BinaryOperation BlockStatement ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation LocalVariableDeclaration TryStatement ChannelDescriptor Channel channel MethodInvocation || BinaryOperation BinaryOperation ReturnStatement SelectableChannel selectable Cast Selector selector Literal selectable blockingLock BasicType VariableDeclarator StatementExpression StatementExpression LocalVariableDeclaration LocalVariableDeclaration IfStatement WhileStatement ForStatement ReturnStatement IfStatement StatementExpression descriptor getChannel == MemberReference Literal instanceof MemberReference ReferenceType Literal ReferenceType MemberReference null boolean oldBlocking MethodInvocation Assignment MethodInvocation BasicType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement BinaryOperation Statement ForControl BlockStatement Literal BinaryOperation BlockStatement MethodInvocation channel null channel SelectableChannel false SelectableChannel channel selectable isBlocking MemberReference MethodInvocation = selectable Literal configureBlocking int real_ops BinaryOperation SelectionKey key MethodInvocation == MemberReference Literal StatementExpression StatementExpression == MethodInvocation Literal VariableDeclaration MethodInvocation LocalVariableDeclaration IfStatement false != MemberReference Literal TryStatement selectable MemberReference configureBlocking selector Selector open false & MethodInvocation MemberReference selectable MemberReference keyFor key null MethodInvocation MethodInvocation selector select 0 ReferenceType VariableDeclarator i hasNext ReferenceType VariableDeclarator BinaryOperation BlockStatement selector null StatementExpression CatchClause oldBlocking selectable validOps SelectionKey OP_WRITE selector selectable MemberReference MemberReference MemberReference register key BinaryOperation interestOps Iterator i MethodInvocation SelectionKey skey Cast != BinaryOperation Literal IfStatement MethodInvocation CatchClauseParameter selector real_ops descriptor | MethodInvocation MemberReference selector MethodInvocation selectedKeys ReferenceType MethodInvocation & BinaryOperation MemberReference 0 BinaryOperation BlockStatement selector close Exception e key interestOps real_ops iterator SelectionKey i next & MethodInvocation MethodInvocation SelectionKey OP_WRITE == MethodInvocation MemberReference ReturnStatement skey interestOps skey readyOps skey attachment descriptor Literal true	1
MethodDeclaration Modifier ReferenceType case96_line661 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop MethodInvocation MemberReference Object Object int Literal yyerror yyVal "class/module name must be CONSTANT"	1
MethodDeclaration Modifier BasicType isDefined FormalParameter FormalParameter ReturnStatement public int ReferenceType name BasicType depth BinaryOperation String int | BinaryOperation MethodInvocation << MemberReference Literal MemberReference exists depth 16 name	0
MethodDeclaration Modifier ReferenceType buildSuper FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression ReturnStatement public Operand ReferenceType superNode ReferenceType s ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MemberReference SuperNode IR_Scope List TypeArgument args MethodInvocation Operand block MethodInvocation Variable ret MethodInvocation s ClassCreator addInstr ret ReferenceType MethodInvocation MemberReference setupCallArgs MethodInvocation MemberReference setupCallClosure s getNewVariable ReferenceType MemberReference MemberReference MethodInvocation MemberReference Operand superNode getArgsNode s superNode getIterNode s RUBY_INTERNALS_CALL_Instr ret MethAddr SUPER args ArrayCreator toArray block ReferenceType MethodInvocation Operand args size	1
MethodDeclaration Modifier Annotation ReferenceType clear FormalParameter StatementExpression StatementExpression ReturnStatement synchronized public JRubyMethod IRubyObject ReferenceType context MethodInvocation MethodInvocation MethodInvocation ThreadContext MemberReference checkShutdown entries clear context MethodInvocation getRuntime context getNil	0
MethodDeclaration Modifier testSymbolTable Exception LocalVariableDeclaration StatementExpression LocalVariableDeclaration StatementExpression StatementExpression StatementExpression LocalVariableDeclaration StatementExpression StatementExpression StatementExpression public ReferenceType VariableDeclarator MethodInvocation ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation RubySymbol ReferenceType st MethodInvocation MethodInvocation assertNull RubySymbol symbol MethodInvocation MemberReference MethodInvocation assertSame MemberReference MethodInvocation assertSame MemberReference MethodInvocation assertSame RubySymbol another MethodInvocation MemberReference MethodInvocation assertSame MemberReference MethodInvocation assertSame MemberReference MethodInvocation assertSame SymbolTable runtime getSymbolTable st Literal lookup RubySymbol MemberReference Literal newSymbol symbol st Literal lookup symbol st Literal getSymbol symbol st Literal fastGetSymbol st Literal fastGetSymbol another st Literal lookup another st Literal getSymbol another st Literal fastGetSymbol "somename" runtime "somename" "somename" "somename" "somename" "another_name" "another_name" "another_name" "another_name"	0
MethodDeclaration Modifier Annotation ReferenceType op_equal19 FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair IRubyObject Modifier ReferenceType context ReferenceType other MethodInvocation name Literal final ThreadContext IRubyObject RecursiveComparator MemberReference Literal This MemberReference Literal compare "==" context "==" other null	1
MethodDeclaration Modifier ReferenceType readnonblock FormalParameter IOException BadDescriptorException EOFException AssertStatement IfStatement IfStatement synchronized public ByteList BasicType number BinaryOperation BinaryOperation BlockStatement BinaryOperation BlockStatement IfStatement int >= MemberReference Literal == MemberReference Literal ReturnStatement instanceof MethodInvocation ReferenceType LocalVariableDeclaration SynchronizedStatement BinaryOperation BlockStatement BlockStatement number 0 number 0 Literal descriptor getChannel SelectableChannel ReferenceType VariableDeclarator MethodInvocation LocalVariableDeclaration TryStatement instanceof MethodInvocation ReferenceType ReturnStatement ReturnStatement null SelectableChannel selectableChannel Cast selectableChannel blockingLock BasicType VariableDeclarator StatementExpression ReturnStatement StatementExpression descriptor getChannel FileChannel MethodInvocation Literal ReferenceType MethodInvocation boolean oldBlocking MethodInvocation MethodInvocation MethodInvocation MethodInvocation MemberReference fread null SelectableChannel descriptor getChannel selectableChannel isBlocking selectableChannel Literal configureBlocking MemberReference readpartial selectableChannel MemberReference configureBlocking number false number oldBlocking	1
MethodDeclaration Modifier postYieldNoScope FormalParameter StatementExpression StatementExpression public ReferenceType lastFrame MethodInvocation MethodInvocation Frame MemberReference popFrameReal popRubyClass lastFrame	0
MethodDeclaration Modifier initUI LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration TryStatement StatementExpression StatementExpression LocalVariableDeclaration StatementExpression StatementExpression StatementExpression TryStatement StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression private Modifier ReferenceType VariableDeclarator Modifier ReferenceType VariableDeclarator Modifier ReferenceType VariableDeclarator Modifier ReferenceType VariableDeclarator Modifier ReferenceType VariableDeclarator StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression CatchClause MethodInvocation MethodInvocation ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation StatementExpression CatchClause MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation final JFrame frame ClassCreator final JMenuBar menubar ClassCreator final JTextArea input ClassCreator final JButton execute ClassCreator final JButton eval ClassCreator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation CatchClauseParameter StatementExpression StatementExpression frame MethodInvocation getContentPane frame MethodInvocation getContentPane JPanel buttonPane ClassCreator frame MethodInvocation getContentPane buttonPane MemberReference MemberReference add buttonPane MemberReference MemberReference add MethodInvocation CatchClauseParameter StatementExpression StatementExpression execute ClassCreator addActionListener eval ClassCreator addActionListener frame pack frame Literal setVisible frame MemberReference setDefaultCloseOperation ReferenceType Literal ReferenceType ReferenceType Literal ReferenceType Literal ReferenceType Literal manager Literal MemberReference ClassReference declareBean manager Literal MemberReference ClassReference declareBean manager Literal MemberReference ClassReference declareBean manager Literal MemberReference ClassReference declareBean manager Literal MemberReference ClassReference declareBean BSFException excptn MethodInvocation MethodInvocation ClassCreator setLayout MemberReference MemberReference add ReferenceType ClassCreator MemberReference MemberReference add execute BorderLayout EAST eval BorderLayout EAST manager Literal Literal Literal Literal Literal exec BSFException excptn MethodInvocation MethodInvocation ReferenceType MethodDeclaration ReferenceType MethodDeclaration true JFrame EXIT_ON_CLOSE JFrame "A sample BSF application" JMenuBar JTextArea "$frame.setTitle(\"A new title\")" JButton "Execute" JButton "Eval" "frame" frame ReferenceType "menubar" menubar ReferenceType "input" input ReferenceType "execute" execute ReferenceType "eval" eval ReferenceType excptn printStackTrace JOptionPane Literal MethodInvocation showMessageDialog ReferenceType Literal Literal input BorderLayout CENTER JPanel ReferenceType Literal buttonPane BorderLayout SOUTH "ruby" "initUI" 1 1 "$frame.setJMenuBar($menubar)" excptn printStackTrace JOptionPane Literal MethodInvocation showMessageDialog ActionListener Modifier actionPerformed FormalParameter TryStatement ActionListener Modifier actionPerformed FormalParameter TryStatement JFrame JMenuBar JTextArea JButton JButton null excptn getMessage BorderLayout 12 12 FlowLayout 12 null excptn getMessage public ReferenceType e StatementExpression CatchClause public ReferenceType e LocalVariableDeclaration StatementExpression CatchClause ActionEvent MethodInvocation CatchClauseParameter StatementExpression StatementExpression ActionEvent ReferenceType VariableDeclarator MethodInvocation CatchClauseParameter StatementExpression StatementExpression manager Literal Literal Literal Literal MethodInvocation exec BSFException excptn MethodInvocation MethodInvocation String expression MethodInvocation input MethodInvocation setText BSFException excptn MethodInvocation MethodInvocation "ruby" "initUI" 1 1 input getText excptn printStackTrace JOptionPane MemberReference MethodInvocation showMessageDialog JOptionPane MemberReference Literal showInputDialog String MethodInvocation valueOf excptn printStackTrace JOptionPane MemberReference MethodInvocation showMessageDialog frame excptn getMessage frame "Please enter a Ruby expression:" manager Literal Literal Literal Literal MemberReference eval frame excptn getMessage "ruby" "initUI" 1 1 expression	1
MethodDeclaration Modifier ReferenceType checkStringType LocalVariableDeclaration IfStatement ReturnStatement public IRubyObject ReferenceType VariableDeclarator BinaryOperation BlockStatement MemberReference IRubyObject str MethodInvocation && MethodInvocation BinaryOperation StatementExpression str TypeConverter This MethodInvocation Literal convertToTypeWithCheck ! str isNil instanceof MemberReference ReferenceType Assignment MethodInvocation getRuntime "to_str" str RubyString MemberReference MethodInvocation = getString str RubyString MethodInvocation newEmptyString getRuntime	0
MethodDeclaration Modifier BasicType runWithoutWait FormalParameter FormalParameter ReturnStatement static public long ReferenceType runtime ReferenceType rawArgs MethodInvocation Ruby IRubyObject MemberReference MemberReference MethodInvocation runWithoutWait runtime rawArgs runtime getOutputStream	0
MethodDeclaration Modifier Annotation ReferenceType lineno ReturnStatement public JRubyMethod ElementValuePair IRubyObject MethodInvocation name Literal MethodInvocation getRuntime "lineno" MemberReference newFixnum line	0
MethodDeclaration Modifier BasicType getAddress FormalParameter ThrowStatement final public long BasicType offset MethodInvocation long ex	0
MethodDeclaration Modifier ReferenceType getCause ReturnStatement public Throwable MemberReference cause	0
MethodDeclaration Modifier setConcreteProxyCallback FormalParameter IfStatement synchronized final ReferenceType concreteProxyCallback BinaryOperation BlockStatement Callback == This Literal StatementExpression MemberReference null Assignment concreteProxyCallback This MemberReference = MemberReference concreteProxyCallback concreteProxyCallback	0
MethodDeclaration Modifier ReferenceType afill FormalParameter FormalParameter FormalParameter IfStatement LocalVariableDeclaration IfStatement LocalVariableDeclaration IfStatement LocalVariableDeclaration StatementExpression ReturnStatement public IRubyObject ReferenceType beginIndex ReferenceType endIndex ReferenceType value BinaryOperation BlockStatement BasicType VariableDeclarator BinaryOperation BlockStatement BasicType VariableDeclarator BinaryOperation BlockStatement ReferenceType VariableDeclarator MethodInvocation MemberReference IRubyObject IRubyObject IRubyObject instanceof MemberReference ReferenceType ThrowStatement int intIndex Cast instanceof MemberReference ReferenceType ThrowStatement int intEndIndex Cast instanceof MemberReference ReferenceType ThrowStatement Object javaObject Cast MemberReference MemberReference MemberReference fillWithExceptionHandling value beginIndex RubyInteger MethodInvocation BasicType Cast endIndex RubyInteger MethodInvocation BasicType Cast value JavaObject MethodInvocation ReferenceType MemberReference intIndex intEndIndex javaObject MethodInvocation getRuntime int ReferenceType MemberReference MethodInvocation getRuntime int ReferenceType MemberReference MethodInvocation getRuntime JavaObject value MemberReference MethodInvocation newTypeError RubyInteger beginIndex MemberReference MethodInvocation newTypeError RubyInteger endIndex BinaryOperation newTypeError beginIndex MethodInvocation getRuntime endIndex MethodInvocation getRuntime + Literal MemberReference getInteger getInteger "not a java object:" value	0
MethodDeclaration Modifier ReferenceType case478_line1812 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support MethodInvocation Literal Literal Cast Cast Cast new_args Cast getPosition null null ReferenceType MemberReference ReferenceType MemberReference ReferenceType MemberReference ReferenceType MemberReference RestArgNode ArraySelector yyVals ListNode ArraySelector yyVals BlockArgNode ArraySelector yyVals RestArgNode ArraySelector yyVals BinaryOperation BinaryOperation BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference + Literal MemberReference + Literal MemberReference - 3 yyTop - 1 yyTop 0 yyTop - 3 yyTop	1
MethodDeclaration Modifier Annotation ReferenceType squeeze FormalParameter FormalParameter LocalVariableDeclaration StatementExpression ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType arg ReferenceType VariableDeclarator MethodInvocation MemberReference name Literal compat MemberReference ThreadContext IRubyObject RubyString str MethodInvocation str MemberReference MemberReference squeeze_bang str "squeeze" CompatVersion RUBY1_8 MethodInvocation strDup context arg context getRuntime	0
MethodDeclaration Modifier BasicType intToHexBytes FormalParameter FormalParameter LocalVariableDeclaration StatementExpression ReturnStatement final static public byte BasicType i BasicType upper ReferenceType VariableDeclarator Assignment MethodInvocation int boolean String s MethodInvocation MemberReference TernaryExpression = ByteList MemberReference plain Integer MemberReference toHexString s MemberReference MethodInvocation MethodInvocation s i upper s toUpperCase s toLowerCase	1
MethodDeclaration Modifier ReferenceType defineModule FormalParameter ReturnStatement public RubyModule ReferenceType name MethodInvocation String MemberReference MemberReference defineModuleUnder name objectClass	0
MethodDeclaration Modifier ReferenceType getBacktraceFrames ReturnStatement public ThreadContext ReferenceType MemberReference RubyStackTraceElement backtraceFrames	0
MethodDeclaration Modifier Annotation ReferenceType close StatementExpression StatementExpression ReturnStatement public JRubyMethod ElementValuePair IRubyObject MethodInvocation Assignment MethodInvocation name Literal checkDir MemberReference Literal = MethodInvocation getRuntime "close" isOpen false getNil	0
MethodDeclaration Modifier free IfStatement StatementExpression StatementExpression public MemberReference BlockStatement MethodInvocation MethodInvocation holder released ThrowStatement holder free referenceSet MemberReference remove MethodInvocation holder MethodInvocation getRuntime Literal newRuntimeError "memory already freed"	0
MethodDeclaration Modifier ReferenceType coerceToJavaType FormalParameter FormalParameter FormalParameter IfStatement LocalVariableDeclaration IfStatement ReturnStatement private static Object ReferenceType ruby ReferenceType self ReferenceType javaClass ClassReference BlockStatement ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation Ruby RubyFixnum Class ! MethodInvocation ReferenceType ThrowStatement TypeCoercer coercer MethodInvocation == MemberReference Literal ThrowStatement coercer MemberReference coerce MemberReference isAssignableFrom Number MethodInvocation JAVA_COERCERS MemberReference get coercer null MethodInvocation self javaClass ruby BinaryOperation newTypeError javaClass ruby BinaryOperation newTypeError + MethodInvocation Literal + Literal MethodInvocation javaClass getCanonicalName " is not a numeric type" "Cannot coerce Fixnum to " javaClass getCanonicalName	0
MethodDeclaration Modifier BasicType isConstant ReturnStatement public boolean MethodInvocation _re isConstant	0
MethodDeclaration Modifier BasicType has_magic FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration ForStatement ReturnStatement private static boolean BasicType bytes BasicType begin BasicType end BasicType flags BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator ForControl BlockStatement Literal byte int int int boolean escape BinaryOperation boolean nocase BinaryOperation int open Literal VariableDeclaration BinaryOperation MemberReference SwitchStatement false == BinaryOperation Literal != BinaryOperation Literal 0 BasicType VariableDeclarator < MemberReference MemberReference ++ i MemberReference SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase & MemberReference MemberReference 0 & MemberReference MemberReference 0 int i MemberReference i end ArraySelector bytes Literal Literal ReturnStatement Literal StatementExpression ContinueStatement Literal IfStatement ContinueStatement Literal IfStatement BreakStatement IfStatement flags FNM_NOESCAPE flags FNM_CASEFOLD begin MemberReference '?' '*' Literal '[' MemberReference ']' BinaryOperation ReturnStatement '\\' BinaryOperation ReturnStatement BinaryOperation ReturnStatement i true ++ open > MemberReference Literal Literal && MemberReference BinaryOperation Literal && BinaryOperation MethodInvocation Literal open 0 true escape == MemberReference MemberReference false && BinaryOperation MemberReference Character Cast isLetter true i end == MemberReference Literal nocase BasicType BinaryOperation FNM_SYSCASE 0 char & MemberReference Literal ArraySelector bytes 0xFF MemberReference i	1
MethodDeclaration Modifier ReferenceType checkEncoding FormalParameter LocalVariableDeclaration IfStatement ReturnStatement final Encoding ReferenceType other ReferenceType VariableDeclarator BinaryOperation ThrowStatement MemberReference EncodingCapable Encoding enc MethodInvocation == MemberReference Literal MethodInvocation enc MemberReference isCompatibleWith enc null MethodInvocation getRuntime other BinaryOperation newEncodingCompatibilityError + BinaryOperation MethodInvocation + BinaryOperation Literal other getEncoding + Literal MemberReference " and " "incompatible character encodings: " value encoding	1
MethodDeclaration Modifier load FormalParameter FormalParameter TryStatement public ReferenceType runtime BasicType wrap LocalVariableDeclaration StatementExpression LocalVariableDeclaration LocalVariableDeclaration IfStatement StatementExpression CatchClause CatchClause Ruby boolean ReferenceType VariableDeclarator MethodInvocation ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement URL jarFile MethodInvocation runtime MethodInvocation getJRubyClassLoader JarInputStream in ClassCreator Manifest mf MethodInvocation != MemberReference Literal LocalVariableDeclaration IfStatement in close FileNotFoundException e MethodInvocation IOException e MethodInvocation resource getURL MemberReference addURL ReferenceType MethodInvocation in getManifest mf null ReferenceType VariableDeclarator BinaryOperation BlockStatement runtime MemberReference newIOErrorFromException runtime MemberReference newIOErrorFromException jarFile JarInputStream resource getInputStream String rubyInit MethodInvocation != MemberReference Literal LocalVariableDeclaration WhileStatement IfStatement e e mf MethodInvocation getMainAttributes rubyInit null ReferenceType VariableDeclarator BinaryOperation BlockStatement BinaryOperation BlockStatement Literal getValue JarEntry entry MethodInvocation && BinaryOperation MethodInvocation StatementExpression != MemberReference Literal LocalVariableDeclaration TryStatement "Ruby-Init" in getNextJarEntry != MemberReference Literal ! entry MethodInvocation getName Assignment entry null ReferenceType VariableDeclarator StatementExpression StatementExpression StatementExpression entry null MemberReference equals MemberReference MethodInvocation = IRubyObject old TernaryExpression MethodInvocation MethodInvocation MethodInvocation rubyInit entry in getNextJarEntry MethodInvocation MethodInvocation MethodInvocation runtime MethodInvocation getGlobalVariables runtime Literal MemberReference MemberReference loadFile runtime MethodInvocation getGlobalVariables runtime MethodInvocation getGlobalVariables runtime MethodInvocation getGlobalVariables runtime getNil Literal MethodInvocation set "init" in wrap Literal MemberReference set Literal isDefined Literal get "$JAR_URL" runtime BinaryOperation newString "$JAR_URL" old "$JAR_URL" "$JAR_URL" + BinaryOperation Literal + Literal MemberReference "!/" "jar:" jarFile	1
MethodDeclaration Modifier setOnceRegexp FormalParameter IfStatement public ReferenceType regexp BinaryOperation StatementExpression RubyRegexp && MemberReference BinaryOperation Assignment once == MemberReference Literal This MemberReference = onceRegexp null MemberReference regexp onceRegexp	1
MethodDeclaration Modifier run LocalVariableDeclaration LocalVariableDeclaration StatementExpression public ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation Runnable raiseBody ClassCreator Runnable raiseCatch ClassCreator method MethodInvocation MemberReference MemberReference trycatch ReferenceType MethodDeclaration ReferenceType MethodDeclaration ClassReference p raiseBody raiseCatch Runnable Modifier run StatementExpression Runnable Modifier run StatementExpression StatementExpression StatementExpression ReferenceType public MethodInvocation public MethodInvocation MethodInvocation MethodInvocation RaiseException body This branch loadThreadContext Literal MethodInvocation invokeUtilityMethod method athrow BaseBodyCompiler "unwrapRedoNextBreakOrJustLocalJump" ClassReference ClassReference ClassReference sig ReferenceType ReferenceType ReferenceType Throwable RaiseException ThreadContext	0
MethodDeclaration Modifier BasicType strLength FormalParameter IfStatement ReturnStatement private int ReferenceType enc MethodInvocation ReturnStatement MethodInvocation Encoding MemberReference singleByteOptimizable MemberReference MemberReference MemberReference strLength enc value realSize value enc	1
MethodDeclaration Modifier Annotation ReferenceType new_instance FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement LocalVariableDeclaration ForStatement TryStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType args BasicType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement ReferenceType VariableDeclarator ForControl BlockStatement LocalVariableDeclaration ReturnStatement CatchClause CatchClause CatchClause CatchClause rest Literal IRubyObject int length MemberReference Class TypeArgument types MemberReference != MemberReference MemberReference ThrowStatement Object constructorArguments ArrayCreator VariableDeclaration BinaryOperation StatementExpression ReferenceType VariableDeclarator MethodInvocation CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement CatchClauseParameter StatementExpression AssertStatement ReturnStatement CatchClauseParameter ThrowStatement true args length ? parameterTypes length types length MethodInvocation ReferenceType MemberReference BasicType VariableDeclarator >= MemberReference Literal Assignment Object result MethodInvocation JavaObject MethodInvocation MemberReference wrap IllegalArgumentException iae MethodInvocation IllegalAccessException iae MethodInvocation InvocationTargetException ite MethodInvocation Literal Literal InstantiationException ie MethodInvocation MethodInvocation getRuntime Object length int i MemberReference -- i 0 MemberReference MemberReference = constructor MemberReference newInstance getRuntime result MethodInvocation getRuntime MethodInvocation getRuntime MethodInvocation MethodInvocation getRuntime false null MethodInvocation getRuntime MemberReference MemberReference newArgumentError length ArraySelector constructorArguments ArraySelector MethodInvocation args constructorArguments BinaryOperation newTypeError Literal newTypeError getJavaSupport MethodInvocation MemberReference handleNativeException BinaryOperation newTypeError length types length MemberReference MemberReference MemberReference toJava + BinaryOperation Literal "illegal access" ite getTargetException constructor + Literal MethodInvocation i i ArraySelector types + BinaryOperation MemberReference ", ...]" "can't make instance of " constructor MethodInvocation getDeclaringClass MemberReference + BinaryOperation Literal ArraySelector MethodInvocation MethodInvocation constructorArguments getName i + Literal MethodInvocation ", got [" Literal getClass getName "expected " MethodInvocation argument_types 0 inspect	1
MethodDeclaration Modifier captureFeature FormalParameter SwitchStatement protected BasicType c MemberReference SwitchStatementCase SwitchStatementCase SwitchStatementCase int c Literal StatementExpression Literal StatementExpression BreakStatement StatementExpression BreakStatement '\n' MethodInvocation - 1 MethodInvocation MethodInvocation lineBuffer Cast append captureFeatureNewline lineBuffer Cast append BasicType MemberReference BasicType MemberReference char c char c	1
MethodDeclaration Modifier ReferenceType case491_line1877 FormalParameter FormalParameter FormalParameter IfStatement StatementExpression StatementExpression StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop MethodInvocation BlockStatement MethodInvocation MethodInvocation Assignment MemberReference Object Object int ! support Cast is_local_id StatementExpression support Cast shadowing_lvar support Cast arg_var MemberReference ClassCreator = yyVal ReferenceType MemberReference MethodInvocation ReferenceType MemberReference ReferenceType MemberReference yyVal ReferenceType MethodInvocation MethodInvocation Token ArraySelector yyVals Literal yyerror Token ArraySelector yyVals Token ArraySelector yyVals OptArgNode Cast getPosition support Cast Cast assignable BinaryOperation "formal argument must be local variable" BinaryOperation BinaryOperation ReferenceType MemberReference ReferenceType MemberReference ReferenceType MemberReference + Literal MemberReference + Literal MemberReference + Literal MemberReference Token ArraySelector yyVals Token ArraySelector yyVals Node ArraySelector yyVals - 2 yyTop - 2 yyTop - 2 yyTop BinaryOperation BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference + Literal MemberReference - 2 yyTop - 2 yyTop 0 yyTop	1
MethodDeclaration Modifier putLong FormalParameter FormalParameter StatementExpression StatementExpression final public BasicType offset BasicType value MethodInvocation MethodInvocation long long MemberReference Literal checkBounds IO MemberReference MethodInvocation MemberReference putInt64 offset 8 buffer MemberReference index value offset	1
MethodDeclaration Modifier ReferenceType case486_line1837 FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop MethodInvocation Assignment MemberReference Object Object int support Cast shadowing_lvar MemberReference Cast = yyVal ReferenceType MemberReference yyVal ReferenceType MemberReference Token ArraySelector yyVals Token ArraySelector yyVals BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference 0 yyTop 0 yyTop	1
MethodDeclaration Modifier ReferenceType fromNative FormalParameter FormalParameter ReturnStatement final public IRubyObject ReferenceType context BasicType value MethodInvocation ThreadContext long Util MethodInvocation Cast newUnsigned32 context getRuntime BasicType MemberReference int value	1
MethodDeclaration Modifier ReferenceType createHandle FormalParameter FormalParameter ReturnStatement static public Handle ReferenceType classLoader ReferenceType method MethodInvocation JRubyClassLoader Method MemberReference MemberReference MemberReference createHandle classLoader method DEBUG	0
MethodDeclaration Modifier BasicType byteListToDouble FormalParameter ReturnStatement final static public double ReferenceType bytes MethodInvocation ByteList MethodInvocation MethodInvocation MethodInvocation Literal byteArrayToDouble bytes unsafeBytes bytes begin bytes length false	0
MethodDeclaration Modifier setWithinDefined FormalParameter StatementExpression public BasicType isWithinDefined Assignment boolean This MemberReference = MemberReference isWithinDefined isWithinDefined	0
MethodDeclaration Modifier Annotation ReferenceType extended FormalParameter FormalParameter FormalParameter IfStatement LocalVariableDeclaration StatementExpression ReturnStatement static public JRubyMethod IRubyObject ReferenceType context ReferenceType self ReferenceType object BinaryOperation BlockStatement ReferenceType VariableDeclarator MethodInvocation MemberReference ThreadContext IRubyObject IRubyObject instanceof MemberReference ReferenceType ThrowStatement RubyClass singleton MethodInvocation singleton ArrayCreator include singleton self RubyModule MethodInvocation object getSingletonClass ReferenceType ArrayInitializer context MethodInvocation getRuntime IRubyObject MemberReference MemberReference MethodInvocation newTypeError self self context MethodInvocation getRuntime getModule	0
MethodDeclaration Modifier ReferenceType setShortObj FormalParameter ReturnStatement static public String ReferenceType s MethodInvocation Short String MemberReference valueOf s	0
MethodDeclaration Modifier ReferenceType getName ReturnStatement public String MemberReference name	0
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter IfStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType block MethodInvocation BlockStatement BlockStatement ThreadContext IRubyObject RubyModule String Block block isGiven LocalVariableDeclaration StatementExpression LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression ReturnStatement ReturnStatement ReferenceType VariableDeclarator MethodInvocation ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MemberReference MethodInvocation Ruby runtime MethodInvocation MemberReference createJavaCallables JavaProxy proxy MethodInvocation RubyProc proc MethodInvocation JavaConstructor constructor Cast Object cArg0 MethodInvocation proxy MethodInvocation dataWrapStruct self MemberReference MemberReference MemberReference MemberReference call context getRuntime runtime MemberReference castJavaProxy RubyProc MethodInvocation MemberReference MemberReference newProc ReferenceType MethodInvocation MemberReference MemberReference MemberReference Literal convertArg JavaObject MemberReference MethodInvocation wrap context self clazz name self self getRuntime block Block.Type LAMBDA JavaConstructor MemberReference MemberReference MemberReference findCallableArityOne context proc constructor 0 runtime constructor MemberReference newInstanceDirect self name proc cArg0	0
MethodDeclaration Modifier BasicType protectedAccessOk FormalParameter ReturnStatement private boolean ReferenceType caller MethodInvocation IRubyObject MethodInvocation getProtectedClass MemberReference isInstance caller	0
MethodDeclaration Modifier Annotation ReferenceType args ReturnStatement public JRubyMethod ElementValuePair IRubyObject MemberReference name Literal args "args"	0
MethodDeclaration Modifier BasicType intValue FormalParameter FormalParameter IfStatement ReturnStatement final public int ReferenceType context ReferenceType obj BinaryOperation BlockStatement TernaryExpression ThreadContext IRubyObject instanceof MemberReference ReferenceType ThrowStatement MethodInvocation Literal Literal obj RubyBoolean MethodInvocation obj isTrue 1 0 context MethodInvocation getRuntime Literal newTypeError "wrong argument type.  Expected true or false"	1
MethodDeclaration Modifier remove LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression public ReferenceType VariableDeclarator MethodInvocation Assignment MethodInvocation This Entry remove MemberReference expunge MemberReference MemberReference = locateNext WeakIdentityHashMap MethodInvocation entry entry entry next MemberReference removeEntry remove	0
MethodDeclaration Modifier ReferenceType case37_line446 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support MethodInvocation Cast Cast newOrNode Cast getPosition ReferenceType MemberReference ReferenceType MemberReference ReferenceType MemberReference Node ArraySelector yyVals Node ArraySelector yyVals Token ArraySelector yyVals BinaryOperation BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference + Literal MemberReference - 2 yyTop 0 yyTop - 1 yyTop	1
MethodDeclaration Modifier opElementAsgnWithAnd FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression LocalVariableDeclaration StatementExpression LocalVariableDeclaration StatementExpression SwitchStatement StatementExpression StatementExpression LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression SwitchStatement StatementExpression StatementExpression StatementExpression public ReferenceType receiver ReferenceType args ReferenceType valueCallback MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation BasicType VariableDeclarator MethodInvocation BasicType VariableDeclarator MethodInvocation MethodInvocation SwitchStatementCase SwitchStatementCase MethodInvocation MethodInvocation ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase MethodInvocation MethodInvocation MethodInvocation CompilerCallback ArgumentsCallback CompilerCallback methodCompiler MethodInvocation MethodInvocation getScriptCompiler methodCompiler loadThreadContext methodCompiler loadSelf receiver MemberReference call args MemberReference call method dup2 int argsLocal MethodInvocation methodCompiler MethodInvocation getVariableCompiler int receiverLocal MethodInvocation methodCompiler MethodInvocation getVariableCompiler args getArity Literal StatementExpression BreakStatement StatementExpression method dup methodCompiler Literal MethodInvocation invokeIRubyObject Label done ClassCreator method MemberReference ifeq method pop methodCompiler loadThreadContext methodCompiler loadSelf methodCompiler MethodInvocation getVariableCompiler methodCompiler MethodInvocation getVariableCompiler valueCallback MemberReference call methodCompiler MethodInvocation MethodInvocation getScriptCompiler args getArity Literal ThrowStatement Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement StatementExpression BreakStatement method MemberReference label methodCompiler MethodInvocation getVariableCompiler methodCompiler MethodInvocation getVariableCompiler getCacheCompiler MemberReference Literal MemberReference cacheCallSite methodCompiler methodCompiler methodCompiler MethodInvocation getVariableCompiler MemberReference setTempLocal methodCompiler MethodInvocation getVariableCompiler MemberReference setTempLocal 1 MethodInvocation MethodInvocation "isTrue" ClassReference sig ReferenceType done MemberReference getTempLocal MemberReference getTempLocal methodCompiler getCacheCompiler MemberReference Literal MemberReference cacheCallSite 0 ClassCreator 1 MethodInvocation 2 MethodInvocation 3 MethodInvocation MethodInvocation done releaseTempLocal releaseTempLocal methodCompiler "[]" CallType FUNCTIONAL grabTempLocal argsLocal grabTempLocal receiverLocal method MethodInvocation Literal MethodInvocation invokevirtual method MethodInvocation Literal MethodInvocation invokevirtual BasicType Label receiverLocal argsLocal methodCompiler "[]=" CallType FUNCTIONAL ReferenceType Literal methodCompiler Literal MethodInvocation invokeUtilityMethod methodCompiler Literal MethodInvocation invokeUtilityMethod methodCompiler Literal MethodInvocation invokeUtilityMethod methodCompiler Literal MethodInvocation invokeUtilityMethod ClassReference p "call" ClassReference ClassReference ClassReference ClassReference ClassReference sig ClassReference p "call" ClassReference ClassReference ClassReference ClassReference ClassReference sig boolean NotCompilableException "Op Element Asgn with zero-arity args" "opElementAsgnWithOrPartTwoOneArg" ClassReference ClassReference ClassReference ClassReference ClassReference ClassReference ClassReference sig "opElementAsgnWithOrPartTwoTwoArgs" ClassReference ClassReference ClassReference ClassReference ClassReference ClassReference ClassReference sig "opElementAsgnWithOrPartTwoThreeArgs" ClassReference ClassReference ClassReference ClassReference ClassReference ClassReference ClassReference sig "opElementAsgnWithOrPartTwoNArgs" ClassReference ClassReference ClassReference ClassReference ClassReference ClassReference ClassReference sig ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType CallSite IRubyObject ThreadContext IRubyObject IRubyObject IRubyObject CallSite IRubyObject ThreadContext IRubyObject IRubyObject IRubyObject IRubyObject ThreadContext IRubyObject IRubyObject IRubyObject IRubyObject CallSite IRubyObject ThreadContext IRubyObject IRubyObject IRubyObject IRubyObject CallSite IRubyObject ThreadContext IRubyObject IRubyObject IRubyObject IRubyObject CallSite IRubyObject ThreadContext IRubyObject IRubyObject IRubyObject IRubyObject CallSite	1
MethodDeclaration Modifier Annotation ReferenceType with_index FormalParameter FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType self Modifier ReferenceType block MethodInvocation name Literal frame Literal ThreadContext IRubyObject final Block MemberReference MemberReference MemberReference Literal with_index_common "with_index" true context self block "with_index"	1
MethodDeclaration Modifier ReferenceType allocate FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType runtime ReferenceType klazz ClassCreator Ruby RubyClass ReferenceType MemberReference MemberReference Fiber runtime klazz	0
MethodDeclaration Modifier ReferenceType getConstructor FormalParameter SecurityException NoSuchMethodException LocalVariableDeclaration StatementExpression StatementExpression LocalVariableDeclaration ReturnStatement public JavaProxyConstructor ReferenceType args ReferenceType VariableDeclarator MethodInvocation Assignment ReferenceType VariableDeclarator ClassCreator Class Class realArgs ArrayCreator System MemberReference Literal MemberReference Literal MemberReference arraycopy MemberReference ClassReference = Constructor constructor MethodInvocation ReferenceType MethodInvocation This MemberReference ReferenceType BinaryOperation args 0 realArgs 0 args length ArraySelector realArgs ReferenceType proxyClass MemberReference getConstructor JavaProxyConstructor getRuntime constructor Class + MemberReference Literal MemberReference JavaProxyInvocationHandler realArgs args length 1 args length	1
MethodDeclaration Modifier BasicType hashCode ReturnStatement public int BinaryOperation ^ MethodInvocation MethodInvocation MethodInvocation keyHash MethodInvocation valueHash getKey getValue	0
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType klazz ReferenceType name ReferenceType arg MethodInvocation ThreadContext IRubyObject RubyModule String IRubyObject oldMethod MemberReference MemberReference MemberReference MemberReference MemberReference call context self klazz oldName arg	0
MethodDeclaration Modifier ReferenceType callBlock FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement ReturnStatement private IRubyObject ReferenceType context ReferenceType caller ReferenceType self ReferenceType args ReferenceType block ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation BlockStatement MethodInvocation ThreadContext IRubyObject IRubyObject IRubyObject Block RubyClass selfType MethodInvocation CacheEntry myCache MemberReference myCache MemberReference typeOk ReturnStatement MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference cacheAndCall MemberReference MemberReference pollAndGetClass cache selfType MethodInvocation caller selfType block args context self context self myCache.method MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference call context self selfType methodName args block	0
MethodDeclaration Modifier Annotation ReferenceType minmax FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement IfStatement ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType self Modifier ReferenceType block Modifier ReferenceType VariableDeclarator Modifier ReferenceType VariableDeclarator Modifier ReferenceType VariableDeclarator MethodInvocation BlockStatement BlockStatement BinaryOperation BlockStatement MethodInvocation name Literal frame Literal ThreadContext IRubyObject final Block final Ruby runtime MethodInvocation final IRubyObject result ArrayCreator final ThreadContext localContext MemberReference block isGiven StatementExpression StatementExpression == MemberReference Literal StatementExpression runtime MemberReference newArrayNoCopy "minmax" true context getRuntime ReferenceType ArrayInitializer context MethodInvocation MethodInvocation ArraySelector result null Assignment result IRubyObject Literal Literal MemberReference MemberReference MemberReference ClassCreator callEach MemberReference MemberReference MemberReference ClassCreator callEach Literal MemberReference Assignment = null null runtime context self ReferenceType MethodDeclaration runtime context self ReferenceType MethodDeclaration 0 ArraySelector result MemberReference MethodInvocation = BlockCallback Modifier ReferenceType call FormalParameter FormalParameter FormalParameter StatementExpression LocalVariableDeclaration IfStatement ReturnStatement BlockCallback Modifier ReferenceType call FormalParameter FormalParameter FormalParameter LocalVariableDeclaration SynchronizedStatement ReturnStatement Literal ArraySelector result runtime getNil public IRubyObject ReferenceType ctx ReferenceType largs ReferenceType blk MethodInvocation ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement MethodInvocation public IRubyObject ReferenceType ctx ReferenceType largs ReferenceType blk ReferenceType VariableDeclarator MemberReference IfStatement MethodInvocation 0 Literal ThreadContext IRubyObject Block MemberReference MemberReference Literal checkContext IRubyObject arg MethodInvocation == MemberReference Literal StatementExpression IfStatement IfStatement runtime getNil ThreadContext IRubyObject Block IRubyObject arg MethodInvocation result BinaryOperation BlockStatement BlockStatement runtime getNil 1 localContext ctx "minmax" MemberReference MemberReference checkArgs ArraySelector result null Assignment BinaryOperation BlockStatement BinaryOperation BlockStatement MemberReference MemberReference checkArgs == MemberReference Literal StatementExpression IfStatement IfStatement runtime largs Literal MemberReference Assignment = < MethodInvocation Literal StatementExpression > MethodInvocation Literal StatementExpression runtime largs ArraySelector result null Assignment BinaryOperation BlockStatement BinaryOperation BlockStatement 0 ArraySelector result MemberReference MemberReference = RubyComparable MemberReference MethodInvocation MemberReference MemberReference cmpint 0 Assignment RubyComparable MemberReference MethodInvocation MemberReference MemberReference cmpint 0 Assignment Literal MemberReference Assignment = < MethodInvocation Literal StatementExpression > MethodInvocation Literal StatementExpression Literal ArraySelector result arg ctx block MemberReference MethodInvocation yield arg ArraySelector result MemberReference MemberReference = ctx block MemberReference MethodInvocation yield arg ArraySelector result MemberReference MemberReference = 0 ArraySelector result MemberReference MemberReference = RubyComparable MemberReference MethodInvocation MemberReference MemberReference cmpint 0 Assignment RubyComparable MemberReference MethodInvocation MemberReference MemberReference cmpint 0 Assignment 0 Literal ctx runtime MemberReference MemberReference newArray Literal ArraySelector result arg ctx runtime MemberReference MemberReference newArray Literal ArraySelector result arg Literal ArraySelector result arg ctx arg MemberReference Literal MemberReference callMethod arg ArraySelector result MemberReference MemberReference = ctx arg MemberReference Literal MemberReference callMethod arg ArraySelector result MemberReference MemberReference = 1 arg ArraySelector result 0 Literal arg ArraySelector result 1 Literal 0 Literal ctx "<=>" ArraySelector result Literal ArraySelector result arg ctx "<=>" ArraySelector result Literal ArraySelector result arg Literal 0 Literal 1 1 Literal 0 Literal Literal 1 Literal 0 1 0 0 1 1	1
MethodDeclaration Modifier branch FormalParameter StatementExpression public ReferenceType context MethodInvocation BodyCompiler context Literal pushString "global-variable"	0
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression ReturnStatement public IRubyObject ReferenceType context ReferenceType arg0 ReferenceType arg1 ReferenceType binding ReferenceType type ReferenceType VariableDeclarator Assignment MethodInvocation ThreadContext IRubyObject IRubyObject Binding Block ReferenceType IRubyObject args ArrayCreator MemberReference MethodInvocation = MemberReference MethodInvocation Literal Literal Literal MemberReference MemberReference yield Type ReferenceType ArrayInitializer args MemberReference MemberReference MemberReference prepareArgumentsForCall context RubyArray MethodInvocation MemberReference newArrayNoCopy null null true binding type IRubyObject MemberReference MemberReference context args type context getRuntime args arg0 arg1	0
MethodDeclaration Modifier BasicType getMinimumAlignment ReturnStatement final public int MethodInvocation getNativeAlignment	1
MethodDeclaration Modifier put FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression final public ReferenceType runtime ReferenceType io BasicType offset ReferenceType value MethodInvocation Ruby MemoryIO long IRubyObject io MemberReference MethodInvocation putInt offset Util MemberReference int32Value value	1
MethodDeclaration Modifier Annotation ReferenceType modulo FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context ReferenceType other MethodInvocation name Literal ThreadContext IRubyObject MemberReference Literal MemberReference callMethod "modulo" context "%" other	0
MethodDeclaration Modifier Annotation ReferenceType close_write StatementExpression StatementExpression ReturnStatement public JRubyMethod ElementValuePair IRubyObject MethodInvocation Assignment MethodInvocation name Literal checkWritable MemberReference Literal = MethodInvocation getRuntime "close_write" closedWrite true getNil	1
MethodDeclaration Modifier Annotation ReferenceType to_s FormalParameter IfStatement static public JRubyMethod IRubyObject ReferenceType recv BinaryOperation BlockStatement BlockStatement IRubyObject != MethodInvocation Literal ReturnStatement ReturnStatement recv dataGetStruct null Cast Cast ReferenceType MethodInvocation ReferenceType MemberReference JavaObject recv dataGetStruct RubyObject recv	1
MethodDeclaration Modifier ReferenceType match_post FormalParameter IfStatement LocalVariableDeclaration LocalVariableDeclaration IfStatement ReturnStatement static public IRubyObject ReferenceType match MethodInvocation ReturnStatement ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation ReturnStatement MethodInvocation IRubyObject match isNil MemberReference RubyMatchData m Cast Ruby runtime MethodInvocation == MemberReference Literal MethodInvocation m.str MethodInvocation MemberReference MemberReference BinaryOperation makeShared match ReferenceType MemberReference m getRuntime m begin - 1 runtime getNil MemberReference infectBy runtime m end - MethodInvocation MemberReference RubyMatchData match m m.str MemberReference getByteList m end realSize	1
MethodDeclaration Modifier Annotation ReferenceType toString ReturnStatement public Override String MethodInvocation value toString	0
MethodDeclaration Modifier encodeLongBigEndian FormalParameter FormalParameter StatementExpression StatementExpression private static ReferenceType result BasicType l MethodInvocation MethodInvocation ByteList long MemberReference Cast encodeIntBigEndian MemberReference Cast encodeIntBigEndian result BasicType BinaryOperation result BasicType BinaryOperation int >>> MemberReference Literal int & MemberReference Literal l 32 l 0xffffffff	0
MethodDeclaration Modifier Annotation ReferenceType atan2 FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair RubyFloat ReferenceType recv ReferenceType x ReferenceType y BasicType VariableDeclarator BasicType VariableDeclarator MethodInvocation name Literal required Literal module Literal visibility MemberReference IRubyObject IRubyObject IRubyObject double valuea Cast double valueb Cast RubyFloat MethodInvocation MethodInvocation newFloat "atan2" 2 true Visibility PRIVATE ReferenceType MethodInvocation ReferenceType MethodInvocation recv getRuntime Math MemberReference MemberReference atan2 RubyFloat RubyKernel MemberReference MemberReference new_float RubyFloat RubyKernel MemberReference MemberReference new_float valuea valueb recv x recv y	0
MethodDeclaration Modifier ReferenceType slice FormalParameter FormalParameter LocalVariableDeclaration StatementExpression ReturnStatement final static public ByteBuffer ReferenceType buf BasicType offset ReferenceType VariableDeclarator MethodInvocation MethodInvocation ByteBuffer int ByteBuffer tmp MethodInvocation tmp Cast position tmp slice buf duplicate BasicType MemberReference int offset	1
MethodDeclaration Modifier BasicType singleQuote IOException StatementExpression StatementExpression ReturnStatement private int Assignment Assignment MemberReference MemberReference ClassCreator = MemberReference ClassCreator = Tokens tSTRING_BEG lex_strterm ReferenceType MemberReference Literal Literal yaccValue ReferenceType Literal MethodInvocation StringTerm str_squote '\0' '\'' Token "'" getPosition	0
MethodDeclaration Modifier clear StatementExpression public MethodInvocation rb_clear	0
MethodDeclaration Modifier Annotation ReferenceType op_div FormalParameter FormalParameter LocalVariableDeclaration IfStatement IfStatement IfStatement ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context ReferenceType other ReferenceType VariableDeclarator BinaryOperation BlockStatement BinaryOperation BlockStatement BinaryOperation BlockStatement ClassCreator name Literal ThreadContext IRubyObject RubyBigDecimal val MethodInvocation == MemberReference Literal ReturnStatement || BinaryOperation MethodInvocation ReturnStatement || MethodInvocation MethodInvocation ReturnStatement MethodInvocation ReferenceType MethodInvocation This "div" MemberReference Literal getVpValue val null MethodInvocation || MethodInvocation MethodInvocation val isNaN MethodInvocation isInfinity val isInfinity MethodInvocation setResult RubyBigDecimal getRuntime MemberReference MethodInvocation other false MemberReference Literal MemberReference callCoerced isNaN val isZero MethodInvocation newNaN MethodInvocation newNaN value MemberReference divideToIntegralValue context "div" other getRuntime getRuntime val value	1
MethodDeclaration Modifier ensureClassVariablesSettable LocalVariableDeclaration IfStatement IfStatement IfStatement protected final ReferenceType VariableDeclarator BinaryOperation BlockStatement BinaryOperation BlockStatement MethodInvocation BlockStatement Ruby runtime MethodInvocation && MethodInvocation BinaryOperation ReturnStatement && BinaryOperation MethodInvocation ThrowStatement isFrozen IfStatement getRuntime ! isFrozen || BinaryOperation MethodInvocation >= MethodInvocation Literal ! isTaint MethodInvocation BinaryOperation BlockStatement BlockStatement < MethodInvocation Literal isTaint runtime getSafeLevel 4 runtime MemberReference newSecurityError instanceof This ReferenceType ThrowStatement ThrowStatement runtime getSafeLevel 4 ERR_INSECURE_SET_CONSTANT RubyModule MethodInvocation MethodInvocation runtime MemberReference newFrozenError runtime Literal newFrozenError ERR_FROZEN_CONST_TYPE ""	0
MethodDeclaration Modifier compileColon3 FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration StatementExpression IfStatement public ReferenceType node ReferenceType context BasicType expr ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MemberReference StatementExpression Node BodyCompiler boolean Colon3Node iVisited Cast String name MethodInvocation context MemberReference retrieveConstantFromObject ! expr MethodInvocation ReferenceType MemberReference iVisited getName name context consumeCurrentValue Colon3Node node	1
MethodDeclaration Modifier Annotation ReferenceType getMethods ReturnStatement public Override Map TypeArgument TypeArgument MethodInvocation ReferenceType ReferenceType delegate getMethods String DynamicMethod	0
MethodDeclaration Modifier ReferenceType getQuotedPattern FormalParameter IfStatement LocalVariableDeclaration ReturnStatement private Regex ReferenceType obj BinaryOperation ReturnStatement ReferenceType VariableDeclarator MethodInvocation IRubyObject instanceof MemberReference ReferenceType Cast Ruby runtime MethodInvocation RubyRegexp MemberReference MethodInvocation MethodInvocation Literal getQuotedRegexpFromCache obj RubyRegexp ReferenceType MemberReference getRuntime runtime MemberReference MemberReference getStringForPattern runtime MethodInvocation getKCode 0 RubyRegexp obj value obj getEncoding	1
MethodDeclaration Modifier BasicType compare FormalParameter FormalParameter ReturnStatement public int ReferenceType o1 ReferenceType o2 BinaryOperation String String - MethodInvocation MethodInvocation SAMPLES MemberReference get SAMPLES MemberReference get o2 o1	0
MethodDeclaration Modifier Annotation ReferenceType getc FormalParameter FormalParameter StatementExpression LocalVariableDeclaration ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv MethodInvocation ReferenceType VariableDeclarator MethodInvocation name Literal module Literal visibility MemberReference ThreadContext IRubyObject context MethodInvocation MethodInvocation getRuntime IRubyObject defin MethodInvocation defin MemberReference Literal callMethod "getc" true PRIVATE getWarnings MemberReference Literal Literal Literal warn context MethodInvocation MethodInvocation getRuntime context "getc" ID DEPRECATED_METHOD "getc is obsolete; use STDIN.getc instead" "getc" "STDIN.getc" getGlobalVariables Literal get "$stdin"	0
MethodDeclaration Modifier ReferenceType case441_line1649 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop MethodInvocation MemberReference Object Object int Literal yyerror yyVal "formal argument cannot be a constant"	1
MethodDeclaration Modifier ReferenceType childNodes IfStatement ReturnStatement public List TypeArgument BinaryOperation ReturnStatement MethodInvocation ReferenceType != MemberReference Literal MethodInvocation Node MemberReference MemberReference MemberReference MemberReference createList Node post null Node MemberReference MemberReference MemberReference MemberReference MemberReference createList pre optArgs restArgNode blockArgNode pre optArgs restArgNode post blockArgNode	1
MethodDeclaration Modifier Annotation ReferenceType scan_full FormalParameter FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType regex ReferenceType s ReferenceType f MethodInvocation name Literal required Literal IRubyObject IRubyObject IRubyObject MemberReference MethodInvocation MethodInvocation Literal scan "scan_full" 3 regex s isTrue f isTrue true	1
MethodDeclaration Modifier ReferenceType each_slice FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement LocalVariableDeclaration StatementExpression IfStatement ReturnStatement static public IRubyObject ReferenceType context ReferenceType self ReferenceType arg Modifier ReferenceType block Modifier BasicType VariableDeclarator Modifier ReferenceType VariableDeclarator BinaryOperation ThrowStatement Modifier ReferenceType VariableDeclarator MethodInvocation BinaryOperation StatementExpression MethodInvocation ThreadContext IRubyObject IRubyObject final Block final int size MethodInvocation final Ruby runtime MethodInvocation <= MemberReference Literal MethodInvocation final RubyArray result ArrayCreator RubyEnumerable MemberReference MemberReference MemberReference ClassCreator callEach > MemberReference Literal MethodInvocation context MethodInvocation getRuntime RubyNumeric MemberReference num2int context getRuntime size 0 runtime Literal newArgumentError ReferenceType ArrayInitializer runtime context self ReferenceType MethodDeclaration ArraySelector MethodInvocation result 0 block MemberReference MemberReference yield getNil arg "invalid slice size" RubyArray MethodInvocation BlockCallback Modifier ReferenceType call FormalParameter FormalParameter FormalParameter StatementExpression IfStatement ReturnStatement Literal size context ArraySelector result runtime MemberReference newArray public IRubyObject ReferenceType ctx ReferenceType largs ReferenceType blk MemberReference BinaryOperation BlockStatement MethodInvocation 0 Literal size ThreadContext IRubyObject Block ArraySelector MethodInvocation result == MemberReference MemberReference StatementExpression StatementExpression runtime getNil 0 Literal MemberReference append ArraySelector MethodInvocation result size MethodInvocation Assignment 0 ArraySelector largs Literal size block MemberReference MemberReference yield MemberReference MethodInvocation = Literal 0 ctx ArraySelector result ArraySelector result runtime MemberReference newArray 0 Literal Literal size 0 0	1
MethodDeclaration Modifier Annotation ReferenceType getValues ReturnStatement public Override IRubyObject ArrayCreator ReferenceType ArrayInitializer IRubyObject MemberReference MemberReference MemberReference variableValueZero variableValueOne variableValueTwo	0
MethodDeclaration Modifier BasicType getCodeSize ReturnStatement public long MethodInvocation codeSize get	0
MethodDeclaration Modifier ReferenceType rehash LocalVariableDeclaration LocalVariableDeclaration IfStatement LocalVariableDeclaration LocalVariableDeclaration StatementExpression LocalVariableDeclaration LocalVariableDeclaration ForStatement StatementExpression ReturnStatement private SymbolEntry ReferenceType VariableDeclarator BasicType VariableDeclarator BinaryOperation BlockStatement BasicType VariableDeclarator ReferenceType VariableDeclarator Assignment BasicType VariableDeclarator ReferenceType VariableDeclarator ForControl BlockStatement Assignment MemberReference SymbolEntry oldTable MemberReference int oldCapacity >= Assignment MemberReference ReturnStatement int newCapacity BinaryOperation SymbolEntry newTable ArrayCreator MemberReference Cast = int sizeMask BinaryOperation SymbolEntry e VariableDeclaration BinaryOperation StatementExpression IfStatement MemberReference MemberReference = newTable symbolTable MemberReference MemberReference = MAXIMUM_CAPACITY MemberReference << MemberReference Literal ReferenceType MemberReference threshold BasicType BinaryOperation - MemberReference Literal BasicType VariableDeclarator >= MemberReference Literal Assignment BinaryOperation BlockStatement symbolTable newTable oldCapacity oldTable length oldTable oldCapacity 1 SymbolEntry newCapacity int * MemberReference MemberReference newCapacity 1 int i MemberReference -- i 0 MemberReference MemberReference = != MemberReference Literal LocalVariableDeclaration LocalVariableDeclaration IfStatement newCapacity loadFactor oldCapacity e ArraySelector oldTable e null ReferenceType VariableDeclarator BasicType VariableDeclarator BinaryOperation StatementExpression BlockStatement MemberReference SymbolEntry next MemberReference int idx BinaryOperation == MemberReference Literal Assignment LocalVariableDeclaration LocalVariableDeclaration ForStatement StatementExpression ForStatement i e next & MemberReference MemberReference next null MemberReference MemberReference = ReferenceType VariableDeclarator BasicType VariableDeclarator ForControl BlockStatement Assignment ForControl BlockStatement e hash sizeMask ArraySelector newTable e SymbolEntry lastRun MemberReference int lastIdx MemberReference VariableDeclaration BinaryOperation Assignment LocalVariableDeclaration IfStatement MemberReference MemberReference = VariableDeclaration BinaryOperation Assignment LocalVariableDeclaration LocalVariableDeclaration StatementExpression MemberReference e idx ReferenceType VariableDeclarator != MemberReference Literal MemberReference MemberReference = BasicType VariableDeclarator BinaryOperation BlockStatement ArraySelector newTable lastRun ReferenceType VariableDeclarator != MemberReference MemberReference MemberReference MemberReference = BasicType VariableDeclarator ReferenceType VariableDeclarator Assignment idx SymbolEntry last MemberReference last null last last next int k BinaryOperation != MemberReference MemberReference StatementExpression StatementExpression MemberReference SymbolEntry p MemberReference p lastRun p p next int k BinaryOperation SymbolEntry n MemberReference MemberReference ClassCreator = next & MemberReference MemberReference k lastIdx Assignment Assignment lastIdx e & MemberReference MemberReference ArraySelector newTable ArraySelector newTable ReferenceType MemberReference MemberReference MemberReference MemberReference last hash sizeMask MemberReference MemberReference = MemberReference MemberReference = p hash sizeMask MemberReference MemberReference SymbolEntry p hash p name p symbol n lastIdx k lastRun last k k	1
MethodDeclaration Modifier Annotation Annotation ReferenceType to_s LocalVariableDeclaration IfStatement ReturnStatement public JRubyMethod Override IRubyObject ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation Object dataStruct MethodInvocation != MemberReference Literal LocalVariableDeclaration IfStatement ReturnStatement RubyString MethodInvocation newEmptyString dataGetStruct dataStruct null ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation getRuntime String stringValue MethodInvocation != MemberReference Literal ReturnStatement MethodInvocation getRuntime dataStruct toString stringValue null MethodInvocation getNil RubyString MethodInvocation MethodInvocation newUnicodeString getRuntime dataStruct toString	0
MethodDeclaration Modifier addBuiltinLibrary FormalParameter FormalParameter StatementExpression public ReferenceType name ReferenceType library MethodInvocation String Library builtinLibraries MemberReference MemberReference put name library	0
MethodDeclaration Modifier ReferenceType case261_line1004 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference Cast = yyVal yyVal ReferenceType MemberReference ListNode ArraySelector yyVals BinaryOperation + Literal MemberReference - 2 yyTop	1
MethodDeclaration Modifier ReferenceType getLast ReturnStatement public Node TernaryExpression BinaryOperation Literal MethodInvocation == MethodInvocation Literal null list BinaryOperation get list size 0 - MethodInvocation Literal list size 1	1
MethodDeclaration Modifier ReferenceType case249_line967 FormalParameter FormalParameter FormalParameter ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop MemberReference Object Object int yyVal	1
MethodDeclaration Modifier ReferenceType getFlowDirection ReturnStatement public DF_Direction MemberReference _direction	0
MethodDeclaration Modifier ReferenceType keySet ReturnStatement public Set ClassCreator ReferenceType MethodDeclaration MethodDeclaration MethodDeclaration AbstractSet Modifier ReferenceType iterator ReturnStatement Modifier BasicType size ReturnStatement Modifier ReferenceType toArray FormalParameter ReturnStatement public Iterator MethodInvocation public int This public Object ReferenceType arr MethodInvocation keyIterator GenericMap MethodInvocation Object GenericMap MemberReference MethodInvocation MethodInvocation toArray size arr size iterator	0
MethodDeclaration Modifier internalRaise FormalParameter LocalVariableDeclaration LocalVariableDeclaration StatementExpression public ReferenceType args ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation IRubyObject Ruby runtime MethodInvocation IRubyObject exception MethodInvocation ClassCreator receiveMail getRuntime MemberReference MemberReference MemberReference prepareRaiseException ReferenceType This This MemberReference MemberReference runtime args Block NULL_BLOCK ThreadService ReferenceType ThreadService.Event.Type RAISE exception Event	0
MethodDeclaration Modifier ReferenceType create FormalParameter ReturnStatement public LoadService ReferenceType runtime ClassCreator Ruby ReferenceType MemberReference LoadService runtime	0
MethodDeclaration Modifier BasicType getInOutFlags ReturnStatement public int MemberReference inout	0
MethodDeclaration Modifier ReferenceType createJavaObjectClass FormalParameter FormalParameter LocalVariableDeclaration StatementExpression StatementExpression StatementExpression ReturnStatement static public RubyClass ReferenceType runtime ReferenceType javaModule ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MemberReference Ruby RubyModule RubyClass result MethodInvocation MemberReference MemberReference registerRubyMethods result MethodInvocation getMetaClass result MethodInvocation getMetaClass result javaModule Literal MethodInvocation MemberReference defineClassUnder runtime result Literal undefineMethod Literal undefineMethod "JavaObject" runtime getObject JAVA_OBJECT_ALLOCATOR "new" "allocate"	1
MethodDeclaration Modifier ReferenceType formatDouble FormalParameter ReturnStatement private static String BasicType x MethodInvocation double pattern MethodInvocation MethodInvocation matcher Literal replaceFirst String Literal MemberReference format "$1" "%.32g" x	0
MethodDeclaration Modifier Annotation ReferenceType select FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType block ReferenceType VariableDeclarator Modifier ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement MemberReference name Literal frame Literal compat MemberReference ThreadContext Block Ruby runtime MethodInvocation final RubyArray result == MemberReference Literal IfStatement LocalVariableDeclaration StatementExpression StatementExpression StatementExpression LocalVariableDeclaration ForStatement result "select" true CompatVersion RUBY1_8 context getRuntime regs null BinaryOperation ReturnStatement ReferenceType VariableDeclarator MethodInvocation Assignment Assignment BasicType VariableDeclarator ForControl BlockStatement < MemberReference Literal MethodInvocation IRubyObject s MethodInvocation s MethodInvocation setTaint MemberReference TernaryExpression = MemberReference MethodInvocation = boolean taint MethodInvocation VariableDeclaration BinaryOperation MemberReference LocalVariableDeclaration IfStatement IfStatement begin 0 runtime newEmptyArray str MemberReference MemberReference BinaryOperation substr isTaint result MethodInvocation MethodInvocation MethodInvocation result runtime newArray isTaint BasicType VariableDeclarator < MemberReference MemberReference ++ i ReferenceType VariableDeclarator MemberReference StatementExpression MethodInvocation StatementExpression runtime begin - MemberReference MemberReference block MethodInvocation MemberReference MemberReference yield runtime MemberReference newArray runtime newEmptyArray int i Literal i regs numRegs IRubyObject s MethodInvocation taint MethodInvocation block MethodInvocation MemberReference MemberReference yield MethodInvocation end begin isTrue context s s 0 str MemberReference MemberReference BinaryOperation substr s Literal setTaint isTrue context s result MemberReference append runtime regs ArraySelector beg - MemberReference MemberReference true s MemberReference regs ArraySelector end regs ArraySelector beg i MemberReference MemberReference i i	1
MethodDeclaration Modifier ReferenceType autoloadFor FormalParameter ReturnStatement public IAutoloadMethod ReferenceType name MethodInvocation String autoloadMap MemberReference get name	0
MethodDeclaration Modifier Annotation write FormalParameter TryStatement public Override BasicType b StatementExpression CatchClause byte MethodInvocation CatchClauseParameter StatementExpression ClassCreator writeLine UnsupportedEncodingException ex MethodInvocation ReferenceType MemberReference Literal ClassCreator writeLine String b "UTF-8" ReferenceType MemberReference String b	0
MethodDeclaration Modifier get FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression final public BasicType offset BasicType dst BasicType off BasicType len MethodInvocation MethodInvocation long float int int MemberReference BinaryOperation checkBounds IO BinaryOperation MemberReference MemberReference MemberReference getFloatArray offset << MemberReference Literal + MemberReference MemberReference dst off len len 2 address offset	0
MethodDeclaration Modifier BasicType getClassLoadCount ReturnStatement public int MethodInvocation classLoadCount get	0
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType context ReferenceType self ReferenceType klazz ReferenceType name ReferenceType arg1 ReferenceType arg2 ReferenceType arg3 ReferenceType block MethodInvocation ThreadContext IRubyObject RubyModule String IRubyObject IRubyObject IRubyObject Block method MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference call context self klazz name arg1 arg2 arg3 block	1
MethodDeclaration Modifier ReferenceType getSymbolTable ReturnStatement public RubySymbol ReferenceType MemberReference SymbolTable symbolTable	0
MethodDeclaration setInteger FormalParameter StatementExpression ReferenceType integerClass Assignment RubyClass This MemberReference = MemberReference integerClass integerClass	0
MethodDeclaration Modifier ReferenceType removeInternalVariable FormalParameter AssertStatement ReturnStatement public Object ReferenceType name MethodInvocation MethodInvocation String ! IdUtil MemberReference isRubyVariable MemberReference variableTableRemove name name	1
MethodDeclaration Modifier setFrozen FormalParameter IfStatement public BasicType frozen MemberReference BlockStatement BlockStatement boolean frozen StatementExpression StatementExpression Assignment Assignment MemberReference MemberReference |= MemberReference MemberReference &= flags FROZEN_F flags ~ FROZEN_F	0
MethodDeclaration Modifier ReferenceType currentBinding FormalParameter FormalParameter LocalVariableDeclaration ReturnStatement public Binding ReferenceType self ReferenceType visibility ReferenceType VariableDeclarator ClassCreator IRubyObject Visibility Frame frame MethodInvocation ReferenceType MemberReference MemberReference MemberReference MethodInvocation MethodInvocation MemberReference MemberReference getCurrentFrame Binding self frame visibility getRubyClass getCurrentScope file line	0
MethodDeclaration Modifier setArgValues FormalParameter FormalParameter AssertStatement public ReferenceType values BasicType size BinaryOperation BinaryOperation IRubyObject int <= MemberReference MemberReference + BinaryOperation Literal size SIZE + BinaryOperation MemberReference " variables" + This Literal size MethodInvocation MethodInvocation " does not support scopes with " getClass getSimpleName	1
MethodDeclaration Modifier Annotation ReferenceType recv FormalParameter FormalParameter LocalVariableDeclaration TryStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context ReferenceType args ReferenceType VariableDeclarator ReturnStatement CatchClause CatchClause CatchClause rest Literal ThreadContext IRubyObject OpenFile openFile MethodInvocation MethodInvocation CatchClauseParameter ThrowStatement CatchClauseParameter ReturnStatement CatchClauseParameter IfStatement ThrowStatement true getOpenFileChecked RubyString MethodInvocation MethodInvocation newString BadDescriptorException e MethodInvocation EOFException e MethodInvocation IOException e Literal BlockStatement MethodInvocation context getRuntime openFile MethodInvocation getMainStream context MethodInvocation getRuntime context MethodInvocation getRuntime MethodInvocation "Socket not open" ThrowStatement context MethodInvocation getRuntime MethodInvocation read newErrnoEBADFError getNil MethodInvocation equals MethodInvocation MethodInvocation newSystemCallError RubyNumeric MemberReference fix2int e getMessage context MethodInvocation getRuntime e getMessage ArraySelector args MethodInvocation newIOError Literal e getMessage 0	1
MethodDeclaration Modifier ReferenceType getJumpTarget ReturnStatement public JumpTarget MemberReference jumpTarget	0
MethodDeclaration Modifier assertSetValue FormalParameter FormalParameter AssertStatement private BasicType offset ReferenceType value BinaryOperation BinaryOperation int IRubyObject < MemberReference MemberReference + BinaryOperation This offset variableValues length + BinaryOperation Literal + BinaryOperation MemberReference ", O: " + BinaryOperation Literal value + Literal MemberReference " to " "Setting " offset	1
MethodDeclaration Modifier Annotation ReferenceType as FormalParameter ReturnStatement public Override IRubyObject ReferenceType javaClass MethodInvocation Class MiniJava MethodInvocation MethodInvocation javaToRuby getRuntime MethodInvocation This MemberReference coerceToJavaType getRuntime javaClass	0
MethodDeclaration Modifier Annotation ReferenceType op_gt FormalParameter FormalParameter IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType other BinaryOperation BlockStatement MethodInvocation name Literal required Literal ThreadContext IRubyObject instanceof MemberReference ReferenceType ReturnStatement RubyComparable MemberReference This MemberReference op_gt ">" 1 other RubyTime MethodInvocation context other MethodInvocation getRuntime BinaryOperation newBoolean > MethodInvocation Literal Cast cmp 0 ReferenceType MemberReference RubyTime other	1
MethodDeclaration Modifier compileOpAsgnOr FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement StatementExpression IfStatement public ReferenceType node ReferenceType context BasicType expr Modifier ReferenceType VariableDeclarator MethodInvocation BlockStatement BlockStatement MethodInvocation MemberReference StatementExpression Node BodyCompiler boolean final OpAsgnOrNode orNode Cast MethodInvocation needsDefinitionCheck StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression context pollThreadEvents ! expr MethodInvocation ReferenceType MemberReference orNode getFirstNode MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation context consumeCurrentValue OpAsgnOrNode node MethodInvocation MemberReference compileGetDefinitionBase context ClassCreator ClassCreator isNull MethodInvocation MemberReference Literal compile context duplicateCurrentValue context ClassCreator ClassCreator performBooleanBranch orNode getFirstNode context ReferenceType MethodDeclaration ReferenceType MethodDeclaration orNode getFirstNode context true ReferenceType MethodDeclaration ReferenceType MethodDeclaration BranchCallback Modifier branch FormalParameter StatementExpression BranchCallback Modifier branch FormalParameter StatementExpression StatementExpression StatementExpression BranchCallback Modifier branch FormalParameter BranchCallback Modifier branch FormalParameter StatementExpression StatementExpression public ReferenceType context MethodInvocation public ReferenceType context MethodInvocation MethodInvocation MethodInvocation public ReferenceType context public ReferenceType context MethodInvocation MethodInvocation BodyCompiler MethodInvocation MemberReference Literal compile BodyCompiler MethodInvocation MemberReference Literal compile context duplicateCurrentValue context ClassCreator ClassCreator performBooleanBranch BodyCompiler BodyCompiler context consumeCurrentValue MethodInvocation MemberReference Literal compile orNode getSecondNode context true orNode getFirstNode context true ReferenceType MethodDeclaration ReferenceType MethodDeclaration orNode getSecondNode context true BranchCallback Modifier branch FormalParameter BranchCallback Modifier branch FormalParameter StatementExpression StatementExpression public ReferenceType context public ReferenceType context MethodInvocation MethodInvocation BodyCompiler BodyCompiler context consumeCurrentValue MethodInvocation MemberReference Literal compile orNode getSecondNode context true	1
MethodDeclaration Modifier Annotation finish IOException StatementExpression StatementExpression StatementExpression public Override MethodInvocation SuperMethodInvocation MethodInvocation writeHeaderIfNeeded finish writeTrailer	0
MethodDeclaration Modifier ReferenceType case232_line925 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support Cast ClassCreator arg_append ReferenceType MemberReference ReferenceType MethodInvocation Cast Node ArraySelector yyVals Hash19Node getPosition ReferenceType MemberReference BinaryOperation ListNode ArraySelector yyVals + Literal MemberReference BinaryOperation - 3 yyTop + Literal MemberReference - 1 yyTop	1
MethodDeclaration Modifier waitUntilReady IOException InterruptedException WhileStatement public BinaryOperation BlockStatement == MethodInvocation Literal StatementExpression ready 0 MethodInvocation Thread Literal sleep 10	0
MethodDeclaration Modifier BasicType isBackrefLastlineScope ReturnStatement public boolean MemberReference isBackrefLastlineScope	0
MethodDeclaration Modifier beginClosure FormalParameter FormalParameter StatementExpression StatementExpression StatementExpression IfStatement IfStatement public ReferenceType argsCallback ReferenceType scope MethodInvocation MethodInvocation MethodInvocation BinaryOperation BlockStatement BinaryOperation BlockStatement CompilerCallback StaticScope methodCompiler loadThreadContext methodCompiler Literal MethodInvocation invokeThreadContext method MethodInvocation astore != MemberReference Literal ForStatement StatementExpression != MemberReference Literal StatementExpression StatementExpression "getCurrentScope" ClassReference sig methodCompiler getDynamicScopeIndex scope null ForControl BlockStatement Assignment argsCallback null MethodInvocation MethodInvocation ReferenceType VariableDeclaration BinaryOperation MemberReference StatementExpression StatementExpression MemberReference MethodInvocation += method MemberReference aload argsCallback MemberReference call DynamicScope BasicType VariableDeclarator < MemberReference MethodInvocation ++ i MethodInvocation MethodInvocation tempVariableIndex scope getNumberOfVariables argsIndex methodCompiler int i Literal i scope getNumberOfVariables methodCompiler loadNil MemberReference Literal assignLocalVariable 0 i false	0
MethodDeclaration Modifier Annotation ReferenceType listen FormalParameter ReturnStatement public Deprecated IRubyObject ReferenceType backlog MethodInvocation IRubyObject MethodInvocation MemberReference listen MethodInvocation getRuntime backlog getCurrentContext	1
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter IfStatement ReturnStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType arg0 ReferenceType arg1 ReferenceType block BinaryOperation StatementExpression MethodInvocation ThreadContext IRubyObject RubyModule String IRubyObject IRubyObject Block == MemberReference Literal MethodInvocation compiledMethod MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference call compiledMethod null initializeMethod context self clazz name arg0 arg1 block	1
MethodDeclaration Modifier BasicType getStartLine ReturnStatement public int MemberReference line	0
MethodDeclaration Modifier ReferenceType getFloatDomainError ReturnStatement public RubyClass MemberReference floatDomainError	0
MethodDeclaration Modifier Annotation assignArray FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration SwitchStatement ForStatement IfStatement public Override ReferenceType runtime ReferenceType context ReferenceType self ReferenceType arg ReferenceType block ReferenceType VariableDeclarator BasicType VariableDeclarator MemberReference SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase ForControl BlockStatement BinaryOperation BlockStatement IfStatement Ruby ThreadContext IRubyObject IRubyObject Block RubyArray values Cast int valueLength MethodInvocation valueLength Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement VariableDeclaration BinaryOperation MemberReference StatementExpression < MemberReference MemberReference StatementExpression BinaryOperation BlockStatement BlockStatement ReferenceType MemberReference values getLength 0 MethodInvocation 1 MethodInvocation 2 MethodInvocation 3 MethodInvocation BasicType VariableDeclarator && BinaryOperation BinaryOperation ++ i MethodInvocation valueLength preLength MethodInvocation == MemberReference MemberReference StatementExpression StatementExpression RubyArray arg MemberReference MemberReference MemberReference MemberReference assign MemberReference MemberReference MemberReference MethodInvocation MemberReference assign MemberReference MemberReference MemberReference MethodInvocation MethodInvocation MemberReference assign MemberReference MemberReference MemberReference MethodInvocation MethodInvocation MethodInvocation MemberReference assign int i Literal < MemberReference MemberReference < MemberReference MemberReference pre MethodInvocation MemberReference get MemberReference MemberReference MemberReference MemberReference MemberReference assignNilTo valueLength preLength MethodInvocation MethodInvocation runtime context self block runtime context self values Literal eltInternal block runtime context self values Literal eltInternal values Literal eltInternal block runtime context self values Literal eltInternal values Literal eltInternal values Literal eltInternal block 0 i preLength i valueLength MemberReference MemberReference MemberReference MethodInvocation MemberReference Literal assign i runtime context self block valueLength rest MemberReference MemberReference MemberReference MethodInvocation MemberReference Literal assign rest MemberReference MemberReference MemberReference MethodInvocation MemberReference Literal assign 0 0 1 0 1 2 runtime context self values MemberReference eltInternal block false runtime context self runtime MemberReference newArrayNoCopyLight block true runtime context self values MemberReference BinaryOperation subseqLight block true i IRubyObject NULL_ARRAY preLength - MemberReference MemberReference valueLength preLength	1
MethodDeclaration Modifier ReferenceType foo ReturnStatement public String Literal "MyClass"	0
MethodDeclaration Modifier ReferenceType keyIterator ReturnStatement protected Iterator ClassCreator ReferenceType KeyIterator	0
MethodDeclaration Modifier ReferenceType case386_line1458 FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MethodInvocation MemberReference Object Object int MemberReference ClassCreator = support popCurrentScope yyVal yyVal ReferenceType MethodInvocation Cast Cast MethodInvocation IterNode Cast getPosition ReferenceType MemberReference ReferenceType MemberReference support getCurrentScope ReferenceType MemberReference ArgsNode ArraySelector yyVals Node ArraySelector yyVals Token ArraySelector yyVals BinaryOperation BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference + Literal MemberReference - 2 yyTop - 1 yyTop - 4 yyTop	1
MethodDeclaration Modifier setProfile FormalParameter StatementExpression public ReferenceType newProfile Assignment Profile MemberReference MemberReference = profile newProfile	0
MethodDeclaration Modifier initScopes FormalParameter StatementExpression final public BasicType size Assignment int MemberReference ArrayCreator = scopes ReferenceType MemberReference StaticScope size	0
MethodDeclaration Modifier Annotation ReferenceType op_lt FormalParameter FormalParameter SwitchStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType other MethodInvocation SwitchStatementCase SwitchStatementCase name Literal required Literal ThreadContext IRubyObject other MemberReference getMetaClass MemberReference MemberReference MemberReference LocalVariableDeclaration ReturnStatement ReturnStatement "<" 1 index ClassIndex FIXNUM ClassIndex BIGNUM ClassIndex FLOAT BasicType VariableDeclarator MethodInvocation MethodInvocation double b Cast RubyBoolean MethodInvocation BinaryOperation newBoolean MemberReference Literal MemberReference coerceRelOp ReferenceType MemberReference getRuntime && MethodInvocation BinaryOperation context "<" other RubyNumeric other ! Double MemberReference isNaN < MemberReference MemberReference b value b	1
MethodDeclaration Modifier postMethodScopeOnly StatementExpression StatementExpression public MethodInvocation MethodInvocation popRubyClass popScope	0
MethodDeclaration Modifier ReferenceType ensureSuperBlock FormalParameter FormalParameter IfStatement ReturnStatement static public Block ReferenceType given ReferenceType parent MethodInvocation BlockStatement MemberReference Block Block ! given isGiven ReturnStatement given MemberReference parent	0
MethodDeclaration Modifier ReferenceType case254_line1004 FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement MemberReference Object Object int Node node MethodInvocation != MemberReference Literal StatementExpression StatementExpression yyVal support Cast splat_array node null Assignment Assignment ReferenceType MemberReference MemberReference MethodInvocation = MemberReference MethodInvocation = Node ArraySelector yyVals yyVal support MemberReference Cast list_append yyVal support Cast Cast arg_append BinaryOperation node ReferenceType MemberReference ReferenceType MemberReference ReferenceType MemberReference + Literal MemberReference Node ArraySelector yyVals Node ArraySelector yyVals Node ArraySelector yyVals - 2 yyTop BinaryOperation BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference + Literal MemberReference 0 yyTop - 2 yyTop 0 yyTop	1
MethodDeclaration Modifier BasicType getStartTime ReturnStatement public long MemberReference startTime	0
MethodDeclaration Modifier visit FormalParameter FormalParameter IfStatement StatementExpression StatementExpression StatementExpression StatementExpression public ReferenceType key ReferenceType value MemberReference StatementExpression MethodInvocation MethodInvocation MethodInvocation Assignment IRubyObject IRubyObject ! ArraySelector firstEntry MethodInvocation buffer MethodInvocation append buffer MethodInvocation Literal append buffer MethodInvocation append MemberReference Literal = Literal buffer MethodInvocation Literal append MethodInvocation MemberReference MemberReference inspect Literal append '=' MethodInvocation MemberReference MemberReference inspect ArraySelector firstEntry false 0 Literal append ',' getByteList context key '>' getByteList context value Literal ' ' 0	1
MethodDeclaration Modifier BasicType isSync ReturnStatement public boolean BinaryOperation != BinaryOperation Literal & MemberReference MemberReference 0 mode SYNC	0
MethodDeclaration Modifier ReferenceType newEncoding FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement static public RubyEncoding ReferenceType runtime BasicType name BasicType p BasicType end BasicType isDummy ClassCreator Ruby byte int int boolean ReferenceType MemberReference MemberReference MemberReference MemberReference MemberReference RubyEncoding runtime name p end isDummy	0
MethodDeclaration Modifier Annotation ReferenceType op_equal19 FormalParameter FormalParameter LocalVariableDeclaration IfStatement IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType other ReferenceType VariableDeclarator BinaryOperation ReturnStatement BinaryOperation BlockStatement MethodInvocation name Literal compat MemberReference ThreadContext IRubyObject Ruby runtime MethodInvocation == This MemberReference MethodInvocation instanceof MemberReference ReferenceType LocalVariableDeclaration ReturnStatement MemberReference MemberReference op_equalCommon "==" CompatVersion RUBY1_9 context getRuntime other runtime getTrue other RubyString ReferenceType VariableDeclarator TernaryExpression context other RubyString otherString Cast BinaryOperation MethodInvocation MethodInvocation ReferenceType MemberReference && MethodInvocation MethodInvocation runtime getTrue runtime getFalse RubyString other MemberReference isComparableWith value MemberReference equal otherString otherString value	1
MethodDeclaration Modifier ReferenceType getNodeType ReturnStatement public NodeType MemberReference NodeType COLON2NODE	0
MethodDeclaration Modifier Annotation ReferenceType get_array_of_int32 FormalParameter FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType offset ReferenceType length MethodInvocation name ElementArrayValue required Literal ThreadContext IRubyObject IRubyObject MemoryUtil MethodInvocation MethodInvocation MethodInvocation MethodInvocation getArrayOfSigned32 Literal Literal 2 context getRuntime getMemoryIO MemberReference getOffset Util MemberReference int32Value "get_array_of_int32" "get_array_of_int" offset length	1
MethodDeclaration Modifier loadConstantSet FormalParameter FormalParameter ForStatement public ReferenceType module ReferenceType constantSetName EnhancedForControl BlockStatement RubyModule String VariableDeclaration MethodInvocation IfStatement ReferenceType VariableDeclarator ConstantSet MemberReference getConstantSet MethodInvocation BlockStatement Constant c constantSetName Character MethodInvocation isUpperCase StatementExpression c MethodInvocation name MethodInvocation Literal charAt module MethodInvocation MethodInvocation fastSetConstant 0 c name MethodInvocation newFixnum c value	0
MethodDeclaration Modifier ReferenceType directKeySet ReturnStatement public Set ClassCreator ReferenceType MemberReference BaseSet DIRECT_KEY_VIEW	0
MethodDeclaration Modifier hookIntoRuntimeWithStreams FormalParameter StatementExpression LocalVariableDeclaration StatementExpression LocalVariableDeclaration StatementExpression StatementExpression public Modifier ReferenceType runtime MethodInvocation ReferenceType VariableDeclarator MethodInvocation ReferenceType VariableDeclarator MethodInvocation MethodInvocation final Ruby MemberReference hookIntoRuntime RubyIO in ClassCreator runtime MethodInvocation getGlobalVariables RubyIO out ClassCreator runtime MethodInvocation getGlobalVariables runtime MethodInvocation getGlobalVariables runtime ReferenceType MemberReference MethodInvocation Literal MemberReference set ReferenceType MemberReference MethodInvocation Literal MemberReference set Literal MemberReference set RubyIO runtime getInputStream "$stdin" in RubyIO runtime getOutputStream "$stdout" out "$stderr" out	0
MethodDeclaration Modifier ReferenceType case443_line1655 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop MethodInvocation MemberReference Object Object int Literal yyerror yyVal "formal argument cannot be an global variable"	1
MethodDeclaration Modifier ReferenceType getMethod7 FormalParameter FormalParameter FormalParameter ReturnStatement protected DynamicMethod ReferenceType context ReferenceType self ReferenceType methodName MethodInvocation ThreadContext IRubyObject String runtimeCache MemberReference MemberReference Literal MemberReference getMethod context self 7 methodName	0
MethodDeclaration Modifier ReferenceType determineLibExt SwitchStatement private static final String MemberReference SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase OS WINDOWS ReturnStatement AIX ReturnStatement DARWIN ReturnStatement ReturnStatement Literal Literal Literal Literal "dll" "a" "dylib" "so"	1
MethodDeclaration Modifier Annotation ReferenceType to_f ReturnStatement public JRubyMethod ElementValuePair IRubyObject MethodInvocation name Literal RubyFloat MethodInvocation MethodInvocation newFloat "to_f" getRuntime getDoubleValue	1
MethodDeclaration Modifier check IfStatement private BinaryOperation ThrowStatement == MemberReference Literal MethodInvocation pattern null MethodInvocation getRuntime Literal newTypeError "uninitialized Regexp"	1
MethodDeclaration Modifier safeInvokeAndWait FormalParameter InvocationTargetException InterruptedException IfStatement private static ReferenceType runnable MethodInvocation BlockStatement BlockStatement Runnable EventQueue isDispatchThread TryStatement StatementExpression StatementExpression CatchClause MethodInvocation MethodInvocation CatchClauseParameter ThrowStatement EventQueue MemberReference invokeAndWait runnable run Exception e ClassCreator runnable ReferenceType MemberReference InvocationTargetException e	0
MethodDeclaration Modifier ReferenceType getNodeType ReturnStatement public NodeType MemberReference NodeType NOTNODE	0
MethodDeclaration Modifier Annotation assignArray FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration SwitchStatement public Override ReferenceType runtime ReferenceType context ReferenceType self ReferenceType arg ReferenceType block ReferenceType VariableDeclarator BasicType VariableDeclarator MemberReference SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase Ruby ThreadContext IRubyObject IRubyObject Block RubyArray values Cast int length MethodInvocation length Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement StatementExpression StatementExpression StatementExpression StatementExpression BreakStatement ReferenceType MemberReference values getLength 0 MethodInvocation 1 MethodInvocation 2 MethodInvocation 3 MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation RubyArray arg MemberReference MemberReference MemberReference MemberReference assign MemberReference MemberReference MemberReference MethodInvocation MemberReference assign MemberReference MemberReference MemberReference MethodInvocation MethodInvocation MemberReference assign MemberReference MemberReference MemberReference MethodInvocation MethodInvocation MethodInvocation MemberReference assign parameter1 MemberReference MemberReference MemberReference MethodInvocation MemberReference Literal assign parameter2 MemberReference MemberReference MemberReference MethodInvocation MemberReference Literal assign parameter3 MemberReference MemberReference MemberReference MethodInvocation MemberReference Literal assign rest MemberReference MemberReference MemberReference MethodInvocation MemberReference Literal assign runtime context self block runtime context self values Literal eltInternal block runtime context self values Literal eltInternal values Literal eltInternal block runtime context self values Literal eltInternal values Literal eltInternal values Literal eltInternal block runtime context self values Literal eltInternal block false runtime context self values Literal eltInternal block false runtime context self values Literal eltInternal block false runtime context self values Literal BinaryOperation subseqLight block true 0 0 1 0 1 2 0 1 2 3 - MemberReference Literal length 3	0
MethodDeclaration Modifier ReferenceType searchWithCache FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement static public CacheEntry ReferenceType obj ReferenceType name1 ReferenceType name2 ReferenceType name3 ReferenceType name4 ReferenceType name5 ReferenceType name6 ReferenceType name7 ReferenceType name8 MethodInvocation IRubyObject String String String String String String String String MethodInvocation MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference searchWithCache obj getMetaClass name1 name2 name3 name4 name5 name6 name7 name8	1
MethodDeclaration Modifier insertInstr FormalParameter StatementExpression public ReferenceType i MethodInvocation IR_Instr _instrs Literal MemberReference add 0 i	0
MethodDeclaration Modifier Annotation ReferenceType java_method FormalParameter FormalParameter LocalVariableDeclaration ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context ReferenceType rubyName ReferenceType VariableDeclarator MethodInvocation backtrace Literal ThreadContext IRubyObject String name MethodInvocation MemberReference getRubyMethod true rubyName asJavaString name	1
MethodDeclaration Modifier Annotation ReferenceType readline FormalParameter IOException LocalVariableDeclaration IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType VariableDeclarator MethodInvocation BlockStatement MemberReference name Literal writes MemberReference ThreadContext IRubyObject dst MethodInvocation dst isNil ThrowStatement dst "readline" FrameField LASTLINE MemberReference ArrayCreator gets MethodInvocation context ReferenceType Literal MethodInvocation getRuntime IRubyObject 0 newEOFError	0
MethodDeclaration Modifier ensureRuntimeCacheInited FormalParameter IfStatement private ReferenceType initMethod MemberReference BlockStatement SkinnyMethodAdapter ! runtimeCacheInited StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation Assignment initMethod Literal aload initMethod MethodInvocation newobj initMethod dup initMethod MethodInvocation Literal MethodInvocation invokespecial initMethod MethodInvocation Literal MethodInvocation putfield MemberReference Literal = 0 ClassReference p ClassReference p "<init>" VoidClassReference sig ClassReference p "runtimeCache" ClassReference ci runtimeCacheInited true AbstractScript ReferenceType AbstractScript ReferenceType ReferenceType AbstractScript ReferenceType RuntimeCache RuntimeCache AbstractScript RuntimeCache	0
MethodDeclaration Modifier ReferenceType buildAttrAssign FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration StatementExpression ReturnStatement private Operand Modifier ReferenceType attrAssignNode ReferenceType s ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation final AttrAssignNode IR_Scope List TypeArgument args MethodInvocation Operand obj MethodInvocation s ClassCreator addInstr args Literal get ReferenceType MethodInvocation MemberReference setupCallArgs MethodInvocation MemberReference build ReferenceType MemberReference ClassCreator MethodInvocation 0 Operand attrAssignNode getArgsNode s attrAssignNode getReceiverNode s ATTR_ASSIGN_Instr obj ReferenceType MethodInvocation args Literal get StringLiteral attrAssignNode getName 1	0
MethodDeclaration Modifier BasicType getValue ReturnStatement public double MemberReference value	0
MethodDeclaration Modifier ReferenceType newStruct FormalParameter FormalParameter FormalParameter ReturnStatement static final Struct ReferenceType runtime ReferenceType klass ReferenceType ptr ClassCreator Ruby RubyClass IRubyObject ReferenceType MemberReference Cast MethodInvocation MemberReference Struct runtime ReferenceType MemberReference MemberReference MemberReference getStructLayout ptr RubyClass klass runtime klass	0
MethodDeclaration Modifier Annotation ReferenceType executable_p FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType recv ReferenceType filename ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation name Literal required Literal module Literal IRubyObject IRubyObject Ruby runtime MethodInvocation JRubyFile file MethodInvocation runtime BinaryOperation newBoolean "executable?" 1 true recv getRuntime MemberReference file && MethodInvocation MethodInvocation filename file exists runtime MethodInvocation MethodInvocation getPosix MethodInvocation stat isExecutable file getAbsolutePath	1
MethodDeclaration Modifier Annotation Annotation ReferenceType inspect ReturnStatement public JRubyMethod ElementValuePair Override IRubyObject SuperMethodInvocation name Literal inspect "inspect"	0
MethodDeclaration Modifier branch FormalParameter StatementExpression public ReferenceType context MethodInvocation BodyCompiler MethodInvocation MemberReference Literal compile andNode getSecondNode context true	0
MethodDeclaration Modifier ReferenceType constructRubyArray FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement static public RubyArray ReferenceType runtime ReferenceType one ReferenceType two ReferenceType three ReferenceType four ReferenceType five MethodInvocation Ruby IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject RubyArray MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference newArrayLight runtime one two three four five	0
MethodDeclaration Modifier ReferenceType getConstantInner FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement private IRubyObject ReferenceType runtime ReferenceType internedName ReferenceType object ReferenceType VariableDeclarator BinaryOperation BlockStatement TernaryExpression Ruby String RubyModule IRubyObject result MethodInvocation != MemberReference Literal IfStatement ReturnStatement BinaryOperation Literal MethodInvocation cref MemberReference fastFetchConstant result null BinaryOperation ReturnStatement MemberReference == MemberReference Literal null previousCRefScope MemberReference MemberReference MemberReference getConstantInnerNoObject internedName == MemberReference MemberReference MethodInvocation result previousCRefScope null runtime internedName object result RubyObject UNDEF MemberReference MemberReference MemberReference getUndefConstant runtime internedName object	1
MethodDeclaration Modifier ReferenceType indexCommon19 FormalParameter FormalParameter FormalParameter FormalParameter IfStatement ReturnStatement private IRubyObject ReferenceType runtime ReferenceType context ReferenceType sub BasicType pos BinaryOperation BlockStatement IfStatement TernaryExpression Ruby ThreadContext IRubyObject int instanceof MemberReference ReferenceType LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression BinaryOperation BlockStatement BlockStatement BinaryOperation MethodInvocation MethodInvocation sub RubyRegexp ReferenceType VariableDeclarator Assignment Assignment Assignment Assignment instanceof MemberReference ReferenceType StatementExpression StatementExpression LocalVariableDeclaration IfStatement StatementExpression StatementExpression == MemberReference Literal runtime getNil RubyFixnum MemberReference MemberReference newFixnum RubyRegexp regSub Cast MemberReference TernaryExpression = MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation = sub RubyString Assignment Assignment ReferenceType VariableDeclarator MethodInvocation ThrowStatement Assignment Assignment pos - 1 runtime pos ReferenceType MemberReference pos MethodInvocation MemberReference MethodInvocation pos regSub This MemberReference Literal adjustStartPos19 pos regSub MemberReference This MemberReference Literal search19 pos MemberReference subLength MemberReference MethodInvocation = MemberReference MethodInvocation = IRubyObject tmp MethodInvocation tmp isNil MethodInvocation MemberReference MethodInvocation = MemberReference MethodInvocation = RubyRegexp sub singleByteOptimizable pos StringSupport MethodInvocation MemberReference MemberReference BinaryOperation MemberReference nth pos false context pos false pos pos Cast MemberReference strIndex19 pos MemberReference subLength sub checkStringType runtime BinaryOperation newTypeError pos Cast MemberReference strIndex19 pos MemberReference subLength MemberReference checkEncoding value bytes value begin + MemberReference MemberReference pos ReferenceType MemberReference pos pos + BinaryOperation Literal ReferenceType MemberReference pos pos regSub value begin value realSize RubyString sub + Literal MethodInvocation " given" RubyString tmp "type mismatch: " sub MethodInvocation getMetaClass getName	1
MethodDeclaration Modifier ReferenceType case504_line1935 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference Cast = yyVal yyVal ReferenceType MemberReference BlockArgNode ArraySelector yyVals BinaryOperation + Literal MemberReference 0 yyTop	1
MethodDeclaration Modifier Annotation ReferenceType loadClass FormalParameter ClassNotFoundException IfStatement ReturnStatement public Override Class ReferenceType name MethodInvocation ReturnStatement SuperMethodInvocation String name Literal equals MethodInvocation MemberReference loadClass "org.jruby.test.TestHelper" MemberReference findModClass name name	1
MethodDeclaration Modifier modifyAndKeepCodeRange StatementExpression StatementExpression private MethodInvocation MethodInvocation modify keepCodeRange	0
MethodDeclaration Modifier Annotation ReferenceType inspect ReturnStatement public Override IRubyObject MethodInvocation MethodInvocation inspect getRuntime	0
MethodDeclaration Modifier BasicType isAssumePrinting ReturnStatement public boolean MemberReference assumePrinting	0
MethodDeclaration Modifier BasicType scanOct FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration WhileStatement ReturnStatement static public int BasicType bytes BasicType p BasicType len ReferenceType enc BasicType VariableDeclarator BasicType VariableDeclarator BinaryOperation BlockStatement MemberReference byte int int Encoding int v Literal int c && BinaryOperation BinaryOperation StatementExpression v 0 && BinaryOperation MethodInvocation < MemberReference Literal Assignment > MemberReference Literal enc Assignment isDigit c '8' MemberReference BinaryOperation = -- len 0 MemberReference BinaryOperation = v + BinaryOperation MethodInvocation c & MemberReference Literal << MemberReference Literal Encoding MemberReference digitVal ArraySelector bytes 0xff v 3 c MemberReference ++ p	0
MethodDeclaration Modifier compileIter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression IfStatement public ReferenceType node ReferenceType context Modifier ReferenceType VariableDeclarator Modifier ReferenceType VariableDeclarator Modifier ReferenceType VariableDeclarator BasicType VariableDeclarator BinaryOperation BlockStatement ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation BinaryOperation BlockStatement BlockStatement Node BodyCompiler final IterNode iterNode Cast final CompilerCallback closureBody ClassCreator final CompilerCallback closureArgs ClassCreator boolean hasMultipleArgsHead Literal instanceof MethodInvocation ReferenceType StatementExpression NodeType argsNodeId MethodInvocation ASTInspector inspector ClassCreator inspector MethodInvocation inspect inspector MethodInvocation inspect == MemberReference Literal StatementExpression StatementExpression ReferenceType MemberReference ReferenceType MethodDeclaration ReferenceType MethodDeclaration false iterNode getVarNode MultipleAsgnNode Assignment BlockBody MemberReference getArgumentTypeWackyHack ReferenceType iterNode getBodyNode iterNode getVarNode argsNodeId null MethodInvocation MethodInvocation IterNode node CompilerCallback Modifier call FormalParameter IfStatement CompilerCallback Modifier call FormalParameter IfStatement MemberReference BinaryOperation = iterNode ASTInspector context MethodInvocation MethodInvocation MethodInvocation MemberReference Literal MemberReference MemberReference MemberReference createNewClosure context MethodInvocation MethodInvocation MethodInvocation MemberReference MemberReference MemberReference MemberReference MemberReference createNewClosure public ReferenceType context BinaryOperation BlockStatement BlockStatement public ReferenceType context BinaryOperation BlockStatement hasMultipleArgsHead != Cast Literal iterNode MethodInvocation getPosition iterNode getScope Arity MethodInvocation MethodInvocation procArityOf closureBody null hasMultipleArgsHead argsNodeId inspector iterNode MethodInvocation getPosition iterNode getScope Arity MethodInvocation MethodInvocation procArityOf closureBody closureArgs hasMultipleArgsHead argsNodeId inspector BodyCompiler != MethodInvocation Literal StatementExpression StatementExpression BodyCompiler != MethodInvocation Literal StatementExpression ReferenceType MethodInvocation null getStartLine getValue iterNode getVarNode getStartLine getValue iterNode getVarNode iterNode getBodyNode null MethodInvocation MethodInvocation iterNode getVarNode null MethodInvocation MultipleAsgnNode iterNode getVarNode MethodInvocation MemberReference Literal compile context loadNil MethodInvocation MemberReference Literal compileAssignment iterNode getBodyNode context true iterNode getVarNode context false	0
MethodDeclaration Modifier setRubyFrameDelta FormalParameter StatementExpression public BasicType newDelta Assignment int This MemberReference = MemberReference newDelta rubyFrameDelta	0
MethodDeclaration Modifier ReferenceType newArray ReturnStatement public RubyArray MethodInvocation RubyArray This newArray	0
MethodDeclaration Modifier Annotation BasicType compareTo FormalParameter IfStatement ReturnStatement final public Override int ReferenceType other BinaryOperation BlockStatement Cast IRubyObject instanceof MemberReference ReferenceType ReturnStatement BasicType MethodInvocation other RubyBignum MethodInvocation int MethodInvocation MethodInvocation MethodInvocation Literal MemberReference coerceCmp value Cast compareTo convertToInteger getLongValue MethodInvocation getRuntime "<=>" other ReferenceType MemberReference getCurrentContext RubyBignum other	0
MethodDeclaration Modifier Annotation performReturn IfStatement public Override MemberReference BlockStatement BlockStatement inNestedMethod StatementExpression StatementExpression StatementExpression StatementExpression MethodInvocation MethodInvocation MethodInvocation MethodInvocation loadThreadContext Literal MethodInvocation invokeUtilityMethod method athrow method areturn "returnJump" ClassReference ClassReference ClassReference sig JumpException ReferenceType ReferenceType ReferenceType ReturnJump IRubyObject ThreadContext	0
MethodDeclaration Modifier Annotation Annotation ReferenceType coerce FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair Override IRubyObject ReferenceType other MethodInvocation name Literal required Literal IRubyObject MethodInvocation getRuntime "coerce" 1 MethodInvocation This newArray RubyKernel This MemberReference new_float other	0
MethodDeclaration Modifier compileArgsPushArguments FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression IfStatement public ReferenceType node ReferenceType context BasicType expr ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MemberReference StatementExpression Node BodyCompiler boolean ArgsPushNode argsPushNode Cast MethodInvocation MemberReference Literal compile MethodInvocation MemberReference Literal compile context appendToArray context convertToJavaArray ! expr MethodInvocation ReferenceType MemberReference argsPushNode getFirstNode context true argsPushNode getSecondNode context true context consumeCurrentValue ArgsPushNode node	1
MethodDeclaration Modifier emitBEQ FormalParameter LocalVariableDeclaration StatementExpression StatementExpression StatementExpression public ReferenceType beq ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation BEQ_Instr Operand args MethodInvocation MemberReference emit MemberReference emit MethodInvocation method beq getOperands ArraySelector args ArraySelector args MethodInvocation MemberReference MethodInvocation ifCmp Literal Literal Type ClassReference getType EQ MethodInvocation getLabel 0 1 ReferenceType beq getJumpTarget Object	0
MethodDeclaration Modifier Annotation ReferenceType __method__ FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType VariableDeclarator ReferenceType VariableDeclarator TernaryExpression name ElementArrayValue module Literal visibility MemberReference ThreadContext IRubyObject Frame f MethodInvocation String name TernaryExpression BinaryOperation MethodInvocation MethodInvocation Literal Literal true PRIVATE context getCurrentFrame BinaryOperation MethodInvocation Literal != MemberReference Literal context MethodInvocation getRuntime context MethodInvocation getRuntime "__method__" "__callee__" != MemberReference Literal f getName null name null MemberReference newSymbol getNil f null name	1
MethodDeclaration Modifier ReferenceType coerceOtherToType FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement static public Object ReferenceType context ReferenceType arg ReferenceType target ReferenceType VariableDeclarator MethodInvocation BlockStatement IfStatement MemberReference ThreadContext IRubyObject Class Ruby runtime MethodInvocation MethodInvocation MemberReference isDuckTypeConvertable LocalVariableDeclaration IfStatement MethodInvocation BlockStatement arg context getRuntime arg getClass target ReferenceType VariableDeclarator MethodInvocation BlockStatement arg Literal respondsTo LocalVariableDeclaration IfStatement ReturnStatement RubyObject rubyObject Cast ! rubyObject Literal respondsTo ReturnStatement "to_java_object" ReferenceType VariableDeclarator BinaryOperation BlockStatement MemberReference ReferenceType MemberReference "java_object" MethodInvocation Object javaObject MethodInvocation instanceof MemberReference ReferenceType StatementExpression StatementExpression javaObject RubyObject arg MemberReference MemberReference MemberReference convertProcToInterface arg MemberReference Literal callMethod javaObject JavaObject MethodInvocation Assignment context rubyObject target context "to_java_object" runtime MethodInvocation MethodInvocation getJavaSupport MemberReference Cast = getObjectProxyCache Cast MemberReference put javaObject ReferenceType MemberReference ReferenceType MemberReference arg JavaObject javaObject JavaObject javaObject	1
MethodDeclaration Modifier BasicType shiftedValue ReturnStatement private long BinaryOperation << MemberReference Literal status 8	0
MethodDeclaration Modifier setUp Exception StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression protected Assignment Assignment Assignment Assignment MethodInvocation MemberReference ClassCreator = MemberReference ClassCreator = MemberReference ClassCreator = MemberReference MethodInvocation = MemberReference setupInterpreter in ReferenceType ArrayCreator out ReferenceType err ReferenceType runtime Ruby MemberReference Assignment Assignment newInstance runtime ByteArrayInputStream BasicType Literal ByteArrayOutputStream ByteArrayOutputStream in MemberReference ClassCreator = MemberReference ClassCreator = byte 0 printOut ReferenceType MemberReference printErr ReferenceType MemberReference PrintStream out PrintStream err	0
MethodDeclaration Modifier BasicType getModifiers ReturnStatement public int MethodInvocation constructor getModifiers	0
MethodDeclaration Modifier Annotation ReferenceType marshal_load FormalParameter FormalParameter TryStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context ReferenceType str LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression ReturnStatement CatchClause CatchClause frame Literal ThreadContext IRubyObject ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation This CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement true ByteList byteList MethodInvocation ByteArrayInputStream bais ClassCreator ObjectInputStream ois ClassCreator MethodInvocation dataWrapStruct IOException ioe MethodInvocation ClassNotFoundException cnfe MethodInvocation str MethodInvocation convertToString ReferenceType MemberReference MemberReference MemberReference ReferenceType MemberReference ois readObject context MethodInvocation getRuntime context MethodInvocation getRuntime getByteList ByteArrayInputStream byteList bytes byteList begin byteList realSize ObjectInputStream bais MemberReference newIOErrorFromException BinaryOperation newTypeError ioe + Literal MethodInvocation "Class not found unmarshaling Java type: " cnfe getLocalizedMessage	1
MethodDeclaration Modifier Annotation ReferenceType is_java_proxy ReturnStatement public JRubyMethod ElementValuePair IRubyObject MethodInvocation name Literal MethodInvocation getRuntime "java_proxy?" getFalse	1
MethodDeclaration Modifier ReferenceType newEvStrNode FormalParameter FormalParameter LocalVariableDeclaration WhileStatement ReturnStatement public Node ReferenceType position ReferenceType node ReferenceType VariableDeclarator Literal BlockStatement ClassCreator ISourcePosition Node Node head MemberReference true IfStatement IfStatement IfStatement StatementExpression ReferenceType MemberReference MemberReference node BinaryOperation BreakStatement BinaryOperation BlockStatement BinaryOperation BreakStatement Assignment EvStrNode position head == MemberReference Literal || BinaryOperation BinaryOperation ReturnStatement instanceof MemberReference ReferenceType MemberReference Cast = node null || BinaryOperation BinaryOperation instanceof MemberReference ReferenceType MemberReference node NewlineNode node ReferenceType MemberReference instanceof MemberReference ReferenceType instanceof MemberReference ReferenceType node EvStrNode node NewlineNode node node StrNode node DStrNode	1
MethodDeclaration Modifier getFrameName StatementExpression StatementExpression public MethodInvocation MethodInvocation loadThreadContext Literal MethodInvocation invokeThreadContext "getFrameName" ClassReference sig ReferenceType String	0
MethodDeclaration Modifier ReferenceType getGC ReturnStatement public RubyModule MemberReference gcModule	0
MethodDeclaration Modifier Annotation assign FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression StatementExpression public Override ReferenceType runtime ReferenceType context ReferenceType self ReferenceType value1 ReferenceType block MethodInvocation MethodInvocation MethodInvocation Ruby ThreadContext IRubyObject IRubyObject Block parameter1 MemberReference MemberReference MemberReference MemberReference MemberReference Literal assign parameter2 MemberReference MemberReference MemberReference MethodInvocation MemberReference Literal assign rest MemberReference MemberReference MemberReference MethodInvocation MemberReference Literal assign runtime context self value1 block false runtime context self runtime getNil block false runtime context self runtime MemberReference newArrayNoCopyLight block true IRubyObject NULL_ARRAY	0
MethodDeclaration Modifier ReferenceType case395_line1496 FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MethodInvocation MethodInvocation MethodInvocation MethodInvocation MemberReference Object Object int MemberReference MethodInvocation = lexer Literal setStrTerm lexer MemberReference setState lexer MethodInvocation getConditionState lexer MethodInvocation getCmdArgumentState yyVal yyVal lexer getStrTerm null LexState EXPR_BEG stop stop	1
MethodDeclaration Modifier defineAlias FormalParameter FormalParameter StatementExpression StatementExpression StatementExpression StatementExpression public ReferenceType newName ReferenceType oldName MethodInvocation MethodInvocation MethodInvocation MethodInvocation String String loadThreadContext method MemberReference ldc method MemberReference ldc Literal MethodInvocation invokeUtilityMethod newName oldName "defineAlias" ClassReference ClassReference ClassReference ClassReference sig ReferenceType ReferenceType ReferenceType ReferenceType IRubyObject ThreadContext String String	0
MethodDeclaration Modifier ReferenceType getRealMethod ReturnStatement public DynamicMethod MethodInvocation oldMethod getRealMethod	0
MethodDeclaration Modifier ReferenceType callSuper FormalParameter FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType receiver ReferenceType args ReferenceType block MethodInvocation IRubyObject IRubyObject Block RuntimeHelpers MethodInvocation MemberReference MemberReference MemberReference invokeSuper receiver MethodInvocation getRuntime receiver args block getCurrentContext	0
MethodDeclaration Modifier testFailedRequireInRescueClauseStillRaisesException Exception TryStatement public StatementExpression StatementExpression CatchClause MethodInvocation MethodInvocation CatchClauseParameter StatementExpression StatementExpression BinaryOperation eval Literal fail RaiseException re MethodInvocation MethodInvocation + BinaryOperation Literal "should raise exception" Literal MethodInvocation assertEquals BinaryOperation assertTrue + BinaryOperation Literal "end" "LoadError" re MethodInvocation MethodInvocation getException >= MethodInvocation Literal + BinaryOperation Literal " require 'test/load_error'\n" getMetaClass toString re MethodInvocation MethodInvocation getException 0 + Literal Literal "rescue LoadError => e\n" toString Literal indexOf "begin\n" "require 'test/load_error'\n" "bogus_missing_lib"	0
MethodDeclaration Modifier Annotation BasicType isKindOf FormalParameter FormalParameter ReturnStatement public Override boolean ReferenceType obj ReferenceType type BinaryOperation IRubyObject RubyModule instanceof MemberReference ReferenceType obj RubyArray	0
MethodDeclaration Modifier ReferenceType getSignature ReturnStatement protected String MethodInvocation StandardASMCompiler MethodInvocation getStaticClosure19Signature script getClassname	0
MethodDeclaration Modifier pushFrame FormalParameter LocalVariableDeclaration LocalVariableDeclaration StatementExpression IfStatement private ReferenceType name BasicType VariableDeclarator ReferenceType VariableDeclarator MemberReference BinaryOperation BlockStatement String int index This Frame stack MemberReference ArraySelector MethodInvocation stack == BinaryOperation MemberReference StatementExpression ++ MemberReference frameStack MemberReference MemberReference MemberReference MemberReference updateFrame + MemberReference Literal stack length MethodInvocation frameIndex index name file line index 1 expandFramesIfNecessary	0
MethodDeclaration Modifier ReferenceType opElementAsgnWithOrPartTwoTwoArgs FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement static public IRubyObject ReferenceType context ReferenceType self ReferenceType receiver ReferenceType args ReferenceType value ReferenceType asetSite MethodInvocation MemberReference ThreadContext IRubyObject IRubyObject IRubyObject IRubyObject CallSite asetSite MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference call value context self receiver ArraySelector args ArraySelector args value Literal Literal 0 1	0
MethodDeclaration Modifier branch FormalParameter StatementExpression StatementExpression public ReferenceType context MethodInvocation MethodInvocation BodyCompiler MethodInvocation MemberReference Literal compile context negateCurrentValue untilNode getConditionNode context true	0
MethodDeclaration Modifier ReferenceType getIterNode ReturnStatement public Node MemberReference iterNode	0
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter FormalParameter StatementExpression LocalVariableDeclaration IfStatement ReturnStatement public IRubyObject ReferenceType ctx ReferenceType largs ReferenceType blk MethodInvocation ReferenceType VariableDeclarator MethodInvocation BlockStatement MethodInvocation ThreadContext IRubyObject Block MemberReference MemberReference Literal checkContext IRubyObject larg MethodInvocation ! larg isTrue ThrowStatement runtime getNil localContext ctx "all?" MemberReference MemberReference checkArgs MemberReference runtime largs JumpException SPECIAL_JUMP	0
MethodDeclaration Modifier ReferenceType rejectBang FormalParameter FormalParameter IfStatement LocalVariableDeclaration StatementExpression ForStatement IfStatement IfStatement ReturnStatement public IRubyObject ReferenceType context ReferenceType block MethodInvocation ThrowStatement BasicType VariableDeclarator MethodInvocation ForControl BlockStatement BinaryOperation ReturnStatement BinaryOperation BlockStatement This ThreadContext Block ! block isGiven MethodInvocation int i2 Literal modify VariableDeclaration BinaryOperation MemberReference LocalVariableDeclaration IfStatement IfStatement StatementExpression == MemberReference MemberReference MethodInvocation < MemberReference MemberReference TryStatement StatementExpression context MethodInvocation getRuntime 0 BasicType VariableDeclarator < MemberReference MemberReference ++ i1 ReferenceType VariableDeclarator MethodInvocation ContinueStatement BinaryOperation StatementExpression MemberReference realLength i2 context MethodInvocation getRuntime i2 realLength StatementExpression CatchClause Assignment newLocalJumpErrorNoBlock int i1 Literal i1 realLength IRubyObject v MemberReference block MethodInvocation MemberReference MemberReference yield != MemberReference MemberReference MethodInvocation ++ i2 getNil MethodInvocation CatchClauseParameter StatementExpression MemberReference MemberReference = 0 ArraySelector values isTrue context v i1 i2 MemberReference MemberReference store RuntimeHelpers MemberReference BinaryOperation BinaryOperation MethodInvocation fillNil ArrayIndexOutOfBoundsException e MethodInvocation realLength i2 BinaryOperation i2 v values + MemberReference MemberReference + MemberReference MemberReference context getRuntime concurrentModification + MemberReference MemberReference begin i2 begin realLength begin i1	1
MethodDeclaration Modifier ReferenceType cat FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression StatementExpression ReturnStatement final public RubyString BasicType str BasicType beg BasicType len MethodInvocation MethodInvocation Assignment This byte int int BinaryOperation modify System MemberReference MemberReference MemberReference BinaryOperation MemberReference arraycopy MemberReference MemberReference += + MemberReference MemberReference str beg value bytes + MemberReference MemberReference len value realSize len value realSize len value begin value realSize	0
MethodDeclaration Modifier ReferenceType choiceCommon FormalParameter ReturnStatement public IRubyObject ReferenceType context MemberReference ThreadContext ArraySelector values BinaryOperation + MemberReference MethodInvocation begin context MethodInvocation MethodInvocation getRuntime getRandom MemberReference nextInt realLength	0
MethodDeclaration Modifier ReferenceType getBlockBody195 FormalParameter FormalParameter ReturnStatement final public BlockBody ReferenceType context ReferenceType descriptor MethodInvocation ThreadContext String runtimeCache This MemberReference Literal MemberReference getBlockBody19 context 5 descriptor	0
MethodDeclaration Modifier addConditionalForWhen FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression IfStatement StatementExpression private Modifier ReferenceType whenNode ReferenceType conditionals ReferenceType bodies ReferenceType body MethodInvocation BinaryOperation BlockStatement MethodInvocation final WhenNode List TypeArgument List TypeArgument CompilerCallback bodies MemberReference add instanceof MethodInvocation ReferenceType IfStatement conditionals MethodInvocation add ReferenceType ReferenceType body whenNode getExpressionNodes ArrayNode BinaryOperation BlockStatement MethodInvocation getArgsCallback ArgumentsCallback CompilerCallback instanceof MemberReference ReferenceType StatementExpression ReturnStatement whenNode getExpressionNodes whenNode WhenOneArgNode MethodInvocation conditionals ClassCreator add ReferenceType MethodDeclaration MethodDeclaration ArgumentsCallback Modifier BasicType getArity ReturnStatement Modifier call FormalParameter StatementExpression public int Literal public ReferenceType context MethodInvocation 1 BodyCompiler MethodInvocation MemberReference Literal compile whenNode getExpressionNodes context true	1
MethodDeclaration Modifier ReferenceType getFrames FormalParameter LocalVariableDeclaration LocalVariableDeclaration ForStatement ReturnStatement public Frame BasicType delta BasicType VariableDeclarator ReferenceType VariableDeclarator ForControl BlockStatement MemberReference int int top BinaryOperation Frame frames ArrayCreator VariableDeclaration BinaryOperation MemberReference StatementExpression frames + MemberReference MemberReference ReferenceType BinaryOperation BasicType VariableDeclarator <= MemberReference MemberReference ++ i Assignment frameIndex delta Frame + MemberReference Literal int i Literal i top MemberReference MemberReference = top 1 0 ArraySelector frames ArraySelector MethodInvocation frameStack MemberReference MemberReference duplicateForBacktrace i i	0
MethodDeclaration Modifier swap2 StatementExpression StatementExpression public MethodInvocation MethodInvocation dup2_x2 pop2	0
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter IfStatement LocalVariableDeclaration LocalVariableDeclaration IfStatement ReturnStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType args ReferenceType block BinaryOperation BlockStatement ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement MethodInvocation ThreadContext IRubyObject RubyModule String IRubyObject Block instanceof MemberReference ReferenceType ThrowStatement RubyProc proc Cast IRubyObject newArgs == MemberReference Literal StatementExpression StatementExpression StatementExpression proc MemberReference MemberReference call self RubyProc MethodInvocation ReferenceType MemberReference args length 1 Assignment Assignment MethodInvocation context newArgs context MethodInvocation getRuntime RubyProc self MemberReference MemberReference = MemberReference ArrayCreator = System MemberReference Literal MemberReference Literal BinaryOperation arraycopy Literal newTypeError newArgs IRubyObject NULL_ARRAY newArgs ReferenceType BinaryOperation args 1 newArgs 0 - MemberReference Literal "interface impl method_missing for block used with non-Proc object" IRubyObject - MemberReference Literal args length 1 args length 1	0
MethodDeclaration Modifier ReferenceType getStaticScope ReturnStatement public StaticScope MemberReference staticScope	0
MethodDeclaration Modifier ReferenceType getSearchNameString ReturnStatement public RubyString MemberReference searchNameString	0
MethodDeclaration Modifier ReferenceType case431_line1660 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference ClassCreator = yyVal yyVal ReferenceType Cast Cast InstVarNode ReferenceType MemberReference ReferenceType Cast Token ArraySelector yyVals String ReferenceType MemberReference BinaryOperation Token ArraySelector yyVals + Literal MemberReference BinaryOperation 0 yyTop + Literal MemberReference 0 yyTop	1
MethodDeclaration Modifier ReferenceType getRegexp1 FormalParameter FormalParameter FormalParameter ReturnStatement final public RubyRegexp ReferenceType runtime ReferenceType name BasicType options MethodInvocation Ruby String int runtimeCache MemberReference Literal MemberReference MemberReference getRegexp runtime 1 name options	0
MethodDeclaration Modifier Annotation ReferenceType gethostbyaddr FormalParameter FormalParameter ReturnStatement static public Deprecated IRubyObject ReferenceType recv ReferenceType args MethodInvocation IRubyObject IRubyObject MethodInvocation MemberReference MemberReference gethostbyaddr recv MethodInvocation getRuntime recv args getCurrentContext	1
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression ReturnStatement public IRubyObject ReferenceType context ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 ReferenceType arg3 ReferenceType binding ReferenceType type ReferenceType VariableDeclarator Assignment MethodInvocation ThreadContext IRubyObject IRubyObject IRubyObject IRubyObject Binding Block ReferenceType IRubyObject args ArrayCreator MemberReference MethodInvocation = MemberReference MethodInvocation Literal Literal Literal MemberReference MemberReference yield Type ReferenceType ArrayInitializer args MemberReference MemberReference MemberReference prepareArgumentsForCall context RubyArray MethodInvocation MemberReference newArrayNoCopy null null true binding type IRubyObject MemberReference MemberReference MemberReference MemberReference context args type context getRuntime args arg0 arg1 arg2 arg3	0
MethodDeclaration ReferenceType get FormalParameter FormalParameter LocalVariableDeclaration ForStatement ReturnStatement T ReferenceType object BasicType hash ReferenceType VariableDeclarator ForControl BlockStatement Literal Object int Entry TypeArgument table VariableDeclaration BinaryOperation Assignment IfStatement null ReferenceType ReferenceType VariableDeclarator != MemberReference Literal MemberReference MemberReference = BinaryOperation BlockStatement T Entry TypeArgument e Assignment e null e e next && BinaryOperation BinaryOperation ReturnStatement ReferenceType MemberReference MemberReference = == MemberReference MemberReference == MemberReference MethodInvocation MethodInvocation T table entryTable hash e hash object e.objectRef get e.proxyRef get	1
MethodDeclaration Modifier BasicType lseek FormalParameter FormalParameter IOException InvalidValueException PipeException BadDescriptorException IfStatement public long BasicType offset BasicType whence BinaryOperation BlockStatement BlockStatement long int instanceof MemberReference ReferenceType StatementExpression LocalVariableDeclaration TryStatement ThrowStatement channel FileChannel MethodInvocation ReferenceType VariableDeclarator LocalVariableDeclaration SwitchStatement ReturnStatement CatchClause ClassCreator checkOpen FileChannel fileChannel Cast BasicType VariableDeclarator MemberReference SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase MemberReference CatchClauseParameter ThrowStatement ReferenceType ReferenceType MemberReference long pos whence MemberReference StatementExpression StatementExpression BreakStatement MemberReference StatementExpression StatementExpression BreakStatement MemberReference StatementExpression StatementExpression BreakStatement ThrowStatement pos IllegalArgumentException e ClassCreator PipeException FileChannel channel Stream SEEK_SET Assignment MethodInvocation Stream SEEK_CUR Assignment MethodInvocation Stream SEEK_END Assignment MethodInvocation ClassCreator ReferenceType MemberReference MemberReference = fileChannel MemberReference position MemberReference BinaryOperation = fileChannel MemberReference position MemberReference BinaryOperation = fileChannel MemberReference position ReferenceType InvalidValueException pos offset pos pos + MethodInvocation MemberReference pos pos + MethodInvocation MemberReference pos InvalidValueException fileChannel position offset fileChannel size offset	1
MethodDeclaration /** * nucomp_exact_p */ Modifier ReferenceType inexact_p FormalParameter ReturnStatement public IRubyObject ReferenceType context TernaryExpression ThreadContext MethodInvocation MethodInvocation MethodInvocation MethodInvocation MemberReference exact_p context MethodInvocation getRuntime context MethodInvocation getRuntime isTrue context getFalse getTrue	1
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType args MethodInvocation ThreadContext IRubyObject RubyModule String IRubyObject MemberReference MemberReference jcreateProxy self args	0
MethodDeclaration Modifier ReferenceType getNodeType ReturnStatement public NodeType MemberReference NodeType DEFINEDNODE	0
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType context ReferenceType caller ReferenceType self BasicType fixnum MethodInvocation ThreadContext IRubyObject IRubyObject long MemberReference MemberReference MemberReference MethodInvocation call context caller self RubyFixnum MethodInvocation MemberReference newFixnum context getRuntime fixnum	0
MethodDeclaration Modifier BasicType ampersand FormalParameter IOException LocalVariableDeclaration SwitchStatement StatementExpression LocalVariableDeclaration IfStatement StatementExpression StatementExpression ReturnStatement private int BasicType spaceSeen BasicType VariableDeclarator MemberReference SwitchStatementCase SwitchStatementCase MethodInvocation ReferenceType VariableDeclarator BinaryOperation BlockStatement IfStatement MethodInvocation Assignment MemberReference boolean int c MethodInvocation c Literal StatementExpression IfStatement StatementExpression StatementExpression ReturnStatement Literal StatementExpression StatementExpression ReturnStatement src MemberReference unread ISourcePosition tmpPosition MethodInvocation && BinaryOperation MethodInvocation IfStatement StatementExpression MethodInvocation BlockStatement BlockStatement determineExpressionState MemberReference ClassCreator = c src read '&' Assignment BinaryOperation BlockStatement MethodInvocation Assignment MemberReference '=' Assignment Assignment MemberReference c getPosition && MethodInvocation MemberReference ! Character MemberReference isWhitespace MethodInvocation StatementExpression Assignment isBEG StatementExpression StatementExpression yaccValue ReferenceType Literal MemberReference MemberReference MemberReference = == Assignment Literal StatementExpression StatementExpression ReturnStatement src MemberReference unread MemberReference ClassCreator = Tokens tANDOP MemberReference ClassCreator = MemberReference MemberReference = Tokens tOP_ASGN isARG spaceSeen c warnings isVerbose MethodInvocation MemberReference MemberReference = Assignment Assignment Token "&" tmpPosition lex_state LexState EXPR_BEG MemberReference MethodInvocation = '=' Assignment Assignment MemberReference c yaccValue ReferenceType Literal MethodInvocation yaccValue ReferenceType Literal MethodInvocation lex_state LexState EXPR_BEG warnings MemberReference MemberReference Literal Literal warning c Tokens tAMPER MemberReference MemberReference = MemberReference MemberReference = c src read MemberReference ClassCreator = MemberReference MemberReference = Tokens tOP_ASGN Token "&&" getPosition Token "&" getPosition ID ARGUMENT_AS_PREFIX tmpPosition "`&' interpreted as argument prefix" "&" c Tokens tAMPER c Tokens tAMPER2 yaccValue ReferenceType Literal MethodInvocation lex_state LexState EXPR_BEG Token "&&" getPosition	1
MethodDeclaration Modifier testObjectSpace LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression LocalVariableDeclaration StatementExpression StatementExpression StatementExpression LocalVariableDeclaration StatementExpression StatementExpression LocalVariableDeclaration ForStatement StatementExpression public ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation ReferenceType VariableDeclarator MethodInvocation MethodInvocation ReferenceType VariableDeclarator ForControl BlockStatement MethodInvocation IRubyObject o1 MethodInvocation IRubyObject o2 MethodInvocation IRubyObject o3 MethodInvocation IRubyObject o4 MethodInvocation target MemberReference add target MemberReference add target MemberReference add target MemberReference add List storedFixnums ClassCreator storedFixnums MemberReference add storedFixnums MemberReference add storedFixnums MemberReference add Iterator strings MethodInvocation MemberReference MethodInvocation assertSame MethodInvocation assertNull Iterator numerics MethodInvocation VariableDeclaration BinaryOperation MemberReference LocalVariableDeclaration StatementExpression MethodInvocation assertNull runtime Literal newFixnum runtime Literal newFixnum runtime Literal newFixnum runtime Literal newString o1 o2 o3 o4 ReferenceType Literal o1 o2 o3 target MethodInvocation iterator o4 strings next strings next target MethodInvocation iterator BasicType VariableDeclarator < MemberReference Literal ++ i ReferenceType VariableDeclarator MethodInvocation numerics next 10 20 30 "hello" ArrayList 3 runtime getString runtime getNumeric int i Literal i 3 Object item MethodInvocation MethodInvocation assertTrue 0 numerics next storedFixnums MemberReference contains item	0
MethodDeclaration Modifier ReferenceType createProcMethod FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression StatementExpression LocalVariableDeclaration StatementExpression LocalVariableDeclaration StatementExpression IfStatement ReturnStatement private DynamicMethod ReferenceType name ReferenceType visibility ReferenceType proc ReferenceType VariableDeclarator MethodInvocation MethodInvocation ReferenceType VariableDeclarator MethodInvocation ReferenceType VariableDeclarator MethodInvocation MethodInvocation BlockStatement ClassCreator String Visibility RubyProc Block block MethodInvocation block MethodInvocation MethodInvocation getBinding block MethodInvocation MethodInvocation getBinding StaticScope scope MethodInvocation scope Literal setArgumentScope Arity arity MethodInvocation scope MethodInvocation setRequiredArgs ! arity isFixed StatementExpression ReferenceType This MemberReference MemberReference proc getBlock getFrame This setKlazz getFrame MemberReference setName block MethodInvocation getBody true block arity arity required MethodInvocation ProcMethod proc visibility name getStaticScope scope MethodInvocation setRestArg arity required	1
MethodDeclaration Modifier performBooleanBranch FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression public ReferenceType trueBranch ReferenceType falseBranch ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation BranchCallback BranchCallback Label afterJmp ClassCreator Label falseJmp ClassCreator isTrue method MemberReference ifeq trueBranch This branch method MemberReference go_to method MemberReference label falseBranch This branch method MemberReference label ReferenceType ReferenceType falseJmp afterJmp falseJmp afterJmp Label Label	1
MethodDeclaration Modifier ReferenceType inject FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression ReturnStatement static public IRubyObject ReferenceType context ReferenceType self ReferenceType init Modifier ReferenceType block Modifier ReferenceType VariableDeclarator Modifier ReferenceType VariableDeclarator Modifier ReferenceType VariableDeclarator MethodInvocation TernaryExpression ThreadContext IRubyObject IRubyObject final Block final Ruby runtime MethodInvocation final IRubyObject result ArrayCreator final ThreadContext localContext MemberReference MemberReference MemberReference MemberReference ClassCreator callEach BinaryOperation MethodInvocation MemberReference context getRuntime ReferenceType ArrayInitializer context runtime context self ReferenceType MethodDeclaration == MemberReference Literal runtime getNil ArraySelector result IRubyObject MemberReference BlockCallback Modifier ReferenceType call FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression StatementExpression ReturnStatement ArraySelector result null Literal init public IRubyObject ReferenceType ctx ReferenceType largs ReferenceType blk ReferenceType VariableDeclarator MethodInvocation Assignment MethodInvocation Literal 0 ThreadContext IRubyObject Block IRubyObject larg MethodInvocation MemberReference MemberReference Literal checkContext MemberReference TernaryExpression = runtime getNil 0 MemberReference MemberReference checkArgs localContext ctx "inject" ArraySelector result BinaryOperation MemberReference MethodInvocation runtime largs Literal == MemberReference Literal larg block MemberReference MethodInvocation Literal Literal Literal yield 0 ArraySelector result null ctx runtime MemberReference MemberReference newArray null null true Literal ArraySelector result larg 0 Literal 0	0
MethodDeclaration Modifier ReferenceType unmarshalFrom FormalParameter FormalParameter FormalParameter IOException LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression ReturnStatement public Object ReferenceType runtime ReferenceType type ReferenceType unmarshalStream ReferenceType VariableDeclarator MethodInvocation MethodInvocation Assignment Assignment MethodInvocation MemberReference Ruby RubyClass UnmarshalStream RubySystemCallError exc Cast unmarshalStream MemberReference registerLinkTarget unmarshalStream MemberReference defaultVariablesUnmarshal MemberReference Cast = MemberReference Cast = exc Cast set_backtrace exc ReferenceType MethodInvocation exc exc exc message ReferenceType MethodInvocation exc errno ReferenceType MethodInvocation ReferenceType MethodInvocation RubySystemCallError type allocate IRubyObject exc Literal removeInternalVariable IRubyObject exc Literal removeInternalVariable IRubyObject exc Literal removeInternalVariable "mesg" "errno" "bt"	0
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement ReturnStatement public IRubyObject ReferenceType context ReferenceType caller ReferenceType self ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation BlockStatement MethodInvocation ThreadContext IRubyObject IRubyObject RubyClass selfType MethodInvocation CacheEntry myCache MemberReference myCache MemberReference typeOk ReturnStatement MemberReference MemberReference MemberReference MemberReference cacheAndCall MemberReference MemberReference pollAndGetClass cache selfType MethodInvocation caller selfType context self context self myCache.method MemberReference MemberReference MemberReference MemberReference call context self selfType methodName	0
MethodDeclaration Modifier Annotation Annotation ReferenceType inspect IfStatement IfStatement TryStatement public JRubyMethod ElementValuePair Override IRubyObject BinaryOperation ReturnStatement MethodInvocation ReturnStatement StatementExpression ReturnStatement StatementExpression name Literal == MemberReference Literal MethodInvocation MethodInvocation getRuntime MethodInvocation MethodInvocation MethodInvocation MethodInvocation "inspect" realLength 0 MethodInvocation getRuntime This isInspecting MethodInvocation getRuntime MethodInvocation getRuntime MethodInvocation inspectAry MethodInvocation getRuntime Literal newString Literal newString This registerInspecting MethodInvocation getRuntime This unregisterInspecting "[]" "[...]" getCurrentContext	1
MethodDeclaration Modifier ReferenceType regexSplit FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration WhileStatement StatementExpression IfStatement ReturnStatement private RubyArray ReferenceType context ReferenceType pat BasicType limit BasicType lim BasicType i ReferenceType VariableDeclarator Modifier ReferenceType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator Modifier ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator BinaryOperation BlockStatement MethodInvocation BinaryOperation StatementExpression MemberReference ThreadContext IRubyObject boolean int int Ruby runtime MethodInvocation final Regex pattern MethodInvocation int begin MemberReference int len MemberReference int range BinaryOperation byte bytes MemberReference final Matcher matcher MethodInvocation RubyArray result MethodInvocation Encoding enc MethodInvocation boolean captures BinaryOperation int end beg Literal boolean lastNull Literal int start MemberReference >= Assignment Literal IfStatement StatementExpression IfStatement IfStatement context MethodInvocation getCurrentScope && BinaryOperation BinaryOperation MethodInvocation result context getRuntime MemberReference getQuotedPattern value begin value realSize + MemberReference MemberReference value bytes pattern MemberReference MemberReference MemberReference matcher runtime newArray pattern getEncoding != MethodInvocation Literal 0 false begin MemberReference MethodInvocation = 0 BinaryOperation BlockStatement BlockStatement Assignment MemberReference StatementExpression BinaryOperation BreakStatement MethodInvocation setBackRef > MemberReference Literal || BinaryOperation BinaryOperation result MethodInvocation append pat begin len bytes begin range pattern numberOfCaptures 0 end matcher MemberReference MemberReference MemberReference search && BinaryOperation BinaryOperation IfStatement StatementExpression StatementExpression StatementExpression MemberReference Literal = captures MethodInvocation && MemberReference BinaryOperation runtime getNil len 0 || MemberReference BinaryOperation < MemberReference Literal MemberReference MemberReference BinaryOperation makeShared start range Option NONE == MemberReference BinaryOperation == MethodInvocation MethodInvocation BinaryOperation BlockStatement IfStatement MethodInvocation Assignment Assignment lastNull false MemberReference MemberReference MemberReference Literal populateCapturesForSplit limit <= MemberReference MemberReference limit > MemberReference MemberReference lim 0 runtime beg - MemberReference MemberReference start + MemberReference MemberReference matcher getBegin matcher getEnd == MemberReference Literal StatementExpression BreakStatement MemberReference BlockStatement BlockStatement result MethodInvocation append MemberReference MethodInvocation = MemberReference BinaryOperation = runtime result matcher false lim ++ i len beg len beg end begin len 0 MethodInvocation lastNull StatementExpression StatementExpression StatementExpression StatementExpression ContinueStatement MemberReference MemberReference BinaryOperation makeShared beg matcher getEnd start + MemberReference MemberReference result MethodInvocation append MethodInvocation Assignment Assignment Assignment runtime beg - MemberReference MemberReference begin beg MemberReference MethodInvocation newEmptyString result MethodInvocation append MemberReference BinaryOperation = MemberReference TernaryExpression += MemberReference Literal = end beg runtime getMetaClass MemberReference MemberReference MethodInvocation makeShared beg - MemberReference MemberReference start BinaryOperation Literal MethodInvocation lastNull true runtime beg enc MemberReference BinaryOperation MemberReference length start begin == MemberReference MemberReference 1 enc MemberReference MemberReference MemberReference length bytes + MemberReference MemberReference range start range bytes start range begin beg	1
MethodDeclaration Modifier ReferenceType case358_line1348 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference Cast = yyVal yyVal ReferenceType MemberReference ArgsNode ArraySelector yyVals BinaryOperation + Literal MemberReference - 2 yyTop	1
MethodDeclaration Modifier ReferenceType getInstanceVariables ReturnStatement public InstanceVariables This	0
MethodDeclaration Modifier ReferenceType case489_line1869 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference ClassCreator = yyVal yyVal ReferenceType MethodInvocation Cast ArrayNode getPosition ReferenceType MemberReference Node ArraySelector yyVals BinaryOperation + Literal MemberReference 0 yyTop	1
MethodDeclaration Modifier ReferenceType getElement ReturnStatement public StackTraceElement MemberReference element	0
MethodDeclaration Modifier defineGlobalEnvConstants FormalParameter LocalVariableDeclaration LocalVariableDeclaration StatementExpression IfStatement LocalVariableDeclaration StatementExpression StatementExpression LocalVariableDeclaration StatementExpression private static ReferenceType runtime ReferenceType VariableDeclarator ReferenceType VariableDeclarator Assignment BinaryOperation BlockStatement ReferenceType VariableDeclarator MethodInvocation MethodInvocation ReferenceType VariableDeclarator MethodInvocation Ruby Map environmentVariableMap Literal OSEnvironment environment ClassCreator MemberReference MethodInvocation = == MemberReference Literal StatementExpression StringOnlyRubyHash h1 ClassCreator h1 MethodInvocation getSingletonClass runtime Literal MemberReference defineGlobalConstant Map systemProps MethodInvocation runtime Literal ClassCreator defineGlobalConstant null ReferenceType environmentVariableMap environment MemberReference getEnvironmentVariableMap environmentVariableMap null Assignment ReferenceType MemberReference MemberReference MethodInvocation ClassReference defineAnnotatedMethods "ENV" h1 environment MemberReference getSystemPropertiesMap "ENV_JAVA" ReferenceType MemberReference MemberReference MethodInvocation OSEnvironment runtime MemberReference ClassCreator = StringOnlyRubyHash runtime environmentVariableMap runtime getNil ReferenceType runtime StringOnlyRubyHash runtime systemProps runtime getNil environmentVariableMap ReferenceType StringOnlyRubyHash HashMap	0
MethodDeclaration Modifier Annotation ReferenceType each_key19 FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject Modifier ReferenceType context Modifier ReferenceType block TernaryExpression name Literal frame Literal final ThreadContext final Block MethodInvocation MethodInvocation MethodInvocation "each_key" true block isGiven MemberReference MemberReference each_key MethodInvocation This Literal enumeratorize context block context getRuntime "each_key"	1
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression LocalVariableDeclaration IfStatement ReturnStatement public IRubyObject ReferenceType ctx ReferenceType largs ReferenceType blk ReferenceType VariableDeclarator MethodInvocation ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation ThreadContext IRubyObject Block IRubyObject larg MethodInvocation MemberReference MemberReference Literal checkContext IRubyObject v MethodInvocation || BinaryOperation BinaryOperation StatementExpression StatementExpression runtime getNil MemberReference MemberReference checkArgs localContext ctx "min_by" block MemberReference MemberReference yield == MemberReference Literal < MethodInvocation Literal Assignment Assignment runtime largs ctx larg memo null RubyComparable MemberReference MethodInvocation MemberReference MemberReference cmpint 0 MemberReference MemberReference = MemberReference MemberReference = ctx v MemberReference Literal MemberReference callMethod v memo memo v ArraySelector result larg ctx "<=>" memo Literal 0	0
MethodDeclaration Modifier Annotation Annotation ReferenceType op_equal FormalParameter FormalParameter IfStatement LocalVariableDeclaration ReturnStatement public JRubyMethod ElementValuePair ElementValuePair Override RubyBoolean ReferenceType context ReferenceType other BinaryOperation ReturnStatement ReferenceType VariableDeclarator MethodInvocation name Literal required Literal ThreadContext IRubyObject instanceof MemberReference ReferenceType MethodInvocation RubyMethod otherMethod Cast context MethodInvocation getRuntime "==" 1 other RubyMethod context MethodInvocation getRuntime ReferenceType MemberReference BinaryOperation newBoolean getFalse RubyMethod other && BinaryOperation BinaryOperation && BinaryOperation BinaryOperation == MethodInvocation MethodInvocation && BinaryOperation BinaryOperation == MemberReference MemberReference method getRealMethod otherMethod.method getRealMethod == MemberReference MemberReference == MemberReference MemberReference receiver otherMethod receiver implementationModule otherMethod implementationModule originModule otherMethod originModule	1
MethodDeclaration Modifier Annotation ReferenceType interpret FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public Override IRubyObject ReferenceType runtime ReferenceType context ReferenceType self ReferenceType aBlock MethodInvocation Ruby ThreadContext IRubyObject Block runtime MethodInvocation newBoolean ! conditionNode MethodInvocation MemberReference MemberReference MemberReference MemberReference interpret isTrue runtime context self aBlock	0
MethodDeclaration Modifier ReferenceType getStrTerm ReturnStatement public StrTerm MemberReference lex_strterm	0
MethodDeclaration Modifier testFrozen FormalParameter IfStatement protected final ReferenceType message MethodInvocation BlockStatement String isFrozen ThrowStatement MethodInvocation MethodInvocation getRuntime MemberReference newFrozenError message	0
MethodDeclaration Modifier ReferenceType case440_line1644 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support MethodInvocation Literal Literal Literal Literal Literal new_args support MethodInvocation createEmptyArgsNodePosition null null null null null getPosition	1
MethodDeclaration Modifier Annotation ReferenceType flush FormalParameter IOException IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType args BinaryOperation BlockStatement MethodInvocation name Literal optional Literal IRubyObject || BinaryOperation BinaryOperation StatementExpression MethodInvocation getRuntime "flush" 1 || BinaryOperation MemberReference != MethodInvocation Literal MethodInvocation getNil == MemberReference Literal ArraySelector MethodInvocation args RubyNumeric MemberReference fix2int 0 io flush args length 0 Literal isNil ArraySelector args 0 Literal 0	0
MethodDeclaration Modifier Annotation ReferenceType initialize FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement LocalVariableDeclaration TryStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType args ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement IfStatement ReferenceType VariableDeclarator LocalVariableDeclaration StatementExpression LocalVariableDeclaration IfStatement StatementExpression StatementExpression StatementExpression CatchClause CatchClause CatchClause CatchClause CatchClause This name Literal required Literal optional Literal visibility MemberReference backtrace Literal ThreadContext IRubyObject IRubyObject hostname MemberReference IRubyObject port TernaryExpression || MethodInvocation BinaryOperation StatementExpression BinaryOperation BlockStatement String shost MethodInvocation ReferenceType VariableDeclarator Assignment BasicType VariableDeclarator BinaryOperation BlockStatement BlockStatement Assignment MethodInvocation MethodInvocation CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement "initialize" 1 1 Visibility PRIVATE true ArraySelector args BinaryOperation MemberReference MethodInvocation hostname isNil && BinaryOperation Cast Assignment instanceof MemberReference ReferenceType StatementExpression StatementExpression hostname MethodInvocation convertToString InetAddress addr MethodInvocation MemberReference MethodInvocation = int portInt instanceof MemberReference ReferenceType StatementExpression LocalVariableDeclaration LocalVariableDeclaration StatementExpression IfStatement MemberReference ClassCreator = ssc MethodInvocation socket MethodInvocation ClassCreator initSocket InvalidValueException ex MethodInvocation UnknownHostException e MethodInvocation BindException e MethodInvocation IOException e MethodInvocation IllegalArgumentException iae MethodInvocation Literal > MemberReference Literal ArraySelector args context MethodInvocation getRuntime instanceof MemberReference ReferenceType ReferenceType MemberReference MemberReference MethodInvocation = hostname RubyFixnum Assignment Assignment toString InetAddress MemberReference getByName ssc ServerSocketChannel open port RubyInteger Assignment ReferenceType VariableDeclarator ReferenceType VariableDeclarator Assignment BinaryOperation BlockStatement socket_address ReferenceType MemberReference MemberReference MemberReference bind context getRuntime ReferenceType MemberReference MethodInvocation ClassCreator ClassCreator context MethodInvocation getRuntime MethodInvocation Literal sockerr context MethodInvocation getRuntime MethodInvocation Literal sockerr MethodInvocation MethodInvocation sockerr 0 args length 1 Literal getNil hostname RubyString RubyString hostname hostname context MethodInvocation getRuntime MemberReference MemberReference = MemberReference MethodInvocation = shost MemberReference MethodInvocation = IRubyObject portString MethodInvocation IRubyObject portInteger MethodInvocation MemberReference MethodInvocation = <= MemberReference Literal StatementExpression InetSocketAddress addr portInt socket_address ChannelDescriptor ssc RubyIO getNewFileno ReferenceType MemberReference ReferenceType newErrnoEINVALError context getRuntime "initialize: name or service not known" newErrnoEADDRINUSEError context getRuntime "initialize: name or service not known" context getRuntime iae getMessage 1 Literal newString port hostname hostname context MethodInvocation getRuntime portInt RubyNumeric MemberReference fix2int port convertToString portString Literal convertToInteger portInt RubyNumeric MemberReference fix2int portInt 0 Assignment ModeFlags ModeFlags RDWR FileDescriptor "0.0.0.0" Literal newString port "to_i" portInteger MemberReference MethodInvocation = "0.0.0.0" portInt RubyNumeric MethodInvocation fix2int RubySocket MemberReference MethodInvocation ArrayCreator getservbyname context context MethodInvocation getRuntime ReferenceType ArrayInitializer getObject IRubyObject MemberReference portString	1
MethodDeclaration Modifier ReferenceType findBuiltinLibrary FormalParameter FormalParameter FormalParameter ForStatement ReturnStatement protected Library ReferenceType state ReferenceType baseName ReferenceType suffixType EnhancedForControl BlockStatement Literal SearchState String SuffixType VariableDeclaration MethodInvocation LocalVariableDeclaration StatementExpression IfStatement null ReferenceType VariableDeclarator suffixType getSuffixes ReferenceType VariableDeclarator MethodInvocation MethodInvocation BlockStatement String suffix String namePlusSuffix BinaryOperation Literal MemberReference debugLogTry builtinLibraries MemberReference containsKey StatementExpression LocalVariableDeclaration StatementExpression ReturnStatement + MemberReference MemberReference "builtinLib" namePlusSuffix namePlusSuffix Assignment ReferenceType VariableDeclarator MethodInvocation MemberReference baseName suffix MemberReference MemberReference = Library lib MethodInvocation Literal MemberReference debugLogFound lib state loadName namePlusSuffix builtinLibraries MemberReference get "builtinLib" namePlusSuffix namePlusSuffix	0
MethodDeclaration Modifier Annotation ReferenceType chomp FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement StatementExpression ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation BlockStatement MethodInvocation MemberReference name Literal frame Literal module Literal visibility MemberReference reads MemberReference writes MemberReference compat MemberReference ThreadContext IRubyObject RubyString str MethodInvocation RubyString dup Cast dup MethodInvocation MemberReference chomp_bang ReturnStatement context MethodInvocation getCurrentScope dup "chomp" true true PRIVATE LASTLINE LASTLINE CompatVersion RUBY1_8 MemberReference MethodInvocation getLastlineString ReferenceType MethodInvocation isNil context MemberReference MemberReference setLastLine context context getRuntime RubyString str dup str dup	0
MethodDeclaration Modifier ReferenceType getVariableTableForWrite FormalParameter IfStatement ReturnStatement private synchronized Object BasicType index BinaryOperation BlockStatement IfStatement MemberReference int == MemberReference MemberReference StatementExpression BinaryOperation BlockStatement varTable varTable NULL_OBJECT_ARRAY Assignment <= MemberReference MemberReference IfStatement LocalVariableDeclaration StatementExpression StatementExpression MemberReference ArrayCreator = varTable length index MemberReference StatementExpression ReferenceType VariableDeclarator MethodInvocation Assignment varTable ReferenceType MethodInvocation DEBUG MethodInvocation Object newTable ArrayCreator System MemberReference Literal MemberReference Literal MemberReference arraycopy MemberReference MemberReference = Object MethodInvocation MethodInvocation getMetaClass System.out BinaryOperation println ReferenceType MethodInvocation varTable 0 newTable 0 varTable length varTable newTable getRealClass getVariableTableSize + BinaryOperation MethodInvocation Object MethodInvocation MethodInvocation getMetaClass + BinaryOperation Literal MethodInvocation MethodInvocation getMetaClass getRealClass getVariableTableSize + Literal MemberReference " to " getRealClass getVariableTableSize "resizing from " varTable length	1
MethodDeclaration Modifier Annotation ReferenceType accept_nonblock ReturnStatement public Deprecated IRubyObject MethodInvocation MethodInvocation accept_nonblock MethodInvocation getRuntime getCurrentContext	1
MethodDeclaration setRegexp FormalParameter StatementExpression ReferenceType regexpClass Assignment RubyClass This MemberReference = MemberReference regexpClass regexpClass	0
MethodDeclaration Modifier ReferenceType convert FormalParameter FormalParameter IfStatement ReturnStatement public IRubyObject ReferenceType runtime ReferenceType object BinaryOperation ReturnStatement MethodInvocation Ruby Object == MemberReference Literal MethodInvocation RubyBoolean MemberReference Cast newBoolean object null runtime getNil runtime ReferenceType MemberReference Boolean object	0
MethodDeclaration Modifier Annotation ReferenceType eos_p FormalParameter StatementExpression ReturnStatement public JRubyMethod ElementValuePair RubyBoolean ReferenceType context MethodInvocation TernaryExpression name Literal ThreadContext check BinaryOperation MethodInvocation MethodInvocation "eos?" >= MemberReference MethodInvocation context MethodInvocation getRuntime context MethodInvocation getRuntime pos str MemberReference getByteList getTrue getFalse realSize	1
MethodDeclaration Modifier ReferenceType getModule ReturnStatement public RubyClass MemberReference moduleClass	0
MethodDeclaration Modifier Annotation ReferenceType to_str FormalParameter LocalVariableDeclaration IfStatement IfStatement LocalVariableDeclaration IfStatement IfStatement LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context ReferenceType VariableDeclarator BinaryOperation BlockStatement IfStatement BinaryOperation StatementExpression ReferenceType VariableDeclarator MethodInvocation BlockStatement IfStatement BinaryOperation BlockStatement ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation name Literal ThreadContext String format Literal == MemberReference MemberReference StatementExpression BinaryOperation BlockStatement IfStatement == MemberReference Literal Assignment String description Literal object isNil StatementExpression BinaryOperation BlockStatement IfStatement || BinaryOperation BinaryOperation StatementExpression Ruby runtime MethodInvocation RubyArray arr MethodInvocation ByteList msgBytes ClassCreator Sprintf MemberReference MemberReference MemberReference sprintf runtime MethodInvocation MemberReference newString "to_str" null visibility PRIVATE Assignment == MemberReference MemberReference StatementExpression BinaryOperation BlockStatement IfStatement format null MemberReference Literal = null Assignment && BinaryOperation MethodInvocation StatementExpression BinaryOperation BlockStatement BlockStatement == MethodInvocation Literal && BinaryOperation BinaryOperation Assignment getRuntime runtime MemberReference MethodInvocation newArray ReferenceType BinaryOperation msgBytes format arr MemberReference infectBy msgBytes MemberReference Literal = visibility PROTECTED Assignment == MemberReference MemberReference StatementExpression BinaryOperation BlockStatement format "undefined method `%s' for %s" MemberReference Literal = instanceof MemberReference ReferenceType object isTrue Assignment && BinaryOperation MethodInvocation StatementExpression TryStatement IfStatement description length 0 > MethodInvocation Literal != MethodInvocation Literal MemberReference BinaryOperation = method runtime MemberReference newString ByteList + BinaryOperation MethodInvocation object format "private method `%s' called for %s" MemberReference Literal = callType CallType VARIABLE Assignment == MemberReference MemberReference StatementExpression description "nil" object RubyBoolean MemberReference Literal = instanceof MemberReference ReferenceType ! object isTrue Assignment StatementExpression CatchClause BinaryOperation StatementExpression description length 0 description Literal charAt '#' description + BinaryOperation MethodInvocation description + MethodInvocation MethodInvocation method MethodInvocation toString format "protected method `%s' called for %s" MemberReference Literal = callType CallType SUPER Assignment description "true" object RubyBoolean MemberReference Literal = Assignment CatchClauseParameter || BinaryOperation BinaryOperation Assignment 0 + MemberReference Literal object MethodInvocation MethodInvocation getMetaClass format length description length length format "undefined local variable or method `%s' for %s" MemberReference Literal = description "false" MemberReference MethodInvocation = JumpException e == MemberReference Literal > MethodInvocation Literal MemberReference MethodInvocation = description ":" getRealClass getName format "super: no superclass method `%s'" description RubyObject MethodInvocation MemberReference MemberReference inspect description null description length 65 description object MethodInvocation anyToString toString context object toString	1
MethodDeclaration Modifier Annotation ReferenceType interpret FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration TryStatement public Override IRubyObject ReferenceType runtime ReferenceType context ReferenceType self ReferenceType aBlock ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReturnStatement CatchClause StatementExpression Ruby ThreadContext IRubyObject Block IRubyObject receiver MethodInvocation Block block MethodInvocation MethodInvocation CatchClauseParameter ThrowStatement MethodInvocation MethodInvocation getReceiverNode RuntimeHelpers MemberReference MemberReference MemberReference getBlock callAdapter MemberReference MemberReference MemberReference MemberReference call JumpException.RetryJump rj MethodInvocation block escape MemberReference MemberReference MemberReference MemberReference interpret context self iterNode context self receiver block runtime MemberReference MemberReference Literal newLocalJumpError runtime context self aBlock Reason RETRY self "retry is not supported outside rescue"	1
MethodDeclaration Modifier Annotation ReferenceType eof_p FormalParameter FormalParameter LocalVariableDeclaration IfStatement IfStatement ReturnStatement static public JRubyMethod ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType VariableDeclarator MemberReference ReturnStatement BinaryOperation ReturnStatement Cast name ElementArrayValue ThreadContext IRubyObject ArgsFileData data MethodInvocation ! data inited MethodInvocation instanceof MemberReference ReferenceType MethodInvocation ReferenceType MemberReference Literal ArgsFileData MemberReference getDataFrom context MethodInvocation getRuntime data currentFile RubyIO data.currentFile MemberReference Literal callMethod RubyIO data currentFile "eof?" recv getTrue context "eof?"	1
MethodDeclaration addConstructor FormalParameter FormalParameter IfStatement IfStatement StatementExpression StatementExpression ReferenceType ctor ReferenceType javaClass BinaryOperation BlockStatement MethodInvocation BlockStatement MethodInvocation Assignment Constructor Class TypeArgument == MemberReference Literal StatementExpression ! Ruby isSecurityRestricted TryStatement constructors MemberReference add MemberReference BinaryOperation |= ? constructors null Assignment StatementExpression CatchClause ctor haveLocalConstructor == MemberReference MethodInvocation MemberReference ClassCreator = MethodInvocation CatchClauseParameter javaClass ctor getDeclaringClass constructors ReferenceType Literal ctor Literal setAccessible SecurityException e ArrayList TypeArgument 4 true ReferenceType Constructor	1
MethodDeclaration Modifier ReferenceType borrowParser FormalParameter IfStatement public RubyParser ReferenceType version BinaryOperation BlockStatement BlockStatement CompatVersion == MemberReference MemberReference ReturnStatement ReturnStatement version CompatVersion RUBY1_8 ClassCreator ClassCreator ReferenceType ReferenceType DefaultRubyParser Ruby19Parser	0
MethodDeclaration Modifier ReferenceType fastHashStore FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration ForStatement StatementExpression StatementExpression StatementExpression StatementExpression ReturnStatement private Object ReferenceType internedName ReferenceType value ReferenceType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator ReferenceType VariableDeclarator ForControl BlockStatement Assignment Assignment MemberReference Assignment MemberReference String Object VariableTableEntry table TernaryExpression int index int hash MethodInvocation VariableTableEntry e Assignment BinaryOperation Assignment IfStatement MemberReference ClassCreator = MemberReference MemberReference = ++ vTableSize MemberReference MemberReference = value BinaryOperation MethodInvocation MemberReference internedName hashCode MemberReference MemberReference = != MemberReference Literal MemberReference MemberReference = BinaryOperation BlockStatement e ReferenceType MemberReference MemberReference MemberReference MemberReference ArraySelector table e vTable table > BinaryOperation MemberReference rehash vTable e ArraySelector table e null e e next == MemberReference MemberReference StatementExpression ReturnStatement VariableTableEntry hash internedName value ArraySelector table MemberReference + MemberReference Literal vTableThreshold Assignment internedName e name Assignment MemberReference MemberReference index vTableSize 1 MemberReference BinaryOperation = MemberReference MemberReference = value index index & MemberReference BinaryOperation e value value hash - MemberReference Literal table length 1	1
MethodDeclaration Modifier ReferenceType createHandle FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement LocalVariableDeclaration TryStatement StatementExpression LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration SwitchStatement StatementExpression StatementExpression IfStatement SwitchStatement IfStatement IfStatement StatementExpression StatementExpression IfStatement StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression IfStatement static public Handle ReferenceType classLoader ReferenceType method BasicType debug ReferenceType VariableDeclarator MemberReference BlockStatement BlockStatement ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement ReferenceType VariableDeclarator LocalVariableDeclaration ReturnStatement CatchClause MethodInvocation ReferenceType VariableDeclarator ReferenceType VariableDeclarator BasicType VariableDeclarator MemberReference SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase Assignment MethodInvocation MethodInvocation BlockStatement MemberReference SwitchStatementCase SwitchStatementCase MethodInvocation BlockStatement IfStatement BinaryOperation BlockStatement IfStatement MethodInvocation MethodInvocation MemberReference BlockStatement Assignment MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MemberReference BlockStatement BlockStatement JRubyClassLoader Method boolean ClassVisitor cv debug StatementExpression StatementExpression Class returnType MethodInvocation Class paramTypes MethodInvocation ClassLoader loader MethodInvocation == MemberReference Literal StatementExpression String name BinaryOperation ReferenceType VariableDeclarator Cast CatchClauseParameter cv BinaryOperation MemberReference MemberReference Literal MethodInvocation Literal visit SkinnyMethodAdapter m String signature boolean needsArgsVersion Literal paramTypes length Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement StatementExpression StatementExpression BreakStatement MemberReference ClassCreator = m start ! Modifier MethodInvocation isStatic StatementExpression IfStatement paramTypes length Literal Literal Literal Literal ForStatement BreakStatement ForStatement BreakStatement Modifier MethodInvocation isStatic StatementExpression MethodInvocation BlockStatement BlockStatement == MemberReference VoidClassReference StatementExpression MethodInvocation BlockStatement m areturn m end needsArgsVersion StatementExpression StatementExpression StatementExpression StatementExpression ForStatement StatementExpression StatementExpression StatementExpression MemberReference ClassCreator = m start m Literal aload m MethodInvocation Literal MethodInvocation invokespecial m voidreturn m end cv visitEnd debug StatementExpression ReturnStatement LocalVariableDeclaration LocalVariableDeclaration TryStatement Assignment Assignment method getReturnType method getParameterTypes method MethodInvocation getDeclaringClass loader null Assignment + BinaryOperation MethodInvocation Class existing MethodInvocation ReferenceType MethodInvocation Exception e | BinaryOperation MemberReference V1_5 name null ClassReference p null true 0 Assignment 1 Assignment 2 Assignment 3 Assignment Assignment Assignment m ReferenceType MethodInvocation method getModifiers MethodInvocation BinaryOperation BlockStatement 0 1 2 3 ForControl BlockStatement ForControl BlockStatement method getModifiers MethodInvocation Modifier MethodInvocation isInterface StatementExpression StatementExpression returnType MethodInvocation returnType isPrimitive LocalVariableDeclaration StatementExpression Assignment MethodInvocation MethodInvocation MethodInvocation ForControl BlockStatement MethodInvocation MethodInvocation MethodInvocation m ReferenceType MethodInvocation 0 ClassReference p "<init>" VoidClassReference sig Cast MethodInvocation BasicType VariableDeclarator ReferenceType VariableDeclarator ReturnStatement CatchClause MemberReference ClassCreator = MemberReference ClassCreator = getClassLoader MemberReference MethodInvocation = + BinaryOperation Literal Math MethodInvocation abs classLoader MemberReference loadClass Handle existing newInstance | MemberReference MemberReference ACC_SUPER ReferenceType MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference Literal = MemberReference MethodInvocation = SkinnyMethodAdapter cv BinaryOperation Literal MemberReference Literal Literal visitMethod m Literal aload != MethodInvocation ClassReference StatementExpression VariableDeclaration BinaryOperation MemberReference StatementExpression VariableDeclaration BinaryOperation MemberReference StatementExpression StatementExpression StatementExpression LocalVariableDeclaration IfStatement m MethodInvocation MethodInvocation MethodInvocation invokestatic method MethodInvocation getDeclaringClass MethodInvocation MethodInvocation m aconst_null ReferenceType VariableDeclarator MethodInvocation MemberReference ClassCreator = m start m Literal aload m Literal aload VariableDeclaration BinaryOperation MemberReference StatementExpression StatementExpression StatementExpression m MemberReference Literal MethodInvocation invokevirtual m areturn m end SkinnyMethodAdapter cv MemberReference Literal MethodInvocation Literal Literal visitMethod ReferenceType ReferenceType MemberReference MemberReference MemberReference Literal createHandle byte bytes Cast Class handleClass TernaryExpression Cast CatchClauseParameter ThrowStatement cv ReferenceType ClassCreator cv ReferenceType MemberReference loader ClassLoader getSystemClassLoader + BinaryOperation MethodInvocation "#" MethodInvocation MemberReference MemberReference pretty name ACC_PUBLIC ACC_FINAL Handle signature ClassReference ClassReference sig signature ClassReference ClassReference ClassReference sig signature ClassReference ClassReference ClassReference ClassReference sig signature ClassReference ClassReference ClassReference ClassReference ClassReference sig needsArgsVersion false signature ClassReference ClassReference ClassReference sig | BinaryOperation MemberReference "invoke" signature null null 1 method getDeclaringClass ReferenceType MethodInvocation BasicType VariableDeclarator < MemberReference MemberReference ++ i MethodInvocation BasicType VariableDeclarator < MemberReference MemberReference ++ i MethodInvocation MethodInvocation MethodInvocation ReferenceType VariableDeclarator MethodInvocation BlockStatement IfStatement MethodInvocation p method getName MemberReference MemberReference sig getModifiers m MethodInvocation MethodInvocation MethodInvocation invokeinterface m MethodInvocation MethodInvocation MethodInvocation invokevirtual Class boxType MethodInvocation m MethodInvocation Literal MethodInvocation invokestatic m ReferenceType MethodInvocation 0 1 BasicType VariableDeclarator < MemberReference MemberReference ++ i MethodInvocation MethodInvocation MethodInvocation name "invoke" ClassReference MethodInvocation sig ACC_PUBLIC "<init>" VoidClassReference sig null null Handle ASMifierClassVisitor cv classLoader method false ReferenceType MemberReference BinaryOperation MemberReference ClassCreator ReferenceType MethodInvocation Exception e ClassCreator ASMifierClassVisitor ReferenceType MemberReference ClassWriter ClassWriter COMPUTE_MAXS + BinaryOperation Literal method getName hashCode returnType paramTypes ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType | MemberReference MemberReference ACC_SYNTHETIC Object m MethodInvocation checkcast int i Literal i paramTypes length MemberReference BinaryOperation MemberReference loadUnboxedArgument int i Literal i paramTypes length m Literal aload m MemberReference pushInt m aaload Class paramClass MemberReference paramClass isPrimitive LocalVariableDeclaration StatementExpression StatementExpression BinaryOperation BlockStatement method getDeclaringClass returnType paramTypes MethodInvocation p method getName MemberReference MemberReference sig MethodInvocation p method getName MemberReference MemberReference sig MemberReference getBoxType MemberReference p "valueOf" MemberReference MemberReference sig SkinnyMethodAdapter cv BinaryOperation Literal MethodInvocation Literal Literal visitMethod int i Literal i paramTypes length m Literal aload m MemberReference ldc m aaload ReferenceType ClassReference ClassReference MemberReference params ClassWriter cv != MemberReference Literal classLoader ReferenceType ClassReference Handle handleClass newInstance ReferenceType MemberReference PrintWriter System out + BinaryOperation MethodInvocation "#" Object Object Object Object Object Object Object Object Object Object Object Object Object Object Object Object Object ACC_PUBLIC ACC_FINAL MethodInvocation p 0 m + MemberReference Literal ArraySelector paramTypes 0 2 i ArraySelector paramTypes ReferenceType VariableDeclarator MethodInvocation MethodInvocation != MemberReference ClassReference StatementExpression method getDeclaringClass returnType paramTypes method getDeclaringClass returnType paramTypes returnType boxType boxType returnType | BinaryOperation MemberReference "invoke" ClassReference ClassReference ClassReference sig null null 0 2 i Object ReferenceType ReferenceType paramTypes length classLoader null JRubyClassLoader MethodInvocation ReferenceType RuntimeException e + MethodInvocation Literal Math MethodInvocation abs method getDeclaringClass i 2 MemberReference MemberReference Class boxType MethodInvocation m MethodInvocation checkcast m MethodInvocation BinaryOperation MethodInvocation invokevirtual paramClass ReferenceType MethodInvocation | MemberReference MemberReference ACC_SYNTHETIC ReferenceType ReferenceType ReferenceType Object Object getClassLoader JRubyClassLoader method MethodInvocation MethodInvocation getDeclaringClass "#" loader hashCode i i MemberReference getBoxType MemberReference p MemberReference p + MethodInvocation Literal MemberReference sig Object m MethodInvocation checkcast ACC_PUBLIC ACC_FINAL Object Object Object getCanonicalName Literal Literal replaceAll paramClass boxType boxType paramClass toString "Value" paramClass MemberReference p "\\." "__" paramClass	1
MethodDeclaration Modifier ReferenceType toString ReturnStatement public String MethodInvocation sb toString	0
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration ReturnStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType arg0 ReferenceType arg1 MethodInvocation ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation ThreadContext IRubyObject RubyModule String IRubyObject IRubyObject MethodInvocation createJavaMethods JavaMethod method Cast Object cArg0 MethodInvocation Object cArg1 MethodInvocation method MemberReference MemberReference invokeStaticDirect self getRuntime ReferenceType MethodInvocation MemberReference MemberReference MemberReference Literal convertArg MemberReference MemberReference MemberReference Literal convertArg cArg0 cArg1 JavaMethod MemberReference MemberReference MemberReference MemberReference findCallableArityTwo context arg0 method 0 context arg1 method 1 self name arg0 arg1	0
MethodDeclaration setMethod FormalParameter StatementExpression ReferenceType methodClass Assignment RubyClass This MemberReference = MemberReference methodClass methodClass	0
MethodDeclaration Modifier ReferenceType allocate FormalParameter FormalParameter ReturnStatement final public IRubyObject ReferenceType runtime ReferenceType klass ClassCreator Ruby RubyClass ReferenceType MemberReference MemberReference FileDescriptorIO runtime klass	1
MethodDeclaration Modifier ReferenceType getPost ReturnStatement public ListNode MemberReference post	0
MethodDeclaration Modifier call FormalParameter LocalVariableDeclaration IfStatement public ReferenceType context ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement BodyCompiler Node argsNode MethodInvocation instanceof MemberReference ReferenceType StatementExpression StatementExpression multipleAsgn19Node getRest argsNode StarNode MethodInvocation MethodInvocation context consumeCurrentValue MemberReference MemberReference Literal compileAssignment argsNode context false	0
MethodDeclaration Modifier ReferenceType getFirstNode ReturnStatement public Node MemberReference firstNode	0
MethodDeclaration Modifier Annotation BasicType isKindOf FormalParameter FormalParameter ReturnStatement public Override boolean ReferenceType obj ReferenceType type BinaryOperation IRubyObject RubyModule instanceof MemberReference ReferenceType obj RubyString	0
MethodDeclaration Modifier Annotation BasicType equals FormalParameter ReturnStatement public Override boolean ReferenceType other BinaryOperation Object && BinaryOperation BinaryOperation instanceof MemberReference ReferenceType == This Cast other JavaObject MethodInvocation ReferenceType MemberReference dataGetStruct JavaObject other	0
MethodDeclaration Modifier Annotation BasicType isKindOf FormalParameter FormalParameter ReturnStatement public Override boolean ReferenceType obj ReferenceType type BinaryOperation IRubyObject RubyModule instanceof MemberReference ReferenceType obj RubyFile	0
MethodDeclaration Modifier ReferenceType convertToInteger FormalParameter FormalParameter IfStatement ReturnStatement private IRubyObject ReferenceType context ReferenceType other BinaryOperation BlockStatement MethodInvocation ThreadContext IRubyObject instanceof MemberReference ReferenceType ThrowStatement other convertToInteger other RubyFloat MethodInvocation context MethodInvocation getRuntime Literal newTypeError "can't convert Float into Integer"	0
MethodDeclaration Modifier ReferenceType newEmptyArray ReturnStatement public RubyArray MethodInvocation RubyArray This newEmptyArray	0
MethodDeclaration Modifier ReferenceType getType FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement static public String BasicType i ReferenceType o ReferenceType o2 ReferenceType o3 Literal double String String String "double,string,string,string"	0
MethodDeclaration Modifier integrate FormalParameter StatementExpression public ReferenceType other Assignment ASTInspector MemberReference MemberReference |= flags other flags	0
MethodDeclaration Modifier Annotation ReferenceType each_cons19 FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair IRubyObject ReferenceType context ReferenceType self ReferenceType arg Modifier ReferenceType block TernaryExpression name Literal ThreadContext IRubyObject IRubyObject final Block MethodInvocation MethodInvocation MethodInvocation "each_cons" block isGiven MemberReference MemberReference MemberReference MemberReference each_cons MethodInvocation MemberReference Literal MemberReference enumeratorize context self arg block context getRuntime self "each_cons" arg	1
MethodDeclaration Modifier ReferenceType getNodeType ReturnStatement public NodeType MemberReference NodeType ARRAYNODE	0
MethodDeclaration Modifier ReferenceType childNodes ReturnStatement public List TypeArgument MethodInvocation ReferenceType Node MemberReference MemberReference createList Node receiverNode valueNode	0
MethodDeclaration Modifier Annotation Annotation ReferenceType floor ReturnStatement public JRubyMethod ElementValuePair Override IRubyObject MethodInvocation name Literal MethodInvocation MethodInvocation dbl2num "floor" getRuntime Math MemberReference floor value	0
MethodDeclaration Modifier Annotation ReferenceType open FormalParameter FormalParameter ReturnStatement static public Deprecated IRubyObject ReferenceType recv ReferenceType path MethodInvocation IRubyObject IRubyObject MethodInvocation MemberReference MemberReference open recv MethodInvocation getRuntime recv path getCurrentContext	1
MethodDeclaration Modifier Annotation ReferenceType hash ReturnStatement public JRubyMethod RubyFixnum MethodInvocation MethodInvocation getRuntime MethodInvocation newFixnum hashCode	0
MethodDeclaration Modifier main FormalParameter Exception LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration TryStatement LocalVariableDeclaration ForStatement static public ReferenceType args ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator LocalVariableDeclaration WhileStatement StatementExpression ReferenceType VariableDeclarator EnhancedForControl BlockStatement String FileReader fr ClassCreator BufferedReader br ClassCreator List TypeArgument classNames ClassCreator ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation DumpingInvocationMethodFactory dumper ClassCreator VariableDeclaration MemberReference LocalVariableDeclaration TryStatement ReferenceType MemberReference ReferenceType MemberReference ReferenceType ReferenceType String line != Assignment Literal StatementExpression br close ReferenceType MemberReference ClassCreator ReferenceType VariableDeclarator classNames ReferenceType VariableDeclarator IfStatement LocalVariableDeclaration StatementExpression ForStatement ForStatement ForStatement ForStatement ForStatement ForStatement CatchClause FileReader ArraySelector args BufferedReader fr String ArrayList TypeArgument MemberReference MethodInvocation = null MethodInvocation DumpingInvocationMethodFactory ArraySelector args ReferenceType MethodInvocation String name MethodClumper clumper ClassCreator MemberReference StatementExpression ReferenceType VariableDeclarator MethodInvocation EnhancedForControl BlockStatement EnhancedForControl BlockStatement EnhancedForControl BlockStatement EnhancedForControl BlockStatement EnhancedForControl BlockStatement EnhancedForControl BlockStatement CatchClauseParameter StatementExpression ThrowStatement Literal ReferenceType line br readLine classNames MemberReference add Literal JRubyClassLoader ClassLoader getSystemClassLoader ReferenceType DEBUG MethodInvocation Class cls MethodInvocation clumper MemberReference clump VariableDeclaration MethodInvocation StatementExpression VariableDeclaration MethodInvocation StatementExpression VariableDeclaration MethodInvocation StatementExpression VariableDeclaration MethodInvocation StatementExpression VariableDeclaration MethodInvocation StatementExpression VariableDeclaration MethodInvocation StatementExpression Exception e MethodInvocation MemberReference 0 String line 1 MethodClumper System.out BinaryOperation println Class MemberReference Literal ClassReference forName cls ReferenceType VariableDeclarator clumper MethodInvocation getStaticAnnotatedMethods MethodInvocation ReferenceType VariableDeclarator clumper MethodInvocation getAnnotatedMethods MethodInvocation ReferenceType VariableDeclarator clumper MethodInvocation getStaticAnnotatedMethods1_8 MethodInvocation ReferenceType VariableDeclarator clumper MethodInvocation getAnnotatedMethods1_8 MethodInvocation ReferenceType VariableDeclarator clumper MethodInvocation getStaticAnnotatedMethods1_9 MethodInvocation ReferenceType VariableDeclarator clumper MethodInvocation getAnnotatedMethods1_9 MethodInvocation e printStackTrace e + Literal MemberReference name false MethodInvocation ReferenceType Map ReferenceType entry entrySet dumper MethodInvocation getAnnotatedMethodClass Map ReferenceType entry entrySet dumper MethodInvocation getAnnotatedMethodClass Map ReferenceType entry entrySet dumper MethodInvocation getAnnotatedMethodClass Map ReferenceType entry entrySet dumper MethodInvocation getAnnotatedMethodClass Map ReferenceType entry entrySet dumper MethodInvocation getAnnotatedMethodClass Map ReferenceType entry entrySet dumper MethodInvocation getAnnotatedMethodClass "generating for class " name getClassLoader InvokerGenerator Entry TypeArgument TypeArgument entry getValue Entry TypeArgument TypeArgument entry getValue Entry TypeArgument TypeArgument entry getValue Entry TypeArgument TypeArgument entry getValue Entry TypeArgument TypeArgument entry getValue Entry TypeArgument TypeArgument entry getValue ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType String List TypeArgument String List TypeArgument String List TypeArgument String List TypeArgument String List TypeArgument String List TypeArgument ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType JavaMethodDescriptor JavaMethodDescriptor JavaMethodDescriptor JavaMethodDescriptor JavaMethodDescriptor JavaMethodDescriptor	1
MethodDeclaration Modifier ReferenceType getSingleNilArray ReturnStatement public IRubyObject MemberReference singleNilArray	0
MethodDeclaration Modifier Annotation ReferenceType op_aref19 FormalParameter LocalVariableDeclaration ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType idx ReferenceType VariableDeclarator TernaryExpression name Literal compat MemberReference IRubyObject IRubyObject result MethodInvocation BinaryOperation Cast MemberReference "[]" CompatVersion RUBY1_9 MemberReference op_arefCommon == MemberReference Literal ReferenceType MethodInvocation result idx result null RubyArray to_a	1
MethodDeclaration Modifier ReferenceType backref FormalParameter LocalVariableDeclaration IfStatement ReturnStatement static public IRubyObject ReferenceType context ReferenceType VariableDeclarator BinaryOperation BlockStatement MemberReference ThreadContext IRubyObject backref MethodInvocation instanceof MemberReference ReferenceType StatementExpression backref context MethodInvocation getCurrentScope backref RubyMatchData Cast MethodInvocation getBackRef ReferenceType MemberReference context getRuntime RubyMatchData backref	0
MethodDeclaration Modifier ReferenceType allocate FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType runtime ReferenceType klass ClassCreator Ruby RubyClass ReferenceType MemberReference MemberReference RubyIPSocket runtime klass	0
MethodDeclaration Modifier Annotation ReferenceType select19 FormalParameter FormalParameter LocalVariableDeclaration IfStatement LocalVariableDeclaration StatementExpression ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject Modifier ReferenceType context Modifier ReferenceType block Modifier ReferenceType VariableDeclarator MethodInvocation ReturnStatement Modifier ReferenceType VariableDeclarator MethodInvocation MemberReference name Literal frame Literal compat MemberReference final ThreadContext final Block final Ruby runtime MethodInvocation ! block isGiven MethodInvocation final RubyHash result MethodInvocation ClassCreator iteratorVisitAll result "select" true CompatVersion RUBY1_9 context getRuntime MemberReference This Literal enumeratorize MemberReference newHash ReferenceType MethodDeclaration runtime "select" runtime Visitor Modifier visit FormalParameter FormalParameter IfStatement public ReferenceType key ReferenceType value MethodInvocation BlockStatement IRubyObject IRubyObject block MethodInvocation MemberReference MethodInvocation Literal Literal Literal yield StatementExpression isTrue context runtime MemberReference MemberReference newArray null null true MethodInvocation key value result MemberReference MemberReference fastASet key value	1
MethodDeclaration Modifier ReferenceType createBigDecimal FormalParameter LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression ReturnStatement static public RubyClass ReferenceType runtime ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MemberReference Ruby RubyClass result MethodInvocation runtime MethodInvocation getKernel result Literal MethodInvocation setInternalModuleVariable result Literal MethodInvocation setInternalModuleVariable result Literal MethodInvocation setInternalModuleVariable result ClassReference defineAnnotatedMethods result ClassReference defineAnnotatedConstants result runtime Literal MethodInvocation MemberReference defineClass ClassReference defineAnnotatedMethods "vpPrecLimit" RubyFixnum MemberReference zero "vpExceptionMode" RubyFixnum MemberReference zero "vpRoundingMode" runtime MemberReference newFixnum ReferenceType ReferenceType "BigDecimal" runtime getNumeric BIGDECIMAL_ALLOCATOR ReferenceType runtime runtime ROUND_HALF_UP RubyBigDecimal RubyBigDecimal BigDecimalKernelMethods	1
MethodDeclaration Modifier Annotation ReferenceType method_missing FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType args ReferenceType block ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation ThrowStatement MethodInvocation name Literal rest Literal frame Literal module Literal visibility MemberReference ThreadContext IRubyObject IRubyObject Block Visibility lastVis MethodInvocation CallType lastCallType MethodInvocation || BinaryOperation BinaryOperation MethodInvocation MemberReference MemberReference Cast MemberReference MemberReference MemberReference MemberReference methodMissingDirect "method_missing" true true true PRIVATE context getLastVisibility context getLastCallType == MemberReference Literal instanceof MemberReference ReferenceType context MethodInvocation getRuntime context recv ReferenceType MemberReference lastVis lastCallType args block args length 0 ArraySelector args RubySymbol Literal newArgumentError RubySymbol ArraySelector args Literal "no id given" Literal 0 0	1
MethodDeclaration Modifier BasicType getLineNumber ReturnStatement public int MemberReference lineNumber	0
MethodDeclaration Modifier BasicType hasMethod ReturnStatement public boolean MethodInvocation MemberReference getFlag METHOD	0
MethodDeclaration Modifier BasicType isConstant FormalParameter ReturnStatement static boolean Modifier ReferenceType field BinaryOperation final Field && BinaryOperation MethodInvocation == BinaryOperation MemberReference Character MethodInvocation isUpperCase & MethodInvocation MemberReference CONSTANT field MethodInvocation getName field getModifiers CONSTANT Literal charAt 0	0
MethodDeclaration Modifier Annotation ReferenceType delete_if FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType block TernaryExpression name Literal frame Literal ThreadContext Block MethodInvocation MethodInvocation MethodInvocation "delete_if" true block isGiven MemberReference MemberReference deleteIf MethodInvocation This Literal enumeratorize context block context getRuntime "delete_if"	1
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType args ReferenceType VariableDeclarator BinaryOperation BlockStatement MemberReference ThreadContext IRubyObject RubyModule String IRubyObject IRubyObject proxy MethodInvocation instanceof MethodInvocation ReferenceType StatementExpression proxy oldNew MemberReference MemberReference MemberReference Literal MemberReference call proxy dataGetStruct JavaObject MethodInvocation context self clazz "new_proxy" args RuntimeHelpers MemberReference MemberReference Literal MemberReference invoke context proxy "__jcreate!" args	0
MethodDeclaration Modifier Annotation ReferenceType endpwent FormalParameter LocalVariableDeclaration TryStatement ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType recv ReferenceType VariableDeclarator StatementExpression CatchClause MethodInvocation name Literal module Literal IRubyObject Ruby runtime MethodInvocation MethodInvocation CatchClauseParameter IfStatement runtime getNil "endpwent" true recv getRuntime runtime MethodInvocation getPosix Exception e MethodInvocation BlockStatement endpwent runtime MethodInvocation getDebug StatementExpression isTrue MethodInvocation runtime MethodInvocation getWarnings MemberReference Literal MemberReference warn ID NOT_IMPLEMENTED "Etc.endpwent is not supported by JRuby on this platform" e	0
MethodDeclaration Modifier BasicType assignOptArgs FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration ForStatement ForStatement ReturnStatement protected int ReferenceType args ReferenceType runtime ReferenceType context ReferenceType self BasicType givenArgsCount BasicType VariableDeclarator ForControl BlockStatement ForControl BlockStatement MemberReference IRubyObject Ruby ThreadContext IRubyObject int int j Literal VariableDeclaration BinaryOperation MemberReference MemberReference StatementExpression StatementExpression VariableDeclaration BinaryOperation MemberReference MemberReference StatementExpression givenArgsCount 0 BasicType VariableDeclarator && BinaryOperation BinaryOperation ++ i ++ j MethodInvocation MemberReference BasicType VariableDeclarator < MemberReference MethodInvocation ++ i ++ j MethodInvocation int i MemberReference < MemberReference BinaryOperation < MemberReference MethodInvocation optArgs MethodInvocation MemberReference get ++ givenArgsCount int i Literal j optArgs size optArgs MethodInvocation MemberReference get preCount i - MemberReference MemberReference j optArgs size MemberReference MemberReference MemberReference MemberReference MemberReference Literal assign j 0 MemberReference MemberReference MemberReference MemberReference interpret j args length postCount runtime context self ArraySelector args Block NULL_BLOCK true runtime context self Block NULL_BLOCK MemberReference i	1
MethodDeclaration Modifier ReferenceType getModule FormalParameter ReturnStatement public RubyModule ReferenceType name Cast String ReferenceType MethodInvocation RubyModule objectClass MemberReference getConstantAt name	0
MethodDeclaration Modifier ReferenceType new_bv FormalParameter IfStatement StatementExpression StatementExpression ReturnStatement public Node ReferenceType identifier MethodInvocation BlockStatement MethodInvocation MethodInvocation Literal Token ! MemberReference is_local_id StatementExpression MemberReference shadowing_lvar MemberReference arg_var null identifier MethodInvocation identifier identifier MethodInvocation Cast getterIdentifierError identifier getPosition ReferenceType MethodInvocation String identifier getValue	1
MethodDeclaration Modifier Annotation ReferenceType put_float64 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType offset ReferenceType value MethodInvocation This name ElementArrayValue required Literal ThreadContext IRubyObject IRubyObject MethodInvocation getMemoryIO Literal Literal 2 MethodInvocation MethodInvocation putDouble "put_float64" "put_double" MemberReference getOffset Util MemberReference doubleValue offset value	1
MethodDeclaration Modifier ReferenceType toString ReturnStatement public String BinaryOperation + Literal TernaryExpression "COMPOUND_STRING" BinaryOperation Literal MethodInvocation == MemberReference Literal "" java.util.Arrays MethodInvocation toString _pieces null _pieces toArray	0
MethodDeclaration Modifier ReferenceType unwrapJavaObject FormalParameter ReturnStatement static public Object ReferenceType object Cast IRubyObject ReferenceType MethodInvocation JavaObject object dataGetStruct	0
MethodDeclaration Modifier ReferenceType case68_line543 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference ClassCreator = yyVal yyVal ReferenceType MethodInvocation Literal Cast MultipleAsgnNode Cast getPosition null ReferenceType MemberReference ReferenceType MemberReference Node ArraySelector yyVals Token ArraySelector yyVals BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference 0 yyTop - 1 yyTop	1
MethodDeclaration Modifier ReferenceType flush FormalParameter IOException ReturnStatement public IRubyObject BasicType flush MethodInvocation int ClassCreator MemberReference deflate ReferenceType Literal flush ByteList 0	0
MethodDeclaration Modifier ReferenceType whenNoTest FormalParameter FormalParameter FormalParameter FormalParameter IfStatement ReturnStatement private IRubyObject ReferenceType context ReferenceType runtime ReferenceType self ReferenceType aBlock MethodInvocation BlockStatement Literal ThreadContext Ruby IRubyObject Block expressionNodes MethodInvocation MemberReference MemberReference MemberReference MemberReference interpret ReturnStatement null isTrue runtime context self aBlock MethodInvocation bodyNode MemberReference MemberReference MemberReference MemberReference interpret runtime context self aBlock	0
MethodDeclaration Modifier Annotation ReferenceType getpgrp FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv MethodInvocation name Literal module Literal visibility MemberReference ThreadContext IRubyObject MethodInvocation getpgrp "getpgrp" true Visibility PRIVATE context getRuntime	0
MethodDeclaration Modifier ReferenceType replaceCommon FormalParameter StatementExpression LocalVariableDeclaration StatementExpression StatementExpression StatementExpression ReturnStatement private RubyString ReferenceType other MethodInvocation ReferenceType VariableDeclarator Assignment Assignment MethodInvocation MemberReference IRubyObject modifyCheck RubyString otherStr MethodInvocation MemberReference Assignment = MemberReference MemberReference = MemberReference infectBy otherStr other convertToString otherStr shareLevel MemberReference MemberReference = value otherStr value otherStr shareLevel SHARE_LEVEL_BYTELIST	0
MethodDeclaration Modifier Annotation ReferenceType gethostname FormalParameter FormalParameter TryStatement static public JRubyMethod ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReturnStatement CatchClause meta Literal ThreadContext IRubyObject MethodInvocation CatchClauseParameter TryStatement true context MethodInvocation getRuntime UnknownHostException e ReturnStatement CatchClause MethodInvocation newString MethodInvocation CatchClauseParameter ThrowStatement InetAddress MethodInvocation getLocalHost context MethodInvocation getRuntime UnknownHostException e2 MethodInvocation getHostName MethodInvocation newString MethodInvocation Literal sockerr InetAddress MethodInvocation ArrayCreator getByAddress context getRuntime "gethostname: name or service not known" getHostName BasicType ArrayInitializer byte Literal Literal Literal Literal 0 0 0 0	1
MethodDeclaration Modifier invokeCCallTrace FormalParameter StatementExpression StatementExpression StatementExpression StatementExpression private ReferenceType method MethodInvocation MethodInvocation MethodInvocation MethodInvocation SkinnyMethodAdapter method Literal aload method Literal aload method Literal aload method MethodInvocation Literal MethodInvocation invokevirtual 0 1 4 ClassReference p "callTrace" VoidClassReference ClassReference ClassReference sig ReferenceType ReferenceType ReferenceType JavaMethod ThreadContext String	0
MethodDeclaration Modifier createJavaMethods FormalParameter IfStatement synchronized ReferenceType runtime MemberReference BlockStatement Ruby ! initialized IfStatement StatementExpression BinaryOperation BlockStatement Assignment != MemberReference Literal IfStatement StatementExpression StatementExpression MemberReference Literal = methods null BinaryOperation BlockStatement BlockStatement Assignment Assignment initialized true == MemberReference Literal StatementExpression LocalVariableDeclaration LocalVariableDeclaration ForStatement StatementExpression ForStatement MemberReference Literal = MemberReference ClassCreator = methods length 1 Assignment ReferenceType VariableDeclarator BasicType VariableDeclarator EnhancedForControl BlockStatement Assignment ForControl BlockStatement methods null cache ReferenceType MemberReference MethodInvocation = Map methodsMap ClassCreator int maxArity Literal VariableDeclaration MemberReference LocalVariableDeclaration StatementExpression LocalVariableDeclaration IfStatement StatementExpression MemberReference ArrayCreator = VariableDeclaration MethodInvocation LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression ConcurrentHashMap javaCallable JavaMethod MemberReference MemberReference create ReferenceType 0 ReferenceType VariableDeclarator methods BasicType VariableDeclarator Assignment ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation javaCallables ReferenceType BinaryOperation ReferenceType VariableDeclarator iter hasNext ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator Assignment runtime ArraySelector methods HashMap Method method int arity MethodInvocation MemberReference MethodInvocation = List TypeArgument methodsForArity Cast == MemberReference Literal StatementExpression StatementExpression methodsForArity MethodInvocation add JavaMethod + MemberReference Literal Iterator TypeArgument iter MethodInvocation Map ReferenceType entry MethodInvocation List TypeArgument methodsForArity Cast JavaMethod methodsArray MethodInvocation MemberReference MemberReference = Literal method MemberReference getParameterTypes maxArity Math MemberReference MemberReference max ReferenceType ReferenceType MethodInvocation methodsForArity null Assignment MethodInvocation JavaMethod MemberReference MemberReference create maxArity 1 ReferenceType methodsMap MethodInvocation entrySet Entry iter next ReferenceType ReferenceType MethodInvocation methodsForArity ArrayCreator toArray ArraySelector javaCallables methodsArray 0 length arity maxArity JavaMethod ArrayList TypeArgument methodsMap MemberReference get MemberReference ClassCreator = methodsMap MemberReference MemberReference put runtime method Map ReferenceType iterator JavaMethod List TypeArgument entry getValue ReferenceType MethodInvocation Cast ReferenceType arity methodsForArity ReferenceType arity methodsForArity Entry ReferenceType JavaMethod methodsForArity size ReferenceType MethodInvocation JavaMethod ArrayList TypeArgument JavaMethod Integer entry getKey ReferenceType JavaMethod	1
MethodDeclaration Modifier put FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression final public ReferenceType runtime ReferenceType io BasicType offset ReferenceType value MethodInvocation Ruby MemoryIO long IRubyObject io MemberReference Cast putByte offset BasicType MethodInvocation byte Util MemberReference uint8Value value	1
MethodDeclaration Modifier Annotation ReferenceType getAbsoluteFile ReturnStatement public Override File ClassCreator ReferenceType MethodInvocation NormalizedFile getAbsolutePath	0
MethodDeclaration Modifier ReferenceType getTargetClass ReturnStatement public IR_Class TernaryExpression BinaryOperation MethodInvocation Literal instanceof MemberReference ReferenceType IR_Class Literal getCoreClass null _scope IR_Module "Module"	1
MethodDeclaration Modifier ReferenceType put FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType key ReferenceType value MethodInvocation MemberReference Object Object MethodInvocation MethodInvocation internalPut value JavaUtil MethodInvocation MemberReference convertJavaToUsableRubyObject JavaUtil MethodInvocation MemberReference convertJavaToUsableRubyObject getRuntime key getRuntime value	0
MethodDeclaration Modifier BasicType arrayOffset ReturnStatement final public int MemberReference offset	1
MethodDeclaration Modifier Annotation ReferenceType id2name LocalVariableDeclaration IfStatement ReturnStatement public JRubyMethod IRubyObject ReferenceType VariableDeclarator BinaryOperation ReturnStatement MethodInvocation RubySymbol symbol MethodInvocation != MemberReference Literal MethodInvocation MethodInvocation getRuntime RubySymbol MethodInvocation MemberReference getSymbolLong symbol null MethodInvocation getRuntime getNil getRuntime value MethodInvocation newString symbol asJavaString	1
MethodDeclaration Modifier Annotation ReferenceType downcase FormalParameter LocalVariableDeclaration StatementExpression ReturnStatement public JRubyMethod ElementValuePair ElementValuePair RubyString ReferenceType context ReferenceType VariableDeclarator MethodInvocation MemberReference name Literal compat MemberReference ThreadContext RubyString str MethodInvocation str MemberReference downcase_bang str "downcase" CompatVersion RUBY1_8 MethodInvocation strDup context context getRuntime	0
MethodDeclaration Modifier BasicType equalInternal FormalParameter FormalParameter FormalParameter ReturnStatement protected static boolean Modifier ReferenceType context Modifier ReferenceType that Modifier ReferenceType other BinaryOperation final ThreadContext final IRubyObject final IRubyObject || BinaryOperation MethodInvocation == MemberReference MemberReference that MethodInvocation MemberReference Literal MemberReference callMethod that other isTrue context "==" other	0
MethodDeclaration Modifier ReferenceType invokeDirectWithExceptionHandling FormalParameter FormalParameter FormalParameter FormalParameter TryStatement private IRubyObject ReferenceType method ReferenceType javaInvokee ReferenceType arg0 ReferenceType arg1 LocalVariableDeclaration ReturnStatement CatchClause CatchClause CatchClause CatchClause Method Object Object Object ReferenceType VariableDeclarator MethodInvocation CatchClauseParameter ReturnStatement CatchClauseParameter ReturnStatement CatchClauseParameter ReturnStatement CatchClauseParameter ReturnStatement Object result TernaryExpression MemberReference convertReturn IllegalArgumentException iae MethodInvocation IllegalAccessException iae MethodInvocation InvocationTargetException ite MethodInvocation Throwable t MethodInvocation BinaryOperation MethodInvocation MethodInvocation result MemberReference MemberReference MemberReference MemberReference handlelIllegalArgumentEx MemberReference MemberReference handleIllegalAccessEx MemberReference MemberReference handleInvocationTargetEx MemberReference MemberReference handleThrowable != MemberReference Literal handle MemberReference MemberReference MemberReference invoke method MemberReference MemberReference MemberReference invoke method iae arg0 arg1 method iae ite method t method handle null javaInvokee arg0 arg1 javaInvokee arg0 arg1	1
MethodDeclaration Modifier BasicType getLong FormalParameter StatementExpression ReturnStatement final public long BasicType offset MethodInvocation MethodInvocation long MemberReference Literal checkBounds IO BinaryOperation getLong offset 8 + MemberReference MemberReference address offset	0
MethodDeclaration Modifier ReferenceType __file__ FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType context ReferenceType self ReferenceType arg1 ReferenceType arg2 ReferenceType block MethodInvocation ThreadContext IRubyObject IRubyObject IRubyObject Block MemberReference MemberReference ArrayCreator MemberReference __file__ context self ReferenceType ArrayInitializer block IRubyObject MemberReference MemberReference arg1 arg2	1
MethodDeclaration Modifier Annotation ReferenceType instance_eval FormalParameter FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType arg0 ReferenceType block MethodInvocation name Literal frame Literal ThreadContext IRubyObject Block MemberReference MethodInvocation MemberReference MemberReference specificEval "instance_eval" true context getInstanceEvalClass arg0 block	1
MethodDeclaration Modifier ReferenceType getNodeType ReturnStatement public NodeType MemberReference NodeType LAMBDANODE	0
MethodDeclaration Modifier ReferenceType case452_line1708 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support Cast Cast appendToBlock ReferenceType MemberReference ReferenceType MemberReference ListNode ArraySelector yyVals Node ArraySelector yyVals BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference - 2 yyTop 0 yyTop	1
MethodDeclaration Modifier ReferenceType createBlockBody19 FormalParameter FormalParameter FormalParameter FormalParameter NumberFormatException LocalVariableDeclaration LocalVariableDeclaration IfStatement LocalVariableDeclaration ReturnStatement private BlockBody ReferenceType scriptObject ReferenceType context BasicType index ReferenceType descriptor ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement ReferenceType VariableDeclarator Assignment Object ThreadContext int String String firstSplit MethodInvocation String secondSplit == MemberReference Literal StatementExpression StatementExpression ForStatement BlockBody body MethodInvocation MemberReference MemberReference = descriptor Literal split ArraySelector MethodInvocation firstSplit 0 Assignment Assignment ForControl BlockStatement RuntimeHelpers MemberReference MemberReference MemberReference MethodInvocation MemberReference MethodInvocation MethodInvocation MethodInvocation createCompiledBlockBody19 ArraySelector blockBodies body "," Literal length MemberReference ArrayCreator = MemberReference MemberReference = VariableDeclaration BinaryOperation MemberReference StatementExpression context scriptObject ArraySelector firstSplit Integer MemberReference parseInt secondSplit Boolean MemberReference valueOf Integer MemberReference parseInt Boolean MemberReference valueOf MemberReference 2 secondSplit ReferenceType Literal secondSplit ArraySelector MethodInvocation firstSplit BasicType VariableDeclarator < MemberReference MemberReference ++ i Assignment Literal ArraySelector firstSplit ArraySelector firstSplit ArraySelector firstSplit ArraySelector firstSplit index String 0 Literal Literal split int i Literal i secondSplit length MemberReference MemberReference = 0 Literal Literal Literal Literal 2 ";" 0 ArraySelector secondSplit ArraySelector MethodInvocation secondSplit 1 3 4 5 MemberReference MemberReference intern i i	1
MethodDeclaration Modifier ReferenceType getValueNode ReturnStatement public Node MemberReference valueNode	0
MethodDeclaration Modifier ReferenceType decode FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType runtime ReferenceType enc MethodInvocation Ruby ByteBuffer RubyFloat MemberReference MethodInvocation newFloat runtime MemberReference decodeFloatLittleEndian enc	0
MethodDeclaration Modifier Annotation ReferenceType allocateOutput FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair Buffer ReferenceType context ReferenceType recv ReferenceType sizeArg ReferenceType arg2 MethodInvocation name ElementArrayValue meta Literal ThreadContext IRubyObject IRubyObject IRubyObject MemberReference MemberReference MemberReference MethodInvocation MemberReference allocate Literal Literal Literal true context recv sizeArg MemberReference getCount OUT "new_out" "alloc_out" "__alloc_out" arg2	0
MethodDeclaration Modifier branch FormalParameter StatementExpression StatementExpression StatementExpression public ReferenceType context MethodInvocation MethodInvocation MethodInvocation BodyCompiler context consumeCurrentValue context Literal pushString context MemberReference go "class variable" ending	0
MethodDeclaration setNumeric FormalParameter StatementExpression ReferenceType numericClass Assignment RubyClass This MemberReference = MemberReference numericClass numericClass	0
MethodDeclaration Modifier Annotation ReferenceType declared_constructors ReturnStatement public JRubyMethod RubyArray MethodInvocation MethodInvocation buildConstructors MethodInvocation javaClass getDeclaredConstructors	1
MethodDeclaration Modifier ReferenceType fixCoerce FormalParameter DoStatement ReturnStatement private static IRubyObject ReferenceType x BinaryOperation BlockStatement MemberReference IRubyObject && BinaryOperation BinaryOperation StatementExpression x instanceof MemberReference ReferenceType instanceof MemberReference ReferenceType Assignment x RubyFixnum x RubyBignum MemberReference MethodInvocation = x x convertToInteger	0
MethodDeclaration Modifier ReferenceType postOpAsgnWithOrAnd FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement static public IRubyObject ReferenceType receiver ReferenceType value ReferenceType context ReferenceType self ReferenceType varAsgnSite MethodInvocation MemberReference IRubyObject IRubyObject ThreadContext IRubyObject CallSite varAsgnSite MemberReference MemberReference MemberReference MemberReference call value context self receiver value	0
MethodDeclaration Modifier ReferenceType getInterfacedInstance ReturnStatement static public SomeInterface ClassCreator ReferenceType SomeImplementation	0
MethodDeclaration Modifier installBytecode FormalParameter FormalParameter LocalVariableDeclaration StatementExpression StatementExpression StatementExpression static public ReferenceType method ReferenceType classname ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodVisitor String SkinnyMethodAdapter mv ClassCreator mv MethodInvocation ldc mv MethodInvocation Literal MethodInvocation invokestatic mv MethodInvocation Literal MethodInvocation invokestatic ReferenceType MemberReference MemberReference c ClassReference p "forName" ClassReference MethodInvocation sig ClassReference p "registerBootstrap" VoidClassReference ClassReference sig SkinnyMethodAdapter method classname ReferenceType ReferenceType ClassReference params ReferenceType ReferenceType Class Class ReferenceType InvokeDynamicSupport Class String	0
MethodDeclaration Modifier ReferenceType toString ReturnStatement public String BinaryOperation + BinaryOperation Literal + BinaryOperation TernaryExpression ")" + BinaryOperation MemberReference MemberReference Literal Literal + SuperMethodInvocation Literal _argIndex _restOfArgArray ", ALL" "" toString "("	0
MethodDeclaration Modifier BasicType hasThird2 ReturnStatement public boolean Literal false	0
MethodDeclaration Modifier ReferenceType backrefMatchPre FormalParameter LocalVariableDeclaration ReturnStatement static public IRubyObject ReferenceType context ReferenceType VariableDeclarator MethodInvocation ThreadContext IRubyObject backref MethodInvocation RubyRegexp MemberReference match_pre context MethodInvocation getCurrentScope backref MethodInvocation getBackRef context getRuntime	0
MethodDeclaration Modifier ReferenceType case312_line1210 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference ClassCreator = yyVal yyVal ReferenceType Cast RedoNode ReferenceType MemberReference Token ArraySelector yyVals BinaryOperation + Literal MemberReference 0 yyTop	1
MethodDeclaration Modifier checkPermissionsSubsetOf FormalParameter StatementExpression public ReferenceType subsetModes MethodInvocation ModeFlags subsetModes MemberReference isSubsetOf modes	0
MethodDeclaration Modifier ReferenceType getValues1 FormalParameter ReturnStatement static public Object ReferenceType otherValue Literal Object null	0
MethodDeclaration Modifier Annotation ReferenceType getCompareByIdentity_p FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context MethodInvocation name Literal frame Literal compat MemberReference ThreadContext context MethodInvocation getRuntime "compare_by_identity?" true CompatVersion RUBY1_9 MethodInvocation newBoolean isComparedByIdentity	1
MethodDeclaration Modifier ReferenceType each_key FormalParameter FormalParameter StatementExpression ReturnStatement public RubyHash Modifier ReferenceType context Modifier ReferenceType block MethodInvocation This final ThreadContext final Block ClassCreator iteratorVisitAll ReferenceType MethodDeclaration Visitor Modifier visit FormalParameter FormalParameter StatementExpression public ReferenceType key ReferenceType value MethodInvocation IRubyObject IRubyObject block MemberReference MemberReference yield context key	1
MethodDeclaration Modifier ReferenceType getJConsecutiveCaps ReturnStatement public Object Literal null	0
MethodDeclaration Modifier ReferenceType getRescueNode ReturnStatement public RescueBodyNode MemberReference rescueNode	0
MethodDeclaration Modifier BasicType isEmpty ReturnStatement public boolean BinaryOperation == MemberReference Literal size 0	0
MethodDeclaration Modifier ReferenceType addAsBignum FormalParameter FormalParameter ReturnStatement private IRubyObject ReferenceType context BasicType other MethodInvocation ThreadContext long RubyBignum MethodInvocation MethodInvocation MemberReference newBignum MemberReference MemberReference op_plus context getRuntime value context other	0
MethodDeclaration visit FormalParameter IfStatement IfStatement IfStatement IfStatement IfStatement ReferenceType visitor BinaryOperation StatementExpression BinaryOperation StatementExpression BinaryOperation StatementExpression BinaryOperation StatementExpression BinaryOperation StatementExpression Visitor != MemberReference Literal MethodInvocation != MemberReference Literal MethodInvocation != MemberReference Literal MethodInvocation != MemberReference Literal MethodInvocation != MemberReference Literal MethodInvocation name1 null visitor MemberReference MemberReference visit name2 null visitor MemberReference MemberReference visit name3 null visitor MemberReference MemberReference visit name4 null visitor MemberReference MemberReference visit name5 null visitor MemberReference MemberReference visit name1 value1 name2 value2 name3 value3 name4 value4 name5 value5	1
MethodDeclaration Modifier Annotation ReferenceType to_i ReturnStatement public JRubyMethod ElementValuePair IRubyObject MethodInvocation name Literal Literal Literal stringToInum "to_i" 10 false	1
MethodDeclaration Modifier BasicType isShowBytecode ReturnStatement public boolean MemberReference showBytecode	0
MethodDeclaration Modifier beginFlatClosure FormalParameter FormalParameter StatementExpression StatementExpression StatementExpression IfStatement IfStatement public ReferenceType argsCallback ReferenceType scope MethodInvocation MethodInvocation MethodInvocation BinaryOperation BlockStatement BinaryOperation BlockStatement CompilerCallback StaticScope methodCompiler loadThreadContext methodCompiler Literal MethodInvocation invokeThreadContext method MethodInvocation astore > MethodInvocation Literal StatementExpression StatementExpression StatementExpression != MemberReference Literal StatementExpression StatementExpression "getCurrentScope" ClassReference sig methodCompiler getDynamicScopeIndex scope getNumberOfVariables 4 MethodInvocation MethodInvocation MethodInvocation argsCallback null MethodInvocation MethodInvocation ReferenceType method MethodInvocation aload method MethodInvocation Literal MethodInvocation invokevirtual method MethodInvocation astore method MemberReference aload argsCallback MemberReference call DynamicScope methodCompiler getDynamicScopeIndex ClassReference p "getValues" ClassReference sig methodCompiler getVarsArrayIndex argsIndex methodCompiler ReferenceType ReferenceType DynamicScope IRubyObject	0
MethodDeclaration Modifier remove FormalParameter SynchronizedStatement public ReferenceType rubyThread MemberReference StatementExpression StatementExpression RubyThread rubyThread MethodInvocation MethodInvocation rubyThread Literal setThreadGroup rubyThreadList MemberReference remove null rubyThread	1
MethodDeclaration Modifier marshal FormalParameter FormalParameter FormalParameter StatementExpression final public ReferenceType context ReferenceType buffer ReferenceType parameter MethodInvocation ThreadContext InvocationBuffer IRubyObject buffer MethodInvocation putInt Util MemberReference int32Value parameter	1
MethodDeclaration Modifier ReferenceType assign FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ThrowStatement public IRubyObject ReferenceType runtime ReferenceType context ReferenceType self ReferenceType value ReferenceType block BasicType checkArity ClassCreator Ruby ThreadContext IRubyObject IRubyObject Block boolean ReferenceType BinaryOperation RuntimeException + BinaryOperation Literal + Literal MethodInvocation "\", please report this at www.jruby.org" "Invalid node encountered in interpreter: \"" MethodInvocation getClass getName	1
MethodDeclaration Modifier Annotation ReferenceType zero_p FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement LocalVariableDeclaration ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair RubyBoolean ReferenceType recv ReferenceType filename ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement ReferenceType VariableDeclarator MethodInvocation name Literal required Literal module Literal IRubyObject IRubyObject Ruby runtime MethodInvocation ZipEntry entry MethodInvocation != MemberReference Literal ReturnStatement JRubyFile file MethodInvocation runtime BinaryOperation newBoolean "zero?" 1 true recv getRuntime MemberReference file_in_archive entry null MethodInvocation MemberReference file && MethodInvocation BinaryOperation filename runtime BinaryOperation newBoolean filename file exists == MethodInvocation Literal == MethodInvocation Literal file length 0L entry getSize 0L	1
MethodDeclaration Modifier Annotation ReferenceType re_exchangeable_p FormalParameter ThrowStatement static public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType self MethodInvocation name Literal module Literal IRubyObject self MethodInvocation getRuntime "re_exchangeable?" true Literal newNotImplementedError "Process::UID::re_exchangeable? not implemented yet"	1
MethodDeclaration Modifier ReferenceType accept FormalParameter ReturnStatement public Object ReferenceType iVisitor MethodInvocation NodeVisitor iVisitor This visitSuperNode	0
MethodDeclaration Modifier BasicType isReadable ReturnStatement public boolean BinaryOperation != BinaryOperation Literal & MemberReference MemberReference 0 mode READABLE	0
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter IfStatement ReturnStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 ReferenceType arg3 ReferenceType arg4 ReferenceType arg5 ReferenceType arg6 ReferenceType arg7 BinaryOperation BlockStatement MethodInvocation ThreadContext IRubyObject RubyModule String IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject >= MemberReference Literal ReturnStatement box.actualMethod MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference call box callCount 0 MethodInvocation context self clazz name arg0 arg1 arg2 arg3 arg4 arg5 arg6 arg7 MethodInvocation MemberReference MemberReference tryJitReturnMethod MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference call context name context self clazz name arg0 arg1 arg2 arg3 arg4 arg5 arg6 arg7	0
MethodDeclaration Modifier BasicType hasInternalVariable FormalParameter AssertStatement ReturnStatement public boolean ReferenceType name MethodInvocation MethodInvocation String ! IdUtil MemberReference isRubyVariable MemberReference variableTableContains name name	1
MethodDeclaration Modifier Annotation ReferenceType getBlockMethod FormalParameter ReturnStatement public Deprecated Callback ReferenceType method ClassCreator String ReferenceType MemberReference MemberReference ArrayCreator Literal Literal MethodInvocation Literal ReflectionCallback type method ReferenceType ArrayInitializer false true Arity Literal fixed false Class MemberReference MemberReference 2 RubyKernel IRUBY_OBJECT RubyKernel IRUBY_OBJECT	1
MethodDeclaration Modifier ReferenceType determineOS LocalVariableDeclaration IfStatement ForStatement ReturnStatement private static final OS ReferenceType VariableDeclarator BinaryOperation BlockStatement IfStatement EnhancedForControl BlockStatement MemberReference String osName MethodInvocation || MethodInvocation MethodInvocation ReturnStatement BinaryOperation BlockStatement VariableDeclaration MethodInvocation IfStatement OS UNKNOWN System MethodInvocation ArraySelector MethodInvocation Literal getProperty osName Literal startsWith osName Literal startsWith MemberReference || MethodInvocation MethodInvocation ReturnStatement ReferenceType VariableDeclarator OS values MethodInvocation BlockStatement Literal split Literal toLowerCase "os.name" "mac" "darwin" OS DARWIN osName Literal startsWith osName Literal startsWith MemberReference OS os osName MethodInvocation startsWith ReturnStatement " " 0 "sunos" "solaris" OS SOLARIS os MethodInvocation toString MemberReference toLowerCase os	1
MethodDeclaration Modifier ReferenceType setResult ReturnStatement private RubyBigDecimal MethodInvocation Literal setResult 0	0
MethodDeclaration Modifier BasicType friendly ReturnStatement public boolean MethodInvocation bri friendly	0
MethodDeclaration Modifier ReferenceType getByteList ReturnStatement public ByteList MemberReference value	0
MethodDeclaration Modifier ReferenceType scanNoIter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement LocalVariableDeclaration IfStatement ReturnStatement private IRubyObject ReferenceType context ReferenceType pattern ReferenceType matcher ReferenceType enc BasicType begin BasicType range BasicType tuFlags ReferenceType VariableDeclarator ReferenceType VariableDeclarator BasicType VariableDeclarator BinaryOperation BlockStatement BlockStatement ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement MemberReference ThreadContext Regex Matcher Encoding int int int Ruby runtime MethodInvocation RubyArray ary MethodInvocation int end Literal == MethodInvocation Literal WhileStatement WhileStatement DynamicScope scope MethodInvocation > MethodInvocation Literal LocalVariableDeclaration StatementExpression StatementExpression ary context getRuntime runtime newArray 0 pattern numberOfCaptures 0 BinaryOperation BlockStatement BinaryOperation BlockStatement context getCurrentScope ary size 0 ReferenceType VariableDeclarator MethodInvocation MethodInvocation >= MethodInvocation Literal StatementExpression LocalVariableDeclaration StatementExpression StatementExpression >= MethodInvocation Literal StatementExpression StatementExpression RubyMatchData match MethodInvocation match MemberReference infectBy scope MethodInvocation setBackRef matcher BinaryOperation MemberReference MemberReference search 0 Assignment ReferenceType VariableDeclarator MethodInvocation MethodInvocation matcher BinaryOperation MemberReference MemberReference search 0 Assignment MethodInvocation RubyRegexp MemberReference This MemberReference MemberReference MemberReference updateBackRef tuFlags runtime getNil + MemberReference MemberReference range Option NONE MemberReference MethodInvocation = RubyString substr MethodInvocation substr MemberReference infectBy ary MemberReference append + MemberReference MemberReference range Option NONE MemberReference MethodInvocation = ary MethodInvocation append context scope matcher pattern begin end end MemberReference MemberReference MemberReference MemberReference positionEnd MemberReference MethodInvocation BinaryOperation makeShared tuFlags substr begin end end MemberReference MemberReference MemberReference MemberReference positionEnd MemberReference MemberReference MemberReference MemberReference Literal populateCapturesForScan matcher enc begin range runtime matcher getBegin - MethodInvocation MethodInvocation matcher enc begin range runtime matcher range tuFlags false matcher getEnd matcher getBegin	0
MethodDeclaration Modifier Annotation ReferenceType op_le FormalParameter FormalParameter SwitchStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType other MethodInvocation SwitchStatementCase SwitchStatementCase name Literal required Literal ThreadContext IRubyObject other MemberReference getMetaClass MemberReference MemberReference MemberReference LocalVariableDeclaration ReturnStatement ReturnStatement "<=" 1 index ClassIndex FIXNUM ClassIndex BIGNUM ClassIndex FLOAT BasicType VariableDeclarator MethodInvocation MethodInvocation double b Cast RubyBoolean MethodInvocation BinaryOperation newBoolean MemberReference Literal MemberReference coerceRelOp ReferenceType MemberReference getRuntime && MethodInvocation BinaryOperation context "<=" other RubyNumeric other ! Double MemberReference isNaN <= MemberReference MemberReference b value b	1
MethodDeclaration Modifier ReferenceType getBaseCallSites ReturnStatement public CallSite MemberReference baseCallSites	0
MethodDeclaration Modifier ReferenceType allocate FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType runtime ReferenceType klass ClassCreator Ruby RubyClass ReferenceType MemberReference MemberReference RubyHash runtime klass	0
MethodDeclaration Modifier Annotation ReferenceType send FormalParameter FormalParameter ThrowStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context ReferenceType block MethodInvocation name ElementArrayValue ThreadContext Block context MethodInvocation getRuntime Literal Literal Literal Literal newArgumentError "send" "__send__" 0 1	0
MethodDeclaration Modifier ReferenceType getClassVar FormalParameter AssertStatement LocalVariableDeclaration LocalVariableDeclaration DoStatement ThrowStatement public IRubyObject ReferenceType name MethodInvocation ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation String IdUtil MemberReference isClassVariable Object value RubyModule module This != Assignment Literal IfStatement MethodInvocation getRuntime name MemberReference MethodInvocation = null BinaryOperation ReturnStatement BinaryOperation MemberReference newNameError module module getSuperClass != Assignment Literal Cast + BinaryOperation MethodInvocation name MemberReference MethodInvocation = null ReferenceType MemberReference + BinaryOperation Literal getName value module MemberReference fetchClassVariable IRubyObject value + Literal MemberReference " in " name "uninitialized class variable " name	1
MethodDeclaration Modifier BasicType longValue FormalParameter FormalParameter ReturnStatement final public long ReferenceType context ReferenceType obj MethodInvocation ThreadContext IRubyObject Util MemberReference uint16Value obj	1
MethodDeclaration Modifier testPrintErrorWithBacktrace FormalParameter Exception LocalVariableDeclaration TryStatement private ReferenceType backtrace ReferenceType VariableDeclarator LocalVariableDeclaration LocalVariableDeclaration StatementExpression TryStatement StatementExpression String RubyIO oldStderr Cast ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation StatementExpression StatementExpression CatchClause MethodInvocation ReferenceType MethodInvocation ByteArrayOutputStream stderrOutput ClassCreator RubyIO newStderr ClassCreator runtime MethodInvocation getGlobalVariables MethodInvocation MethodInvocation CatchClauseParameter StatementExpression runtime MethodInvocation getGlobalVariables RubyIO runtime MethodInvocation getGlobalVariables ReferenceType ReferenceType MemberReference MemberReference Literal MemberReference set BinaryOperation eval Literal fail RaiseException re MethodInvocation Literal MemberReference set Literal get ByteArrayOutputStream RubyIO runtime stderrOutput "$stderr" newStderr + BinaryOperation Literal "Expected MyError to be raised" runtime MethodInvocation printError "$stderr" oldStderr "$stderr" + Literal MemberReference " ; end ; end ; raise MyError.new " re getException "class MyError < StandardError ; def backtrace ; " backtrace	0
MethodDeclaration Modifier Annotation ReferenceType length ThrowStatement public JRubyMethod RubyFixnum MethodInvocation MethodInvocation getRuntime Literal newTypeError "not a java array"	1
MethodDeclaration Modifier ReferenceType unmarshalFrom FormalParameter IOException LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration ForStatement LocalVariableDeclaration IfStatement LocalVariableDeclaration StatementExpression ReturnStatement static public RubyNumeric ReferenceType input BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator ForControl BlockStatement ReferenceType VariableDeclarator MemberReference BlockStatement ReferenceType VariableDeclarator MethodInvocation MemberReference UnmarshalStream boolean positive BinaryOperation int shortLength MethodInvocation byte digits ArrayCreator VariableDeclaration BinaryOperation MemberReference StatementExpression BigInteger value ClassCreator ! positive StatementExpression RubyNumeric result MethodInvocation input MemberReference registerLinkTarget result == MethodInvocation Literal input unmarshalInt BasicType BinaryOperation BasicType VariableDeclarator >= MemberReference Literal -- i Assignment ReferenceType MemberReference Assignment MethodInvocation MemberReference bignorm result input readUnsignedByte '+' byte + BinaryOperation Literal int i BinaryOperation i 1 MemberReference MethodInvocation = BigInteger digits MemberReference MethodInvocation = input getRuntime value * MemberReference Literal 1 - MemberReference Literal ArraySelector digits input readSignedByte value value negate shortLength 2 digits length 1 MemberReference i	0
MethodDeclaration Modifier ReferenceType getOriginalModes ReturnStatement public ModeFlags MemberReference originalModes	0
MethodDeclaration Modifier ReferenceType parseFromMain FormalParameter FormalParameter IfStatement public Node ReferenceType inputStream ReferenceType filename MethodInvocation BlockStatement BlockStatement InputStream String config isInlineScript ReturnStatement ReturnStatement MethodInvocation MethodInvocation MemberReference MemberReference MethodInvocation parseInline MemberReference MemberReference MethodInvocation parseFile inputStream filename MethodInvocation getCurrentContext inputStream filename MethodInvocation getCurrentContext getCurrentScope getCurrentScope	0
MethodDeclaration Modifier ReferenceType callMethodMissing FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement private static IRubyObject ReferenceType entry ReferenceType callType ReferenceType context ReferenceType self ReferenceType name MethodInvocation CacheEntry CallType ThreadContext IRubyObject String RuntimeHelpers MethodInvocation MemberReference MemberReference MethodInvocation MemberReference MemberReference selectMethodMissing MemberReference MemberReference MethodInvocation MemberReference MemberReference call context self entry.method getVisibility name callType context self self getMetaClass name Block NULL_BLOCK	0
MethodDeclaration Modifier ReferenceType staticGetObject ReturnStatement static public Object MemberReference staticObject	0
MethodDeclaration Modifier ReferenceType uid_set FormalParameter FormalParameter StatementExpression ReturnStatement static public IRubyObject ReferenceType runtime ReferenceType arg MethodInvocation MethodInvocation Ruby IRubyObject runtime MethodInvocation getPosix RubyFixnum MemberReference zero Cast setuid runtime BasicType MethodInvocation int arg MethodInvocation convertToInteger getLongValue	1
MethodDeclaration Modifier ReferenceType case366_line1377 FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MethodInvocation MethodInvocation MemberReference Object Object int MemberReference ClassCreator = support popCurrentScope lexer Cast setLeftParenBegin yyVal yyVal ReferenceType MethodInvocation Cast Cast MethodInvocation ReferenceType MemberReference LambdaNode Cast getPosition ReferenceType MemberReference ReferenceType MemberReference support getCurrentScope Integer ArraySelector yyVals ReferenceType MemberReference ArgsNode ArraySelector yyVals Node ArraySelector yyVals BinaryOperation ArgsNode ArraySelector yyVals BinaryOperation BinaryOperation + Literal MemberReference BinaryOperation + Literal MemberReference + Literal MemberReference - 2 yyTop + Literal MemberReference - 1 yyTop 0 yyTop - 1 yyTop	1
MethodDeclaration Modifier registerRubyMethods FormalParameter FormalParameter StatementExpression protected static ReferenceType runtime ReferenceType result MethodInvocation Ruby RubyClass result ClassReference defineAnnotatedMethods ReferenceType JavaObject	1
MethodDeclaration Modifier BasicType getAndIncrementInnerIndex ReturnStatement public int MemberReference ++ innerIndex	0
MethodDeclaration Modifier JavaSoftCheckResize IfStatement private final MethodInvocation BlockStatement overThreshold LocalVariableDeclaration IfStatement StatementExpression ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation RubyHashEntry tbl MemberReference == MemberReference MemberReference StatementExpression ReturnStatement MemberReference resizeAndAdjustThreshold table tbl length MAXIMUM_CAPACITY Assignment table MemberReference MemberReference = threshold Integer MAX_VALUE	1
MethodDeclaration Modifier Annotation ReferenceType join FormalParameter ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context MethodInvocation name Literal ThreadContext MemberReference MethodInvocation join "join" context context MethodInvocation MethodInvocation getRuntime getGlobalVariables Literal get "$,"	0
MethodDeclaration Modifier ReferenceType getBigInteger9 FormalParameter FormalParameter ReturnStatement final public BigInteger ReferenceType runtime ReferenceType name MethodInvocation Ruby String runtimeCache MemberReference Literal MemberReference getBigInteger runtime 9 name	0
MethodDeclaration Modifier Annotation ReferenceType afill FormalParameter FormalParameter FormalParameter ThrowStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType beginIndex ReferenceType endIndex ReferenceType someValue MethodInvocation name Literal required Literal IRubyObject IRubyObject IRubyObject MethodInvocation getRuntime "fill" 3 Literal newTypeError "not a java array"	0
MethodDeclaration Modifier Annotation loadArguments FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression private Deprecated ReferenceType mv BasicType argsIndex BasicType count ReferenceType types MethodInvocation MethodVisitor int int Class MemberReference MemberReference MemberReference MemberReference Literal loadArguments mv argsIndex count types false	1
MethodDeclaration Modifier ReferenceType case470_line1788 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support MethodInvocation Cast Literal Cast Literal Cast new_args Cast getPosition ReferenceType MemberReference null ReferenceType MemberReference null ReferenceType MemberReference ReferenceType MemberReference ListNode ArraySelector yyVals RestArgNode ArraySelector yyVals BlockArgNode ArraySelector yyVals ListNode ArraySelector yyVals BinaryOperation BinaryOperation BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference + Literal MemberReference + Literal MemberReference - 3 yyTop - 1 yyTop 0 yyTop - 3 yyTop	1
MethodDeclaration Modifier ReferenceType grow FormalParameter FormalParameter FormalParameter LocalVariableDeclaration WhileStatement StatementExpression ReturnStatement private static final ByteList ReferenceType i2Grow BasicType iPads BasicType iLength BasicType VariableDeclarator BinaryOperation BlockStatement MethodInvocation MemberReference ByteList byte int int lPadLength MemberReference >= MemberReference MemberReference StatementExpression StatementExpression i2Grow MemberReference Literal MemberReference append i2Grow iPads length iLength lPadLength MethodInvocation Assignment iPads 0 iLength i2Grow MemberReference append MemberReference MemberReference -= iPads iLength lPadLength	1
MethodDeclaration Modifier BasicType isClassVarDefined FormalParameter LocalVariableDeclaration DoStatement ReturnStatement public boolean ReferenceType name ReferenceType VariableDeclarator BinaryOperation BlockStatement Literal String RubyModule module This != Assignment Literal IfStatement false MemberReference MethodInvocation = null MethodInvocation ReturnStatement module module getSuperClass module MemberReference hasClassVariable Literal name true	1
MethodDeclaration Modifier Annotation ReferenceType eid FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType self MethodInvocation name Literal module Literal ThreadContext IRubyObject MethodInvocation eid "eid" true context getRuntime	0
MethodDeclaration Modifier ReferenceType reCache FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration StatementExpression IfStatement ReturnStatement public IRubyObject ReferenceType context ReferenceType target BasicType VariableDeclarator ReferenceType VariableDeclarator Assignment BinaryOperation BlockStatement MemberReference ThreadContext RubyModule int newGeneration MethodInvocation IRubyObject value MethodInvocation MemberReference MemberReference = != MemberReference Literal StatementExpression StatementExpression value context MethodInvocation getRuntime target MemberReference fastGetConstantFromNoConstMissing cachedValue value value null Assignment Assignment getConstantGeneration name MemberReference MemberReference = MemberReference MethodInvocation = generation newGeneration hash target hashCode	0
MethodDeclaration Modifier ReferenceType getType FormalParameter ReturnStatement static public String BasicType i Literal int "int"	0
MethodDeclaration Modifier BasicType yyTable3 ReturnStatement private static final short ArrayCreator BasicType ArrayInitializer short Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal 214 214 0 0 0 0 0 0 0 214 0 0 0 0 0 0 0 0 0 0 0 0 214 214 214 214 214 214 214 214 214 214 0 214 214 0 0 0 0 210 0 0 214 0 0 214 0 0 214 210 214 0 0 0 0 0 0 0 0 0 214 214 0 0 0 0 214 0 0 0 0 0 0 0 0 0 0 0 214 0 0 0 0 210 0 0 213 213 213 0 0 213 213 213 0 213 0 210 210 0 0 0 210 0 0 213 213 0 0 0 0 0 0 0 213 213 0 213 213 213 213 213 0 0 0 0 0 0 0 213 0 0 0 0 0 0 0 0 0 0 0 0 213 213 213 213 213 213 213 213 213 213 0 213 213 0 0 0 0 0 0 215 213 0 0 213 0 0 213 0 213 215 0 0 0 0 0 0 0 0 213 213 0 211 211 211 213 0 211 211 211 0 211 0 0 0 0 0 213 0 0 0 211 211 0 215 0 0 0 0 0 211 211 0 211 211 211 211 211 215 215 0 0 0 215 0 211 0 0 0 0 0 0 0 0 0 0 0 0 211 211 211 211 211 211 211 211 211 211 0 211 211 0 0 0 0 0 0 0 211 0 0 211 0 0 211 0 211 0 0 0 0 0 0 0 0 0 211 211 216 0 0 0 211 0 0 0 0 0 216 0 0 0 0 0 211 0 0 0 0 0 210 210 210 0 0 210 210 210 0 210 0 0 0 0 0 0 0 0 0 210 210 0 216 0 0 0 0 0 210 210 0 210 210 210 210 210 216 216 0 0 0 216 0 210 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 210 210 0 0 0 210 210 0 0 0 0 0 0 217 210 0 0 210 0 0 210 0 210 217 0 0 0 0 0 0 0 0 0 0 0 0 0 0 210 0 0 0 0 0 0 0 0 0 0 0 210 0 0 0 0 0 0 217 0 0 215 215 215 0 0 215 215 215 0 215 0 217 217 0 0 0 217 0 0 215 215 0 0 0 0 0 0 0 215 215 0 215 215 215 215 215 0 0 0 224 0 0 0 215 0 0 0 0 0 224 0 0 0 0 0 0 0 0 0 0 0 0 215 215 0 0 0 215 215 0 0 0 0 0 0 0 215 0 0 215 0 0 215 224 215 0 0 0 0 0 0 0 0 0 0 0 0 224 224 0 215 0 224 0 0 0 0 0 0 0 0 0 215 0 0 0 0 0 216 216 216 0 0 216 216 216 0 216 0 218 0 0 0 0 0 0 0 216 216 218 0 0 0 0 0 0 216 216 0 216 216 216 216 216 0 0 0 0 0 0 0 216 0 0 0 0 0 0 0 0 0 0 0 218 0 0 0 0 0 0 216 216 0 0 0 216 216 218 218 0 0 0 218 0 216 0 0 216 0 0 216 0 216 0 0 0 0 0 0 0 0 0 0 0 0 217 217 217 216 0 217 217 217 0 217 0 219 0 0 0 216 0 0 0 217 217 219 0 0 0 0 0 0 217 217 0 217 217 217 217 217 0 0 0 0 0 0 0 217 0 0 0 0 0 0 0 0 0 0 0 219 0 0 0 0 0 0 217 217 0 0 0 217 217 219 219 0 0 0 219 0 217 0 0 217 0 0 217 0 217 0 224 224 224 0 0 224 224 224 0 224 0 225 0 0 217 0 0 0 0 224 224 225 0 0 0 0 217 0 224 224 0 224 224 224 224 224 0 0 0 0 0 0 0 224 0 0 0 0 0 32 0 0 0 0 0 225 0 0 0 32 0 0 224 224 0 0 0 224 224 225 225 0 0 0 225 0 224 0 0 224 0 0 224 0 224 0 0 0 0 0 218 218 218 250 0 218 218 218 0 218 224 195 0 0 0 0 0 0 32 218 218 195 224 0 0 0 0 0 218 218 0 218 218 218 218 218 0 0 0 0 0 0 0 218 0 0 0 0 0 0 0 196 0 0 0 195 0 0 0 0 0 196 218 218 0 0 0 218 218 195 195 0 0 0 195 0 218 0 0 218 0 0 218 0 218 0 0 0 0 0 0 0 0 0 0 196 0 219 219 219 218 0 219 219 219 0 219 0 0 196 196 0 218 0 196 0 219 219 0 0 0 0 0 0 0 219 219 0 219 219 219 219 219 0 0 0 226 0 0 0 219 0 0 0 0 0 226 0 0 0 0 0 0 0 0 0 0 0 0 219 219 0 0 0 219 219 0 0 0 0 0 0 0 219 0 0 219 0 0 219 226 219 0 225 225 225 0 0 225 225 225 0 225 0 226 226 0 219 0 0 0 0 225 225 0 0 0 0 0 219 0 225 225 0 225 225 225 225 225 0 0 32 32 32 0 0 225 32 32 0 32 0 194 0 0 0 0 0 0 0 0 0 194 0 0 0 225 0 0 0 225 225 32 32 32 32 32 0 0 225 0 0 225 0 0 225 0 225 0 0 0 0 0 195 195 195 194 0 195 195 195 0 195 225 0 0 0 0 0 0 194 194 195 195 0 225 0 0 0 0 32 195 195 0 195 195 195 195 195 0 0 0 0 196 196 196 195 193 196 196 196 32 196 0 0 0 0 193 0 0 0 0 196 196 0 0 0 0 0 0 0 196 196 0 196 196 196 196 196 195 0 0 195 0 0 195 196 195 0 0 0 193 0 0 0 0 0 0 0 0 0 0 0 195 0 193 193 0 189 0 0 0 0 0 0 195 0 0 189 196 0 0 196 0 0 196 0 196 226 226 226 0 0 226 226 226 0 226 0 0 0 0 0 196 0 0 0 226 226 0 0 0 189 0 0 196 226 226 0 226 226 226 226 226 0 0 189 189 0 0 0 226 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 226 190 0 226 0 0 226 0 226 0 0 190 0 0 0 0 0 0 0 0 194 194 194 0 226 194 194 194 0 194 0 0 0 0 0 0 226 0 0 194 194 0 0 0 0 190 0 0 194 194 0 194 194 194 194 194 0 0 0 190 190 0 0 194 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 191 0 0 0 0 0 0 0 0 194 191 0 194 0 0 194 0 194 193 193 193 0 0 193 193 193 0 193 0 0 0 0 0 194 0 0 0 193 193 0 0 0 0 0 191 194 193 193 0 193 193 193 193 193 0 0 0 0 191 191 0 193 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 189 189 189 0 0 189 189 189 0 189 0 0 0 0 0 193 0 0 193 189 189 193 0 193 0 0 0 0 189 189 192 189 189 189 189 189 0 0 0 193 192 0 0 189 0 0 0 0 0 0 0 193 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 192 0 189 0 0 189 0 0 189 0 189 0 0 0 192 192 0 185 0 0 0 0 0 190 190 190 189 185 190 190 190 0 190 0 0 0 0 0 189 0 0 0 190 190 0 0 0 0 0 0 0 190 190 0 190 190 190 190 190 0 0 185 0 0 0 0 190 0 0 0 0 0 0 0 0 185 185 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 190 0 0 190 187 0 190 0 190 0 191 191 191 0 187 191 191 191 0 191 0 0 0 0 190 0 0 0 0 191 191 0 0 0 0 0 190 0 191 191 0 191 191 191 191 191 0 0 187 0 0 0 0 191 0 0 0 0 0 34 0 0 187 187 0 0 0 0 0 34 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 191 0 0 191 0 0 191 0 191 0 0 0 0 0 0 227 0 0 0 0 0 0 0 0 191 227 0 0 0 0 0 0 34 192 192 192 191 0 192 192 192 0 192 0 0 0 0 0 0 0 0 0 192 192 0 0 0 0 0 227 0 192 192 0 192 192 192 192 192 0 0 0 0 227 227 256 192 0 0 0 0 0 0 0 0 256 0 0 0 0 0 0 0 0 185 185 185 0 0 185 185 185 0 185 0 0 0 0 0 192 0 0 192 185 185 192 0 192 0 251 0 0 185 185 0 185 185 185 185 185 0 0 0 192 256 0 0 185 0 188 0 0 0 0 0 192 0 0 0 188 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 185 0 0 185 0 0 185 0 185 0 187 187 187 188 0 187 187 187 0 187 0 0 0 0 185 0 0 188 188 187 187 0 0 0 0 0 185 0 187 187 0 187 187 187 187 187 0 0 0 0 0 0 0 187 0 0 0 0 0 186 0 0 0 0 0 34 34 34 0 186 0 34 34 0 34 0 0 0 0 0 0 0 0 0 0 0 187 0 0 187 0 0 187 0 187 0 34 34 34 34 34 0 0 186 0 0 0 227 227 227 187 0 227 227 227 0 227 186 186 0 184 0 187 0 0 0 227 227 0 0 184 0 0 0 0 227 227 0 227 227 227 227 227 0 34 0 0 0 0 0 227 0 0 0 0 0 0 0 0 0 0 0 0 0 184 34 0 256 256 256 0 0 256 256 256 0 256 0 184 184 0 0 0 227 0 0 227 0 0 227 0 227 0 0 0 0 0 0 256 256 256 256 256 0 0 0 0 227 0 0 0 0 0 0 0 0 0 0 0 227 0 0 0 0 0 0 0 0 0 0 0 188 188 188 0 0 188 188 188 0 188 0 0 256 0 0 256 0 0 0 188 188 96 0 0 0 0 0 0 188 188 0 188 188 188 188 188 256 0 0 0 0 0 0 188 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 96 0 0 0 0 0 188 0 0 188 0 0 188 0 188 0 0 0 0 0 186 186 186 0 0 186 186 186 0 186 188 0 444 0 0 0 0 0 0 186 186 0 188 0 0 0 0 0 186 186 0 186 186 186 186 0 0 0 0 0 0 0 0 186 0 0 0 0 0 0 0 0 0 0 0 0 0 97 0 0 0 184 184 184 0 0 184 184 184 0 184 0 0 0 0 0 186 0 0 186 184 184 186 0 186 0 0 0 0 184 184 0 184 184 184 184 0 0 0 0 186 0 0 0 184 0 97 0 0 0 0 0 186 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 184 447 0 184 0 0 184 0 184 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 184 0 0 0 0 0 0 0 0 0 0 0 184 0 0 0 96 96 96 96 96 96 96 96 96 96 96 0 96 96 96 0 96 96 96 96 96 96 96 0 515 0 0 96 96 96 96 96 96 96 0 0 96 0 0 0 0 0 96 96 96 96 96 96 96 0 96 96 96 96 96 96 0 96 96 96 96 96 0 0 0 0 0 0 0 0 0 0 444 0 0 0 0 0 0 444 96 0 0 96 515 0 96 96 0 96 0 96 0 522 0 96 0 0 0 0 96 0 0 96 0 515 0 0 96 96 96 96 96 96 0 0 0 96 0 96 96 0 96 96 0 0 97 97 97 97 97 97 97 97 97 97 97 0 97 97 97 0 97 97 97 97 97 97 97 0 516 0 0 97 97 97 97 97 97 97 0 0 97 0 0 0 0 0 97 97 97 97 97 97 97 0 97 97 97 97 97 97 0 97 97 97 97 97 0 0 0 0 0 0 0 0 0 0 447 0 0 0 0 0 0 447 97 0 0 97 516 0 97 97 0 97 0 97 0 270 0 97 0 0 0 0 97 0 0 97 0 516 0 0 97 97 97 97 97 97 0 0 0 97 0 97 97 0 97 97 0 0 0 0 0 0 0 0 96 96 96 96 96 96 96 96 96 96 96 0 97 96 96 0 96 96 96 96 96 96 96 0 522 0 0 96 96 96 96 96 96 96 0 0 96 0 0 0 0 0 96 96 96 96 96 96 96 0 96 96 96 96 96 96 0 96 96 96 96 97 0 0 0 0 0 0 0 0 0 0 522 0 0 0 0 0 0 522 96 0 0 96 518 0 96 96 0 96 0 96 0 271 0 96 0 0 0 0 96 0 0 96 0 522 0 0 96 96 96 96 96 96 0 0 0 96 0 96 96 0 96 96 0 0 97 97 97 97 97 97 97 97 97 97 97 0 315 97 97 0 97 97 97 97 97 97 97 0 0 0 0 97 97 97 97 97 97 97 0 0 97 0 0 0 0 0 97 97 97 97 97 97 97 0 97 97 97 97 97 97 0 97 97 97 97 315 0 0 0 0 0 0 0 0 0 0 270 0 0 0 0 0 0 270 97 0 0 97 519 0 97 97 0 97 0 97 0 0 0 97 0 0 0 0 97 0 0 97 0 0 0 0 97 97 97 97 97 97 0 0 0 97 0 97 97 0 97 97 0 0 0 0 0 0 0 0 97 97 97 97 97 97 97 97 97 97 97 0 540 97 97 0 97 97 97 97 97 97 97 0 0 0 0 97 97 97 97 97 97 97 0 0 97 0 0 0 0 0 97 97 97 97 97 97 97 0 97 97 97 97 97 97 0 97 97 97 97 540 0 0 0 0 0 0 0 0 0 0 271 0 0 0 0 0 0 271 97 0 0 97 0 0 97 97 0 97 0 97 0 0 0 97 0 0 0 0 97 0 0 97 0 0 0 0 97 97 97 97 97 97 0 0 0 97 0 97 97 0 97 97 0 0 315 315 315 315 315 315 315 315 315 315 315 0 315 315 315 315 315 315 315 315 315 315 315 540 0 0 0 315 315 315 315 315 315 315 0 0 315 0 0 0 0 0 315 315 315 315 315 315 315 0 315 315 315 315 315 315 0 315 315 315 315 0 0 0 0 0 0 0 0 0 0 0 540 0 0 0 0 0 0 0 315 0 0 315 0 0 315 315 0 315 0 315 0 0 0 315 0 0 0 0 0 0 0 315 0 0 0 0 315 315 315 315 315 315 0 0 0 315 0 315 315 0 315 315 0 0 0 0 0 0 0 0 540 540 540 540 540 540 0 0 540 540 540 0 0 0 540 227 540 540 540 540 540 540 540 0 0 0 0 540 540 540 540 540 540 540 0 0 540 0 0 0 0 0 540 540 540 540 540 540 540 0 540 540 540 540 540 540 0 540 540 540 540 0 0 0 226 0 14 0 0 0 0 0 0 0 0 0 14 0 0 0 540 0 0 540 0 0 540 540 0 540 0 540 0 0 0 540 0 0 0 0 0 0 0 540 0 0 0 0 540 540 540 540 540 540 0 0 0 540 0 540 540 0 540 540 0 14 0 0 0 0 0 0 0 0 0 0 0 540 540 540 540 540 540 0 0 0 540 540 0 0 0 540 0 540 540 540 540 540 540 540 0 0 184 0 540 540 540 540 540 540 540 0 184 540 0 0 0 0 0 540 540 540 540 540 540 540 0 540 540 540 540 540 540 0 540 540 540 540 0 0 0 0 0 0 0 0 229 0 0 0 0 0 0 0 0 0 0 540 0 0 540 184 0 540 540 0 540 0 540 0 0 0 540 0 0 0 0 0 0 0 540 0 384 540 0 540 540 540 540 540 540 0 384 0 540 0 540 540 0 540 540 0 4 5 6 0 8 0 0 0 9 10 0 0 0 11 0 12 13 14 15 16 17 18 0 0 81 0 19 20 21 22 23 24 25 0 0 26 0 0 0 384 0 89 28 384 0 31 32 33 0 34 35 36 37 38 39 0 40 41 42 43 0 0 0 0 0 0 14 14 14 0 0 384 14 14 0 14 0 0 0 217 0 310 111 0 0 46 47 0 48 0 0 310 0 0 50 0 0 14 14 14 14 14 51 0 0 0 0 52 53 54 55 56 57 0 0 0 58 0 59 60 0 61 62 0 0 310 0 0 0 0 0 0 0 0 0 0 0 0 0 0 310 0 0 0 310 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 184 184 184 0 14 0 184 184 0 184 310 0 0 0 0 0 0 0 0 0 0 0 0 0 0 311 0 0 184 184 0 184 184 184 184 311 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 311 0 0 0 0 0 0 0 0 0 184 384 384 384 0 311 0 384 384 311 384 0 0 0 0 0 0 0 0 384 0 184 0 0 0 0 0 0 0 384 384 0 384 384 384 384 384 311 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 384 384 384 384 384 384 384 384 384 384 384 384 384 384 0 0 384 384 384 0 0 0 0 0 384 0 0 0 0 0 0 384 274 384 0 384 384 384 384 384 384 384 274 384 384 384 310 310 310 0 0 310 310 310 0 310 0 0 0 0 0 0 0 0 0 310 0 0 0 0 0 0 0 0 310 310 274 310 310 310 310 310 0 0 0 0 0 0 0 0 0 274 0 0 0 274 0 0 0 0 0 310 310 310 310 310 310 310 310 310 310 310 310 310 310 0 0 310 310 310 0 0 0 274 0 310 0 0 0 0 0 0 310 0 310 456 310 310 310 310 310 310 310 0 310 456 310 0 0 0 0 0 311 311 311 0 0 311 311 311 0 311 0 0 0 0 0 0 0 0 0 311 0 0 0 0 0 0 0 80 311 311 0 311 311 311 311 311 0 0 0 0 0 0 456 0 88 0 456 0 0 0 0 0 0 0 0 311 311 311 311 311 311 311 311 311 311 311 311 311 311 0 0 311 311 311 456 0 0 0 0 311 0 0 0 0 0 0 311 0 311 0 311 311 311 311 311 311 311 264 311 0 311 0 0 0 0 0 0 264 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 87 274 274 274 0 0 274 274 274 0 274 0 0 0 0 264 0 95 0 264 274 0 0 0 0 0 0 0 0 274 274 0 274 274 274 274 274 0 0 0 0 0 0 0 0 0 0 264 0 0 0 0 0 0 0 0 274 274 274 274 274 274 274 274 274 274 274 274 274 274 0 0 274 274 274 0 0 0 0 0 274 0 0 0 0 0 0 274 0 274 271 274 274 274 274 274 274 274 0 274 271 274 0 0 456 456 456 0 0 0 456 456 0 456 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 456 456 86 456 456 456 456 456 0 0 0 0 0 0 0 0 0 271 0 94 0 271 0 0 0 0 0 456 456 456 456 456 456 456 456 456 456 456 456 456 456 0 0 456 456 456 0 457 0 271 0 456 0 0 0 0 0 0 456 0 456 0 456 456 456 456 456 456 456 250 456 0 456 0 0 0 0 0 0 250 0 0 0 0 0 0 264 264 264 0 0 0 264 264 0 264 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 252 250 264 264 0 264 264 264 264 264 252 0 0 0 0 0 250 0 0 0 0 0 0 0 0 0 0 0 0 264 264 264 264 264 264 264 264 264 264 264 264 264 264 0 252 264 264 264 0 0 0 0 0 264 0 0 0 0 0 252 264 56 264 0 264 264 264 264 264 264 264 56 264 0 264 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 47 0 0 0 0 0 0 0 0 0 47 271 271 271 0 0 0 271 271 0 271 0 0 56 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 271 271 0 271 271 271 271 271 0 0 0 0 254 0 0 0 0 0 0 0 47 0 254 0 0 0 0 271 271 271 271 271 271 271 271 271 271 271 271 271 271 0 0 271 271 271 0 0 0 255 0 271 0 0 0 0 252 0 271 255 271 0 271 271 271 271 271 271 271 0 271 254 271 0 0 0 0 0 0 0 0 0 0 250 250 250 0 0 250 250 250 0 250 253 0 0 0 0 0 0 0 0 250 250 0 0 0 0 255 0 0 250 250 0 250 250 250 250 250 0 0 0 0 0 0 0 252 252 252 0 0 252 252 252 0 252 0 0 0 0 0 0 0 0 0 252 252 0 0 0 0 0 0 0 252 252 0 252 252 252 252 252 250 0 0 250 0 250 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 250 570 0 0 56 56 56 0 0 56 56 56 0 56 0 0 0 0 0 0 0 0 252 56 56 252 0 252 0 0 0 0 56 56 0 56 56 56 56 56 47 47 47 252 0 47 47 47 0 47 0 0 0 0 0 0 0 0 0 47 0 0 0 0 0 0 0 0 47 47 0 47 47 47 47 47 0 0 0 0 0 0 0 56 0 0 56 0 0 0 0 254 254 254 0 0 254 254 254 0 254 0 0 0 56 0 0 0 0 0 0 0 0 0 0 0 0 0 0 47 0 0 254 254 254 254 254 0 255 255 255 0 0 255 255 255 0 255 0 407 47 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0	1
MethodDeclaration Modifier ReferenceType case399_line1507 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference Cast = yyVal yyVal ReferenceType MemberReference Node ArraySelector yyVals BinaryOperation + Literal MemberReference 0 yyTop	1
MethodDeclaration Modifier Annotation ReferenceType tr_bang19 FormalParameter FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context ReferenceType src ReferenceType repl MethodInvocation name Literal ThreadContext IRubyObject IRubyObject MemberReference MemberReference MemberReference Literal trTrans19 "tr!" context src repl false	1
MethodDeclaration Modifier Annotation ReferenceType lineno FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair IRubyObject ReferenceType context ReferenceType recv MethodInvocation name Literal ThreadContext IRubyObject recv MethodInvocation getRuntime "lineno" MethodInvocation newFixnum ArgsFileData MemberReference MemberReference getDataFrom currentLineNumber recv	0
MethodDeclaration Modifier ReferenceType createTempFile FormalParameter FormalParameter IOException ReturnStatement static public File ReferenceType prefix ReferenceType suffix ClassCreator String String ReferenceType MethodInvocation JRubyFile File MemberReference MemberReference createTempFile prefix suffix	0
MethodDeclaration Modifier Annotation destroy TryStatement public Override IfStatement IfStatement IfStatement IfStatement IfStatement IfStatement SynchronizedStatement CatchClause BinaryOperation StatementExpression BinaryOperation StatementExpression BinaryOperation StatementExpression BinaryOperation StatementExpression BinaryOperation StatementExpression BinaryOperation StatementExpression This IfStatement IfStatement IfStatement StatementExpression CatchClauseParameter ThrowStatement != MemberReference Literal MethodInvocation != MemberReference Literal MethodInvocation != MemberReference Literal MethodInvocation != MemberReference Literal MethodInvocation != MemberReference Literal MethodInvocation != MemberReference Literal MethodInvocation BinaryOperation SynchronizedStatement BinaryOperation SynchronizedStatement BinaryOperation SynchronizedStatement MethodInvocation IOException ioe ClassCreator input null input close inerr null inerr close output null output close inputChannel null inputChannel close inerrChannel null inerrChannel close outputChannel null outputChannel close != MemberReference Literal MemberReference StatementExpression != MemberReference Literal MemberReference StatementExpression != MemberReference Literal MemberReference StatementExpression child destroy ReferenceType MemberReference inputPumper null inputPumper MethodInvocation inerrPumper null inerrPumper MethodInvocation outputPumper null outputPumper MethodInvocation RuntimeException ioe inputPumper quit inerrPumper quit outputPumper quit	1
MethodDeclaration Modifier ReferenceType get_proxy_class FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement ReturnStatement static public IRubyObject ReferenceType recv ReferenceType java_class_object ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement IfStatement MethodInvocation IRubyObject IRubyObject Ruby runtime MethodInvocation JavaClass javaClass instanceof MemberReference ReferenceType StatementExpression BinaryOperation BlockStatement BlockStatement MemberReference MemberReference getProxyClass recv getRuntime java_class_object RubyString Assignment instanceof MemberReference ReferenceType StatementExpression ThrowStatement runtime javaClass MemberReference MethodInvocation = java_class_object JavaClass Assignment MethodInvocation javaClass JavaClass MemberReference MemberReference for_name MemberReference Cast = runtime MemberReference MethodInvocation newTypeError recv java_class_object javaClass ReferenceType MemberReference java_class_object runtime MethodInvocation getJavaSupport JavaClass java_class_object getJavaClassClass	1
MethodDeclaration Modifier Annotation ReferenceType inspect ReturnStatement public JRubyMethod RubyString MethodInvocation MethodInvocation getRuntime BinaryOperation newString + Literal MethodInvocation "class " MethodInvocation javaClass getName	0
MethodDeclaration Modifier Annotation ReferenceType to_java_object FormalParameter ReturnStatement static public JRubyMethod IRubyObject ReferenceType recv Cast IRubyObject ReferenceType MethodInvocation JavaObject recv dataGetStruct	1
MethodDeclaration Modifier Annotation ReferenceType callback FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public Override IRubyObject ReferenceType value ReferenceType method ReferenceType self ReferenceType block MethodInvocation IRubyObject IRubyObject IRubyObject Block MemberReference MemberReference MemberReference MemberReference bmcall value method self block	0
MethodDeclaration Modifier Annotation ReferenceType tell FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType VariableDeclarator MethodInvocation ThrowStatement Cast name Literal alias ElementArrayValue ThreadContext IRubyObject ArgsFileData data MethodInvocation ! data MemberReference next_argv MethodInvocation ReferenceType MemberReference "tell" Literal ArgsFileData MemberReference getDataFrom context context MethodInvocation getRuntime RubyIO data currentFile "pos" recv Literal newArgumentError "no stream to tell"	1
MethodDeclaration Modifier assignLocalVariable FormalParameter FormalParameter IfStatement StatementExpression public BasicType index BasicType expr MemberReference BlockStatement MethodInvocation int boolean expr StatementExpression method BinaryOperation astore MethodInvocation + MemberReference MemberReference method dup baseVariableIndex index	0
MethodDeclaration Modifier ReferenceType yieldSpecific FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType context ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 ReferenceType arg3 ReferenceType arg4 MethodInvocation ThreadContext IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject body MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference yieldSpecific context arg0 arg1 arg2 arg3 arg4 binding type	0
MethodDeclaration Modifier ReferenceType setShort FormalParameter ReturnStatement static public String BasicType s MethodInvocation short String MemberReference valueOf s	0
MethodDeclaration Modifier wrapJavaException StatementExpression StatementExpression StatementExpression public MethodInvocation MethodInvocation MethodInvocation loadRuntime loadException wrapJavaObject	0
MethodDeclaration Modifier BasicType utf8Offset FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration ReturnStatement static public int BasicType bytes BasicType p BasicType end BasicType n BasicType VariableDeclarator TernaryExpression byte int int int int pp MethodInvocation BinaryOperation BinaryOperation BinaryOperation MemberReference MemberReference MemberReference MemberReference utf8Nth == MemberReference Literal - MemberReference MemberReference - MemberReference MemberReference bytes p end n pp - 1 end p pp p	0
MethodDeclaration Modifier ReferenceType case409_line1553 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support Cast negateInteger ReferenceType MemberReference Node ArraySelector yyVals BinaryOperation + Literal MemberReference 0 yyTop	1
MethodDeclaration Modifier Annotation ReferenceType op_pow FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType other BasicType VariableDeclarator BinaryOperation BlockStatement IfStatement MethodInvocation name ElementArrayValue required Literal ThreadContext IRubyObject double d instanceof MemberReference ReferenceType LocalVariableDeclaration LocalVariableDeclaration IfStatement IfStatement BinaryOperation BlockStatement IfStatement RubyFloat MethodInvocation MethodInvocation newFloat Literal Literal 1 other RubyFixnum ReferenceType VariableDeclarator BasicType VariableDeclarator BinaryOperation BlockStatement BinaryOperation BlockStatement BlockStatement instanceof MemberReference ReferenceType StatementExpression StatementExpression BinaryOperation BlockStatement BlockStatement getRuntime Math MethodInvocation MemberReference pow "**" "power" RubyFixnum fix Cast long fixValue MethodInvocation > BinaryOperation BinaryOperation StatementExpression >= MemberReference Literal ReturnStatement ReturnStatement other RubyBignum Assignment MethodInvocation instanceof MemberReference ReferenceType StatementExpression ReturnStatement This big2dbl d ReferenceType MemberReference fix getLongValue * BinaryOperation MethodInvocation * Literal Literal MethodInvocation fixValue 0 MethodInvocation MethodInvocation MemberReference Cast = MethodInvocation MethodInvocation getRuntime other RubyFloat Assignment MethodInvocation RubyFixnum other * BinaryOperation Literal Math MemberReference abs 1024 1024 MethodInvocation MethodInvocation getRuntime MethodInvocation MethodInvocation bignorm RubyFloat MethodInvocation MethodInvocation newFloat d ReferenceType MemberReference getWarnings MemberReference Literal MemberReference warn MemberReference Cast = MemberReference Literal MemberReference coerceBin / BinaryOperation Literal 4 fixValue getWarnings MemberReference Literal MemberReference warn getRuntime value Cast pow getRuntime Math MethodInvocation Cast pow RubyBignum other ID MAY_BE_TOO_BIG "in a**b, b may be too big" d d ReferenceType MemberReference context "**" other + MethodInvocation Literal 8 ID MAY_BE_TOO_BIG "in a**b, b may be too big" fixValue BasicType MemberReference This big2dbl BasicType MemberReference RubyFloat other value bitLength 7 int fixValue double fixValue	1
MethodDeclaration Modifier compileGetDefinitionBase FormalParameter FormalParameter SwitchStatement public Modifier ReferenceType node ReferenceType context MethodInvocation SwitchStatementCase SwitchStatementCase final Node BodyCompiler node getNodeType CLASSVARASGNNODE CLASSVARDECLNODE CONSTDECLNODE DASGNNODE GLOBALASGNNODE LOCALASGNNODE MULTIPLEASGNNODE OPASGNNODE OPELEMENTASGNNODE DVARNODE FALSENODE TRUENODE LOCALVARNODE INSTVARNODE BACKREFNODE SELFNODE VCALLNODE YIELDNODE GLOBALVARNODE CONSTNODE FCALLNODE CLASSVARNODE StatementExpression BreakStatement LocalVariableDeclaration LocalVariableDeclaration StatementExpression MethodInvocation ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MemberReference MemberReference compileGetDefinition BranchCallback reg ClassCreator BranchCallback out ClassCreator context MemberReference MemberReference ClassReference protect node context ReferenceType MethodDeclaration ReferenceType MethodDeclaration reg out ReferenceType BranchCallback Modifier branch FormalParameter StatementExpression StatementExpression BranchCallback Modifier branch FormalParameter StatementExpression String public ReferenceType context MethodInvocation MethodInvocation public ReferenceType context MethodInvocation BodyCompiler context inDefined MemberReference MemberReference compileGetDefinition BodyCompiler context outDefined node context	1
MethodDeclaration Modifier ReferenceType iterator ReturnStatement public Iterator ClassCreator ReferenceType MemberReference BaseIterator view	0
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration TryStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType arg0 ReferenceType VariableDeclarator StatementExpression StatementExpression StatementExpression ReturnStatement CatchClause CatchClause StatementExpression ThreadContext IRubyObject RubyModule String IRubyObject Ruby runtime MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation CatchClauseParameter ReturnStatement CatchClauseParameter ReturnStatement MethodInvocation context getRuntime MemberReference MemberReference MemberReference MemberReference MemberReference pre argsNode MemberReference Literal checkArgCount argsNode MemberReference MemberReference MemberReference MemberReference MemberReference prepare body MemberReference MemberReference MemberReference MemberReference interpret JumpException.ReturnJump rj MethodInvocation JumpException.RedoJump rj MethodInvocation MemberReference MemberReference MemberReference post context name self Block NULL_BLOCK runtime runtime 1 context runtime self arg0 Block NULL_BLOCK runtime context self Block NULL_BLOCK MemberReference MemberReference handleReturn MemberReference handleRedo runtime context name context rj runtime	0
MethodDeclaration Modifier checkZeroDivisionError FormalParameter FormalParameter IfStatement private ReferenceType context ReferenceType other BinaryOperation BlockStatement ThreadContext IRubyObject && BinaryOperation BinaryOperation ThrowStatement instanceof MemberReference ReferenceType == Cast Literal MethodInvocation other RubyFloat ReferenceType MemberReference 0.0d context MethodInvocation getRuntime RubyFloat other newZeroDivisionError	0
MethodDeclaration Modifier call FormalParameter StatementExpression public ReferenceType context MethodInvocation BodyCompiler MethodInvocation MemberReference MemberReference compile whenNode getBodyNode context expr	0
MethodDeclaration Modifier BasicType canModifyCode LocalVariableDeclaration ReturnStatement public boolean ReferenceType VariableDeclarator TernaryExpression IR_Method m MethodInvocation BinaryOperation Literal MethodInvocation getTargetMethod == MemberReference Literal true m modifiesCode m null	1
MethodDeclaration Modifier ReferenceType invoke FormalParameter FormalParameter FormalParameter LocalVariableDeclaration ReturnStatement final public IRubyObject ReferenceType runtime ReferenceType function ReferenceType args Modifier BasicType VariableDeclarator ClassCreator Ruby Function HeapInvocationBuffer final long address MethodInvocation ReferenceType MemberReference MethodInvocation invoker MemberReference MemberReference invokeAddress Pointer runtime NativeMemoryIO MemberReference MemberReference wrap function args runtime address	1
MethodDeclaration Modifier ReferenceType getOrig ReturnStatement public IRubyObject MemberReference self	0
MethodDeclaration Modifier BasicType other2long FormalParameter RaiseException IfStatement ReturnStatement private static long ReferenceType arg MethodInvocation BlockStatement IfStatement MethodInvocation IRubyObject arg isNil ThrowStatement BinaryOperation BlockStatement IfStatement arg MethodInvocation convertToInteger MethodInvocation instanceof MemberReference ReferenceType ReturnStatement BinaryOperation BlockStatement getLongValue arg MethodInvocation getRuntime arg RubyFloat MethodInvocation instanceof MemberReference ReferenceType ReturnStatement Literal newTypeError Cast float2long arg RubyBignum MethodInvocation "no implicit conversion from nil to integer" ReferenceType MemberReference RubyBignum Cast big2long RubyFloat arg ReferenceType MemberReference RubyBignum arg	0
MethodDeclaration Modifier ReferenceType getLastLine FormalParameter IfStatement ThrowStatement public IRubyObject ReferenceType runtime MethodInvocation BlockStatement ClassCreator Ruby ! staticScope isBackrefLastlineScope ReturnStatement ReferenceType Literal MethodInvocation RuntimeException "DummyDynamicScope should never be used for lastline storage" parent MemberReference getLastLine runtime	1
MethodDeclaration Modifier ReferenceType yyExpecting FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement IfStatement LocalVariableDeclaration ForStatement ReturnStatement protected String BasicType state BasicType VariableDeclarator VariableDeclarator VariableDeclarator BasicType VariableDeclarator BinaryOperation ForStatement BinaryOperation ForStatement ReferenceType VariableDeclarator ForControl IfStatement MemberReference int int token n len Literal boolean ok ArrayCreator != Assignment Literal ForControl IfStatement != Assignment Literal ForControl IfStatement String result ArrayCreator Assignment BinaryOperation MemberReference MemberReference StatementExpression result 0 BasicType MemberReference MemberReference MemberReference = 0 Assignment BinaryOperation MemberReference BinaryOperation BlockStatement MemberReference MemberReference = 0 Assignment BinaryOperation MemberReference BinaryOperation BlockStatement ReferenceType MemberReference MemberReference Assignment = < MemberReference MemberReference ++ token ArraySelector ok Assignment boolean yyNames length n ArraySelector yySindex MemberReference TernaryExpression = && BinaryOperation BinaryOperation ++ token && BinaryOperation BinaryOperation StatementExpression StatementExpression n ArraySelector yyRindex MemberReference TernaryExpression = && BinaryOperation BinaryOperation ++ token && BinaryOperation BinaryOperation StatementExpression StatementExpression String len n MemberReference Literal = n len MemberReference MemberReference MemberReference = MemberReference token BinaryOperation MemberReference Literal < MemberReference MemberReference < BinaryOperation MemberReference && BinaryOperation MemberReference != MemberReference Literal MemberReference Assignment MemberReference token BinaryOperation MemberReference Literal < MemberReference MemberReference < BinaryOperation MemberReference && BinaryOperation MemberReference != MemberReference Literal MemberReference Assignment token 0 token ArraySelector result ArraySelector yyNames state < MemberReference Literal - n 0 token yyNames length + MemberReference MemberReference yyTable length == MemberReference MemberReference ! ArraySelector ok ArraySelector yyNames null ++ len MemberReference Literal = state < MemberReference Literal - n 0 token yyNames length + MemberReference MemberReference yyTable length == MemberReference MemberReference ! ArraySelector ok ArraySelector yyNames null ++ len MemberReference Literal = MemberReference MemberReference n 0 n token ArraySelector yyCheck token MemberReference MemberReference ArraySelector ok true n 0 n token ArraySelector yyCheck token MemberReference MemberReference ArraySelector ok true ++ n token BinaryOperation token token MemberReference BinaryOperation token token MemberReference + MemberReference MemberReference token + MemberReference MemberReference token n token n token	1
MethodDeclaration Modifier Annotation ReferenceType superclass19 FormalParameter LocalVariableDeclaration IfStatement WhileStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType VariableDeclarator BinaryOperation BlockStatement BinaryOperation StatementExpression TernaryExpression name Literal compat MemberReference ThreadContext RubyClass superClazz MemberReference == MemberReference Literal IfStatement ThrowStatement && BinaryOperation MethodInvocation Assignment BinaryOperation MemberReference MethodInvocation "superclass" CompatVersion RUBY1_9 superClass superClazz null BinaryOperation ReturnStatement MethodInvocation != MemberReference Literal superClazz isIncluded MemberReference MemberReference = != MemberReference Literal superClazz runtime getNil == MemberReference MethodInvocation MethodInvocation runtime Literal newTypeError superClazz null superClazz superClazz superClass superClazz null metaClass runtime getBasicObject runtime getNil "uninitialized class"	1
MethodDeclaration Modifier BasicType getInt64 FormalParameter FormalParameter ReturnStatement public long BasicType array BasicType offset BinaryOperation byte int | BinaryOperation BinaryOperation | BinaryOperation BinaryOperation << BinaryOperation Literal | BinaryOperation BinaryOperation << BinaryOperation Literal & Cast Literal 0 | BinaryOperation BinaryOperation << BinaryOperation Literal & Cast Literal 8 BasicType MemberReference 0xff | BinaryOperation BinaryOperation << BinaryOperation Literal & Cast Literal 16 BasicType MemberReference 0xff long ArraySelector array | BinaryOperation BinaryOperation << BinaryOperation Literal & Cast Literal 24 BasicType MemberReference 0xff long ArraySelector array BinaryOperation | BinaryOperation BinaryOperation << BinaryOperation Literal & Cast Literal 32 BasicType MemberReference 0xff long ArraySelector array BinaryOperation + MemberReference Literal << BinaryOperation Literal << BinaryOperation Literal & Cast Literal 40 BasicType MemberReference 0xff long ArraySelector array BinaryOperation + MemberReference Literal offset 7 & Cast Literal 56 & Cast Literal 48 BasicType MemberReference 0xff long ArraySelector array BinaryOperation + MemberReference Literal offset 6 BasicType MemberReference 0xff BasicType MemberReference 0xff long ArraySelector array BinaryOperation + MemberReference Literal offset 5 long ArraySelector array long ArraySelector array BinaryOperation + MemberReference Literal offset 4 BinaryOperation BinaryOperation + MemberReference Literal offset 3 + MemberReference Literal + MemberReference Literal offset 2 offset 0 offset 1	0
MethodDeclaration Modifier Annotation ReferenceType cycle FormalParameter FormalParameter FormalParameter IfStatement IfStatement LocalVariableDeclaration IfStatement ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context ReferenceType arg ReferenceType block MethodInvocation ReturnStatement MethodInvocation ReturnStatement BasicType VariableDeclarator BinaryOperation ReturnStatement MethodInvocation name Literal ThreadContext IRubyObject Block arg isNil MethodInvocation ! block isGiven MethodInvocation long times MethodInvocation <= MemberReference Literal MethodInvocation MemberReference MemberReference MemberReference cycleCommon "cycle" MemberReference MemberReference cycle MethodInvocation This Literal MemberReference enumeratorize RubyNumeric MemberReference num2long times 0 context MethodInvocation getRuntime context times block context block context getRuntime "cycle" arg arg getNil	1
MethodDeclaration Modifier Annotation ReferenceType each_byte FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject Modifier ReferenceType context ReferenceType recv ReferenceType args Modifier ReferenceType block TernaryExpression name Literal optional Literal frame Literal final ThreadContext IRubyObject IRubyObject final Block MethodInvocation MethodInvocation MethodInvocation "each_byte" 1 true block isGiven MemberReference MemberReference MemberReference each_byte MethodInvocation MemberReference Literal enumeratorize context recv block context getRuntime recv "each_byte"	1
MethodDeclaration Modifier ReferenceType newUnsigned8 FormalParameter FormalParameter ReturnStatement final static public IRubyObject ReferenceType runtime BasicType value MethodInvocation Ruby int runtime TernaryExpression newFixnum BinaryOperation Cast MemberReference < MemberReference Literal BasicType BinaryOperation value value 0 long + BinaryOperation Literal & MemberReference Literal 0x80L value 0x7FL	1
MethodDeclaration Modifier ReferenceType getName ReturnStatement public String MemberReference callAdapter methodName	0
MethodDeclaration Modifier compileMatch3 FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression StatementExpression StatementExpression IfStatement public ReferenceType node ReferenceType context BasicType expr ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MemberReference StatementExpression Node BodyCompiler boolean Match3Node matchNode Cast MethodInvocation MemberReference Literal compile MethodInvocation MemberReference Literal compile context match3 ! expr MethodInvocation ReferenceType MemberReference matchNode getReceiverNode context true matchNode getValueNode context true context consumeCurrentValue Match3Node node	1
MethodDeclaration Modifier ReferenceType getThreadDumpSignal ReturnStatement public String MemberReference threadDumpSignal	0
MethodDeclaration Modifier ReferenceType toString ReturnStatement public String BinaryOperation + BinaryOperation SuperMethodInvocation + Literal MethodInvocation toString "Script: file: " getFileName	0
MethodDeclaration Modifier ReferenceType getRemoteSocket LocalVariableDeclaration IfStatement protected InetSocketAddress ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement Channel socketChannel MethodInvocation instanceof MemberReference ReferenceType ReturnStatement ReturnStatement openFile MethodInvocation MethodInvocation getMainStream socketChannel SocketChannel Cast Literal getDescriptor getChannel ReferenceType Cast null InetSocketAddress ReferenceType MemberReference SocketChannel socketChannel	0
MethodDeclaration Modifier ReferenceType case253_line978 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop MethodInvocation MemberReference Object Object int lexer MemberReference setState yyVal LexState EXPR_ENDARG	1
MethodDeclaration Modifier ReferenceType getClosureInfo FormalParameter FormalParameter LocalVariableDeclaration IfStatement StatementExpression ReturnStatement private final ClosureInfo ReferenceType runtime ReferenceType cbInfo ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation Cast Ruby CallbackInfo Object info MethodInvocation && BinaryOperation BinaryOperation ReturnStatement cbInfo Assignment setProviderCallbackInfo ReferenceType MemberReference cbInfo getProviderCallbackInfo != MemberReference Literal instanceof MemberReference ReferenceType Cast MemberReference MethodInvocation = ClosureInfo info info null info ClosureInfo ReferenceType MemberReference info MemberReference MemberReference newClosureInfo ClosureInfo info runtime cbInfo	1
MethodDeclaration Modifier ReferenceType fastGetClassVar FormalParameter AssertStatement AssertStatement LocalVariableDeclaration LocalVariableDeclaration DoStatement ThrowStatement public IRubyObject ReferenceType internedName BinaryOperation BinaryOperation MethodInvocation ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation String == MemberReference MethodInvocation + MemberReference Literal IdUtil MemberReference isClassVariable IRubyObject value RubyModule module This != Assignment Literal IfStatement MethodInvocation getRuntime internedName internedName intern internedName " is not interned" internedName MemberReference MethodInvocation = null BinaryOperation ReturnStatement BinaryOperation MemberReference newNameError module module getSuperClass != Assignment Literal MemberReference + BinaryOperation MethodInvocation internedName MemberReference MethodInvocation = null value + BinaryOperation Literal getName value module MemberReference fetchClassVariable + Literal MemberReference " in " internedName "uninitialized class variable " internedName	1
MethodDeclaration Modifier inDefined StatementExpression StatementExpression StatementExpression public MethodInvocation MethodInvocation MethodInvocation method MemberReference aload method iconst_1 Literal MethodInvocation invokeThreadContext StandardASMCompiler THREADCONTEXT_INDEX "setWithinDefined" VoidClassReference MethodInvocation sig ClassReference params BasicType boolean	0
MethodDeclaration Modifier BasicType matches FormalParameter FormalParameter FormalParameter IOException LocalVariableDeclaration ForStatement ReturnStatement private boolean ReferenceType match ReferenceType buffer BasicType length BasicType VariableDeclarator ForControl BlockStatement Literal ByteList ByteList int int c VariableDeclaration BinaryOperation MemberReference StatementExpression StatementExpression IfStatement true BasicType VariableDeclarator < MemberReference MemberReference ++ i Assignment MethodInvocation BinaryOperation BlockStatement int i Literal i length MemberReference MethodInvocation = buffer MemberReference append != MethodInvocation MemberReference StatementExpression ReturnStatement 0 c read c match MemberReference charAt c MethodInvocation Literal i MemberReference unreadMany false buffer	0
MethodDeclaration Modifier Annotation ReferenceType each_index FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType block TernaryExpression name Literal frame Literal ThreadContext Block MethodInvocation MethodInvocation MethodInvocation "each_index" true block isGiven MemberReference MemberReference eachIndex MethodInvocation This Literal enumeratorize context block context getRuntime "each_index"	1
MethodDeclaration Modifier BasicType overThreshold ReturnStatement private boolean BinaryOperation > MemberReference MemberReference size threshold	0
MethodDeclaration Modifier ReferenceType int2fix FormalParameter FormalParameter ReturnStatement static public RubyNumeric ReferenceType runtime BasicType val MethodInvocation Ruby long RubyFixnum MemberReference MemberReference newFixnum runtime val	0
MethodDeclaration Modifier ReferenceType getJavaArrayUtilitiesModule LocalVariableDeclaration IfStatement ReturnStatement public RubyModule ReferenceType VariableDeclarator BinaryOperation ReturnStatement Assignment RubyModule module != Assignment Literal MemberReference MemberReference MethodInvocation = MemberReference MemberReference = null module javaArrayUtilitiesModule runtime Literal fastGetModule module javaArrayUtilitiesModule "JavaArrayUtilities"	1
MethodDeclaration Modifier Annotation ReferenceType strDup ReturnStatement final public Deprecated RubyString MethodInvocation MethodInvocation MethodInvocation strDup getRuntime getMetaClass	1
MethodDeclaration Modifier ReferenceType newClosure FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration ReturnStatement final CallbackMemoryIO ReferenceType runtime ReferenceType returnType ReferenceType parameterTypes ReferenceType proc ReferenceType convention ReferenceType VariableDeclarator Modifier ReferenceType VariableDeclarator Modifier ReferenceType VariableDeclarator ClassCreator Ruby Type Type Object CallingConvention ClosureInfo info ClassCreator final CallbackProxy cbProxy ClassCreator final Closure ReferenceType handle MethodInvocation ReferenceType MemberReference MemberReference ReferenceType MemberReference MemberReference MemberReference MemberReference ReferenceType MemberReference MemberReference MemberReference Handle ClosureManager MethodInvocation getInstance CallbackMemoryIO runtime handle ClosureInfo runtime returnType parameterTypes convention CallbackProxy runtime info proc MemberReference MemberReference MemberReference MemberReference newClosure cbProxy info ffiReturnType info ffiParameterTypes info convention	0
MethodDeclaration Modifier Annotation ReferenceType success_p IfStatement IfStatement ReturnStatement public JRubyMethod ElementValuePair IRubyObject MethodInvocation ReturnStatement MethodInvocation ReturnStatement MethodInvocation name Literal status isNil MethodInvocation status MethodInvocation equals MethodInvocation MethodInvocation getRuntime "success?" MethodInvocation getRuntime RubyFixnum MethodInvocation zero MethodInvocation getRuntime getFalse getTrue getRuntime getTrue	1
MethodDeclaration Modifier prepareLoadSearch FormalParameter IfStatement public Modifier ReferenceType file BinaryOperation BlockStatement BlockStatement final String > MethodInvocation MethodInvocation LocalVariableDeclaration IfStatement StatementExpression StatementExpression file Literal lastIndexOf file Literal lastIndexOf ReferenceType VariableDeclarator Assignment BlockStatement BlockStatement Assignment Assignment '.' '/' Matcher matcher Literal MemberReference MethodInvocation = StatementExpression StatementExpression StatementExpression StatementExpression MemberReference MemberReference = MemberReference MemberReference = null matcher sourcePattern MemberReference matcher Assignment Assignment Assignment Assignment suffixType SuffixType Neither searchFile file file MemberReference MemberReference = MemberReference MethodInvocation = MemberReference MemberReference = MemberReference MemberReference = suffixType SuffixType Source searchFile file Literal MethodInvocation substring suffixType SuffixType Neither searchFile file 0 matcher start	1
MethodDeclaration Modifier ReferenceType getPosition ReturnStatement public ISourcePosition MethodInvocation positionFactory Literal getPosition null	0
MethodDeclaration Modifier Annotation BasicType getIndex FormalParameter LocalVariableDeclaration IfStatement ReturnStatement synchronized static public Deprecated int ReferenceType methodName ReferenceType VariableDeclarator BinaryOperation BlockStatement MemberReference String Integer index MethodInvocation == MemberReference Literal StatementExpression StatementExpression StatementExpression index NUMBERS MemberReference get index null Assignment MethodInvocation MethodInvocation methodName MemberReference ClassCreator = NUMBERS MemberReference MemberReference put NAMES MemberReference add index ReferenceType MethodInvocation methodName index methodName Integer NAMES size	1
MethodDeclaration Modifier call FormalParameter StatementExpression IfStatement public ReferenceType context MethodInvocation BinaryOperation BlockStatement BodyCompiler context consumeCurrentValue != MethodInvocation Literal IfStatement iterNode getVarNode null BinaryOperation BlockStatement BlockStatement instanceof MemberReference ReferenceType LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression iterNode LambdaNode Modifier BasicType VariableDeclarator Modifier BasicType VariableDeclarator Modifier BasicType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation final int required MethodInvocation final int opt MethodInvocation final int rest MethodInvocation context MethodInvocation getVariableCompiler MemberReference MemberReference Literal compileMethodArgs MemberReference MemberReference Literal compileMethodArgs argsNode getRequiredArgsCount argsNode getOptionalArgsCount argsNode getRestArg MemberReference MemberReference MemberReference checkMethodArity argsNode context true argsNode context true required opt rest	1
MethodDeclaration Modifier BasicType hasFourth2 FormalParameter ReturnStatement public boolean ReferenceType something Literal Object false	0
MethodDeclaration Modifier setFilePosition FormalParameter IfStatement public ReferenceType position MemberReference BlockStatement ISourcePosition ! RubyInstanceConfig POSITIONLESS_COMPILE_ENABLED StatementExpression StatementExpression StatementExpression MethodInvocation MethodInvocation MethodInvocation loadThreadContext method MethodInvocation ldc Literal MethodInvocation invokeThreadContext position getFile "setFile" VoidClassReference MethodInvocation sig ClassReference params ReferenceType String	0
MethodDeclaration Modifier ReferenceType case57_line509 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support Cast Cast Cast Cast new_call ReferenceType MemberReference ReferenceType MemberReference ReferenceType MemberReference ReferenceType MemberReference Node ArraySelector yyVals Token ArraySelector yyVals Node ArraySelector yyVals IterNode ArraySelector yyVals BinaryOperation BinaryOperation BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference + Literal MemberReference + Literal MemberReference - 4 yyTop - 2 yyTop - 1 yyTop 0 yyTop	1
MethodDeclaration Modifier ReferenceType internalCopyTable FormalParameter LocalVariableDeclaration ForStatement ReturnStatement private final RubyHashEntry ReferenceType destHead ReferenceType VariableDeclarator ForControl BlockStatement MemberReference RubyHashEntry RubyHashEntry newTable ArrayCreator VariableDeclaration BinaryOperation Assignment LocalVariableDeclaration StatementExpression newTable ReferenceType MemberReference ReferenceType VariableDeclarator != MemberReference MemberReference MemberReference MemberReference = BasicType VariableDeclarator Assignment RubyHashEntry table length RubyHashEntry entry MemberReference entry head entry entry nextAdded int i MethodInvocation MemberReference ClassCreator = head nextAdded MemberReference MemberReference bucketIndex ArraySelector newTable ReferenceType MemberReference MemberReference MemberReference MemberReference MemberReference entry hash table length MemberReference RubyHashEntry entry hash entry key entry value ArraySelector newTable destHead i MemberReference i	1
MethodDeclaration Modifier ReferenceType pack_sockaddr_in FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration TryStatement ReturnStatement static public IRubyObject ReferenceType context ReferenceType recv BasicType iport ReferenceType host ReferenceType VariableDeclarator LocalVariableDeclaration IfStatement StatementExpression StatementExpression TryStatement StatementExpression StatementExpression CatchClause MethodInvocation ThreadContext IRubyObject int String ByteArrayOutputStream bufS ClassCreator ReferenceType VariableDeclarator MemberReference BlockStatement BlockStatement MethodInvocation MethodInvocation IfStatement CatchClause MethodInvocation MethodInvocation CatchClauseParameter ThrowStatement context MethodInvocation getRuntime ReferenceType DataOutputStream ds ClassCreator Platform IS_BSD StatementExpression StatementExpression StatementExpression StatementExpression ds BinaryOperation write ds MemberReference write BinaryOperation BlockStatement BlockStatement CatchClauseParameter ThrowStatement ds Literal writeInt ds Literal writeInt IOException e MethodInvocation ClassCreator newString ByteArrayOutputStream ReferenceType MemberReference MethodInvocation MethodInvocation MethodInvocation MethodInvocation >> MemberReference Literal iport && BinaryOperation Literal StatementExpression LocalVariableDeclaration LocalVariableDeclaration StatementExpression UnknownHostException e MethodInvocation 0 0 MethodInvocation Literal sockerr ReferenceType MethodInvocation Literal DataOutputStream bufS ds Literal write ds Literal write ds Literal write ds Literal write iport 8 != MemberReference Literal MethodInvocation "" MethodInvocation ReferenceType VariableDeclarator BasicType VariableDeclarator MethodInvocation MethodInvocation Literal sockerr context getRuntime "pack_sockaddr_in: internal error" ByteList bufS toByteArray false 16 2 2 0 host null MemberReference equals ds Literal writeInt InetAddress addrs MethodInvocation byte addr MemberReference ds MemberReference Literal MemberReference write context getRuntime "getaddrinfo: No address associated with nodename" host 0 InetAddress MemberReference getAllByName ArraySelector MethodInvocation addrs addr 0 addr length host Literal getAddress 0	1
MethodDeclaration Modifier buildSpecificArityArguments FormalParameter FormalParameter FormalParameter IfStatement public ReferenceType args ReferenceType node ReferenceType s BinaryOperation BlockStatement BlockStatement List TypeArgument Node IR_Scope == MethodInvocation MemberReference LocalVariableDeclaration IfStatement StatementExpression ReferenceType node getNodeType NodeType ARRAYNODE ReferenceType VariableDeclarator MethodInvocation BlockStatement BlockStatement MethodInvocation Operand ArrayNode arrayNode Cast arrayNode isLightweight ForStatement StatementExpression args MethodInvocation add ReferenceType MemberReference EnhancedForControl StatementExpression MethodInvocation MemberReference MemberReference build ArrayNode node VariableDeclaration MethodInvocation MethodInvocation args MethodInvocation add node s ReferenceType VariableDeclarator arrayNode childNodes args MethodInvocation add MemberReference MemberReference build Node n MemberReference MemberReference build arrayNode s n s	1
MethodDeclaration Modifier Annotation ReferenceType zero_p ReturnStatement public JRubyMethod ElementValuePair IRubyObject MethodInvocation name Literal MethodInvocation getRuntime "zero?" MethodInvocation newBoolean isZero	1
MethodDeclaration Modifier BasicType int32Value FormalParameter LocalVariableDeclaration IfStatement ReturnStatement final static public int ReferenceType parameter Modifier BasicType VariableDeclarator BinaryOperation BlockStatement Cast IRubyObject final long value MethodInvocation || BinaryOperation BinaryOperation ThrowStatement BasicType MemberReference MemberReference longValue < MemberReference MemberReference > MemberReference Literal MethodInvocation int value parameter value Integer MIN_VALUE value 0xffffffffL parameter MethodInvocation getRuntime BinaryOperation newRangeError + BinaryOperation Literal + Literal MemberReference " outside integer range" "Value " value	1
MethodDeclaration Modifier Annotation ReferenceType op_mul FormalParameter FormalParameter LocalVariableDeclaration IfStatement IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType other ReferenceType VariableDeclarator BinaryOperation BlockStatement BinaryOperation BlockStatement IfStatement MethodInvocation name Literal required Literal ThreadContext IRubyObject Ruby runtime MethodInvocation instanceof MemberReference ReferenceType LocalVariableDeclaration ReturnStatement instanceof MemberReference ReferenceType LocalVariableDeclaration ReturnStatement BinaryOperation BlockStatement MemberReference Literal MemberReference coerceBin "*" 1 context getRuntime other RubyFixnum ReferenceType VariableDeclarator TernaryExpression other RubyBignum ReferenceType VariableDeclarator TernaryExpression instanceof MemberReference ReferenceType ReturnStatement context "*" other BigInteger result MethodInvocation BinaryOperation MethodInvocation ClassCreator BigInteger result MethodInvocation BinaryOperation MethodInvocation ClassCreator other RubyFloat MethodInvocation value MethodInvocation multiply == MethodInvocation Literal RubyFixnum MemberReference zero ReferenceType MemberReference MemberReference value Cast multiply == MethodInvocation Literal RubyFixnum MemberReference zero ReferenceType MemberReference MemberReference RubyFloat MethodInvocation BinaryOperation newFloat Cast fix2big result signum 0 runtime RubyBignum runtime result ReferenceType MemberReference result signum 0 runtime RubyBignum runtime result getRuntime * MethodInvocation Cast ReferenceType MemberReference RubyBignum other This big2dbl ReferenceType MemberReference RubyFixnum other RubyFloat other	1
MethodDeclaration Modifier Annotation ReferenceType rstrip19 FormalParameter LocalVariableDeclaration StatementExpression ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType VariableDeclarator MethodInvocation MemberReference name Literal compat MemberReference ThreadContext RubyString str MethodInvocation str MemberReference rstrip_bang19 str "rstrip" CompatVersion RUBY1_9 MethodInvocation strDup context context getRuntime	0
MethodDeclaration Modifier Annotation ReferenceType squeeze19 FormalParameter FormalParameter LocalVariableDeclaration StatementExpression ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType arg ReferenceType VariableDeclarator MethodInvocation MemberReference name Literal compat MemberReference ThreadContext IRubyObject RubyString str MethodInvocation str MemberReference MemberReference squeeze_bang19 str "squeeze" CompatVersion RUBY1_9 MethodInvocation strDup context arg context getRuntime	0
MethodDeclaration Modifier Annotation ReferenceType symlink FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression TryStatement ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType from ReferenceType to ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator Assignment IfStatement CatchClause MethodInvocation required Literal meta Literal ThreadContext IRubyObject IRubyObject IRubyObject Ruby runtime MethodInvocation RubyString fromStr MethodInvocation RubyString toStr MethodInvocation String tovalue MethodInvocation MemberReference MethodInvocation = BinaryOperation BlockStatement CatchClauseParameter ThrowStatement runtime Literal newFixnum 2 true context getRuntime MemberReference MemberReference get_path MemberReference MemberReference get_path toStr getUnicodeValue tovalue JRubyFile MethodInvocation MethodInvocation MemberReference create == MethodInvocation Literal ThrowStatement java.lang.UnsatisfiedLinkError ule MethodInvocation 0 context from context to getAbsolutePath runtime getCurrentDirectory tovalue runtime MethodInvocation getPosix - 1 MethodInvocation runtime Literal newNotImplementedError MethodInvocation MemberReference symlink runtime BinaryOperation newErrnoEEXISTError "symlink() function is unimplemented on this machine" fromStr getUnicodeValue tovalue + BinaryOperation MemberReference + BinaryOperation Literal toStr + Literal MemberReference " or " "File exists - " fromStr	1
MethodDeclaration Modifier ReferenceType createMethodBlock FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration ReturnStatement static public Block ReferenceType context ReferenceType self ReferenceType dynamicScope ReferenceType body ReferenceType VariableDeclarator ClassCreator ThreadContext IRubyObject DynamicScope MethodBlock Binding binding MethodInvocation ReferenceType MemberReference MemberReference context MemberReference MemberReference currentBinding Block body binding self dynamicScope	0
MethodDeclaration Modifier BasicType size ReturnStatement public int MemberReference count	0
MethodDeclaration Modifier Annotation ReferenceType instance_of_p FormalParameter FormalParameter IfStatement public JRubyMethod ElementValuePair ElementValuePair RubyBoolean ReferenceType context ReferenceType type BinaryOperation BlockStatement IfStatement name Literal required Literal ThreadContext IRubyObject == MethodInvocation MemberReference ReturnStatement BinaryOperation BlockStatement BlockStatement "instance_of?" 1 type type MethodInvocation instanceof MemberReference ReferenceType ThrowStatement ReturnStatement context MethodInvocation getRuntime type RubyModule MethodInvocation MethodInvocation getTrue context MethodInvocation getRuntime context MethodInvocation getRuntime Literal newTypeError getFalse "class or module required"	1
MethodDeclaration Modifier Annotation ReferenceType set_dictionary FormalParameter FormalParameter Exception TryStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType arg ReturnStatement CatchClause name Literal required Literal backtrace Literal ThreadContext IRubyObject MethodInvocation CatchClauseParameter LocalVariableDeclaration LocalVariableDeclaration ThrowStatement "set_dictionary" 1 true defl MemberReference set_dictionary IllegalArgumentException iae ReferenceType VariableDeclarator ReferenceType VariableDeclarator ClassCreator arg Ruby runtime MethodInvocation RubyClass errorClass MethodInvocation ReferenceType MethodInvocation Literal context getRuntime runtime MethodInvocation Literal fastGetModule RaiseException RubyException MemberReference MemberReference MethodInvocation newException true Literal fastGetClass "Zlib" runtime errorClass iae getMessage "StreamError"	1
MethodDeclaration Modifier ReferenceType each_line FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration ForStatement ReturnStatement public RubyIO ReferenceType context ReferenceType args ReferenceType block ReferenceType VariableDeclarator ReferenceType VariableDeclarator ForControl BlockStatement This ThreadContext IRubyObject Block Ruby runtime MethodInvocation ByteList separator MethodInvocation VariableDeclaration MethodInvocation Assignment StatementExpression context getRuntime MemberReference MemberReference getSeparatorForGets ReferenceType VariableDeclarator ! line isNil MemberReference MethodInvocation = MethodInvocation runtime args IRubyObject line MethodInvocation line MemberReference MemberReference getline block MemberReference MemberReference yield MemberReference MemberReference getline runtime separator context line runtime separator	1
MethodDeclaration Modifier Annotation assign FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression StatementExpression public Override ReferenceType runtime ReferenceType context ReferenceType self ReferenceType value1 ReferenceType block MethodInvocation MethodInvocation MethodInvocation Ruby ThreadContext IRubyObject IRubyObject Block parameter1 MemberReference MemberReference MemberReference MemberReference MemberReference Literal assign parameter2 MemberReference MemberReference MemberReference MethodInvocation MemberReference Literal assign parameter3 MemberReference MemberReference MemberReference MethodInvocation MemberReference Literal assign runtime context self value1 block false runtime context self runtime getNil block false runtime context self runtime getNil block false	0
MethodDeclaration Modifier Annotation ReferenceType adler ReturnStatement public JRubyMethod ElementValuePair IRubyObject MethodInvocation name Literal MethodInvocation getRuntime "adler" MethodInvocation newFixnum internalAdler	0
MethodDeclaration Modifier ReferenceType outgoingEdgesOf FormalParameter ReturnStatement public Set TypeArgument ReferenceType bb MethodInvocation ReferenceType BasicBlock _cfg MemberReference outgoingEdgesOf CFG_Edge bb	0
MethodDeclaration Modifier Annotation ReferenceType lstat FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType filename ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation name Literal required Literal meta Literal ThreadContext IRubyObject IRubyObject String f MethodInvocation && MethodInvocation BinaryOperation StatementExpression context MethodInvocation getRuntime "lstat" 1 true MethodInvocation MemberReference MemberReference get_path f Literal startsWith != MethodInvocation Literal Assignment MemberReference Literal newFileStat getUnicodeValue context filename "file:" f Literal indexOf - 1 MemberReference MethodInvocation = f true '!' f f Literal MethodInvocation substring 5 f Literal indexOf "!"	1
MethodDeclaration Modifier ReferenceType getSimplifiedOperand FormalParameter StatementExpression ReturnStatement public Operand ReferenceType valueMap Assignment MemberReference Map TypeArgument TypeArgument MemberReference MethodInvocation = _target ReferenceType ReferenceType _target _target MemberReference getSimplifiedOperand Operand Operand valueMap	0
MethodDeclaration Modifier Annotation ReferenceType rindex FormalParameter FormalParameter SwitchStatement public Deprecated IRubyObject ReferenceType context ReferenceType args MemberReference SwitchStatementCase SwitchStatementCase SwitchStatementCase ThreadContext IRubyObject args length Literal ReturnStatement Literal ReturnStatement StatementExpression ReturnStatement 1 MethodInvocation 2 MethodInvocation MethodInvocation Literal MemberReference MemberReference rindex MemberReference MemberReference MemberReference rindex Arity MethodInvocation MemberReference Literal Literal raiseArgumentError null context ArraySelector args context ArraySelector args ArraySelector args context getRuntime args length 1 2 Literal Literal Literal 0 0 1	1
MethodDeclaration Modifier load FormalParameter FormalParameter IOException StatementExpression LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression public ReferenceType runtime BasicType wrap MethodInvocation ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation Ruby boolean RubyKernel MethodInvocation MethodInvocation MemberReference require RubyClass delegatorClass Cast RubyClass weakrefClass MethodInvocation weakrefClass ClassReference defineAnnotatedMethods runtime Literal MethodInvocation MethodInvocation defineClass runtime getKernel runtime Literal newString Block NULL_BLOCK ReferenceType MethodInvocation runtime Literal MemberReference MemberReference defineClass ReferenceType "RefError" runtime getStandardError runtime MethodInvocation getStandardError "delegate" RubyClass runtime Literal getClassFromPath "WeakRef" delegatorClass WEAKREF_ALLOCATOR WeakRef getAllocator "Delegator"	0
MethodDeclaration Modifier Annotation ReferenceType to_string ReturnStatement public JRubyMethod ElementValuePair RubyString MethodInvocation name ElementArrayValue MethodInvocation getRuntime Literal Literal MethodInvocation newString "to_s" "to_string" MethodInvocation accessibleObject toString	1
MethodDeclaration Modifier ReferenceType convert FormalParameter FormalParameter IfStatement ReturnStatement public IRubyObject ReferenceType runtime ReferenceType object BinaryOperation ReturnStatement MethodInvocation Ruby Object == MemberReference Literal MethodInvocation RubyString MemberReference Cast newString object null runtime getNil runtime ReferenceType MemberReference ByteList object	1
MethodDeclaration Modifier Annotation ReferenceType readLineBytes IOException LocalVariableDeclaration ForStatement ReturnStatement public Override ByteList BasicType VariableDeclarator ForControl BlockStatement ClassCreator int count Literal VariableDeclaration BinaryOperation Assignment StatementExpression ReferenceType MemberReference BinaryOperation MemberReference Literal 0 BasicType VariableDeclarator && BinaryOperation BinaryOperation MemberReference MethodInvocation = MemberReference ByteList bytes - BinaryOperation Literal count false int c MethodInvocation != MemberReference Literal != MemberReference MemberReference c read ++ count - MemberReference MemberReference 1 read c '\n' c RubyYaccLexer EOF index count	0
MethodDeclaration Modifier ReferenceType invoke FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement static public IRubyObject ReferenceType context ReferenceType self ReferenceType name ReferenceType arg ReferenceType callType ReferenceType block MethodInvocation ThreadContext IRubyObject String IRubyObject CallType Block self MethodInvocation getMetaClass MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference invoke context self name arg callType block	0
MethodDeclaration Modifier ReferenceType outline FormalParameter StatementExpression ForStatement StatementExpression StatementExpression LocalVariableDeclaration StatementExpression ReturnStatement public ChainedChildBodyCompiler ReferenceType methodName MethodInvocation ForControl BlockStatement Assignment MethodInvocation ReferenceType VariableDeclarator MethodInvocation MemberReference String method MemberReference aload VariableDeclaration BinaryOperation MemberReference StatementExpression MemberReference BinaryOperation = method MethodInvocation MemberReference MethodInvocation invokestatic ChainedChildBodyCompiler19 methodCompiler ClassCreator methodCompiler beginChainedMethod methodCompiler StandardASMCompiler THIS BasicType VariableDeclarator <= MemberReference Literal ++ i MethodInvocation methodName + BinaryOperation MethodInvocation script getClassname methodName getSignature ReferenceType MemberReference MemberReference MemberReference MemberReference This int i Literal i 4 method MemberReference aload + MemberReference Literal script getAndIncrementMethodIndex ChainedChildBodyCompiler19 script methodName inspector scope 1 i methodName "_"	0
MethodDeclaration Modifier ReferenceType case45_line467 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference ClassCreator = yyVal yyVal ReferenceType MethodInvocation MethodInvocation BreakNode Cast getPosition support Cast MethodInvocation ret_args ReferenceType MemberReference ReferenceType MemberReference Cast getPosition Token ArraySelector yyVals Node ArraySelector yyVals ReferenceType MemberReference BinaryOperation BinaryOperation Token ArraySelector yyVals + Literal MemberReference + Literal MemberReference BinaryOperation - 1 yyTop 0 yyTop + Literal MemberReference - 1 yyTop	1
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement StatementExpression ReturnStatement public IRubyObject ReferenceType ctx ReferenceType largs ReferenceType blk ReferenceType VariableDeclarator MethodInvocation ThrowStatement MemberReference MethodInvocation ThreadContext IRubyObject Block IRubyObject larg MethodInvocation larg MemberReference equals MemberReference ++ ArraySelector result runtime getNil MemberReference MemberReference checkArgs cond JumpException SPECIAL_JUMP Literal runtime largs 0	1
MethodDeclaration Modifier ReferenceType newString ReturnStatement public RubyString MethodInvocation RubyString This ClassCreator newString ReferenceType ByteList	0
MethodDeclaration Modifier test_to_s StatementExpression public MethodInvocation MethodInvocation assertTrue rubyObject MethodInvocation toString Literal startsWith "#<Object:0x"	1
MethodDeclaration Modifier ReferenceType execute FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression IfStatement public IRubyObject ReferenceType self ReferenceType args ReferenceType block ReferenceType VariableDeclarator ReferenceType VariableDeclarator BasicType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation BinaryOperation BlockStatement BlockStatement IRubyObject IRubyObject Block String name MemberReference DynamicMethod method MethodInvocation int v MethodInvocation IRubyObject newArgs ArrayCreator System MemberReference Literal MemberReference Literal MemberReference arraycopy || BinaryOperation BinaryOperation ReturnStatement LocalVariableDeclaration ReturnStatement ArraySelector MethodInvocation args self MethodInvocation getMetaClass method MethodInvocation getArity ReferenceType BinaryOperation args 1 newArgs 0 newArgs length < MemberReference Literal == MemberReference MemberReference MethodInvocation ReferenceType VariableDeclarator MethodInvocation Literal asJavaString MemberReference searchMethod getValue IRubyObject - MemberReference Literal v 0 v newArgs length RuntimeHelpers MethodInvocation MemberReference MemberReference MemberReference MemberReference invoke RubyClass superClass MethodInvocation RuntimeHelpers MethodInvocation MemberReference MemberReference MemberReference MemberReference MemberReference invokeAs 0 name args length 1 self MethodInvocation getRuntime self name newArgs block self MethodInvocation getMetaClass self MethodInvocation getRuntime superClass self name newArgs block getCurrentContext getSuperClass getCurrentContext	0
MethodDeclaration Modifier BasicType evaluateAtStart ReturnStatement public boolean MemberReference evaluateAtStart	0
MethodDeclaration Modifier BasicType D_ENCRYPT FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression ReturnStatement private static final int BasicType L BasicType R BasicType S BasicType E0 BasicType E1 BasicType s BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator Assignment Assignment Assignment Assignment Assignment Assignment Assignment MemberReference int int int int int int int t int u int v MemberReference BinaryOperation = MemberReference BinaryOperation = MemberReference BinaryOperation = MemberReference BinaryOperation = MemberReference BinaryOperation = MemberReference BinaryOperation = MemberReference BinaryOperation ^= L v ^ MemberReference BinaryOperation u & MemberReference MemberReference v & MemberReference MemberReference u ^ BinaryOperation MemberReference t ^ BinaryOperation MemberReference t | BinaryOperation BinaryOperation L | BinaryOperation MemberReference R >>> MemberReference Literal v E0 v E1 ^ BinaryOperation MemberReference ArraySelector s ^ BinaryOperation MemberReference ArraySelector s >>> MemberReference Literal << MemberReference Literal | BinaryOperation MemberReference ArraySelector ArraySelector SPtrans R 16 ^ MemberReference BinaryOperation R MemberReference ^ MemberReference BinaryOperation R BinaryOperation t 4 t 28 | BinaryOperation MemberReference ArraySelector ArraySelector SPtrans Literal BinaryOperation u << MemberReference Literal S v << MemberReference Literal + MemberReference Literal | BinaryOperation MemberReference ArraySelector ArraySelector SPtrans Literal BinaryOperation 6 & BinaryOperation Literal u 16 v 16 S 1 | BinaryOperation MemberReference ArraySelector ArraySelector SPtrans Literal BinaryOperation 4 & BinaryOperation Literal >>> MemberReference Literal 63 | BinaryOperation MemberReference ArraySelector ArraySelector SPtrans Literal BinaryOperation 2 & BinaryOperation Literal >>> MemberReference Literal 63 u 24 | MemberReference MemberReference ArraySelector ArraySelector SPtrans Literal BinaryOperation 0 & MemberReference Literal >>> MemberReference Literal 63 u 16 ArraySelector ArraySelector SPtrans ArraySelector ArraySelector SPtrans Literal BinaryOperation 7 & BinaryOperation Literal u 63 u 8 Literal BinaryOperation Literal BinaryOperation 5 & BinaryOperation Literal >>> MemberReference Literal 63 1 & MemberReference Literal 3 & BinaryOperation Literal >>> MemberReference Literal 63 t 24 t 63 >>> MemberReference Literal 63 t 16 t 8	1
MethodDeclaration Modifier ReferenceType handleMinusSpecialValues FormalParameter IfStatement IfStatement IfStatement IfStatement ReturnStatement private RubyBigDecimal ReferenceType val BinaryOperation BlockStatement BinaryOperation BlockStatement BinaryOperation BlockStatement BinaryOperation BlockStatement Literal RubyBigDecimal || MethodInvocation MethodInvocation ReturnStatement > BinaryOperation Literal ReturnStatement < BinaryOperation Literal ReturnStatement == BinaryOperation Literal IfStatement IfStatement LocalVariableDeclaration IfStatement null isNaN val isNaN MethodInvocation * MemberReference MemberReference 0 MethodInvocation * MemberReference MemberReference 0 This * MemberReference MemberReference 0 MethodInvocation BlockStatement MethodInvocation BlockStatement BasicType VariableDeclarator BinaryOperation BlockStatement MethodInvocation newNaN infinitySign val infinitySign MethodInvocation newNaN infinitySign val infinitySign infinitySign val infinitySign isInfinity ReturnStatement val isInfinity ReturnStatement int sign BinaryOperation != MemberReference Literal ReturnStatement getRuntime getRuntime This MethodInvocation + MemberReference MemberReference sign 0 MethodInvocation MethodInvocation BinaryOperation newInfinity infinitySign val infinitySign MethodInvocation MemberReference newInfinity getRuntime * MemberReference Literal getRuntime sign val infinitySign - 1	1
MethodDeclaration Modifier ReferenceType case450_line1719 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference ClassCreator = yyVal yyVal ReferenceType Literal MemberReference Cast Token "self" Tokens kSELF ReferenceType MemberReference Token ArraySelector yyVals BinaryOperation + Literal MemberReference 0 yyTop	1
MethodDeclaration Modifier BasicType needsInvocationSession ReturnStatement public boolean Literal false	0
MethodDeclaration Modifier Annotation ReferenceType initialize19 FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration StatementExpression ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType fileNumber ReferenceType modeValue ReferenceType options ReferenceType unusedBlock BasicType VariableDeclarator ReferenceType VariableDeclarator Assignment MethodInvocation name Literal frame Literal visibility MemberReference compat MemberReference ThreadContext IRubyObject IRubyObject IRubyObject Block int fileno MethodInvocation ModeFlags modes MethodInvocation MemberReference MethodInvocation = MemberReference MemberReference initializeCommon19 "initialize" true Visibility PRIVATE CompatVersion RUBY1_9 RubyNumeric MemberReference fix2int MemberReference MemberReference parseModes19 modes MemberReference MemberReference MemberReference parseOptions fileno modes fileNumber context modeValue context options modes	1
MethodDeclaration Modifier Annotation addUsedVariables FormalParameter StatementExpression public Override ReferenceType l MethodInvocation List TypeArgument _refName MemberReference addUsedVariables ReferenceType l Variable	0
MethodDeclaration Modifier Annotation ReferenceType getSingletonMethod FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration SynchronizedStatement public Deprecated Callback ReferenceType method ReferenceType arg1 ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation LocalVariableDeclaration TryStatement String Class String mname BinaryOperation String mnamePath BinaryOperation runtime getJRubyClassLoader ReferenceType VariableDeclarator LocalVariableDeclaration IfStatement LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression ReturnStatement CatchClause CatchClause + BinaryOperation Literal + BinaryOperation Literal Class c MethodInvocation ReferenceType VariableDeclarator BinaryOperation BlockStatement ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MemberReference CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement + BinaryOperation MemberReference "_S1" + BinaryOperation MemberReference "_S1" MemberReference tryClass Class descriptor ArrayCreator == MemberReference Literal LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression InvocationCallback ic Cast ic MethodInvocation setArity ic MemberReference setArgumentTypes ic MemberReference setJavaName ic Literal setSingleton ic IllegalArgumentException e MemberReference Exception e ClassCreator + MethodInvocation Literal method + MemberReference Literal method mname ReferenceType ArrayInitializer c null ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation Assignment ReferenceType MethodInvocation Arity singleArgument descriptor method true e ReferenceType MethodInvocation type getName "Callback$" typePath "Callback$" Class MemberReference Class signature ArrayCreator Class ret MethodInvocation ClassWriter cw MethodInvocation MethodVisitor mv MethodInvocation MemberReference MemberReference Literal MemberReference loadArguments mv MemberReference Literal visitVarInsn mv MemberReference MemberReference MemberReference MethodInvocation visitMethodInsn mv MemberReference visitInsn mv Literal Literal visitMaxs MemberReference MethodInvocation = InvocationCallback c newInstance IllegalArgumentException e getMessage arg1 ReferenceType ArrayInitializer MemberReference MemberReference getReturnClass MemberReference createCtor MemberReference startCallS mv METHOD_ARGS_INDEX 1 descriptor ALOAD 3 INVOKESTATIC typePath method MemberReference MemberReference sig ARETURN 3 3 c MemberReference MemberReference MemberReference endCall Class MemberReference MemberReference ClassReference method signature mnamePath cw ret signature cw mv mname RubyKernel IRUBY_OBJECT arg1 ReferenceType Block	1
MethodDeclaration Modifier ReferenceType getBlockCallback7 FormalParameter FormalParameter ReturnStatement final public CompiledBlockCallback ReferenceType runtime ReferenceType method MethodInvocation Ruby String runtimeCache This MemberReference Literal MemberReference getBlockCallback runtime 7 method	0
MethodDeclaration Modifier processArguments WhileStatement IfStatement IfStatement public BinaryOperation BlockStatement BinaryOperation BlockStatement MemberReference StatementExpression && BinaryOperation MethodInvocation StatementExpression StatementExpression && MemberReference BinaryOperation IfStatement processArgv MethodInvocation < MemberReference MemberReference MemberReference isInterpreterArgument MethodInvocation MemberReference ! hasInlineScript == MemberReference Literal BinaryOperation BlockStatement processArgv argumentIndex arguments length ArraySelector arguments processArgument ++ argumentIndex scriptFileName null < MemberReference MemberReference StatementExpression StatementExpression MemberReference argumentIndex arguments length MethodInvocation MemberReference argumentIndex MemberReference setScriptFileName ++ argumentIndex ArraySelector arguments MemberReference argumentIndex	1
MethodDeclaration Modifier Annotation ReferenceType id2ref FormalParameter FormalParameter LocalVariableDeclaration IfStatement LocalVariableDeclaration LocalVariableDeclaration IfStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType recv ReferenceType id ReferenceType VariableDeclarator BinaryOperation BlockStatement ReferenceType VariableDeclarator BasicType VariableDeclarator BinaryOperation BlockStatement IfStatement name Literal required Literal module Literal visibility MemberReference IRubyObject IRubyObject Ruby runtime MethodInvocation instanceof MemberReference ReferenceType ThrowStatement RubyFixnum idFixnum Cast long longId MethodInvocation == MemberReference Literal ReturnStatement BinaryOperation BlockStatement IfStatement "_id2ref" 1 true Visibility PRIVATE id getRuntime id RubyFixnum MethodInvocation ReferenceType MemberReference idFixnum getLongValue longId 0 MethodInvocation == MemberReference Literal ReturnStatement BinaryOperation BlockStatement IfStatement recv MethodInvocation getRuntime RubyFixnum id runtime getFalse longId 2 MethodInvocation == MemberReference Literal ReturnStatement BinaryOperation BlockStatement BlockStatement MemberReference MethodInvocation newTypeError runtime getTrue longId 4 MethodInvocation != BinaryOperation Literal ReturnStatement LocalVariableDeclaration IfStatement ReturnStatement id recv MethodInvocation getRuntime runtime getNil % MemberReference Literal 0 MethodInvocation ReferenceType VariableDeclarator BinaryOperation BlockStatement MemberReference getFixnum longId 2 runtime BinaryOperation newFixnum IRubyObject object MethodInvocation == MemberReference Literal ReturnStatement object / BinaryOperation Literal runtime MethodInvocation getObjectSpace object null MethodInvocation - MemberReference Literal 2 MemberReference id2ref runtime getNil longId 1 longId	0
MethodDeclaration Modifier Annotation ReferenceType hash ReturnStatement public JRubyMethod ElementValuePair RubyFixnum MethodInvocation name Literal MethodInvocation getRuntime "hash" MethodInvocation newFixnum value hashCode	0
MethodDeclaration Modifier Annotation ReferenceType open FormalParameter FormalParameter FormalParameter FormalParameter IOException LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject Modifier ReferenceType context ReferenceType recv ReferenceType filename ReferenceType block ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation name Literal required Literal frame Literal meta Literal final ThreadContext IRubyObject IRubyObject Block Ruby runtime MethodInvocation IRubyObject io MethodInvocation RubyGzipReader gzio MethodInvocation RubyGzipFile MemberReference MemberReference MemberReference wrapBlock "open" 1 true true recv getRuntime RuntimeHelpers MemberReference MethodInvocation Literal MemberReference MethodInvocation invoke MemberReference ArrayCreator MemberReference newInstance context gzio block context runtime getFile "open" filename runtime Literal newString recv ReferenceType ArrayInitializer block "rb" IRubyObject MemberReference io	0
MethodDeclaration Modifier BasicType isSubsetOf FormalParameter IfStatement ReturnStatement public boolean ReferenceType superset BinaryOperation BlockStatement Literal ModeFlags || BinaryOperation BinaryOperation ReturnStatement true || BinaryOperation BinaryOperation && MethodInvocation MethodInvocation Literal && MethodInvocation MethodInvocation && MethodInvocation MethodInvocation ! superset isAppendable isAppendable false ! superset isReadable isReadable ! superset isWritable isWritable	1
MethodDeclaration Modifier Annotation ReferenceType select FormalParameter FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType args MethodInvocation name Literal required Literal optional Literal module Literal visibility MemberReference ThreadContext IRubyObject IRubyObject RubyIO MemberReference MethodInvocation MemberReference select_static "select" 1 3 true PRIVATE context context getRuntime args	0
MethodDeclaration Modifier dumpClass FormalParameter LocalVariableDeclaration TryStatement public ReferenceType out ReferenceType VariableDeclarator LocalVariableDeclaration StatementExpression StatementExpression PrintStream PrintWriter pw ClassCreator ReferenceType VariableDeclarator ClassCreator MethodInvocation ReferenceType MemberReference TraceClassVisitor tcv ClassCreator MethodInvocation ReferenceType MethodInvocation pw close PrintWriter out ReferenceType MemberReference MemberReference Literal accept ClassReader classWriter toByteArray TraceClassVisitor pw tcv 0	0
MethodDeclaration Modifier Annotation ReferenceType garbage_collect FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType recv MethodInvocation name Literal module Literal visibility MemberReference IRubyObject RubyGC MemberReference start "garbage_collect" true Visibility PRIVATE recv	1
MethodDeclaration Modifier dreturn StatementExpression public MethodInvocation MethodInvocation getMethodVisitor MemberReference visitInsn DRETURN	0
MethodDeclaration Modifier ReferenceType getParameterTypes ReturnStatement public Class TypeArgument MemberReference ? parameterTypes	0
MethodDeclaration Modifier branch FormalParameter StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression public ReferenceType context MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation Modifier ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation BodyCompiler MethodInvocation MemberReference Literal compile context duplicateCurrentValue context metaclass context duplicateCurrentValue context MethodInvocation getVisibilityFor context duplicateCurrentValue final Object isfalse MethodInvocation Object isreal MethodInvocation Object ending MethodInvocation context MemberReference Literal isPrivate context MemberReference Literal isNotProtected context MemberReference selfIsKindOf context consumeCurrentValue context MemberReference go context MemberReference setEnding context MethodInvocation ClassCreator ClassCreator isMethodBound context MemberReference go context MemberReference setEnding context pushNull context MemberReference setEnding iVisited getReceiverNode context true iVisited getName context getNewEnding context getNewEnding context getNewEnding isfalse 3 isreal 1 isreal isfalse isreal iVisited getName ReferenceType MethodDeclaration ReferenceType MethodDeclaration ending isfalse ending BranchCallback Modifier branch FormalParameter StatementExpression BranchCallback Modifier branch FormalParameter StatementExpression public ReferenceType context MethodInvocation public ReferenceType context MethodInvocation BodyCompiler MethodInvocation MemberReference Literal compileGetArgumentDefinition BodyCompiler context MemberReference go iVisited getArgsNode context "method" isfalse	0
MethodDeclaration Modifier ReferenceType rejectCommon FormalParameter FormalParameter LocalVariableDeclaration StatementExpression ReturnStatement public IRubyObject ReferenceType context ReferenceType block ReferenceType VariableDeclarator MethodInvocation MemberReference ThreadContext Block RubyArray ary MethodInvocation ary MemberReference MemberReference reject_bang ary aryDup context block	0
MethodDeclaration Modifier Annotation ReferenceType getArgs ReturnStatement public Deprecated ListNode MemberReference pre	1
MethodDeclaration Modifier Annotation ReferenceType encode_bang FormalParameter FormalParameter StatementExpression LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType enc MethodInvocation ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator Assignment This name Literal compat MemberReference ThreadContext IRubyObject modify19 Charset from TernaryExpression Encoding encoding MethodInvocation Charset to TernaryExpression ByteBuffer fromBytes MethodInvocation ByteBuffer toBytes MethodInvocation MemberReference ClassCreator = "encode!" CompatVersion RUBY1_9 MethodInvocation MethodInvocation MethodInvocation RubyEncoding MethodInvocation MemberReference getEncodingFromObject MethodInvocation MethodInvocation MethodInvocation ByteBuffer MethodInvocation MethodInvocation MethodInvocation wrap to MethodInvocation encode value ReferenceType MethodInvocation MemberReference value.encoding MethodInvocation toString Charset Literal forName Charset MethodInvocation forName context getRuntime enc encoding MethodInvocation toString Charset Literal forName Charset MethodInvocation forName value unsafeBytes value begin value length from MemberReference decode ByteList toBytes array encoding Literal startsWith "ASCII" value.encoding toString Literal startsWith "ASCII" encoding toString fromBytes "ASCII" "ASCII"	1
MethodDeclaration Modifier ReferenceType getPointer FormalParameter FormalParameter ReturnStatement protected Pointer ReferenceType runtime BasicType offset ClassCreator Ruby long ReferenceType MemberReference MethodInvocation MethodInvocation MemberReference Pointer runtime MemberReference getPointerClass MethodInvocation getMemoryIO Long MAX_VALUE runtime MemberReference getMemoryIO offset	0
MethodDeclaration Modifier BasicType getVariableTableSize ReturnStatement public int MethodInvocation variableAccessors size	0
MethodDeclaration Modifier unregisterParserStats IfStatement public MemberReference StatementExpression managementEnabled MethodInvocation BinaryOperation unregister + MemberReference Literal base "service=ParserStats"	1
MethodDeclaration Modifier testErrorLineNumber Exception LocalVariableDeclaration TryStatement public ReferenceType VariableDeclarator StatementExpression StatementExpression CatchClause String script BinaryOperation MethodInvocation MethodInvocation CatchClauseParameter StatementExpression + Literal Literal MemberReference eval Literal fail RaiseException re MethodInvocation "String.new 'a \n" "p 'b'\n" script "should have raised an exception" BinaryOperation assertTrue != MethodInvocation Literal re MethodInvocation toString - 1 Literal indexOf "test:2"	0
MethodDeclaration Modifier ReferenceType justify19 FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement ReturnStatement private IRubyObject ReferenceType arg0 BasicType jflag ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation StatementExpression MemberReference IRubyObject int Ruby runtime MethodInvocation RubyString result MethodInvocation != MethodInvocation MemberReference MethodInvocation result getRuntime MemberReference MemberReference Literal Literal MemberReference MethodInvocation MemberReference justifyCommon getCodeRange CR_BROKEN result MethodInvocation setCodeRange runtime SPACE_BYTELIST 1 true value encoding RubyFixnum MemberReference num2int jflag getCodeRange arg0	1
MethodDeclaration Modifier ReferenceType engineeringValue FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression IfStatement StatementExpression ReturnStatement private IRubyObject ReferenceType arg BasicType VariableDeclarator BasicType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation BinaryOperation BlockStatement BlockStatement MethodInvocation MethodInvocation String int exponent MethodInvocation int signum MethodInvocation StringBuilder build ClassCreator build TernaryExpression append build Literal append == Literal MethodInvocation LocalVariableDeclaration IfStatement LocalVariableDeclaration LocalVariableDeclaration WhileStatement build MethodInvocation Literal append MethodInvocation getRuntime getExponent value signum ReferenceType BinaryOperation Literal TernaryExpression "0." 0 MemberReference groups ReferenceType VariableDeclarator Literal BlockStatement BlockStatement BasicType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement MemberReference append "E" MethodInvocation newString StringBuilder == MemberReference Literal "-" BinaryOperation TernaryExpression Literal arg String s MethodInvocation MethodInvocation "" StatementExpression StatementExpression int index Literal String sep Literal < MemberReference MethodInvocation LocalVariableDeclaration IfStatement StatementExpression StatementExpression StatementExpression exponent build toString signum - 1 == MemberReference Literal MethodInvocation TernaryExpression Literal "" MethodInvocation removeTrailingZeroes MemberReference equals MethodInvocation MethodInvocation 0 "" index MethodInvocation unscaledValue BasicType VariableDeclarator BinaryOperation BlockStatement MethodInvocation Assignment Assignment signum 1 MemberReference posSign MethodInvocation Literal Literal "" unscaledValue s build Literal append build MemberReference append length int next BinaryOperation > MemberReference MethodInvocation StatementExpression build MethodInvocation MemberReference append MemberReference Literal = MemberReference MethodInvocation += arg MemberReference posSpace " " "+" "0" s + MemberReference MethodInvocation next MethodInvocation unscaledValue Assignment MethodInvocation append sep sep " " index MemberReference groups arg index MemberReference groups length MemberReference MethodInvocation = MethodInvocation unscaledValue arg arg next MethodInvocation unscaledValue MemberReference MemberReference substring length index next	1
MethodDeclaration Modifier marshal FormalParameter FormalParameter FormalParameter StatementExpression final public ReferenceType invocation ReferenceType buffer ReferenceType parameter MethodInvocation Invocation InvocationBuffer IRubyObject MethodInvocation MemberReference MemberReference marshal invocation getThreadContext buffer parameter	1
MethodDeclaration Modifier emit FormalParameter SwitchStatement public ReferenceType instr MemberReference SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase IR_Instr instr _op BEQ StatementExpression BreakStatement CALL StatementExpression BreakStatement COPY StatementExpression BreakStatement DEF_INST_METH StatementExpression BreakStatement JUMP StatementExpression BreakStatement LABEL StatementExpression BreakStatement PUT_FIELD StatementExpression BreakStatement GET_FIELD StatementExpression BreakStatement RECV_ARG StatementExpression BreakStatement RETURN StatementExpression BreakStatement StatementExpression MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation Cast emitBEQ Cast emitCALL Cast emitCOPY Cast emitDEF_INST_METH Cast emitJUMP Cast emitLABEL Cast emitPUT_FIELD Cast emitGET_FIELD Cast emitRECV_ARG Cast emitRETURN System.err BinaryOperation println ReferenceType MemberReference ReferenceType MemberReference ReferenceType MemberReference ReferenceType MemberReference ReferenceType MemberReference ReferenceType MemberReference ReferenceType MemberReference ReferenceType MemberReference ReferenceType MemberReference ReferenceType MemberReference + Literal MemberReference BEQ_Instr instr CALL_Instr instr COPY_Instr instr DEFINE_INSTANCE_METHOD_Instr instr JUMP_Instr instr LABEL_Instr instr PUT_FIELD_Instr instr GET_FIELD_Instr instr RECV_ARG_Instr instr RETURN_Instr instr "unsupported: " instr _op	1
MethodDeclaration Modifier ReferenceType findImplementer FormalParameter ForStatement ReturnStatement public RubyModule ReferenceType clazz ForControl BlockStatement Literal RubyModule VariableDeclaration BinaryOperation Assignment IfStatement null ReferenceType VariableDeclarator != MemberReference Literal MemberReference MethodInvocation = MethodInvocation ReturnStatement RubyModule module This module null module module getSuperClass module MemberReference isSame MemberReference clazz module	1
MethodDeclaration Modifier Annotation ReferenceType op_divmod FormalParameter FormalParameter LocalVariableDeclaration ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context ReferenceType other ReferenceType VariableDeclarator MethodInvocation name Literal ThreadContext IRubyObject IRubyObject val MethodInvocation context MethodInvocation getRuntime "divmod" MemberReference MethodInvocation f_floor MemberReference MethodInvocation newArray context MemberReference This MemberReference f_div val MemberReference This MethodInvocation f_sub context other context MemberReference MemberReference MemberReference f_mul context other val	1
MethodDeclaration Modifier setIndex FormalParameter StatementExpression public BasicType value Assignment int MemberReference MemberReference = index value	0
MethodDeclaration Modifier Annotation ReferenceType toString ReturnStatement final public Override String MethodInvocation nativeType name	1
MethodDeclaration Modifier Annotation ReferenceType sync FormalParameter ReturnStatement public JRubyMethod ElementValuePair RubyBoolean ReferenceType context MethodInvocation name Literal ThreadContext context MethodInvocation getRuntime "sync" MethodInvocation newBoolean MethodInvocation MethodInvocation getOpenFileChecked getMainStream isSync	0
MethodDeclaration Modifier ReferenceType case340_line1289 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support MethodInvocation Cast Cast Cast Cast Cast new_args Cast getPosition ReferenceType MemberReference ReferenceType MemberReference ReferenceType MemberReference ReferenceType MemberReference ReferenceType MemberReference ReferenceType MemberReference ListNode ArraySelector yyVals ListNode ArraySelector yyVals RestArgNode ArraySelector yyVals ListNode ArraySelector yyVals BlockArgNode ArraySelector yyVals ListNode ArraySelector yyVals BinaryOperation BinaryOperation BinaryOperation BinaryOperation BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference + Literal MemberReference + Literal MemberReference + Literal MemberReference + Literal MemberReference - 7 yyTop - 5 yyTop - 3 yyTop - 1 yyTop 0 yyTop - 7 yyTop	1
MethodDeclaration Modifier BasicType notVisibleAndNotMethodMissing FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public boolean ReferenceType method ReferenceType name ReferenceType caller ReferenceType callType BinaryOperation DynamicMethod String IRubyObject CallType && MethodInvocation MethodInvocation ! method MemberReference MemberReference isCallableFrom ! name Literal equals caller callType "method_missing"	1
MethodDeclaration Modifier Annotation ReferenceType pid FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv MethodInvocation name Literal module Literal visibility MemberReference ThreadContext IRubyObject MethodInvocation pid "pid" true Visibility PRIVATE context getRuntime	0
MethodDeclaration Modifier ReferenceType newData FormalParameter FormalParameter ReturnStatement public RubyObject ReferenceType ReferenceType objectClass ReferenceType sval ClassCreator Data RubyClass Object ReferenceType This MemberReference MemberReference RubyObject ReferenceType objectClass sval Data	0
MethodDeclaration Modifier testBitLengths StatementExpression public MethodInvocation Literal BinaryOperation assertTrue "Not 32 or 64-bit platform?" ^ MemberReference MemberReference Platform IS_32_BIT Platform IS_64_BIT	0
MethodDeclaration Modifier ReferenceType getValue LocalVariableDeclaration ReturnStatement public IRubyObject ReferenceType VariableDeclarator TernaryExpression IRubyObject result MethodInvocation BinaryOperation MethodInvocation MemberReference JavaUtil MemberReference MemberReference MemberReference convertJavaToRuby instanceof MemberReference ReferenceType Java MemberReference MemberReference wrap result runtime bean bean bean type result JavaObject runtime result	0
MethodDeclaration Modifier Annotation ReferenceType s_hexdigest FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration TryStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType recv ReferenceType str ReferenceType VariableDeclarator ReferenceType VariableDeclarator LocalVariableDeclaration ReturnStatement CatchClause name Literal required Literal meta Literal IRubyObject IRubyObject Ruby runtime MethodInvocation String name Cast ReferenceType VariableDeclarator MethodInvocation CatchClauseParameter ThrowStatement "hexdigest" 1 true recv getRuntime ReferenceType MemberReference MessageDigest md MethodInvocation RubyString MemberReference MethodInvocation newStringNoCopy NoSuchAlgorithmException e MethodInvocation RubyClass recv MemberReference MemberReference createMessageDigest runtime ByteList MethodInvocation plain recv MethodInvocation getRuntime runtime name MethodInvocation toHex BinaryOperation newNotImplementedError md MethodInvocation digest + BinaryOperation Literal str MethodInvocation convertToString + Literal MemberReference ")" getBytes "Unsupported digest algorithm (" name	1
MethodDeclaration Modifier BasicType nextInt32 IfStatement LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression ReturnStatement public int BinaryOperation StatementExpression BasicType VariableDeclarator Assignment Assignment Assignment Assignment MemberReference == MemberReference Literal MethodInvocation int y MemberReference MemberReference BinaryOperation ^= MemberReference BinaryOperation ^= MemberReference BinaryOperation ^= MemberReference BinaryOperation ^= y -- left 0 nextState ArraySelector state y >>> MemberReference Literal y & BinaryOperation Literal y & BinaryOperation Literal y >>> MemberReference Literal MemberReference y 11 << MemberReference Literal 0x9d2c5680L << MemberReference Literal 0xefc60000L y 18 ++ next y 7 y 15	1
MethodDeclaration Modifier BasicType percent FormalParameter IOException IfStatement LocalVariableDeclaration IfStatement IfStatement StatementExpression StatementExpression StatementExpression ReturnStatement private int BasicType spaceSeen MethodInvocation ReturnStatement BasicType VariableDeclarator BinaryOperation BlockStatement BinaryOperation ReturnStatement MethodInvocation MethodInvocation Assignment MemberReference boolean isBEG MethodInvocation int c MethodInvocation == MemberReference Literal StatementExpression StatementExpression ReturnStatement && BinaryOperation MethodInvocation MethodInvocation determineExpressionState src MemberReference unread MemberReference ClassCreator = Tokens tPERCENT MethodInvocation parseQuote src read c '=' Assignment Assignment MemberReference && MethodInvocation MemberReference ! Character MemberReference isWhitespace MemberReference parseQuote c yaccValue ReferenceType Literal MethodInvocation src read MemberReference MemberReference = MemberReference ClassCreator = Tokens tOP_ASGN isARG spaceSeen c c Token "%" getPosition lex_state LexState EXPR_BEG yaccValue ReferenceType Literal MethodInvocation Token "%" getPosition	1
MethodDeclaration Modifier putLong FormalParameter FormalParameter StatementExpression StatementExpression final public BasicType offset BasicType value MethodInvocation MethodInvocation long long MemberReference Literal checkBounds IO BinaryOperation MemberReference putLong offset 8 + MemberReference MemberReference value address offset	0
MethodDeclaration Modifier putLong FormalParameter FormalParameter ThrowStatement final public BasicType offset BasicType value MethodInvocation long long ex	0
MethodDeclaration Modifier ReferenceType findModClass FormalParameter ClassNotFoundException LocalVariableDeclaration StatementExpression ReturnStatement protected Class ReferenceType name BasicType VariableDeclarator MethodInvocation MethodInvocation String byte classBytes MethodInvocation MemberReference Literal Literal replace MemberReference MemberReference Literal MemberReference defineClass MemberReference loadClassBytes classBytes "Original" "ABCDEFGH" name classBytes 0 classBytes length name	0
MethodDeclaration Modifier Annotation ReferenceType quo_19 FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType other MethodInvocation name Literal compat MemberReference ThreadContext IRubyObject RubyRational MethodInvocation MethodInvocation This newRationalRaw "quo" CompatVersion RUBY1_9 MemberReference Literal MemberReference callMethod context getRuntime context "/" other	1
MethodDeclaration Modifier Annotation ReferenceType rjust19 FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType arg0 MethodInvocation name Literal compat MemberReference IRubyObject MemberReference Literal justify19 "rjust" CompatVersion RUBY1_9 arg0 'r'	0
MethodDeclaration Modifier ReferenceType inspect LocalVariableDeclaration StatementExpression LocalVariableDeclaration ForStatement StatementExpression ReturnStatement public IRubyObject ReferenceType VariableDeclarator MethodInvocation ReferenceType VariableDeclarator ForControl BlockStatement MethodInvocation MethodInvocation StringBuilder result ClassCreator result MethodInvocation append Class TypeArgument parameterTypes MethodInvocation VariableDeclaration BinaryOperation MemberReference StatementExpression IfStatement result Literal append MethodInvocation getRuntime ReferenceType nameOnInspection ? getParameterTypes BasicType VariableDeclarator < MemberReference MemberReference ++ i MethodInvocation BinaryOperation BlockStatement ")>" MethodInvocation newString StringBuilder int i Literal i parameterTypes length result MemberReference append < MemberReference BinaryOperation StatementExpression result toString 0 ArraySelector MethodInvocation parameterTypes i - MemberReference Literal MethodInvocation MemberReference getName parameterTypes length 1 result Literal append i ','	0
MethodDeclaration Modifier Annotation ReferenceType ljust19 FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType arg0 ReferenceType arg1 MethodInvocation name Literal compat MemberReference IRubyObject IRubyObject MemberReference MemberReference Literal justify19 "ljust" CompatVersion RUBY1_9 arg0 arg1 'l'	0
MethodDeclaration Modifier Annotation ReferenceType op_rshift FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context ReferenceType other MethodInvocation name Literal ThreadContext IRubyObject MethodInvocation MemberReference op_rshift ">>" context getRuntime other	1
MethodDeclaration Modifier ReferenceType findAliasEntry FormalParameter ReturnStatement public Entry ReferenceType bytes MethodInvocation ByteList aliases MemberReference MemberReference BinaryOperation get bytes bytes bytes begin + MemberReference MemberReference bytes begin bytes realSize	0
MethodDeclaration Modifier compileDot FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement IfStatement public ReferenceType node ReferenceType context BasicType expr Modifier ReferenceType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator MemberReference BlockStatement MemberReference StatementExpression Node BodyCompiler boolean final DotNode dotNode Cast boolean doit BinaryOperation boolean popit BinaryOperation doit LocalVariableDeclaration StatementExpression popit MethodInvocation ReferenceType MemberReference || MemberReference MemberReference && MemberReference MemberReference ReferenceType VariableDeclarator MethodInvocation context consumeCurrentValue DotNode node expr ! RubyInstanceConfig PEEPHOLE_OPTZ ! RubyInstanceConfig PEEPHOLE_OPTZ ! expr CompilerCallback beginEndCallback ClassCreator context MemberReference MethodInvocation createNewRange ReferenceType MethodDeclaration beginEndCallback dotNode isExclusive CompilerCallback Modifier call FormalParameter StatementExpression StatementExpression public ReferenceType context MethodInvocation MethodInvocation BodyCompiler MethodInvocation MemberReference Literal compile MethodInvocation MemberReference Literal compile dotNode getBeginNode context true dotNode getEndNode context true	1
MethodDeclaration Modifier setResult FormalParameter StatementExpression public ReferenceType result Assignment RubyParserResult This MemberReference = MemberReference result result	0
MethodDeclaration Modifier Annotation ReferenceType getpwnam FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration TryStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType recv ReferenceType name ReferenceType VariableDeclarator ReferenceType VariableDeclarator LocalVariableDeclaration IfStatement ReturnStatement CatchClause name Literal required Literal module Literal IRubyObject IRubyObject Ruby runtime MethodInvocation String nam MethodInvocation ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation CatchClauseParameter IfStatement ReturnStatement "getpwnam" 1 true recv getRuntime name MethodInvocation convertToString Passwd pwd MethodInvocation == MemberReference Literal IfStatement ThrowStatement MethodInvocation MemberReference setupPasswd Exception e MethodInvocation BlockStatement MethodInvocation toString runtime MethodInvocation getPosix pwd null MemberReference BlockStatement MethodInvocation recv getRuntime pwd runtime MethodInvocation getDebug StatementExpression runtime getNil MemberReference getpwnam Platform IS_WINDOWS ReturnStatement runtime BinaryOperation newArgumentError isTrue MethodInvocation nam MethodInvocation + Literal MemberReference runtime MethodInvocation getWarnings runtime getNil "can't find user for " nam MemberReference Literal MemberReference warn ID NOT_IMPLEMENTED "Etc.getpwnam is not supported by JRuby on this platform" e	0
