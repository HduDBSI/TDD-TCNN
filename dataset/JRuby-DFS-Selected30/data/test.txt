MethodDeclaration Modifier public BasicType boolean ReturnStatement MethodInvocation MemberReference CLOSURE getFlag	0
MethodDeclaration Modifier public ReferenceType Object case399_line1516 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType ClassVarNode Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals Cast ReferenceType String Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier protected ReferenceType DynamicMethod FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType String methodName ReturnStatement MethodInvocation runtimeCache MemberReference context MemberReference self Literal 8 MemberReference methodName getMethod	0
MethodDeclaration Modifier public static Annotation Deprecated ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject arg ReturnStatement MethodInvocation MethodInvocation recv getRuntime MemberReference arg	1
MethodDeclaration Modifier public FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block block StatementExpression MethodInvocation MemberReference clazz StatementExpression MethodInvocation MemberReference clazz MemberReference name MemberReference self MemberReference block	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MethodInvocation ruby MethodInvocation getInstanceConfig MethodInvocation get	0
MethodDeclaration Modifier public static FormalParameter ReferenceType FormalParameter ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType Object fields ForStatement EnhancedForControl VariableDeclaration ReferenceType Map ReferenceType Entry TypeArgument ReferenceType String TypeArgument ReferenceType Object VariableDeclarator fieldEntry MethodInvocation fields entrySet BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator value MethodInvocation fieldEntry getValue IfStatement MethodInvocation value MethodInvocation isArray getClass BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator values Cast ReferenceType Object MemberReference value LocalVariableDeclaration ReferenceType VariableDeclarator arrayV MethodInvocation MethodInvocation fieldEntry getKey ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference values length MemberReference ++ i BlockStatement StatementExpression MethodInvocation arrayV Literal null MemberReference ArraySelector MemberReference i values visit StatementExpression MethodInvocation arrayV visitEnd IfStatement MethodInvocation value MethodInvocation getClass BlockStatement StatementExpression MethodInvocation MethodInvocation fieldEntry getKey MethodInvocation MethodInvocation value getClass ci MethodInvocation value toString IfStatement BinaryOperation instanceof MemberReference value ReferenceType Class BlockStatement StatementExpression MethodInvocation MethodInvocation fieldEntry getKey MethodInvocation Type Cast ReferenceType Class MemberReference value getType visit BlockStatement StatementExpression MethodInvocation MethodInvocation fieldEntry getKey MemberReference value visit	1
MethodDeclaration Modifier public ReferenceType parse FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType String script FormalParameter ReferenceType String filename FormalParameter BasicType int lineNumber ReturnStatement ClassCreator ReferenceType MemberReference runtime MethodInvocation runtime MemberReference script MemberReference filename Literal null MemberReference lineNumber parseEval	0
MethodDeclaration Modifier static FormalParameter ReferenceType Ruby runtime FormalParameter BasicType int strategy SwitchStatement MemberReference strategy SwitchStatementCase MemberReference MemberReference MemberReference BreakStatement SwitchStatementCase LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator errorClass MethodInvocation runtime MethodInvocation Literal fastGetClass Literal "Zlib" fastGetModule ThrowStatement ClassCreator ReferenceType RaiseException MethodInvocation RubyException MemberReference runtime MemberReference errorClass Literal "stream error: invalid newException Literal true	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator receiver MethodInvocation MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference getReceiverNode LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator args Cast ReferenceType ArrayNode MethodInvocation getArgsNode LocalVariableDeclaration ReferenceType Block VariableDeclarator block MethodInvocation RuntimeHelpers MemberReference runtime MemberReference context MemberReference self MemberReference MemberReference getBlock ReturnStatement MethodInvocation callAdapter MemberReference context MemberReference self MemberReference receiver MemberReference args MemberReference block call	0
MethodDeclaration Modifier public FormalParameter ReferenceType IRubyObject obj FormalParameter ReferenceType RubyClass type IOException StatementExpression MethodInvocation MemberReference write IfStatement BinaryOperation == MethodInvocation type MethodInvocation Literal 0 charAt getName Literal '#' BlockStatement ThrowStatement MethodInvocation obj MethodInvocation BinaryOperation + Literal "can't dump class " MethodInvocation type getName newTypeError getRuntime StatementExpression MethodInvocation MethodInvocation runtime MethodInvocation type getName	0
MethodDeclaration Modifier public ReferenceType Operand FormalParameter ReferenceType Node node FormalParameter ReferenceType IR_Scope s LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Operand VariableDeclarator strPieces ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Operand ForStatement EnhancedForControl VariableDeclaration ReferenceType Node VariableDeclarator n MethodInvocation node childNodes StatementExpression MethodInvocation strPieces MethodInvocation MemberReference n MemberReference s build add ReturnStatement ClassCreator ReferenceType ClassCreator ReferenceType MemberReference strPieces	1
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block ReturnStatement MethodInvocation RuntimeHelpers MemberReference context MemberReference self Literal MemberReference args MemberReference block invoke	1
MethodDeclaration Modifier private static BasicType long FormalParameter ReferenceType Encoding enc FormalParameter BasicType byte bytes FormalParameter BasicType int p FormalParameter BasicType int end LocalVariableDeclaration BasicType int VariableDeclarator cr Literal 0 VariableDeclarator c Literal 0 WhileStatement BinaryOperation < MemberReference p MemberReference end BlockStatement IfStatement MethodInvocation Encoding MemberReference ArraySelector MemberReference p bytes isAscii BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator q MethodInvocation MemberReference bytes MemberReference p MemberReference end searchNonAscii IfStatement BinaryOperation == MemberReference q Literal - 1 ReturnStatement MethodInvocation BinaryOperation + MemberReference c BinaryOperation - MemberReference end MemberReference p TernaryExpression BinaryOperation == MemberReference cr Literal 0 MemberReference CR_7BIT MemberReference cr pack StatementExpression Assignment MemberReference c BinaryOperation - MemberReference q MemberReference p += StatementExpression Assignment MemberReference p MemberReference q = LocalVariableDeclaration BasicType int VariableDeclarator cl MethodInvocation MemberReference enc MemberReference bytes MemberReference p MemberReference end preciseLength IfStatement BinaryOperation > MemberReference cl Literal 0 BlockStatement StatementExpression Assignment MemberReference cr MemberReference CR_VALID |= StatementExpression Assignment MemberReference p MemberReference cl += BlockStatement StatementExpression Assignment MemberReference cr MemberReference CR_BROKEN = StatementExpression MemberReference ++ p StatementExpression MemberReference ++ c ReturnStatement MethodInvocation MemberReference c TernaryExpression BinaryOperation == MemberReference cr Literal 0 MemberReference CR_7BIT MemberReference cr pack	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "to_s" Annotation Override ReferenceType IRubyObject to_s IfStatement MethodInvocation isSingleton BlockStatement LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator attached Cast ReferenceType MetaClass This LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator buffer ClassCreator ReferenceType StringBuilder Literal IfStatement BinaryOperation != MemberReference attached Literal null BlockStatement IfStatement BinaryOperation || BinaryOperation instanceof MemberReference attached ReferenceType RubyClass BinaryOperation instanceof MemberReference attached ReferenceType RubyModule BlockStatement StatementExpression MethodInvocation buffer MethodInvocation attached inspect append BlockStatement StatementExpression MethodInvocation buffer MethodInvocation attached anyToString append StatementExpression MethodInvocation buffer Literal ">" append ReturnStatement MethodInvocation MethodInvocation MethodInvocation buffer toString newString getRuntime ReturnStatement MethodInvocation MethodInvocation MethodInvocation getName newString getRuntime	1
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 FormalParameter ReferenceType IRubyObject arg3 FormalParameter ReferenceType Block block ReturnStatement MethodInvocation MemberReference context MemberReference self ArrayCreator ReferenceType IRubyObject ArrayInitializer MemberReference arg1 MemberReference arg2 MemberReference arg3 MemberReference block	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "each_line" ElementValuePair optional Literal 1 ElementValuePair frame Literal true ReferenceType IRubyObject each_line FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block ReturnStatement TernaryExpression MethodInvocation block isGiven MethodInvocation MemberReference context MemberReference args MemberReference block MethodInvocation MethodInvocation context getRuntime This Literal "each_line" MemberReference args enumeratorize	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal Annotation Override ReferenceType RubyFixnum hash StatementExpression MethodInvocation check LocalVariableDeclaration BasicType int VariableDeclarator hash MethodInvocation pattern LocalVariableDeclaration BasicType int VariableDeclarator len MemberReference str realSize LocalVariableDeclaration BasicType int VariableDeclarator p MemberReference str begin LocalVariableDeclaration BasicType byte VariableDeclarator bytes MemberReference str bytes WhileStatement BinaryOperation > MemberReference -- len Literal 0 BlockStatement StatementExpression Assignment MemberReference hash BinaryOperation + BinaryOperation * MemberReference hash Literal 33 MemberReference ArraySelector MemberReference ++ p bytes = ReturnStatement MethodInvocation MethodInvocation BinaryOperation + MemberReference hash BinaryOperation >> MemberReference hash Literal 5 newFixnum getRuntime	0
MethodDeclaration Modifier protected ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType String name FormalParameter ReferenceType DynamicMethod method FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 ReturnStatement MethodInvocation RuntimeHelpers MemberReference context MemberReference self MethodInvocation method getVisibility MemberReference name MemberReference callType MemberReference arg0 MemberReference arg1 MemberReference Block NULL_BLOCK	0
MethodDeclaration Modifier public ReferenceType InputStream getInputStream IOException IfStatement BinaryOperation != MemberReference resource Literal null BlockStatement ReturnStatement MethodInvocation resource openStream LocalVariableDeclaration BasicType byte VariableDeclarator bytes ArrayCreator BasicType byte Cast BasicType int MethodInvocation path length LocalVariableDeclaration ReferenceType ByteBuffer VariableDeclarator buffer MethodInvocation ByteBuffer MemberReference bytes wrap LocalVariableDeclaration ReferenceType FileInputStream VariableDeclarator fis ClassCreator ReferenceType FileInputStream MemberReference path LocalVariableDeclaration ReferenceType FileChannel VariableDeclarator fc MethodInvocation fis getChannel StatementExpression MethodInvocation fc MemberReference buffer read StatementExpression MethodInvocation fis close ReturnStatement ClassCreator ReferenceType ByteArrayInputStream MemberReference bytes	1
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier private ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType DynamicMethod method FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 ReturnStatement MethodInvocation RuntimeHelpers MethodInvocation MemberReference context MemberReference self MethodInvocation self getMetaClass MemberReference methodName MemberReference arg0 MemberReference arg1 MemberReference Block NULL_BLOCK call MemberReference context MemberReference self MethodInvocation method getVisibility MemberReference methodName MemberReference callType	0
MethodDeclaration Modifier public ReferenceType Operand FormalParameter BasicType int argIndex FormalParameter BasicType boolean getSubArray ReturnStatement Literal null	1
MethodDeclaration Modifier public StatementExpression MethodInvocation MethodInvocation MemberReference visitInsn getMethodVisitor	0
MethodDeclaration Modifier public Annotation Deprecated ReferenceType Callback getFastOptMethod FormalParameter ReferenceType String method LocalVariableDeclaration ReferenceType String VariableDeclarator mname BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation type getName Literal "Callback$" MemberReference method Literal "_Fopt" LocalVariableDeclaration ReferenceType String VariableDeclarator mnamePath BinaryOperation + BinaryOperation + BinaryOperation + MemberReference typePath Literal "Callback$" MemberReference method Literal "_Fopt" SynchronizedStatement MethodInvocation runtime getJRubyClassLoader LocalVariableDeclaration ReferenceType Class VariableDeclarator c MethodInvocation MemberReference mname tryClass TryStatement IfStatement BinaryOperation == MemberReference c Literal null BlockStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator signature ArrayCreator ReferenceType Class ArrayInitializer ClassReference ReferenceType IRubyObject LocalVariableDeclaration ReferenceType Class VariableDeclarator ret MethodInvocation MemberReference method MemberReference signature getReturnClass LocalVariableDeclaration ReferenceType ClassWriter VariableDeclarator cw MethodInvocation MemberReference mnamePath createCtorFast LocalVariableDeclaration ReferenceType MethodVisitor VariableDeclarator mv MethodInvocation MemberReference cw startCallFast StatementExpression MethodInvocation mv MemberReference ALOAD MemberReference METHOD_ARGS_INDEX visitVarInsn StatementExpression MethodInvocation MemberReference mv ClassReference ReferenceType IRubyObject checkCast StatementExpression MethodInvocation mv MemberReference INVOKEVIRTUAL MemberReference typePath MemberReference method MethodInvocation MemberReference ret MemberReference signature sig visitMethodInsn StatementExpression MethodInvocation mv MemberReference ARETURN visitInsn StatementExpression MethodInvocation mv Literal 2 Literal 3 visitMaxs StatementExpression Assignment MemberReference c MethodInvocation MemberReference cw MemberReference mv MemberReference mname endCall = LocalVariableDeclaration ReferenceType FastInvocationCallback VariableDeclarator ic Cast ReferenceType FastInvocationCallback MethodInvocation c newInstance StatementExpression MethodInvocation ic MethodInvocation Arity optional setArity StatementExpression MethodInvocation ic MemberReference InvocationCallback OPTIONAL_ARGS setArgumentTypes StatementExpression MethodInvocation ic MemberReference method setJavaName ReturnStatement MemberReference ic CatchClause CatchClauseParameter IllegalArgumentException e ThrowStatement MemberReference e CatchClause CatchClauseParameter Exception e ThrowStatement ClassCreator ReferenceType IllegalArgumentException MethodInvocation e getMessage	1
MethodDeclaration Modifier public static ReferenceType String FormalParameter ReferenceType Object obj ReturnStatement MethodInvocation obj MethodInvocation toString getClass	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair rest Literal true ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject items StatementExpression MethodInvocation modifyCheck ReturnStatement MethodInvocation MemberReference items	0
MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation context pushNull	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair required Literal 1 Annotation Override ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject other LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator obj IfStatement BinaryOperation instanceof MemberReference other ReferenceType RubyFloat BlockStatement StatementExpression Assignment MemberReference obj MethodInvocation MethodInvocation MemberReference other MethodInvocation to_f newArray getRuntime = BlockStatement StatementExpression Assignment MemberReference obj MethodInvocation MethodInvocation MethodInvocation MemberReference other Literal true getVpValue This newArray getRuntime = ReturnStatement MemberReference obj	0
MethodDeclaration Modifier public final ReferenceType IRubyObject getVariable FormalParameter ReferenceType Ruby runtime FormalParameter BasicType int i FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject object ReturnStatement MethodInvocation runtimeCache MemberReference runtime MemberReference i MemberReference name MemberReference object getVariable	0
MethodDeclaration Modifier protected post FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType FormalParameter ReferenceType Frame StatementExpression MethodInvocation context MemberReference	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 LocalVariableDeclaration ReferenceType Object VariableDeclarator result Cast ReferenceType Object MethodInvocation handle TernaryExpression MemberReference isStatic Literal null Cast ReferenceType JavaObjectWrapper MemberReference self MethodInvocation MemberReference arg0 MethodInvocation MemberReference arg1 MethodInvocation MemberReference arg2 invoke ReturnStatement MethodInvocation MemberReference ruby MemberReference result javaToRuby	0
MethodDeclaration Modifier public final ReferenceType RubyFixnum FormalParameter ReferenceType Ruby runtime FormalParameter BasicType int value ReturnStatement MethodInvocation runtimeCache MemberReference runtime Literal 1 MemberReference value	0
MethodDeclaration Modifier public static BasicType int FormalParameter BasicType byte bytes FormalParameter BasicType int p FormalParameter BasicType int len ReturnStatement MethodInvocation MemberReference bytes MemberReference p MemberReference len MemberReference ASCIIEncoding INSTANCE	0
MethodDeclaration Modifier public ReferenceType String FormalParameter ReferenceType String IfStatement MethodInvocation MethodInvocation find MemberReference matcher BlockStatement ReturnStatement MemberReference ReturnStatement MethodInvocation System MemberReference	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal "include?" Literal "member?" ElementValuePair frame Literal true ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject obj LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime IfStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation instanceof MemberReference begin ReferenceType RubyNumeric BinaryOperation instanceof MemberReference end ReferenceType RubyNumeric MethodInvocation ! TypeConverter MethodInvocation isNil MemberReference begin MethodInvocation runtime getInteger Literal "to_int" convertToTypeWithCheck MethodInvocation ! TypeConverter MethodInvocation isNil MemberReference end MethodInvocation runtime getInteger Literal "to_int" convertToTypeWithCheck BlockStatement IfStatement BinaryOperation != MethodInvocation MemberReference context MemberReference begin MemberReference obj rangeLe Literal null BlockStatement IfStatement MemberReference isExclusive BlockStatement IfStatement BinaryOperation != MethodInvocation MemberReference context MemberReference obj MemberReference end rangeLt Literal null ReturnStatement MethodInvocation runtime getTrue BlockStatement IfStatement BinaryOperation != MethodInvocation MemberReference context MemberReference obj MemberReference end rangeLe Literal null ReturnStatement MethodInvocation runtime getTrue ReturnStatement MethodInvocation runtime getFalse IfStatement BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation instanceof MemberReference begin ReferenceType RubyString BinaryOperation instanceof MemberReference end ReferenceType RubyString BinaryOperation == Cast ReferenceType RubyString MemberReference begin Literal 1 BinaryOperation == Cast ReferenceType RubyString MemberReference end Literal 1 BlockStatement IfStatement MethodInvocation obj isNil ReturnStatement MethodInvocation runtime getFalse IfStatement BinaryOperation instanceof MemberReference obj ReferenceType RubyString BlockStatement LocalVariableDeclaration ReferenceType ByteList VariableDeclarator Vbytes Cast ReferenceType RubyString MemberReference obj IfStatement BinaryOperation != MemberReference Vbytes realSize Literal 1 ReturnStatement MethodInvocation runtime getFalse LocalVariableDeclaration BasicType int VariableDeclarator v BinaryOperation & MemberReference Vbytes ArraySelector MemberReference Vbytes begin bytes Literal 0xff LocalVariableDeclaration ReferenceType ByteList VariableDeclarator Bbytes Cast ReferenceType RubyString MemberReference begin LocalVariableDeclaration BasicType int VariableDeclarator b BinaryOperation & MemberReference Bbytes ArraySelector MemberReference Bbytes begin bytes Literal 0xff LocalVariableDeclaration ReferenceType ByteList VariableDeclarator Ebytes Cast ReferenceType RubyString MemberReference end LocalVariableDeclaration BasicType int VariableDeclarator e BinaryOperation & MemberReference Ebytes ArraySelector MemberReference Ebytes begin bytes Literal 0xff IfStatement BinaryOperation && BinaryOperation && MethodInvocation Encoding MemberReference v isAscii MethodInvocation Encoding MemberReference b isAscii MethodInvocation Encoding MemberReference e isAscii BlockStatement IfStatement BinaryOperation || BinaryOperation && BinaryOperation <= MemberReference b MemberReference v BinaryOperation < MemberReference v MemberReference e BinaryOperation && MemberReference ! isExclusive BinaryOperation == MemberReference v MemberReference e ReturnStatement MethodInvocation runtime getTrue ReturnStatement MethodInvocation runtime getFalse ReturnStatement MethodInvocation RuntimeHelpers MemberReference context This MemberReference obj MemberReference Block NULL_BLOCK	1
MethodDeclaration Modifier private FormalParameter ReferenceType IRubyObject val IOException LocalVariableDeclaration ReferenceType Channel VariableDeclarator socketChannel MethodInvocation openFile MethodInvocation getDescriptor MethodInvocation getChannel getMainStream IfStatement BinaryOperation instanceof MemberReference socketChannel ReferenceType SocketChannel BlockStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference val ReferenceType RubyBoolean MethodInvocation ! val isTrue BlockStatement StatementExpression MethodInvocation MethodInvocation Literal false Literal 0 asSocket BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator num MethodInvocation MemberReference val asNumber IfStatement BinaryOperation == MemberReference num Literal - 1 BlockStatement StatementExpression MethodInvocation MethodInvocation Literal false Literal 0 asSocket BlockStatement StatementExpression MethodInvocation MethodInvocation Literal true MemberReference num asSocket	1
MethodDeclaration Modifier private static ReferenceType String canonicalize FormalParameter ReferenceType String path ReturnStatement MethodInvocation Literal null MemberReference path canonicalize	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair required Literal 1 ElementValuePair module Literal true ElementValuePair visibility MemberReference Visibility PRIVATE ReferenceType IRubyObject detach FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject arg LocalVariableDeclaration Modifier final BasicType int VariableDeclarator pid Cast BasicType int MethodInvocation arg MethodInvocation getLongValue convertToInteger LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration ReferenceType BlockCallback VariableDeclarator ClassCreator ReferenceType BlockCallback MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block LocalVariableDeclaration BasicType int VariableDeclarator status ArrayCreator BasicType int Literal 1 LocalVariableDeclaration BasicType int VariableDeclarator result MethodInvocation context MethodInvocation getPosix MethodInvocation MemberReference pid MemberReference status Literal 0 getRuntime ReturnStatement MethodInvocation context MethodInvocation MemberReference result newFixnum getRuntime ReturnStatement MethodInvocation RubyThread MethodInvocation runtime getThread MemberReference IRubyObject MethodInvocation MemberReference recv Cast ReferenceType RubyModule MemberReference recv MemberReference Arity MemberReference MemberReference context newInstance	0
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + SuperMethodInvocation toString Literal "(" MemberReference _source TernaryExpression BinaryOperation == MemberReference Literal null Literal "" BinaryOperation + Literal ", " MemberReference Literal ")"	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ReferenceType IRubyObject pre_match FormalParameter ReferenceType ThreadContext context StatementExpression MethodInvocation check IfStatement BinaryOperation == MemberReference begin Literal - 1 ReturnStatement MethodInvocation context MethodInvocation getNil getRuntime ReturnStatement MethodInvocation str MethodInvocation This infectBy MethodInvocation context getRuntime Literal 0 MemberReference begin makeShared	1
MethodDeclaration Modifier public process ForStatement EnhancedForControl VariableDeclaration ReferenceType VariableDeclarator MethodInvocation env BlockStatement StatementExpression MethodInvocation MethodInvocation ClassCreator ReferenceType MemberReference TryStatement LocalVariableDeclaration ReferenceType FileWriter VariableDeclarator fw ClassCreator ReferenceType FileWriter Literal ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator name MemberReference classNames BlockStatement StatementExpression MethodInvocation fw MemberReference name write StatementExpression MethodInvocation fw Literal '\n' write StatementExpression MethodInvocation fw close CatchClause CatchClauseParameter Exception e ThrowStatement ClassCreator ReferenceType RuntimeException MemberReference e	1
MethodDeclaration Modifier private ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter BasicType byte bytes FormalParameter BasicType int s FormalParameter BasicType int end LocalVariableDeclaration BasicType boolean VariableDeclarator modify Literal false WhileStatement BinaryOperation < MemberReference s MemberReference end BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator c BinaryOperation & MemberReference ArraySelector MemberReference s bytes Literal 0xff IfStatement MethodInvocation ASCII MemberReference c isUpper BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference s bytes MemberReference AsciiTables ArraySelector MemberReference c = StatementExpression Assignment MemberReference modify Literal true = StatementExpression MemberReference ++ s ReturnStatement TernaryExpression MemberReference modify This MethodInvocation runtime getNil	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "round" ReferenceType IRubyObject op_round FormalParameter ReferenceType ThreadContext context LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator num This MemberReference num LocalVariableDeclaration BasicType boolean VariableDeclarator neg MethodInvocation MemberReference context MemberReference num f_negative_p IfStatement MemberReference neg StatementExpression Assignment MemberReference num MethodInvocation MemberReference context MemberReference num f_negate = LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator den This MemberReference den LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator two MethodInvocation RubyFixnum MethodInvocation context getRuntime two StatementExpression Assignment MemberReference num MethodInvocation MemberReference context MethodInvocation MemberReference context MemberReference num MemberReference two f_mul MemberReference den f_add = StatementExpression Assignment MemberReference den MethodInvocation MemberReference context MemberReference den MemberReference two f_mul = StatementExpression Assignment MemberReference num MethodInvocation MemberReference context MemberReference num MemberReference den f_idiv = IfStatement MemberReference neg StatementExpression Assignment MemberReference num MethodInvocation MemberReference context MemberReference num f_negate = ReturnStatement MemberReference num	1
MethodDeclaration Modifier public static Annotation JRubyMethod ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject obj LocalVariableDeclaration ReferenceType RubyIO VariableDeclarator io Cast ReferenceType RubyIO MemberReference obj TryStatement LocalVariableDeclaration ReferenceType OpenFile VariableDeclarator openFile MethodInvocation io getOpenFile LocalVariableDeclaration ReferenceType ChannelDescriptor VariableDeclarator descriptor MethodInvocation openFile MethodInvocation getDescriptor getMainStream IfStatement MethodInvocation openFile MethodInvocation feof getMainStream BlockStatement ReturnStatement MethodInvocation context MethodInvocation getNil getRuntime StatementExpression MethodInvocation openFile MethodInvocation getMainStream CatchClause CatchClauseParameter Exception ReturnStatement MethodInvocation context MethodInvocation getNil getRuntime ReturnStatement MemberReference obj	1
MethodDeclaration Modifier public ReferenceType Node getBodyNode ReturnStatement MemberReference bodyNode	0
MethodDeclaration Modifier public LocalVariableDeclaration Modifier final ReferenceType ByteArrayOutputStream VariableDeclarator err ClassCreator ReferenceType ByteArrayOutputStream LocalVariableDeclaration ReferenceType RubyInstanceConfig VariableDeclarator config ClassCreator ReferenceType RubyInstanceConfig StatementExpression MethodInvocation MemberReference System in StatementExpression MethodInvocation MemberReference System out StatementExpression MethodInvocation ClassCreator ReferenceType PrintStream MemberReference err setError StatementExpression MethodInvocation Literal false LocalVariableDeclaration ReferenceType Ruby VariableDeclarator ruby MethodInvocation Ruby MemberReference config newInstance LocalVariableDeclaration ReferenceType RubyException VariableDeclarator exception Cast ReferenceType RubyException MethodInvocation runtime MethodInvocation MethodInvocation ruby getCurrentContext ArrayCreator ReferenceType IRubyObject ArrayInitializer MethodInvocation ruby Literal "A message" newString MemberReference Block NULL_BLOCK newInstance Literal "NameError" getClass LocalVariableDeclaration ReferenceType RubyString VariableDeclarator lines ArrayCreator ReferenceType RubyString ArrayInitializer MethodInvocation RubyString MemberReference ruby Literal "Line 1" newString MethodInvocation RubyString MemberReference ruby Literal "Line 2" newString LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator backtrace MethodInvocation RubyArray MemberReference ruby MethodInvocation TypeArgument ReferenceType IRubyObject MemberReference lines Arrays newArray StatementExpression MethodInvocation exception MemberReference backtrace StatementExpression MethodInvocation ruby MemberReference exception printError StatementExpression MethodInvocation Literal "Line 1: A message Line MethodInvocation err toString assertEquals	1
MethodDeclaration Modifier public FormalParameter BasicType int time StatementExpression MethodInvocation MemberReference time	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "to_c" ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject to_c FormalParameter ReferenceType ThreadContext context ReturnStatement MethodInvocation RubyComplex MemberReference context This	1
MethodDeclaration Modifier private ReferenceType IRubyObject handleNextJump FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType JumpException ReferenceType NextJump nj FormalParameter ReferenceType Block ReferenceType Type type ReturnStatement TernaryExpression BinaryOperation == MethodInvocation nj getValue Literal null MethodInvocation context MethodInvocation getNil getRuntime Cast ReferenceType IRubyObject MethodInvocation nj getValue	1
MethodDeclaration Modifier public ReferenceType IRubyObject execute FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block ReturnStatement MethodInvocation RubyFixnum MethodInvocation recv getRuntime Literal 128 newFixnum	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType MultipleAsgnNode multipleAsgnNode FormalParameter ReferenceType IR_Scope s FormalParameter ReferenceType Operand values LocalVariableDeclaration Modifier final ReferenceType ListNode VariableDeclarator MethodInvocation multipleAsgnNode getHeadNode LocalVariableDeclaration BasicType int VariableDeclarator i Literal 0 IfStatement BinaryOperation != MemberReference Literal null BlockStatement LocalVariableDeclaration ReferenceType ListNode VariableDeclarator Cast ReferenceType ListNode MemberReference ForStatement EnhancedForControl VariableDeclaration ReferenceType Node VariableDeclarator an MethodInvocation childNodes BlockStatement IfStatement BinaryOperation == MemberReference values Literal null StatementExpression MethodInvocation MemberReference an MemberReference s MemberReference i Literal false buildBlockArgsAssignment StatementExpression MethodInvocation MemberReference an MemberReference s MemberReference values MemberReference i Literal false buildAssignment StatementExpression MemberReference ++ i LocalVariableDeclaration ReferenceType Node VariableDeclarator an MethodInvocation multipleAsgnNode getArgsNode IfStatement BinaryOperation == MemberReference an Literal null BlockStatement IfStatement BinaryOperation == MemberReference Literal null ThrowStatement ClassCreator ReferenceType NotCompilableException BinaryOperation + Literal "Something's wrong, multiple assignment with no head or args at: " MethodInvocation multipleAsgnNode getPosition IfStatement BinaryOperation instanceof MemberReference an ReferenceType StarNode BlockStatement IfStatement BinaryOperation != MemberReference values Literal null BlockStatement StatementExpression MethodInvocation MemberReference an MemberReference s MemberReference values MemberReference i Literal true buildAssignment BlockStatement StatementExpression MethodInvocation MemberReference an MemberReference s MemberReference i Literal true buildBlockArgsAssignment	1
MethodDeclaration Modifier public final FormalParameter BasicType long offset FormalParameter BasicType int value StatementExpression MethodInvocation MemberReference offset Literal 4 checkBounds StatementExpression MethodInvocation MemberReference buffer MethodInvocation MemberReference offset index MemberReference value	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "~" ElementValuePair reads ElementArrayValue MemberReference LASTLINE MemberReference BACKREF ElementValuePair writes MemberReference BACKREF ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator line MethodInvocation context MethodInvocation MemberReference runtime getCurrentScope IfStatement BinaryOperation instanceof MemberReference line ReferenceType RubyString BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator start MethodInvocation MemberReference context Cast ReferenceType RubyString MemberReference line Literal 0 Literal false search IfStatement BinaryOperation < MemberReference start Literal 0 ReturnStatement MethodInvocation runtime getNil ReturnStatement MethodInvocation runtime MemberReference start newFixnum StatementExpression MethodInvocation context MethodInvocation MethodInvocation runtime getNil setBackRef getCurrentScope ReturnStatement MethodInvocation runtime getNil	1
MethodDeclaration Modifier public ReferenceType Visibility getCurrentVisibility ReturnStatement MethodInvocation MethodInvocation getVisibility	0
MethodDeclaration Modifier public ReferenceType Arity ReturnStatement MethodInvocation MethodInvocation	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ReferenceType IRubyObject annotation_present_p FormalParameter ReferenceType IRubyObject IfStatement BinaryOperation instanceof MemberReference ReferenceType JavaClass BlockStatement ThrowStatement MethodInvocation MethodInvocation MemberReference MethodInvocation MethodInvocation getJavaSupport MethodInvocation getJavaClassClass getRuntime newTypeError getRuntime ReturnStatement MethodInvocation MethodInvocation This MethodInvocation MethodInvocation Cast ReferenceType JavaClass MemberReference isAnnotationPresent newBoolean getRuntime	1
MethodDeclaration Modifier private static FormalParameter ReferenceType Object a FormalParameter BasicType int lo FormalParameter BasicType int hi FormalParameter ReferenceType Comparator c LocalVariableDeclaration ReferenceType Object VariableDeclarator x MemberReference ArraySelector MemberReference lo a WhileStatement BinaryOperation && BinaryOperation < MemberReference lo MemberReference hi BinaryOperation > MethodInvocation c MemberReference x MemberReference ArraySelector BinaryOperation + MemberReference lo Literal 1 a compare Literal 0 BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference lo a MemberReference ArraySelector MemberReference ++ lo a = StatementExpression Assignment MemberReference ArraySelector MemberReference lo a MemberReference x =	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "downcase!" ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime IfStatement BinaryOperation == MemberReference value realSize Literal 0 BlockStatement StatementExpression MethodInvocation modifyCheck ReturnStatement MethodInvocation runtime getNil StatementExpression MethodInvocation modify ReturnStatement MethodInvocation MemberReference runtime MemberReference value bytes MemberReference value begin BinaryOperation + MemberReference value begin MemberReference value realSize	1
MethodDeclaration Modifier public static ReferenceType IRubyObject javaToRuby FormalParameter ReferenceType Ruby runtime FormalParameter BasicType long value ReturnStatement MethodInvocation MemberReference runtime ClassCreator ReferenceType Long MemberReference value javaToRuby	1
MethodDeclaration Modifier public static ReferenceType CallSite FormalParameter ReferenceType CallSite callSites FormalParameter BasicType int index FormalParameter ReferenceType String name StatementExpression Assignment MemberReference ArraySelector MemberReference index callSites MethodInvocation MemberReference name = ReturnStatement MemberReference callSites	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime IfStatement BinaryOperation == MemberReference value realSize Literal 0 ReturnStatement MethodInvocation runtime getNil ReturnStatement MethodInvocation MemberReference runtime MemberReference ASCII MemberReference value bytes MemberReference value begin BinaryOperation + MemberReference value begin MemberReference value realSize singleByteRStrip	1
MethodDeclaration Modifier public BasicType int write FormalParameter ReferenceType ByteBuffer src IOException ReturnStatement MethodInvocation MemberReference write MemberReference src write	0
MethodDeclaration Modifier public BasicType short FormalParameter BasicType byte array FormalParameter BasicType int offset ReturnStatement Cast BasicType short BinaryOperation | BinaryOperation << BinaryOperation & MemberReference ArraySelector BinaryOperation + MemberReference offset Literal 0 array Literal 0xff Literal 8 BinaryOperation & MemberReference ArraySelector BinaryOperation + MemberReference offset Literal 1 array Literal 0xff	0
MethodDeclaration Modifier public final FormalParameter BasicType int length StatementExpression MethodInvocation MemberReference length modify StatementExpression MethodInvocation	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block ReturnStatement MethodInvocation RubyRegexp MemberReference matchNumber MethodInvocation context MethodInvocation MemberReference runtime getBackRef getCurrentScope nth_match	0
MethodDeclaration Modifier public static ReferenceType String FormalParameter ReferenceType Long l ReturnStatement MethodInvocation String MemberReference l valueOf	0
MethodDeclaration Modifier protected BasicType boolean FormalParameter ReferenceType DynamicMethod method FormalParameter ReferenceType IRubyObject caller ReturnStatement MethodInvocation method isUndefined	0
MethodDeclaration Modifier public ReferenceType RubyClass ReturnStatement MemberReference	0
MethodDeclaration Modifier public final ReferenceType CallSite ReturnStatement MemberReference runtimeCache ArraySelector Literal 1 callSites	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "name" ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation getRuntime IfStatement BinaryOperation == MethodInvocation Literal null BlockStatement ReturnStatement MethodInvocation runtime getNil BlockStatement ReturnStatement MethodInvocation runtime MethodInvocation getName newString	0
MethodDeclaration Modifier private static ReferenceType IRubyObject str_to_c_strict FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator a MethodInvocation MemberReference context MemberReference recv str_to_c_internal IfStatement BinaryOperation || MethodInvocation a MethodInvocation isNil Literal 0 eltInternal BinaryOperation > MethodInvocation a MethodInvocation convertToString MethodInvocation getByteList MethodInvocation length Literal 1 eltInternal Literal 0 BlockStatement LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator s MethodInvocation recv MemberReference context Literal "inspect" callMethod ThrowStatement MethodInvocation context MethodInvocation BinaryOperation + Literal "invalid value for convert(): " MethodInvocation s convertToString newArgumentError getRuntime ReturnStatement MethodInvocation a Literal 0 eltInternal	1
MethodDeclaration Modifier public Annotation Override ReferenceType String getName ReturnStatement MethodInvocation nameNode getName	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "initialize" ElementValuePair required Literal 1 ElementValuePair rest Literal true ElementValuePair frame Literal true ElementValuePair visibility MemberReference Visibility PRIVATE ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block unusedBlock IOException StatementExpression Assignment MemberReference Cast ReferenceType RubyObject MemberReference ArraySelector Literal 0 args = StatementExpression Assignment MemberReference io ClassCreator ReferenceType ClassCreator ReferenceType MemberReference Literal false Literal false = ReturnStatement This	0
MethodDeclaration Modifier private BasicType int cmp FormalParameter ReferenceType RubyTime other LocalVariableDeclaration BasicType long VariableDeclarator millis MethodInvocation LocalVariableDeclaration BasicType long VariableDeclarator millis_other MethodInvocation other LocalVariableDeclaration BasicType long VariableDeclarator usec_other MemberReference other usec IfStatement BinaryOperation || BinaryOperation > MemberReference millis MemberReference millis_other BinaryOperation && BinaryOperation == MemberReference millis MemberReference millis_other BinaryOperation > MemberReference usec MemberReference usec_other BlockStatement ReturnStatement Literal 1 IfStatement BinaryOperation || BinaryOperation < MemberReference millis MemberReference millis_other BinaryOperation && BinaryOperation == MemberReference millis MemberReference millis_other BinaryOperation < MemberReference usec MemberReference usec_other BlockStatement ReturnStatement Literal - 1 ReturnStatement Literal 0	1
MethodDeclaration Modifier public ReferenceType IR_Method ReturnStatement MethodInvocation	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair module Literal true ElementValuePair visibility MemberReference Visibility PRIVATE ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject recv Exception ReturnStatement MethodInvocation recv MethodInvocation MethodInvocation ProcCompletor getDelimiter newString getRuntime	1
MethodDeclaration Modifier public ReferenceType IRubyObject each_line FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Block block ReturnStatement MethodInvocation MemberReference context MethodInvocation context MethodInvocation getGlobalVariables MethodInvocation Literal "$/" get getRuntime MemberReference block	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ReferenceType RubyString zone LocalVariableDeclaration ReferenceType String VariableDeclarator zone MethodInvocation dt MethodInvocation MethodInvocation dt getMillis getShortName getZone IfStatement MethodInvocation zone Literal equals BlockStatement StatementExpression Assignment MemberReference zone Literal = ReturnStatement MethodInvocation MethodInvocation MemberReference zone newString getRuntime	1
MethodDeclaration Modifier public ReferenceType Object case280_line1090 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support MemberReference NilImplicitNode NIL Literal "!" getOperatorCallNode = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject obj ReturnStatement MethodInvocation MemberReference context MemberReference obj include_p	1
MethodDeclaration Modifier public synchronized FormalParameter ReferenceType Runnable r StatementExpression Assignment MemberReference running Literal true = StatementExpression MethodInvocation r run StatementExpression Assignment MemberReference running Literal false =	0
MethodDeclaration Modifier public ReferenceType NodeType getNodeType ReturnStatement MemberReference NodeType EVSTRNODE	0
MethodDeclaration Modifier public ReferenceType Object case27_line411 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType OpAsgnNode MethodInvocation Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 4 MemberReference yyTop yyVals getPosition Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 4 MemberReference yyTop yyVals Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals Cast ReferenceType String Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals Cast ReferenceType String Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public synchronized ReferenceType ByteList readall IOException BadDescriptorException LocalVariableDeclaration Modifier final BasicType long VariableDeclarator fileSize TernaryExpression BinaryOperation && MethodInvocation descriptor isSeekable BinaryOperation instanceof MethodInvocation descriptor getChannel ReferenceType FileChannel Cast ReferenceType FileChannel MethodInvocation descriptor getChannel Literal 0 IfStatement BinaryOperation > MemberReference fileSize Literal 0 BlockStatement StatementExpression MethodInvocation ensureRead LocalVariableDeclaration ReferenceType FileChannel VariableDeclarator channel Cast ReferenceType FileChannel MethodInvocation descriptor getChannel LocalVariableDeclaration Modifier final BasicType long VariableDeclarator left BinaryOperation + BinaryOperation - MemberReference fileSize MethodInvocation channel position MethodInvocation bufferedBytesAvailable IfStatement BinaryOperation <= MemberReference left Literal 0 BlockStatement StatementExpression Assignment MemberReference eof Literal true = ReturnStatement Literal null IfStatement BinaryOperation > MemberReference left MemberReference Integer MAX_VALUE BlockStatement IfStatement BinaryOperation != MethodInvocation getRuntime Literal null BlockStatement ThrowStatement MethodInvocation MethodInvocation Literal "File too large" newIOError getRuntime BlockStatement ThrowStatement ClassCreator ReferenceType IOException Literal "File too large" LocalVariableDeclaration ReferenceType ByteList VariableDeclarator result ClassCreator ReferenceType ByteList Cast BasicType int MemberReference left LocalVariableDeclaration ReferenceType ByteBuffer VariableDeclarator buf MethodInvocation ByteBuffer MethodInvocation result unsafeBytes MethodInvocation result begin Cast BasicType int MemberReference left wrap StatementExpression MethodInvocation MemberReference buf copyBufferedBytes WhileStatement MethodInvocation buf hasRemaining BlockStatement LocalVariableDeclaration Modifier final BasicType int VariableDeclarator MAX_READ_CHUNK BinaryOperation * BinaryOperation * Literal 1 Literal 1024 Literal 1024 LocalVariableDeclaration ReferenceType ByteBuffer VariableDeclarator tmp MethodInvocation buf duplicate IfStatement BinaryOperation > MethodInvocation tmp remaining MemberReference MAX_READ_CHUNK BlockStatement StatementExpression MethodInvocation tmp BinaryOperation + MethodInvocation tmp position MemberReference MAX_READ_CHUNK limit LocalVariableDeclaration BasicType int VariableDeclarator n MethodInvocation channel MemberReference tmp read IfStatement BinaryOperation <= MemberReference n Literal 0 BlockStatement BreakStatement StatementExpression MethodInvocation buf MethodInvocation tmp position position StatementExpression Assignment MemberReference eof Literal true = StatementExpression MethodInvocation result MethodInvocation buf position length ReturnStatement MemberReference result IfStatement MethodInvocation descriptor BlockStatement ReturnStatement ClassCreator ReferenceType ByteList Literal 0 BlockStatement StatementExpression MethodInvocation checkReadable LocalVariableDeclaration ReferenceType ByteList VariableDeclarator ClassCreator ReferenceType ByteList LocalVariableDeclaration ReferenceType ByteList VariableDeclarator read MethodInvocation MemberReference BUFSIZE fread IfStatement BinaryOperation == MemberReference read Literal null BlockStatement StatementExpression Assignment MemberReference eof Literal true = ReturnStatement MemberReference WhileStatement BinaryOperation != MemberReference read Literal null BlockStatement StatementExpression MethodInvocation MemberReference read append StatementExpression Assignment MemberReference read MethodInvocation MemberReference BUFSIZE fread = ReturnStatement MemberReference	1
MethodDeclaration Modifier public static ReferenceType RubyTime FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType DateTime dt FormalParameter BasicType long usec LocalVariableDeclaration ReferenceType RubyTime VariableDeclarator t ClassCreator ReferenceType RubyTime MemberReference runtime MethodInvocation runtime getTime MemberReference dt StatementExpression MethodInvocation t MemberReference usec setUSec ReturnStatement MemberReference t	0
MethodDeclaration Modifier public ReferenceType Object convert FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject rubyObject ReturnStatement MethodInvocation rubyObject ClassReference ReferenceType Character toJava	0
MethodDeclaration Modifier public ReferenceType Operand FormalParameter ReferenceType Map TypeArgument ReferenceType Operand TypeArgument ReferenceType Operand ReturnStatement This	1
MethodDeclaration Modifier public ReferenceType Object case191_line782 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType OpAsgnNode MethodInvocation Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 4 MemberReference yyTop yyVals getPosition Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 4 MemberReference yyTop yyVals Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals Cast ReferenceType String Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals Cast ReferenceType String Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "gsub!" ElementValuePair frame Literal true ElementValuePair reads MemberReference BACKREF ElementValuePair writes MemberReference BACKREF ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType IRubyObject gsub_bang FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType Block block ReturnStatement MethodInvocation MemberReference context MemberReference arg0 MemberReference arg1 MemberReference block Literal true gsub	1
MethodDeclaration Modifier final public static putArrayOfSigned32 FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType MemoryIO io FormalParameter BasicType long offset FormalParameter ReferenceType RubyArray ary LocalVariableDeclaration BasicType int VariableDeclarator array ArrayCreator BasicType int MethodInvocation ary size ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference array length MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i array MethodInvocation Util MethodInvocation ary MemberReference i entry int32Value = StatementExpression MethodInvocation io MemberReference offset MemberReference array Literal 0 MemberReference array length put	1
MethodDeclaration Modifier public final marshal FormalParameter ReferenceType Invocation invocation FormalParameter ReferenceType InvocationBuffer buffer FormalParameter ReferenceType IRubyObject parameter StatementExpression MethodInvocation MethodInvocation invocation getThreadContext MemberReference buffer MemberReference parameter marshal	0
MethodDeclaration Modifier public call FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation MemberReference MemberReference context MemberReference expr compile	0
MethodDeclaration Modifier public ReferenceType RubyClass LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator clazz IfStatement BinaryOperation != Assignment MemberReference clazz MemberReference javaMethodClass = Literal null ReturnStatement MemberReference clazz ReturnStatement Assignment MemberReference javaMethodClass MethodInvocation MethodInvocation Literal "JavaMethod" fastGetClass getJavaModule =	1
MethodDeclaration Modifier private FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType String name StatementExpression MethodInvocation runtime MethodInvocation MemberReference ID BinaryOperation + BinaryOperation + Literal variable " MemberReference name Literal " not initialized" warning getWarnings	0
MethodDeclaration Modifier public static BasicType int preciseCodePoint FormalParameter ReferenceType Encoding enc FormalParameter BasicType byte bytes FormalParameter BasicType int p FormalParameter BasicType int end LocalVariableDeclaration BasicType int VariableDeclarator l MethodInvocation MemberReference enc MemberReference bytes MemberReference p MemberReference end preciseLength IfStatement BinaryOperation > MemberReference l Literal 0 StatementExpression MethodInvocation enc MemberReference bytes MemberReference p MemberReference end mbcToCode ReturnStatement Literal - 1	1
MethodDeclaration Modifier final public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair module Literal true ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject src FormalParameter ReferenceType IRubyObject dst FormalParameter ReferenceType IRubyObject rbLength IfStatement BinaryOperation instanceof MemberReference src ReferenceType RubyIO BlockStatement ThrowStatement MethodInvocation context MethodInvocation Literal "wrong argument (expected newTypeError getRuntime IfStatement BinaryOperation instanceof MemberReference dst ReferenceType BlockStatement ThrowStatement MethodInvocation context MethodInvocation Literal "wrong argument (expected FFI newTypeError getRuntime LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime TryStatement LocalVariableDeclaration ReferenceType OpenFile VariableDeclarator openFile Cast ReferenceType RubyIO MemberReference src StatementExpression MethodInvocation openFile MemberReference runtime StatementExpression MethodInvocation openFile MemberReference runtime checkReadable LocalVariableDeclaration ReferenceType ChannelStream VariableDeclarator stream Cast ReferenceType ChannelStream MethodInvocation openFile getMainStream LocalVariableDeclaration ReferenceType ByteBuffer VariableDeclarator buffer Cast ReferenceType MemberReference dst LocalVariableDeclaration BasicType int VariableDeclarator count MethodInvocation RubyNumeric MemberReference rbLength num2int IfStatement BinaryOperation > MemberReference count MethodInvocation buffer remaining BlockStatement ThrowStatement MethodInvocation runtime Literal count too for output buffer" newIndexError IfStatement BinaryOperation < MemberReference count MethodInvocation buffer remaining BlockStatement StatementExpression Assignment MemberReference buffer MethodInvocation buffer duplicate = StatementExpression MethodInvocation buffer MemberReference count limit ReturnStatement MethodInvocation runtime MethodInvocation stream MemberReference buffer read newFixnum CatchClause CatchClauseParameter PipeException ex ThrowStatement MethodInvocation runtime newErrnoEPIPEError CatchClause CatchClauseParameter InvalidValueException ex ThrowStatement MethodInvocation runtime newErrnoEINVALError CatchClause CatchClauseParameter EOFException e ReturnStatement MethodInvocation runtime Literal - 1 newFixnum CatchClause CatchClauseParameter BadDescriptorException e ThrowStatement MethodInvocation runtime newErrnoEBADFError CatchClause CatchClauseParameter IOException e ThrowStatement MethodInvocation runtime MemberReference e newIOErrorFromException	1
MethodDeclaration Modifier private FormalParameter ReferenceType ClassVarAsgnNode node StatementExpression MethodInvocation sb MethodInvocation MethodInvocation node getName append Literal " " append	0
MethodDeclaration Modifier public final ReferenceType ByteList FormalParameter BasicType int size ReturnStatement Assignment MemberReference ArrayCreator ReferenceType ByteList MemberReference size =	1
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType RubyClass LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator clazz ClassCreator ReferenceType RubyClass MemberReference runtime StatementExpression Assignment MemberReference clazz allocator MemberReference ObjectAllocator NOT_ALLOCATABLE_ALLOCATOR = ReturnStatement MemberReference clazz	0
MethodDeclaration Modifier public StatementExpression MethodInvocation loadSelf StatementExpression MethodInvocation metaclass	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference charset	0
MethodDeclaration Modifier private static ReferenceType RubyBoolean FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType IRubyObject ReturnStatement TernaryExpression MethodInvocation isTrue MethodInvocation runtime getTrue MethodInvocation runtime getFalse	0
MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject caller FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType Block block TryStatement ReturnStatement MethodInvocation MemberReference context MemberReference caller MemberReference self MemberReference arg1 MemberReference block callBlock CatchClause CatchClauseParameter JumpException.BreakJump bj ReturnStatement MethodInvocation MemberReference context MemberReference bj handleBreakJump CatchClause CatchClauseParameter JumpException.RetryJump rj ThrowStatement MethodInvocation MemberReference context retryJumpError	1
MethodDeclaration Modifier public Annotation JRubyMethod ReferenceType RubyArray ReturnStatement MethodInvocation MethodInvocation MethodInvocation getDeclaredMethods javaClass Literal false java_methods	1
MethodDeclaration Modifier public ReferenceType RaiseException FormalParameter ReferenceType String message ReturnStatement MethodInvocation MethodInvocation MethodInvocation Literal fastGetClass getErrno BinaryOperation + Literal error - " MemberReference message newRaiseException	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType Operand setupCallArgs FormalParameter ReferenceType Node args FormalParameter ReferenceType IR_Scope s LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Operand VariableDeclarator argsList ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Operand StatementExpression MethodInvocation argsList MethodInvocation s getSelf add IfStatement BinaryOperation != MemberReference args Literal null BlockStatement StatementExpression Assignment MemberReference args MethodInvocation MemberReference args skipOverNewlines = StatementExpression MethodInvocation MemberReference argsList MemberReference args MemberReference s buildArgs ReturnStatement MemberReference argsList	1
MethodDeclaration Modifier public ReferenceType Node getBodyNode ReturnStatement MemberReference bodyNode	0
MethodDeclaration Modifier public ReferenceType Object case54_line498 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 3 MemberReference yyTop yyVals Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals Literal null new_call = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "==" ReferenceType IRubyObject op_equal FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject other LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime IfStatement BinaryOperation || BinaryOperation instanceof MemberReference other ReferenceType RubyFixnum BinaryOperation instanceof MemberReference other ReferenceType RubyBignum BlockStatement IfStatement BinaryOperation && MethodInvocation MemberReference context MemberReference num f_zero_p MethodInvocation MemberReference context MemberReference other f_zero_p ReturnStatement MethodInvocation runtime getTrue IfStatement BinaryOperation || BinaryOperation instanceof MemberReference den ReferenceType RubyFixnum BinaryOperation != Cast ReferenceType RubyFixnum MemberReference den Literal 1 ReturnStatement MethodInvocation runtime getFalse IfStatement MethodInvocation MemberReference context MemberReference num MemberReference other ReturnStatement MethodInvocation runtime getTrue ReturnStatement MethodInvocation runtime getFalse IfStatement BinaryOperation instanceof MemberReference other ReferenceType RubyFloat BlockStatement ReturnStatement TernaryExpression MethodInvocation MemberReference context MethodInvocation MemberReference context This f_to_f MemberReference other MethodInvocation runtime getTrue MethodInvocation runtime getFalse IfStatement BinaryOperation instanceof MemberReference other ReferenceType RubyRational BlockStatement LocalVariableDeclaration ReferenceType RubyRational VariableDeclarator otherRational Cast ReferenceType RubyRational MemberReference other IfStatement BinaryOperation && MethodInvocation MemberReference context MemberReference num f_zero_p MethodInvocation MemberReference context MemberReference otherRational num f_zero_p ReturnStatement MethodInvocation runtime getTrue IfStatement BinaryOperation && MethodInvocation MemberReference context MemberReference num MemberReference otherRational num MethodInvocation MemberReference context MemberReference den MemberReference otherRational den ReturnStatement MethodInvocation runtime getTrue ReturnStatement MethodInvocation runtime getFalse ReturnStatement TernaryExpression MethodInvocation MemberReference context MemberReference other This MethodInvocation runtime getTrue MethodInvocation runtime getFalse	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ReferenceType RubyBoolean ReturnStatement MethodInvocation MethodInvocation MethodInvocation MethodInvocation isInterface javaClass newBoolean getRuntime	1
MethodDeclaration Modifier public ReferenceType DynamicMethod FormalParameter ReferenceType RubyModule implementationClass FormalParameter ReferenceType String methodName FormalParameter ReferenceType Arity arity FormalParameter ReferenceType Visibility visibility FormalParameter ReferenceType scope FormalParameter ReferenceType Object scriptObject FormalParameter ReferenceType CallConfiguration callConfig ReturnStatement MethodInvocation MemberReference implementationClass MemberReference methodName MemberReference arity MemberReference visibility MemberReference scope MemberReference scriptObject MemberReference callConfig	0
MethodDeclaration Modifier private addMethodGuard FormalParameter ReferenceType IR_Method m FormalParameter ReferenceType Label deoptLabel FormalParameter ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType CodeVersion versionMap FormalParameter ReferenceType ListIterator instrs LocalVariableDeclaration ReferenceType String VariableDeclarator fullName MethodInvocation m LocalVariableDeclaration ReferenceType CodeVersion VariableDeclarator knownVersion MethodInvocation versionMap MemberReference fullName get LocalVariableDeclaration ReferenceType CodeVersion VariableDeclarator MethodInvocation m IfStatement BinaryOperation || BinaryOperation == MemberReference knownVersion Literal null BinaryOperation != MemberReference knownVersion MemberReference BlockStatement StatementExpression MethodInvocation instrs ClassCreator ReferenceType MethodInvocation m MemberReference m MethodInvocation m MemberReference deoptLabel add StatementExpression MethodInvocation versionMap MemberReference fullName MemberReference put	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "protected" ElementValuePair rest Literal true ElementValuePair visibility MemberReference PRIVATE ElementValuePair writes MemberReference VISIBILITY ReferenceType RubyModule FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject args StatementExpression MethodInvocation MemberReference context MemberReference args MemberReference PROTECTED setVisibility ReturnStatement This	0
MethodDeclaration Modifier public final BasicType int intValue FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject obj ReturnStatement Cast BasicType int MethodInvocation Util MemberReference obj uint32Value	1
MethodDeclaration Modifier public FormalParameter BasicType boolean ThrowStatement MethodInvocation ex	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ReferenceType IRubyObject sum FormalParameter ReferenceType ThreadContext context ReturnStatement MethodInvocation MemberReference context Literal 16	0
MethodDeclaration Modifier public BasicType long getAddress ReturnStatement MemberReference address	0
MethodDeclaration Modifier private static ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject clazz FormalParameter ReferenceType IRubyObject num FormalParameter ReferenceType IRubyObject den LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator res MethodInvocation MemberReference context MemberReference den MethodInvocation RubyFixnum MemberReference runtime zero f_cmp IfStatement BinaryOperation == MemberReference res MethodInvocation RubyFixnum MemberReference runtime minus_one BlockStatement StatementExpression Assignment MemberReference num MethodInvocation MemberReference context MemberReference num f_negate = StatementExpression Assignment MemberReference den MethodInvocation MemberReference context MemberReference den f_negate = IfStatement BinaryOperation == MemberReference res MethodInvocation RubyFixnum MemberReference runtime zero BlockStatement ThrowStatement MethodInvocation runtime newZeroDivisionError IfStatement MemberReference Numeric CANON BlockStatement IfStatement BinaryOperation && MethodInvocation MemberReference context MemberReference den f_one_p MemberReference canonicalization ReturnStatement MemberReference num ReturnStatement ClassCreator ReferenceType RubyRational MethodInvocation context getRuntime MemberReference clazz MemberReference num MemberReference den	1
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject taint FormalParameter ReferenceType ThreadContext context ReturnStatement This	0
MethodDeclaration Modifier public ReferenceType RaiseException FormalParameter ReferenceType String message ReturnStatement MethodInvocation MethodInvocation MethodInvocation Literal fastGetClass getErrno MemberReference message newRaiseException	0
MethodDeclaration Modifier public ReferenceType Object case389_line1470 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support MethodInvocation Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 4 MemberReference yyTop yyVals getPosition Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 3 MemberReference yyTop yyVals Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals newWhenNode = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ReferenceType IRubyObject fileno ReturnStatement MethodInvocation MethodInvocation getNil getRuntime	0
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject args AssertStatement BinaryOperation != MemberReference args Literal null LocalVariableDeclaration ReferenceType DynamicMethod VariableDeclarator method MethodInvocation MemberReference name searchMethod IfStatement MethodInvocation MemberReference method BlockStatement ReturnStatement MethodInvocation RuntimeHelpers MemberReference context MemberReference self MethodInvocation method getVisibility MemberReference name MemberReference CallType FUNCTIONAL MemberReference args MemberReference Block NULL_BLOCK ReturnStatement MethodInvocation method MemberReference context MemberReference self This MemberReference name MemberReference args call	1
MethodDeclaration Modifier public ReferenceType NodeType getNodeType ReturnStatement MemberReference NodeType	0
MethodDeclaration Modifier public FormalParameter ReferenceType String home StatementExpression Assignment MemberReference jrubyHome MethodInvocation MemberReference home =	0
MethodDeclaration Modifier public static Annotation Deprecated ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject value FormalParameter ReferenceType Ruby runtime ReturnStatement MethodInvocation MemberReference runtime MemberReference value	1
MethodDeclaration Modifier public final ReferenceType IRubyObject fromNative FormalParameter ReferenceType ThreadContext context FormalParameter BasicType int value ReturnStatement MethodInvocation Util MethodInvocation context getRuntime MemberReference value newUnsigned32	1
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter BasicType long other ReturnStatement MethodInvocation MemberReference other subtractFixnum	1
MethodDeclaration Modifier public ReferenceType Operand FormalParameter ReferenceType MatchNode FormalParameter ReferenceType IR_Scope m LocalVariableDeclaration ReferenceType Variable VariableDeclarator ret MethodInvocation m getNewVariable LocalVariableDeclaration ReferenceType Operand VariableDeclarator regexp MethodInvocation MethodInvocation MemberReference m build StatementExpression MethodInvocation m ClassCreator ReferenceType MemberReference ret MemberReference MethAddr ArrayCreator ReferenceType Operand ArrayInitializer MemberReference regexp addInstr ReturnStatement MemberReference ret	0
MethodDeclaration Modifier public ReferenceType IRubyObject slice_bang FormalParameter ReferenceType IRubyObject args SwitchStatement MemberReference args length SwitchStatementCase Literal 1 ReturnStatement MethodInvocation MemberReference ArraySelector Literal 0 args slice_bang SwitchStatementCase Literal 2 ReturnStatement MethodInvocation MemberReference ArraySelector Literal 0 args MemberReference ArraySelector Literal 1 args slice_bang SwitchStatementCase StatementExpression MethodInvocation Arity MethodInvocation getRuntime MemberReference args length Literal 1 Literal 2 raiseArgumentError ReturnStatement Literal null	1
MethodDeclaration Modifier public Annotation Override assign FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block block StatementExpression MethodInvocation parameter1 MemberReference runtime MemberReference context MemberReference self MethodInvocation runtime getNil MemberReference block Literal false assign StatementExpression MethodInvocation parameter2 MemberReference runtime MemberReference context MemberReference self MethodInvocation runtime getNil MemberReference block Literal false assign StatementExpression MethodInvocation rest MemberReference runtime MemberReference context MemberReference self MethodInvocation runtime MemberReference IRubyObject MemberReference block Literal true assign	0
MethodDeclaration Modifier public ReferenceType Operand FormalParameter ReferenceType ConstDeclNode constDeclNode FormalParameter ReferenceType IR_Scope s FormalParameter ReferenceType Operand val LocalVariableDeclaration ReferenceType Node VariableDeclarator constNode MethodInvocation constDeclNode IfStatement BinaryOperation == MemberReference constNode Literal null BlockStatement StatementExpression MethodInvocation s MethodInvocation constDeclNode getName MemberReference val IfStatement BinaryOperation == MethodInvocation constNode getNodeType MemberReference NodeType COLON2NODE BlockStatement LocalVariableDeclaration ReferenceType Operand VariableDeclarator module MethodInvocation Cast ReferenceType Colon2Node MemberReference constNode MemberReference s build StatementExpression MethodInvocation s ClassCreator ReferenceType MemberReference module MethodInvocation constDeclNode getName MemberReference val addInstr BlockStatement StatementExpression MethodInvocation s ClassCreator ReferenceType MethodInvocation s getSelf MethodInvocation constDeclNode getName MemberReference val addInstr ReturnStatement MemberReference val	0
MethodDeclaration Modifier public ReferenceType Object case194_line791 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals backrefAssignError ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public BasicType boolean wasBeginOfLine ReturnStatement BinaryOperation == MemberReference Literal '\n'	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals Literal "~" getOperatorCallNode = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType JavaMethodDescriptor desc FormalParameter ReferenceType MethodFactory LocalVariableDeclaration ReferenceType JRubyMethod VariableDeclarator jrubyMethod MemberReference desc anno IfStatement BinaryOperation == MemberReference jrubyMethod Literal null ReturnStatement Literal false IfStatement BinaryOperation || BinaryOperation == MethodInvocation jrubyMethod compat MemberReference CompatVersion BinaryOperation == MethodInvocation MethodInvocation getInstanceConfig MethodInvocation getRuntime MethodInvocation jrubyMethod compat BlockStatement LocalVariableDeclaration ReferenceType DynamicMethod VariableDeclarator MethodInvocation This MemberReference desc getAnnotatedMethod StatementExpression MethodInvocation This MemberReference desc MemberReference define ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration Modifier public Annotation Override invalidateCacheDescendants StatementExpression SuperMethodInvocation invalidateCacheDescendants SynchronizedStatement MethodInvocation runtime getHierarchyLock LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType RubyClass VariableDeclarator mySubclasses MemberReference subclasses IfStatement BinaryOperation != MemberReference mySubclasses Literal null ForStatement EnhancedForControl VariableDeclaration ReferenceType RubyClass VariableDeclarator subclass MemberReference mySubclasses BlockStatement StatementExpression MethodInvocation subclass invalidateCacheDescendants	1
MethodDeclaration Modifier protected ReferenceType LoadServiceResource FormalParameter ReferenceType String namePlusSuffix FormalParameter ReferenceType String loadPathEntry LocalVariableDeclaration ReferenceType LoadServiceResource VariableDeclarator foundResource Literal null LocalVariableDeclaration ReferenceType JarFile VariableDeclarator current MethodInvocation MemberReference loadPathEntry get LocalVariableDeclaration BasicType boolean VariableDeclarator isFileJarUrl BinaryOperation && MethodInvocation loadPathEntry Literal "file:" startsWith BinaryOperation != MethodInvocation loadPathEntry Literal "!/" indexOf Literal - 1 LocalVariableDeclaration ReferenceType String VariableDeclarator after TernaryExpression MemberReference isFileJarUrl BinaryOperation + MethodInvocation loadPathEntry BinaryOperation + MethodInvocation loadPathEntry Literal "!/" indexOf Literal 2 substring Literal "/" Literal "" LocalVariableDeclaration ReferenceType String VariableDeclarator before TernaryExpression MemberReference isFileJarUrl MethodInvocation loadPathEntry Literal 0 MethodInvocation loadPathEntry Literal "!/" indexOf substring MemberReference loadPathEntry IfStatement BinaryOperation == Literal null MemberReference current BlockStatement TryStatement IfStatement MethodInvocation loadPathEntry Literal startsWith BlockStatement StatementExpression Assignment MemberReference current ClassCreator ReferenceType JarFile MethodInvocation loadPathEntry Literal 4 substring = IfStatement MethodInvocation loadPathEntry Literal ".jar" endsWith BlockStatement StatementExpression Assignment MemberReference current ClassCreator ReferenceType JarFile MemberReference loadPathEntry = BlockStatement StatementExpression Assignment MemberReference current ClassCreator ReferenceType JarFile MethodInvocation loadPathEntry Literal 5 MethodInvocation loadPathEntry Literal "!/" indexOf substring = StatementExpression MethodInvocation MemberReference loadPathEntry MemberReference current put CatchClause CatchClauseParameter ZipException ignored IfStatement MethodInvocation runtime MethodInvocation isVerbose getInstanceConfig BlockStatement StatementExpression MethodInvocation runtime MethodInvocation BinaryOperation + BinaryOperation + Literal trying to access " MemberReference loadPathEntry Literal ", stack trace follows:" println StatementExpression MethodInvocation ignored MethodInvocation runtime printStackTrace CatchClause CatchClauseParameter FileNotFoundException ignored CatchClause CatchClauseParameter IOException e ThrowStatement MethodInvocation runtime MemberReference e newIOErrorFromException LocalVariableDeclaration ReferenceType String VariableDeclarator canonicalEntry BinaryOperation + MemberReference after MemberReference namePlusSuffix IfStatement BinaryOperation != MemberReference current Literal null BlockStatement StatementExpression MethodInvocation Literal BinaryOperation + BinaryOperation + MethodInvocation current getName Literal "!/" MemberReference canonicalEntry debugLogTry IfStatement BinaryOperation != MethodInvocation current MemberReference canonicalEntry getJarEntry Literal null BlockStatement TryStatement IfStatement MethodInvocation loadPathEntry Literal ".jar" endsWith BlockStatement StatementExpression Assignment MemberReference foundResource ClassCreator ReferenceType LoadServiceResource ClassCreator ReferenceType URL BinaryOperation + BinaryOperation + BinaryOperation + Literal "jar:file:" MemberReference loadPathEntry Literal "!/" MemberReference canonicalEntry BinaryOperation + Literal "/" MemberReference namePlusSuffix = IfStatement MethodInvocation loadPathEntry Literal "file:" startsWith BlockStatement StatementExpression Assignment MemberReference foundResource ClassCreator ReferenceType LoadServiceResource ClassCreator ReferenceType URL BinaryOperation + BinaryOperation + BinaryOperation + Literal MemberReference before Literal "!/" MemberReference canonicalEntry BinaryOperation + BinaryOperation + MemberReference loadPathEntry Literal "/" MemberReference namePlusSuffix = BlockStatement StatementExpression Assignment MemberReference foundResource ClassCreator ReferenceType LoadServiceResource ClassCreator ReferenceType URL BinaryOperation + BinaryOperation + BinaryOperation + Literal "jar:file:" MethodInvocation loadPathEntry Literal 4 substring Literal "!/" MemberReference namePlusSuffix BinaryOperation + MemberReference loadPathEntry MemberReference namePlusSuffix = StatementExpression MethodInvocation MemberReference foundResource debugLogFound CatchClause CatchClauseParameter MalformedURLException e ThrowStatement MethodInvocation runtime MemberReference e newIOErrorFromException ReturnStatement MemberReference foundResource	1
MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext ctx FormalParameter ReferenceType IRubyObject largs FormalParameter ReferenceType Block blk LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator larg MethodInvocation MemberReference runtime MemberReference largs checkArgs StatementExpression MethodInvocation ctx BinaryOperation + MethodInvocation ctx Literal 2 IfStatement MethodInvocation pattern MethodInvocation isTrue MemberReference ctx Literal "===" MemberReference larg callMethod BlockStatement LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator value MethodInvocation block MemberReference ctx MemberReference larg yield SynchronizedStatement MemberReference result StatementExpression MethodInvocation result MemberReference value append StatementExpression MethodInvocation ctx BinaryOperation - MethodInvocation ctx Literal 2 ReturnStatement MethodInvocation runtime getNil	0
MethodDeclaration Modifier public Annotation Override ReferenceType Node setIterNode FormalParameter ReferenceType Node ReturnStatement ClassCreator ReferenceType MethodInvocation getPosition MethodInvocation getReceiverNode MethodInvocation getName MethodInvocation getArgsNode Cast ReferenceType IterNode MemberReference	0
MethodDeclaration Modifier public static ReferenceType RubyModule FormalParameter ReferenceType Ruby runtime LocalVariableDeclaration ReferenceType RubyModule VariableDeclarator MethodInvocation runtime Literal StatementExpression MethodInvocation runtime MemberReference StatementExpression MethodInvocation ClassReference ReferenceType RubyComparable defineAnnotatedMethods ReturnStatement MemberReference	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "do_not_reverse_lookup=" ElementValuePair meta Literal true ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject flag StatementExpression MethodInvocation recv MethodInvocation MethodInvocation flag isTrue getRuntime ReturnStatement TernaryExpression MethodInvocation recv MethodInvocation getRuntime MethodInvocation recv MethodInvocation getTrue getRuntime MethodInvocation recv MethodInvocation getFalse getRuntime	1
MethodDeclaration Modifier public BasicType boolean IfStatement BinaryOperation && MethodInvocation BinaryOperation || MemberReference BinaryOperation != MemberReference Literal null BlockStatement ReturnStatement Literal true ReturnStatement MethodInvocation	0
MethodDeclaration Modifier protected BasicType int FormalParameter ReferenceType Object key IfStatement BinaryOperation == MemberReference key Literal null ReturnStatement Literal 0 ReturnStatement MethodInvocation key hashCode	1
MethodDeclaration Modifier public ReferenceType Object case250_line970 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType Long MethodInvocation lexer MethodInvocation begin getCmdArgumentState = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public Annotation Override ReferenceType DynamicScope ReturnStatement ClassCreator ReferenceType MemberReference staticScope MemberReference parent	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "slice!" ElementValuePair reads MemberReference BACKREF ElementValuePair writes MemberReference BACKREF ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject slice_bang19 FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator result MethodInvocation MemberReference context MemberReference arg0 MemberReference arg1 op_aref19 IfStatement MethodInvocation result isNil BlockStatement StatementExpression MethodInvocation modifyCheck BlockStatement StatementExpression MethodInvocation MemberReference context MemberReference arg0 MemberReference arg1 MethodInvocation RubyString MethodInvocation context getRuntime newEmptyString op_aset19 ReturnStatement MemberReference result	1
MethodDeclaration Modifier protected FormalParameter ReferenceType String file RaiseException IfStatement MethodInvocation file Literal "" equals BlockStatement ThrowStatement MethodInvocation runtime BinaryOperation + Literal "No such file to load -- " MemberReference file newLoadError	1
MethodDeclaration Modifier public ReferenceType NodeType getNodeType ReturnStatement MemberReference NodeType DEFNNODE	0
MethodDeclaration Modifier public ReferenceType Object case307_line1190 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression MethodInvocation lexer MemberReference LexState EXPR_FNAME setState ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ReferenceType RubyBoolean directory_p ReturnStatement MethodInvocation MethodInvocation MethodInvocation stat isDirectory newBoolean getRuntime	1
MethodDeclaration Modifier public load FormalParameter ReferenceType Ruby runtime FormalParameter BasicType boolean wrap LocalVariableDeclaration ReferenceType RubyModule VariableDeclarator configModule MethodInvocation runtime Literal StatementExpression MethodInvocation configModule ClassReference ReferenceType defineAnnotatedMethods LocalVariableDeclaration ReferenceType RubyHash VariableDeclarator configHash MethodInvocation RubyHash MemberReference runtime StatementExpression MethodInvocation configModule Literal "CONFIG" MemberReference configHash defineConstant StatementExpression MethodInvocation runtime MethodInvocation Literal MemberReference configModule defineConstant getObject LocalVariableDeclaration ReferenceType String VariableDeclarator versionParts MethodInvocation Literal "\\." split StatementExpression MethodInvocation MemberReference configHash Literal MemberReference ArraySelector Literal 0 versionParts setConfig StatementExpression MethodInvocation MemberReference configHash Literal MemberReference ArraySelector Literal 1 versionParts setConfig StatementExpression MethodInvocation MemberReference configHash Literal MemberReference ArraySelector Literal 2 versionParts setConfig StatementExpression MethodInvocation MemberReference configHash Literal BinaryOperation + BinaryOperation + MemberReference ArraySelector Literal 0 versionParts Literal '.' MemberReference ArraySelector Literal 1 versionParts setConfig StatementExpression MethodInvocation MemberReference configHash Literal "arch" BinaryOperation + Literal MethodInvocation System Literal "java.specification.version" getProperty setConfig LocalVariableDeclaration ReferenceType String VariableDeclarator normalizedHome IfStatement MethodInvocation Ruby isSecurityRestricted BlockStatement StatementExpression Assignment MemberReference normalizedHome Literal = BlockStatement StatementExpression Assignment MemberReference normalizedHome MethodInvocation runtime = StatementExpression MethodInvocation MemberReference configHash Literal ClassCreator MethodInvocation getPath ReferenceType NormalizedFile MemberReference normalizedHome Literal "bin" setConfig StatementExpression MethodInvocation MemberReference configHash Literal MethodInvocation setConfig StatementExpression MethodInvocation MemberReference configHash Literal MethodInvocation setConfig StatementExpression MethodInvocation MemberReference configHash Literal MethodInvocation setConfig StatementExpression MethodInvocation MemberReference configHash Literal MemberReference normalizedHome setConfig StatementExpression MethodInvocation MemberReference configHash Literal MemberReference normalizedHome setConfig StatementExpression MethodInvocation MemberReference configHash Literal MethodInvocation getOSName setConfig StatementExpression MethodInvocation MemberReference configHash Literal MethodInvocation System Literal "java.vendor" getProperty setConfig StatementExpression MethodInvocation MemberReference configHash Literal MemberReference Platform setConfig StatementExpression MethodInvocation MemberReference configHash Literal MethodInvocation getOSName setConfig StatementExpression MethodInvocation MemberReference configHash Literal MemberReference Platform setConfig LocalVariableDeclaration ReferenceType String VariableDeclarator jrubyJarFile Literal LocalVariableDeclaration ReferenceType URL VariableDeclarator jrubyPropertiesUrl MethodInvocation Ruby MethodInvocation MemberReference Constants JRUBY_PROPERTIES getResource getClassLoader IfStatement BinaryOperation != MemberReference jrubyPropertiesUrl Literal null BlockStatement LocalVariableDeclaration ReferenceType Pattern VariableDeclarator jarFile MethodInvocation Pattern BinaryOperation + Literal MemberReference Constants JRUBY_PROPERTIES compile LocalVariableDeclaration ReferenceType Matcher VariableDeclarator jarMatcher MethodInvocation jarFile MethodInvocation jrubyPropertiesUrl toString matcher StatementExpression MethodInvocation jarMatcher find IfStatement MethodInvocation jarMatcher matches BlockStatement StatementExpression Assignment MemberReference jrubyJarFile MethodInvocation jarMatcher Literal 1 group = StatementExpression MethodInvocation MemberReference configHash Literal MemberReference jrubyJarFile setConfig StatementExpression MethodInvocation MemberReference configHash Literal MemberReference jrubyJarFile setConfig StatementExpression MethodInvocation MemberReference configHash Literal MemberReference Constants BUILD setConfig StatementExpression MethodInvocation MemberReference configHash Literal "target" MemberReference Constants setConfig LocalVariableDeclaration ReferenceType String VariableDeclarator libdir MethodInvocation System Literal getProperty IfStatement BinaryOperation == MemberReference libdir Literal null BlockStatement StatementExpression Assignment MemberReference libdir ClassCreator MethodInvocation getPath ReferenceType NormalizedFile MemberReference normalizedHome Literal "lib" = BlockStatement TryStatement StatementExpression Assignment MemberReference libdir ClassCreator MethodInvocation getCanonicalPath ReferenceType NormalizedFile MemberReference libdir = CatchClause CatchClauseParameter IOException e StatementExpression Assignment MemberReference libdir ClassCreator MethodInvocation getAbsolutePath ReferenceType NormalizedFile MemberReference libdir = LocalVariableDeclaration ReferenceType String VariableDeclarator rubyLibDir ClassCreator MethodInvocation getPath ReferenceType NormalizedFile MemberReference libdir Literal LocalVariableDeclaration ReferenceType String VariableDeclarator siteDir ClassCreator MethodInvocation getPath ReferenceType NormalizedFile MemberReference libdir Literal LocalVariableDeclaration ReferenceType String VariableDeclarator siteLibDir ClassCreator MethodInvocation getPath ReferenceType NormalizedFile MemberReference libdir Literal LocalVariableDeclaration ReferenceType String VariableDeclarator siteArchDir ClassCreator MethodInvocation getPath ReferenceType NormalizedFile MemberReference libdir Literal LocalVariableDeclaration ReferenceType String VariableDeclarator archDir ClassCreator MethodInvocation getPath ReferenceType NormalizedFile MemberReference libdir Literal LocalVariableDeclaration ReferenceType String VariableDeclarator shareDir ClassCreator MethodInvocation getPath ReferenceType NormalizedFile MemberReference normalizedHome Literal "share" StatementExpression MethodInvocation MemberReference configHash Literal "libdir" MemberReference libdir setConfig StatementExpression MethodInvocation MemberReference configHash Literal "rubylibdir" MemberReference rubyLibDir setConfig StatementExpression MethodInvocation MemberReference configHash Literal "sitedir" MemberReference siteDir setConfig StatementExpression MethodInvocation MemberReference configHash Literal "sitelibdir" MemberReference siteLibDir setConfig StatementExpression MethodInvocation MemberReference configHash Literal MemberReference siteArchDir setConfig StatementExpression MethodInvocation MemberReference configHash Literal MemberReference archDir setConfig StatementExpression MethodInvocation MemberReference configHash Literal MemberReference archDir setConfig StatementExpression MethodInvocation MemberReference configHash Literal "configure_args" Literal "" setConfig StatementExpression MethodInvocation MemberReference configHash Literal MemberReference shareDir setConfig StatementExpression MethodInvocation MemberReference configHash Literal "mandir" ClassCreator MethodInvocation getPath ReferenceType NormalizedFile MemberReference normalizedHome Literal "man" setConfig StatementExpression MethodInvocation MemberReference configHash Literal "sysconfdir" ClassCreator MethodInvocation getPath ReferenceType NormalizedFile MemberReference normalizedHome Literal setConfig StatementExpression MethodInvocation MemberReference configHash Literal "localstatedir" ClassCreator MethodInvocation getPath ReferenceType NormalizedFile MemberReference normalizedHome Literal "var" setConfig StatementExpression MethodInvocation MemberReference configHash Literal Literal "jar" setConfig IfStatement MemberReference Platform IS_WINDOWS BlockStatement StatementExpression MethodInvocation MemberReference configHash Literal "EXEEXT" Literal ".exe" setConfig BlockStatement StatementExpression MethodInvocation MemberReference configHash Literal "EXEEXT" Literal "" setConfig IfStatement MethodInvocation runtime is1_9 BlockStatement StatementExpression MethodInvocation MemberReference configHash Literal ClassCreator MethodInvocation getPath ReferenceType NormalizedFile MemberReference shareDir Literal setConfig LocalVariableDeclaration ReferenceType RubyHash VariableDeclarator mkmfHash MethodInvocation RubyHash MemberReference runtime StatementExpression MethodInvocation MemberReference mkmfHash Literal "libdir" MemberReference libdir setConfig StatementExpression MethodInvocation MemberReference mkmfHash Literal "arch" Literal "java" setConfig StatementExpression MethodInvocation MemberReference mkmfHash Literal "rubylibdir" MemberReference rubyLibDir setConfig StatementExpression MethodInvocation MemberReference mkmfHash Literal "sitedir" MemberReference siteDir setConfig StatementExpression MethodInvocation MemberReference mkmfHash Literal "sitelibdir" MemberReference siteLibDir setConfig StatementExpression MethodInvocation MemberReference mkmfHash Literal Literal "java" setConfig StatementExpression MethodInvocation MemberReference mkmfHash Literal MemberReference siteArchDir setConfig StatementExpression MethodInvocation MemberReference mkmfHash Literal MemberReference archDir setConfig StatementExpression MethodInvocation MemberReference mkmfHash Literal MemberReference archDir setConfig StatementExpression MethodInvocation MemberReference mkmfHash Literal "configure_args" Literal "" setConfig StatementExpression MethodInvocation MemberReference mkmfHash Literal ClassCreator MethodInvocation getPath ReferenceType NormalizedFile MemberReference normalizedHome Literal "share" setConfig StatementExpression MethodInvocation MemberReference mkmfHash Literal "mandir" ClassCreator MethodInvocation getPath ReferenceType NormalizedFile MemberReference normalizedHome Literal "man" setConfig StatementExpression MethodInvocation MemberReference mkmfHash Literal "sysconfdir" ClassCreator MethodInvocation getPath ReferenceType NormalizedFile MemberReference normalizedHome Literal setConfig StatementExpression MethodInvocation MemberReference mkmfHash Literal "localstatedir" ClassCreator MethodInvocation getPath ReferenceType NormalizedFile MemberReference normalizedHome Literal "var" setConfig StatementExpression MethodInvocation MemberReference configModule MemberReference mkmfHash setupMakefileConfig	1
MethodDeclaration Modifier public load FormalParameter Modifier final ReferenceType Ruby runtime FormalParameter BasicType boolean wrap IOException StatementExpression MethodInvocation MemberReference runtime	0
MethodDeclaration Modifier public ReferenceType Object case233_line928 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support MethodInvocation Cast ReferenceType ListNode MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals getPosition ClassCreator ReferenceType Hash19Node MethodInvocation getPosition Cast ReferenceType ListNode MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals newArrayNode = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public ReferenceType Object case380_line1436 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals ClassCreator ReferenceType Token Literal "call" Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals Literal null new_call = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block block FormalParameter ReferenceType staticScope LocalVariableDeclaration ReferenceType RubyModule VariableDeclarator implementationClass MethodInvocation staticScope getModule IfStatement BinaryOperation == MemberReference implementationClass Literal null BlockStatement StatementExpression Assignment MemberReference implementationClass MemberReference clazz = StatementExpression MethodInvocation MemberReference clazz MemberReference name MemberReference self MemberReference block StatementExpression MethodInvocation MethodInvocation staticScope StatementExpression MethodInvocation MemberReference implementationClass	1
MethodDeclaration Modifier private final BasicType int bufferedBytesAvailable ReturnStatement BinaryOperation + MethodInvocation buffer remaining TernaryExpression BinaryOperation && MemberReference reading BinaryOperation != MemberReference ungotc Literal - 1 Literal 1 Literal 0	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair module Literal true ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self ReturnStatement MethodInvocation MemberReference context MemberReference self MemberReference Block NULL_BLOCK	0
MethodDeclaration Modifier public put FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType StructLayout ReferenceType Storage cache FormalParameter ReferenceType IRubyObject ptr FormalParameter ReferenceType IRubyObject value LocalVariableDeclaration ReferenceType ByteList VariableDeclarator bl MethodInvocation value MethodInvocation getByteList convertToString StatementExpression MethodInvocation MethodInvocation MemberReference offset MethodInvocation bl unsafeBytes MethodInvocation bl begin MethodInvocation Math MethodInvocation bl length BinaryOperation - MemberReference length Literal 1 min MemberReference ptr getMemoryIO	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ">=" ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject op_ge19 FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject other IfStatement BinaryOperation instanceof MemberReference other ReferenceType RubyFixnum ReturnStatement MethodInvocation RubyBoolean MethodInvocation context getRuntime BinaryOperation >= MemberReference value Cast ReferenceType RubyFixnum MemberReference other newBoolean ReturnStatement MethodInvocation MemberReference context MemberReference other op_geOther	1
MethodDeclaration Modifier public ReferenceType Object case328_line1251 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals newArrayNode = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public ReferenceType ReturnStatement MemberReference staticScope	1
MethodDeclaration Modifier public ReferenceType Object case277_line1038 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop IfStatement BinaryOperation != Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals Literal null BlockStatement StatementExpression Cast ReferenceType ISourcePositionHolder Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals StatementExpression Assignment MemberReference yyVal Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public final ReferenceType IRubyObject fromNative FormalParameter ReferenceType ThreadContext context FormalParameter BasicType long value ReturnStatement MethodInvocation context MethodInvocation getNil getRuntime	1
MethodDeclaration Modifier public ReferenceType RubyClass ReturnStatement MemberReference	0
MethodDeclaration Modifier public final marshal FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType InvocationBuffer buffer FormalParameter ReferenceType IRubyObject parameter StatementExpression MethodInvocation buffer MethodInvocation Util MemberReference parameter int64Value putLong	1
MethodDeclaration Modifier public Annotation Override ReferenceType Arity ReturnStatement MemberReference Arity	0
MethodDeclaration Modifier static FormalParameter ReferenceType Ruby runtime LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator MethodInvocation runtime Literal "BasicSocket" MethodInvocation runtime MemberReference defineClass StatementExpression MethodInvocation ClassReference ReferenceType defineAnnotatedMethods	1
MethodDeclaration Modifier public ReferenceType String getFile ReturnStatement MemberReference file	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "reverse!" ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType RubyString FormalParameter ReferenceType ThreadContext context IfStatement BinaryOperation > MemberReference value realSize Literal 1 BlockStatement StatementExpression MethodInvocation modifyAndKeepCodeRange LocalVariableDeclaration BasicType byte VariableDeclarator bytes MemberReference value bytes LocalVariableDeclaration BasicType int VariableDeclarator p MemberReference value begin LocalVariableDeclaration BasicType int VariableDeclarator len MemberReference value realSize LocalVariableDeclaration ReferenceType Encoding VariableDeclarator enc MemberReference value encoding IfStatement MethodInvocation MemberReference enc singleByteOptimizable BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i BinaryOperation >> MemberReference len Literal 1 MemberReference ++ i BlockStatement LocalVariableDeclaration BasicType byte VariableDeclarator b MemberReference ArraySelector BinaryOperation + MemberReference p MemberReference i bytes StatementExpression Assignment MemberReference ArraySelector BinaryOperation + MemberReference p MemberReference i bytes MemberReference ArraySelector BinaryOperation - BinaryOperation - BinaryOperation + MemberReference p MemberReference len MemberReference i Literal 1 bytes = StatementExpression Assignment MemberReference ArraySelector BinaryOperation - BinaryOperation - BinaryOperation + MemberReference p MemberReference len MemberReference i Literal 1 bytes MemberReference b = BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator end BinaryOperation + MemberReference p MemberReference len LocalVariableDeclaration BasicType int VariableDeclarator op MemberReference len LocalVariableDeclaration BasicType byte VariableDeclarator obytes ArrayCreator BasicType byte MemberReference len LocalVariableDeclaration BasicType boolean VariableDeclarator single Literal true WhileStatement BinaryOperation < MemberReference p MemberReference end BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator cl MethodInvocation StringSupport MemberReference enc MemberReference bytes MemberReference p MemberReference end length IfStatement BinaryOperation || BinaryOperation > MemberReference cl Literal 1 BinaryOperation != BinaryOperation & MemberReference ArraySelector MemberReference p bytes Literal 0x80 Literal 0 BlockStatement StatementExpression Assignment MemberReference single Literal false = StatementExpression Assignment MemberReference op MemberReference cl -= StatementExpression MethodInvocation System MemberReference bytes MemberReference p MemberReference obytes MemberReference op MemberReference cl arraycopy StatementExpression Assignment MemberReference p MemberReference cl += BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference -- op obytes MemberReference ArraySelector MemberReference ++ p bytes = StatementExpression Assignment MemberReference value bytes MemberReference obytes = IfStatement BinaryOperation == MethodInvocation getCodeRange MemberReference CR_UNKNOWN StatementExpression MethodInvocation TernaryExpression MemberReference single MemberReference CR_7BIT MemberReference CR_VALID setCodeRange ReturnStatement This	1
MethodDeclaration Modifier public ReferenceType String getTypeInstance FormalParameter BasicType long i FormalParameter ReferenceType Object o FormalParameter ReferenceType Object o2 FormalParameter ReferenceType Object ReturnStatement Literal	0
MethodDeclaration Modifier private ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject step FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime IfStatement BinaryOperation && BinaryOperation && BinaryOperation instanceof MemberReference begin ReferenceType RubyFixnum BinaryOperation instanceof MemberReference end ReferenceType RubyFixnum BinaryOperation instanceof MemberReference step ReferenceType RubyFixnum BlockStatement StatementExpression MethodInvocation MemberReference context MemberReference runtime Cast ReferenceType RubyFixnum MemberReference step MemberReference block IfStatement BinaryOperation || BinaryOperation || BinaryOperation instanceof MemberReference begin ReferenceType RubyFloat BinaryOperation instanceof MemberReference end ReferenceType RubyFloat BinaryOperation instanceof MemberReference step ReferenceType RubyFloat BlockStatement StatementExpression MethodInvocation RubyNumeric MemberReference context MemberReference runtime MemberReference begin MemberReference end MemberReference step MemberReference isExclusive MemberReference block IfStatement BinaryOperation || BinaryOperation || BinaryOperation instanceof MemberReference begin ReferenceType RubyNumeric MethodInvocation ! MethodInvocation isNil MemberReference runtime MemberReference begin Literal "to_int" checkIntegerType MethodInvocation ! MethodInvocation isNil MemberReference runtime MemberReference end Literal "to_int" checkIntegerType BlockStatement StatementExpression MethodInvocation MemberReference context MemberReference runtime MemberReference step MemberReference block BlockStatement LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator tmp MethodInvocation begin checkStringType IfStatement MethodInvocation ! tmp isNil BlockStatement LocalVariableDeclaration ReferenceType StepBlockCallBack VariableDeclarator ClassCreator ReferenceType StepBlockCallBack MemberReference block MethodInvocation RubyFixnum MemberReference runtime one MemberReference step LocalVariableDeclaration ReferenceType Block VariableDeclarator blockCallback MethodInvocation This MethodInvocation runtime getRange MethodInvocation Arity singleArgument MemberReference MemberReference context StatementExpression Cast ReferenceType RubyString MemberReference tmp BlockStatement IfStatement MethodInvocation ! begin Literal "succ" respondsTo ThrowStatement MethodInvocation runtime BinaryOperation + Literal "can't iterate from " MethodInvocation begin MethodInvocation getName getMetaClass newTypeError StatementExpression MethodInvocation MemberReference context ClassCreator ReferenceType StepBlockCallBack MemberReference block MethodInvocation RubyFixnum MemberReference runtime one MemberReference step rangeEach ReturnStatement This	1
MethodDeclaration Modifier public call FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation MemberReference value MemberReference context Literal true compile StatementExpression MethodInvocation context pollThreadEvents	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MethodInvocation m	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType FormalParameter ReferenceType Type type ThrowStatement MethodInvocation context MethodInvocation MemberReference NOREASON MethodInvocation context MethodInvocation ArrayCreator ReferenceType IRubyObject ArrayInitializer MemberReference arg0 MemberReference arg1 newArrayNoCopy getRuntime Literal "yield out of getRuntime	0
MethodDeclaration Modifier public setMethodAdapter FormalParameter ReferenceType SkinnyMethodAdapter StatementExpression Assignment This MemberReference method MemberReference =	0
MethodDeclaration Modifier public final ReferenceType RubyRegexp FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType String name FormalParameter BasicType int options ReturnStatement MethodInvocation runtimeCache MemberReference runtime Literal 7 MemberReference name MemberReference options	0
MethodDeclaration Modifier public dup StatementExpression MethodInvocation MethodInvocation MemberReference DUP visitInsn getMethodVisitor	0
MethodDeclaration Modifier protected init FormalParameter ReferenceType RubyModule implementationClass FormalParameter ReferenceType Visibility visibility FormalParameter ReferenceType CallConfiguration callConfig StatementExpression Assignment This MemberReference visibility MemberReference visibility = StatementExpression Assignment This MemberReference implementationClass MemberReference implementationClass = StatementExpression Assignment This MemberReference MethodInvocation MemberReference implementationClass = StatementExpression Assignment This MemberReference callConfig MemberReference callConfig = StatementExpression Assignment This MemberReference MethodInvocation implementationClass MethodInvocation getRuntime =	1
MethodDeclaration Modifier public Annotation SuppressWarnings Literal "unchecked" ReferenceType String getEnv LocalVariableDeclaration ReferenceType RubyHash VariableDeclarator hash Cast ReferenceType RubyHash MethodInvocation runtime MethodInvocation Literal fastGetConstant getObject LocalVariableDeclaration BasicType int VariableDeclarator i Literal 0 LocalVariableDeclaration ReferenceType String VariableDeclarator env ArrayCreator ReferenceType String MethodInvocation hash size ForStatement ForControl VariableDeclaration ReferenceType Iterator TypeArgument ReferenceType Entry TypeArgument ReferenceType Object TypeArgument ReferenceType Object VariableDeclarator iter MethodInvocation hash MethodInvocation iterator MethodInvocation iter hasNext MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType Map ReferenceType Entry TypeArgument ReferenceType Object TypeArgument ReferenceType Object VariableDeclarator entry MethodInvocation iter next StatementExpression Assignment MemberReference ArraySelector MemberReference i env BinaryOperation + BinaryOperation + MethodInvocation entry MethodInvocation toString getKey Literal "=" MethodInvocation entry MethodInvocation toString getValue = ReturnStatement MemberReference env	1
MethodDeclaration Modifier public final FormalParameter BasicType long offset FormalParameter BasicType long size FormalParameter BasicType byte value StatementExpression MethodInvocation BinaryOperation + MemberReference address MemberReference offset MemberReference size MemberReference value	0
MethodDeclaration Modifier public assignLocalVariable FormalParameter BasicType int index FormalParameter BasicType int depth FormalParameter BasicType boolean expr IfStatement BinaryOperation == MemberReference depth Literal 0 BlockStatement StatementExpression MethodInvocation MemberReference index MemberReference expr assignLocalVariable BlockStatement StatementExpression MethodInvocation MemberReference depth MemberReference index MemberReference expr	0
MethodDeclaration Modifier public ReferenceType Object case223_line876 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType ArrayNode MethodInvocation Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals getPosition = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public Annotation Deprecated ReferenceType IRubyObject FormalParameter ReferenceType Node scriptNode FormalParameter BasicType boolean unused ReturnStatement MethodInvocation MemberReference scriptNode	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ReferenceType IRubyObject ReturnStatement MethodInvocation MethodInvocation MemberReference isNaN newBoolean getRuntime	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal "closed?" Literal ReferenceType IRubyObject closed_p ReturnStatement TernaryExpression MemberReference closed MethodInvocation MethodInvocation getTrue getRuntime MethodInvocation MethodInvocation getFalse getRuntime	1
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject assign FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject value FormalParameter ReferenceType Block FormalParameter BasicType boolean checkArity LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator receiver MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator MethodInvocation arg1 MemberReference runtime MemberReference context MemberReference self MemberReference AssertStatement MethodInvocation MemberReference receiver MethodInvocation MemberReference receiver LocalVariableDeclaration ReferenceType CallSite VariableDeclarator MethodInvocation MemberReference self MemberReference receiver StatementExpression MethodInvocation MemberReference context MemberReference self MemberReference receiver MemberReference MemberReference value call ReturnStatement MethodInvocation runtime getNil	0
MethodDeclaration Modifier protected ReferenceType JavaCallable FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 FormalParameter ReferenceType IRubyObject arg3 LocalVariableDeclaration ReferenceType JavaCallable VariableDeclarator callable IfStatement BinaryOperation == Assignment MemberReference callable MemberReference javaCallable = Literal null BlockStatement LocalVariableDeclaration ReferenceType JavaCallable VariableDeclarator callablesForArity Literal null IfStatement BinaryOperation || BinaryOperation <= MemberReference javaCallables length Literal 4 BinaryOperation == Assignment MemberReference callablesForArity MemberReference ArraySelector Literal 4 javaCallables = Literal null BlockStatement ThrowStatement MethodInvocation self MethodInvocation Literal 4 BinaryOperation - MemberReference javaCallables length Literal 1 newArgumentError getRuntime StatementExpression Assignment MemberReference callable MethodInvocation CallableSelector MemberReference self MemberReference cache MemberReference callablesForArity MemberReference arg0 MemberReference arg1 MemberReference arg2 MemberReference arg3 = BlockStatement IfStatement BinaryOperation != MethodInvocation callable MemberReference length getParameterTypes Literal 4 BlockStatement ThrowStatement MethodInvocation self MethodInvocation Literal 4 MethodInvocation callable MemberReference length getParameterTypes newArgumentError getRuntime ReturnStatement MemberReference callable	1
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject get ReturnStatement MethodInvocation RuntimeHelpers MemberReference runtime MethodInvocation runtime getCurrentContext	0
MethodDeclaration Modifier public ReferenceType Operand FormalParameter ReferenceType GlobalAsgnNode globalAsgnNode FormalParameter ReferenceType IR_Scope m LocalVariableDeclaration ReferenceType Operand VariableDeclarator value MethodInvocation MethodInvocation globalAsgnNode getValueNode MemberReference m build StatementExpression MethodInvocation m ClassCreator ReferenceType MethodInvocation globalAsgnNode getName MemberReference value addInstr ReturnStatement MemberReference value	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal Literal "eof?" ReferenceType IRubyObject eof ReturnStatement MethodInvocation MethodInvocation MethodInvocation newBoolean getRuntime	0
MethodDeclaration Modifier private captureFeatureNewline LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator temp MemberReference sourceLine StatementExpression Assignment MemberReference sourceLine MemberReference lineBuffer = IfStatement BinaryOperation && BinaryOperation != MemberReference list Literal null BinaryOperation > MethodInvocation lineBuffer length Literal 0 StatementExpression MethodInvocation list MethodInvocation sourceLine toString add StatementExpression MethodInvocation temp Literal 0 setLength StatementExpression Assignment MemberReference lineBuffer MemberReference temp =	1
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject assign FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject value FormalParameter ReferenceType Block block FormalParameter BasicType boolean checkArity IfStatement BinaryOperation instanceof MemberReference value ReferenceType RubyArray BlockStatement StatementExpression Assignment MemberReference value MethodInvocation MemberReference runtime MemberReference value BinaryOperation != MemberReference pre Literal null = ReturnStatement MethodInvocation MemberReference runtime MemberReference context MemberReference self This Cast ReferenceType RubyArray MemberReference value MemberReference checkArity	0
MethodDeclaration Modifier public FormalParameter ReferenceType DynamicMethod method StatementExpression Assignment MemberReference MemberReference method =	0
MethodDeclaration Modifier public marshal FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType InvocationBuffer buffer FormalParameter ReferenceType IRubyObject value IfStatement MethodInvocation value isNil BlockStatement StatementExpression MethodInvocation buffer Literal 0 IfStatement BinaryOperation || BinaryOperation instanceof MemberReference value ReferenceType RubyProc MethodInvocation value Literal "call" respondsTo BlockStatement StatementExpression MethodInvocation MemberReference context MemberReference buffer MemberReference value BlockStatement ThrowStatement MethodInvocation context MethodInvocation Literal "wrong argument callable object" newTypeError getRuntime	0
MethodDeclaration Modifier public Annotation Override ReferenceType BigInteger ReturnStatement MethodInvocation BigInteger Cast BasicType long MemberReference value valueOf	0
MethodDeclaration FormalParameter ReferenceType VariableTableEntry table FormalParameter ReferenceType String name FormalParameter ReferenceType Object value LocalVariableDeclaration BasicType int VariableDeclarator index LocalVariableDeclaration BasicType int VariableDeclarator hash MethodInvocation name hashCode LocalVariableDeclaration ReferenceType VariableTableEntry VariableDeclarator e ForStatement ForControl Assignment MemberReference e MemberReference ArraySelector Assignment MemberReference index BinaryOperation & MemberReference hash BinaryOperation - MemberReference table length Literal 1 = table = BinaryOperation != MemberReference e Literal null Assignment MemberReference e MemberReference e next = Statement StatementExpression Assignment MemberReference e ClassCreator ReferenceType VariableTableEntry MemberReference hash MemberReference name MemberReference value MemberReference ArraySelector MemberReference index table = StatementExpression Assignment MemberReference ArraySelector MemberReference index table MemberReference e =	1
MethodDeclaration Modifier public compileConst FormalParameter ReferenceType Node node FormalParameter ReferenceType BodyCompiler context FormalParameter BasicType boolean expr LocalVariableDeclaration ReferenceType ConstNode VariableDeclarator constNode Cast ReferenceType ConstNode MemberReference node StatementExpression MethodInvocation context MethodInvocation constNode getName IfStatement MemberReference ! expr StatementExpression MethodInvocation context consumeCurrentValue	1
MethodDeclaration Modifier public ReferenceType Operand receiveArgs FormalParameter Modifier final ReferenceType ArgsNode argsNode FormalParameter ReferenceType IR_Scope s LocalVariableDeclaration Modifier final BasicType int VariableDeclarator required MethodInvocation argsNode getRequiredArgsCount LocalVariableDeclaration Modifier final BasicType int VariableDeclarator opt MethodInvocation argsNode getOptionalArgsCount LocalVariableDeclaration Modifier final BasicType int VariableDeclarator rest MethodInvocation argsNode getRestArg StatementExpression MethodInvocation s ClassCreator ReferenceType RECV_ARG_Instr MethodInvocation s getSelf Literal 0 addInstr LocalVariableDeclaration BasicType int VariableDeclarator argIndex Literal 1 LocalVariableDeclaration ReferenceType ListNode VariableDeclarator preArgs MethodInvocation argsNode getPre ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference required MemberReference ++ i MemberReference ++ argIndex BlockStatement LocalVariableDeclaration ReferenceType ArgumentNode VariableDeclarator a Cast ReferenceType ArgumentNode MethodInvocation preArgs MemberReference i get IfStatement BinaryOperation instanceof MemberReference a ReferenceType TypedArgumentNode BlockStatement LocalVariableDeclaration ReferenceType TypedArgumentNode VariableDeclarator t Cast ReferenceType TypedArgumentNode MemberReference a StatementExpression MethodInvocation s ClassCreator ReferenceType MemberReference argIndex MethodInvocation MethodInvocation t getTypeNode addInstr StatementExpression MethodInvocation s ClassCreator ReferenceType RECV_ARG_Instr ClassCreator ReferenceType Variable MethodInvocation a getName MemberReference argIndex addInstr IfStatement BinaryOperation != MethodInvocation argsNode getBlock Literal null StatementExpression MethodInvocation s ClassCreator ReferenceType ClassCreator ReferenceType Variable MethodInvocation argsNode MethodInvocation getName getBlock addInstr IfStatement BinaryOperation || BinaryOperation > MemberReference opt Literal 0 BinaryOperation > MemberReference rest Literal - 1 BlockStatement LocalVariableDeclaration ReferenceType ListNode VariableDeclarator optArgs MethodInvocation argsNode getOptArgs ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j Literal 0 BinaryOperation < MemberReference j MemberReference opt MemberReference ++ j MemberReference ++ argIndex BlockStatement LocalVariableDeclaration ReferenceType Label VariableDeclarator l MethodInvocation s getNewLabel LocalVariableDeclaration ReferenceType LocalAsgnNode VariableDeclarator n Cast ReferenceType LocalAsgnNode MethodInvocation optArgs MemberReference j get StatementExpression MethodInvocation s ClassCreator ReferenceType ClassCreator ReferenceType Variable MethodInvocation n getName MemberReference argIndex MemberReference l addInstr StatementExpression MethodInvocation MemberReference n MemberReference s build StatementExpression MethodInvocation s ClassCreator ReferenceType LABEL_Instr MemberReference l addInstr IfStatement BinaryOperation > MemberReference rest Literal - 1 BlockStatement StatementExpression MethodInvocation s ClassCreator ReferenceType RECV_ARG_Instr ClassCreator ReferenceType Variable MethodInvocation argsNode MethodInvocation getName MemberReference argIndex Literal true addInstr StatementExpression MemberReference ++ argIndex ReturnStatement Literal null	1
MethodDeclaration Modifier public BasicType boolean isOpen ReturnStatement BinaryOperation || BinaryOperation != MemberReference Literal null BinaryOperation != MemberReference Literal null	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject get LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator MethodInvocation runtime MethodInvocation Literal "$!" get getGlobalVariables LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator backtrace TernaryExpression MethodInvocation isNil MethodInvocation runtime getNil MethodInvocation MethodInvocation MethodInvocation getCurrentContext getRuntime Literal callMethod IfStatement BinaryOperation instanceof MemberReference backtrace ReferenceType RubyArray BlockStatement StatementExpression Assignment MemberReference backtrace MethodInvocation runtime getNil = ReturnStatement MemberReference backtrace	0
MethodDeclaration Modifier public ReferenceType Object case58_line512 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals new_super = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal "==" ReferenceType IRubyObject op_equal FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject rhs ReturnStatement Cast ReferenceType JavaObject MethodInvocation recv dataGetStruct	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "string" ReferenceType IRubyObject string IfStatement BinaryOperation == MemberReference internal Literal null BlockStatement ReturnStatement MethodInvocation MethodInvocation getNil getRuntime BlockStatement ReturnStatement MemberReference internal	0
MethodDeclaration Modifier public Annotation JRubyMethod ReferenceType RubyString to_s FormalParameter ReferenceType IRubyObject arg0 LocalVariableDeclaration BasicType int VariableDeclarator base MethodInvocation MemberReference arg0 num2int IfStatement BinaryOperation || BinaryOperation < MemberReference base Literal 2 BinaryOperation > MemberReference base Literal 36 BlockStatement ThrowStatement MethodInvocation MethodInvocation BinaryOperation + Literal "illegal radix " MemberReference base newArgumentError getRuntime ReturnStatement MethodInvocation MethodInvocation MethodInvocation Convert2 MemberReference value MemberReference base newString getRuntime	1
MethodDeclaration Modifier public visit FormalParameter ReferenceType IfStatement MemberReference USE_PACKED_ARRAY BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator table MemberReference packedVTable IfStatement BinaryOperation != MemberReference table Literal null BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference vTableSize MemberReference ++ i BlockStatement StatementExpression MethodInvocation Cast ReferenceType String MemberReference ArraySelector MemberReference i table MemberReference ArraySelector BinaryOperation + MemberReference i MemberReference MAX_PACKED table visit ReturnStatement IfStatement MemberReference USE_PACKED_FIELDS BlockStatement IfStatement BinaryOperation != MemberReference packedVFields Literal null BlockStatement StatementExpression MethodInvocation packedVFields MemberReference visit ReturnStatement LocalVariableDeclaration ReferenceType VariableTableEntry VariableDeclarator table MemberReference vTable ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MemberReference table length BinaryOperation >= MemberReference -- i Literal 0 BlockStatement ForStatement ForControl VariableDeclaration ReferenceType VariableTableEntry VariableDeclarator e MemberReference ArraySelector MemberReference i table BinaryOperation != MemberReference e Literal null Assignment MemberReference e MemberReference e next = BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator readValue MemberReference e value IfStatement BinaryOperation == MemberReference readValue Literal null BlockStatement SynchronizedStatement MemberReference object StatementExpression Assignment MemberReference readValue MemberReference e value = StatementExpression MethodInvocation MemberReference e name MemberReference readValue visit	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair meta Literal true ElementValuePair visibility MemberReference Visibility PRIVATE ReferenceType IRubyObject newInstanceBang FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject real FormalParameter ReferenceType IRubyObject image IfStatement BinaryOperation instanceof MemberReference real ReferenceType RubyNumeric StatementExpression Assignment MemberReference real MethodInvocation MemberReference context MemberReference real f_to_i = IfStatement BinaryOperation instanceof MemberReference image ReferenceType RubyNumeric StatementExpression Assignment MemberReference image MethodInvocation MemberReference context MemberReference image f_to_i = ReturnStatement ClassCreator ReferenceType RubyComplex MethodInvocation context getRuntime MemberReference recv MemberReference real MemberReference image	1
MethodDeclaration Modifier public static ReferenceType RubyString FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ByteList bytes FormalParameter ReferenceType Encoding enc FormalParameter BasicType int cr ReturnStatement MethodInvocation MemberReference runtime MethodInvocation runtime getString MemberReference bytes MemberReference enc MemberReference cr	0
MethodDeclaration Modifier private BasicType boolean FormalParameter Modifier final ReferenceType String name ForStatement ForControl VariableDeclaration ReferenceType RubyModule VariableDeclarator p This BinaryOperation != MemberReference p Literal null Assignment MemberReference p MethodInvocation p getSuperClass = BlockStatement IfStatement MethodInvocation p MemberReference name BlockStatement ReturnStatement Literal true ReturnStatement Literal false	0
MethodDeclaration Modifier public BasicType boolean isEmpty ReturnStatement Literal false	0
MethodDeclaration Modifier public FormalParameter ReferenceType Operand operand IfStatement MethodInvocation operand isConstant BlockStatement StatementExpression MethodInvocation Cast ReferenceType MemberReference operand IfStatement BinaryOperation instanceof MemberReference operand ReferenceType Variable BlockStatement StatementExpression MethodInvocation Cast ReferenceType Variable MemberReference operand	0
MethodDeclaration Modifier static FormalParameter ReferenceType Ruby runtime LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator rb_cUNIXServer MethodInvocation runtime Literal MethodInvocation runtime Literal "UNIXSocket" fastGetClass MemberReference defineClass StatementExpression MethodInvocation runtime MethodInvocation Literal MemberReference rb_cUNIXServer fastSetConstant getObject StatementExpression MethodInvocation rb_cUNIXServer ClassReference ReferenceType defineAnnotatedMethods	1
MethodDeclaration Modifier public final Annotation Override ReferenceType DynamicMethod dup ReturnStatement This	0
MethodDeclaration Modifier public Annotation JRubyMethod ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject log IfStatement BinaryOperation < MethodInvocation INSTANCE MemberReference fd MethodInvocation RubyNumeric MemberReference log fix2int Literal 0 BlockStatement StatementExpression MethodInvocation MethodInvocation context getRuntime Literal rb_sys_fail ReturnStatement MethodInvocation context MethodInvocation Literal 0 newFixnum getRuntime	0
MethodDeclaration Modifier public setReadBuffered StatementExpression Assignment MemberReference mode MemberReference |=	0
MethodDeclaration Modifier public Annotation Override ReferenceType Object FormalParameter ReferenceType NodeVisitor ThrowStatement ClassCreator ReferenceType UnsupportedOperationException Literal "Not supported	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType Node childNodes ReturnStatement MethodInvocation MethodInvocation getValueNode createList	0
MethodDeclaration Modifier public static ReferenceType JavaProxyMethod FormalParameter ReferenceType JavaProxyClass proxyClass FormalParameter ReferenceType String name FormalParameter ReferenceType String desc FormalParameter BasicType boolean ReturnStatement MethodInvocation proxyClass MemberReference name MemberReference desc MemberReference initMethod	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "to_f" ReferenceType IRubyObject to_f IfStatement MethodInvocation isNaN BlockStatement ReturnStatement MethodInvocation RubyFloat MethodInvocation getRuntime MemberReference Double NaN newFloat IfStatement MethodInvocation isInfinity BlockStatement ReturnStatement MethodInvocation RubyFloat MethodInvocation getRuntime TernaryExpression BinaryOperation < MemberReference infinitySign Literal 0 MemberReference Double NEGATIVE_INFINITY MemberReference Double POSITIVE_INFINITY newFloat IfStatement MethodInvocation isZero BlockStatement ReturnStatement MethodInvocation RubyFloat MethodInvocation getRuntime TernaryExpression BinaryOperation < MemberReference Literal 0 Literal - 0.0 Literal 0.0 newFloat IfStatement BinaryOperation > MethodInvocation - value scale MemberReference RubyFloat BlockStatement SwitchStatement MethodInvocation value signum SwitchStatementCase Literal - 1 ReturnStatement MethodInvocation RubyFloat MethodInvocation getRuntime MemberReference Double NEGATIVE_INFINITY newFloat SwitchStatementCase Literal 0 ReturnStatement MethodInvocation RubyFloat MethodInvocation getRuntime Literal 0 newFloat SwitchStatementCase Literal 1 ReturnStatement MethodInvocation RubyFloat MethodInvocation getRuntime MemberReference Double POSITIVE_INFINITY newFloat SwitchStatementCase IfStatement BinaryOperation < MethodInvocation - value scale MemberReference RubyFloat BlockStatement ReturnStatement MethodInvocation RubyFloat MethodInvocation getRuntime Literal 0 newFloat ReturnStatement MethodInvocation RubyFloat MethodInvocation getRuntime MethodInvocation value doubleValue newFloat	1
MethodDeclaration Modifier private ReferenceType IRubyObject callBlock FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject caller FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator selfType MethodInvocation MemberReference context MemberReference self pollAndGetClass LocalVariableDeclaration ReferenceType CacheEntry VariableDeclarator myCache MemberReference cache IfStatement MethodInvocation myCache MemberReference selfType BlockStatement ReturnStatement MethodInvocation MemberReference context MemberReference self MemberReference selfType MemberReference methodName MemberReference arg1 MemberReference block call ReturnStatement MethodInvocation MemberReference caller MemberReference selfType MemberReference block MemberReference context MemberReference self MemberReference arg1	0
MethodDeclaration Modifier public static ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject receiver FormalParameter ReferenceType CallSite FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject value FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject caller StatementExpression MethodInvocation MemberReference context MemberReference caller MemberReference receiver MemberReference arg0 MemberReference value call ReturnStatement MemberReference value	0
MethodDeclaration Modifier static protected FormalParameter ReferenceType RubyModule rubyMod FormalParameter Modifier final ReferenceType Class cls LocalVariableDeclaration ReferenceType Ruby VariableDeclarator ruby MethodInvocation rubyMod getRuntime StatementExpression MethodInvocation rubyMod MethodInvocation cls getCanonicalName LocalVariableDeclaration ReferenceType Class VariableDeclarator interfaces MethodInvocation cls getInterfaces ForStatement EnhancedForControl VariableDeclaration ReferenceType Class VariableDeclarator ifc MemberReference interfaces BlockStatement StatementExpression MethodInvocation rubyMod MethodInvocation MemberReference ruby MemberReference ifc includeModule IfStatement BinaryOperation && BinaryOperation != MethodInvocation cls Literal null MethodInvocation ! Modifier MethodInvocation cls getModifiers isPublic BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType RubyModule VariableDeclarator rubySing MethodInvocation rubyMod IfStatement MethodInvocation cls isArray BlockStatement StatementExpression MethodInvocation MemberReference rubyMod MemberReference cls BlockStatement StatementExpression MethodInvocation MemberReference rubyMod MemberReference cls Literal true StatementExpression MethodInvocation MemberReference rubySing MemberReference cls StatementExpression MethodInvocation MemberReference rubySing StatementExpression MethodInvocation MemberReference rubyMod MemberReference cls StatementExpression MethodInvocation MemberReference rubyMod MemberReference rubySing MemberReference cls	0
MethodDeclaration Modifier public ReferenceType Future ReturnStatement MemberReference	0
MethodDeclaration Modifier final public static ReferenceType String yyName FormalParameter BasicType int token IfStatement BinaryOperation || BinaryOperation < MemberReference token Literal 0 BinaryOperation > MemberReference token MemberReference yyNames length ReturnStatement Literal "[illegal]" LocalVariableDeclaration ReferenceType String VariableDeclarator name IfStatement BinaryOperation != Assignment MemberReference name MemberReference ArraySelector MemberReference token yyNames = Literal null ReturnStatement MemberReference name ReturnStatement Literal "[unknown]"	1
MethodDeclaration Modifier final public static ReferenceType IRubyObject newSigned8 FormalParameter ReferenceType Ruby runtime FormalParameter BasicType int value StatementExpression Assignment MemberReference value Literal 0xff &= ReturnStatement MethodInvocation runtime TernaryExpression BinaryOperation < MemberReference value Literal 0x80 MemberReference value BinaryOperation + Literal - 0x80 BinaryOperation - MemberReference value Literal 0x80 newFixnum	1
MethodDeclaration Modifier public final BasicType byte FormalParameter BasicType long offset ReturnStatement MethodInvocation BinaryOperation + MemberReference address MemberReference offset	0
MethodDeclaration Modifier private static BasicType float FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType IRubyObject o IfStatement BinaryOperation instanceof MemberReference o ReferenceType RubyString BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator str MethodInvocation o asJavaString LocalVariableDeclaration BasicType float VariableDeclarator f Cast BasicType float MethodInvocation RubyNumeric MethodInvocation o num2dbl IfStatement MethodInvocation str Literal matches BlockStatement ReturnStatement MemberReference f BlockStatement ThrowStatement MethodInvocation runtime Literal item not a newTypeError ReturnStatement Cast BasicType float MethodInvocation RubyKernel MethodInvocation MemberReference o MemberReference o	0
MethodDeclaration Modifier private final static BasicType int FormalParameter ReferenceType Buffer buffer LocalVariableDeclaration BasicType int VariableDeclarator f MethodInvocation buffer ReturnStatement BinaryOperation | TernaryExpression BinaryOperation != BinaryOperation & MemberReference f MemberReference Buffer IN Literal 0 MemberReference ArrayFlags IN Literal 0 TernaryExpression BinaryOperation != BinaryOperation & MemberReference f MemberReference Buffer OUT Literal 0 MemberReference ArrayFlags OUT Literal 0	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ReferenceType RubyBoolean FormalParameter ReferenceType ThreadContext context StatementExpression MethodInvocation check ReturnStatement TernaryExpression MethodInvocation isMatched MethodInvocation context MethodInvocation getTrue getRuntime MethodInvocation context MethodInvocation getFalse getRuntime	1
MethodDeclaration Modifier public BasicType boolean hasNext ReturnStatement BinaryOperation != MemberReference entry Literal null	0
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType RubyClass LocalVariableDeclaration ReferenceType RubyStruct VariableDeclarator instance ClassCreator ReferenceType RubyStruct MemberReference runtime MemberReference StatementExpression MethodInvocation instance MemberReference setMetaClass ReturnStatement MemberReference instance	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair optional Literal 1 ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType RubyArray public_instance_methods FormalParameter ReferenceType IRubyObject args ReturnStatement MethodInvocation MemberReference args MemberReference PUBLIC Literal false Literal false instance_methods	1
MethodDeclaration Modifier public ReferenceType getConditionState ReturnStatement MemberReference	0
MethodDeclaration Modifier public Annotation Override ReferenceType String FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block ReturnStatement Literal	0
MethodDeclaration Modifier public compileConstDecl FormalParameter ReferenceType Node node FormalParameter ReferenceType BodyCompiler context FormalParameter BasicType boolean expr LocalVariableDeclaration ReferenceType ConstDeclNode VariableDeclarator constDeclNode Cast ReferenceType ConstDeclNode MemberReference node LocalVariableDeclaration ReferenceType Node VariableDeclarator constNode MethodInvocation constDeclNode IfStatement BinaryOperation == MemberReference constNode Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation constDeclNode getValueNode MemberReference context Literal true compile StatementExpression MethodInvocation context MethodInvocation constDeclNode getName IfStatement BinaryOperation == MethodInvocation constNode getNodeType MemberReference NodeType COLON2NODE BlockStatement StatementExpression MethodInvocation Cast ReferenceType Colon2Node MemberReference constNode MemberReference context Literal true compile StatementExpression MethodInvocation MethodInvocation constDeclNode getValueNode MemberReference context Literal true compile StatementExpression MethodInvocation context MethodInvocation constDeclNode getName BlockStatement StatementExpression MethodInvocation MethodInvocation constDeclNode getValueNode MemberReference context Literal true compile StatementExpression MethodInvocation context MethodInvocation constDeclNode getName IfStatement MemberReference ! expr StatementExpression MethodInvocation context consumeCurrentValue	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair required Literal 1 ElementValuePair module Literal true ElementValuePair visibility MemberReference Visibility PRIVATE ReferenceType RubyFloat FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject x LocalVariableDeclaration BasicType double VariableDeclarator value Cast ReferenceType RubyFloat MethodInvocation RubyKernel MemberReference recv MemberReference x ReturnStatement MethodInvocation RubyFloat MethodInvocation recv getRuntime BinaryOperation / BinaryOperation + MethodInvocation Math MemberReference value exp MethodInvocation Math MemberReference - value exp Literal 2.0 newFloat	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair meta Literal true ReferenceType IRubyObject singleton_class FormalParameter ReferenceType IRubyObject recv ReturnStatement Cast ReferenceType RubyClass MemberReference recv	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair required Literal 1 ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject p1 ReturnStatement MemberReference p1	1
MethodDeclaration Modifier final public static ReferenceType RubyArray newArray FormalParameter Modifier final ReferenceType Ruby runtime FormalParameter Modifier final BasicType long len LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator array ClassCreator ReferenceType RubyArray MemberReference runtime MemberReference len StatementExpression MethodInvocation RuntimeHelpers MemberReference array values Literal 0 MemberReference length MemberReference runtime fillNil ReturnStatement MemberReference array	0
MethodDeclaration Modifier public ReferenceType IRubyObject getSelf ReturnStatement MemberReference self	0
MethodDeclaration Modifier public run StatementExpression MethodInvocation	0
MethodDeclaration Modifier public static ReferenceType IRubyObject javaToRuby FormalParameter ReferenceType Ruby runtime FormalParameter BasicType char value ReturnStatement MethodInvocation MemberReference runtime ClassCreator ReferenceType Character MemberReference value javaToRuby	1
MethodDeclaration Modifier public static ReferenceType IRubyObject f_integer_p FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject x ReturnStatement MethodInvocation x MemberReference context Literal "integer?" callMethod	1
MethodDeclaration Modifier public static ReferenceType Pair pair ReturnStatement ClassCreator ReferenceType Pair	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair backtrace Literal true ReferenceType IRubyObject java_send FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject rubyName FormalParameter ReferenceType IRubyObject argTypes FormalParameter ReferenceType IRubyObject arg0 LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation rubyName asJavaString LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator argTypesAry MethodInvocation argTypes convertToArray LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime IfStatement BinaryOperation != MethodInvocation argTypesAry size Literal 1 BlockStatement ThrowStatement MethodInvocation JavaMethod MemberReference runtime MethodInvocation argTypesAry size Literal 1 LocalVariableDeclaration ReferenceType Class VariableDeclarator argTypeClass Cast ReferenceType Class MethodInvocation argTypesAry MethodInvocation ClassReference ReferenceType Class toJava Literal 0 eltInternal LocalVariableDeclaration ReferenceType JavaMethod VariableDeclarator method ClassCreator ReferenceType JavaMethod MemberReference runtime MethodInvocation MemberReference name MemberReference argTypeClass getMethod ReturnStatement MethodInvocation method MethodInvocation getObject MethodInvocation arg0 MemberReference argTypeClass toJava	1
MethodDeclaration Modifier public Annotation Override init FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType RubyModule ffi ThrowStatement MethodInvocation runtime MemberReference msg newNotImplementedError	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal "div" ElementValuePair required Literal 1 ReferenceType IRubyObject op_idiv FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject other ReturnStatement MethodInvocation MemberReference context MemberReference other Literal false op_divide	1
MethodDeclaration Modifier public static ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType String name ReturnStatement MethodInvocation runtime MethodInvocation MemberReference name get getGlobalVariables	0
MethodDeclaration Modifier public FormalParameter ReferenceType CompilerCallback value IfStatement BinaryOperation != MemberReference currentLoopLabels Literal null BlockStatement StatementExpression MethodInvocation value This call StatementExpression MethodInvocation BlockStatement StatementExpression MethodInvocation loadThreadContext StatementExpression MethodInvocation value This call StatementExpression MethodInvocation Literal MethodInvocation ClassReference ReferenceType IRubyObject ClassReference ReferenceType ThreadContext ClassReference ReferenceType IRubyObject sig invokeUtilityMethod	0
MethodDeclaration Modifier public static ReferenceType RubyIO FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType Channel channel ReturnStatement ClassCreator ReferenceType RubyIO MemberReference runtime MemberReference channel	0
MethodDeclaration Modifier public ReferenceType PrintStream getOutputStream ReturnStatement ClassCreator ReferenceType PrintStream ClassCreator ReferenceType MethodInvocation MethodInvocation Literal get getGlobalVariables	0
MethodDeclaration Modifier public final ReferenceType IRubyObject get FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType MemoryIO io FormalParameter BasicType long offset ReturnStatement MethodInvocation Util MemberReference runtime MethodInvocation io MemberReference offset newSigned8	1
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime TryStatement StatementExpression MethodInvocation MemberReference context MemberReference self MemberReference name MemberReference block Literal 1 pre ReturnStatement MethodInvocation MemberReference context MemberReference self MemberReference arg0 MemberReference block CatchClause CatchClauseParameter rj ReturnStatement MethodInvocation MemberReference context MemberReference rj handleReturn CatchClause CatchClauseParameter rj ReturnStatement MethodInvocation MemberReference runtime handleRedo StatementExpression MethodInvocation MemberReference runtime MemberReference context MemberReference name post	0
MethodDeclaration Modifier public ReferenceType Node getReceiverNode ReturnStatement MemberReference	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType FormalParameter ReferenceType Block ReferenceType Type type LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator value TernaryExpression BinaryOperation == MemberReference args length Literal 1 MemberReference ArraySelector Literal 0 args MethodInvocation context MethodInvocation MemberReference args newArrayNoCopy getRuntime ReturnStatement MethodInvocation MemberReference context MemberReference value Literal null Literal null Literal true MemberReference MemberReference type MemberReference Block NULL_BLOCK yield	0
MethodDeclaration Modifier public final ReferenceType RubyRegexp FormalParameter BasicType int index FormalParameter ReferenceType RubyString pattern FormalParameter BasicType int options LocalVariableDeclaration ReferenceType RubyRegexp VariableDeclarator regexp MemberReference ArraySelector MemberReference index IfStatement BinaryOperation == MemberReference regexp Literal null BlockStatement StatementExpression Assignment MemberReference regexp MethodInvocation RubyRegexp MethodInvocation pattern getRuntime MethodInvocation pattern getByteList MemberReference options = StatementExpression Assignment MemberReference ArraySelector MemberReference index MemberReference regexp = ReturnStatement MemberReference regexp	0
MethodDeclaration Modifier public ReferenceType Object getKey ReturnStatement MemberReference key	0
MethodDeclaration Modifier public ReferenceType Object run TryStatement StatementExpression Assignment MemberReference defineClass_method ClassReference MethodInvocation Literal "defineClass" ArrayCreator ReferenceType Class ArrayInitializer ClassReference ReferenceType String ClassReference BasicType byte ClassReference BasicType int ClassReference BasicType int ClassReference ReferenceType getDeclaredMethod ReferenceType ClassLoader = CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation e printStackTrace ReturnStatement Literal null StatementExpression MethodInvocation defineClass_method Literal true setAccessible ReturnStatement Literal null	1
MethodDeclaration Modifier private static BasicType boolean FormalParameter BasicType long value ReturnStatement BinaryOperation && BinaryOperation >= MemberReference value MemberReference Character MIN_VALUE BinaryOperation <= MemberReference value MemberReference Character MAX_VALUE	1
MethodDeclaration Modifier private FormalParameter ReferenceType WhenNode FormalParameter ReferenceType ArrayNode cases LocalVariableDeclaration ReferenceType Node VariableDeclarator MethodInvocation getExpressionNodes IfStatement BinaryOperation || BinaryOperation instanceof MemberReference ReferenceType SplatNode BinaryOperation instanceof MemberReference ReferenceType ArgsCatNode BlockStatement StatementExpression MethodInvocation cases MemberReference add ReturnStatement IfStatement BinaryOperation instanceof MemberReference ReferenceType ListNode BlockStatement LocalVariableDeclaration ReferenceType ListNode VariableDeclarator list Cast ReferenceType ListNode MemberReference LocalVariableDeclaration ReferenceType ISourcePosition VariableDeclarator position MethodInvocation getPosition LocalVariableDeclaration ReferenceType Node VariableDeclarator bodyNode MethodInvocation getBodyNode ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation list size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType Node VariableDeclarator expression MethodInvocation list MemberReference i get IfStatement BinaryOperation || BinaryOperation instanceof MemberReference expression ReferenceType SplatNode BinaryOperation instanceof MemberReference expression ReferenceType ArgsCatNode BlockStatement StatementExpression MethodInvocation cases ClassCreator ReferenceType WhenNode MemberReference position MemberReference expression MemberReference bodyNode Literal null add BlockStatement StatementExpression MethodInvocation cases ClassCreator ReferenceType MemberReference position MemberReference expression MemberReference bodyNode Literal null add BlockStatement StatementExpression MethodInvocation cases MemberReference add	0
MethodDeclaration Modifier public update FormalParameter Modifier final BasicType byte b StatementExpression This MemberReference intern MethodInvocation MemberReference b update	0
MethodDeclaration Modifier public static FormalParameter ReferenceType ConsoleHolder holder FormalParameter ReferenceType IfStatement BinaryOperation != MemberReference holder readline Literal null BlockStatement StatementExpression MethodInvocation holder.readline MemberReference holder StatementExpression Assignment MemberReference holder MemberReference = IfStatement BinaryOperation != MemberReference holder readline Literal null BlockStatement StatementExpression MethodInvocation holder.readline MemberReference holder	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "pos=" ElementValuePair required Literal 1 ReferenceType IRubyObject set_pos FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject offset LocalVariableDeclaration ReferenceType ArgsFileData VariableDeclarator data MethodInvocation MemberReference context MemberReference recv Literal "no stream to set position" getData ReturnStatement Cast ReferenceType RubyIO MemberReference data currentFile	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "match" ElementValuePair reads MemberReference BACKREF ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject str FormalParameter ReferenceType IRubyObject pos FormalParameter ReferenceType Block block ReturnStatement MethodInvocation MemberReference context MemberReference str MethodInvocation RubyNumeric MemberReference pos num2int MemberReference block match19Common	1
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator cls MethodInvocation self MethodInvocation getRealClass getMetaClass LocalVariableDeclaration ReferenceType VariableAccessor VariableDeclarator localAccessor MemberReference accessor LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator value IfStatement BinaryOperation != MethodInvocation localAccessor MethodInvocation cls hashCode BlockStatement StatementExpression Assignment MemberReference localAccessor MethodInvocation cls MemberReference name = IfStatement BinaryOperation == MemberReference localAccessor Literal null ReturnStatement MethodInvocation runtime getNil StatementExpression Assignment MemberReference value Cast ReferenceType IRubyObject MethodInvocation localAccessor MemberReference self get = StatementExpression Assignment MemberReference accessor MemberReference localAccessor = BlockStatement StatementExpression Assignment MemberReference value Cast ReferenceType IRubyObject MethodInvocation localAccessor MemberReference self get = IfStatement BinaryOperation != MemberReference value Literal null ReturnStatement MemberReference value IfStatement MethodInvocation runtime isVerbose StatementExpression MethodInvocation MemberReference runtime ReturnStatement MethodInvocation runtime getNil	1
MethodDeclaration Modifier public static ReferenceType IRubyObject FormalParameter ReferenceType RaiseException re ReturnStatement Cast ReferenceType MethodInvocation re getException	0
MethodDeclaration Modifier public BasicType boolean isWriteBuffered ReturnStatement BinaryOperation != BinaryOperation & MemberReference mode MemberReference Literal 0	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "==" ElementValuePair required Literal 1 ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject op_equal19 FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject other ReturnStatement MethodInvocation MemberReference context MemberReference recv MemberReference other MethodInvocation context MethodInvocation Literal false newBoolean getRuntime callCmpMethod	1
MethodDeclaration Modifier public ReferenceType Object convert FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject rubyObject ReturnStatement MethodInvocation rubyObject ClassReference ReferenceType Byte toJava	0
MethodDeclaration Modifier public ReferenceType NodeType getNodeType ReturnStatement MemberReference NodeType FCALLNODE	0
MethodDeclaration Modifier private ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter BasicType boolean table LocalVariableDeclaration BasicType int VariableDeclarator i Literal 0 LocalVariableDeclaration BasicType byte VariableDeclarator bytes MemberReference value bytes LocalVariableDeclaration BasicType int VariableDeclarator p MemberReference value begin LocalVariableDeclaration BasicType int VariableDeclarator end BinaryOperation + MemberReference p MemberReference value realSize WhileStatement BinaryOperation < MemberReference p MemberReference end IfStatement MemberReference ArraySelector BinaryOperation & MemberReference ArraySelector MemberReference ++ p bytes Literal 0xff table StatementExpression MemberReference ++ i ReturnStatement MethodInvocation runtime MemberReference i newFixnum	1
MethodDeclaration Modifier private final FormalParameter Modifier final ReferenceType IRubyObject key FormalParameter Modifier final ReferenceType IRubyObject value FormalParameter Modifier final BasicType boolean checkForExisting StatementExpression MethodInvocation checkResize LocalVariableDeclaration Modifier final BasicType int VariableDeclarator hash MethodInvocation MethodInvocation key hashCode hashValue LocalVariableDeclaration Modifier final BasicType int VariableDeclarator i MethodInvocation MemberReference hash MemberReference table length bucketIndex IfStatement MemberReference checkForExisting BlockStatement ForStatement ForControl VariableDeclaration ReferenceType RubyHashEntry VariableDeclarator entry MemberReference ArraySelector MemberReference i table BinaryOperation != MemberReference entry Literal null Assignment MemberReference entry MemberReference entry next = BlockStatement IfStatement MethodInvocation MemberReference entry MemberReference hash MemberReference key internalKeyExist BlockStatement StatementExpression Assignment MemberReference entry value MemberReference value = ReturnStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i table ClassCreator ReferenceType RubyHashEntry MemberReference hash MemberReference key MemberReference value MemberReference ArraySelector MemberReference i table MemberReference head = StatementExpression MemberReference ++ size	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context ReturnStatement MethodInvocation RubyString MethodInvocation context getRuntime newEmptyString	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal Literal ElementValuePair required Literal 2 ReferenceType IRubyObject put_array_of_int32 FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject offset FormalParameter ReferenceType IRubyObject arrParam StatementExpression MethodInvocation MemoryUtil MethodInvocation context getRuntime MethodInvocation getMemoryIO MethodInvocation MemberReference offset getOffset MethodInvocation MemberReference arrParam checkArray putArrayOfSigned32 ReturnStatement This	1
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 IfStatement BinaryOperation == MemberReference compiledMethod Literal null StatementExpression MethodInvocation initializeMethod ReturnStatement MethodInvocation compiledMethod MemberReference context MemberReference self MemberReference clazz MemberReference name MemberReference arg0 MemberReference arg1 call	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "<=>" ElementValuePair required Literal 1 ReferenceType IRubyObject op_cmp FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject obj LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator ary2 MethodInvocation obj convertToArray IfStatement BinaryOperation || BinaryOperation == This MemberReference ary2 MethodInvocation runtime This isInspecting ReturnStatement MethodInvocation RubyFixnum MemberReference runtime zero TryStatement StatementExpression MethodInvocation runtime This registerInspecting LocalVariableDeclaration BasicType int VariableDeclarator len MemberReference realLength IfStatement BinaryOperation > MemberReference len MemberReference ary2 realLength StatementExpression Assignment MemberReference len MemberReference ary2 realLength = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference len MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator v MethodInvocation MethodInvocation MemberReference context Literal "<=>" MethodInvocation ary2 MemberReference i elt callMethod MemberReference i elt IfStatement BinaryOperation || BinaryOperation instanceof MemberReference v ReferenceType RubyFixnum BinaryOperation != Cast ReferenceType RubyFixnum MemberReference v Literal 0 ReturnStatement MemberReference v StatementExpression MethodInvocation runtime This unregisterInspecting LocalVariableDeclaration BasicType int VariableDeclarator len BinaryOperation - MemberReference realLength MemberReference ary2 realLength IfStatement BinaryOperation == MemberReference len Literal 0 ReturnStatement MethodInvocation RubyFixnum MemberReference runtime zero IfStatement BinaryOperation > MemberReference len Literal 0 ReturnStatement MethodInvocation RubyFixnum MemberReference runtime one ReturnStatement MethodInvocation RubyFixnum MemberReference runtime minus_one	1
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block ReturnStatement MethodInvocation MemberReference runtime	0
MethodDeclaration Modifier private static ReferenceType RubyClass FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType IRubyObject receiver FormalParameter ReferenceType String name RaiseException IfStatement BinaryOperation && BinaryOperation >= MethodInvocation runtime getSafeLevel Literal 4 MethodInvocation ! receiver isTaint BlockStatement ThrowStatement MethodInvocation runtime Literal can't define singleton method." newSecurityError IfStatement BinaryOperation || BinaryOperation instanceof MemberReference receiver ReferenceType RubyFixnum BinaryOperation instanceof MemberReference receiver ReferenceType RubySymbol BlockStatement ThrowStatement MethodInvocation runtime BinaryOperation + BinaryOperation + BinaryOperation + Literal "can't define singleton method \"" MemberReference name Literal "\" for " MethodInvocation receiver MethodInvocation getMetaClass newTypeError IfStatement MethodInvocation receiver isFrozen BlockStatement ThrowStatement MethodInvocation runtime Literal LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator rubyClass MethodInvocation receiver IfStatement BinaryOperation && BinaryOperation >= MethodInvocation runtime getSafeLevel Literal 4 BinaryOperation != MethodInvocation rubyClass MethodInvocation MemberReference name get getMethods Literal null BlockStatement ThrowStatement MethodInvocation runtime Literal "redefining method newSecurityError ReturnStatement MemberReference rubyClass	0
MethodDeclaration Modifier public setArgValues FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 FormalParameter ReferenceType IRubyObject arg3 FormalParameter ReferenceType IRubyObject arg4 FormalParameter ReferenceType IRubyObject arg5 FormalParameter ReferenceType IRubyObject arg6 FormalParameter ReferenceType IRubyObject arg7 FormalParameter ReferenceType IRubyObject arg8 StatementExpression MethodInvocation ArrayCreator ReferenceType IRubyObject ArrayInitializer MemberReference arg0 MemberReference arg1 MemberReference arg2 MemberReference arg3 MemberReference arg4 MemberReference arg5 MemberReference arg6 MemberReference arg7 MemberReference arg8 Literal 9 setArgValues	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair required Literal 1 ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject name LocalVariableDeclaration ReferenceType InputStream VariableDeclarator in MethodInvocation MethodInvocation MethodInvocation name asJavaString getResourceAsStream javaClass IfStatement BinaryOperation == MemberReference in Literal null ReturnStatement MethodInvocation MethodInvocation getNil getRuntime LocalVariableDeclaration ReferenceType ByteArrayOutputStream VariableDeclarator out ClassCreator ReferenceType ByteArrayOutputStream TryStatement LocalVariableDeclaration BasicType int VariableDeclarator len LocalVariableDeclaration BasicType byte VariableDeclarator buf ArrayCreator BasicType byte Literal 4096 WhileStatement BinaryOperation >= Assignment MemberReference len MethodInvocation in MemberReference buf read = Literal 0 BlockStatement StatementExpression MethodInvocation out MemberReference buf Literal 0 MemberReference len write CatchClause CatchClauseParameter IOException e ThrowStatement MethodInvocation MethodInvocation MemberReference e newIOErrorFromException getRuntime ReturnStatement MethodInvocation MethodInvocation ClassCreator ReferenceType ByteList MethodInvocation out toByteArray Literal false newString getRuntime	1
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block ReturnStatement MethodInvocation callAdapter MemberReference context MemberReference self MethodInvocation MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference getReceiverNode MethodInvocation RuntimeHelpers MemberReference runtime MemberReference context MemberReference self MemberReference MemberReference getBlock call	0
MethodDeclaration Modifier private ReferenceType RubyClass ReferenceType VariableAccessor FormalParameter ReferenceType RubyClass cls LocalVariableDeclaration ReferenceType RubyClass ReferenceType VariableAccessor VariableDeclarator localAccessor MemberReference accessor IfStatement BinaryOperation != MethodInvocation localAccessor MethodInvocation cls hashCode BlockStatement StatementExpression Assignment MemberReference localAccessor MethodInvocation cls MemberReference variableName = StatementExpression Assignment MemberReference accessor MemberReference localAccessor = ReturnStatement MemberReference localAccessor	0
MethodDeclaration Modifier public final ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType String name ReturnStatement MethodInvocation runtimeCache MemberReference context MemberReference name Literal 6	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair compat MemberReference CompatVersion RUBY1_9 ElementValuePair rest Literal true ElementValuePair meta Literal true ReferenceType IRubyObject yield FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args InterruptedException LocalVariableDeclaration ReferenceType Fiber VariableDeclarator fiber MethodInvocation context IfStatement BinaryOperation == MemberReference args length Literal 0 BlockStatement StatementExpression Assignment MemberReference fiber result MethodInvocation context MethodInvocation getNil getRuntime = IfStatement BinaryOperation == MemberReference args length Literal 1 BlockStatement StatementExpression Assignment MemberReference fiber result MemberReference ArraySelector Literal 0 args = BlockStatement StatementExpression Assignment MemberReference fiber result MethodInvocation context MethodInvocation MemberReference args getRuntime = SynchronizedStatement MemberReference fiber yieldLock StatementExpression MethodInvocation fiber.yieldLock StatementExpression MethodInvocation fiber.yieldLock wait ReturnStatement MethodInvocation context MethodInvocation getNil getRuntime	1
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType NodeVisitor iVisitor ReturnStatement MethodInvocation iVisitor This	0
MethodDeclaration Modifier private ReferenceType String FormalParameter ReferenceType String home IfStatement MethodInvocation home Literal "." equals BlockStatement StatementExpression Assignment MemberReference home MethodInvocation System Literal "user.dir" getProperty = IfStatement MethodInvocation home Literal startsWith BlockStatement StatementExpression Assignment MemberReference home MethodInvocation home Literal 3 substring = IfStatement MethodInvocation ! home Literal "file:" startsWith BlockStatement LocalVariableDeclaration ReferenceType NormalizedFile VariableDeclarator f ClassCreator ReferenceType NormalizedFile MemberReference home IfStatement MethodInvocation ! f isAbsolute BlockStatement StatementExpression Assignment MemberReference home MethodInvocation f getAbsolutePath = IfStatement MethodInvocation ! f exists BlockStatement StatementExpression MethodInvocation System.err BinaryOperation + BinaryOperation + BinaryOperation + Literal "Warning: home \"" MemberReference f Literal "\" does not exist, using " MethodInvocation System Literal "java.io.tmpdir" getProperty println ReturnStatement MethodInvocation System Literal "java.io.tmpdir" getProperty ReturnStatement MemberReference home	1
MethodDeclaration Modifier public Annotation JRubyMethod ReferenceType RubyArray constructors LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator ctors IfStatement BinaryOperation != Assignment MemberReference ctors MemberReference constructors = Literal null ReturnStatement MemberReference ctors ReturnStatement Assignment MemberReference constructors MethodInvocation MethodInvocation MethodInvocation getConstructors javaClass buildConstructors =	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "name" ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType IRubyObject name FormalParameter ReferenceType ThreadContext context ReturnStatement MethodInvocation context MethodInvocation MemberReference methodName newString getRuntime	0
MethodDeclaration Modifier private static ReferenceType ArgsFileData getData FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType String errorMessage LocalVariableDeclaration ReferenceType ArgsFileData VariableDeclarator data MethodInvocation ArgsFileData MemberReference recv getDataFrom IfStatement MethodInvocation ! data MemberReference context next_argv ThrowStatement MethodInvocation context MethodInvocation MemberReference errorMessage newArgumentError getRuntime ReturnStatement MemberReference data	1
MethodDeclaration Modifier public static main FormalParameter ReferenceType String args LocalVariableDeclaration BasicType int VariableDeclarator Literal 5 LocalVariableDeclaration BasicType int VariableDeclarator n Literal 30 IfStatement BinaryOperation >= MemberReference args length Literal 1 BlockStatement StatementExpression Assignment MemberReference MethodInvocation Integer MemberReference ArraySelector Literal 0 args parseInt = IfStatement BinaryOperation >= MemberReference args length Literal 2 BlockStatement StatementExpression Assignment MemberReference n MethodInvocation Integer MemberReference ArraySelector Literal 1 args parseInt = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j Literal 0 BinaryOperation < MemberReference j MemberReference MemberReference ++ j BlockStatement StatementExpression MethodInvocation MemberReference n ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j Literal 0 BinaryOperation < MemberReference j MemberReference MemberReference ++ j BlockStatement StatementExpression MethodInvocation MemberReference n ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j Literal 0 BinaryOperation < MemberReference j MemberReference MemberReference ++ j BlockStatement StatementExpression MethodInvocation MemberReference n	0
MethodDeclaration Modifier public ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType DateTimeZone ReturnStatement MemberReference	0
MethodDeclaration Modifier protected BasicType boolean FormalParameter ReferenceType DynamicMethod method FormalParameter ReferenceType IRubyObject caller ReturnStatement MethodInvocation method isUndefined	0
MethodDeclaration Modifier public ReferenceType Operand FormalParameter ReferenceType Match2Node FormalParameter ReferenceType IR_Scope m LocalVariableDeclaration ReferenceType Variable VariableDeclarator ret MethodInvocation m getNewVariable LocalVariableDeclaration ReferenceType Operand VariableDeclarator receiver MethodInvocation MethodInvocation getReceiverNode MemberReference m build LocalVariableDeclaration ReferenceType Operand VariableDeclarator value MethodInvocation MethodInvocation getValueNode MemberReference m build StatementExpression MethodInvocation m ClassCreator ReferenceType MemberReference ret MemberReference MethAddr ArrayCreator ReferenceType Operand ArrayInitializer MemberReference receiver MemberReference value addInstr ReturnStatement MemberReference ret	0
MethodDeclaration Modifier public static ReferenceType String getType FormalParameter BasicType double i FormalParameter ReferenceType String o FormalParameter ReferenceType String o2 ReturnStatement Literal	0
MethodDeclaration Modifier private static BasicType byte getBytesInUTF8 FormalParameter ReferenceType String s TryStatement ReturnStatement MethodInvocation s Literal "UTF-8" getBytes CatchClause CatchClauseParameter java.io.UnsupportedEncodingException ex ReturnStatement MethodInvocation s getBytes	1
MethodDeclaration Modifier private ReferenceType IRubyObject FormalParameter ReferenceType LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator self MethodInvocation getSelf StatementExpression MethodInvocation MethodInvocation MemberReference self getFrame ReturnStatement MemberReference self	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair required Literal 1 ElementValuePair module Literal true ElementValuePair visibility MemberReference Visibility PRIVATE ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType RubyFloat FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject x ReturnStatement MethodInvocation MemberReference recv MemberReference x	0
MethodDeclaration Modifier public StatementExpression MethodInvocation reset StatementExpression MethodInvocation reset	0
MethodDeclaration Modifier public BasicType int ReturnStatement MemberReference	0
MethodDeclaration Modifier public final Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule klazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg1 ReturnStatement MethodInvocation MemberReference context MemberReference arg1 invoke	1
MethodDeclaration Modifier private setScriptFileName FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	1
MethodDeclaration Modifier public ReferenceType Object case417_line1565 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType Token Literal MemberReference Tokens kSELF Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "==" ElementValuePair required Literal 1 ReferenceType IRubyObject op_equal FormalParameter ReferenceType IRubyObject oth LocalVariableDeclaration BasicType boolean VariableDeclarator ret BinaryOperation == This MemberReference oth IfStatement MemberReference ! ret BlockStatement IfStatement BinaryOperation instanceof MemberReference oth ReferenceType Base BlockStatement LocalVariableDeclaration ReferenceType Base VariableDeclarator b Cast ReferenceType Base MemberReference oth StatementExpression Assignment MemberReference ret BinaryOperation && This MemberReference MethodInvocation MethodInvocation MethodInvocation equals MethodInvocation Arrays MethodInvocation MethodInvocation b equals = BlockStatement LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator str MethodInvocation oth convertToString StatementExpression Assignment MemberReference ret This MethodInvocation to_s MethodInvocation MemberReference str equals = ReturnStatement TernaryExpression MemberReference ret MethodInvocation MethodInvocation getTrue getRuntime MethodInvocation MethodInvocation getFalse getRuntime	1
MethodDeclaration Modifier private cleanup LocalVariableDeclaration ReferenceType VariableDeclarator reference WhileStatement BinaryOperation != Assignment MemberReference reference Cast ReferenceType MethodInvocation referenceQueue poll = Literal null BlockStatement StatementExpression MethodInvocation cache MethodInvocation reference getKey remove	0
MethodDeclaration Modifier public ReferenceType LocalVariableDeclaration ReferenceType Frame VariableDeclarator frame MethodInvocation ReturnStatement ClassCreator ReferenceType MemberReference frame MethodInvocation MethodInvocation getCurrentScope MemberReference file MemberReference line	0
MethodDeclaration Modifier public static Annotation Deprecated ReferenceType IRubyObject getservbyname FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args ReturnStatement MethodInvocation MethodInvocation recv MethodInvocation getCurrentContext getRuntime MemberReference recv MemberReference args getservbyname	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "match" ElementValuePair reads MemberReference BACKREF ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject str FormalParameter ReferenceType Block block ReturnStatement MethodInvocation MemberReference context MemberReference str Literal 0 MemberReference block match19Common	1
MethodDeclaration Modifier public ReferenceType Operand FormalParameter ReferenceType OpAsgnNode opAsgnNode FormalParameter ReferenceType IR_Scope s IfStatement BinaryOperation || MethodInvocation opAsgnNode MethodInvocation Literal "||" equals getOperatorName MethodInvocation opAsgnNode MethodInvocation Literal "&&" equals getOperatorName BlockStatement ThrowStatement ClassCreator ReferenceType NotCompilableException BinaryOperation + Literal "Unknown node encountered in builder: " MemberReference opAsgnNode LocalVariableDeclaration ReferenceType Operand VariableDeclarator v1 MethodInvocation MethodInvocation opAsgnNode getReceiverNode MemberReference s build LocalVariableDeclaration ReferenceType Variable VariableDeclarator getResult MethodInvocation s getNewVariable LocalVariableDeclaration ReferenceType IR_Instr VariableDeclarator callInstr ClassCreator ReferenceType CALL_Instr MemberReference getResult ClassCreator ReferenceType MethAddr MethodInvocation opAsgnNode getVariableName ArrayCreator ReferenceType Operand ArrayInitializer MemberReference v1 Literal null StatementExpression MethodInvocation s MemberReference callInstr addInstr LocalVariableDeclaration ReferenceType Operand VariableDeclarator v2 MethodInvocation MethodInvocation opAsgnNode getValueNode MemberReference s build LocalVariableDeclaration ReferenceType Variable VariableDeclarator setValue MethodInvocation s getNewVariable StatementExpression Assignment MemberReference callInstr ClassCreator ReferenceType CALL_Instr MemberReference setValue ClassCreator ReferenceType MethAddr MethodInvocation opAsgnNode getOperatorName ArrayCreator ReferenceType Operand ArrayInitializer MemberReference getResult MemberReference v2 Literal null = StatementExpression MethodInvocation s MemberReference callInstr addInstr LocalVariableDeclaration ReferenceType Variable VariableDeclarator setResult MethodInvocation s getNewVariable StatementExpression Assignment MemberReference callInstr ClassCreator ReferenceType CALL_Instr MemberReference setResult ClassCreator ReferenceType MethAddr MethodInvocation opAsgnNode getVariableNameAsgn ArrayCreator ReferenceType Operand ArrayInitializer MemberReference v1 MemberReference setValue Literal null = StatementExpression MethodInvocation s MemberReference callInstr addInstr ReturnStatement MemberReference setResult	1
MethodDeclaration Modifier public BasicType long ReturnStatement MemberReference usec	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType SingleMethodInterface obj ReturnStatement MethodInvocation obj callIt	0
MethodDeclaration Modifier public Annotation Deprecated ReferenceType IRubyObject to_i ReturnStatement MethodInvocation MethodInvocation getRuntime to_i	1
MethodDeclaration Modifier private ReferenceType IRubyObject invokeDirectWithExceptionHandling FormalParameter ReferenceType Method method FormalParameter ReferenceType Object javaInvokee TryStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator result TernaryExpression BinaryOperation != MemberReference handle Literal null MethodInvocation handle MemberReference javaInvokee invoke MethodInvocation method MemberReference javaInvokee invoke ReturnStatement MethodInvocation MemberReference result convertReturn CatchClause CatchClauseParameter IllegalArgumentException iae ReturnStatement MethodInvocation MemberReference method MemberReference iae handlelIllegalArgumentEx CatchClause CatchClauseParameter IllegalAccessException iae ReturnStatement MethodInvocation MemberReference method MemberReference iae handleIllegalAccessEx CatchClause CatchClauseParameter InvocationTargetException ite ReturnStatement MethodInvocation MemberReference ite MemberReference method handleInvocationTargetEx CatchClause CatchClauseParameter Throwable t ReturnStatement MethodInvocation MemberReference t MemberReference method handleThrowable	1
MethodDeclaration Modifier public Annotation Override setArgValues FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 StatementExpression Assignment MemberReference variableValueZero MemberReference arg0 = StatementExpression Assignment MemberReference variableValueOne MemberReference arg1 =	0
MethodDeclaration Modifier public static ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject receiver FormalParameter ReferenceType Visibility visibility FormalParameter ReferenceType String name FormalParameter ReferenceType CallType callType FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 FormalParameter ReferenceType Block block ReturnStatement MethodInvocation MethodInvocation MemberReference context MemberReference receiver MethodInvocation receiver getMetaClass MemberReference name MemberReference arg0 MemberReference arg1 MemberReference arg2 MemberReference block call MemberReference context MemberReference receiver MemberReference visibility MemberReference name MemberReference callType	1
MethodDeclaration Modifier public ReferenceType Operand FormalParameter ReferenceType DStrNode dstrNode FormalParameter ReferenceType IR_Scope s LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Operand VariableDeclarator strPieces ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Operand ForStatement EnhancedForControl VariableDeclaration ReferenceType Node VariableDeclarator n MethodInvocation dstrNode childNodes StatementExpression MethodInvocation strPieces MethodInvocation MemberReference n MemberReference s build add ReturnStatement ClassCreator ReferenceType MemberReference strPieces	1
MethodDeclaration Modifier public prepare FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType DynamicScope VariableDeclarator scope MethodInvocation context getCurrentScope IfStatement MemberReference ! hasMasgnArgs BlockStatement IfStatement BinaryOperation > MemberReference preCount Literal 0 StatementExpression MethodInvocation scope MemberReference args MethodInvocation Math MemberReference args length MemberReference preCount min setArgValues IfStatement BinaryOperation > MemberReference postCount Literal 0 StatementExpression MethodInvocation scope MemberReference args MemberReference MemberReference postCount BlockStatement StatementExpression MethodInvocation MemberReference context MemberReference runtime MemberReference self MemberReference args MemberReference block MemberReference scope IfStatement BinaryOperation || MemberReference BinaryOperation != MemberReference restArg Literal - 1 StatementExpression MethodInvocation MemberReference context MemberReference runtime MemberReference scope MemberReference self MemberReference args IfStatement BinaryOperation != MethodInvocation getBlock Literal null StatementExpression MethodInvocation MemberReference scope MemberReference runtime MemberReference block processBlockArg	1
MethodDeclaration Modifier public warning FormalParameter ReferenceType ID id FormalParameter ReferenceType String message FormalParameter ReferenceType Object data LocalVariableDeclaration ReferenceType ThreadContext VariableDeclarator context MethodInvocation runtime getCurrentContext StatementExpression MethodInvocation MemberReference id MethodInvocation context getFile MethodInvocation context getLine MemberReference message MemberReference data warning	1
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement BinaryOperation + BinaryOperation + MemberReference Literal ", *" MemberReference	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType RubyNumeric numeric FormalParameter ReferenceType Class target LocalVariableDeclaration BasicType double VariableDeclarator value MethodInvocation numeric IfStatement MethodInvocation MemberReference value BlockStatement ReturnStatement MethodInvocation Float Cast BasicType float MemberReference value valueOf BlockStatement ThrowStatement MethodInvocation numeric MethodInvocation BinaryOperation + Literal "too for " MemberReference numeric newTypeError getRuntime	0
MethodDeclaration Modifier private subpatSet FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType RubyRegexp regexp FormalParameter BasicType int nth FormalParameter ReferenceType IRubyObject repl LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime IfStatement BinaryOperation < MethodInvocation regexp MemberReference context This Literal 0 Literal false search Literal 0 ThrowStatement MethodInvocation runtime Literal "regexp not matched" newIndexError LocalVariableDeclaration ReferenceType RubyMatchData VariableDeclarator match Cast ReferenceType RubyMatchData MethodInvocation context MethodInvocation MemberReference runtime getBackRef getCurrentScope StatementExpression Assignment MemberReference nth MethodInvocation MemberReference runtime MemberReference nth MemberReference match regs subpatSetCheck = LocalVariableDeclaration Modifier final BasicType int VariableDeclarator start VariableDeclarator end IfStatement BinaryOperation == MemberReference match regs Literal null BlockStatement StatementExpression Assignment MemberReference start MemberReference match begin = StatementExpression Assignment MemberReference end MemberReference match end = BlockStatement StatementExpression Assignment MemberReference start MemberReference match.regs ArraySelector MemberReference nth beg = StatementExpression Assignment MemberReference end MemberReference match.regs ArraySelector MemberReference nth end = IfStatement BinaryOperation == MemberReference start Literal - 1 ThrowStatement MethodInvocation runtime BinaryOperation + BinaryOperation + Literal "regexp group " MemberReference nth Literal " not matched" newIndexError StatementExpression MethodInvocation MemberReference start BinaryOperation - MemberReference end MemberReference start MethodInvocation repl convertToString replaceInternal	1
MethodDeclaration install FormalParameter ReferenceType RubyModule proxy IfStatement MethodInvocation Modifier MethodInvocation field getModifiers isPublic BlockStatement StatementExpression MethodInvocation proxy MethodInvocation MemberReference name ClassCreator ReferenceType MemberReference name MemberReference proxy MemberReference field addMethod	0
MethodDeclaration Modifier private static initCopy FormalParameter ReferenceType IRubyObject clone FormalParameter ReferenceType IRubyObject original AssertStatement MethodInvocation ! clone isFrozen BinaryOperation + BinaryOperation + Literal "frozen object (" MethodInvocation clone MethodInvocation getName getMetaClass Literal ") allocated" StatementExpression MethodInvocation original MemberReference clone IfStatement MethodInvocation original hasVariables StatementExpression MethodInvocation clone MethodInvocation original getVariableList syncVariables IfStatement BinaryOperation instanceof MemberReference original ReferenceType RubyModule StatementExpression Cast ReferenceType RubyModule MemberReference clone StatementExpression MethodInvocation clone MethodInvocation clone MethodInvocation getCurrentContext getRuntime Literal "initialize_copy" MemberReference original callMethod	1
MethodDeclaration Modifier private ReferenceType IRubyObject handleNextJump FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType JumpException ReferenceType NextJump nj FormalParameter ReferenceType Block ReferenceType Type type ReturnStatement TernaryExpression BinaryOperation == MethodInvocation nj getValue Literal null MethodInvocation context MethodInvocation getNil getRuntime Cast ReferenceType IRubyObject MethodInvocation nj getValue	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair frame Literal true ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self LocalVariableDeclaration ReferenceType RubyIO VariableDeclarator io Cast ReferenceType RubyIO MemberReference self ReturnStatement MethodInvocation JavaUtil MethodInvocation context getRuntime MethodInvocation io getChannel convertJavaToUsableRubyObject	1
MethodDeclaration Modifier public ReferenceType Operand buildXStr FormalParameter ReferenceType XStrNode node FormalParameter ReferenceType IR_Scope m ReturnStatement ClassCreator ReferenceType BacktickString ClassCreator ReferenceType StringLiteral MethodInvocation node getValue	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair frame Literal true ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType IRubyObject step FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject step FormalParameter ReferenceType Block block ReturnStatement TernaryExpression MethodInvocation block isGiven MethodInvocation MemberReference context MemberReference step MemberReference block MethodInvocation MethodInvocation context getRuntime This Literal MemberReference step enumeratorize	0
MethodDeclaration Modifier public ReferenceType Node parseFile FormalParameter ReferenceType InputStream in FormalParameter ReferenceType String file FormalParameter ReferenceType DynamicScope scope FormalParameter BasicType int lineNumber IfStatement BinaryOperation != MemberReference parserStats Literal null StatementExpression MethodInvocation parserStats ReturnStatement MethodInvocation parser MemberReference file MemberReference in MemberReference scope ClassCreator ReferenceType ParserConfiguration MethodInvocation getKCode MemberReference lineNumber Literal false Literal false Literal true MemberReference config parse	1
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType String name AssertStatement MethodInvocation IdUtil MemberReference name isInstanceVariable StatementExpression MethodInvocation ensureInstanceVariablesSettable ReturnStatement Cast ReferenceType IRubyObject MethodInvocation MemberReference name	1
MethodDeclaration Modifier public ReferenceType Object previous ReturnStatement MethodInvocation MethodInvocation ClassReference ReferenceType Object toJava Assignment MemberReference last MemberReference -- index = elt	1
MethodDeclaration Modifier static protected ReferenceType Class findClass FormalParameter ReferenceType ClassLoader classLoader FormalParameter ReferenceType String className ClassNotFoundException IfStatement BinaryOperation && BinaryOperation == MethodInvocation className Literal '.' indexOf Literal - 1 MethodInvocation Character MethodInvocation className Literal 0 charAt isLowerCase BlockStatement SwitchStatement MethodInvocation className Literal 0 charAt SwitchStatementCase Literal 'b' ReturnStatement ClassReference BasicType byte SwitchStatementCase Literal 's' ReturnStatement ClassReference BasicType short SwitchStatementCase Literal 'c' ReturnStatement ClassReference BasicType char SwitchStatementCase Literal 'i' ReturnStatement ClassReference BasicType int SwitchStatementCase Literal 'l' ReturnStatement ClassReference BasicType long SwitchStatementCase Literal 'f' ReturnStatement ClassReference BasicType float SwitchStatementCase Literal 'd' ReturnStatement ClassReference BasicType double SwitchStatementCase ReturnStatement MethodInvocation classLoader MemberReference className loadClass BlockStatement ReturnStatement MethodInvocation classLoader MemberReference className loadClass	0
MethodDeclaration Modifier public setUp StatementExpression Assignment MemberReference runtime MethodInvocation Ruby newInstance =	0
MethodDeclaration Modifier private static ReferenceType FormalParameter ReferenceType IRubyObject scope IfStatement BinaryOperation instanceof MemberReference scope ReferenceType BlockStatement ReturnStatement Cast ReferenceType MemberReference scope BlockStatement IfStatement BinaryOperation instanceof MemberReference scope ReferenceType RubyProc BlockStatement ReturnStatement Cast ReferenceType RubyProc MemberReference scope BlockStatement ThrowStatement MethodInvocation scope MethodInvocation BinaryOperation + BinaryOperation + Literal "wrong argument type " MethodInvocation scope getMetaClass Literal " (expected newTypeError getRuntime	0
MethodDeclaration Modifier private FormalParameter ReferenceType Object javaInvokee RaiseException IfStatement MethodInvocation ! method MethodInvocation MemberReference javaInvokee isInstance getDeclaringClass BlockStatement ThrowStatement MethodInvocation MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal not instance of class (" Literal MethodInvocation javaInvokee MethodInvocation getName getClass Literal " " MethodInvocation method MethodInvocation getName getDeclaringClass Literal ")" newTypeError getRuntime	0
MethodDeclaration Modifier protected Annotation Override ReferenceType IRubyObject FormalParameter ReferenceType String internedName ReturnStatement MethodInvocation MemberReference internedName	0
MethodDeclaration Modifier private synchronized FormalParameter Modifier final ReferenceType RubyClass proxy ForStatement EnhancedForControl VariableDeclaration ReferenceType NamedInstaller VariableDeclarator installer MethodInvocation values BlockStatement StatementExpression MethodInvocation installer MemberReference proxy install StatementExpression Assignment MemberReference Literal null = ForStatement EnhancedForControl VariableDeclaration ReferenceType NamedInstaller VariableDeclarator installer MethodInvocation values BlockStatement StatementExpression MethodInvocation installer MemberReference proxy install StatementExpression Assignment MemberReference Literal null =	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject assign FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject value FormalParameter ReferenceType Block block FormalParameter BasicType boolean checkArity LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator receiver MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference block IfStatement BinaryOperation == MemberReference argsNode Literal null BlockStatement StatementExpression MethodInvocation RuntimeHelpers MemberReference context MemberReference receiver MethodInvocation getName ArrayCreator ReferenceType IRubyObject ArrayInitializer MemberReference value MemberReference CallType NORMAL MemberReference Block NULL_BLOCK invoke BlockStatement LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator args Cast ReferenceType RubyArray MethodInvocation argsNode MemberReference runtime MemberReference context MemberReference self MemberReference block StatementExpression MethodInvocation args MemberReference value append StatementExpression MethodInvocation RuntimeHelpers MemberReference context MemberReference receiver MethodInvocation getName MethodInvocation args toJavaArray MemberReference CallType NORMAL MemberReference Block NULL_BLOCK invoke ReturnStatement MethodInvocation runtime getNil	0
MethodDeclaration Modifier private final modifyCheck FormalParameter BasicType byte b FormalParameter BasicType int len FormalParameter ReferenceType Encoding enc IfStatement BinaryOperation || BinaryOperation || BinaryOperation != MemberReference value bytes MemberReference b BinaryOperation != MemberReference value realSize MemberReference len BinaryOperation != MemberReference value encoding MemberReference enc ThrowStatement MethodInvocation MethodInvocation Literal "string newRuntimeError getRuntime	1
MethodDeclaration Modifier public call FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation MethodInvocation callNode getReceiverNode MemberReference context Literal true compile	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair required Literal 1 ElementValuePair module Literal true ElementValuePair visibility MemberReference PRIVATE ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject aString LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration ReferenceType ByteArrayOutputStream VariableDeclarator output ClassCreator ReferenceType ByteArrayOutputStream LocalVariableDeclaration ReferenceType RubyString VariableDeclarator string MethodInvocation aString convertToString LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation ShellLauncher MemberReference runtime ArrayCreator ReferenceType IRubyObject ArrayInitializer MemberReference string MemberReference output StatementExpression MethodInvocation runtime MethodInvocation Literal MethodInvocation MemberReference runtime MemberReference set getGlobalVariables ReturnStatement MethodInvocation RubyString MemberReference runtime MethodInvocation output toByteArray	0
MethodDeclaration Modifier private ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType Encoding enc FormalParameter BasicType byte bytes FormalParameter BasicType int s FormalParameter BasicType int end LocalVariableDeclaration BasicType boolean VariableDeclarator modify Literal false LocalVariableDeclaration BasicType int VariableDeclarator c WhileStatement BinaryOperation < MemberReference s MemberReference end BlockStatement IfStatement BinaryOperation && MethodInvocation enc isAsciiCompatible MethodInvocation Encoding Assignment MemberReference c BinaryOperation & MemberReference ArraySelector MemberReference s bytes Literal 0xff = isAscii BlockStatement IfStatement MethodInvocation ASCII MemberReference c isLower BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference s bytes MemberReference AsciiTables ArraySelector MemberReference c ToUpperCaseTable = StatementExpression Assignment MemberReference modify Literal true = StatementExpression MemberReference ++ s BlockStatement StatementExpression Assignment MemberReference c MethodInvocation MemberReference runtime MemberReference enc MemberReference bytes MemberReference s MemberReference end codePoint = IfStatement MethodInvocation enc MemberReference c isLower BlockStatement StatementExpression MethodInvocation enc MethodInvocation MemberReference enc MemberReference c MemberReference bytes MemberReference s codeToMbc StatementExpression Assignment MemberReference modify Literal true = StatementExpression Assignment MemberReference s MethodInvocation MemberReference runtime MemberReference enc MemberReference c codeLength += ReturnStatement TernaryExpression MemberReference modify This MethodInvocation runtime getNil	1
MethodDeclaration Modifier public static ReferenceType IRubyObject getInstance FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType Object IfStatement BinaryOperation != MemberReference Literal null BlockStatement ReturnStatement MethodInvocation runtime MethodInvocation MethodInvocation MemberReference Cast ReferenceType RubyClass MethodInvocation MemberReference runtime MethodInvocation JavaClass MemberReference runtime MethodInvocation getClass get getProxyClass getJavaSupport ReturnStatement MethodInvocation runtime getNil	0
MethodDeclaration Modifier public static ReferenceType String getType FormalParameter BasicType char c ReturnStatement Literal "char"	0
MethodDeclaration Modifier public Annotation Override ReferenceType ThrowStatement ClassCreator ReferenceType UnsupportedOperationException MemberReference msg	0
MethodDeclaration Modifier public Annotation Override BasicType int read IOException LocalVariableDeclaration BasicType byte VariableDeclarator b ArrayCreator BasicType byte Literal 1 IfStatement BinaryOperation == MethodInvocation MemberReference b Literal 0 Literal 1 read Literal 1 BlockStatement ReturnStatement MemberReference ArraySelector Literal 0 b BlockStatement ReturnStatement Literal - 1	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 ReturnStatement MethodInvocation MemberReference arg0 MemberReference arg1 Literal 'l'	0
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType Node scriptNode LocalVariableDeclaration ReferenceType Script VariableDeclarator script Literal null LocalVariableDeclaration BasicType boolean VariableDeclarator compile MethodInvocation MethodInvocation MethodInvocation shouldPrecompileCLI getInstanceConfig LocalVariableDeclaration BasicType boolean VariableDeclarator forceCompile MethodInvocation MethodInvocation MethodInvocation getInstanceConfig IfStatement MemberReference compile BlockStatement StatementExpression Assignment MemberReference script MethodInvocation MemberReference scriptNode = IfStatement BinaryOperation && MemberReference forceCompile BinaryOperation == MemberReference script Literal null BlockStatement ReturnStatement MethodInvocation getNil IfStatement BinaryOperation != MemberReference script Literal null BlockStatement IfStatement MethodInvocation config BlockStatement ReturnStatement MemberReference nilObject BlockStatement ReturnStatement MethodInvocation MemberReference script runScript BlockStatement IfStatement MethodInvocation config StatementExpression MethodInvocation System.err Literal bytecode printing only with JVM print ReturnStatement MethodInvocation MemberReference scriptNode	1
MethodDeclaration Modifier public BasicType int getLineNumber ReturnStatement MemberReference lineNumber	0
MethodDeclaration Modifier public StatementExpression MethodInvocation StatementExpression MethodInvocation loadNil StatementExpression MethodInvocation Literal MethodInvocation ClassReference ReferenceType IRubyObject ClassReference ReferenceType String ClassReference ReferenceType Ruby ClassReference ReferenceType IRubyObject sig invokeUtilityMethod	0
MethodDeclaration Modifier private ReferenceType IRubyObject FormalParameter ReferenceType RubyRegexp regexp StatementExpression MethodInvocation regexp check LocalVariableDeclaration BasicType int VariableDeclarator options MethodInvocation IfStatement BinaryOperation && BinaryOperation && MethodInvocation ! regexp isKCodeDefault BinaryOperation != MemberReference regexp kcode Literal null BinaryOperation != MemberReference regexp kcode MemberReference KCode NIL BlockStatement IfStatement BinaryOperation == MemberReference regexp kcode MemberReference KCode NONE BlockStatement StatementExpression Assignment MemberReference options Literal 16 |= IfStatement BinaryOperation == MemberReference regexp kcode MemberReference KCode EUC BlockStatement StatementExpression Assignment MemberReference options Literal 32 |= IfStatement BinaryOperation == MemberReference regexp kcode MemberReference KCode SJIS BlockStatement StatementExpression Assignment MemberReference options Literal 48 |= IfStatement BinaryOperation == MemberReference regexp kcode MemberReference KCode UTF8 BlockStatement StatementExpression Assignment MemberReference options Literal 64 |= ReturnStatement MethodInvocation MemberReference regexp str MemberReference options	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject LocalVariableDeclaration BasicType int VariableDeclarator newSize MethodInvocation RubyNumeric MemberReference num2int IfStatement BinaryOperation > MemberReference newSize MemberReference size BlockStatement StatementExpression Assignment MemberReference size MemberReference newSize = ReturnStatement MethodInvocation context MethodInvocation MemberReference size newFixnum getRuntime	1
MethodDeclaration Modifier public FormalParameter BasicType int arg StatementExpression MethodInvocation MethodInvocation MemberReference MemberReference arg getMethodVisitor	0
MethodDeclaration Modifier public FormalParameter BasicType int arg StatementExpression MethodInvocation MethodInvocation MemberReference MemberReference arg getMethodVisitor	0
MethodDeclaration Modifier public StatementExpression Assignment MemberReference firstFinalizer Literal null = StatementExpression Assignment MemberReference finalizers Literal null =	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType NodeVisitor iVisitor ReturnStatement MethodInvocation iVisitor This	0
MethodDeclaration Modifier public FormalParameter ReferenceType ret StatementExpression MethodInvocation MethodInvocation ret ArraySelector Literal 0 StatementExpression MethodInvocation MethodInvocation returnValue method	0
MethodDeclaration ReferenceType Iterator ReturnStatement ClassCreator ReferenceType	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "name" ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context ReturnStatement MethodInvocation context MethodInvocation MemberReference methodName getRuntime	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair required Literal 1 ReferenceType IRubyObject write FormalParameter ReferenceType IRubyObject p1 IOException LocalVariableDeclaration ReferenceType ByteList VariableDeclarator bytes MethodInvocation p1 MethodInvocation getByteList asString StatementExpression MethodInvocation io MethodInvocation bytes unsafeBytes MethodInvocation bytes begin MethodInvocation bytes length write ReturnStatement MethodInvocation MethodInvocation MethodInvocation bytes length newFixnum getRuntime	0
MethodDeclaration Modifier private FormalParameter ReferenceType ArgumentNode node StatementExpression MethodInvocation sb MethodInvocation MethodInvocation node getName append Literal " " append	0
MethodDeclaration Modifier private static BasicType int glob_helper FormalParameter ReferenceType String cwd FormalParameter BasicType byte bytes FormalParameter BasicType int begin FormalParameter BasicType int end FormalParameter BasicType int sub FormalParameter BasicType int flags FormalParameter ReferenceType func FormalParameter ReferenceType arg LocalVariableDeclaration BasicType int VariableDeclarator p VariableDeclarator m LocalVariableDeclaration BasicType int VariableDeclarator status Literal 0 LocalVariableDeclaration BasicType byte VariableDeclarator newpath Literal null LocalVariableDeclaration ReferenceType File VariableDeclarator st StatementExpression Assignment MemberReference p TernaryExpression BinaryOperation != MemberReference sub Literal - 1 MemberReference sub MemberReference begin = IfStatement MethodInvocation ! MemberReference bytes MemberReference p MemberReference end MemberReference flags has_magic BlockStatement IfStatement BinaryOperation || MemberReference DOSISH BinaryOperation == BinaryOperation & MemberReference flags MemberReference FNM_NOESCAPE Literal 0 BlockStatement StatementExpression Assignment MemberReference newpath ArrayCreator BasicType byte MemberReference end = StatementExpression MethodInvocation System MemberReference bytes Literal 0 MemberReference newpath Literal 0 MemberReference end arraycopy IfStatement BinaryOperation != MemberReference sub Literal - 1 BlockStatement StatementExpression Assignment MemberReference p BinaryOperation - MemberReference sub MemberReference begin = StatementExpression Assignment MemberReference end MethodInvocation MemberReference newpath MemberReference p MemberReference end remove_backslashes = StatementExpression Assignment MemberReference sub MemberReference p = BlockStatement StatementExpression Assignment MemberReference end MethodInvocation MemberReference newpath Literal 0 MemberReference end remove_backslashes = StatementExpression Assignment MemberReference bytes MemberReference newpath = IfStatement BinaryOperation || BinaryOperation == MemberReference ArraySelector MemberReference begin bytes Literal '/' BinaryOperation && BinaryOperation && BinaryOperation && MemberReference DOSISH BinaryOperation < BinaryOperation + MemberReference begin Literal 2 MemberReference end BinaryOperation == MemberReference ArraySelector BinaryOperation + MemberReference begin Literal 1 bytes Literal ':' MethodInvocation MemberReference ArraySelector BinaryOperation + MemberReference begin Literal 2 bytes isdirsep BlockStatement IfStatement ClassCreator MethodInvocation exists ReferenceType JavaSecuredFile MethodInvocation MemberReference bytes MemberReference begin BinaryOperation - MemberReference end MemberReference begin newStringFromUTF8 BlockStatement StatementExpression Assignment MemberReference status MethodInvocation func MemberReference bytes MemberReference begin MemberReference end MemberReference arg call = IfStatement MethodInvocation MemberReference bytes MemberReference begin MemberReference end BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator ix MemberReference end ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference end MemberReference ++ i BlockStatement IfStatement BinaryOperation == MemberReference ArraySelector BinaryOperation + MemberReference begin MemberReference i bytes Literal '!' BlockStatement StatementExpression Assignment MemberReference ix MemberReference i = BreakStatement StatementExpression Assignment MemberReference st ClassCreator ReferenceType JavaSecuredFile MethodInvocation MemberReference bytes BinaryOperation + MemberReference begin Literal 5 BinaryOperation - MemberReference ix Literal 5 newStringFromUTF8 = LocalVariableDeclaration ReferenceType String VariableDeclarator jar MethodInvocation MemberReference bytes BinaryOperation + BinaryOperation + MemberReference begin MemberReference ix Literal 1 BinaryOperation - MemberReference end BinaryOperation + MemberReference ix Literal 1 newStringFromUTF8 TryStatement LocalVariableDeclaration ReferenceType JarFile VariableDeclarator jf ClassCreator ReferenceType JarFile MemberReference st IfStatement MethodInvocation jar Literal "/" startsWith StatementExpression Assignment MemberReference jar MethodInvocation jar Literal 1 substring = IfStatement BinaryOperation != MethodInvocation jf BinaryOperation + MemberReference jar Literal "/" getEntry Literal null StatementExpression Assignment MemberReference jar BinaryOperation + MemberReference jar Literal "/" = IfStatement BinaryOperation != MethodInvocation jf MemberReference jar getEntry Literal null BlockStatement StatementExpression Assignment MemberReference status MethodInvocation func MemberReference bytes MemberReference begin MemberReference end MemberReference arg call = CatchClause CatchClauseParameter Exception e IfStatement BinaryOperation > BinaryOperation - MemberReference end MemberReference begin Literal 0 BlockStatement IfStatement ClassCreator MethodInvocation exists ReferenceType JavaSecuredFile MemberReference cwd MethodInvocation MemberReference bytes MemberReference begin BinaryOperation - MemberReference end MemberReference begin newStringFromUTF8 BlockStatement StatementExpression Assignment MemberReference status MethodInvocation func MemberReference bytes MemberReference begin BinaryOperation - MemberReference end MemberReference begin MemberReference arg call = ReturnStatement MemberReference status LocalVariableDeclaration ReferenceType ByteList VariableDeclarator buf ClassCreator ReferenceType ByteList Literal 20 LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType ByteList VariableDeclarator link ClassCreator ReferenceType ArrayList TypeArgument ReferenceType ByteList WhileStatement mainLoop BinaryOperation && BinaryOperation != MemberReference p Literal - 1 BinaryOperation == MemberReference status Literal 0 BlockStatement IfStatement BinaryOperation == MemberReference ArraySelector MemberReference p bytes Literal '/' StatementExpression MemberReference ++ p StatementExpression Assignment MemberReference m MethodInvocation MemberReference bytes MemberReference p MemberReference end Cast BasicType byte Literal '/' strchr = IfStatement MethodInvocation MemberReference bytes MemberReference p TernaryExpression BinaryOperation == MemberReference m Literal - 1 MemberReference end MemberReference m MemberReference flags has_magic BlockStatement DoStatement finalize Literal false BlockStatement LocalVariableDeclaration BasicType byte VariableDeclarator base MethodInvocation MemberReference bytes MemberReference begin MemberReference p extract_path LocalVariableDeclaration BasicType byte VariableDeclarator dir TernaryExpression BinaryOperation == MemberReference begin MemberReference p ArrayCreator BasicType byte ArrayInitializer Literal '.' MemberReference base LocalVariableDeclaration BasicType byte VariableDeclarator magic MethodInvocation MemberReference bytes MemberReference p MemberReference end extract_elem LocalVariableDeclaration BasicType boolean VariableDeclarator Literal false LocalVariableDeclaration ReferenceType String VariableDeclarator jar Literal null LocalVariableDeclaration ReferenceType JarFile VariableDeclarator jf Literal null IfStatement BinaryOperation || BinaryOperation == MemberReference ArraySelector Literal 0 dir Literal '/' BinaryOperation && BinaryOperation && BinaryOperation && MemberReference DOSISH BinaryOperation < Literal 2 MemberReference dir length BinaryOperation == MemberReference ArraySelector Literal 1 dir Literal ':' MethodInvocation MemberReference ArraySelector Literal 2 dir isdirsep BlockStatement StatementExpression Assignment MemberReference st ClassCreator ReferenceType JavaSecuredFile MethodInvocation MemberReference dir newStringFromUTF8 = IfStatement MethodInvocation MemberReference dir Literal 0 MemberReference dir length BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator ix MemberReference dir length ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference dir length MemberReference ++ i BlockStatement IfStatement BinaryOperation == MemberReference ArraySelector MemberReference i dir Literal '!' BlockStatement StatementExpression Assignment MemberReference ix MemberReference i = BreakStatement StatementExpression Assignment MemberReference st ClassCreator ReferenceType JavaSecuredFile MethodInvocation MemberReference dir Literal 5 BinaryOperation - MemberReference ix Literal 5 newStringFromUTF8 = StatementExpression Assignment MemberReference jar MethodInvocation MemberReference dir BinaryOperation + MemberReference ix Literal 1 BinaryOperation - MemberReference dir length BinaryOperation + MemberReference ix Literal 1 newStringFromUTF8 = TryStatement StatementExpression Assignment MemberReference jf ClassCreator ReferenceType JarFile MemberReference st = IfStatement MethodInvocation jar Literal "/" startsWith StatementExpression Assignment MemberReference jar MethodInvocation jar Literal 1 substring = IfStatement BinaryOperation != MethodInvocation jf BinaryOperation + MemberReference jar Literal "/" getEntry Literal null StatementExpression Assignment MemberReference jar BinaryOperation + MemberReference jar Literal "/" = CatchClause CatchClauseParameter Exception e StatementExpression Assignment MemberReference jar Literal null = StatementExpression Assignment MemberReference jf Literal null = BlockStatement StatementExpression Assignment MemberReference st ClassCreator ReferenceType JavaSecuredFile MemberReference cwd MethodInvocation MemberReference dir newStringFromUTF8 = IfStatement BinaryOperation || BinaryOperation && BinaryOperation != MemberReference jf Literal null BinaryOperation || Literal MethodInvocation MemberReference jar equals "" BinaryOperation && BinaryOperation != MethodInvocation jf MemberReference jar getJarEntry Literal null MethodInvocation jf MethodInvocation isDirectory MemberReference jar getJarEntry MethodInvocation st isDirectory BlockStatement IfStatement BinaryOperation && BinaryOperation != MemberReference m Literal - 1 MethodInvocation Arrays MemberReference magic MemberReference DOUBLE_STAR equals BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator n MemberReference base length StatementExpression Assignment MemberReference Literal true = StatementExpression MethodInvocation buf Literal 0 length StatementExpression MethodInvocation buf MemberReference base append StatementExpression MethodInvocation buf MemberReference bytes TernaryExpression BinaryOperation > MemberReference base length Literal 0 MemberReference m BinaryOperation + MemberReference m Literal 1 BinaryOperation - MemberReference end TernaryExpression BinaryOperation > MemberReference base length Literal 0 MemberReference m BinaryOperation + MemberReference m Literal 1 append StatementExpression Assignment MemberReference status MethodInvocation MemberReference cwd MemberReference buf bytes MemberReference buf begin MemberReference buf realSize MemberReference n MemberReference flags MemberReference func MemberReference arg glob_helper = IfStatement BinaryOperation != MemberReference status Literal 0 BlockStatement BreakStatement finalize BlockStatement BreakStatement mainLoop IfStatement BinaryOperation == MemberReference jar Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator dirp MethodInvocation MemberReference st files ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference dirp length MemberReference ++ i BlockStatement IfStatement MemberReference BlockStatement LocalVariableDeclaration BasicType byte VariableDeclarator bs MethodInvocation MemberReference ArraySelector MemberReference i dirp getBytesInUTF8 IfStatement BinaryOperation != MethodInvocation MemberReference STAR Literal 0 Literal 1 MemberReference bs Literal 0 MemberReference bs length MemberReference flags fnmatch Literal 0 BlockStatement ContinueStatement StatementExpression MethodInvocation buf Literal 0 length StatementExpression MethodInvocation buf MemberReference base append StatementExpression MethodInvocation buf TernaryExpression MethodInvocation MemberReference base MemberReference SLASH MemberReference EMPTY append StatementExpression MethodInvocation buf MethodInvocation MemberReference ArraySelector MemberReference i dirp getBytesInUTF8 append IfStatement BinaryOperation || BinaryOperation == MemberReference buf ArraySelector Literal 0 bytes Literal '/' BinaryOperation && BinaryOperation && BinaryOperation && MemberReference DOSISH BinaryOperation < Literal 2 MemberReference buf realSize BinaryOperation == MemberReference buf ArraySelector Literal 1 bytes Literal ':' MethodInvocation MemberReference buf ArraySelector Literal 2 bytes isdirsep BlockStatement StatementExpression Assignment MemberReference st ClassCreator ReferenceType JavaSecuredFile MethodInvocation MemberReference buf bytes MemberReference buf begin MemberReference buf realSize newStringFromUTF8 = BlockStatement StatementExpression Assignment MemberReference st ClassCreator ReferenceType JavaSecuredFile MemberReference cwd MethodInvocation MemberReference buf bytes MemberReference buf begin MemberReference buf realSize newStringFromUTF8 = IfStatement BinaryOperation && BinaryOperation && MethodInvocation st isDirectory Literal ! MethodInvocation MemberReference ArraySelector MemberReference i dirp equals "." Literal ! MethodInvocation MemberReference ArraySelector MemberReference i dirp equals ".." BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator t MemberReference buf realSize StatementExpression MethodInvocation buf MemberReference SLASH append StatementExpression MethodInvocation buf MemberReference DOUBLE_STAR append StatementExpression MethodInvocation buf MemberReference bytes MemberReference m BinaryOperation - MemberReference end MemberReference m append StatementExpression Assignment MemberReference status MethodInvocation MemberReference cwd MemberReference buf bytes MemberReference buf begin MemberReference buf realSize MemberReference t MemberReference flags MemberReference func MemberReference arg glob_helper = IfStatement BinaryOperation != MemberReference status Literal 0 BlockStatement BreakStatement ContinueStatement LocalVariableDeclaration BasicType byte VariableDeclarator bs MethodInvocation MemberReference ArraySelector MemberReference i dirp getBytesInUTF8 IfStatement BinaryOperation == MethodInvocation MemberReference magic Literal 0 MemberReference magic length MemberReference bs Literal 0 MemberReference bs length MemberReference flags fnmatch Literal 0 BlockStatement StatementExpression MethodInvocation buf Literal 0 length StatementExpression MethodInvocation buf MemberReference base append StatementExpression MethodInvocation buf TernaryExpression MethodInvocation MemberReference base MemberReference SLASH MemberReference EMPTY append StatementExpression MethodInvocation buf MethodInvocation MemberReference ArraySelector MemberReference i dirp getBytesInUTF8 append IfStatement BinaryOperation == MemberReference m Literal - 1 BlockStatement StatementExpression Assignment MemberReference status MethodInvocation func MemberReference buf bytes Literal 0 MemberReference buf realSize MemberReference arg call = IfStatement BinaryOperation != MemberReference status Literal 0 BlockStatement BreakStatement ContinueStatement StatementExpression MethodInvocation link MemberReference buf add StatementExpression Assignment MemberReference buf ClassCreator ReferenceType ByteList Literal 20 = BlockStatement TryStatement LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType JarEntry VariableDeclarator dirp ClassCreator ReferenceType ArrayList TypeArgument ReferenceType JarEntry ForStatement ForControl VariableDeclaration ReferenceType Enumeration TypeArgument ReferenceType JarEntry VariableDeclarator eje MethodInvocation jf entries MethodInvocation eje hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType JarEntry VariableDeclarator je MethodInvocation eje nextElement LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation je getName LocalVariableDeclaration BasicType int VariableDeclarator ix MethodInvocation name Literal '/' MethodInvocation jar length indexOf IfStatement BinaryOperation || BinaryOperation == MemberReference ix Literal - 1 BinaryOperation == MemberReference ix BinaryOperation - MethodInvocation name length Literal 1 BlockStatement IfStatement BinaryOperation || Literal MethodInvocation MemberReference jar equals "/" BinaryOperation && MethodInvocation name MemberReference jar startsWith BinaryOperation > MethodInvocation name length MethodInvocation jar length BlockStatement StatementExpression MethodInvocation dirp MemberReference je add ForStatement EnhancedForControl VariableDeclaration ReferenceType JarEntry VariableDeclarator je MemberReference dirp BlockStatement LocalVariableDeclaration BasicType byte VariableDeclarator bs MethodInvocation MethodInvocation je getName getBytesInUTF8 LocalVariableDeclaration BasicType int VariableDeclarator len MemberReference bs length IfStatement MethodInvocation je isDirectory BlockStatement StatementExpression MemberReference -- len IfStatement MemberReference BlockStatement IfStatement BinaryOperation != MethodInvocation MemberReference STAR Literal 0 Literal 1 MemberReference bs Literal 0 MemberReference len MemberReference flags fnmatch Literal 0 BlockStatement ContinueStatement StatementExpression MethodInvocation buf Literal 0 length StatementExpression MethodInvocation buf MemberReference base Literal 0 BinaryOperation - MemberReference base length MethodInvocation jar length append StatementExpression MethodInvocation buf TernaryExpression MethodInvocation MemberReference base MemberReference SLASH MemberReference EMPTY append StatementExpression MethodInvocation buf MemberReference bs Literal 0 MemberReference len append IfStatement MethodInvocation je isDirectory BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator t MemberReference buf realSize StatementExpression MethodInvocation buf MemberReference SLASH append StatementExpression MethodInvocation buf MemberReference DOUBLE_STAR append StatementExpression MethodInvocation buf MemberReference bytes MemberReference m BinaryOperation - MemberReference end MemberReference m append StatementExpression Assignment MemberReference status MethodInvocation MemberReference cwd MemberReference buf bytes MemberReference buf begin MemberReference buf realSize MemberReference t MemberReference flags MemberReference func MemberReference arg glob_helper = IfStatement BinaryOperation != MemberReference status Literal 0 BlockStatement BreakStatement ContinueStatement IfStatement BinaryOperation == MethodInvocation MemberReference magic Literal 0 MemberReference magic length MemberReference bs Literal 0 MemberReference len MemberReference flags fnmatch Literal 0 BlockStatement StatementExpression MethodInvocation buf Literal 0 length StatementExpression MethodInvocation buf MemberReference base Literal 0 BinaryOperation - MemberReference base length MethodInvocation jar length append StatementExpression MethodInvocation buf TernaryExpression MethodInvocation MemberReference base MemberReference SLASH MemberReference EMPTY append StatementExpression MethodInvocation buf MemberReference bs Literal 0 MemberReference len append IfStatement BinaryOperation == MemberReference m Literal - 1 BlockStatement StatementExpression Assignment MemberReference status MethodInvocation func MemberReference buf bytes Literal 0 MemberReference buf realSize MemberReference arg call = IfStatement BinaryOperation != MemberReference status Literal 0 BlockStatement BreakStatement ContinueStatement StatementExpression MethodInvocation link MemberReference buf add StatementExpression Assignment MemberReference buf ClassCreator ReferenceType ByteList Literal 20 = CatchClause CatchClauseParameter Exception e IfStatement BinaryOperation > MethodInvocation link size Literal 0 BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType ByteList VariableDeclarator b MemberReference link BlockStatement IfStatement BinaryOperation == MemberReference status Literal 0 BlockStatement IfStatement BinaryOperation || BinaryOperation == MemberReference b ArraySelector Literal 0 bytes Literal '/' BinaryOperation && BinaryOperation && BinaryOperation && MemberReference DOSISH BinaryOperation < Literal 2 MemberReference b realSize BinaryOperation == MemberReference b ArraySelector Literal 1 bytes Literal ':' MethodInvocation MemberReference b ArraySelector Literal 2 bytes isdirsep BlockStatement StatementExpression Assignment MemberReference st ClassCreator ReferenceType JavaSecuredFile MethodInvocation MemberReference b bytes Literal 0 MemberReference b realSize newStringFromUTF8 = BlockStatement StatementExpression Assignment MemberReference st ClassCreator ReferenceType JavaSecuredFile MemberReference cwd MethodInvocation MemberReference b bytes Literal 0 MemberReference b realSize newStringFromUTF8 = IfStatement MethodInvocation st isDirectory BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator len MemberReference b realSize StatementExpression MethodInvocation buf Literal 0 length StatementExpression MethodInvocation buf MemberReference b append StatementExpression MethodInvocation buf MemberReference bytes MemberReference m BinaryOperation - MemberReference end MemberReference m append StatementExpression Assignment MemberReference status MethodInvocation MemberReference cwd MemberReference buf bytes Literal 0 MemberReference buf realSize MemberReference len MemberReference flags MemberReference func MemberReference arg glob_helper = BreakStatement mainLoop StatementExpression Assignment MemberReference p MemberReference m = ReturnStatement MemberReference status	1
MethodDeclaration Modifier public ReferenceType Object next LocalVariableDeclaration ReferenceType Object VariableDeclarator result MemberReference entry IfStatement BinaryOperation == MemberReference result Literal null BlockStatement ThrowStatement ClassCreator ReferenceType NoSuchElementException BlockStatement StatementExpression Assignment MemberReference entry MemberReference entry next = StatementExpression MethodInvocation ReturnStatement MemberReference result	0
MethodDeclaration Modifier private subpatSet19 FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType RubyRegexp regexp FormalParameter ReferenceType IRubyObject backref FormalParameter ReferenceType IRubyObject repl LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime IfStatement BinaryOperation < MethodInvocation regexp MemberReference context This Literal 0 Literal false search19 Literal 0 ThrowStatement MethodInvocation runtime Literal "regexp not matched" newIndexError LocalVariableDeclaration ReferenceType RubyMatchData VariableDeclarator match Cast ReferenceType RubyMatchData MethodInvocation context MethodInvocation MemberReference runtime getBackRef getCurrentScope LocalVariableDeclaration BasicType int VariableDeclarator nth TernaryExpression BinaryOperation == MemberReference backref Literal null Literal 0 MethodInvocation MemberReference runtime MethodInvocation match MemberReference backref MemberReference match regs subpatSetCheck LocalVariableDeclaration Modifier final BasicType int VariableDeclarator start VariableDeclarator end IfStatement BinaryOperation == MemberReference match regs Literal null BlockStatement StatementExpression Assignment MemberReference start MemberReference match begin = StatementExpression Assignment MemberReference end MemberReference match end = BlockStatement StatementExpression Assignment MemberReference start MemberReference match.regs ArraySelector MemberReference nth beg = StatementExpression Assignment MemberReference end MemberReference match.regs ArraySelector MemberReference nth end = IfStatement BinaryOperation == MemberReference start Literal - 1 ThrowStatement MethodInvocation runtime BinaryOperation + BinaryOperation + Literal "regexp group " MemberReference nth Literal " not matched" newIndexError LocalVariableDeclaration ReferenceType RubyString VariableDeclarator replStr MethodInvocation repl convertToString LocalVariableDeclaration ReferenceType Encoding VariableDeclarator enc MethodInvocation MemberReference replStr checkEncoding StatementExpression MethodInvocation MemberReference start BinaryOperation - MemberReference end MemberReference start MemberReference replStr replaceInternal StatementExpression MethodInvocation MemberReference enc associateEncoding	1
MethodDeclaration Modifier public static BasicType byte ReturnStatement Cast BasicType byte Literal 1	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ReferenceType IRubyObject same FormalParameter ReferenceType IRubyObject other IfStatement BinaryOperation instanceof MemberReference other ReferenceType JavaObject BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation other dataGetStruct IfStatement BinaryOperation instanceof MemberReference ReferenceType JavaObject BlockStatement ReturnStatement MethodInvocation MethodInvocation getFalse getRuntime StatementExpression Assignment MemberReference other Cast ReferenceType IRubyObject MemberReference = LocalVariableDeclaration BasicType boolean VariableDeclarator isSame BinaryOperation == This MemberReference other ReturnStatement TernaryExpression MemberReference isSame MethodInvocation MethodInvocation getTrue getRuntime MethodInvocation MethodInvocation getFalse getRuntime	0
MethodDeclaration Modifier public final marshal FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType InvocationBuffer buffer FormalParameter ReferenceType IRubyObject parameter StatementExpression MethodInvocation buffer MethodInvocation Util MemberReference parameter uint8Value putByte	1
MethodDeclaration Modifier public ReferenceType Node getBodyNode ReturnStatement MemberReference bodyNode	0
MethodDeclaration Modifier public ReferenceType Object case281_line1093 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType FCallNoArgBlockNode MethodInvocation Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals getPosition Cast ReferenceType String Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals Cast ReferenceType IterNode MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "grpowned?" ElementValuePair required Literal 1 ElementValuePair module Literal true ReferenceType IRubyObject grpowned_p FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject filename LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation recv getRuntime LocalVariableDeclaration ReferenceType JRubyFile VariableDeclarator file MethodInvocation MemberReference filename file ReturnStatement MethodInvocation runtime BinaryOperation && MethodInvocation file exists MethodInvocation runtime MethodInvocation MethodInvocation file getAbsolutePath stat MethodInvocation isGroupOwned getPosix newBoolean	1
MethodDeclaration Modifier public ReferenceType Object convert FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject rubyObject IfStatement MethodInvocation rubyObject Literal "to_i" respondsTo BlockStatement ReturnStatement ClassCreator ReferenceType Short Cast BasicType short Cast ReferenceType RubyNumeric MethodInvocation rubyObject MemberReference context Literal "to_i" callMethod ReturnStatement ClassCreator ReferenceType Short Cast BasicType short Literal 0	1
MethodDeclaration Modifier public ReferenceType Object case469_line1785 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support MethodInvocation Cast ReferenceType ListNode MemberReference ArraySelector BinaryOperation + Literal - 5 MemberReference yyTop yyVals getPosition Cast ReferenceType ListNode MemberReference ArraySelector BinaryOperation + Literal - 5 MemberReference yyTop yyVals Cast ReferenceType ListNode MemberReference ArraySelector BinaryOperation + Literal - 3 MemberReference yyTop yyVals Literal null Cast ReferenceType ListNode MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals Cast ReferenceType BlockArgNode MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals new_args = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier private final ReferenceType IRubyObject invoke FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 FormalParameter ReferenceType IRubyObject arg3 LocalVariableDeclaration BasicType long VariableDeclarator retval MethodInvocation invoker MemberReference function MethodInvocation c1 MemberReference context MemberReference arg1 longValue MethodInvocation c2 MemberReference context MemberReference arg2 longValue MethodInvocation c3 MemberReference context MemberReference arg3 longValue ReturnStatement MethodInvocation resultConverter MemberReference context MemberReference retval fromNative	1
MethodDeclaration Modifier public ReferenceType Node getBodyNode ReturnStatement MemberReference bodyNode	0
MethodDeclaration Modifier public final ReferenceType IRubyObject FormalParameter ReferenceType RubyModule target FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType String name ReturnStatement MethodInvocation runtimeCache MemberReference target MemberReference context MemberReference name Literal 2 getConstantFrom	0
MethodDeclaration Modifier public ReferenceType Operand FormalParameter Modifier final ReferenceType AndNode andNode FormalParameter ReferenceType IR_Scope m IfStatement MethodInvocation andNode MethodInvocation getNodeType MethodInvocation getFirstNode BlockStatement StatementExpression MethodInvocation MethodInvocation andNode getFirstNode MemberReference m build ReturnStatement MethodInvocation MethodInvocation andNode getSecondNode MemberReference m build IfStatement MethodInvocation andNode MethodInvocation getNodeType MethodInvocation getFirstNode BlockStatement StatementExpression MethodInvocation MethodInvocation andNode getFirstNode MemberReference m build ReturnStatement MemberReference BooleanLiteral FALSE BlockStatement LocalVariableDeclaration ReferenceType Variable VariableDeclarator ret MethodInvocation m getNewVariable LocalVariableDeclaration ReferenceType Label VariableDeclarator l MethodInvocation m getNewLabel LocalVariableDeclaration ReferenceType Operand VariableDeclarator v1 MethodInvocation MethodInvocation andNode getFirstNode MemberReference m build StatementExpression MethodInvocation m ClassCreator ReferenceType COPY_Instr MemberReference ret MemberReference BooleanLiteral FALSE addInstr StatementExpression MethodInvocation m ClassCreator ReferenceType MemberReference v1 MemberReference BooleanLiteral FALSE MemberReference l addInstr LocalVariableDeclaration ReferenceType Operand VariableDeclarator v2 MethodInvocation MethodInvocation andNode getSecondNode MemberReference m build StatementExpression MethodInvocation m ClassCreator ReferenceType COPY_Instr MemberReference ret MemberReference v2 addInstr StatementExpression MethodInvocation m ClassCreator ReferenceType LABEL_Instr MemberReference l addInstr ReturnStatement MemberReference ret	0
MethodDeclaration Modifier public Annotation Deprecated store FormalParameter ReferenceType RubySymbol symbol ThrowStatement ClassCreator ReferenceType UnsupportedOperationException	1
MethodDeclaration Modifier public ReferenceType ChannelDescriptor getDescriptor ReturnStatement MemberReference descriptor	0
MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation context MemberReference go	0
MethodDeclaration Modifier public static Annotation Deprecated ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args ReturnStatement MethodInvocation MethodInvocation recv getRuntime MemberReference args	1
MethodDeclaration Modifier public FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType staticScope LocalVariableDeclaration ReferenceType RubyModule VariableDeclarator implementationClass MethodInvocation staticScope getModule IfStatement BinaryOperation == MemberReference implementationClass Literal null BlockStatement StatementExpression Assignment MemberReference implementationClass MemberReference clazz = StatementExpression MethodInvocation MethodInvocation staticScope StatementExpression MethodInvocation MemberReference implementationClass	1
MethodDeclaration Modifier public Annotation JRubyMethod ReferenceType RubyString to_generic_string ReturnStatement MethodInvocation MethodInvocation MethodInvocation field newString getRuntime	1
MethodDeclaration Modifier public ReferenceType Object case410_line1573 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop LocalVariableDeclaration BasicType int VariableDeclarator options Cast ReferenceType RegexpNode MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals LocalVariableDeclaration ReferenceType Node VariableDeclarator node Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals IfStatement BinaryOperation == MemberReference node Literal null BlockStatement StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType RegexpNode MethodInvocation Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals getPosition MethodInvocation ByteList Literal "" create BinaryOperation & MemberReference options MemberReference ~ ReOptions RE_OPTION_ONCE = IfStatement BinaryOperation instanceof MemberReference node ReferenceType StrNode BlockStatement StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType RegexpNode Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals Cast ReferenceType ByteList Cast ReferenceType StrNode MemberReference node BinaryOperation & MemberReference options MemberReference ~ ReOptions RE_OPTION_ONCE = IfStatement BinaryOperation instanceof MemberReference node ReferenceType DStrNode BlockStatement StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType DRegexpNode MethodInvocation Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals getPosition Cast ReferenceType DStrNode MemberReference node MemberReference options BinaryOperation != BinaryOperation & MemberReference options MemberReference ReOptions RE_OPTION_ONCE Literal 0 = BlockStatement StatementExpression Assignment MemberReference yyVal ClassCreator MethodInvocation MemberReference node add ReferenceType DRegexpNode MethodInvocation Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals getPosition MemberReference options BinaryOperation != BinaryOperation & MemberReference options MemberReference ReOptions RE_OPTION_ONCE Literal 0 = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public static ReferenceType IRubyObject nth_match FormalParameter BasicType int nth FormalParameter ReferenceType IRubyObject match IfStatement MethodInvocation match isNil ReturnStatement MemberReference match LocalVariableDeclaration ReferenceType RubyMatchData VariableDeclarator m Cast ReferenceType RubyMatchData MemberReference match LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation m getRuntime LocalVariableDeclaration Modifier final BasicType int VariableDeclarator start VariableDeclarator end IfStatement BinaryOperation == MemberReference m regs Literal null BlockStatement IfStatement BinaryOperation || BinaryOperation >= MemberReference nth Literal 1 BinaryOperation && BinaryOperation < MemberReference nth Literal 0 BinaryOperation <= MemberReference ++ nth Literal 0 ReturnStatement MethodInvocation runtime getNil StatementExpression Assignment MemberReference start MemberReference m begin = StatementExpression Assignment MemberReference end MemberReference m end = BlockStatement IfStatement BinaryOperation || BinaryOperation >= MemberReference nth MemberReference m.regs numRegs BinaryOperation && BinaryOperation < MemberReference nth Literal 0 BinaryOperation <= Assignment MemberReference nth MemberReference m.regs numRegs += Literal 0 ReturnStatement MethodInvocation runtime getNil StatementExpression Assignment MemberReference start MemberReference m.regs ArraySelector MemberReference nth beg = StatementExpression Assignment MemberReference end MemberReference m.regs ArraySelector MemberReference nth end = IfStatement BinaryOperation == MemberReference start Literal - 1 ReturnStatement MethodInvocation runtime getNil LocalVariableDeclaration ReferenceType RubyString VariableDeclarator str MethodInvocation m.str MemberReference runtime MemberReference start BinaryOperation - MemberReference end MemberReference start makeShared StatementExpression MethodInvocation str MemberReference m infectBy ReturnStatement MemberReference str	1
MethodDeclaration Modifier private BasicType boolean containsKey FormalParameter BasicType int hash FormalParameter ReferenceType Object masked_key LocalVariableDeclaration BasicType int VariableDeclarator idx MethodInvocation MemberReference hash index StatementExpression MethodInvocation expunge ForStatement ForControl VariableDeclaration ReferenceType Entry VariableDeclarator ent MemberReference ArraySelector MemberReference idx table BinaryOperation != MemberReference ent Literal null Assignment MemberReference ent MemberReference ent next = BlockStatement IfStatement MethodInvocation ent MemberReference hash MemberReference masked_key ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration Modifier public ReferenceType Class getAnnotatedMethodClass FormalParameter ReferenceType List TypeArgument ReferenceType JavaMethodDescriptor descs Exception LocalVariableDeclaration ReferenceType JavaMethodDescriptor VariableDeclarator desc1 MethodInvocation descs Literal 0 get IfStatement BinaryOperation == MethodInvocation descs size Literal 1 BlockStatement ReturnStatement MethodInvocation MemberReference desc1 getAnnotatedMethodClass IfStatement MethodInvocation ! Modifier MethodInvocation desc1 MethodInvocation getModifiers getDeclaringClass isPublic BlockStatement StatementExpression MethodInvocation System.err BinaryOperation + BinaryOperation + Literal "warning: non-public class" MemberReference desc1 declaringClassName Literal "; reflected handles won't work" println LocalVariableDeclaration ReferenceType String VariableDeclarator javaMethodName MemberReference desc1 name IfStatement MemberReference DEBUG StatementExpression MethodInvocation out BinaryOperation + BinaryOperation + BinaryOperation + Literal "Binding multiple: " MemberReference desc1 declaringClassName Literal "." MemberReference javaMethodName println LocalVariableDeclaration ReferenceType String VariableDeclarator generatedClassName MethodInvocation CodegenUtils MemberReference javaMethodName MemberReference desc1 declaringClassName MemberReference desc1 isStatic MemberReference desc1 actualRequired MemberReference desc1 optional Literal true MethodInvocation desc1.anno frame getAnnotatedBindingClassName IfStatement MemberReference RubyInstanceConfig FULL_TRACE_ENABLED BlockStatement StatementExpression Assignment MemberReference generatedClassName Literal "_DBG" += LocalVariableDeclaration ReferenceType String VariableDeclarator generatedClassPath MethodInvocation generatedClassName Literal '.' Literal '/' replace SynchronizedStatement MemberReference classLoader LocalVariableDeclaration ReferenceType Class VariableDeclarator c MethodInvocation MemberReference generatedClassName MethodInvocation desc1 getDeclaringClass tryClass LocalVariableDeclaration ReferenceType DescriptorInfo VariableDeclarator info ClassCreator ReferenceType DescriptorInfo MemberReference descs IfStatement MemberReference DEBUG StatementExpression MethodInvocation out BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal " min: " MethodInvocation info Literal ", max: " MethodInvocation info getMax Literal ", " MethodInvocation info Literal ", " MethodInvocation info isRest println IfStatement BinaryOperation == MemberReference c Literal null BlockStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator superClass Literal null IfStatement BinaryOperation == MethodInvocation info Literal - 1 BlockStatement StatementExpression Assignment MemberReference superClass ClassReference JavaMethod ReferenceType JavaMethodN = BlockStatement IfStatement MethodInvocation info isRest BlockStatement IfStatement MethodInvocation info BlockStatement StatementExpression Assignment MemberReference superClass MemberReference JavaMethod ArraySelector MethodInvocation info ArraySelector MethodInvocation info getMax = BlockStatement StatementExpression Assignment MemberReference superClass MemberReference JavaMethod ArraySelector MethodInvocation info ArraySelector MethodInvocation info getMax = BlockStatement IfStatement MethodInvocation info BlockStatement StatementExpression Assignment MemberReference superClass MemberReference JavaMethod ArraySelector MethodInvocation info ArraySelector MethodInvocation info getMax = BlockStatement StatementExpression Assignment MemberReference superClass MemberReference JavaMethod ArraySelector MethodInvocation info ArraySelector MethodInvocation info getMax = IfStatement BinaryOperation == MemberReference superClass Literal null ThrowStatement ClassCreator ReferenceType RuntimeException Literal "invalid multi LocalVariableDeclaration ReferenceType String VariableDeclarator superClassString MethodInvocation MemberReference superClass p LocalVariableDeclaration BasicType int VariableDeclarator dotIndex MethodInvocation desc1.declaringClassName Literal '.' lastIndexOf LocalVariableDeclaration ReferenceType ClassWriter VariableDeclarator cw MethodInvocation MemberReference generatedClassPath BinaryOperation + BinaryOperation + MethodInvocation desc1.declaringClassName BinaryOperation + MemberReference dotIndex Literal 1 substring Literal "#" MemberReference desc1 name MemberReference superClassString createJavaMethodCtor ForStatement EnhancedForControl VariableDeclaration ReferenceType JavaMethodDescriptor VariableDeclarator desc MemberReference descs BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator specificArity Literal - 1 IfStatement BinaryOperation && BinaryOperation == MemberReference desc optional Literal 0 MemberReference ! desc rest BlockStatement IfStatement BinaryOperation == MemberReference desc required Literal 0 BlockStatement IfStatement BinaryOperation <= MemberReference desc actualRequired Literal 3 BlockStatement StatementExpression Assignment MemberReference specificArity MemberReference desc actualRequired = BlockStatement StatementExpression Assignment MemberReference specificArity Literal - 1 = IfStatement BinaryOperation && BinaryOperation >= MemberReference desc required Literal 0 BinaryOperation <= MemberReference desc required Literal 3 BlockStatement StatementExpression Assignment MemberReference specificArity MemberReference desc required = LocalVariableDeclaration BasicType boolean VariableDeclarator hasBlock MemberReference desc hasBlock LocalVariableDeclaration ReferenceType SkinnyMethodAdapter VariableDeclarator mv Literal null StatementExpression Assignment MemberReference mv MethodInvocation MemberReference cw Literal "call" MemberReference specificArity MemberReference hasBlock = StatementExpression MethodInvocation mv visitCode LocalVariableDeclaration ReferenceType Label VariableDeclarator line ClassCreator ReferenceType Label StatementExpression MethodInvocation mv Literal 0 MemberReference line visitLineNumber StatementExpression MethodInvocation MemberReference desc MemberReference mv MemberReference superClassString MemberReference specificArity MemberReference hasBlock createAnnotatedMethodInvocation StatementExpression MethodInvocation MemberReference mv endMethod StatementExpression Assignment MemberReference c MethodInvocation MemberReference cw MemberReference generatedClassName endClass = ReturnStatement MemberReference c	1
MethodDeclaration Modifier public ReferenceType NodeType getNodeType ReturnStatement MemberReference NodeType ZSUPERNODE	0
MethodDeclaration Modifier public static ReferenceType IRubyObject dbl_cmp FormalParameter ReferenceType Ruby runtime FormalParameter BasicType double a FormalParameter BasicType double b IfStatement BinaryOperation || MethodInvocation Double MemberReference a isNaN MethodInvocation Double MemberReference b isNaN ReturnStatement MethodInvocation runtime getNil ReturnStatement TernaryExpression BinaryOperation == MemberReference a MemberReference b MethodInvocation RubyFixnum MemberReference runtime zero TernaryExpression BinaryOperation > MemberReference a MemberReference b MethodInvocation RubyFixnum MemberReference runtime one MethodInvocation RubyFixnum MemberReference runtime minus_one	1
MethodDeclaration Modifier public ReferenceType Object case49_line479 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 3 MemberReference yyTop yyVals Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals Literal null new_call = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier static protected ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg ReturnStatement MethodInvocation context MethodInvocation MethodInvocation MemberReference context Literal MemberReference arg callMethod getRuntime	0
MethodDeclaration Modifier public StatementExpression MethodInvocation MethodInvocation MemberReference visitInsn getMethodVisitor	1
MethodDeclaration Modifier public Annotation Override BasicType boolean FormalParameter ReferenceType IRubyObject obj FormalParameter ReferenceType RubyModule type ReturnStatement BinaryOperation instanceof MemberReference obj ReferenceType RubyHash	0
MethodDeclaration Modifier public Annotation Override BasicType boolean equals FormalParameter ReferenceType Object obj ReturnStatement BinaryOperation && BinaryOperation instanceof MemberReference obj ReferenceType BinaryOperation == Cast ReferenceType MemberReference obj Literal 0	0
MethodDeclaration Modifier private ReferenceType Map TypeArgument ReferenceType ByteList TypeArgument ReferenceType Regex get LocalVariableDeclaration ReferenceType Map TypeArgument ReferenceType ByteList TypeArgument ReferenceType Regex VariableDeclarator patternCache MethodInvocation cache get IfStatement BinaryOperation == MemberReference patternCache Literal null BlockStatement StatementExpression Assignment MemberReference patternCache ClassCreator ReferenceType ConcurrentHashMap TypeArgument ReferenceType ByteList TypeArgument ReferenceType Regex Literal 5 = StatementExpression Assignment MemberReference cache ClassCreator ReferenceType SoftReference TypeArgument ReferenceType Map TypeArgument ReferenceType ByteList TypeArgument ReferenceType Regex MemberReference patternCache = ReturnStatement MemberReference patternCache	1
MethodDeclaration Modifier public FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType staticScope StatementExpression MethodInvocation MemberReference name LocalVariableDeclaration ReferenceType RubyModule VariableDeclarator implementationClass MethodInvocation staticScope getModule IfStatement BinaryOperation == MemberReference implementationClass Literal null BlockStatement StatementExpression Assignment MemberReference implementationClass MemberReference clazz = StatementExpression MethodInvocation MethodInvocation staticScope StatementExpression MethodInvocation MemberReference implementationClass	1
MethodDeclaration Modifier public ReferenceType String getTypeInstance FormalParameter BasicType char c ReturnStatement Literal "char"	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "insert" ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 StatementExpression MethodInvocation modifyCheck ReturnStatement MethodInvocation MemberReference arg1 MemberReference arg2 insert	0
MethodDeclaration Modifier public FormalParameter ReferenceType String value IOException StatementExpression MethodInvocation Literal ':' write StatementExpression MethodInvocation MethodInvocation value length writeInt StatementExpression MethodInvocation out MethodInvocation RubyString MemberReference value write	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ReferenceType IRubyObject shift FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject num StatementExpression MethodInvocation modify LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator result MethodInvocation MemberReference context MemberReference num Literal false MethodInvocation context MethodInvocation getArray getRuntime LocalVariableDeclaration BasicType int VariableDeclarator n MemberReference result realLength StatementExpression Assignment MemberReference begin MemberReference n += StatementExpression Assignment MemberReference realLength MemberReference n -= ReturnStatement MemberReference result	0
MethodDeclaration Modifier public final BasicType double FormalParameter BasicType byte buffer FormalParameter BasicType int offset ReturnStatement MethodInvocation Double MethodInvocation MemberReference buffer MemberReference offset	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "==" ElementValuePair required Literal 1 ReferenceType IRubyObject op_equal FormalParameter ReferenceType IRubyObject other LocalVariableDeclaration Modifier final ReferenceType BigInteger VariableDeclarator otherValue IfStatement BinaryOperation instanceof MemberReference other ReferenceType RubyFixnum BlockStatement StatementExpression Assignment MemberReference otherValue MethodInvocation Cast ReferenceType RubyFixnum MemberReference other fix2big = IfStatement BinaryOperation instanceof MemberReference other ReferenceType RubyBignum BlockStatement StatementExpression Assignment MemberReference otherValue Cast ReferenceType RubyBignum MemberReference other = IfStatement BinaryOperation instanceof MemberReference other ReferenceType RubyFloat BlockStatement LocalVariableDeclaration BasicType double VariableDeclarator a Cast ReferenceType RubyFloat MemberReference other IfStatement MethodInvocation Double MemberReference a isNaN BlockStatement ReturnStatement MethodInvocation MethodInvocation getFalse getRuntime ReturnStatement MethodInvocation RubyBoolean MethodInvocation getRuntime BinaryOperation == MemberReference a MethodInvocation This big2dbl newBoolean BlockStatement ReturnStatement MethodInvocation other MethodInvocation MethodInvocation getCurrentContext getRuntime This ReturnStatement MethodInvocation RubyBoolean MethodInvocation getRuntime BinaryOperation == MethodInvocation value MemberReference otherValue compareTo Literal 0 newBoolean	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair module Literal true ElementValuePair visibility MemberReference Visibility PRIVATE ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject recv LocalVariableDeclaration ReferenceType RubyBasicObject VariableDeclarator res Cast ReferenceType RubyBasicObject Cast ReferenceType RubyModule MemberReference recv StatementExpression MethodInvocation res MethodInvocation recv getRuntime taint ReturnStatement MemberReference res	1
MethodDeclaration Modifier public Annotation Override ReferenceType String FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block ReturnStatement Literal	0
MethodDeclaration Modifier public StatementExpression MethodInvocation StatementExpression MethodInvocation Literal MethodInvocation ClassReference ReferenceType RubyClass MethodInvocation params sig	0
MethodDeclaration Modifier private ReferenceType RubyArray awkSplit FormalParameter BasicType boolean limit FormalParameter BasicType int lim FormalParameter BasicType int i LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation getRuntime LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator result MethodInvocation runtime newArray LocalVariableDeclaration BasicType byte VariableDeclarator bytes MemberReference value bytes LocalVariableDeclaration BasicType int VariableDeclarator p MemberReference value begin LocalVariableDeclaration BasicType int VariableDeclarator len MemberReference value realSize LocalVariableDeclaration BasicType int VariableDeclarator end BinaryOperation + MemberReference p MemberReference len LocalVariableDeclaration BasicType boolean VariableDeclarator skip Literal true LocalVariableDeclaration BasicType int VariableDeclarator e Literal 0 VariableDeclarator b Literal 0 WhileStatement BinaryOperation < MemberReference p MemberReference end BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator c BinaryOperation & MemberReference ArraySelector MemberReference ++ p bytes Literal 0xff IfStatement MemberReference skip BlockStatement IfStatement MethodInvocation ASCII MemberReference c isSpace BlockStatement StatementExpression MemberReference ++ b BlockStatement StatementExpression Assignment MemberReference e BinaryOperation + MemberReference b Literal 1 = StatementExpression Assignment MemberReference skip Literal false = IfStatement BinaryOperation && MemberReference limit BinaryOperation <= MemberReference lim MemberReference i BreakStatement BlockStatement IfStatement MethodInvocation ASCII MemberReference c isSpace BlockStatement StatementExpression MethodInvocation result MethodInvocation MemberReference runtime MemberReference b BinaryOperation - MemberReference e MemberReference b makeShared append StatementExpression Assignment MemberReference skip Literal true = StatementExpression Assignment MemberReference b BinaryOperation + MemberReference e Literal 1 = IfStatement MemberReference limit StatementExpression MemberReference ++ i BlockStatement StatementExpression MemberReference ++ e IfStatement BinaryOperation && BinaryOperation > MemberReference len Literal 0 BinaryOperation || BinaryOperation || MemberReference limit BinaryOperation > MemberReference len MemberReference b BinaryOperation < MemberReference lim Literal 0 StatementExpression MethodInvocation result MethodInvocation MemberReference runtime MemberReference b BinaryOperation - MemberReference len MemberReference b makeShared append ReturnStatement MemberReference result	1
MethodDeclaration Modifier public Annotation Override ReferenceType String asJavaString ReturnStatement MethodInvocation toString	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ">>" ElementValuePair required Literal 1 ReferenceType IRubyObject op_rshift FormalParameter ReferenceType IRubyObject other LocalVariableDeclaration BasicType long VariableDeclarator shift LocalVariableDeclaration BasicType boolean VariableDeclarator neg Literal false ForStatement ForControl BlockStatement IfStatement BinaryOperation instanceof MemberReference other ReferenceType RubyFixnum BlockStatement StatementExpression Assignment MemberReference shift Cast ReferenceType RubyFixnum MemberReference other = IfStatement BinaryOperation < MemberReference shift Literal 0 BlockStatement StatementExpression Assignment MemberReference neg Literal true = StatementExpression Assignment MemberReference shift MemberReference - shift = BreakStatement IfStatement BinaryOperation instanceof MemberReference other ReferenceType RubyBignum BlockStatement LocalVariableDeclaration ReferenceType RubyBignum VariableDeclarator otherBignum Cast ReferenceType RubyBignum MemberReference other IfStatement BinaryOperation >= MethodInvocation otherBignum.value signum Literal 0 BlockStatement LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator tmp MethodInvocation otherBignum This checkShiftDown IfStatement MethodInvocation ! tmp isNil ReturnStatement MemberReference tmp BlockStatement StatementExpression Assignment MemberReference neg Literal true = StatementExpression Assignment MemberReference shift MethodInvocation MemberReference otherBignum = BreakStatement StatementExpression Assignment MemberReference other MethodInvocation other convertToInteger = ReturnStatement MethodInvocation MethodInvocation getRuntime TernaryExpression MemberReference neg MethodInvocation value Cast BasicType int MemberReference shift shiftLeft MethodInvocation value Cast BasicType int MemberReference shift shiftRight bignorm	1
MethodDeclaration Modifier public ReferenceType RubyModule ReturnStatement MemberReference	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg IfStatement BinaryOperation instanceof MemberReference arg ReferenceType JavaObjectWrapper BlockStatement ReturnStatement MethodInvocation context MethodInvocation Cast ReferenceType JavaObjectWrapper MemberReference self newBoolean getRuntime BlockStatement ReturnStatement MethodInvocation context MethodInvocation getFalse getRuntime	0
MethodDeclaration Modifier public ReferenceType NodeType getNodeType ReturnStatement MemberReference NodeType	0
MethodDeclaration Modifier public ReferenceType Set TypeArgument ReferenceType CFG_Edge FormalParameter ReferenceType BasicBlock ReturnStatement MethodInvocation MemberReference	0
MethodDeclaration Modifier public static ReferenceType Object callIt FormalParameter ReferenceType Object a FormalParameter ReferenceType Object b FormalParameter ReferenceType Object c FormalParameter ReferenceType Object d FormalParameter ReferenceType SingleMethodInterface obj ReturnStatement MethodInvocation obj callIt	0
MethodDeclaration Modifier public ReferenceType IRubyObject ReturnStatement MemberReference	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ReferenceType IRubyObject StatementExpression MethodInvocation check IfStatement MethodInvocation ! isMatched ReturnStatement MethodInvocation MethodInvocation getNil getRuntime ReturnStatement MethodInvocation RubyFixnum MethodInvocation getRuntime BinaryOperation - MemberReference end MemberReference beg newFixnum	1
MethodDeclaration Modifier private BasicType boolean FormalParameter ReferenceType ThreadContext context FormalParameter BasicType int level FormalParameter ReferenceType RubyArray result LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator stack ClassCreator ReferenceType RubyArray MemberReference runtime MemberReference ARRAY_DEFAULT_SIZE Literal false LocalVariableDeclaration ReferenceType IdentityHashMap TypeArgument ReferenceType Object TypeArgument ReferenceType Object VariableDeclarator memo ClassCreator ReferenceType IdentityHashMap TypeArgument ReferenceType Object TypeArgument ReferenceType Object LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator ary This StatementExpression MethodInvocation memo MemberReference ary MemberReference NEVER put LocalVariableDeclaration BasicType boolean VariableDeclarator modified Literal false LocalVariableDeclaration BasicType int VariableDeclarator i Literal 0 WhileStatement Literal true BlockStatement LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator tmp WhileStatement BinaryOperation < MemberReference i MemberReference ary realLength BlockStatement LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator elt MemberReference ary ArraySelector BinaryOperation + MemberReference ary begin MemberReference ++ i values StatementExpression Assignment MemberReference tmp MethodInvocation elt checkArrayType = IfStatement BinaryOperation || MethodInvocation tmp isNil BinaryOperation && BinaryOperation >= MemberReference level Literal 0 BinaryOperation >= BinaryOperation / MemberReference stack realLength Literal 2 MemberReference level BlockStatement StatementExpression MethodInvocation result MemberReference elt append BlockStatement StatementExpression Assignment MemberReference modified Literal true = IfStatement BinaryOperation != MethodInvocation memo MemberReference tmp get Literal null ThrowStatement MethodInvocation runtime Literal "tried to array" newArgumentError StatementExpression MethodInvocation memo MemberReference tmp MemberReference NEVER put StatementExpression MethodInvocation stack MemberReference ary append StatementExpression MethodInvocation stack MethodInvocation RubyFixnum MemberReference runtime MemberReference i newFixnum append StatementExpression Assignment MemberReference ary Cast ReferenceType RubyArray MemberReference tmp = StatementExpression Assignment MemberReference i Literal 0 = IfStatement BinaryOperation == MemberReference stack realLength Literal 0 BreakStatement StatementExpression MethodInvocation memo MemberReference ary remove StatementExpression Assignment MemberReference tmp MethodInvocation stack MemberReference context pop = StatementExpression Assignment MemberReference i Cast BasicType int Cast ReferenceType RubyFixnum MemberReference tmp = StatementExpression Assignment MemberReference ary Cast ReferenceType RubyArray MethodInvocation stack MemberReference context pop = ReturnStatement MemberReference modified	1
MethodDeclaration Modifier public Annotation JRubyMethod ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context LocalVariableDeclaration ReferenceType ReferenceType VariableDeclarator addr MethodInvocation newInstance LocalVariableDeclaration ReferenceType VariableDeclarator len ClassCreator ReferenceType MemberReference IfStatement BinaryOperation < MethodInvocation INSTANCE MemberReference fd MemberReference addr MemberReference len Literal 0 BlockStatement StatementExpression MethodInvocation MethodInvocation context getRuntime Literal rb_sys_fail ReturnStatement MethodInvocation MethodInvocation context getRuntime MemberReference addr MemberReference len	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair optional Literal 1 ElementValuePair frame Literal true ElementValuePair writes MemberReference FrameField LASTLINE ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block ReturnStatement TernaryExpression MethodInvocation block isGiven MethodInvocation MemberReference context MemberReference args MemberReference block MethodInvocation MethodInvocation context getRuntime This Literal MemberReference args enumeratorize	0
MethodDeclaration Modifier public ReferenceType ReturnStatement MemberReference	0
MethodDeclaration Modifier private static ReferenceType IRubyObject methodMissingDirect FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType RubySymbol symbol FormalParameter ReferenceType Visibility lastVis FormalParameter ReferenceType CallType lastCallType FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator msg ClassCreator ReferenceType ReferenceType MemberReference runtime MemberReference recv MemberReference symbol MemberReference lastVis MemberReference lastCallType LocalVariableDeclaration Modifier final ReferenceType IRubyObject VariableDeclarator exArgs LocalVariableDeclaration Modifier final ReferenceType RubyClass VariableDeclarator exc IfStatement BinaryOperation != MemberReference lastCallType MemberReference CallType VARIABLE BlockStatement StatementExpression Assignment MemberReference exc MethodInvocation runtime = StatementExpression Assignment MemberReference exArgs ArrayCreator ReferenceType IRubyObject ArrayInitializer MemberReference msg MemberReference symbol MethodInvocation RubyArray MemberReference runtime MemberReference args Literal 1 newArrayNoCopy = BlockStatement StatementExpression Assignment MemberReference exc MethodInvocation runtime = StatementExpression Assignment MemberReference exArgs ArrayCreator ReferenceType IRubyObject ArrayInitializer MemberReference msg MemberReference symbol = ThrowStatement ClassCreator ReferenceType RaiseException Cast ReferenceType RubyException MethodInvocation exc MemberReference context MemberReference exArgs MemberReference Block NULL_BLOCK newInstance	1
MethodDeclaration Modifier public prepare FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 FormalParameter ReferenceType IRubyObject arg3 FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType DynamicScope VariableDeclarator scope MethodInvocation context getCurrentScope IfStatement MemberReference isSimple BlockStatement StatementExpression MethodInvocation scope MemberReference arg0 MemberReference arg1 MemberReference arg2 MemberReference arg3 setArgValues BlockStatement StatementExpression MethodInvocation MemberReference context MemberReference runtime MemberReference self ArrayCreator ReferenceType IRubyObject ArrayInitializer MemberReference arg0 MemberReference arg1 MemberReference arg2 MemberReference arg3 MemberReference block prepare IfStatement BinaryOperation != MethodInvocation getBlock Literal null StatementExpression MethodInvocation MemberReference scope MemberReference runtime MemberReference block processBlockArg	1
MethodDeclaration Modifier private final static ReferenceType RubySymbol createSymbolKey FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType IRubyObject key IfStatement BinaryOperation instanceof MemberReference key ReferenceType RubySymbol BlockStatement ReturnStatement Cast ReferenceType RubySymbol MemberReference key ReturnStatement MethodInvocation runtime MethodInvocation MethodInvocation key asJavaString	1
MethodDeclaration Modifier final static ReferenceType MemoryPointer FormalParameter ReferenceType Ruby runtime FormalParameter BasicType int typeSize FormalParameter BasicType int count FormalParameter BasicType boolean clear LocalVariableDeclaration Modifier final BasicType int VariableDeclarator total BinaryOperation * MemberReference typeSize MemberReference count LocalVariableDeclaration ReferenceType AllocatedDirectMemoryIO VariableDeclarator io MethodInvocation Factory MethodInvocation MemberReference runtime TernaryExpression BinaryOperation > MemberReference total Literal 0 MemberReference total Literal 1 MemberReference clear getInstance IfStatement BinaryOperation == MemberReference io Literal null BlockStatement ThrowStatement ClassCreator ReferenceType RaiseException MemberReference runtime MethodInvocation runtime MethodInvocation String Literal "Failed to %d objects of %d MemberReference typeSize MemberReference count format Literal true ReturnStatement ClassCreator ReferenceType MemoryPointer MemberReference runtime MethodInvocation runtime MethodInvocation Literal "MemoryPointer" fastGetClass Literal fastGetModule MemberReference io MemberReference total MemberReference typeSize	1
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject receiver FormalParameter ReferenceType IRubyObject args ReturnStatement MethodInvocation RuntimeHelpers MethodInvocation receiver MethodInvocation getCurrentContext getRuntime MemberReference receiver MemberReference args MemberReference Block NULL_BLOCK	0
MethodDeclaration Modifier public ReferenceType IRubyObject execute FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block StatementExpression MethodInvocation Arity MethodInvocation recv getRuntime MemberReference args Literal 1 Literal 1 checkArgumentCount ReturnStatement MethodInvocation Java MemberReference recv MemberReference ArraySelector Literal 0 args	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject set FormalParameter ReferenceType IRubyObject StatementExpression MethodInvocation runtime MethodInvocation MemberReference getCurrentContext ReturnStatement MemberReference	0
MethodDeclaration Modifier public remove IfStatement BinaryOperation == MemberReference entry MemberReference head BlockStatement ThrowStatement ClassCreator ReferenceType IllegalStateException Literal out of range" StatementExpression MethodInvocation MemberReference entry	0
MethodDeclaration Modifier public static ReferenceType CallSite FormalParameter ReferenceType Class caller FormalParameter ReferenceType String name FormalParameter ReferenceType MethodType type LocalVariableDeclaration ReferenceType VariableDeclarator site IfStatement BinaryOperation == MemberReference name Literal "call" BlockStatement StatementExpression Assignment MemberReference site ClassCreator ReferenceType MemberReference caller MemberReference name MemberReference type MemberReference CallType NORMAL = BlockStatement StatementExpression Assignment MemberReference site ClassCreator ReferenceType MemberReference caller MemberReference name MemberReference type MemberReference CallType FUNCTIONAL = LocalVariableDeclaration ReferenceType MethodType VariableDeclarator MethodInvocation type Literal 0 ClassReference ReferenceType LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation MethodHandles MethodInvocation MethodHandles MethodInvocation ClassReference ReferenceType Literal MemberReference lookup Literal 0 MemberReference site StatementExpression MethodInvocation site MemberReference ReturnStatement MemberReference site	1
MethodDeclaration Modifier private final ReferenceType IRubyObject inspect19 FormalParameter ReferenceType Ruby runtime LocalVariableDeclaration ReferenceType ByteList VariableDeclarator result ClassCreator ReferenceType ByteList BinaryOperation + MemberReference symbolBytes realSize Literal 1 StatementExpression Assignment MemberReference result encoding MemberReference symbolBytes encoding = StatementExpression MethodInvocation result Cast BasicType byte Literal ':' append StatementExpression MethodInvocation result MemberReference symbolBytes append LocalVariableDeclaration ReferenceType RubyString VariableDeclarator str MethodInvocation RubyString MemberReference runtime MemberReference result newString IfStatement BinaryOperation && MethodInvocation isPrintable MethodInvocation MemberReference symbol isSymbolName BlockStatement ReturnStatement MemberReference str BlockStatement StatementExpression Assignment MemberReference str Cast ReferenceType RubyString MethodInvocation str inspect19 = LocalVariableDeclaration ReferenceType ByteList VariableDeclarator bytes MethodInvocation str getByteList StatementExpression MethodInvocation bytes Literal 0 Literal ':' set StatementExpression MethodInvocation bytes Literal 1 Literal '"' set ReturnStatement MemberReference str	1
MethodDeclaration Modifier public final ReferenceType RubyString makeShared FormalParameter ReferenceType Ruby runtime FormalParameter BasicType int index FormalParameter BasicType int len LocalVariableDeclaration Modifier final ReferenceType RubyString VariableDeclarator shared LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator meta MethodInvocation getMetaClass IfStatement BinaryOperation == MemberReference len Literal 0 BlockStatement StatementExpression Assignment MemberReference shared MethodInvocation MemberReference runtime MemberReference meta newEmptyString = IfStatement BinaryOperation == MemberReference len Literal 1 BlockStatement StatementExpression Assignment MemberReference shared MethodInvocation MemberReference runtime MemberReference meta MemberReference RubyInteger ArraySelector BinaryOperation & MemberReference value ArraySelector BinaryOperation + MemberReference value begin MemberReference index bytes Literal 0xff SINGLE_CHAR_BYTELISTS = BlockStatement IfStatement BinaryOperation == MemberReference MemberReference StatementExpression Assignment MemberReference MemberReference SHARE_LEVEL_BUFFER = StatementExpression Assignment MemberReference shared ClassCreator ReferenceType RubyString MemberReference runtime MemberReference meta MethodInvocation value MemberReference index MemberReference len makeShared = StatementExpression Assignment MemberReference shared MemberReference SHARE_LEVEL_BUFFER = StatementExpression MethodInvocation shared This infectBy ReturnStatement MemberReference shared	1
MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject caller FormalParameter ReferenceType IRubyObject self FormalParameter BasicType long ReturnStatement MethodInvocation MemberReference context MemberReference caller MemberReference self MethodInvocation RubyFixnum MethodInvocation context getRuntime MemberReference newFixnum call	0
MethodDeclaration Modifier public Exception StatementExpression Assignment MemberReference testDir ClassCreator ReferenceType File Literal = StatementExpression MethodInvocation testDir mkdirs StatementExpression Assignment MemberReference testFile ClassCreator ReferenceType File MemberReference testDir Literal "hello.txt" = LocalVariableDeclaration ReferenceType FileWriter VariableDeclarator fw ClassCreator ReferenceType FileWriter MemberReference testFile StatementExpression MethodInvocation fw Literal write StatementExpression MethodInvocation fw close TryStatement LocalVariableDeclaration ReferenceType ByteArrayOutputStream VariableDeclarator baos ClassCreator ReferenceType ByteArrayOutputStream LocalVariableDeclaration BasicType int VariableDeclarator result MethodInvocation ShellLauncher MemberReference runtime ArrayCreator ReferenceType IRubyObject ArrayInitializer MethodInvocation RubyString MemberReference runtime Literal newString MethodInvocation RubyString MemberReference runtime Literal "-1" newString MethodInvocation RubyString MemberReference runtime MethodInvocation testDir getName newString MemberReference baos IfStatement BinaryOperation == MemberReference result Literal 0 BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg MethodInvocation baos toString StatementExpression Assignment MemberReference msg MethodInvocation msg Literal "\n" Literal "" replaceAll = StatementExpression MethodInvocation Literal "hello.txt" MemberReference msg assertEquals CatchClause CatchClauseParameter Exception e	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ReferenceType IRubyObject library FormalParameter ReferenceType ThreadContext context ReturnStatement MemberReference library	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType Block block IfStatement MethodInvocation block isGiven BlockStatement LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime StatementExpression MethodInvocation MemberReference runtime LocalVariableDeclaration ReferenceType VariableDeclarator proxy MethodInvocation MemberReference self LocalVariableDeclaration ReferenceType RubyProc VariableDeclarator proc MethodInvocation RubyProc MethodInvocation self getRuntime MemberReference block MemberReference Block.Type newProc LocalVariableDeclaration ReferenceType JavaConstructor VariableDeclarator constructor Cast ReferenceType JavaConstructor MethodInvocation MemberReference self MemberReference name MemberReference arg0 MemberReference arg1 MemberReference proc LocalVariableDeclaration ReferenceType Object VariableDeclarator cArg0 MethodInvocation MemberReference context MemberReference arg0 MemberReference constructor Literal 0 convertArg LocalVariableDeclaration ReferenceType Object VariableDeclarator cArg1 MethodInvocation MemberReference context MemberReference arg1 MemberReference constructor Literal 1 convertArg LocalVariableDeclaration ReferenceType Object VariableDeclarator cArg2 MethodInvocation MemberReference context MemberReference proc MemberReference constructor Literal 2 convertArg StatementExpression MethodInvocation proxy MethodInvocation JavaObject MemberReference runtime MethodInvocation constructor MemberReference cArg0 MemberReference cArg1 MemberReference cArg2 wrap ReturnStatement MemberReference self BlockStatement ReturnStatement MethodInvocation MemberReference context MemberReference self MemberReference clazz MemberReference name MemberReference arg0 MemberReference arg1 call	0
MethodDeclaration Modifier protected init_sock FormalParameter ReferenceType Ruby runtime TryStatement LocalVariableDeclaration ReferenceType ModeFlags VariableDeclarator modes ClassCreator ReferenceType ModeFlags MemberReference ModeFlags RDWR StatementExpression MethodInvocation openFile ClassCreator ReferenceType ChannelStream MemberReference runtime ClassCreator ReferenceType ChannelDescriptor ClassCreator ReferenceType MemberReference fd MethodInvocation getNewFileno MemberReference modes ClassCreator ReferenceType java ReferenceType io ReferenceType FileDescriptor setMainStream StatementExpression MethodInvocation openFile MethodInvocation openFile getMainStream setPipeStream StatementExpression MethodInvocation openFile MethodInvocation modes setMode StatementExpression MethodInvocation openFile MethodInvocation Literal true setSync getMainStream CatchClause CatchClauseParameter InvalidValueException ive ThrowStatement MethodInvocation runtime newErrnoEINVALError	1
MethodDeclaration Modifier public ReferenceType IfStatement BinaryOperation == MethodInvocation MemberReference CompatVersion RUBY1_8 BlockStatement ReturnStatement ClassCreator ReferenceType BlockStatement ReturnStatement ClassCreator ReferenceType	0
MethodDeclaration Modifier public static FormalParameter ReferenceType Ruby runtime StatementExpression MethodInvocation runtime MethodInvocation Literal "digest.so" require LocalVariableDeclaration ReferenceType RubyModule VariableDeclarator mDigest MethodInvocation runtime Literal "Digest" fastGetModule LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator cDigestBase MethodInvocation mDigest Literal "Base" fastGetClass LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator cDigest_MD5 MethodInvocation mDigest Literal MemberReference cDigestBase MethodInvocation cDigestBase getAllocator defineClassUnder StatementExpression MethodInvocation cDigest_MD5 Literal "block_length" ClassCreator ReferenceType Callback MethodDeclaration Modifier public ReferenceType Arity ReturnStatement MemberReference Arity MethodDeclaration Modifier public ReferenceType IRubyObject execute FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block ReturnStatement MethodInvocation RubyFixnum MethodInvocation recv getRuntime Literal 64 newFixnum defineFastMethod StatementExpression MethodInvocation cDigest_MD5 Literal "metadata" MethodInvocation runtime Literal newString setInternalModuleVariable	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "eql?" ReferenceType IRubyObject eql_p FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject other IfStatement BinaryOperation != MethodInvocation getClass MethodInvocation other getClass ReturnStatement MethodInvocation MethodInvocation getFalse getRuntime ReturnStatement TernaryExpression MethodInvocation MemberReference context This MemberReference other equalInternal MethodInvocation MethodInvocation getTrue getRuntime MethodInvocation MethodInvocation getFalse getRuntime	1
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block LocalVariableDeclaration BasicType int VariableDeclarator size MethodInvocation size LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator array ArrayCreator ReferenceType IRubyObject MemberReference size ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference size MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i array MethodInvocation MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference MemberReference i get = ReturnStatement MemberReference array	0
MethodDeclaration Modifier public ReferenceType computeValue FormalParameter ReferenceType String methodName FormalParameter ReferenceType arg IfStatement BinaryOperation instanceof MemberReference arg ReferenceType Fixnum BlockStatement IfStatement MethodInvocation methodName Literal "+" equals ReturnStatement ClassCreator ReferenceType Fixnum BinaryOperation + MemberReference _value Cast ReferenceType Fixnum MemberReference arg IfStatement MethodInvocation methodName Literal "-" equals ReturnStatement ClassCreator ReferenceType Fixnum BinaryOperation - MemberReference _value Cast ReferenceType Fixnum MemberReference arg IfStatement MethodInvocation methodName Literal "*" equals ReturnStatement ClassCreator ReferenceType Fixnum BinaryOperation * MemberReference _value Cast ReferenceType Fixnum MemberReference arg IfStatement MethodInvocation methodName Literal "/" equals BlockStatement LocalVariableDeclaration ReferenceType Long VariableDeclarator divisor Cast ReferenceType Fixnum MemberReference arg ReturnStatement TernaryExpression BinaryOperation == MemberReference divisor Literal 0L Literal null ClassCreator ReferenceType Fixnum BinaryOperation / MemberReference _value MemberReference divisor IfStatement BinaryOperation instanceof MemberReference arg ReferenceType Float BlockStatement IfStatement MethodInvocation methodName Literal "+" equals ReturnStatement ClassCreator ReferenceType Float BinaryOperation + MemberReference _value Cast ReferenceType Float MemberReference arg IfStatement MethodInvocation methodName Literal "-" equals ReturnStatement ClassCreator ReferenceType Float BinaryOperation - MemberReference _value Cast ReferenceType Float MemberReference arg IfStatement MethodInvocation methodName Literal "*" equals ReturnStatement ClassCreator ReferenceType Float BinaryOperation * MemberReference _value Cast ReferenceType Float MemberReference arg IfStatement MethodInvocation methodName Literal "/" equals BlockStatement LocalVariableDeclaration ReferenceType Double VariableDeclarator divisor Cast ReferenceType Float MemberReference arg ReturnStatement TernaryExpression BinaryOperation == MemberReference divisor Literal 0.0 Literal null ClassCreator ReferenceType Float BinaryOperation / MemberReference _value MemberReference divisor ReturnStatement Literal null	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "to_c" ElementValuePair reads MemberReference BACKREF ElementValuePair writes MemberReference BACKREF ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject to_c FormalParameter ReferenceType ThreadContext context LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration ReferenceType DynamicScope VariableDeclarator scope MethodInvocation context getCurrentScope LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator backref MethodInvocation scope MemberReference runtime getBackRef IfStatement BinaryOperation instanceof MemberReference backref ReferenceType RubyMatchData StatementExpression Cast ReferenceType RubyMatchData MemberReference backref LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator s MethodInvocation RuntimeHelpers MemberReference context This Literal MethodInvocation RubyRegexp MemberReference runtime MemberReference Numeric.ComplexPatterns underscores_pat newDummyRegexp MethodInvocation runtime ClassCreator ReferenceType ByteList ArrayCreator BasicType byte ArrayInitializer Literal '_' newString invoke LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator a MethodInvocation RubyComplex MemberReference context MemberReference s str_to_c_internal StatementExpression MethodInvocation scope MemberReference backref setBackRef IfStatement MethodInvocation ! a MethodInvocation isNil Literal 0 eltInternal BlockStatement ReturnStatement MethodInvocation a Literal 0 eltInternal BlockStatement ReturnStatement MethodInvocation RubyComplex MemberReference context MethodInvocation RubyFixnum MemberReference runtime zero	1
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg0 StatementExpression MethodInvocation MethodInvocation self getRuntime LocalVariableDeclaration ReferenceType VariableDeclarator proxy MethodInvocation MemberReference self LocalVariableDeclaration ReferenceType JavaMethod VariableDeclarator method Cast ReferenceType JavaMethod MethodInvocation MemberReference self MemberReference name MemberReference arg0 LocalVariableDeclaration ReferenceType Object VariableDeclarator cArg0 MethodInvocation MemberReference context MemberReference arg0 MemberReference method Literal 0 convertArg ReturnStatement MethodInvocation method MethodInvocation proxy getObject MemberReference cArg0	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "tr_s!" ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject src FormalParameter ReferenceType IRubyObject repl ReturnStatement MethodInvocation MemberReference context MemberReference src MemberReference repl Literal true trTrans	1
MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject args SwitchStatement MemberReference args length SwitchStatementCase Literal 2 ReturnStatement MethodInvocation MemberReference context MemberReference self MemberReference clazz MemberReference name MemberReference ArraySelector Literal 0 args MemberReference ArraySelector Literal 1 args call SwitchStatementCase Literal 3 ReturnStatement MethodInvocation MemberReference context MemberReference self MemberReference clazz MemberReference name MemberReference ArraySelector Literal 0 args MemberReference ArraySelector Literal 1 args MemberReference ArraySelector Literal 2 args call SwitchStatementCase ReturnStatement MethodInvocation This MemberReference context MemberReference name MemberReference args length Literal 2 Literal 3 raiseArgumentError	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement BinaryOperation == MemberReference MemberReference	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ReferenceType RubyTime StatementExpression Assignment MemberReference dt MethodInvocation dt MethodInvocation MethodInvocation getRuntime getLocalTimeZone = ReturnStatement This	0
MethodDeclaration Modifier public ReferenceType Object case411_line1588 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType ZArrayNode MethodInvocation Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals getPosition = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public ReferenceType IRubyObject decode FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ByteBuffer enc LocalVariableDeclaration BasicType int VariableDeclarator c MethodInvocation enc get ReturnStatement MethodInvocation runtime TernaryExpression BinaryOperation > MemberReference c Cast BasicType char Literal 127 BinaryOperation - MemberReference c Literal 256 MemberReference c newFixnum	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block ReturnStatement MethodInvocation callAdapter MemberReference context MemberReference self MemberReference self MethodInvocation RuntimeHelpers MemberReference context MemberReference self MemberReference getBlock	0
MethodDeclaration Modifier public ReferenceType RubyModule LocalVariableDeclaration BasicType int VariableDeclarator index MemberReference LocalVariableDeclaration ReferenceType RubyModule VariableDeclarator stack MemberReference LocalVariableDeclaration ReferenceType RubyModule VariableDeclarator ret MemberReference ArraySelector MemberReference index stack StatementExpression Assignment MemberReference ArraySelector MemberReference index stack Literal null = StatementExpression Assignment MemberReference BinaryOperation - MemberReference index Literal 1 = ReturnStatement MemberReference ret	0
MethodDeclaration Modifier private final static BasicType int getNativeLibraryFlags FormalParameter ReferenceType IRubyObject rbFlags LocalVariableDeclaration BasicType int VariableDeclarator f Literal 0 VariableDeclarator flags MethodInvocation RubyNumeric MemberReference rbFlags fix2int StatementExpression Assignment MemberReference f TernaryExpression BinaryOperation != BinaryOperation & MemberReference flags MemberReference Literal 0 MemberReference Library LAZY Literal 0 |= StatementExpression Assignment MemberReference f TernaryExpression BinaryOperation != BinaryOperation & MemberReference flags MemberReference Literal 0 MemberReference Library Literal 0 |= StatementExpression Assignment MemberReference f TernaryExpression BinaryOperation != BinaryOperation & MemberReference flags MemberReference Literal 0 MemberReference Library LOCAL Literal 0 |= StatementExpression Assignment MemberReference f TernaryExpression BinaryOperation != BinaryOperation & MemberReference flags MemberReference Literal 0 MemberReference Library Literal 0 |= ReturnStatement MemberReference f	1
MethodDeclaration Modifier public ReferenceType ReturnStatement MemberReference scope	0
MethodDeclaration Modifier public sync FormalParameter ReferenceType List TypeArgument ReferenceType Variable TypeArgument ReferenceType IRubyObject vars IfStatement BinaryOperation && BinaryOperation <= MethodInvocation vars size MemberReference MAX_PACKED BinaryOperation || MemberReference USE_PACKED_ARRAY MemberReference USE_PACKED_FIELDS BlockStatement IfStatement MemberReference USE_PACKED_ARRAY BlockStatement StatementExpression Assignment MemberReference packedVTable ArrayCreator ReferenceType Object BinaryOperation * MemberReference MAX_PACKED Literal 2 = LocalVariableDeclaration BasicType int VariableDeclarator i Literal 0 ForStatement EnhancedForControl VariableDeclaration ReferenceType Variable TypeArgument ReferenceType IRubyObject VariableDeclarator var MemberReference vars BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation var getName AssertStatement BinaryOperation == MemberReference name MethodInvocation name intern BinaryOperation + MemberReference name Literal " is not interned" StatementExpression Assignment MemberReference ArraySelector MemberReference i packedVTable MemberReference name = StatementExpression Assignment MemberReference ArraySelector BinaryOperation + MemberReference i MemberReference MAX_PACKED packedVTable MethodInvocation var getValue = StatementExpression MemberReference ++ i StatementExpression Assignment MemberReference vTableSize MethodInvocation vars size = IfStatement MemberReference USE_PACKED_FIELDS BlockStatement StatementExpression Assignment MemberReference packedVFields ClassCreator ReferenceType = ForStatement EnhancedForControl VariableDeclaration ReferenceType Variable TypeArgument ReferenceType IRubyObject VariableDeclarator var MemberReference vars BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation var getName AssertStatement BinaryOperation == MemberReference name MethodInvocation name intern BinaryOperation + MemberReference name Literal " is not interned" StatementExpression MethodInvocation packedVFields MemberReference name MethodInvocation var getValue insert BlockStatement StatementExpression Assignment MemberReference vTableThreshold Cast BasicType int BinaryOperation * MemberReference MemberReference = StatementExpression Assignment MemberReference vTable ArrayCreator ReferenceType VariableTableEntry MemberReference = ForStatement EnhancedForControl VariableDeclaration ReferenceType Variable TypeArgument ReferenceType IRubyObject VariableDeclarator var MemberReference vars BlockStatement StatementExpression MethodInvocation MethodInvocation var getName MethodInvocation var getValue store	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "initialize" ElementValuePair optional Literal 1 ElementValuePair frame Literal true ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block unusedBlock IfStatement BinaryOperation && BinaryOperation > MemberReference args length Literal 0 MemberReference ! ArraySelector Literal 0 MethodInvocation isNil args BlockStatement StatementExpression MethodInvocation MemberReference ArraySelector Literal 0 args update ReturnStatement This	0
MethodDeclaration Modifier public static ReferenceType String toString FormalParameter ReferenceType Object obj ReturnStatement MethodInvocation obj toString	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal Literal ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject image FormalParameter ReferenceType ThreadContext context ReturnStatement MethodInvocation RubyFixnum MethodInvocation context getRuntime zero	0
MethodDeclaration Modifier static ReferenceType FormalParameter ReferenceType Type returnType IfStatement BinaryOperation instanceof MemberReference returnType ReferenceType Type ReferenceType Builtin BlockStatement ReturnStatement MethodInvocation MethodInvocation returnType getNativeType IfStatement BinaryOperation instanceof MemberReference returnType ReferenceType CallbackInfo BlockStatement ReturnStatement ClassCreator ReferenceType Cast ReferenceType CallbackInfo MemberReference returnType IfStatement BinaryOperation instanceof MemberReference returnType ReferenceType org ReferenceType jruby ReferenceType ext ReferenceType ffi ReferenceType Enum BlockStatement ReturnStatement ClassCreator ReferenceType Cast ReferenceType org ReferenceType jruby ReferenceType ext ReferenceType ffi ReferenceType Enum MemberReference returnType IfStatement BinaryOperation instanceof MemberReference returnType ReferenceType StructByValue BlockStatement ReturnStatement ClassCreator ReferenceType Cast ReferenceType StructByValue MemberReference returnType ThrowStatement MethodInvocation returnType MethodInvocation BinaryOperation + Literal "Cannot get for " MemberReference returnType newArgumentError getRuntime	0
MethodDeclaration Modifier private BasicType boolean FormalParameter ReferenceType String arg IfStatement BinaryOperation != Literal null MemberReference arg BlockStatement ReturnStatement MethodInvocation MemberReference arg ReturnStatement Literal false	0
MethodDeclaration Modifier public FormalParameter ReferenceType List TypeArgument ReferenceType Operand args FormalParameter ReferenceType Node node FormalParameter ReferenceType IR_Scope s SwitchStatement MethodInvocation node getNodeType SwitchStatementCase ARGSCATNODE StatementExpression MethodInvocation MemberReference args Cast ReferenceType ArgsCatNode MemberReference node MemberReference s BreakStatement SwitchStatementCase ARGSPUSHNODE StatementExpression MethodInvocation MemberReference args Cast ReferenceType ArgsPushNode MemberReference node MemberReference s BreakStatement SwitchStatementCase ARRAYNODE StatementExpression MethodInvocation MemberReference args MemberReference node MemberReference s buildArrayArguments BreakStatement SwitchStatementCase SPLATNODE StatementExpression MethodInvocation MemberReference args Cast ReferenceType SplatNode MemberReference node MemberReference s BreakStatement SwitchStatementCase LocalVariableDeclaration ReferenceType Operand VariableDeclarator retVal MethodInvocation MemberReference node MemberReference s build IfStatement BinaryOperation != MemberReference retVal Literal null StatementExpression MethodInvocation args MemberReference retVal add	1
MethodDeclaration Modifier static protected ReferenceType RubyClass pollAndGetClass FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule FormalParameter ReferenceType String StatementExpression MethodInvocation MemberReference context MemberReference MemberReference LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator superClass MethodInvocation RuntimeHelpers MethodInvocation getSuperClass MethodInvocation self getMetaClass MemberReference ReturnStatement MemberReference superClass	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair required Literal 1 ReferenceType IRubyObject extend_proxy FormalParameter ReferenceType IRubyObject extender StatementExpression MethodInvocation MemberReference extender addProxyExtender ReturnStatement MethodInvocation MethodInvocation getNil getRuntime	1
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 FormalParameter ReferenceType IRubyObject arg3 FormalParameter ReferenceType IRubyObject arg4 FormalParameter ReferenceType IRubyObject arg5 FormalParameter ReferenceType IRubyObject arg6 FormalParameter ReferenceType FormalParameter ReferenceType Block ReferenceType Type type ReturnStatement MethodInvocation MemberReference context MethodInvocation context MethodInvocation MemberReference arg0 MemberReference arg1 MemberReference arg2 MemberReference arg3 MemberReference arg4 MemberReference arg5 MemberReference arg6 getRuntime Literal null Literal null Literal true MemberReference MemberReference type yield	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "to_a" ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject recv Exception LocalVariableDeclaration ReferenceType ConsoleHolder VariableDeclarator holder MethodInvocation MethodInvocation recv getRuntime getHolder LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator histList MethodInvocation recv MethodInvocation newArray getRuntime ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation holder.history MethodInvocation iterator getHistoryList MethodInvocation i hasNext BlockStatement StatementExpression MethodInvocation histList MethodInvocation recv MethodInvocation Cast ReferenceType String MethodInvocation i next newString getRuntime append ReturnStatement MemberReference histList	1
MethodDeclaration Modifier public ReferenceType Object case252_line983 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop LocalVariableDeclaration ReferenceType Node VariableDeclarator node MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals splat_array IfStatement BinaryOperation != MemberReference node Literal null BlockStatement StatementExpression Assignment MemberReference yyVal MethodInvocation support MemberReference node Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals list_append = BlockStatement StatementExpression Assignment MemberReference yyVal MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals arg_append = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public ReferenceType String FormalParameter ReferenceType Node typeNode SwitchStatement MethodInvocation typeNode getNodeType SwitchStatementCase CONSTNODE ReturnStatement Cast ReferenceType ConstNode MemberReference typeNode SwitchStatementCase ReturnStatement Cast ReferenceType SymbolNode MemberReference typeNode SwitchStatementCase ReturnStatement Literal	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "select" ElementValuePair required Literal 1 ElementValuePair optional Literal 3 ElementValuePair meta Literal true ReferenceType IRubyObject select FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args ReturnStatement MethodInvocation MemberReference context MethodInvocation context getRuntime MemberReference args	0
MethodDeclaration Modifier public ReferenceType RaiseException ReturnStatement MethodInvocation MethodInvocation MethodInvocation Literal fastGetClass getErrno Literal "Connection reset by newRaiseException	0
MethodDeclaration Modifier public BasicType boolean matches FormalParameter Modifier final ReferenceType RubyHashEntry entry FormalParameter Modifier final ReferenceType Object obj LocalVariableDeclaration Modifier final ReferenceType IRubyObject VariableDeclarator key MemberReference entry key ReturnStatement BinaryOperation || BinaryOperation == MemberReference obj MemberReference key Cast ReferenceType IRubyObject MemberReference obj	1
MethodDeclaration Modifier private static FormalParameter ReferenceType ByteList result FormalParameter BasicType long l StatementExpression MethodInvocation MemberReference result Cast BasicType int BinaryOperation & MemberReference l Literal StatementExpression MethodInvocation MemberReference result Cast BasicType int BinaryOperation >>> MemberReference l Literal 32	0
MethodDeclaration Modifier public Annotation JRubyMethod ReferenceType IRubyObject ReturnStatement MethodInvocation Java MethodInvocation getRuntime MethodInvocation MethodInvocation getDeclaredAnnotations javaClass getInstance	1
MethodDeclaration Modifier public StatementExpression MethodInvocation MethodInvocation MemberReference visitInsn getMethodVisitor	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ReferenceType IRubyObject ReturnStatement MethodInvocation MethodInvocation MethodInvocation stat MethodInvocation stat major newFixnum getRuntime	0
MethodDeclaration Modifier public static BasicType boolean FormalParameter ReferenceType IRubyObject candidate ReturnStatement BinaryOperation instanceof MethodInvocation candidate dataGetStruct ReferenceType JavaObject	0
MethodDeclaration Modifier private static ReferenceType IRubyObject FormalParameter ReferenceType CacheEntry entry FormalParameter ReferenceType CallType callType FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 FormalParameter ReferenceType Block block ReturnStatement MethodInvocation RuntimeHelpers MethodInvocation MemberReference context MemberReference self MethodInvocation self getMetaClass MemberReference name MemberReference arg0 MemberReference arg1 MemberReference arg2 MemberReference block call MemberReference context MemberReference self MethodInvocation getVisibility MemberReference name MemberReference callType	1
MethodDeclaration Modifier public Annotation Override setCallConfig FormalParameter ReferenceType CallConfiguration callConfig IfStatement BinaryOperation == MemberReference compiledMethod Literal null StatementExpression MethodInvocation initializeMethod StatementExpression MethodInvocation compiledMethod MemberReference callConfig setCallConfig	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair frame Literal true ElementValuePair module Literal true ElementValuePair visibility MemberReference PRIVATE ElementValuePair reads MemberReference LASTLINE ElementValuePair writes MemberReference LASTLINE ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType IRubyObject gsub FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType RubyString VariableDeclarator str Cast ReferenceType RubyString MethodInvocation MethodInvocation dup MemberReference context MethodInvocation context getRuntime getLastlineString IfStatement MethodInvocation ! str MethodInvocation isNil MemberReference context MemberReference arg0 MemberReference arg1 MemberReference block gsub_bang BlockStatement StatementExpression MethodInvocation context MethodInvocation MemberReference str setLastLine getCurrentScope ReturnStatement MemberReference str	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "values" ReferenceType RubyArray TryStatement LocalVariableDeclaration Modifier final ReferenceType RubyArray VariableDeclarator values MethodInvocation RubyArray MethodInvocation getRuntime MemberReference size newArray StatementExpression MethodInvocation ClassCreator ReferenceType Visitor MethodDeclaration Modifier public visit FormalParameter ReferenceType IRubyObject key FormalParameter ReferenceType IRubyObject value StatementExpression MethodInvocation values MemberReference value append ReturnStatement MemberReference values CatchClause CatchClauseParameter ThrowStatement MethodInvocation concurrentModification	1
MethodDeclaration Modifier public ReferenceType Node getBodyNode ReturnStatement MemberReference bodyNode	0
MethodDeclaration Modifier private ReferenceType Node FormalParameter ReferenceType Node head WhileStatement BinaryOperation instanceof MemberReference head ReferenceType NewlineNode BlockStatement LocalVariableDeclaration ReferenceType Node VariableDeclarator nextNode Cast ReferenceType NewlineNode MemberReference head IfStatement BinaryOperation instanceof MemberReference nextNode ReferenceType NewlineNode BlockStatement BreakStatement StatementExpression Assignment MemberReference head MemberReference nextNode = ReturnStatement MemberReference head	0
MethodDeclaration Modifier public FormalParameter ReferenceType CharSequence buffer LocalVariableDeclaration BasicType int VariableDeclarator length MethodInvocation buffer length ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i BinaryOperation - MemberReference length Literal 1 BinaryOperation >= MemberReference i Literal 0 MemberReference -- i BlockStatement StatementExpression MethodInvocation MethodInvocation buffer MemberReference i charAt unread	0
MethodDeclaration Modifier public static BasicType int FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType IRubyObject FormalParameter ReferenceType OutputStream output LocalVariableDeclaration ReferenceType OutputStream VariableDeclarator error MethodInvocation runtime getErrorStream LocalVariableDeclaration ReferenceType InputStream VariableDeclarator input MethodInvocation runtime getInputStream TryStatement LocalVariableDeclaration ReferenceType Process VariableDeclarator aProcess MethodInvocation MemberReference runtime MemberReference run StatementExpression MethodInvocation MemberReference aProcess MemberReference input MemberReference output MemberReference error ReturnStatement MethodInvocation aProcess waitFor CatchClause CatchClauseParameter IOException e ThrowStatement MethodInvocation runtime MemberReference e newIOErrorFromException CatchClause CatchClauseParameter InterruptedException e ThrowStatement MethodInvocation runtime Literal "unexpected interrupt" newThreadError	1
MethodDeclaration Modifier private static ReferenceType InputStream inputStream FormalParameter ReferenceType IRubyObject in StatementExpression MethodInvocation MemberReference in IfStatement BinaryOperation instanceof MemberReference in ReferenceType RubyIO BlockStatement ReturnStatement Cast ReferenceType RubyIO MemberReference in ReturnStatement ClassCreator ReferenceType MemberReference in	0
MethodDeclaration Modifier static ReferenceType ByteList FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ByteList bytes FormalParameter BasicType int options FormalParameter ReferenceType Encoding enc ReturnStatement MethodInvocation MemberReference runtime MemberReference bytes bytes MemberReference bytes begin MemberReference bytes realSize MemberReference options MemberReference enc	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ReferenceType RubyIO flush TryStatement StatementExpression MethodInvocation MethodInvocation getWriteStream MethodInvocation fflush getOpenFileChecked CatchClause CatchClauseParameter BadDescriptorException e ThrowStatement MethodInvocation MethodInvocation newErrnoEBADFError getRuntime CatchClause CatchClauseParameter IOException e ThrowStatement MethodInvocation MethodInvocation MethodInvocation e getMessage newIOError getRuntime ReturnStatement This	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal "==" Literal "eql?" ReferenceType IRubyObject op_equal FormalParameter ReferenceType IRubyObject other ReturnStatement TernaryExpression BinaryOperation && BinaryOperation instanceof MemberReference other ReferenceType JavaAccessibleObject MethodInvocation MethodInvocation Cast ReferenceType JavaAccessibleObject MemberReference other equals MethodInvocation MethodInvocation getTrue getRuntime MethodInvocation MethodInvocation getFalse getRuntime	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal Literal ElementValuePair required Literal 2 ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject offset FormalParameter ReferenceType IRubyObject length ReturnStatement MethodInvocation MemoryUtil MethodInvocation context getRuntime MemberReference io MethodInvocation MemberReference offset getOffset MethodInvocation Util MemberReference length int32Value getArrayOfUnsigned8	1
MethodDeclaration Modifier public static ReferenceType String mangledFilenameForStartupClasspath FormalParameter ReferenceType String filename IfStatement MethodInvocation filename Literal equals BlockStatement ReturnStatement Literal ReturnStatement MethodInvocation MemberReference filename Literal null Literal "" Literal false	1
MethodDeclaration Modifier protected BasicType boolean FormalParameter ReferenceType ThreadContext context ReturnStatement BinaryOperation || MethodInvocation context MethodInvocation getRuntime MemberReference	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression MethodInvocation Literal "can't make alias for the number variables" yyerror ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation MethodInvocation orNode getSecondNode MemberReference context Literal true compile	0
MethodDeclaration Modifier protected Annotation Override pre FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block block FormalParameter ReferenceType Ruby runtime StatementExpression MethodInvocation context MethodInvocation getImplementationClass MemberReference name MemberReference self MemberReference block MemberReference staticScope IfStatement MethodInvocation runtime hasEventHooks StatementExpression MethodInvocation MemberReference context MemberReference runtime MemberReference name	1
MethodDeclaration Modifier private final ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType String method FormalParameter ReferenceType IRubyObject other FormalParameter ReferenceType RubyArray ary LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator result MethodInvocation ary MethodInvocation MemberReference context MemberReference method MethodInvocation ary Literal 1 eltInternal callMethod Literal 0 eltInternal IfStatement MethodInvocation result isNil BlockStatement ReturnStatement MethodInvocation RubyComparable This MemberReference other cmperr ReturnStatement MemberReference result	1
MethodDeclaration Modifier public Annotation JRubyMethod ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Block block InterruptedException TryStatement StatementExpression MethodInvocation MemberReference context lock ReturnStatement MethodInvocation block MemberReference context Literal null yield StatementExpression MethodInvocation MemberReference context unlock	0
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType RubyClass klazz ReturnStatement ClassCreator ReferenceType AutoPointer MemberReference runtime MemberReference klazz	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal = eval StatementExpression MethodInvocation Literal "2" MethodInvocation Literal "p eval assertEquals StatementExpression MethodInvocation Literal MethodInvocation Literal "p eval assertEquals StatementExpression MethodInvocation Literal MethodInvocation Literal "p eval assertEquals StatementExpression MethodInvocation Literal MethodInvocation Literal p x }" eval assertEquals StatementExpression MethodInvocation Literal = eval StatementExpression MethodInvocation Literal MethodInvocation Literal "p k >= eval assertEquals StatementExpression MethodInvocation Literal MethodInvocation Literal "p eval assertEquals StatementExpression MethodInvocation Literal eval StatementExpression MethodInvocation Literal MethodInvocation Literal "p eval assertEquals StatementExpression MethodInvocation Literal = eval StatementExpression MethodInvocation Literal MethodInvocation Literal "p k >= eval assertEquals StatementExpression MethodInvocation Literal "3" MethodInvocation Literal "p eval assertEquals StatementExpression MethodInvocation Literal = eval StatementExpression MethodInvocation Literal "p eval StatementExpression MethodInvocation Literal MethodInvocation Literal "p k >= eval assertEquals StatementExpression MethodInvocation Literal "1" MethodInvocation Literal "p eval assertEquals StatementExpression MethodInvocation Literal MethodInvocation Literal "p eval assertEquals	0
MethodDeclaration Modifier public Annotation Override ReferenceType OutputStream getOutputStream ReturnStatement MemberReference output	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 FormalParameter ReferenceType IRubyObject arg3 LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime TryStatement StatementExpression MethodInvocation MemberReference context MemberReference name MemberReference self MemberReference Block NULL_BLOCK MemberReference runtime pre StatementExpression MethodInvocation argsNode MemberReference runtime Literal 4 StatementExpression MethodInvocation argsNode MemberReference context MemberReference runtime MemberReference self MemberReference arg0 MemberReference arg1 MemberReference arg2 MemberReference arg3 MemberReference Block NULL_BLOCK prepare ReturnStatement MethodInvocation body MemberReference runtime MemberReference context MemberReference self MemberReference Block NULL_BLOCK CatchClause CatchClauseParameter rj ReturnStatement MethodInvocation MemberReference context MemberReference rj handleReturn CatchClause CatchClauseParameter rj ReturnStatement MethodInvocation MemberReference runtime handleRedo StatementExpression MethodInvocation MemberReference runtime MemberReference context MemberReference name post	0
MethodDeclaration Modifier public ReferenceType NodeType getNodeType ReturnStatement MemberReference NodeType	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair required Literal 1 ElementValuePair frame Literal true ElementValuePair meta Literal true ElementValuePair compat MemberReference CompatVersion RUBY1_9 FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject encoding IfStatement MethodInvocation encoding isNil BlockStatement StatementExpression MethodInvocation recv MethodInvocation Literal can not be newArgumentError getRuntime StatementExpression MethodInvocation recv MethodInvocation MethodInvocation MethodInvocation recv getRuntime MemberReference encoding getRuntime	0
MethodDeclaration Modifier public ReferenceType FormalParameter ReferenceType String arg0 FormalParameter BasicType boolean arg1 ReturnStatement MethodInvocation MethodInvocation MemberReference arg0 MemberReference arg1 getMethodVisitor	0
MethodDeclaration Modifier public final putByte FormalParameter BasicType long offset FormalParameter BasicType byte value StatementExpression MethodInvocation MemberReference offset Literal 1 checkBounds StatementExpression Assignment MemberReference ArraySelector MethodInvocation MemberReference offset index buffer MemberReference value =	1
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType RubyClass ReturnStatement MethodInvocation runtime getNil	0
MethodDeclaration Modifier final public static ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType MemoryIO io FormalParameter BasicType long offset FormalParameter BasicType int count LocalVariableDeclaration BasicType short VariableDeclarator array ArrayCreator BasicType short MemberReference count StatementExpression MethodInvocation io MemberReference offset MemberReference array Literal 0 MemberReference array length get LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator arr MethodInvocation RubyArray MemberReference runtime MemberReference array length newArray ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference array length MemberReference ++ i BlockStatement StatementExpression MethodInvocation arr MethodInvocation Util MemberReference runtime MemberReference ArraySelector MemberReference i array newUnsigned16 add ReturnStatement MemberReference arr	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "comment" ReferenceType IRubyObject IfStatement MemberReference closed BlockStatement LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator errorClass MethodInvocation MethodInvocation Literal "Zlib" fastGetModule MethodInvocation Literal fastGetClass MethodInvocation Literal fastGetClass getRuntime ThrowStatement ClassCreator ReferenceType RaiseException MethodInvocation RubyException MethodInvocation getRuntime MemberReference errorClass Literal stream" newException ReturnStatement TernaryExpression BinaryOperation == MemberReference Literal null MethodInvocation MethodInvocation getNil getRuntime MethodInvocation RubyString MethodInvocation getRuntime MemberReference newString	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject setValue FormalParameter BasicType int offset FormalParameter ReferenceType IRubyObject value FormalParameter BasicType int depth IfStatement BinaryOperation > MemberReference depth Literal 0 BlockStatement AssertStatement BinaryOperation != MemberReference parent Literal null Literal "If depth > 0, then parent should not be null" ReturnStatement MethodInvocation parent MemberReference offset MemberReference value BinaryOperation - MemberReference depth Literal 1 setValue BlockStatement AssertStatement BinaryOperation < MemberReference offset MemberReference SIZE MemberReference SIZE_ERROR SwitchStatement MemberReference offset SwitchStatementCase Literal 0 ReturnStatement Assignment MemberReference variableValueZero MemberReference value = SwitchStatementCase Literal 1 ReturnStatement Assignment MemberReference variableValueOne MemberReference value = SwitchStatementCase ThrowStatement ClassCreator ReferenceType RuntimeException MemberReference SIZE_ERROR	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal "/" Literal ReferenceType IRubyObject op_div FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject other IfStatement BinaryOperation instanceof MemberReference other ReferenceType RubyComplex BlockStatement LocalVariableDeclaration ReferenceType RubyComplex VariableDeclarator otherComplex Cast ReferenceType RubyComplex MemberReference other IfStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation instanceof MemberReference real ReferenceType RubyFloat BinaryOperation instanceof MemberReference image ReferenceType RubyFloat BinaryOperation instanceof MemberReference otherComplex real ReferenceType RubyFloat BinaryOperation instanceof MemberReference otherComplex image ReferenceType RubyFloat BlockStatement LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator magn MethodInvocation RubyMath This MemberReference otherComplex real MemberReference otherComplex image LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator tmp MethodInvocation MemberReference context MethodInvocation getMetaClass MethodInvocation MemberReference context MemberReference otherComplex real MemberReference magn f_quo MethodInvocation MemberReference context MemberReference otherComplex image MemberReference magn f_quo newComplexBang ReturnStatement MethodInvocation MemberReference context MethodInvocation MemberReference context This MethodInvocation MemberReference context MemberReference tmp f_conjugate f_mul MemberReference magn f_quo ReturnStatement MethodInvocation MemberReference context MethodInvocation MemberReference context This MethodInvocation MemberReference context MemberReference other f_conjugate f_mul MethodInvocation MemberReference context MemberReference other f_abs2 f_quo IfStatement BinaryOperation && BinaryOperation instanceof MemberReference other ReferenceType RubyNumeric MethodInvocation MethodInvocation isTrue MemberReference context MemberReference other f_real_p BlockStatement ReturnStatement MethodInvocation MemberReference context MethodInvocation getMetaClass MethodInvocation MemberReference context MemberReference real MemberReference other f_quo MethodInvocation MemberReference context MemberReference image MemberReference other f_quo newComplex ReturnStatement MethodInvocation MemberReference context Literal "/" MemberReference other coerceBin	1
MethodDeclaration Modifier public static BasicType long FormalParameter ReferenceType Process process ReturnStatement MethodInvocation MemberReference process	0
MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block IfStatement MethodInvocation block isGiven BlockStatement LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime StatementExpression MethodInvocation MemberReference runtime LocalVariableDeclaration ReferenceType VariableDeclarator proxy MethodInvocation MemberReference self LocalVariableDeclaration BasicType int VariableDeclarator len MemberReference args length LocalVariableDeclaration ReferenceType Object VariableDeclarator convertedArgs ArrayCreator ReferenceType Object BinaryOperation + MemberReference len Literal 1 LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator intermediate ArrayCreator ReferenceType IRubyObject BinaryOperation + MemberReference len Literal 1 StatementExpression MethodInvocation System MemberReference args Literal 0 MemberReference intermediate Literal 0 MemberReference len arraycopy StatementExpression Assignment MemberReference ArraySelector MemberReference len intermediate MethodInvocation RubyProc MemberReference runtime MemberReference block MemberReference Block.Type newProc = LocalVariableDeclaration ReferenceType JavaConstructor VariableDeclarator constructor Cast ReferenceType JavaConstructor MethodInvocation MemberReference self MemberReference name MemberReference intermediate BinaryOperation + MemberReference len Literal 1 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i BinaryOperation + MemberReference len Literal 1 MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i convertedArgs MethodInvocation MemberReference context MemberReference ArraySelector MemberReference i intermediate MemberReference constructor MemberReference i convertArg = StatementExpression MethodInvocation proxy MethodInvocation JavaObject MemberReference runtime MethodInvocation constructor MemberReference convertedArgs wrap ReturnStatement MemberReference self BlockStatement ReturnStatement MethodInvocation MemberReference context MemberReference self MemberReference clazz MemberReference name MemberReference args call	1
MethodDeclaration Modifier public StatementExpression MethodInvocation MethodInvocation MemberReference visitInsn getMethodVisitor	1
MethodDeclaration Modifier public BasicType int size ReturnStatement MemberReference size	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "chomp!" ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType IRubyObject chomp_bang FormalParameter ReferenceType ThreadContext context LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime IfStatement BinaryOperation == MemberReference value realSize Literal 0 ReturnStatement MethodInvocation runtime getNil LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator rsObj MethodInvocation runtime MethodInvocation Literal "$/" get getGlobalVariables IfStatement BinaryOperation == MemberReference rsObj MethodInvocation runtime MethodInvocation getGlobalVariables ReturnStatement MethodInvocation MemberReference runtime smartChopBangCommon ReturnStatement MethodInvocation MemberReference runtime MemberReference rsObj chompBangCommon	1
MethodDeclaration Modifier public static ReferenceType String FormalParameter ReferenceType Boolean t ReturnStatement MethodInvocation String MemberReference t valueOf	0
MethodDeclaration Modifier protected BasicType boolean FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType SearchState state LocalVariableDeclaration ReferenceType RubyString VariableDeclarator MethodInvocation RubyString MemberReference runtime MemberReference state loadName newString TryStatement SynchronizedStatement MemberReference IfStatement MethodInvocation MemberReference contains BlockStatement ReturnStatement Literal false BlockStatement StatementExpression MethodInvocation MemberReference StatementExpression MethodInvocation MemberReference runtime Literal false load ReturnStatement Literal true CatchClause CatchClauseParameter MainExitException mee ThrowStatement MemberReference mee CatchClause CatchClauseParameter Throwable e IfStatement MethodInvocation MemberReference state MemberReference state searchFile BlockStatement ReturnStatement Literal true StatementExpression MethodInvocation MemberReference StatementExpression MethodInvocation MemberReference e IfStatement MethodInvocation runtime MethodInvocation isTrue getDebug StatementExpression MethodInvocation e MethodInvocation runtime printStackTrace LocalVariableDeclaration ReferenceType RaiseException VariableDeclarator re MethodInvocation runtime BinaryOperation + Literal "IO error -- " MemberReference state searchFile newLoadError StatementExpression MethodInvocation re MemberReference e initCause ThrowStatement MemberReference re	1
MethodDeclaration Modifier public ReferenceType Object case325_line1241 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair module Literal true ElementValuePair visibility MemberReference Visibility PRIVATE ReferenceType IRubyObject get_java_class FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject arg0 ReturnStatement MethodInvocation Java MemberReference recv MemberReference arg0 get_java_class	1
MethodDeclaration Modifier public BasicType boolean isDebug ReturnStatement MethodInvocation ruby MethodInvocation getInstanceConfig MethodInvocation isDebug get	0
MethodDeclaration ReferenceType DynamicMethod FormalParameter ReferenceType RubyModule module FormalParameter ReferenceType Function function FormalParameter ReferenceType Type returnType FormalParameter ReferenceType Type parameterTypes LocalVariableDeclaration ReferenceType VariableDeclarator factory This LocalVariableDeclaration ReferenceType VariableDeclarator parameterConverters ArrayCreator ReferenceType MemberReference parameterTypes length LocalVariableDeclaration ReferenceType VariableDeclarator resultConverter MethodInvocation factory MemberReference returnType ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference parameterConverters length MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i parameterConverters MethodInvocation factory MemberReference ArraySelector MemberReference i parameterTypes = SwitchStatement MemberReference parameterTypes length SwitchStatementCase Literal 0 ReturnStatement ClassCreator ReferenceType MemberReference module MemberReference function MemberReference resultConverter MemberReference parameterConverters SwitchStatementCase Literal 1 ReturnStatement ClassCreator ReferenceType MemberReference module MemberReference function MemberReference resultConverter MemberReference parameterConverters SwitchStatementCase Literal 2 ReturnStatement ClassCreator ReferenceType MemberReference module MemberReference function MemberReference resultConverter MemberReference parameterConverters SwitchStatementCase Literal 3 ReturnStatement ClassCreator ReferenceType MemberReference module MemberReference function MemberReference resultConverter MemberReference parameterConverters SwitchStatementCase ThrowStatement MethodInvocation module MethodInvocation BinaryOperation + BinaryOperation + Literal " MemberReference parameterTypes length Literal " not implemented" newRuntimeError getRuntime	0
MethodDeclaration Modifier public Annotation Override ReferenceType ByteList IOException LocalVariableDeclaration ReferenceType ByteList VariableDeclarator ClassCreator ReferenceType ByteList Literal 80 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator c MethodInvocation read BinaryOperation && BinaryOperation != MemberReference c Literal '\n' BinaryOperation != MemberReference c MemberReference RubyYaccLexer EOF Assignment MemberReference c MethodInvocation read = BlockStatement StatementExpression MethodInvocation MemberReference c append ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Object case25_line397 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals checkExpression LocalVariableDeclaration ReferenceType String VariableDeclarator asgnOp Cast ReferenceType String Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals IfStatement MethodInvocation asgnOp Literal "||" equals BlockStatement StatementExpression Cast ReferenceType AssignableNode MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType OpAsgnOrNode MethodInvocation Cast ReferenceType AssignableNode MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals getPosition MethodInvocation support Cast ReferenceType AssignableNode MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals gettable2 Cast ReferenceType AssignableNode MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals = IfStatement MethodInvocation asgnOp Literal "&&" equals BlockStatement StatementExpression Cast ReferenceType AssignableNode MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType OpAsgnAndNode MethodInvocation Cast ReferenceType AssignableNode MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals getPosition MethodInvocation support Cast ReferenceType AssignableNode MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals gettable2 Cast ReferenceType AssignableNode MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals = BlockStatement StatementExpression Cast ReferenceType AssignableNode MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals StatementExpression Cast ReferenceType AssignableNode MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals StatementExpression Assignment MemberReference yyVal Cast ReferenceType AssignableNode MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public BasicType int getSafeLevel ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Arity ReturnStatement MethodInvocation Arity noArguments	0
MethodDeclaration Modifier public Annotation JRubyMethod ReferenceType IRubyObject modifiers ReturnStatement MethodInvocation MethodInvocation MethodInvocation MethodInvocation getModifiers javaClass newFixnum getRuntime	0
MethodDeclaration Modifier public static ReferenceType IRubyObject fallback FormalParameter ReferenceType site FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject caller FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator selfClass MethodInvocation MemberReference context MemberReference self pollAndGetClass LocalVariableDeclaration ReferenceType CacheEntry VariableDeclarator entry MethodInvocation selfClass MemberReference name TryStatement IfStatement MethodInvocation MemberReference entry MethodInvocation site callType MemberReference name MemberReference caller BlockStatement ReturnStatement MethodInvocation MemberReference entry MethodInvocation site callType MemberReference context MemberReference self MemberReference name MemberReference arg0 MemberReference block StatementExpression MethodInvocation site MethodInvocation MemberReference MemberReference MemberReference MemberReference entry MemberReference site ReturnStatement MethodInvocation MemberReference context MemberReference self MemberReference selfClass MemberReference name MemberReference arg0 MemberReference block call CatchClause CatchClauseParameter JumpException.BreakJump bj ReturnStatement MethodInvocation MemberReference context MemberReference bj handleBreakJump CatchClause CatchClauseParameter JumpException.RetryJump rj ReturnStatement MethodInvocation MemberReference context retryJumpError StatementExpression MethodInvocation block escape	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement Literal false	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject set FormalParameter ReferenceType IRubyObject value IfStatement MethodInvocation runtime MethodInvocation Literal "$!" get MethodInvocation isNil getGlobalVariables BlockStatement ThrowStatement MethodInvocation runtime Literal not set." newArgumentError StatementExpression MethodInvocation runtime MethodInvocation Literal "$!" get MethodInvocation MethodInvocation value MethodInvocation getCurrentContext getRuntime Literal MemberReference value callMethod getGlobalVariables ReturnStatement MemberReference value	0
MethodDeclaration Modifier public final ReferenceType IRubyObject invoke FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType Function function FormalParameter ReferenceType HeapInvocationBuffer args ReturnStatement MethodInvocation info MemberReference runtime MethodInvocation invoker MemberReference function MemberReference args Literal 0 newStruct	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair optional Literal 1 ElementValuePair frame Literal true ReferenceType IRubyObject lines FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block ReturnStatement TernaryExpression MethodInvocation block isGiven MethodInvocation MemberReference context MemberReference args MemberReference block MethodInvocation MethodInvocation context getRuntime This Literal MemberReference args enumeratorize	0
MethodDeclaration Modifier public Annotation Override BasicType boolean FormalParameter ReferenceType IRubyObject obj FormalParameter ReferenceType RubyModule type ReturnStatement BinaryOperation instanceof MemberReference obj ReferenceType RubyRational	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "writable_real?" ReferenceType IRubyObject ReturnStatement MethodInvocation MethodInvocation MethodInvocation stat newBoolean getRuntime	1
MethodDeclaration ReferenceType Iterator ReturnStatement ClassCreator ReferenceType	0
MethodDeclaration Modifier public ReferenceType RubyClass ReturnStatement MemberReference	0
MethodDeclaration Modifier public BasicType int complete FormalParameter ReferenceType String buffer FormalParameter BasicType int cursor FormalParameter ReferenceType List candidates StatementExpression Assignment MemberReference buffer MethodInvocation buffer Literal 0 MemberReference cursor substring = LocalVariableDeclaration BasicType int VariableDeclarator index MethodInvocation MemberReference buffer IfStatement BinaryOperation != MemberReference index Literal - 1 BlockStatement StatementExpression Assignment MemberReference buffer MethodInvocation buffer BinaryOperation + MemberReference index Literal 1 substring = LocalVariableDeclaration ReferenceType ThreadContext VariableDeclarator context MethodInvocation procCompletor MethodInvocation getCurrentContext getRuntime LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator comps MethodInvocation RuntimeHelpers MethodInvocation MemberReference context Literal "to_a" callMethod MemberReference context MemberReference procCompletor Literal "call" MethodInvocation procCompletor MethodInvocation MemberReference buffer newString getRuntime invoke IfStatement BinaryOperation instanceof MemberReference comps ReferenceType List BlockStatement ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i Cast ReferenceType List MemberReference comps MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator obj MethodInvocation i next IfStatement BinaryOperation != MemberReference obj Literal null BlockStatement StatementExpression MethodInvocation candidates MethodInvocation obj toString add StatementExpression MethodInvocation Collections MemberReference candidates sort ReturnStatement BinaryOperation - MemberReference cursor MethodInvocation buffer length	1
MethodDeclaration Modifier private static BasicType int FormalParameter ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject a1 FormalParameter ReferenceType IRubyObject a2 ReturnStatement BinaryOperation + BinaryOperation * Literal 31 MethodInvocation MemberReference MemberReference a1 MethodInvocation MemberReference a2	0
MethodDeclaration Modifier public call FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation MethodInvocation getValueNode MemberReference context Literal true compile	0
MethodDeclaration Modifier private ReferenceType Object FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType VariableTableEntry VariableDeclarator table MemberReference vTable LocalVariableDeclaration BasicType int VariableDeclarator hash MethodInvocation name hashCode LocalVariableDeclaration BasicType int VariableDeclarator index BinaryOperation & MemberReference hash BinaryOperation - MemberReference table length Literal 1 LocalVariableDeclaration ReferenceType VariableTableEntry VariableDeclarator first MemberReference ArraySelector MemberReference index table ForStatement ForControl VariableDeclaration ReferenceType VariableTableEntry VariableDeclarator e MemberReference first BinaryOperation != MemberReference e Literal null Assignment MemberReference e MemberReference e next = BlockStatement IfStatement BinaryOperation && BinaryOperation == MemberReference hash MemberReference e hash MethodInvocation name MemberReference e name equals BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator oldValue MemberReference e value LocalVariableDeclaration ReferenceType VariableTableEntry VariableDeclarator MemberReference e next ForStatement ForControl VariableDeclaration ReferenceType VariableTableEntry VariableDeclarator p MemberReference first BinaryOperation != MemberReference p MemberReference e Assignment MemberReference p MemberReference p next = BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType VariableTableEntry MemberReference p hash MemberReference p name MemberReference p value MemberReference = StatementExpression Assignment MemberReference ArraySelector MemberReference index table MemberReference = StatementExpression MemberReference -- vTableSize StatementExpression Assignment MemberReference vTable MemberReference table = ReturnStatement MemberReference oldValue ReturnStatement Literal null	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support Cast ReferenceType ISourcePositionHolder MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals Cast ReferenceType ListNode MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals Literal null Literal null Literal null Cast ReferenceType BlockArgNode MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals new_args = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public ReferenceType IRubyObject getBackRef FormalParameter ReferenceType Ruby runtime IfStatement MethodInvocation ! staticScope BlockStatement ReturnStatement MethodInvocation parent MemberReference runtime getBackRef ThrowStatement ClassCreator ReferenceType RuntimeException Literal "DummyDynamicScope should never be used for backref storage"	1
MethodDeclaration Modifier public ReferenceType String getCurrentDirectory ReturnStatement MethodInvocation ruby MethodInvocation getInstanceConfig MethodInvocation getCurrentDirectory get	0
MethodDeclaration Modifier public BasicType int getLine ReturnStatement MemberReference line	0
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject nil ThrowStatement ClassCreator ReferenceType RuntimeException BinaryOperation + This MethodInvocation getClass MethodInvocation getSimpleName Literal " does not support scopes with or more variables"	1
MethodDeclaration Modifier private ReferenceType IRubyObject FormalParameter BasicType int type IOException LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator rubyObj Literal null SwitchStatement MemberReference type SwitchStatementCase Literal 'I' StatementExpression Assignment MemberReference Literal true = StatementExpression Assignment MemberReference rubyObj MethodInvocation = IfStatement MemberReference BlockStatement StatementExpression MethodInvocation MemberReference rubyObj StatementExpression Assignment MemberReference Literal false = BreakStatement SwitchStatementCase Literal '0' StatementExpression Assignment MemberReference rubyObj MethodInvocation runtime getNil = BreakStatement SwitchStatementCase Literal 'T' StatementExpression Assignment MemberReference rubyObj MethodInvocation runtime getTrue = BreakStatement SwitchStatementCase Literal 'F' StatementExpression Assignment MemberReference rubyObj MethodInvocation runtime getFalse = BreakStatement SwitchStatementCase Literal '"' StatementExpression Assignment MemberReference rubyObj MethodInvocation RubyString This unmarshalFrom = BreakStatement SwitchStatementCase Literal 'i' StatementExpression Assignment MemberReference rubyObj MethodInvocation RubyFixnum This unmarshalFrom = BreakStatement SwitchStatementCase Literal 'f' StatementExpression Assignment MemberReference rubyObj MethodInvocation RubyFloat This unmarshalFrom = BreakStatement SwitchStatementCase Literal '/' StatementExpression Assignment MemberReference rubyObj MethodInvocation RubyRegexp This unmarshalFrom = BreakStatement SwitchStatementCase Literal ':' StatementExpression Assignment MemberReference rubyObj MethodInvocation RubySymbol This unmarshalFrom = BreakStatement SwitchStatementCase Literal '[' StatementExpression Assignment MemberReference rubyObj MethodInvocation RubyArray This unmarshalFrom = BreakStatement SwitchStatementCase Literal '{' StatementExpression Assignment MemberReference rubyObj MethodInvocation RubyHash This Literal false unmarshalFrom = BreakStatement SwitchStatementCase Literal '}' StatementExpression Assignment MemberReference rubyObj MethodInvocation RubyHash This Literal true unmarshalFrom = BreakStatement SwitchStatementCase Literal 'c' StatementExpression Assignment MemberReference rubyObj MethodInvocation RubyClass This unmarshalFrom = BreakStatement SwitchStatementCase Literal 'm' StatementExpression Assignment MemberReference rubyObj MethodInvocation RubyModule This unmarshalFrom = BreakStatement SwitchStatementCase Literal 'e' LocalVariableDeclaration ReferenceType RubySymbol VariableDeclarator moduleName Cast ReferenceType RubySymbol MethodInvocation LocalVariableDeclaration ReferenceType RubyModule VariableDeclarator tp Literal null TryStatement StatementExpression Assignment MemberReference tp MethodInvocation runtime MethodInvocation moduleName asJavaString getClassFromPath = CatchClause CatchClauseParameter RaiseException e IfStatement MethodInvocation runtime MethodInvocation MethodInvocation e getException isInstance Literal "NameError" fastGetModule BlockStatement ThrowStatement MethodInvocation runtime BinaryOperation + Literal "undefined class/module " MethodInvocation moduleName asJavaString newArgumentError ThrowStatement MemberReference e StatementExpression Assignment MemberReference rubyObj MethodInvocation = StatementExpression MethodInvocation tp MemberReference rubyObj StatementExpression MethodInvocation tp MethodInvocation runtime getCurrentContext Literal MemberReference rubyObj callMethod BreakStatement SwitchStatementCase Literal 'l' StatementExpression Assignment MemberReference rubyObj MethodInvocation RubyBignum This unmarshalFrom = BreakStatement SwitchStatementCase Literal 'S' StatementExpression Assignment MemberReference rubyObj MethodInvocation RubyStruct This unmarshalFrom = BreakStatement SwitchStatementCase Literal 'o' StatementExpression Assignment MemberReference rubyObj MethodInvocation defaultObjectUnmarshal = BreakStatement SwitchStatementCase Literal 'u' StatementExpression Assignment MemberReference rubyObj MethodInvocation = BreakStatement SwitchStatementCase Literal 'U' StatementExpression Assignment MemberReference rubyObj MethodInvocation = BreakStatement SwitchStatementCase Literal 'C' StatementExpression Assignment MemberReference rubyObj MethodInvocation = BreakStatement SwitchStatementCase ThrowStatement MethodInvocation MethodInvocation BinaryOperation + BinaryOperation + Literal "dump format Cast BasicType char MemberReference type Literal ")" newArgumentError getRuntime IfStatement BinaryOperation && BinaryOperation != MemberReference proc Literal null BinaryOperation != MemberReference type Literal ':' BlockStatement StatementExpression MethodInvocation RuntimeHelpers MethodInvocation MethodInvocation getCurrentContext getRuntime MemberReference proc Literal "call" MemberReference rubyObj invoke ReturnStatement MemberReference rubyObj	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "each_slice" ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject arg FormalParameter Modifier final ReferenceType Block block ReturnStatement TernaryExpression MethodInvocation block isGiven MethodInvocation MemberReference context MemberReference self MemberReference arg MemberReference block each_slice MethodInvocation MethodInvocation context getRuntime MemberReference self Literal "each_slice" MemberReference arg enumeratorize	1
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name TryStatement ReturnStatement MethodInvocation MethodInvocation context getRuntime MethodInvocation constructor newInstance javaToRuby CatchClause CatchClauseParameter InstantiationException ex IfStatement MethodInvocation ruby MethodInvocation isTrue getDebug StatementExpression MethodInvocation ex printStackTrace ThrowStatement MethodInvocation ruby BinaryOperation + BinaryOperation + BinaryOperation + Literal "Could not instantiate " MethodInvocation cls getCanonicalName Literal " using " MethodInvocation MethodInvocation constructor getParameterTypes prettyParams newTypeError CatchClause CatchClauseParameter IllegalAccessException ex IfStatement MethodInvocation ruby MethodInvocation isTrue getDebug StatementExpression MethodInvocation ex printStackTrace ThrowStatement MethodInvocation ruby BinaryOperation + BinaryOperation + BinaryOperation + Literal "Could not instantiate " MethodInvocation cls getCanonicalName Literal " using " MethodInvocation MethodInvocation constructor getParameterTypes prettyParams newTypeError CatchClause CatchClauseParameter IllegalArgumentException ex IfStatement MethodInvocation ruby MethodInvocation isTrue getDebug StatementExpression MethodInvocation ex printStackTrace ThrowStatement MethodInvocation ruby BinaryOperation + BinaryOperation + BinaryOperation + Literal "Could not instantiate " MethodInvocation cls getCanonicalName Literal " using " MethodInvocation MethodInvocation constructor getParameterTypes prettyParams newTypeError CatchClause CatchClauseParameter InvocationTargetException ex IfStatement MethodInvocation ruby MethodInvocation isTrue getDebug StatementExpression MethodInvocation ex printStackTrace ThrowStatement MethodInvocation ruby BinaryOperation + BinaryOperation + BinaryOperation + Literal "Could not instantiate " MethodInvocation cls getCanonicalName Literal " using " MethodInvocation MethodInvocation constructor getParameterTypes prettyParams newTypeError	1
MethodDeclaration Modifier protected Annotation Override Annotation Deprecated ReferenceType Class endCall FormalParameter ReferenceType ClassWriter cw FormalParameter ReferenceType MethodVisitor mv FormalParameter ReferenceType String name StatementExpression MethodInvocation mv visitEnd StatementExpression MethodInvocation cw visitEnd LocalVariableDeclaration BasicType byte VariableDeclarator code MethodInvocation cw toByteArray ReturnStatement MethodInvocation classLoader MemberReference name MemberReference code MemberReference defineClass	1
MethodDeclaration Modifier public ReferenceType RubyString each_byte FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation value length MemberReference ++ i BlockStatement StatementExpression MethodInvocation block MemberReference context MethodInvocation runtime BinaryOperation & MethodInvocation value MemberReference i get Literal 0xFF newFixnum yield ReturnStatement This	1
MethodDeclaration Modifier public compileOpAsgn FormalParameter ReferenceType Node node FormalParameter ReferenceType BodyCompiler context FormalParameter BasicType boolean expr LocalVariableDeclaration Modifier final ReferenceType OpAsgnNode VariableDeclarator opAsgnNode Cast ReferenceType OpAsgnNode MemberReference node IfStatement MethodInvocation opAsgnNode MethodInvocation Literal "||" equals getOperatorName BlockStatement StatementExpression MethodInvocation MemberReference opAsgnNode MemberReference context Literal true compileOpAsgnWithOr IfStatement MethodInvocation opAsgnNode MethodInvocation Literal "&&" equals getOperatorName BlockStatement StatementExpression MethodInvocation MemberReference opAsgnNode MemberReference context Literal true compileOpAsgnWithAnd BlockStatement StatementExpression MethodInvocation MemberReference opAsgnNode MemberReference context Literal true compileOpAsgnWithMethod StatementExpression MethodInvocation context pollThreadEvents IfStatement MemberReference ! expr StatementExpression MethodInvocation context consumeCurrentValue	1
MethodDeclaration Modifier public BasicType int ReturnStatement BinaryOperation + MemberReference Literal 1	0
MethodDeclaration Modifier public FormalParameter ReferenceType String name FormalParameter ReferenceType DynamicMethod method StatementExpression MethodInvocation MethodInvocation MemberReference name MemberReference method put getMethods	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "synchronized" ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType Object VariableDeclarator lock MethodInvocation getValue SynchronizedStatement TernaryExpression BinaryOperation != MemberReference lock Literal null MemberReference lock MemberReference ReturnStatement MethodInvocation block MemberReference context Literal null yield	1
MethodDeclaration Modifier public ReferenceType Object case331_line1261 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType MultipleAsgn19Node MethodInvocation Cast ReferenceType ListNode MemberReference ArraySelector BinaryOperation + Literal - 3 MemberReference yyTop yyVals getPosition Cast ReferenceType ListNode MemberReference ArraySelector BinaryOperation + Literal - 3 MemberReference yyTop yyVals MethodInvocation support Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals Literal null assignable Literal null = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier private static appendFeaturesToModule FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule module LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime IfStatement BinaryOperation && MethodInvocation module MethodInvocation Literal "@java_class" fastHasInstanceVariable getInstanceVariables MethodInvocation module MethodInvocation Literal "@java_class" fastGetInstanceVariable MethodInvocation isTrue getInstanceVariables BlockStatement ThrowStatement MethodInvocation runtime Literal "can not add Java interface to existing Java interface" newTypeError SynchronizedStatement MemberReference module IfStatement MethodInvocation ! module MethodInvocation Literal "@java_interface_mods" fastHasInstanceVariable getInstanceVariables BlockStatement LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator javaInterfaceMods MethodInvocation RubyArray MemberReference runtime MemberReference self newArray StatementExpression MethodInvocation module MethodInvocation Literal "@java_interface_mods" MemberReference javaInterfaceMods fastSetInstanceVariable getInstanceVariables LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator singleton MethodInvocation module StatementExpression MethodInvocation singleton Literal "append_features" ClassCreator ReferenceType JavaMethodOneBlock MemberReference singleton MemberReference Visibility PUBLIC MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg FormalParameter ReferenceType Block block IfStatement BinaryOperation instanceof MemberReference arg ReferenceType RubyClass BlockStatement ThrowStatement MethodInvocation context MethodInvocation Literal with newTypeError getRuntime LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator target Cast ReferenceType RubyClass MemberReference arg LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator javaInterfaceMods Cast ReferenceType RubyArray MethodInvocation self MethodInvocation Literal "@java_interface_mods" fastGetInstanceVariable getInstanceVariables StatementExpression MethodInvocation target MethodInvocation javaInterfaceMods toJavaArray ReturnStatement MethodInvocation RuntimeHelpers MemberReference context MethodInvocation clazz getSuperClass MemberReference self MemberReference name MemberReference arg MemberReference block addMethod BlockStatement LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator javaInterfaceMods Cast ReferenceType RubyArray MethodInvocation module MethodInvocation Literal "@java_interface_mods" fastGetInstanceVariable getInstanceVariables IfStatement MethodInvocation ! javaInterfaceMods MemberReference context MemberReference self includes BlockStatement StatementExpression MethodInvocation javaInterfaceMods MemberReference self append	1
MethodDeclaration Modifier public BasicType boolean SwitchStatement This SwitchStatementCase TRUENODE FIXNUMNODE REGEXPNODE DOTNODE ARRAYNODE ReturnStatement Literal true SwitchStatementCase ReturnStatement Literal false	0
MethodDeclaration Modifier public ReferenceType IRubyObject get FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType Object array FormalParameter BasicType int i ReturnStatement MethodInvocation MemberReference runtime Cast ReferenceType Character MemberReference array convert	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType Node childNodes ReturnStatement MethodInvocation MemberReference createList	0
MethodDeclaration Modifier public Annotation Deprecated ReferenceType Node parse FormalParameter ReferenceType String content FormalParameter ReferenceType String file FormalParameter ReferenceType DynamicScope scope FormalParameter BasicType int lineNumber FormalParameter BasicType boolean extraPositionInformation LocalVariableDeclaration BasicType byte VariableDeclarator bytes TryStatement StatementExpression Assignment MemberReference bytes MethodInvocation content MethodInvocation getKCode getBytes = CatchClause CatchClauseParameter UnsupportedEncodingException e StatementExpression Assignment MemberReference bytes MethodInvocation content getBytes = ReturnStatement MethodInvocation parser MemberReference file ClassCreator ReferenceType ByteArrayInputStream MemberReference bytes MemberReference scope ClassCreator ReferenceType ParserConfiguration MethodInvocation getKCode MemberReference lineNumber MemberReference extraPositionInformation Literal false Literal true MemberReference config parse	1
MethodDeclaration Modifier public removeMethod FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime IfStatement BinaryOperation == This MethodInvocation runtime getObject StatementExpression MethodInvocation runtime Literal 4 secure IfStatement BinaryOperation && BinaryOperation >= MethodInvocation runtime getSafeLevel Literal 4 MethodInvocation ! isTaint BlockStatement ThrowStatement MethodInvocation runtime Literal "Insecure: can't remove method" newSecurityError StatementExpression MethodInvocation Literal SynchronizedStatement MethodInvocation getMethods LocalVariableDeclaration ReferenceType DynamicMethod VariableDeclarator method Cast ReferenceType DynamicMethod MethodInvocation MethodInvocation MemberReference name remove getMethods IfStatement BinaryOperation == MemberReference method Literal null BlockStatement ThrowStatement MethodInvocation runtime BinaryOperation + BinaryOperation + BinaryOperation + Literal "method '" MemberReference name Literal "' not defined in " MethodInvocation getName MemberReference name newNameError StatementExpression MethodInvocation invalidateCacheDescendants IfStatement MethodInvocation isSingleton BlockStatement LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator singleton Cast ReferenceType MetaClass This StatementExpression MethodInvocation singleton MemberReference context Literal "singleton_method_removed" MethodInvocation runtime MemberReference name callMethod BlockStatement StatementExpression MethodInvocation MemberReference context Literal "method_removed" MethodInvocation runtime MemberReference name callMethod	1
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + SuperMethodInvocation toString Literal "(" MemberReference Literal ", " MemberReference Literal ")"	0
MethodDeclaration ReferenceType DynamicMethod FormalParameter ReferenceType RubyModule module FormalParameter ReferenceType Function function FormalParameter ReferenceType Type returnType FormalParameter ReferenceType Type parameterTypes LocalVariableDeclaration ReferenceType VariableDeclarator parameterConverters ArrayCreator ReferenceType MemberReference parameterTypes length LocalVariableDeclaration ReferenceType VariableDeclarator resultConverter MethodInvocation MemberReference returnType ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference parameterConverters length MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i parameterConverters MethodInvocation MemberReference ArraySelector MemberReference i parameterTypes = SwitchStatement MemberReference parameterTypes length SwitchStatementCase Literal 0 ReturnStatement ClassCreator ReferenceType MemberReference module MemberReference function MemberReference resultConverter MemberReference parameterConverters SwitchStatementCase Literal 1 ReturnStatement ClassCreator ReferenceType MemberReference module MemberReference function MemberReference resultConverter MemberReference parameterConverters SwitchStatementCase Literal 2 ReturnStatement ClassCreator ReferenceType MemberReference module MemberReference function MemberReference resultConverter MemberReference parameterConverters SwitchStatementCase Literal 3 ReturnStatement ClassCreator ReferenceType MemberReference module MemberReference function MemberReference resultConverter MemberReference parameterConverters SwitchStatementCase ThrowStatement MethodInvocation module MethodInvocation BinaryOperation + BinaryOperation + Literal " MemberReference parameterTypes length Literal " not implemented" newRuntimeError getRuntime	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference processLineEnds	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "each_line" ElementValuePair frame Literal true ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Block block ReturnStatement TernaryExpression MethodInvocation block isGiven MethodInvocation MemberReference context MemberReference block each_line MethodInvocation MethodInvocation context getRuntime This Literal "each_line" enumeratorize	1
MethodDeclaration Modifier public FormalParameter ReferenceType String constRef FormalParameter ReferenceType Operand val IfStatement MethodInvocation val isConstant StatementExpression MethodInvocation _constMap MemberReference constRef MemberReference val put StatementExpression MethodInvocation ClassCreator ReferenceType This MemberReference constRef MemberReference val addInstr	1
MethodDeclaration Modifier protected Annotation Override ReferenceType Object FormalParameter ReferenceType String internedName ReturnStatement MethodInvocation MemberReference internedName	0
MethodDeclaration Modifier private ReferenceType String FormalParameter ReferenceType formatter FormalParameter ReferenceType String output IfStatement BinaryOperation == MemberReference formatter Literal null ReturnStatement MemberReference output StatementExpression Assignment MemberReference output MethodInvocation formatter MemberReference output format = StatementExpression Assignment MemberReference formatter Literal null = ReturnStatement MemberReference output	1
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType FormalParameter ReferenceType Block ReferenceType Type type LocalVariableDeclaration ReferenceType Visibility VariableDeclarator oldVis MethodInvocation MethodInvocation getVisibility getFrame LocalVariableDeclaration ReferenceType Frame VariableDeclarator MethodInvocation MemberReference context Literal null MemberReference pre LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator self MethodInvocation MemberReference TryStatement IfStatement MemberReference ! noargblock StatementExpression MethodInvocation assigner MethodInvocation context getRuntime MemberReference context MemberReference self MemberReference arg0 MemberReference arg1 MemberReference Block NULL_BLOCK assign ReturnStatement MethodInvocation MemberReference context MemberReference self CatchClause CatchClauseParameter JumpException.NextJump nj ReturnStatement MethodInvocation MemberReference context MemberReference nj MemberReference type handleNextJump StatementExpression MethodInvocation MemberReference context MemberReference MemberReference oldVis MemberReference post	1
MethodDeclaration Modifier private ReferenceType IRubyObject subtractFixnum FormalParameter BasicType long other LocalVariableDeclaration ReferenceType BigInteger VariableDeclarator result MethodInvocation value MethodInvocation BigInteger MemberReference other valueOf subtract IfStatement BinaryOperation && BinaryOperation < MethodInvocation value signum Literal 0 BinaryOperation > MemberReference other Literal 0 ReturnStatement ClassCreator ReferenceType RubyBignum MethodInvocation getRuntime MemberReference result ReturnStatement MethodInvocation MethodInvocation getRuntime MemberReference result bignorm	1
MethodDeclaration Modifier public ReferenceType Object case338_line1251 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals = StatementExpression Assignment MemberReference lexer commandStart Literal true = IfStatement BinaryOperation instanceof Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals ReferenceType MultipleAsgnNode BlockStatement StatementExpression Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public ReferenceType NodeType getNodeType ReturnStatement MemberReference NodeType RETRYNODE	0
MethodDeclaration Modifier public ReferenceType IRubyObject op_plus FormalParameter ReferenceType ThreadContext context FormalParameter BasicType long other ReturnStatement MethodInvocation MemberReference other addFixnum	1
MethodDeclaration Modifier protected ReferenceType ModeFlags parseOptions FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject options FormalParameter ReferenceType ModeFlags modes LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration ReferenceType RubyHash VariableDeclarator rubyOptions Cast ReferenceType RubyHash MemberReference options LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator internalEncodingOption MethodInvocation rubyOptions MethodInvocation runtime Literal fastARef LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator externalEncodingOption MethodInvocation rubyOptions MethodInvocation runtime Literal fastARef LocalVariableDeclaration ReferenceType RubyString VariableDeclarator dash MethodInvocation runtime Literal "-" newString IfStatement BinaryOperation && BinaryOperation != MemberReference externalEncodingOption Literal null MethodInvocation ! externalEncodingOption isNil BlockStatement IfStatement MethodInvocation dash MemberReference externalEncodingOption BlockStatement StatementExpression Assignment MemberReference externalEncodingOption MethodInvocation RubyEncoding MemberReference runtime = StatementExpression MethodInvocation MemberReference context MemberReference externalEncodingOption setExternalEncoding IfStatement BinaryOperation && BinaryOperation != MemberReference internalEncodingOption Literal null MethodInvocation ! internalEncodingOption isNil BlockStatement IfStatement MethodInvocation dash MemberReference internalEncodingOption BlockStatement StatementExpression Assignment MemberReference internalEncodingOption MethodInvocation RubyEncoding MemberReference runtime = StatementExpression MethodInvocation MemberReference context MemberReference internalEncodingOption LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator encoding MethodInvocation rubyOptions MethodInvocation runtime Literal fastARef IfStatement BinaryOperation && BinaryOperation != MemberReference encoding Literal null MethodInvocation ! encoding isNil BlockStatement IfStatement BinaryOperation && BinaryOperation != MemberReference externalEncodingOption Literal null MethodInvocation ! externalEncodingOption isNil BlockStatement StatementExpression MethodInvocation context MethodInvocation getWarnings MethodInvocation BinaryOperation + BinaryOperation + Literal "Ignoring encoding parameter '" MemberReference encoding Literal "': is used" warn getRuntime IfStatement BinaryOperation && BinaryOperation != MemberReference internalEncodingOption Literal null MethodInvocation ! internalEncodingOption isNil BlockStatement StatementExpression MethodInvocation context MethodInvocation getWarnings MethodInvocation BinaryOperation + BinaryOperation + Literal "Ignoring encoding parameter '" MemberReference encoding Literal "': internal_encoding is used" warn getRuntime BlockStatement StatementExpression MethodInvocation MemberReference context MemberReference encoding Literal 0 IfStatement MethodInvocation rubyOptions MethodInvocation runtime Literal "mode" containsKey BlockStatement StatementExpression Assignment MemberReference modes MethodInvocation MemberReference context MethodInvocation rubyOptions MethodInvocation asString MethodInvocation runtime Literal "mode" fastARef parseModes19 = ReturnStatement MemberReference modes	1
MethodDeclaration Modifier public final Annotation JRubyMethod ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context ReturnStatement MemberReference returnType	1
MethodDeclaration Modifier public Annotation JRubyMethod ReferenceType JavaObject TryStatement IfStatement MethodInvocation ! Ruby isSecurityRestricted BlockStatement StatementExpression MethodInvocation field Literal true setAccessible ReturnStatement MethodInvocation JavaObject MethodInvocation getRuntime MethodInvocation field Literal null get wrap CatchClause CatchClauseParameter IllegalAccessException iae ThrowStatement MethodInvocation MethodInvocation BinaryOperation + Literal "illegal static value access: " MethodInvocation iae getMessage newTypeError getRuntime	1
MethodDeclaration Modifier public IfStatement MemberReference DEBUG BlockStatement LocalVariableDeclaration ReferenceType PrintWriter VariableDeclarator pw ClassCreator ReferenceType PrintWriter MemberReference System out StatementExpression MethodInvocation ClassCreator ReferenceType ClassCreator ReferenceType ClassCreator ReferenceType ClassWriter BinaryOperation | MemberReference ClassWriter COMPUTE_FRAMES MemberReference ClassWriter COMPUTE_MAXS MemberReference pw push StatementExpression MethodInvocation pw flush BlockStatement StatementExpression MethodInvocation ClassCreator ReferenceType ClassCreator ReferenceType ClassWriter BinaryOperation | MemberReference ClassWriter COMPUTE_FRAMES MemberReference ClassWriter COMPUTE_MAXS push	1
MethodDeclaration Modifier public StatementExpression MethodInvocation MethodInvocation MemberReference visitInsn getMethodVisitor	0
MethodDeclaration Modifier public Annotation Deprecated ReferenceType IRubyObject gsub FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block SwitchStatement MemberReference args length SwitchStatementCase Literal 1 ReturnStatement MethodInvocation MemberReference context MemberReference ArraySelector Literal 0 args MemberReference block gsub SwitchStatementCase Literal 2 ReturnStatement MethodInvocation MemberReference context MemberReference ArraySelector Literal 0 args MemberReference ArraySelector Literal 1 args MemberReference block gsub SwitchStatementCase StatementExpression MethodInvocation Arity MethodInvocation context getRuntime MemberReference args length Literal 1 Literal 2 raiseArgumentError ReturnStatement Literal null	1
MethodDeclaration Modifier private static FormalParameter ReferenceType ByteList to FormalParameter BasicType int options IfStatement BinaryOperation != BinaryOperation & MemberReference options MemberReference ReOptions RE_OPTION_MULTILINE Literal 0 StatementExpression MethodInvocation to Cast BasicType byte Literal 'm' append IfStatement BinaryOperation != BinaryOperation & MemberReference options MemberReference ReOptions RE_OPTION_IGNORECASE Literal 0 StatementExpression MethodInvocation to Cast BasicType byte Literal 'i' append IfStatement BinaryOperation != BinaryOperation & MemberReference options MemberReference ReOptions RE_OPTION_EXTENDED Literal 0 StatementExpression MethodInvocation to Cast BasicType byte Literal 'x' append	1
MethodDeclaration Modifier public setDate FormalParameter ReferenceType Date date StatementExpression Assignment This MemberReference date MemberReference date =	0
MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject args IfStatement BinaryOperation != MemberReference args length Literal 1 ReturnStatement MethodInvocation This MemberReference context MemberReference name MemberReference args length Literal 1 Literal 1 raiseArgumentError ReturnStatement MethodInvocation MemberReference context MemberReference self MemberReference clazz MemberReference name MemberReference ArraySelector Literal 0 args call	1
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator i MethodInvocation RubyFixnum MemberReference runtime zero LocalVariableDeclaration ReferenceType RubyFixnum VariableDeclarator one MethodInvocation RubyFixnum MemberReference runtime one WhileStatement Literal true BlockStatement IfStatement MethodInvocation ! i MethodInvocation isTrue MemberReference context Literal "<" This callMethod BlockStatement BreakStatement StatementExpression MethodInvocation block MemberReference context MemberReference i yield StatementExpression Assignment MemberReference i MethodInvocation i MemberReference context Literal "+" MemberReference one callMethod = ReturnStatement This	0
MethodDeclaration Modifier public static ReferenceType RubyClass FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType RubyModule javaModule LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator result MethodInvocation javaModule Literal "JavaClass" MethodInvocation javaModule Literal "JavaObject" fastGetClass MemberReference ObjectAllocator NOT_ALLOCATABLE_ALLOCATOR defineClassUnder StatementExpression MethodInvocation result MethodInvocation runtime Literal fastGetModule includeModule StatementExpression MethodInvocation result ClassReference ReferenceType JavaClass defineAnnotatedMethods StatementExpression MethodInvocation result MethodInvocation Literal getMetaClass StatementExpression MethodInvocation result MethodInvocation Literal "allocate" getMetaClass ReturnStatement MemberReference result	1
MethodDeclaration Modifier private static ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject FormalParameter ReferenceType RubyArray array TryStatement StatementExpression MethodInvocation context MethodInvocation MemberReference array registerInspecting getRuntime ReturnStatement MethodInvocation MemberReference context MemberReference MethodInvocation array toJavaArray StatementExpression MethodInvocation context MethodInvocation MemberReference array unregisterInspecting getRuntime	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement MethodInvocation key ClassReference ReferenceType Object toJava	0
MethodDeclaration Modifier public ReferenceType Set TypeArgument ReferenceType CFG_Edge FormalParameter ReferenceType BasicBlock ReturnStatement MethodInvocation MemberReference	0
MethodDeclaration Modifier private replaceInternal19 FormalParameter BasicType int beg FormalParameter BasicType int len FormalParameter ReferenceType RubyString repl LocalVariableDeclaration ReferenceType Encoding VariableDeclarator enc MethodInvocation MemberReference repl checkEncoding LocalVariableDeclaration BasicType int VariableDeclarator p MemberReference value begin LocalVariableDeclaration BasicType int VariableDeclarator e IfStatement MethodInvocation singleByteOptimizable BlockStatement StatementExpression Assignment MemberReference p MemberReference beg += StatementExpression Assignment MemberReference e BinaryOperation + MemberReference p MemberReference len = BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator end BinaryOperation + MemberReference p MemberReference value realSize LocalVariableDeclaration BasicType byte VariableDeclarator bytes MemberReference value bytes StatementExpression Assignment MemberReference p MethodInvocation StringSupport MemberReference enc MemberReference bytes MemberReference p MemberReference end MemberReference beg nth = IfStatement BinaryOperation == MemberReference p Literal - 1 StatementExpression Assignment MemberReference p MemberReference end = StatementExpression Assignment MemberReference e MethodInvocation StringSupport MemberReference enc MemberReference bytes MemberReference p MemberReference end MemberReference len nth = IfStatement BinaryOperation == MemberReference e Literal - 1 StatementExpression Assignment MemberReference e MemberReference end = LocalVariableDeclaration BasicType int VariableDeclarator cr MethodInvocation getCodeRange IfStatement BinaryOperation == MemberReference cr MemberReference CR_BROKEN StatementExpression MethodInvocation StatementExpression MethodInvocation BinaryOperation - MemberReference p MemberReference value begin BinaryOperation - MemberReference e MemberReference p MemberReference repl replaceInternal StatementExpression MethodInvocation MemberReference enc associateEncoding StatementExpression Assignment MemberReference cr MethodInvocation MemberReference cr MethodInvocation repl getCodeRange codeRangeAnd = IfStatement BinaryOperation != MemberReference cr MemberReference CR_BROKEN StatementExpression MethodInvocation MemberReference cr setCodeRange	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "insert" ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType IRubyObject insert FormalParameter ReferenceType IRubyObject arg ReturnStatement This	0
MethodDeclaration Modifier public Annotation Override BasicType int getNativeTypeIndex ReturnStatement MemberReference ClassIndex BIGNUM	0
MethodDeclaration Modifier private static BasicType int push_globs FormalParameter ReferenceType String cwd FormalParameter ReferenceType List TypeArgument ReferenceType ByteList ary FormalParameter ReferenceType GlobPattern pattern StatementExpression Assignment MemberReference pattern flags MemberReference FNM_SYSCASE |= ReturnStatement MethodInvocation MemberReference cwd MemberReference pattern bytes MemberReference pattern begin MemberReference pattern end Literal - 1 MemberReference pattern flags MemberReference ClassCreator ReferenceType MemberReference MemberReference ary glob_helper	1
MethodDeclaration Modifier private ReferenceType GlobalVariable FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType GlobalVariable VariableDeclarator variable Cast ReferenceType GlobalVariable MethodInvocation globalVariables MemberReference name get IfStatement BinaryOperation == MemberReference variable Literal null BlockStatement StatementExpression Assignment MemberReference variable MethodInvocation GlobalVariable MemberReference runtime MemberReference name = StatementExpression MethodInvocation globalVariables MemberReference name MemberReference variable put ReturnStatement MemberReference variable	0
MethodDeclaration Modifier private StatementExpression Assignment MemberReference MemberReference |=	0
MethodDeclaration Modifier public assignMethodArguments FormalParameter ReferenceType Object FormalParameter BasicType int FormalParameter ReferenceType Object optArgs FormalParameter BasicType int optArgsCount FormalParameter ReferenceType ArrayCallback requiredAssignment FormalParameter ReferenceType ArrayCallback optGivenAssignment FormalParameter ReferenceType ArrayCallback optNotGivenAssignment FormalParameter ReferenceType CompilerCallback restAssignment FormalParameter ReferenceType CompilerCallback blockAssignment IfStatement MemberReference specificArity BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator currentArgElement Literal 0 ForStatement ForControl BinaryOperation < MemberReference currentArgElement MethodInvocation scope getRequiredArgs MemberReference ++ currentArgElement BlockStatement StatementExpression MethodInvocation method BinaryOperation + MemberReference argsIndex MemberReference currentArgElement aload StatementExpression MethodInvocation requiredAssignment MemberReference methodCompiler MemberReference MemberReference currentArgElement nextValue BlockStatement IfStatement BinaryOperation || BinaryOperation || BinaryOperation > MemberReference Literal 0 BinaryOperation > MemberReference optArgsCount Literal 0 BinaryOperation != MemberReference restAssignment Literal null BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator currentArgElement Literal 0 ForStatement ForControl BinaryOperation < MemberReference currentArgElement MemberReference MemberReference ++ currentArgElement BlockStatement StatementExpression MethodInvocation method MemberReference argsIndex aload StatementExpression MethodInvocation method MemberReference currentArgElement pushInt StatementExpression MethodInvocation method arrayload StatementExpression MethodInvocation requiredAssignment MemberReference methodCompiler MemberReference MemberReference currentArgElement nextValue IfStatement BinaryOperation > MemberReference optArgsCount Literal 0 BlockStatement LocalVariableDeclaration ReferenceType Label VariableDeclarator doneWithOpt ClassCreator ReferenceType Label LocalVariableDeclaration ReferenceType Label VariableDeclarator optLabels ArrayCreator ReferenceType Label MemberReference optArgsCount ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference optLabels length MemberReference ++ i StatementExpression Assignment MemberReference ArraySelector MemberReference i optLabels ClassCreator ReferenceType Label = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator optArgElement Literal 0 BinaryOperation < MemberReference optArgElement MemberReference optArgsCount MemberReference ++ currentArgElement MemberReference ++ optArgElement BlockStatement StatementExpression MethodInvocation method MemberReference argsIndex aload StatementExpression MethodInvocation method MemberReference currentArgElement pushInt StatementExpression MethodInvocation methodCompiler Literal "elementOrNull" MethodInvocation ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject ClassReference BasicType int sig invokeUtilityMethod StatementExpression MethodInvocation method dup StatementExpression MethodInvocation method MemberReference ArraySelector MemberReference optArgElement optLabels StatementExpression MethodInvocation optGivenAssignment MemberReference methodCompiler MemberReference optArgs MemberReference optArgElement nextValue StatementExpression MethodInvocation method MemberReference doneWithOpt go_to ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator optArgElement Literal 0 BinaryOperation < MemberReference optArgElement MemberReference optArgsCount MemberReference ++ optArgElement BlockStatement StatementExpression MethodInvocation method MemberReference ArraySelector MemberReference optArgElement optLabels label StatementExpression MethodInvocation optNotGivenAssignment MemberReference methodCompiler MemberReference optArgs MemberReference optArgElement nextValue StatementExpression MethodInvocation method pop StatementExpression MethodInvocation method MemberReference doneWithOpt label IfStatement BinaryOperation != MemberReference restAssignment Literal null BlockStatement StatementExpression MethodInvocation method MemberReference argsIndex aload StatementExpression MethodInvocation methodCompiler StatementExpression MethodInvocation method MemberReference currentArgElement pushInt StatementExpression MethodInvocation methodCompiler Literal "createSubarray" MethodInvocation ClassReference ReferenceType RubyArray ClassReference ReferenceType IRubyObject ClassReference ReferenceType Ruby ClassReference BasicType int sig invokeUtilityMethod StatementExpression MethodInvocation restAssignment MemberReference methodCompiler call IfStatement BinaryOperation != MemberReference blockAssignment Literal null BlockStatement StatementExpression MethodInvocation methodCompiler StatementExpression MethodInvocation method MethodInvocation methodCompiler aload StatementExpression MethodInvocation methodCompiler Literal "processBlockArgument" MethodInvocation ClassReference ReferenceType IRubyObject MethodInvocation ClassReference ReferenceType Ruby ClassReference ReferenceType Block params sig invokeUtilityMethod StatementExpression MethodInvocation blockAssignment MemberReference methodCompiler call	1
MethodDeclaration Modifier private static ReferenceType ByteList FormalParameter ReferenceType ByteList str LocalVariableDeclaration BasicType int VariableDeclarator pos Literal 0 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 3 BinaryOperation >= MemberReference i Literal 1 MemberReference -- i BlockStatement StatementExpression Assignment MemberReference pos MethodInvocation str Literal '?' BinaryOperation + MemberReference pos Literal 1 indexOf = ReturnStatement ClassCreator ReferenceType ByteList MemberReference str BinaryOperation + MemberReference pos Literal 1 BinaryOperation - BinaryOperation - MethodInvocation str length MemberReference pos Literal 3	0
MethodDeclaration Modifier final BasicType int FormalParameter ReferenceType IRubyObject obj StatementExpression MethodInvocation check IfStatement BinaryOperation instanceof MemberReference obj ReferenceType RubySymbol BlockStatement ReturnStatement MethodInvocation Cast ReferenceType RubyString Cast ReferenceType RubySymbol MemberReference obj nameToBackrefNumber IfStatement BinaryOperation instanceof MemberReference obj ReferenceType RubyString BlockStatement ReturnStatement MethodInvocation Cast ReferenceType RubyString MemberReference obj nameToBackrefNumber BlockStatement ReturnStatement MethodInvocation RubyNumeric MemberReference obj num2int	0
MethodDeclaration Modifier private static BasicType int FormalParameter ReferenceType Class TypeArgument ? types FormalParameter ReferenceType IRubyObject args LocalVariableDeclaration BasicType int VariableDeclarator count Literal 0 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference args length MemberReference ++ i BlockStatement IfStatement MemberReference ArraySelector MemberReference i MethodInvocation MethodInvocation MemberReference ArraySelector MemberReference i args argClass equals types BlockStatement StatementExpression MemberReference ++ count ReturnStatement MemberReference count	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator receiver MethodInvocation MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference getReceiverNode ReturnStatement MethodInvocation callAdapter MemberReference context MemberReference self MemberReference receiver MethodInvocation arg1 MemberReference runtime MemberReference context MemberReference self MemberReference MethodInvocation RuntimeHelpers MemberReference context MemberReference self MemberReference getBlock call	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ReferenceType IRubyObject getc FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv LocalVariableDeclaration ReferenceType ArgsFileData VariableDeclarator data MethodInvocation ArgsFileData MemberReference recv getDataFrom WhileStatement Literal true BlockStatement LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator bt IfStatement MethodInvocation ! data MemberReference context next_argv ReturnStatement MethodInvocation context MethodInvocation getNil getRuntime IfStatement BinaryOperation instanceof MemberReference data currentFile ReferenceType RubyFile BlockStatement StatementExpression Assignment MemberReference bt MethodInvocation data.currentFile MemberReference context Literal callMethod = BlockStatement StatementExpression Assignment MemberReference bt Cast ReferenceType RubyIO MemberReference data currentFile = IfStatement MethodInvocation bt isNil BlockStatement StatementExpression Assignment MemberReference data next_p Literal 1 = ContinueStatement ReturnStatement MemberReference bt	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement Literal done"	0
MethodDeclaration Modifier public Annotation Deprecated ReferenceType IRubyObject yield FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject value FormalParameter BasicType boolean aValue ReturnStatement MethodInvocation body MemberReference context MemberReference value Literal null Literal null MemberReference aValue MemberReference MemberReference type yield	1
MethodDeclaration Modifier public FormalParameter ReferenceType List TypeArgument ReferenceType Variable TypeArgument ReferenceType Object vars IOException StatementExpression MethodInvocation MethodInvocation vars size writeInt ForStatement EnhancedForControl VariableDeclaration ReferenceType Variable TypeArgument ReferenceType Object VariableDeclarator var MemberReference vars BlockStatement IfStatement BinaryOperation instanceof MethodInvocation var getValue ReferenceType IRubyObject BlockStatement StatementExpression MethodInvocation MethodInvocation runtime MethodInvocation var getName StatementExpression MethodInvocation Cast ReferenceType IRubyObject MethodInvocation var getValue	0
MethodDeclaration Modifier public ReferenceType Object case302_line1162 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType SClassNode MethodInvocation Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 7 MemberReference yyTop yyVals getPosition Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 5 MemberReference yyTop yyVals MethodInvocation support getCurrentScope Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals = StatementExpression MethodInvocation support popCurrentScope StatementExpression MethodInvocation support Cast ReferenceType Boolean MemberReference ArraySelector BinaryOperation + Literal - 4 MemberReference yyTop yyVals setInDef StatementExpression MethodInvocation support Cast ReferenceType Integer MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals setInSingle ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public final ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject object ReturnStatement MethodInvocation runtimeCache MemberReference runtime Literal 7 MemberReference name MemberReference object getVariable	0
MethodDeclaration Modifier public BasicType int getIndex ReturnStatement BinaryOperation & MemberReference location Literal	0
MethodDeclaration Modifier public FormalParameter Modifier final BasicType int crc StatementExpression Assignment This MemberReference crc MemberReference crc = StatementExpression MethodInvocation This MemberReference crc	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MethodInvocation getVariables	0
MethodDeclaration Modifier public ReferenceType NodeType getNodeType ReturnStatement MemberReference NodeType BLOCKNODE	0
MethodDeclaration Modifier private final static ReferenceType String LocalVariableDeclaration ReferenceType String VariableDeclarator osname MethodInvocation MethodInvocation toLowerCase Literal "os.name" Literal "unknown" getProperty ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator s MethodInvocation OS_NAMES keySet BlockStatement IfStatement MethodInvocation s MemberReference osname equalsIgnoreCase BlockStatement ReturnStatement MethodInvocation OS_NAMES MemberReference s get IfStatement MethodInvocation osname Literal "windows" startsWith BlockStatement ReturnStatement MemberReference WINDOWS ReturnStatement MemberReference osname	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement Literal "foo"	0
MethodDeclaration Modifier public ReferenceType Operand FormalParameter ReferenceType Map TypeArgument ReferenceType Operand TypeArgument ReferenceType Operand StatementExpression Assignment MemberReference MethodInvocation MemberReference = IfStatement BinaryOperation instanceof MemberReference ReferenceType Variable BlockStatement StatementExpression Assignment MemberReference Cast ReferenceType Variable MemberReference = ReturnStatement This	0
MethodDeclaration Modifier private processArgv LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType String VariableDeclarator arglist ClassCreator ReferenceType ArrayList TypeArgument ReferenceType String ForStatement ForControl BinaryOperation < MemberReference argumentIndex MemberReference arguments length MemberReference ++ argumentIndex BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator arg MemberReference ArraySelector MemberReference argumentIndex arguments IfStatement BinaryOperation && MemberReference argvGlobalsOn MethodInvocation arg Literal "-" startsWith BlockStatement StatementExpression Assignment MemberReference arg MethodInvocation arg Literal 1 substring = IfStatement BinaryOperation > MethodInvocation arg Literal '=' indexOf Literal 0 BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator keyvalue MethodInvocation arg Literal "=" Literal 2 split StatementExpression MethodInvocation MemberReference ArraySelector Literal 0 keyvalue MemberReference ArraySelector Literal 1 keyvalue put BlockStatement StatementExpression MethodInvocation MemberReference arg Literal null put BlockStatement StatementExpression Assignment MemberReference argvGlobalsOn Literal false = StatementExpression MethodInvocation arglist MemberReference arg add ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator arg MemberReference argv StatementExpression MethodInvocation arglist MemberReference arg add StatementExpression Assignment MemberReference argv MethodInvocation arglist ArrayCreator ReferenceType String MethodInvocation arglist size toArray =	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair rest Literal true ElementValuePair module Literal true ElementValuePair visibility MemberReference Visibility PRIVATE ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args ReturnStatement MethodInvocation MethodInvocation context getRuntime MemberReference args	0
MethodDeclaration Modifier public ReferenceType Object case462_line1749 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop IfStatement BinaryOperation instanceof Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals ReferenceType SelfNode BlockStatement StatementExpression MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals checkExpression StatementExpression Assignment MemberReference yyVal Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier private static ReferenceType IRubyObject setupJavaSubclass FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject subclass FormalParameter ReferenceType IRubyObject java_class LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime IfStatement BinaryOperation instanceof MemberReference subclass ReferenceType RubyClass BlockStatement ThrowStatement MethodInvocation runtime MemberReference subclass MethodInvocation runtime getClassClass newTypeError LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator rubySubclass Cast ReferenceType RubyClass MemberReference subclass StatementExpression MethodInvocation rubySubclass MethodInvocation Literal "@java_proxy_class" MethodInvocation runtime getNil fastSetInstanceVariable getInstanceVariables LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator subclassSingleton MethodInvocation rubySubclass StatementExpression MethodInvocation subclassSingleton MemberReference context Literal "java_proxy_class" addReadWriteAttribute StatementExpression MethodInvocation subclassSingleton Literal "java_interfaces" ClassCreator ReferenceType JavaMethodZero MemberReference subclassSingleton MemberReference Visibility PUBLIC MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator javaInterfaces MethodInvocation self MethodInvocation Literal "@java_interfaces" fastGetInstanceVariable getInstanceVariables IfStatement BinaryOperation != MemberReference javaInterfaces Literal null ReturnStatement MethodInvocation javaInterfaces dup ReturnStatement MethodInvocation context MethodInvocation getNil getRuntime addMethod StatementExpression MethodInvocation rubySubclass Literal ClassCreator ReferenceType JavaMethodN MemberReference subclassSingleton MemberReference Visibility PUBLIC FieldDeclaration Modifier private final ReferenceType Map TypeArgument ReferenceType Integer TypeArgument ReferenceType ParameterTypes VariableDeclarator ClassCreator ReferenceType HashMap TypeArgument ReferenceType Integer TypeArgument ReferenceType ParameterTypes MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject args LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator proxyClass MethodInvocation self MethodInvocation getInstanceVariables MethodInvocation Literal "@java_proxy_class" fastGetInstanceVariable getMetaClass IfStatement BinaryOperation || BinaryOperation == MemberReference proxyClass Literal null MethodInvocation proxyClass isNil BlockStatement StatementExpression Assignment MemberReference proxyClass MethodInvocation JavaProxyClass MemberReference self MethodInvocation self getMetaClass get_with_class = StatementExpression MethodInvocation self MethodInvocation getInstanceVariables MethodInvocation Literal "@java_proxy_class" MemberReference proxyClass fastSetInstanceVariable getMetaClass LocalVariableDeclaration ReferenceType JavaProxyClass VariableDeclarator realProxyClass Cast ReferenceType JavaProxyClass MemberReference proxyClass LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator constructors MethodInvocation realProxyClass constructors LocalVariableDeclaration ReferenceType ArrayList TypeArgument ReferenceType JavaProxyConstructor VariableDeclarator forArity ClassCreator ReferenceType ArrayList TypeArgument ReferenceType JavaProxyConstructor ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation constructors size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType JavaProxyConstructor VariableDeclarator constructor Cast ReferenceType JavaProxyConstructor MethodInvocation constructors MemberReference i eltInternal IfStatement BinaryOperation == MethodInvocation constructor MemberReference length getParameterTypes MemberReference args length BlockStatement StatementExpression MethodInvocation forArity MemberReference constructor add IfStatement BinaryOperation == MethodInvocation forArity size Literal 0 BlockStatement ThrowStatement MethodInvocation context MethodInvocation Literal "wrong of arguments for newArgumentError getRuntime LocalVariableDeclaration ReferenceType JavaProxyConstructor VariableDeclarator matching Cast ReferenceType JavaProxyConstructor MethodInvocation CallableSelector MemberReference self MemberReference MethodInvocation forArity ArrayCreator ReferenceType JavaProxyConstructor MethodInvocation forArity size toArray MemberReference args MemberReference args length matchingCallableArityN LocalVariableDeclaration ReferenceType Object VariableDeclarator newArgs ArrayCreator ReferenceType Object MemberReference args length LocalVariableDeclaration ReferenceType Class VariableDeclarator parameterTypes MethodInvocation matching getParameterTypes ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference args length MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i newArgs MemberReference ArraySelector MemberReference i MethodInvocation MemberReference ArraySelector MemberReference i parameterTypes toJava args = LocalVariableDeclaration ReferenceType JavaObject VariableDeclarator newObject MethodInvocation matching MemberReference self MemberReference newArgs newInstance ReturnStatement MethodInvocation JavaUtilities MemberReference self MemberReference self MemberReference newObject set_java_object addMethod ReturnStatement MethodInvocation runtime getNil	1
MethodDeclaration Modifier public final ReferenceType IRubyObject fromNative FormalParameter ReferenceType ThreadContext context FormalParameter BasicType int value LocalVariableDeclaration Modifier final BasicType long VariableDeclarator address BinaryOperation & Cast BasicType long MemberReference value MemberReference ADDRESS_MASK ReturnStatement ClassCreator ReferenceType Pointer MethodInvocation context getRuntime MethodInvocation MethodInvocation context getRuntime MemberReference address wrap	1
MethodDeclaration Modifier public ReferenceType Node getValueNode ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType ReturnStatement MemberReference staticScope	0
MethodDeclaration Modifier protected replaceText FormalParameter BasicType int start FormalParameter BasicType int end FormalParameter ReferenceType String replacement TryStatement StatementExpression MethodInvocation area MethodInvocation MemberReference start BinaryOperation - MemberReference end MemberReference start remove getDocument StatementExpression MethodInvocation area MethodInvocation MemberReference start MemberReference replacement MemberReference inputStyle insertString getDocument CatchClause CatchClauseParameter BadLocationException e StatementExpression MethodInvocation e printStackTrace	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair frame Literal true ReferenceType IRubyObject max FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter Modifier final ReferenceType Block block LocalVariableDeclaration Modifier final ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration Modifier final ReferenceType IRubyObject VariableDeclarator result ArrayCreator ReferenceType IRubyObject ArrayInitializer Literal null LocalVariableDeclaration Modifier final ReferenceType ThreadContext VariableDeclarator localContext MemberReference context IfStatement MethodInvocation block isGiven BlockStatement StatementExpression MethodInvocation MemberReference runtime MemberReference context MemberReference self ClassCreator ReferenceType BlockCallback MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext ctx FormalParameter ReferenceType IRubyObject largs FormalParameter ReferenceType Block blk LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator larg MethodInvocation MemberReference runtime MemberReference largs checkArgs StatementExpression MethodInvocation MemberReference localContext MemberReference ctx Literal checkContext IfStatement BinaryOperation || BinaryOperation == MemberReference ArraySelector Literal 0 result Literal null BinaryOperation > MethodInvocation RubyComparable MemberReference ctx MethodInvocation block MemberReference ctx MethodInvocation runtime MemberReference larg MemberReference ArraySelector Literal 0 result newArray Literal null Literal null Literal true yield MemberReference larg MemberReference ArraySelector Literal 0 result cmpint Literal 0 BlockStatement StatementExpression Assignment MemberReference ArraySelector Literal 0 result MemberReference larg = ReturnStatement MethodInvocation runtime getNil callEach BlockStatement StatementExpression MethodInvocation MemberReference runtime MemberReference context MemberReference self ClassCreator ReferenceType BlockCallback MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext ctx FormalParameter ReferenceType IRubyObject largs FormalParameter ReferenceType Block blk LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator larg MethodInvocation MemberReference runtime MemberReference largs checkArgs SynchronizedStatement MemberReference result IfStatement BinaryOperation || BinaryOperation == MemberReference ArraySelector Literal 0 result Literal null BinaryOperation > MethodInvocation RubyComparable MemberReference ctx MethodInvocation larg MemberReference ctx Literal "<=>" MemberReference ArraySelector Literal 0 result callMethod MemberReference larg MemberReference ArraySelector Literal 0 result cmpint Literal 0 BlockStatement StatementExpression Assignment MemberReference ArraySelector Literal 0 result MemberReference larg = ReturnStatement MethodInvocation runtime getNil callEach ReturnStatement TernaryExpression BinaryOperation == MemberReference ArraySelector Literal 0 result Literal null MethodInvocation runtime getNil MemberReference ArraySelector Literal 0 result	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair meta Literal true ElementValuePair optional Literal 1 ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration BasicType int VariableDeclarator Literal 0 IfStatement BinaryOperation == MemberReference args length Literal 0 BlockStatement StatementExpression Assignment MemberReference MethodInvocation runtime MethodInvocation Literal 0 getPosix = StatementExpression MethodInvocation runtime MethodInvocation MemberReference getPosix IfStatement BinaryOperation == MemberReference args length Literal 1 BlockStatement StatementExpression Assignment MemberReference MethodInvocation runtime MethodInvocation Cast BasicType int MemberReference ArraySelector Literal 0 MethodInvocation convertToInteger MethodInvocation getLongValue args getPosix = BlockStatement StatementExpression MethodInvocation runtime Literal "wrong number of arguments" newArgumentError ReturnStatement MethodInvocation runtime MemberReference newFixnum	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal "%" Literal "modulo" ElementValuePair required Literal 1 ReferenceType IRubyObject op_mod FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject other SwitchStatement MethodInvocation other MemberReference index getMetaClass SwitchStatementCase MemberReference ClassIndex FIXNUM MemberReference ClassIndex BIGNUM MemberReference ClassIndex FLOAT LocalVariableDeclaration BasicType double VariableDeclarator y Cast ReferenceType RubyNumeric MemberReference other LocalVariableDeclaration BasicType double VariableDeclarator x MemberReference value LocalVariableDeclaration BasicType double VariableDeclarator MethodInvocation Math MemberReference x MemberReference y IfStatement BinaryOperation < BinaryOperation * MemberReference y MemberReference Literal 0 BlockStatement StatementExpression Assignment MemberReference MemberReference y += ReturnStatement MethodInvocation RubyFloat MethodInvocation getRuntime MemberReference newFloat SwitchStatementCase ReturnStatement MethodInvocation MemberReference context Literal "%" MemberReference other coerceBin	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair frame Literal true ReferenceType IRubyObject min FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter Modifier final ReferenceType Block block LocalVariableDeclaration Modifier final ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration Modifier final ReferenceType IRubyObject VariableDeclarator result ArrayCreator ReferenceType IRubyObject ArrayInitializer Literal null LocalVariableDeclaration Modifier final ReferenceType ThreadContext VariableDeclarator localContext MemberReference context IfStatement MethodInvocation block isGiven BlockStatement StatementExpression MethodInvocation MemberReference runtime MemberReference context MemberReference self ClassCreator ReferenceType BlockCallback MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext ctx FormalParameter ReferenceType IRubyObject largs FormalParameter ReferenceType Block blk LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator larg MethodInvocation MemberReference runtime MemberReference largs checkArgs StatementExpression MethodInvocation MemberReference localContext MemberReference ctx Literal checkContext IfStatement BinaryOperation || BinaryOperation == MemberReference ArraySelector Literal 0 result Literal null BinaryOperation < MethodInvocation RubyComparable MemberReference ctx MethodInvocation block MemberReference ctx MethodInvocation runtime MemberReference larg MemberReference ArraySelector Literal 0 result newArray yield MemberReference larg MemberReference ArraySelector Literal 0 result cmpint Literal 0 BlockStatement StatementExpression Assignment MemberReference ArraySelector Literal 0 result MemberReference larg = ReturnStatement MethodInvocation runtime getNil callEach BlockStatement StatementExpression MethodInvocation MemberReference runtime MemberReference context MemberReference self ClassCreator ReferenceType BlockCallback MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext ctx FormalParameter ReferenceType IRubyObject largs FormalParameter ReferenceType Block blk LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator larg MethodInvocation MemberReference runtime MemberReference largs checkArgs SynchronizedStatement MemberReference result IfStatement BinaryOperation || BinaryOperation == MemberReference ArraySelector Literal 0 result Literal null BinaryOperation < MethodInvocation RubyComparable MemberReference ctx MethodInvocation larg MemberReference ctx Literal "<=>" MemberReference ArraySelector Literal 0 result callMethod MemberReference larg MemberReference ArraySelector Literal 0 result cmpint Literal 0 BlockStatement StatementExpression Assignment MemberReference ArraySelector Literal 0 result MemberReference larg = ReturnStatement MethodInvocation runtime getNil callEach ReturnStatement TernaryExpression BinaryOperation == MemberReference ArraySelector Literal 0 result Literal null MethodInvocation runtime getNil MemberReference ArraySelector Literal 0 result	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference oldName	0
MethodDeclaration Modifier static protected ReferenceType String FormalParameter ReferenceType IRubyObject object ReturnStatement MethodInvocation object MethodInvocation getName getClass	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "post_match" ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context StatementExpression MethodInvocation check IfStatement BinaryOperation == MemberReference begin Literal - 1 ReturnStatement MethodInvocation context MethodInvocation getNil getRuntime ReturnStatement MethodInvocation str MethodInvocation This infectBy MethodInvocation context getRuntime MemberReference end BinaryOperation - MethodInvocation str MethodInvocation length getByteList MemberReference end makeShared	1
MethodDeclaration Modifier public encode FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType IRubyObject o FormalParameter ReferenceType ByteList result IfStatement BinaryOperation == MemberReference Platform BYTE_ORDER MemberReference Platform BIG_ENDIAN StatementExpression MethodInvocation MemberReference result MethodInvocation MemberReference runtime MemberReference o StatementExpression MethodInvocation MemberReference result MethodInvocation MemberReference runtime MemberReference o	1
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType Block block ReturnStatement MethodInvocation RuntimeHelpers MemberReference context MemberReference self Literal MemberReference block invoke	0
MethodDeclaration Modifier public ReferenceType Object case373_line1406 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop IfStatement BinaryOperation instanceof Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals ReferenceType YieldNode BlockStatement ThrowStatement ClassCreator ReferenceType SyntaxException MemberReference PID MethodInvocation Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals getPosition MethodInvocation lexer getCurrentLine Literal "block given to yield" IfStatement BinaryOperation instanceof Cast ReferenceType BlockAcceptingNode MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals ReferenceType BlockPassNode BlockStatement ThrowStatement ClassCreator ReferenceType SyntaxException MemberReference PID BLOCK_ARG_AND_BLOCK_GIVEN MethodInvocation Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals getPosition MethodInvocation lexer getCurrentLine Literal "Both block arg and block given." StatementExpression Assignment MemberReference yyVal Cast ReferenceType BlockAcceptingNode MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals = StatementExpression Cast ReferenceType Node MemberReference yyVal ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "input=" ElementValuePair module Literal true ElementValuePair visibility MemberReference Visibility PRIVATE ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject input ReturnStatement MethodInvocation context MethodInvocation getNil getRuntime	1
MethodDeclaration Modifier public load FormalParameter ReferenceType Ruby runtime FormalParameter BasicType boolean wrap IOException StatementExpression MethodInvocation MemberReference runtime	0
MethodDeclaration Modifier public ReferenceType ReturnStatement MemberReference scope	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair required Literal 2 ElementValuePair module Literal true ElementValuePair visibility MemberReference Visibility PRIVATE ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 ReturnStatement MethodInvocation MethodInvocation context getRuntime MemberReference arg1 MemberReference arg2	0
MethodDeclaration Modifier public static ReferenceType RubyClass FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType RubyClass LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator MethodInvocation Literal MethodInvocation runtime Literal getClass MemberReference defineClassUnder StatementExpression MethodInvocation ClassReference ReferenceType defineAnnotatedMethods ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType RaiseException ReturnStatement MethodInvocation MemberReference NOREASON MethodInvocation getNil Literal "no block given"	0
MethodDeclaration Modifier public static Annotation Deprecated ReferenceType IRubyObject pack_sockaddr_un FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject filename ReturnStatement MethodInvocation MethodInvocation recv MethodInvocation getCurrentContext getRuntime MemberReference recv MemberReference filename pack_sockaddr_un	1
MethodDeclaration Modifier public BasicType long LocalVariableDeclaration ReferenceType CacheEntry VariableDeclarator MethodInvocation getCache IfStatement BinaryOperation != MemberReference MemberReference CacheEntry BlockStatement ReturnStatement MethodInvocation ReturnStatement Literal - 1	0
MethodDeclaration Modifier private static ReferenceType RubyString FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType RubyString str FormalParameter ReferenceType String format LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator array MethodInvocation RubyArray MemberReference runtime Literal 1 newArray StatementExpression MethodInvocation array MemberReference str append ReturnStatement MethodInvocation MethodInvocation MethodInvocation runtime getCurrentContext MemberReference runtime MemberReference array ClassCreator ReferenceType ByteList MethodInvocation ByteList MemberReference format plain pack	0
MethodDeclaration Modifier public ReferenceType RubyClass getInteger ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Date getDate ReturnStatement MemberReference date	0
MethodDeclaration Modifier public final ReferenceType Arity ReturnStatement MemberReference Arity OPTIONAL	0
MethodDeclaration Modifier public ReferenceType Object convert FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject rubyObject IfStatement MethodInvocation rubyObject Literal "to_f" respondsTo BlockStatement ReturnStatement ClassCreator ReferenceType Float Cast BasicType float Cast ReferenceType RubyNumeric MethodInvocation rubyObject MemberReference context Literal "to_f" callMethod ReturnStatement ClassCreator ReferenceType Float Literal 0.0	1
MethodDeclaration Modifier public BasicType int FormalParameter ReferenceType RubyYaccLexer lexer FormalParameter ReferenceType LexerSource src java.io.IOException LocalVariableDeclaration BasicType boolean VariableDeclarator spaceSeen Literal false LocalVariableDeclaration BasicType int VariableDeclarator c IfStatement BinaryOperation == MemberReference flags Literal - 1 BlockStatement StatementExpression MethodInvocation lexer ClassCreator ReferenceType Token Literal "\"" MethodInvocation lexer getPosition setValue ReturnStatement MemberReference Tokens tSTRING_END StatementExpression Assignment MemberReference c MethodInvocation src read = IfStatement BinaryOperation && BinaryOperation != BinaryOperation & MemberReference flags MemberReference RubyYaccLexer STR_FUNC_QWORDS Literal 0 MethodInvocation Character MemberReference c isWhitespace BlockStatement DoStatement MethodInvocation Character MemberReference c isWhitespace BlockStatement StatementExpression Assignment MemberReference c MethodInvocation src read = StatementExpression Assignment MemberReference spaceSeen Literal true = IfStatement BinaryOperation && BinaryOperation == MemberReference c MemberReference end BinaryOperation == MemberReference nest Literal 0 BlockStatement IfStatement BinaryOperation != BinaryOperation & MemberReference flags MemberReference RubyYaccLexer STR_FUNC_QWORDS Literal 0 BlockStatement StatementExpression Assignment MemberReference flags Literal - 1 = StatementExpression MethodInvocation lexer getPosition ReturnStatement Literal ' ' IfStatement BinaryOperation != BinaryOperation & MemberReference flags MemberReference RubyYaccLexer Literal 0 BlockStatement StatementExpression MethodInvocation lexer ClassCreator ReferenceType RegexpNode MethodInvocation src getPosition MethodInvocation ByteList Literal "" create MethodInvocation MemberReference src setValue ReturnStatement MemberReference Tokens tREGEXP_END StatementExpression MethodInvocation lexer ClassCreator ReferenceType Token Literal "\"" MethodInvocation lexer getPosition setValue ReturnStatement MemberReference Tokens tSTRING_END IfStatement MemberReference spaceSeen BlockStatement StatementExpression MethodInvocation src MemberReference c unread StatementExpression MethodInvocation lexer getPosition ReturnStatement Literal ' ' IfStatement BinaryOperation && BinaryOperation == MemberReference begin Literal '\0' BinaryOperation == MemberReference flags Literal 0 BlockStatement LocalVariableDeclaration ReferenceType ByteList VariableDeclarator buffer ClassCreator ReferenceType ByteList StatementExpression MethodInvocation src MemberReference c unread IfStatement BinaryOperation == MethodInvocation MemberReference src MemberReference buffer MemberReference RubyYaccLexer EOF BlockStatement ThrowStatement ClassCreator ReferenceType SyntaxException MemberReference PID STRING_HITS_EOF MethodInvocation src getPosition MethodInvocation src getCurrentLine Literal "unterminated string meets end of file" StatementExpression MethodInvocation lexer ClassCreator ReferenceType StrNode MethodInvocation lexer getPosition MemberReference buffer setValue ReturnStatement MemberReference Tokens tSTRING_CONTENT LocalVariableDeclaration ReferenceType ByteList VariableDeclarator buffer ClassCreator ReferenceType ByteList IfStatement BinaryOperation && BinaryOperation != BinaryOperation & MemberReference flags MemberReference RubyYaccLexer STR_FUNC_EXPAND Literal 0 BinaryOperation == MemberReference c Literal '#' BlockStatement StatementExpression Assignment MemberReference c MethodInvocation src read = SwitchStatement MemberReference c SwitchStatementCase Literal '$' Literal '@' StatementExpression MethodInvocation src MemberReference c unread StatementExpression MethodInvocation lexer ClassCreator ReferenceType Token BinaryOperation + Literal "#" MemberReference c MethodInvocation lexer getPosition setValue ReturnStatement MemberReference Tokens tSTRING_DVAR SwitchStatementCase Literal '{' StatementExpression MethodInvocation lexer ClassCreator ReferenceType Token BinaryOperation + Literal "#" MemberReference c MethodInvocation lexer getPosition setValue ReturnStatement MemberReference Tokens tSTRING_DBEG StatementExpression MethodInvocation buffer Cast BasicType byte Literal '#' append StatementExpression MethodInvocation src MemberReference c unread IfStatement BinaryOperation == MethodInvocation MemberReference lexer MemberReference src MemberReference buffer parseStringIntoBuffer MemberReference RubyYaccLexer EOF BlockStatement ThrowStatement ClassCreator ReferenceType SyntaxException MemberReference PID STRING_HITS_EOF MethodInvocation src getPosition MethodInvocation src getCurrentLine Literal "unterminated string meets end of file" StatementExpression MethodInvocation lexer ClassCreator ReferenceType StrNode MethodInvocation lexer getPosition MemberReference buffer setValue ReturnStatement MemberReference Tokens tSTRING_CONTENT	1
MethodDeclaration Modifier public FormalParameter ReferenceType Node node FormalParameter ReferenceType BodyCompiler context FormalParameter BasicType boolean expr LocalVariableDeclaration ReferenceType DVarNode VariableDeclarator dvarNode Cast ReferenceType DVarNode MemberReference node IfStatement MemberReference RubyInstanceConfig PEEPHOLE_OPTZ BlockStatement IfStatement MemberReference expr StatementExpression MethodInvocation context MethodInvocation MethodInvocation dvarNode getIndex MethodInvocation dvarNode getVariableCompiler BlockStatement StatementExpression MethodInvocation context MethodInvocation MethodInvocation dvarNode getIndex MethodInvocation dvarNode getVariableCompiler IfStatement MemberReference ! expr StatementExpression MethodInvocation context consumeCurrentValue	1
MethodDeclaration Modifier public static ReferenceType Class defineOldStyleImplClass FormalParameter ReferenceType Ruby ruby FormalParameter ReferenceType String name FormalParameter ReferenceType String superTypeNames FormalParameter ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType List TypeArgument ReferenceType Method simpleToAll LocalVariableDeclaration ReferenceType ClassWriter VariableDeclarator cw ClassCreator ReferenceType ClassWriter MemberReference ClassWriter COMPUTE_MAXS LocalVariableDeclaration ReferenceType String VariableDeclarator pathName MethodInvocation name Literal '.' Literal '/' replace StatementExpression MethodInvocation cw MemberReference V1_5 BinaryOperation | MemberReference ACC_PUBLIC MemberReference ACC_SUPER MemberReference pathName Literal null MethodInvocation ClassReference ReferenceType Object p MemberReference superTypeNames visit StatementExpression MethodInvocation cw BinaryOperation + MemberReference pathName Literal ".gen" Literal null visitSource StatementExpression MethodInvocation cw MethodInvocation visitEnd BinaryOperation | BinaryOperation | MemberReference ACC_STATIC MemberReference ACC_FINAL MemberReference ACC_PRIVATE Literal "$monitor" MethodInvocation ClassReference ReferenceType Object ci Literal null Literal null visitField StatementExpression MethodInvocation cw MethodInvocation visitEnd BinaryOperation | MemberReference ACC_PRIVATE MemberReference ACC_FINAL Literal "$self" MethodInvocation ClassReference ReferenceType IRubyObject ci Literal null Literal null visitField LocalVariableDeclaration ReferenceType SkinnyMethodAdapter VariableDeclarator clinitMethod ClassCreator ReferenceType SkinnyMethodAdapter MethodInvocation cw BinaryOperation | MemberReference ACC_PUBLIC MemberReference ACC_STATIC Literal MethodInvocation VoidClassReference sig Literal null Literal null visitMethod StatementExpression MethodInvocation clinitMethod MethodInvocation ClassReference ReferenceType Object p StatementExpression MethodInvocation clinitMethod dup StatementExpression MethodInvocation clinitMethod MethodInvocation ClassReference ReferenceType Object p Literal "<init>" MethodInvocation VoidClassReference sig invokespecial StatementExpression MethodInvocation clinitMethod MemberReference pathName Literal "$monitor" MethodInvocation ClassReference ReferenceType Object ci putstatic LocalVariableDeclaration ReferenceType SkinnyMethodAdapter VariableDeclarator initMethod ClassCreator ReferenceType SkinnyMethodAdapter MethodInvocation cw MemberReference ACC_PUBLIC Literal "<init>" MethodInvocation VoidClassReference ClassReference ReferenceType IRubyObject sig Literal null Literal null visitMethod StatementExpression MethodInvocation initMethod Literal 0 aload StatementExpression MethodInvocation initMethod MethodInvocation ClassReference ReferenceType Object p Literal "<init>" MethodInvocation VoidClassReference sig invokespecial StatementExpression MethodInvocation initMethod Literal 0 aload StatementExpression MethodInvocation initMethod Literal 1 aload StatementExpression MethodInvocation initMethod MemberReference pathName Literal "$self" MethodInvocation ClassReference ReferenceType IRubyObject ci putfield StatementExpression MethodInvocation initMethod voidreturn StatementExpression MethodInvocation initMethod end ForStatement EnhancedForControl VariableDeclaration ReferenceType Map ReferenceType Entry TypeArgument ReferenceType String TypeArgument ReferenceType List TypeArgument ReferenceType Method VariableDeclarator entry MethodInvocation simpleToAll entrySet BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator simpleName MethodInvocation entry getKey LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType String VariableDeclarator nameSet MethodInvocation JavaUtil MemberReference simpleName MethodInvocation entry getValue getRubyNamesForJavaName StatementExpression MethodInvocation cw MethodInvocation visitEnd BinaryOperation | BinaryOperation | MemberReference ACC_STATIC MemberReference ACC_PUBLIC MemberReference ACC_VOLATILE MemberReference simpleName MethodInvocation ClassReference ReferenceType CacheEntry ci Literal null Literal null visitField StatementExpression MethodInvocation clinitMethod MethodInvocation ClassReference ReferenceType CacheEntry p Literal MethodInvocation ClassReference ReferenceType CacheEntry ci getstatic StatementExpression MethodInvocation clinitMethod MemberReference pathName MemberReference simpleName MethodInvocation ClassReference ReferenceType CacheEntry ci putstatic LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType String VariableDeclarator implementedNames ClassCreator ReferenceType HashSet TypeArgument ReferenceType String ForStatement EnhancedForControl VariableDeclaration ReferenceType Method VariableDeclarator method MethodInvocation entry getValue BlockStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator paramTypes MethodInvocation method getParameterTypes LocalVariableDeclaration ReferenceType Class VariableDeclarator returnType MethodInvocation method getReturnType LocalVariableDeclaration ReferenceType String VariableDeclarator fullName BinaryOperation + MemberReference simpleName MethodInvocation MemberReference paramTypes prettyParams IfStatement MethodInvocation implementedNames MemberReference fullName contains ContinueStatement StatementExpression MethodInvocation implementedNames MemberReference fullName add LocalVariableDeclaration BasicType int VariableDeclarator baseIndex Literal 1 ForStatement EnhancedForControl VariableDeclaration ReferenceType Class VariableDeclarator paramType MemberReference paramTypes BlockStatement IfStatement BinaryOperation || BinaryOperation == MemberReference paramType ClassReference BasicType double BinaryOperation == MemberReference paramType ClassReference BasicType long BlockStatement StatementExpression Assignment MemberReference baseIndex Literal 2 += BlockStatement StatementExpression Assignment MemberReference baseIndex Literal 1 += LocalVariableDeclaration BasicType int VariableDeclarator selfIndex MemberReference baseIndex LocalVariableDeclaration BasicType int VariableDeclarator rubyIndex BinaryOperation + MemberReference selfIndex Literal 1 LocalVariableDeclaration ReferenceType SkinnyMethodAdapter VariableDeclarator mv ClassCreator ReferenceType SkinnyMethodAdapter MethodInvocation cw MemberReference ACC_PUBLIC MemberReference simpleName MethodInvocation MemberReference returnType MemberReference paramTypes sig Literal null Literal null visitMethod StatementExpression MethodInvocation mv start StatementExpression MethodInvocation mv Literal 1 line IfStatement BinaryOperation && BinaryOperation && BinaryOperation && MethodInvocation simpleName Literal "equals" equals BinaryOperation == MemberReference paramTypes length Literal 1 BinaryOperation == MemberReference ArraySelector Literal 0 paramTypes ClassReference ReferenceType Object BinaryOperation == MemberReference returnType MemberReference Boolean TYPE BlockStatement StatementExpression MethodInvocation mv Literal 2 line StatementExpression MethodInvocation mv Literal 0 aload StatementExpression MethodInvocation mv Literal 1 aload StatementExpression MethodInvocation mv MethodInvocation ClassReference ReferenceType Object p Literal "equals" MethodInvocation MemberReference Boolean TYPE MethodInvocation ClassReference ReferenceType Object params sig invokespecial StatementExpression MethodInvocation mv IfStatement BinaryOperation && BinaryOperation && MethodInvocation simpleName Literal "hashCode" equals BinaryOperation == MemberReference paramTypes length Literal 0 BinaryOperation == MemberReference returnType MemberReference Integer TYPE BlockStatement StatementExpression MethodInvocation mv Literal 3 line StatementExpression MethodInvocation mv Literal 0 aload StatementExpression MethodInvocation mv MethodInvocation ClassReference ReferenceType Object p Literal "hashCode" MethodInvocation MemberReference Integer TYPE sig invokespecial StatementExpression MethodInvocation mv IfStatement BinaryOperation && BinaryOperation && MethodInvocation simpleName Literal "toString" equals BinaryOperation == MemberReference paramTypes length Literal 0 BinaryOperation == MemberReference returnType ClassReference ReferenceType String BlockStatement StatementExpression MethodInvocation mv Literal 4 line StatementExpression MethodInvocation mv Literal 0 aload StatementExpression MethodInvocation mv MethodInvocation ClassReference ReferenceType Object p Literal "toString" MethodInvocation ClassReference ReferenceType String sig invokespecial StatementExpression MethodInvocation mv areturn BlockStatement StatementExpression MethodInvocation mv Literal 5 line LocalVariableDeclaration ReferenceType Label VariableDeclarator dispatch ClassCreator ReferenceType Label LocalVariableDeclaration ReferenceType Label VariableDeclarator end ClassCreator ReferenceType Label LocalVariableDeclaration ReferenceType Label VariableDeclarator recheckMethod ClassCreator ReferenceType Label StatementExpression MethodInvocation mv Literal 0 aload StatementExpression MethodInvocation mv MemberReference pathName Literal "$self" MethodInvocation ClassReference ReferenceType IRubyObject ci getfield StatementExpression MethodInvocation mv MemberReference selfIndex astore StatementExpression MethodInvocation mv MemberReference selfIndex aload StatementExpression MethodInvocation mv MethodInvocation ClassReference ReferenceType IRubyObject p Literal "getRuntime" MethodInvocation ClassReference ReferenceType Ruby sig StatementExpression MethodInvocation mv MemberReference rubyIndex astore StatementExpression MethodInvocation mv MemberReference pathName MemberReference simpleName MethodInvocation ClassReference ReferenceType CacheEntry ci getstatic StatementExpression MethodInvocation mv dup StatementExpression MethodInvocation mv MemberReference selfIndex aload StatementExpression MethodInvocation mv MethodInvocation ClassReference ReferenceType p Literal MethodInvocation ClassReference BasicType boolean MethodInvocation ClassReference ReferenceType CacheEntry ClassReference ReferenceType IRubyObject params sig invokestatic StatementExpression MethodInvocation mv MemberReference dispatch StatementExpression MethodInvocation mv Literal 6 line StatementExpression MethodInvocation mv pop StatementExpression MethodInvocation mv MemberReference pathName Literal "$monitor" MethodInvocation ClassReference ReferenceType Object ci getstatic StatementExpression MethodInvocation mv LocalVariableDeclaration ReferenceType Label VariableDeclarator tryStart ClassCreator ReferenceType Label LocalVariableDeclaration ReferenceType Label VariableDeclarator tryEnd ClassCreator ReferenceType Label LocalVariableDeclaration ReferenceType Label VariableDeclarator finallyStart ClassCreator ReferenceType Label LocalVariableDeclaration ReferenceType Label VariableDeclarator finallyEnd ClassCreator ReferenceType Label StatementExpression MethodInvocation mv Literal 7 line StatementExpression MethodInvocation mv MemberReference tryStart label StatementExpression MethodInvocation mv MemberReference selfIndex aload ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator eachName MemberReference nameSet BlockStatement StatementExpression MethodInvocation mv MemberReference eachName ldc StatementExpression MethodInvocation mv MethodInvocation ClassReference ReferenceType p Literal MethodInvocation ClassReference ReferenceType CacheEntry MethodInvocation ClassReference ReferenceType IRubyObject ClassReference ReferenceType String MethodInvocation nameSet size params sig invokestatic StatementExpression MethodInvocation mv MemberReference pathName MemberReference simpleName MethodInvocation ClassReference ReferenceType CacheEntry ci putstatic StatementExpression MethodInvocation mv MemberReference pathName Literal "$monitor" MethodInvocation ClassReference ReferenceType Object ci getstatic StatementExpression MethodInvocation mv StatementExpression MethodInvocation mv MemberReference recheckMethod go_to StatementExpression MethodInvocation mv MemberReference tryEnd label StatementExpression MethodInvocation mv MemberReference finallyStart label StatementExpression MethodInvocation mv Literal 9 line StatementExpression MethodInvocation mv MemberReference pathName Literal "$monitor" MethodInvocation ClassReference ReferenceType Object ci getstatic StatementExpression MethodInvocation mv StatementExpression MethodInvocation mv MemberReference finallyEnd label StatementExpression MethodInvocation mv athrow StatementExpression MethodInvocation mv MemberReference tryStart MemberReference tryEnd MemberReference finallyStart Literal null trycatch StatementExpression MethodInvocation mv MemberReference finallyStart MemberReference finallyEnd MemberReference finallyStart Literal null trycatch StatementExpression MethodInvocation mv MemberReference recheckMethod label StatementExpression MethodInvocation mv Literal 10 line StatementExpression MethodInvocation mv MemberReference pathName MemberReference simpleName MethodInvocation ClassReference ReferenceType CacheEntry ci getstatic StatementExpression MethodInvocation mv dup StatementExpression MethodInvocation mv MethodInvocation ClassReference ReferenceType CacheEntry p Literal "method" MethodInvocation ClassReference ReferenceType DynamicMethod ci getfield StatementExpression MethodInvocation mv MethodInvocation ClassReference ReferenceType DynamicMethod p Literal "isUndefined" MethodInvocation ClassReference BasicType boolean sig invokevirtual StatementExpression MethodInvocation mv MemberReference dispatch StatementExpression MethodInvocation mv Literal 11 line StatementExpression MethodInvocation mv pop StatementExpression MethodInvocation mv MemberReference selfIndex aload StatementExpression MethodInvocation mv MemberReference simpleName ldc StatementExpression MethodInvocation MemberReference mv MemberReference paramTypes MemberReference rubyIndex coerceArgumentsToRuby StatementExpression MethodInvocation mv MethodInvocation ClassReference ReferenceType RuntimeHelpers p Literal MethodInvocation ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject ClassReference ReferenceType String ClassReference ReferenceType IRubyObject sig invokestatic StatementExpression MethodInvocation mv MemberReference end go_to StatementExpression MethodInvocation mv MemberReference dispatch label StatementExpression MethodInvocation mv Literal 12 MemberReference dispatch line StatementExpression MethodInvocation mv MethodInvocation ClassReference ReferenceType CacheEntry p Literal "method" MethodInvocation ClassReference ReferenceType DynamicMethod ci getfield StatementExpression MethodInvocation mv MemberReference rubyIndex aload StatementExpression MethodInvocation mv MethodInvocation ClassReference ReferenceType Ruby p Literal "getCurrentContext" MethodInvocation ClassReference ReferenceType ThreadContext sig invokevirtual StatementExpression MethodInvocation mv MemberReference selfIndex aload StatementExpression MethodInvocation mv MemberReference selfIndex aload StatementExpression MethodInvocation mv MethodInvocation ClassReference ReferenceType IRubyObject p Literal MethodInvocation ClassReference ReferenceType RubyClass sig StatementExpression MethodInvocation mv MemberReference simpleName ldc StatementExpression MethodInvocation MemberReference mv MemberReference paramTypes MemberReference rubyIndex coerceArgumentsToRuby StatementExpression MethodInvocation mv MethodInvocation ClassReference ReferenceType Block p Literal "NULL_BLOCK" MethodInvocation ClassReference ReferenceType Block ci getstatic StatementExpression MethodInvocation mv Literal 13 line StatementExpression MethodInvocation mv MethodInvocation ClassReference ReferenceType DynamicMethod p Literal "call" MethodInvocation ClassReference ReferenceType IRubyObject ClassReference ReferenceType ThreadContext ClassReference ReferenceType IRubyObject ClassReference ReferenceType RubyModule ClassReference ReferenceType String ClassReference ReferenceType IRubyObject ClassReference ReferenceType Block sig invokevirtual StatementExpression MethodInvocation mv MemberReference end label StatementExpression MethodInvocation MemberReference mv MemberReference returnType StatementExpression MethodInvocation mv end StatementExpression MethodInvocation clinitMethod voidreturn StatementExpression MethodInvocation clinitMethod end StatementExpression MethodInvocation cw visitEnd LocalVariableDeclaration BasicType byte VariableDeclarator bytes MethodInvocation cw toByteArray LocalVariableDeclaration ReferenceType Class VariableDeclarator newClass SynchronizedStatement MethodInvocation ruby getJRubyClassLoader TryStatement StatementExpression Assignment MemberReference newClass MethodInvocation ruby MethodInvocation MemberReference name loadClass getJRubyClassLoader = CatchClause CatchClauseParameter ClassNotFoundException cnfe StatementExpression Assignment MemberReference newClass MethodInvocation ruby MethodInvocation MemberReference name MethodInvocation cw toByteArray defineClass getJRubyClassLoader = IfStatement MemberReference DEBUG BlockStatement LocalVariableDeclaration ReferenceType FileOutputStream VariableDeclarator fos Literal null TryStatement StatementExpression Assignment MemberReference fos ClassCreator ReferenceType FileOutputStream BinaryOperation + MemberReference name Literal ".class" = StatementExpression MethodInvocation fos MemberReference bytes write CatchClause CatchClauseParameter IOException ioe StatementExpression MethodInvocation ioe printStackTrace TryStatement StatementExpression MethodInvocation fos close CatchClause CatchClauseParameter Exception e ReturnStatement MemberReference newClass	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "to_i" ReferenceType IRubyObject to_i FormalParameter ReferenceType ThreadContext context IfStatement BinaryOperation || MethodInvocation MemberReference image k_inexact_p MethodInvocation ! MemberReference context MemberReference image f_zero_p BlockStatement ThrowStatement MethodInvocation context MethodInvocation BinaryOperation + BinaryOperation + Literal "can't convert " MethodInvocation MethodInvocation convertToString MemberReference context This f_to_s Literal " into Integer" newRangeError getRuntime ReturnStatement MethodInvocation MemberReference context MemberReference real f_to_i	1
MethodDeclaration Modifier public static ReferenceType RubyArray unpack FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ByteList FormalParameter ReferenceType ByteList formatString LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator result MethodInvocation runtime newArray LocalVariableDeclaration ReferenceType ByteBuffer VariableDeclarator format MethodInvocation ByteBuffer MethodInvocation formatString unsafeBytes MethodInvocation formatString begin MethodInvocation formatString length wrap LocalVariableDeclaration ReferenceType ByteBuffer VariableDeclarator encode MethodInvocation ByteBuffer MethodInvocation unsafeBytes MethodInvocation begin MethodInvocation length wrap LocalVariableDeclaration BasicType int VariableDeclarator type Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator next MethodInvocation MemberReference format safeGet WhileStatement BinaryOperation != MemberReference next Literal 0 BlockStatement StatementExpression Assignment MemberReference type MemberReference next = StatementExpression Assignment MemberReference next MethodInvocation MemberReference format safeGet = IfStatement BinaryOperation || BinaryOperation == MemberReference next Literal '_' BinaryOperation == MemberReference next Literal '!' BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator index MethodInvocation NATIVE_CODES MemberReference type indexOf IfStatement BinaryOperation == MemberReference index Literal - 1 BlockStatement ThrowStatement MethodInvocation runtime BinaryOperation + BinaryOperation + BinaryOperation + Literal "'" MemberReference next Literal "' allowed only after types " MemberReference NATIVE_CODES newArgumentError StatementExpression Assignment MemberReference type MethodInvocation MAPPED_CODES MemberReference index charAt = StatementExpression Assignment MemberReference next MethodInvocation MemberReference format safeGet = LocalVariableDeclaration BasicType int VariableDeclarator occurrences Literal 0 IfStatement BinaryOperation == MemberReference next Literal 0 BlockStatement StatementExpression Assignment MemberReference occurrences Literal 1 = BlockStatement IfStatement BinaryOperation == MemberReference next Literal '*' BlockStatement StatementExpression Assignment MemberReference occurrences MemberReference IS_STAR = StatementExpression Assignment MemberReference next MethodInvocation MemberReference format safeGet = IfStatement MethodInvocation ASCII MemberReference next isDigit BlockStatement StatementExpression Assignment MemberReference occurrences Literal 0 = DoStatement BinaryOperation && BinaryOperation != MemberReference next Literal 0 MethodInvocation ASCII MemberReference next isDigit BlockStatement StatementExpression Assignment MemberReference occurrences BinaryOperation + BinaryOperation * MemberReference occurrences Literal 10 MethodInvocation Character Cast BasicType char BinaryOperation & MemberReference next Literal 0xFF Literal 10 digit = StatementExpression Assignment MemberReference next MethodInvocation MemberReference format safeGet = BlockStatement StatementExpression Assignment MemberReference occurrences TernaryExpression BinaryOperation == MemberReference type Literal '@' Literal 0 Literal 1 = LocalVariableDeclaration ReferenceType VariableDeclarator converter MemberReference ArraySelector MemberReference type converters IfStatement BinaryOperation != MemberReference converter Literal null BlockStatement StatementExpression MethodInvocation MemberReference runtime MemberReference encode MemberReference occurrences MemberReference result MemberReference converter decode StatementExpression Assignment MemberReference type MemberReference next = ContinueStatement SwitchStatement MemberReference type SwitchStatementCase Literal '@' TryStatement IfStatement BinaryOperation == MemberReference occurrences MemberReference IS_STAR BlockStatement StatementExpression MethodInvocation encode MethodInvocation encode remaining position BlockStatement StatementExpression MethodInvocation encode MemberReference occurrences position CatchClause CatchClauseParameter IllegalArgumentException iae ThrowStatement MethodInvocation runtime Literal outside of string" newArgumentError BreakStatement SwitchStatementCase Literal '%' ThrowStatement MethodInvocation runtime Literal "% is not supported" newArgumentError SwitchStatementCase Literal 'A' BlockStatement IfStatement BinaryOperation || BinaryOperation == MemberReference occurrences MemberReference IS_STAR BinaryOperation > MemberReference occurrences MethodInvocation encode remaining BlockStatement StatementExpression Assignment MemberReference occurrences MethodInvocation encode remaining = LocalVariableDeclaration BasicType byte VariableDeclarator potential ArrayCreator BasicType byte MemberReference occurrences StatementExpression MethodInvocation encode MemberReference potential get ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator t BinaryOperation - MemberReference occurrences Literal 1 BinaryOperation > MemberReference occurrences Literal 0 MemberReference -- occurrences MemberReference -- t BlockStatement LocalVariableDeclaration BasicType byte VariableDeclarator c MemberReference ArraySelector MemberReference t potential IfStatement BinaryOperation && BinaryOperation != MemberReference c Literal '\0' BinaryOperation != MemberReference c Literal ' ' BlockStatement BreakStatement StatementExpression MethodInvocation result MethodInvocation RubyString MemberReference runtime ClassCreator ReferenceType ByteList MemberReference potential Literal 0 MemberReference occurrences Literal false newString append BreakStatement SwitchStatementCase Literal 'Z' BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator isStar BinaryOperation == MemberReference occurrences MemberReference IS_STAR IfStatement BinaryOperation || BinaryOperation == MemberReference occurrences MemberReference IS_STAR BinaryOperation > MemberReference occurrences MethodInvocation encode remaining BlockStatement StatementExpression Assignment MemberReference occurrences MethodInvocation encode remaining = LocalVariableDeclaration BasicType byte VariableDeclarator potential ArrayCreator BasicType byte MemberReference occurrences LocalVariableDeclaration BasicType int VariableDeclarator t Literal 0 WhileStatement BinaryOperation < MemberReference t MemberReference occurrences BlockStatement LocalVariableDeclaration BasicType byte VariableDeclarator b MethodInvocation encode get IfStatement BinaryOperation == MemberReference b Literal 0 BlockStatement BreakStatement StatementExpression Assignment MemberReference ArraySelector MemberReference t potential MemberReference b = StatementExpression MemberReference ++ t StatementExpression MethodInvocation result MethodInvocation RubyString MemberReference runtime ClassCreator ReferenceType ByteList MemberReference potential Literal 0 MemberReference t Literal false newString append IfStatement MemberReference ! isStar BlockStatement IfStatement BinaryOperation < MemberReference t MemberReference occurrences BlockStatement StatementExpression MemberReference ++ t WhileStatement BinaryOperation < MemberReference t MemberReference occurrences BlockStatement StatementExpression MethodInvocation encode get StatementExpression MemberReference ++ t BreakStatement SwitchStatementCase Literal 'a' IfStatement BinaryOperation || BinaryOperation == MemberReference occurrences MemberReference IS_STAR BinaryOperation > MemberReference occurrences MethodInvocation encode remaining BlockStatement StatementExpression Assignment MemberReference occurrences MethodInvocation encode remaining = LocalVariableDeclaration BasicType byte VariableDeclarator potential ArrayCreator BasicType byte MemberReference occurrences StatementExpression MethodInvocation encode MemberReference potential get StatementExpression MethodInvocation result MethodInvocation RubyString MemberReference runtime ClassCreator ReferenceType ByteList MemberReference potential Literal false newString append BreakStatement SwitchStatementCase Literal 'b' BlockStatement IfStatement BinaryOperation || BinaryOperation == MemberReference occurrences MemberReference IS_STAR BinaryOperation > MemberReference occurrences BinaryOperation * MethodInvocation encode remaining Literal 8 BlockStatement StatementExpression Assignment MemberReference occurrences BinaryOperation * MethodInvocation encode remaining Literal 8 = LocalVariableDeclaration BasicType int VariableDeclarator bits Literal 0 LocalVariableDeclaration BasicType byte VariableDeclarator lElem ArrayCreator BasicType byte MemberReference occurrences ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator lCurByte Literal 0 BinaryOperation < MemberReference lCurByte MemberReference occurrences MemberReference ++ lCurByte BlockStatement IfStatement BinaryOperation != BinaryOperation & MemberReference lCurByte Literal 7 Literal 0 BlockStatement StatementExpression Assignment MemberReference bits Literal 1 >>>= BlockStatement StatementExpression Assignment MemberReference bits MethodInvocation encode get = StatementExpression Assignment MemberReference ArraySelector MemberReference lCurByte lElem TernaryExpression BinaryOperation != BinaryOperation & MemberReference bits Literal 1 Literal 0 Cast BasicType byte Literal '1' Cast BasicType byte Literal '0' = StatementExpression MethodInvocation result MethodInvocation RubyString MemberReference runtime ClassCreator ReferenceType ByteList MemberReference lElem Literal false newString append BreakStatement SwitchStatementCase Literal 'B' BlockStatement IfStatement BinaryOperation || BinaryOperation == MemberReference occurrences MemberReference IS_STAR BinaryOperation > MemberReference occurrences BinaryOperation * MethodInvocation encode remaining Literal 8 BlockStatement StatementExpression Assignment MemberReference occurrences BinaryOperation * MethodInvocation encode remaining Literal 8 = LocalVariableDeclaration BasicType int VariableDeclarator bits Literal 0 LocalVariableDeclaration BasicType byte VariableDeclarator lElem ArrayCreator BasicType byte MemberReference occurrences ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator lCurByte Literal 0 BinaryOperation < MemberReference lCurByte MemberReference occurrences MemberReference ++ lCurByte BlockStatement IfStatement BinaryOperation != BinaryOperation & MemberReference lCurByte Literal 7 Literal 0 StatementExpression Assignment MemberReference bits Literal 1 <<= StatementExpression Assignment MemberReference bits MethodInvocation encode get = StatementExpression Assignment MemberReference ArraySelector MemberReference lCurByte lElem TernaryExpression BinaryOperation != BinaryOperation & MemberReference bits Literal 128 Literal 0 Cast BasicType byte Literal '1' Cast BasicType byte Literal '0' = StatementExpression MethodInvocation result MethodInvocation RubyString MemberReference runtime ClassCreator ReferenceType ByteList MemberReference lElem Literal false newString append BreakStatement SwitchStatementCase Literal 'h' BlockStatement IfStatement BinaryOperation || BinaryOperation == MemberReference occurrences MemberReference IS_STAR BinaryOperation > MemberReference occurrences BinaryOperation * MethodInvocation encode remaining Literal 2 BlockStatement StatementExpression Assignment MemberReference occurrences BinaryOperation * MethodInvocation encode remaining Literal 2 = LocalVariableDeclaration BasicType int VariableDeclarator bits Literal 0 LocalVariableDeclaration BasicType byte VariableDeclarator lElem ArrayCreator BasicType byte MemberReference occurrences ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator lCurByte Literal 0 BinaryOperation < MemberReference lCurByte MemberReference occurrences MemberReference ++ lCurByte BlockStatement IfStatement BinaryOperation != BinaryOperation & MemberReference lCurByte Literal 1 Literal 0 BlockStatement StatementExpression Assignment MemberReference bits Literal 4 >>>= BlockStatement StatementExpression Assignment MemberReference bits MethodInvocation encode get = StatementExpression Assignment MemberReference ArraySelector MemberReference lCurByte lElem MemberReference ArraySelector BinaryOperation & MemberReference bits Literal 15 = StatementExpression MethodInvocation result MethodInvocation RubyString MemberReference runtime ClassCreator ReferenceType ByteList MemberReference lElem Literal false newString append BreakStatement SwitchStatementCase Literal 'H' BlockStatement IfStatement BinaryOperation || BinaryOperation == MemberReference occurrences MemberReference IS_STAR BinaryOperation > MemberReference occurrences BinaryOperation * MethodInvocation encode remaining Literal 2 BlockStatement StatementExpression Assignment MemberReference occurrences BinaryOperation * MethodInvocation encode remaining Literal 2 = LocalVariableDeclaration BasicType int VariableDeclarator bits Literal 0 LocalVariableDeclaration BasicType byte VariableDeclarator lElem ArrayCreator BasicType byte MemberReference occurrences ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator lCurByte Literal 0 BinaryOperation < MemberReference lCurByte MemberReference occurrences MemberReference ++ lCurByte BlockStatement IfStatement BinaryOperation != BinaryOperation & MemberReference lCurByte Literal 1 Literal 0 StatementExpression Assignment MemberReference bits Literal 4 <<= StatementExpression Assignment MemberReference bits MethodInvocation encode get = StatementExpression Assignment MemberReference ArraySelector MemberReference lCurByte lElem MemberReference ArraySelector BinaryOperation & BinaryOperation >>> MemberReference bits Literal 4 Literal 15 = StatementExpression MethodInvocation result MethodInvocation RubyString MemberReference runtime ClassCreator ReferenceType ByteList MemberReference lElem Literal false newString append BreakStatement SwitchStatementCase Literal 'u' BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator length BinaryOperation / BinaryOperation * MethodInvocation encode remaining Literal 3 Literal 4 LocalVariableDeclaration BasicType byte VariableDeclarator lElem ArrayCreator BasicType byte MemberReference length LocalVariableDeclaration BasicType int VariableDeclarator index Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator s LocalVariableDeclaration BasicType int VariableDeclarator total Literal 0 StatementExpression Assignment MemberReference s MethodInvocation encode get = WhileStatement BinaryOperation && BinaryOperation && MethodInvocation encode hasRemaining BinaryOperation > MemberReference s Literal ' ' BinaryOperation < MemberReference s Literal 'a' BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator a VariableDeclarator b VariableDeclarator c VariableDeclarator d LocalVariableDeclaration BasicType byte VariableDeclarator hunk ArrayCreator BasicType byte Literal 3 LocalVariableDeclaration BasicType int VariableDeclarator len BinaryOperation & BinaryOperation - MemberReference s Literal ' ' Literal 077 StatementExpression Assignment MemberReference s MethodInvocation MemberReference encode safeGet = StatementExpression Assignment MemberReference total MemberReference len += IfStatement BinaryOperation > MemberReference total MemberReference length BlockStatement StatementExpression Assignment MemberReference len BinaryOperation - MemberReference total MemberReference length -= StatementExpression Assignment MemberReference total MemberReference length = WhileStatement BinaryOperation > MemberReference len Literal 0 BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator mlen TernaryExpression BinaryOperation > MemberReference len Literal 3 Literal 3 MemberReference len IfStatement BinaryOperation && MethodInvocation encode hasRemaining BinaryOperation >= MemberReference s Literal ' ' BlockStatement StatementExpression Assignment MemberReference a BinaryOperation & BinaryOperation - MemberReference s Literal ' ' Literal 077 = StatementExpression Assignment MemberReference s MethodInvocation MemberReference encode safeGet = StatementExpression Assignment MemberReference a Literal 0 = IfStatement BinaryOperation && MethodInvocation encode hasRemaining BinaryOperation >= MemberReference s Literal ' ' BlockStatement StatementExpression Assignment MemberReference b BinaryOperation & BinaryOperation - MemberReference s Literal ' ' Literal 077 = StatementExpression Assignment MemberReference s MethodInvocation MemberReference encode safeGet = StatementExpression Assignment MemberReference b Literal 0 = IfStatement BinaryOperation && MethodInvocation encode hasRemaining BinaryOperation >= MemberReference s Literal ' ' BlockStatement StatementExpression Assignment MemberReference c BinaryOperation & BinaryOperation - MemberReference s Literal ' ' Literal 077 = StatementExpression Assignment MemberReference s MethodInvocation MemberReference encode safeGet = StatementExpression Assignment MemberReference c Literal 0 = IfStatement BinaryOperation && MethodInvocation encode hasRemaining BinaryOperation >= MemberReference s Literal ' ' BlockStatement StatementExpression Assignment MemberReference d BinaryOperation & BinaryOperation - MemberReference s Literal ' ' Literal 077 = StatementExpression Assignment MemberReference s MethodInvocation MemberReference encode safeGet = StatementExpression Assignment MemberReference d Literal 0 = StatementExpression Assignment MemberReference ArraySelector Literal 0 hunk Cast BasicType byte BinaryOperation & BinaryOperation | BinaryOperation << MemberReference a Literal 2 BinaryOperation >> MemberReference b Literal 4 Literal 255 = StatementExpression Assignment MemberReference ArraySelector Literal 1 hunk Cast BasicType byte BinaryOperation & BinaryOperation | BinaryOperation << MemberReference b Literal 4 BinaryOperation >> MemberReference c Literal 2 Literal 255 = StatementExpression Assignment MemberReference ArraySelector Literal 2 hunk Cast BasicType byte BinaryOperation & BinaryOperation | BinaryOperation << MemberReference c Literal 6 MemberReference d Literal 255 = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference mlen MemberReference ++ i StatementExpression Assignment MemberReference ArraySelector MemberReference ++ index lElem MemberReference ArraySelector MemberReference i hunk = StatementExpression Assignment MemberReference len MemberReference mlen -= IfStatement BinaryOperation == MemberReference s Literal '\r' StatementExpression Assignment MemberReference s MethodInvocation MemberReference encode safeGet = IfStatement BinaryOperation == MemberReference s Literal '\n' StatementExpression Assignment MemberReference s MethodInvocation MemberReference encode safeGet = IfStatement MethodInvocation encode hasRemaining BlockStatement IfStatement BinaryOperation == MethodInvocation MemberReference encode safeGet Literal '\n' BlockStatement StatementExpression MethodInvocation MemberReference encode safeGet IfStatement MethodInvocation encode hasRemaining BlockStatement StatementExpression MethodInvocation encode BinaryOperation - MethodInvocation encode position Literal 1 position StatementExpression MethodInvocation result MethodInvocation RubyString MemberReference runtime ClassCreator ReferenceType ByteList MemberReference lElem Literal 0 MemberReference index Literal false newString append BreakStatement SwitchStatementCase Literal 'm' BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator length BinaryOperation / BinaryOperation * MethodInvocation encode remaining Literal 3 Literal 4 LocalVariableDeclaration BasicType byte VariableDeclarator lElem ArrayCreator BasicType byte MemberReference length LocalVariableDeclaration BasicType int VariableDeclarator a Literal - 1 VariableDeclarator b Literal - 1 VariableDeclarator c Literal 0 VariableDeclarator d LocalVariableDeclaration BasicType int VariableDeclarator index Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator s Literal - 1 WhileStatement MethodInvocation encode hasRemaining BlockStatement StatementExpression Assignment MemberReference a Assignment MemberReference b Assignment MemberReference c Assignment MemberReference d Literal - 1 = = = = StatementExpression Assignment MemberReference s MethodInvocation MemberReference encode safeGet = WhileStatement BinaryOperation && BinaryOperation == Assignment MemberReference a MemberReference ArraySelector MemberReference s b64_xtable = Literal - 1 MethodInvocation encode hasRemaining BlockStatement StatementExpression Assignment MemberReference s MethodInvocation MemberReference encode safeGet = IfStatement BinaryOperation == MemberReference a Literal - 1 BreakStatement StatementExpression Assignment MemberReference s MethodInvocation MemberReference encode safeGet = WhileStatement BinaryOperation && BinaryOperation == Assignment MemberReference b MemberReference ArraySelector MemberReference s b64_xtable = Literal - 1 MethodInvocation encode hasRemaining BlockStatement StatementExpression Assignment MemberReference s MethodInvocation MemberReference encode safeGet = IfStatement BinaryOperation == MemberReference b Literal - 1 BreakStatement StatementExpression Assignment MemberReference s MethodInvocation MemberReference encode safeGet = WhileStatement BinaryOperation && BinaryOperation == Assignment MemberReference c MemberReference ArraySelector MemberReference s b64_xtable = Literal - 1 MethodInvocation encode hasRemaining BlockStatement IfStatement BinaryOperation == MemberReference s Literal '=' BreakStatement StatementExpression Assignment MemberReference s MethodInvocation MemberReference encode safeGet = IfStatement BinaryOperation || BinaryOperation == MemberReference s Literal '=' BinaryOperation == MemberReference c Literal - 1 BlockStatement IfStatement BinaryOperation == MemberReference s Literal '=' BlockStatement StatementExpression MethodInvocation encode BinaryOperation - MethodInvocation encode position Literal 1 position BreakStatement StatementExpression Assignment MemberReference s MethodInvocation MemberReference encode safeGet = WhileStatement BinaryOperation && BinaryOperation == Assignment MemberReference d MemberReference ArraySelector MemberReference s b64_xtable = Literal - 1 MethodInvocation encode hasRemaining BlockStatement IfStatement BinaryOperation == MemberReference s Literal '=' BreakStatement StatementExpression Assignment MemberReference s MethodInvocation MemberReference encode safeGet = IfStatement BinaryOperation || BinaryOperation == MemberReference s Literal '=' BinaryOperation == MemberReference d Literal - 1 BlockStatement IfStatement BinaryOperation == MemberReference s Literal '=' BlockStatement StatementExpression MethodInvocation encode BinaryOperation - MethodInvocation encode position Literal 1 position BreakStatement StatementExpression Assignment MemberReference ArraySelector MemberReference ++ index lElem Cast BasicType byte BinaryOperation & BinaryOperation | BinaryOperation << MemberReference a Literal 2 BinaryOperation >> MemberReference b Literal 4 Literal 255 = StatementExpression Assignment MemberReference ArraySelector MemberReference ++ index lElem Cast BasicType byte BinaryOperation & BinaryOperation | BinaryOperation << MemberReference b Literal 4 BinaryOperation >> MemberReference c Literal 2 Literal 255 = StatementExpression Assignment MemberReference ArraySelector MemberReference ++ index lElem Cast BasicType byte BinaryOperation & BinaryOperation | BinaryOperation << MemberReference c Literal 6 MemberReference d Literal 255 = IfStatement BinaryOperation && BinaryOperation != MemberReference a Literal - 1 BinaryOperation != MemberReference b Literal - 1 BlockStatement IfStatement BinaryOperation && BinaryOperation == MemberReference c Literal - 1 BinaryOperation == MemberReference s Literal '=' BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference ++ index lElem Cast BasicType byte BinaryOperation & BinaryOperation | BinaryOperation << MemberReference a Literal 2 BinaryOperation >> MemberReference b Literal 4 Literal 255 = IfStatement BinaryOperation && BinaryOperation != MemberReference c Literal - 1 BinaryOperation == MemberReference s Literal '=' BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference ++ index lElem Cast BasicType byte BinaryOperation & BinaryOperation | BinaryOperation << MemberReference a Literal 2 BinaryOperation >> MemberReference b Literal 4 Literal 255 = StatementExpression Assignment MemberReference ArraySelector MemberReference ++ index lElem Cast BasicType byte BinaryOperation & BinaryOperation | BinaryOperation << MemberReference b Literal 4 BinaryOperation >> MemberReference c Literal 2 Literal 255 = StatementExpression MethodInvocation result MethodInvocation RubyString MemberReference runtime ClassCreator ReferenceType ByteList MemberReference lElem Literal 0 MemberReference index Literal false newString append BreakStatement SwitchStatementCase Literal 'M' BlockStatement LocalVariableDeclaration BasicType byte VariableDeclarator lElem ArrayCreator BasicType byte MethodInvocation Math MethodInvocation encode remaining Literal 0 max LocalVariableDeclaration BasicType int VariableDeclarator index Literal 0 ForStatement ForControl BlockStatement IfStatement MethodInvocation ! encode hasRemaining BreakStatement LocalVariableDeclaration BasicType int VariableDeclarator c MethodInvocation MemberReference encode safeGet IfStatement BinaryOperation != MemberReference c Literal '=' BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference ++ index lElem Cast BasicType byte MemberReference c = BlockStatement IfStatement MethodInvocation ! encode hasRemaining BreakStatement StatementExpression MethodInvocation encode mark LocalVariableDeclaration BasicType int VariableDeclarator c1 MethodInvocation MemberReference encode safeGet IfStatement BinaryOperation == MemberReference c1 Literal '\n' ContinueStatement LocalVariableDeclaration BasicType int VariableDeclarator d1 MethodInvocation Character MemberReference c1 Literal 16 digit IfStatement BinaryOperation == MemberReference d1 Literal - 1 BlockStatement StatementExpression MethodInvocation encode reset BreakStatement StatementExpression MethodInvocation encode mark IfStatement MethodInvocation ! encode hasRemaining BreakStatement LocalVariableDeclaration BasicType int VariableDeclarator c2 MethodInvocation MemberReference encode safeGet LocalVariableDeclaration BasicType int VariableDeclarator d2 MethodInvocation Character MemberReference c2 Literal 16 digit IfStatement BinaryOperation == MemberReference d2 Literal - 1 BlockStatement StatementExpression MethodInvocation encode reset BreakStatement LocalVariableDeclaration BasicType byte VariableDeclarator value Cast BasicType byte BinaryOperation | BinaryOperation << MemberReference d1 Literal 4 MemberReference d2 StatementExpression Assignment MemberReference ArraySelector MemberReference ++ index lElem MemberReference value = StatementExpression MethodInvocation result MethodInvocation RubyString MemberReference runtime ClassCreator ReferenceType ByteList MemberReference lElem Literal 0 MemberReference index Literal false newString append BreakStatement SwitchStatementCase Literal 'U' BlockStatement IfStatement BinaryOperation || BinaryOperation == MemberReference occurrences MemberReference IS_STAR BinaryOperation > MemberReference occurrences MethodInvocation encode remaining BlockStatement StatementExpression Assignment MemberReference occurrences MethodInvocation encode remaining = WhileStatement BinaryOperation && BinaryOperation > MemberReference -- occurrences Literal 0 BinaryOperation > MethodInvocation encode remaining Literal 0 BlockStatement TryStatement StatementExpression MethodInvocation result MethodInvocation runtime MethodInvocation MemberReference encode newFixnum append CatchClause CatchClauseParameter IllegalArgumentException e ThrowStatement MethodInvocation runtime MethodInvocation e getMessage newArgumentError BreakStatement SwitchStatementCase Literal 'X' IfStatement BinaryOperation == MemberReference occurrences MemberReference IS_STAR BlockStatement StatementExpression Assignment MemberReference occurrences MethodInvocation encode remaining = TryStatement StatementExpression MethodInvocation encode BinaryOperation - MethodInvocation encode position MemberReference occurrences position CatchClause CatchClauseParameter IllegalArgumentException e ThrowStatement MethodInvocation runtime Literal "in `unpack': X outside of string" newArgumentError BreakStatement SwitchStatementCase Literal 'x' IfStatement BinaryOperation == MemberReference occurrences MemberReference IS_STAR BlockStatement StatementExpression Assignment MemberReference occurrences MethodInvocation encode remaining = TryStatement StatementExpression MethodInvocation encode BinaryOperation + MethodInvocation encode position MemberReference occurrences position CatchClause CatchClauseParameter IllegalArgumentException e ThrowStatement MethodInvocation runtime Literal "in `unpack': x outside of string" newArgumentError BreakStatement SwitchStatementCase Literal 'w' IfStatement BinaryOperation || BinaryOperation == MemberReference occurrences MemberReference IS_STAR BinaryOperation > MemberReference occurrences MethodInvocation encode remaining BlockStatement StatementExpression Assignment MemberReference occurrences MethodInvocation encode remaining = LocalVariableDeclaration BasicType long VariableDeclarator ul Literal 0 LocalVariableDeclaration BasicType long VariableDeclarator ulmask BinaryOperation & BinaryOperation << Literal 0xfe Literal 56 Literal LocalVariableDeclaration ReferenceType RubyBignum VariableDeclarator big128 MethodInvocation RubyBignum MemberReference runtime Literal 128 newBignum LocalVariableDeclaration BasicType int VariableDeclarator pos MethodInvocation encode position WhileStatement BinaryOperation && BinaryOperation > MemberReference occurrences Literal 0 BinaryOperation < MemberReference pos MethodInvocation encode limit BlockStatement StatementExpression Assignment MemberReference ul Literal 7 <<= StatementExpression Assignment MemberReference ul BinaryOperation & MethodInvocation encode MemberReference pos get Literal 0x7f |= IfStatement BinaryOperation == BinaryOperation & MethodInvocation encode MemberReference ++ pos get Literal 0x80 Literal 0 BlockStatement StatementExpression MethodInvocation result MethodInvocation RubyFixnum MemberReference runtime MemberReference ul newFixnum append StatementExpression MemberReference -- occurrences StatementExpression Assignment MemberReference ul Literal 0 = IfStatement BinaryOperation == BinaryOperation & MemberReference ul MemberReference ulmask Literal 0 BlockStatement LocalVariableDeclaration ReferenceType RubyBignum VariableDeclarator MethodInvocation RubyBignum MemberReference runtime MemberReference ul newBignum WhileStatement BinaryOperation && BinaryOperation > MemberReference occurrences Literal 0 BinaryOperation < MemberReference pos MethodInvocation encode limit BlockStatement StatementExpression Assignment MemberReference Cast ReferenceType RubyBignum MethodInvocation MethodInvocation runtime getCurrentContext MemberReference big128 op_mul = LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator v MethodInvocation MethodInvocation runtime getCurrentContext MethodInvocation RubyBignum MemberReference runtime BinaryOperation & MethodInvocation encode MemberReference pos get Literal 0x7f newBignum op_plus IfStatement BinaryOperation instanceof MemberReference v ReferenceType RubyFixnum BlockStatement StatementExpression Assignment MemberReference MethodInvocation RubyBignum MemberReference runtime MethodInvocation RubyNumeric MemberReference v fix2long newBignum = IfStatement BinaryOperation instanceof MemberReference v ReferenceType RubyBignum BlockStatement StatementExpression Assignment MemberReference Cast ReferenceType RubyBignum MemberReference v = IfStatement BinaryOperation == BinaryOperation & MethodInvocation encode MemberReference ++ pos get Literal 0x80 Literal 0 BlockStatement StatementExpression MethodInvocation result MemberReference add StatementExpression MemberReference -- occurrences StatementExpression Assignment MemberReference ul Literal 0 = BreakStatement TryStatement StatementExpression MethodInvocation encode MemberReference pos position CatchClause CatchClauseParameter IllegalArgumentException e ThrowStatement MethodInvocation runtime Literal "in `unpack': encoded newArgumentError BreakStatement ReturnStatement MemberReference result	1
MethodDeclaration Modifier protected BasicType boolean isSame FormalParameter ReferenceType RubyModule module ReturnStatement BinaryOperation == This MemberReference module	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType Class cls TryStatement LocalVariableDeclaration Modifier final ReferenceType Constructor VariableDeclarator constructor MethodInvocation cls ClassReference ReferenceType Ruby ClassReference ReferenceType RubyClass getConstructor StatementExpression Assignment This MemberReference allocator ClassCreator ReferenceType ObjectAllocator MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType RubyClass klazz TryStatement ReturnStatement Cast ReferenceType IRubyObject MethodInvocation constructor MemberReference runtime MemberReference klazz newInstance CatchClause CatchClauseParameter InvocationTargetException ite ThrowStatement MethodInvocation runtime BinaryOperation + BinaryOperation + BinaryOperation + Literal "could not " MemberReference cls Literal " with (Ruby, RubyClass) constructor:\n" MemberReference ite newTypeError CatchClause CatchClauseParameter InstantiationException ie ThrowStatement MethodInvocation runtime BinaryOperation + BinaryOperation + BinaryOperation + Literal "could not " MemberReference cls Literal " with (Ruby, RubyClass) constructor:\n" MemberReference ie newTypeError CatchClause CatchClauseParameter IllegalAccessException iae ThrowStatement MethodInvocation runtime BinaryOperation + BinaryOperation + BinaryOperation + Literal "could not " MemberReference cls Literal " due to (Ruby, RubyClass) constructor:\n" MemberReference iae newSecurityError = CatchClause CatchClauseParameter NoSuchMethodException nsme ThrowStatement ClassCreator ReferenceType RuntimeException MemberReference nsme	1
MethodDeclaration Modifier public static Annotation Deprecated ReferenceType Object convertArgument FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType Object argument FormalParameter ReferenceType Class TypeArgument ? IfStatement BinaryOperation == MemberReference argument Literal null BlockStatement IfStatement MethodInvocation isPrimitive BlockStatement ThrowStatement MethodInvocation runtime Literal do not null" newTypeError BlockStatement ReturnStatement Literal null IfStatement BinaryOperation instanceof MemberReference argument ReferenceType JavaObject BlockStatement StatementExpression Assignment MemberReference argument Cast ReferenceType JavaObject MemberReference argument = IfStatement BinaryOperation == MemberReference argument Literal null BlockStatement ReturnStatement Literal null LocalVariableDeclaration ReferenceType Class TypeArgument ? VariableDeclarator type MethodInvocation MemberReference primitiveToWrapper IfStatement BinaryOperation == MemberReference type ClassReference ReferenceType Void BlockStatement ReturnStatement Literal null IfStatement BinaryOperation instanceof MemberReference argument ReferenceType Number BlockStatement LocalVariableDeclaration Modifier final ReferenceType Number VariableDeclarator number Cast ReferenceType Number MemberReference argument IfStatement BinaryOperation == MemberReference type ClassReference ReferenceType Long BlockStatement ReturnStatement ClassCreator ReferenceType Long MethodInvocation number longValue IfStatement BinaryOperation == MemberReference type ClassReference ReferenceType Integer BlockStatement ReturnStatement ClassCreator ReferenceType Integer MethodInvocation number intValue IfStatement BinaryOperation == MemberReference type ClassReference ReferenceType Byte BlockStatement ReturnStatement ClassCreator ReferenceType Byte MethodInvocation number byteValue IfStatement BinaryOperation == MemberReference type ClassReference ReferenceType Character BlockStatement ReturnStatement ClassCreator ReferenceType Character Cast BasicType char MethodInvocation number intValue IfStatement BinaryOperation == MemberReference type ClassReference ReferenceType Double BlockStatement ReturnStatement ClassCreator ReferenceType Double MethodInvocation number doubleValue IfStatement BinaryOperation == MemberReference type ClassReference ReferenceType Float BlockStatement ReturnStatement ClassCreator ReferenceType Float MethodInvocation number floatValue IfStatement BinaryOperation == MemberReference type ClassReference ReferenceType Short BlockStatement ReturnStatement ClassCreator ReferenceType Short MethodInvocation number shortValue IfStatement MethodInvocation MethodInvocation argument getClass MemberReference BlockStatement LocalVariableDeclaration ReferenceType RubyObject VariableDeclarator rubyObject Cast ReferenceType RubyObject MemberReference argument IfStatement MethodInvocation ! rubyObject Literal "java_object" respondsTo BlockStatement ReturnStatement MethodInvocation MethodInvocation runtime getCurrentContext MemberReference rubyObject MemberReference convertProcToInterface ReturnStatement MemberReference argument	1
MethodDeclaration Modifier protected ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType String name FormalParameter ReferenceType DynamicMethod method FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 FormalParameter ReferenceType Block block ReturnStatement MethodInvocation RuntimeHelpers MemberReference context MemberReference self MethodInvocation method getVisibility MemberReference name MemberReference callType MemberReference arg0 MemberReference arg1 MemberReference arg2 MemberReference block	1
MethodDeclaration Modifier public ReferenceType Object getValue ReturnStatement MemberReference value	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair required Literal 1 ElementValuePair rest Literal true ElementValuePair frame Literal true ElementValuePair meta Literal true ReferenceType RubyClass newInstance FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType String VariableDeclarator name Literal null LocalVariableDeclaration BasicType boolean VariableDeclarator nilName Literal false LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation recv getRuntime IfStatement BinaryOperation > MemberReference args length Literal 0 BlockStatement LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator firstArgAsString MemberReference ArraySelector Literal 0 MethodInvocation checkStringType args IfStatement MethodInvocation ! firstArgAsString isNil BlockStatement StatementExpression Assignment MemberReference name Cast ReferenceType RubyString MemberReference firstArgAsString = IfStatement MemberReference ArraySelector Literal 0 MethodInvocation isNil args BlockStatement StatementExpression Assignment MemberReference nilName Literal true = LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator member MethodInvocation runtime newArray ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i TernaryExpression BinaryOperation && BinaryOperation == MemberReference name Literal null MemberReference ! nilName Literal 0 Literal 1 BinaryOperation < MemberReference i MemberReference args length MemberReference ++ i BlockStatement StatementExpression MethodInvocation member MethodInvocation runtime MemberReference ArraySelector MemberReference i MethodInvocation asJavaString args append LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator newStruct LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator superClass Cast ReferenceType RubyClass MemberReference recv IfStatement BinaryOperation || BinaryOperation == MemberReference name Literal null MemberReference nilName BlockStatement StatementExpression Assignment MemberReference newStruct MethodInvocation RubyClass MemberReference runtime MemberReference superClass newClass = StatementExpression MethodInvocation newStruct MemberReference STRUCT_INSTANCE_ALLOCATOR setAllocator StatementExpression MethodInvocation newStruct MethodInvocation superClass getMetaClass makeMetaClass StatementExpression MethodInvocation newStruct MemberReference superClass BlockStatement IfStatement MethodInvocation ! IdUtil MemberReference name isConstant BlockStatement ThrowStatement MethodInvocation runtime BinaryOperation + BinaryOperation + Literal " MemberReference name Literal " needs to be constant" MemberReference name newNameError LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator type MethodInvocation superClass MemberReference name getConstantAt IfStatement BinaryOperation != MemberReference type Literal null BlockStatement LocalVariableDeclaration ReferenceType ThreadContext VariableDeclarator context MethodInvocation runtime getCurrentContext LocalVariableDeclaration ReferenceType Frame VariableDeclarator frame MethodInvocation context StatementExpression MethodInvocation runtime MethodInvocation MemberReference ID MethodInvocation frame getFile MethodInvocation frame getLine BinaryOperation + Literal "redefining constant MemberReference name MemberReference name warn getWarnings StatementExpression MethodInvocation superClass MemberReference context MethodInvocation runtime MemberReference name newString remove_const StatementExpression Assignment MemberReference newStruct MethodInvocation superClass MemberReference name MemberReference superClass MemberReference STRUCT_INSTANCE_ALLOCATOR defineClassUnder = StatementExpression Assignment MemberReference newStruct index MemberReference ClassIndex STRUCT = StatementExpression MethodInvocation newStruct Literal MethodInvocation member length fastSetInternalVariable StatementExpression MethodInvocation newStruct Literal "__member__" MemberReference member fastSetInternalVariable StatementExpression MethodInvocation newStruct MethodInvocation ClassReference ReferenceType defineAnnotatedMethods ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i TernaryExpression BinaryOperation && BinaryOperation == MemberReference name Literal null MemberReference ! nilName Literal 0 Literal 1 BinaryOperation < MemberReference i MemberReference args length MemberReference ++ i BlockStatement LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator memberName MemberReference ArraySelector MemberReference i MethodInvocation asJavaString args LocalVariableDeclaration Modifier final BasicType int VariableDeclarator index TernaryExpression BinaryOperation && BinaryOperation == MemberReference name Literal null MemberReference ! nilName MemberReference i BinaryOperation - MemberReference i Literal 1 StatementExpression MethodInvocation newStruct MemberReference memberName ClassCreator ReferenceType DynamicMethod MemberReference newStruct MemberReference Visibility PUBLIC MemberReference CallConfiguration FrameNoneScopeNone MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block StatementExpression MethodInvocation Arity MethodInvocation self getRuntime MemberReference args Literal 0 Literal 0 checkArgumentCount ReturnStatement Cast ReferenceType RubyStruct MemberReference self MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name ReturnStatement Cast ReferenceType RubyStruct MemberReference self MethodDeclaration Modifier public Annotation Override ReferenceType DynamicMethod dup ReturnStatement This addMethod StatementExpression MethodInvocation newStruct BinaryOperation + MemberReference memberName Literal "=" ClassCreator ReferenceType DynamicMethod MemberReference newStruct MemberReference Visibility PUBLIC MemberReference CallConfiguration FrameNoneScopeNone MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block StatementExpression MethodInvocation Arity MethodInvocation self getRuntime MemberReference args Literal 1 Literal 1 checkArgumentCount ReturnStatement Cast ReferenceType RubyStruct MemberReference self MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg ReturnStatement Cast ReferenceType RubyStruct MemberReference self MethodDeclaration Modifier public Annotation Override ReferenceType DynamicMethod dup ReturnStatement This addMethod IfStatement MethodInvocation block isGiven BlockStatement StatementExpression MethodInvocation block MethodInvocation MemberReference Visibility PUBLIC setVisibility getBinding StatementExpression MethodInvocation block MethodInvocation runtime getCurrentContext Literal null MemberReference newStruct MemberReference newStruct Literal false yield ReturnStatement MemberReference newStruct	1
MethodDeclaration Modifier public compileEnsureNode FormalParameter ReferenceType Node node FormalParameter ReferenceType BodyCompiler context FormalParameter BasicType boolean expr LocalVariableDeclaration Modifier final ReferenceType EnsureNode VariableDeclarator Cast ReferenceType EnsureNode MemberReference node IfStatement BinaryOperation != MethodInvocation Literal null BlockStatement StatementExpression MethodInvocation context ClassCreator ReferenceType BranchCallback MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context IfStatement BinaryOperation != MethodInvocation getBodyNode Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation getBodyNode MemberReference context Literal true compile BlockStatement StatementExpression MethodInvocation context loadNil ClassCreator ReferenceType BranchCallback MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation MethodInvocation MemberReference context Literal false compile BlockStatement IfStatement BinaryOperation != MethodInvocation getBodyNode Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation getBodyNode MemberReference context Literal true compile BlockStatement StatementExpression MethodInvocation context loadNil IfStatement MemberReference ! expr StatementExpression MethodInvocation context consumeCurrentValue	1
MethodDeclaration Modifier public ReferenceType IRubyObject decode FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ByteBuffer enc IfStatement BinaryOperation == MemberReference Platform BYTE_ORDER MemberReference Platform BIG_ENDIAN ReturnStatement MethodInvocation RubyFloat MemberReference runtime MethodInvocation MemberReference enc newFloat ReturnStatement MethodInvocation RubyFloat MemberReference runtime MethodInvocation MemberReference enc newFloat	1
MethodDeclaration Modifier public static ReferenceType RubyClass FormalParameter ReferenceType Ruby runtime LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator MethodInvocation runtime Literal MethodInvocation runtime Literal getClass MemberReference MethodInvocation runtime getEncoding defineClassUnder StatementExpression MethodInvocation runtime MemberReference StatementExpression Assignment MemberReference index MemberReference ClassIndex = StatementExpression Assignment MemberReference ClassCreator ReferenceType RubyModule ReferenceType MethodDeclaration Modifier public Annotation Override BasicType boolean FormalParameter ReferenceType IRubyObject obj FormalParameter ReferenceType RubyModule type ReturnStatement BinaryOperation instanceof MemberReference obj ReferenceType = StatementExpression MethodInvocation ClassReference ReferenceType defineAnnotatedMethods ReturnStatement MemberReference	0
MethodDeclaration Modifier public final ReferenceType FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType String method ReturnStatement MethodInvocation runtimeCache This MemberReference runtime Literal 9 MemberReference method	0
MethodDeclaration Modifier private static setupMakefileConfig FormalParameter ReferenceType RubyModule configModule FormalParameter ReferenceType RubyHash mkmfHash LocalVariableDeclaration ReferenceType Ruby VariableDeclarator ruby MethodInvocation configModule getRuntime LocalVariableDeclaration ReferenceType String VariableDeclarator jflags Literal " " LocalVariableDeclaration ReferenceType String VariableDeclarator BinaryOperation + Literal " " MemberReference jflags LocalVariableDeclaration ReferenceType String VariableDeclarator Literal " " LocalVariableDeclaration ReferenceType String VariableDeclarator TernaryExpression Literal true Literal "" Literal " " LocalVariableDeclaration ReferenceType String VariableDeclarator Literal " " LocalVariableDeclaration ReferenceType String VariableDeclarator cflags Literal "" LocalVariableDeclaration ReferenceType String VariableDeclarator soflags TernaryExpression Literal true Literal "" Literal " " LocalVariableDeclaration ReferenceType String VariableDeclarator ldflags MemberReference soflags LocalVariableDeclaration ReferenceType String VariableDeclarator archflags Literal " -arch i386 -arch ppc -arch x86_64 " StatementExpression Assignment MemberReference cflags MemberReference archflags += StatementExpression Assignment MemberReference cflags Literal " " += StatementExpression Assignment MemberReference cflags Literal " -arch i386 -arch ppc -arch x86_64 " += StatementExpression Assignment MemberReference ldflags Literal " -arch i386 -arch ppc -arch x86_64 " += LocalVariableDeclaration ReferenceType String VariableDeclarator libext Literal LocalVariableDeclaration ReferenceType String VariableDeclarator objext Literal "o" StatementExpression MethodInvocation MemberReference mkmfHash Literal "configure_args" Literal "" setConfig StatementExpression MethodInvocation MemberReference mkmfHash Literal MemberReference cflags setConfig StatementExpression MethodInvocation MemberReference mkmfHash Literal Literal "" setConfig StatementExpression MethodInvocation MemberReference mkmfHash Literal Literal "" setConfig StatementExpression MethodInvocation MemberReference mkmfHash Literal MemberReference ldflags setConfig StatementExpression MethodInvocation MemberReference mkmfHash Literal Literal "" setConfig StatementExpression MethodInvocation MemberReference mkmfHash Literal MemberReference libext setConfig StatementExpression MethodInvocation MemberReference mkmfHash Literal MemberReference objext setConfig StatementExpression MethodInvocation MemberReference mkmfHash Literal Literal "" setConfig StatementExpression MethodInvocation MemberReference mkmfHash Literal Literal "" setConfig StatementExpression MethodInvocation MemberReference mkmfHash Literal Literal "" setConfig StatementExpression MethodInvocation MemberReference mkmfHash Literal Literal "" setConfig StatementExpression MethodInvocation MemberReference mkmfHash Literal Literal "" setConfig StatementExpression MethodInvocation MemberReference mkmfHash Literal Literal "" setConfig StatementExpression MethodInvocation MemberReference mkmfHash Literal Literal "" setConfig StatementExpression MethodInvocation MemberReference mkmfHash Literal Literal "" setConfig StatementExpression MethodInvocation MemberReference mkmfHash Literal Literal "" setConfig StatementExpression MethodInvocation MemberReference mkmfHash Literal MethodInvocation setConfig StatementExpression MethodInvocation MemberReference mkmfHash Literal Literal setConfig StatementExpression MethodInvocation MemberReference mkmfHash Literal Literal "cc " setConfig StatementExpression MethodInvocation MemberReference mkmfHash Literal Literal "cc " setConfig StatementExpression MethodInvocation MemberReference mkmfHash Literal Literal " setConfig StatementExpression MethodInvocation MemberReference mkmfHash Literal "PATH_SEPARATOR" Literal ":" setConfig StatementExpression MethodInvocation MemberReference mkmfHash Literal "INSTALL" Literal " setConfig StatementExpression MethodInvocation MemberReference mkmfHash Literal Literal -f" setConfig StatementExpression MethodInvocation MemberReference mkmfHash Literal Literal " setConfig StatementExpression MethodInvocation MemberReference mkmfHash Literal Literal "mkdir " setConfig StatementExpression MethodInvocation ruby MethodInvocation Literal MethodInvocation ruby getNil defineConstant getObject StatementExpression MethodInvocation configModule Literal MemberReference mkmfHash defineConstant	1
MethodDeclaration Modifier public FormalParameter BasicType int intIndex FormalParameter BasicType int FormalParameter ReferenceType Object javaObject TryStatement ForStatement ForControl BinaryOperation < MemberReference intIndex MemberReference MemberReference ++ intIndex BlockStatement StatementExpression MethodInvocation Array MethodInvocation getValue MemberReference intIndex MemberReference javaObject set CatchClause CatchClauseParameter IndexOutOfBoundsException e ThrowStatement MethodInvocation MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "index out of bounds for java array (" MemberReference intIndex Literal " for length " MethodInvocation getLength Literal ")" newArgumentError getRuntime CatchClause CatchClauseParameter ArrayStoreException e ThrowStatement MethodInvocation MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "wrong element type " MethodInvocation javaObject getClass Literal "(array is " MethodInvocation MethodInvocation getClass getValue Literal ")" newArgumentError getRuntime	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "slice!" ReferenceType IRubyObject slice_bang FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 StatementExpression MethodInvocation modifyCheck LocalVariableDeclaration BasicType long VariableDeclarator pos MethodInvocation RubyNumeric MemberReference arg0 num2long LocalVariableDeclaration BasicType long VariableDeclarator len MethodInvocation RubyNumeric MemberReference arg1 num2long ReturnStatement MethodInvocation MemberReference pos MemberReference len MemberReference arg0 MemberReference arg1 slice_internal	1
MethodDeclaration Modifier public ReferenceType CaseInsensitiveBytesHash TypeArgument ReferenceType Entry getEncodings ReturnStatement MemberReference encodings	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "[]=" ElementValuePair reads MemberReference BACKREF ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType IRubyObject op_aset FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 IfStatement BinaryOperation instanceof MemberReference arg0 ReferenceType RubyFixnum BlockStatement ReturnStatement MethodInvocation MemberReference context MethodInvocation RubyNumeric Cast ReferenceType RubyFixnum MemberReference arg0 fix2int MemberReference arg1 op_aset IfStatement BinaryOperation instanceof MemberReference arg0 ReferenceType RubyRegexp BlockStatement StatementExpression MethodInvocation MemberReference context Cast ReferenceType RubyRegexp MemberReference arg0 Literal 0 MethodInvocation arg1 convertToString subpatSet ReturnStatement MemberReference arg1 IfStatement BinaryOperation instanceof MemberReference arg0 ReferenceType RubyString BlockStatement LocalVariableDeclaration ReferenceType RubyString VariableDeclarator orig Cast ReferenceType RubyString MemberReference arg0 LocalVariableDeclaration BasicType int VariableDeclarator beg MethodInvocation value MemberReference orig value indexOf IfStatement BinaryOperation < MemberReference beg Literal 0 ThrowStatement MethodInvocation context MethodInvocation Literal "string not matched" newIndexError getRuntime StatementExpression MethodInvocation MemberReference beg MemberReference realSize MethodInvocation arg1 convertToString replaceInternal ReturnStatement MemberReference arg1 IfStatement BinaryOperation instanceof MemberReference arg0 ReferenceType RubyRange BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator begLen Cast ReferenceType RubyRange MemberReference arg0 StatementExpression MethodInvocation MemberReference ArraySelector Literal 0 begLen MemberReference ArraySelector Literal 1 begLen MethodInvocation arg1 convertToString replaceInternal ReturnStatement MemberReference arg1 ReturnStatement MethodInvocation MemberReference context MethodInvocation RubyNumeric MemberReference arg0 num2int MemberReference arg1 op_aset	1
MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext ctx FormalParameter ReferenceType IRubyObject largs FormalParameter ReferenceType Block blk LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator larg MethodInvocation MemberReference runtime MemberReference largs checkArgs LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator value MethodInvocation block MemberReference ctx MemberReference larg yield SynchronizedStatement MemberReference result StatementExpression MethodInvocation result MemberReference value append ReturnStatement MethodInvocation runtime getNil	0
MethodDeclaration Modifier private ReferenceType CompilerCallback getBlock FormalParameter ReferenceType Node node IfStatement BinaryOperation == MemberReference node Literal null BlockStatement ReturnStatement Literal null SwitchStatement MethodInvocation node getNodeType SwitchStatementCase ITERNODE LocalVariableDeclaration Modifier final ReferenceType IterNode VariableDeclarator Cast ReferenceType IterNode MemberReference node ReturnStatement ClassCreator ReferenceType CompilerCallback MethodDeclaration Modifier public call FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation MemberReference MemberReference context Literal true compile SwitchStatementCase LocalVariableDeclaration Modifier final ReferenceType BlockPassNode VariableDeclarator Cast ReferenceType BlockPassNode MemberReference node ReturnStatement ClassCreator ReferenceType CompilerCallback MethodDeclaration Modifier public call FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation MethodInvocation getBodyNode MemberReference context Literal true compile StatementExpression MethodInvocation context SwitchStatementCase ThrowStatement ClassCreator ReferenceType NotCompilableException BinaryOperation + Literal a method with a iter node at: " MemberReference node	0
MethodDeclaration Modifier public final BasicType byte FormalParameter BasicType long offset ReturnStatement MethodInvocation FFIUtil BinaryOperation + MemberReference address MemberReference offset	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 FormalParameter ReferenceType Block block ReturnStatement MethodInvocation MemberReference context MemberReference self MemberReference clazz MemberReference name MemberReference arg0 MemberReference arg1 MemberReference arg2 call	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block ReturnStatement MethodInvocation context MethodInvocation getBlock MethodInvocation MemberReference context MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference	0
MethodDeclaration Modifier public final BasicType short getShort FormalParameter BasicType long offset StatementExpression MethodInvocation MemberReference offset Literal 2 checkBounds ReturnStatement MethodInvocation MemberReference buffer MethodInvocation MemberReference offset index	1
MethodDeclaration Modifier private ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter BasicType int jflag LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation getRuntime LocalVariableDeclaration ReferenceType RubyString VariableDeclarator padStr MethodInvocation arg1 convertToString LocalVariableDeclaration ReferenceType ByteList VariableDeclarator pad MemberReference padStr value LocalVariableDeclaration ReferenceType Encoding VariableDeclarator enc MethodInvocation MemberReference padStr checkEncoding LocalVariableDeclaration BasicType int VariableDeclarator padCharLen MethodInvocation padStr MemberReference enc strLength IfStatement BinaryOperation || BinaryOperation == MemberReference pad realSize Literal 0 BinaryOperation == MemberReference padCharLen Literal 0 ThrowStatement MethodInvocation runtime Literal "zero width newArgumentError LocalVariableDeclaration ReferenceType RubyString VariableDeclarator result MethodInvocation MemberReference runtime MemberReference pad MemberReference padCharLen MethodInvocation padStr singleByteOptimizable MemberReference enc MethodInvocation RubyFixnum MemberReference arg0 num2int MemberReference jflag justifyCommon StatementExpression MethodInvocation result MemberReference padStr infectBy LocalVariableDeclaration BasicType int VariableDeclarator cr MethodInvocation MethodInvocation getCodeRange MethodInvocation padStr getCodeRange codeRangeAnd IfStatement BinaryOperation != MemberReference cr MemberReference CR_BROKEN StatementExpression MethodInvocation result MemberReference cr setCodeRange ReturnStatement MemberReference result	1
MethodDeclaration Modifier public static FormalParameter ReferenceType Ruby runtime IOException LocalVariableDeclaration ReferenceType ConsoleHolder VariableDeclarator holder ClassCreator ReferenceType ConsoleHolder StatementExpression Assignment MemberReference holder history ClassCreator ReferenceType = StatementExpression Assignment MemberReference holder Literal null = LocalVariableDeclaration ReferenceType RubyModule VariableDeclarator MethodInvocation runtime Literal StatementExpression MethodInvocation MemberReference holder StatementExpression MethodInvocation ClassReference ReferenceType Readline defineAnnotatedMethods LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator MethodInvocation runtime MethodInvocation MethodInvocation runtime getCurrentContext Literal callMethod getObject StatementExpression MethodInvocation Literal MemberReference fastSetConstant StatementExpression MethodInvocation MethodInvocation MethodInvocation runtime includeModule StatementExpression MethodInvocation MethodInvocation ClassReference ReferenceType defineAnnotatedMethods StatementExpression MethodInvocation Literal "VERSION" MethodInvocation runtime Literal newString fastSetConstant	0
MethodDeclaration Modifier public static ReferenceType String getProperty FormalParameter ReferenceType String property ReturnStatement MethodInvocation MemberReference property Literal null getProperty	0
MethodDeclaration Modifier public StatementExpression MethodInvocation MethodInvocation MemberReference visitInsn getMethodVisitor	0
MethodDeclaration Modifier public StatementExpression MethodInvocation	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType RubyBoolean FormalParameter ReferenceType ThreadContext context ReturnStatement MethodInvocation context MethodInvocation MethodInvocation isUntrusted newBoolean getRuntime	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType IRubyObject ReturnStatement This	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ReferenceType IRubyObject ReturnStatement MethodInvocation MethodInvocation MethodInvocation stat newFixnum getRuntime	0
MethodDeclaration Modifier public static ReferenceType Arity FormalParameter ReferenceType JRubyMethod anno FormalParameter BasicType int actualRequired IfStatement BinaryOperation || BinaryOperation > MethodInvocation anno optional Literal 0 MethodInvocation anno rest BlockStatement ReturnStatement MethodInvocation BinaryOperation + MemberReference actualRequired Literal 1 createArity ReturnStatement MethodInvocation MemberReference actualRequired createArity	0
MethodDeclaration Modifier public Annotation Override ReferenceType File listFiles FormalParameter ReferenceType FileFilter filter LocalVariableDeclaration ReferenceType File VariableDeclarator files SuperMethodInvocation MemberReference filter listFiles IfStatement BinaryOperation == MemberReference files Literal null BlockStatement ReturnStatement Literal null BlockStatement LocalVariableDeclaration ReferenceType NormalizedFile VariableDeclarator smartFiles ArrayCreator ReferenceType NormalizedFile MemberReference files length ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference files length MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i smartFiles ClassCreator ReferenceType NormalizedFile MemberReference ArraySelector MemberReference i MethodInvocation getPath files = ReturnStatement MemberReference smartFiles	1
MethodDeclaration Modifier private FormalParameter ReferenceType IRubyObject value AssertStatement BinaryOperation < Literal 3 MemberReference length BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Setting " Literal 3 Literal " to " MemberReference value Literal ", " This	0
MethodDeclaration Modifier public Annotation JRubyMethod ReferenceType IRubyObject ReturnStatement MethodInvocation Java MethodInvocation getRuntime MethodInvocation MethodInvocation javaClass getInstance	1
MethodDeclaration Modifier private expunge LocalVariableDeclaration ReferenceType Entry TypeArgument ReferenceType T VariableDeclarator table MemberReference entryTable LocalVariableDeclaration ReferenceType TypeArgument ReferenceType Object VariableDeclarator queue MemberReference referenceQueue LocalVariableDeclaration ReferenceType VariableDeclarator ref WhileStatement BinaryOperation != Assignment MemberReference ref Cast ReferenceType MethodInvocation queue poll = Literal null BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator hash ForStatement ForControl VariableDeclaration ReferenceType Entry TypeArgument ReferenceType T VariableDeclarator e MemberReference ArraySelector BinaryOperation & Assignment MemberReference hash MethodInvocation ref hash = BinaryOperation - MemberReference table length Literal 1 table BinaryOperation != MemberReference e Literal null Assignment MemberReference e MemberReference e next = BlockStatement IfStatement BinaryOperation && BinaryOperation == MemberReference hash MemberReference e hash BinaryOperation || BinaryOperation == MemberReference ref MemberReference e objectRef BinaryOperation == MemberReference ref MemberReference e proxyRef BlockStatement StatementExpression MethodInvocation MemberReference table MemberReference hash MemberReference e remove BreakStatement	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "==" ElementValuePair compat MemberReference CompatVersion RUBY1_8 Annotation Override ReferenceType IRubyObject op_equal FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject other IfStatement BinaryOperation instanceof MemberReference other ReferenceType RubyFixnum ReturnStatement MethodInvocation RubyBoolean MethodInvocation context getRuntime BinaryOperation == MemberReference value Cast ReferenceType RubyFixnum MemberReference other newBoolean ReturnStatement SuperMethodInvocation MemberReference context MemberReference other	1
MethodDeclaration Modifier public ReferenceType FormalParameter ReferenceType String method FormalParameter ReferenceType Object scriptObject LocalVariableDeclaration ReferenceType Class VariableDeclarator typeClass MethodInvocation scriptObject getClass LocalVariableDeclaration ReferenceType String VariableDeclarator typePathString MethodInvocation MemberReference typeClass p LocalVariableDeclaration ReferenceType String VariableDeclarator mname BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation typeClass getName Literal "BlockCallback$" MemberReference method Literal "xx1" LocalVariableDeclaration ReferenceType String VariableDeclarator mnamePath BinaryOperation + BinaryOperation + BinaryOperation + MemberReference typePathString Literal "BlockCallback$" MemberReference method Literal "xx1" SynchronizedStatement MemberReference classLoader LocalVariableDeclaration ReferenceType Class VariableDeclarator c MethodInvocation MemberReference mname tryClass TryStatement IfStatement BinaryOperation == MemberReference c Literal null BlockStatement LocalVariableDeclaration ReferenceType ClassWriter VariableDeclarator cw MethodInvocation MemberReference mnamePath MemberReference typeClass createBlockCtor LocalVariableDeclaration ReferenceType SkinnyMethodAdapter VariableDeclarator mv MethodInvocation MemberReference cw StatementExpression MethodInvocation mv Literal 0 aload StatementExpression MethodInvocation mv MemberReference mnamePath Literal "$scriptObject" MethodInvocation MemberReference typeClass ci getfield StatementExpression MethodInvocation mv Literal 1 aload StatementExpression MethodInvocation mv Literal 2 aload StatementExpression MethodInvocation mv Literal 3 aload StatementExpression MethodInvocation mv MemberReference typePathString MemberReference method MethodInvocation MemberReference RubyKernel IRUBY_OBJECT BinaryOperation + BinaryOperation + Literal "L" MemberReference typePathString Literal ";" ClassReference ReferenceType ThreadContext MemberReference RubyKernel IRUBY_OBJECT ClassReference ReferenceType IRubyObject sig invokestatic StatementExpression MethodInvocation mv areturn StatementExpression MethodInvocation mv Literal 2 Literal 3 visitMaxs StatementExpression Assignment MemberReference c MethodInvocation MemberReference cw MemberReference mv MemberReference mname endCall = LocalVariableDeclaration ReferenceType VariableDeclarator ic Cast ReferenceType MethodInvocation c MethodInvocation MemberReference scriptObject newInstance ClassReference ReferenceType Object getConstructor ReturnStatement MemberReference ic CatchClause CatchClauseParameter IllegalArgumentException e ThrowStatement MemberReference e CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation e printStackTrace ThrowStatement ClassCreator ReferenceType IllegalArgumentException MethodInvocation e getMessage	1
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 FormalParameter ReferenceType IRubyObject arg3 FormalParameter ReferenceType IRubyObject arg4 FormalParameter ReferenceType IRubyObject arg5 FormalParameter ReferenceType IRubyObject arg6 FormalParameter ReferenceType IRubyObject arg7 FormalParameter ReferenceType IRubyObject arg8 FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime TryStatement StatementExpression MethodInvocation MemberReference context MemberReference name MemberReference self MemberReference block MemberReference runtime pre StatementExpression MethodInvocation argsNode MemberReference runtime Literal 9 StatementExpression MethodInvocation argsNode MemberReference context MemberReference runtime MemberReference self MemberReference arg0 MemberReference arg1 MemberReference arg2 MemberReference arg3 MemberReference arg4 MemberReference arg5 MemberReference arg6 MemberReference arg7 MemberReference arg8 MemberReference block prepare ReturnStatement MethodInvocation body MemberReference runtime MemberReference context MemberReference self MemberReference block CatchClause CatchClauseParameter rj ReturnStatement MethodInvocation MemberReference context MemberReference rj handleReturn CatchClause CatchClauseParameter rj ReturnStatement MethodInvocation MemberReference runtime handleRedo StatementExpression MethodInvocation MemberReference runtime MemberReference context MemberReference name post	0
MethodDeclaration Modifier public static FormalParameter ReferenceType Ruby runtime StatementExpression Assignment MemberReference provider Cast ReferenceType Provider MethodInvocation ClassCreator ReferenceType MethodDeclaration Modifier public ReferenceType Object run TryStatement ReturnStatement MethodInvocation Class MethodInvocation newInstance Literal forName CatchClause CatchClauseParameter Exception e ReturnStatement Literal null = LocalVariableDeclaration ReferenceType RubyModule VariableDeclarator mDigest MethodInvocation runtime Literal "Digest" LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator cDigestBase MethodInvocation mDigest Literal "Base" MethodInvocation runtime getObject MemberReference Base defineClassUnder StatementExpression MethodInvocation cDigestBase ClassReference ReferenceType Base defineAnnotatedMethods	1
MethodDeclaration Modifier private ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject test FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator expression MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference IfStatement MethodInvocation MethodInvocation isTrue MemberReference context MemberReference self MemberReference expression MemberReference test call BlockStatement ReturnStatement MethodInvocation bodyNode MemberReference runtime MemberReference context MemberReference self MemberReference ReturnStatement Literal null	0
MethodDeclaration Modifier public ReferenceType ReturnStatement MemberReference scope	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object gotoToken FormalParameter BasicType int StatementExpression MethodInvocation method MethodInvocation ClassReference ReferenceType Visibility p Literal MethodInvocation ClassReference ReferenceType Visibility ci getstatic LocalVariableDeclaration ReferenceType Label VariableDeclarator temp ClassCreator ReferenceType Label StatementExpression MethodInvocation method MemberReference temp WhileStatement BinaryOperation > MemberReference Literal 0 BlockStatement StatementExpression MethodInvocation method pop StatementExpression MethodInvocation method Cast ReferenceType Label MemberReference gotoToken go_to StatementExpression MethodInvocation method MemberReference temp label	0
MethodDeclaration Modifier private static ReferenceType JavaClass FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType IRubyObject type LocalVariableDeclaration ReferenceType JavaClass VariableDeclarator targetType IfStatement BinaryOperation || BinaryOperation instanceof MemberReference type ReferenceType RubyString BinaryOperation instanceof MemberReference type ReferenceType RubySymbol BlockStatement StatementExpression Assignment MemberReference targetType MethodInvocation runtime MethodInvocation MethodInvocation MethodInvocation type asJavaString get getJavaSupport = IfStatement BinaryOperation == MemberReference targetType Literal null StatementExpression Assignment MemberReference targetType MethodInvocation JavaClass MemberReference runtime MethodInvocation type asJavaString forNameVerbose = IfStatement BinaryOperation && BinaryOperation instanceof MemberReference type ReferenceType RubyModule MethodInvocation type Literal "java_class" respondsTo BlockStatement StatementExpression Assignment MemberReference targetType Cast ReferenceType JavaClass MethodInvocation RuntimeHelpers MemberReference context MemberReference type Literal "java_class" invoke = BlockStatement ThrowStatement MethodInvocation runtime BinaryOperation + Literal "unable to convert array to type: " MemberReference type newTypeError ReturnStatement MemberReference targetType	1
MethodDeclaration Modifier public Annotation Override BasicType boolean remove FormalParameter ReferenceType Object o ReturnStatement MethodInvocation view This RubyHash MemberReference o remove	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "^" ElementValuePair required Literal 1 ReferenceType RubyBoolean FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject obj ReturnStatement MethodInvocation recv MethodInvocation MethodInvocation obj isTrue newBoolean getRuntime	1
MethodDeclaration Modifier public static Annotation Deprecated ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject arg ReturnStatement MethodInvocation MethodInvocation recv getRuntime MemberReference arg	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair required Literal 1 ElementValuePair module Literal true ReferenceType IRubyObject size_p FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject filename LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation recv getRuntime LocalVariableDeclaration ReferenceType ZipEntry VariableDeclarator entry MethodInvocation MemberReference filename file_in_archive IfStatement BinaryOperation != MemberReference entry Literal null BlockStatement LocalVariableDeclaration BasicType long VariableDeclarator size MethodInvocation entry getSize IfStatement BinaryOperation > MemberReference size Literal 0 BlockStatement ReturnStatement MethodInvocation runtime MemberReference size newFixnum BlockStatement ReturnStatement MethodInvocation runtime getNil LocalVariableDeclaration ReferenceType JRubyFile VariableDeclarator file MethodInvocation MemberReference filename file IfStatement MethodInvocation ! file exists BlockStatement ReturnStatement MethodInvocation runtime getNil LocalVariableDeclaration BasicType long VariableDeclarator length MethodInvocation file length IfStatement BinaryOperation > MemberReference length Literal 0 BlockStatement ReturnStatement MethodInvocation runtime MemberReference length newFixnum BlockStatement ReturnStatement MethodInvocation runtime getNil	1
MethodDeclaration Modifier public ReferenceType Operand buildBignum FormalParameter ReferenceType node FormalParameter ReferenceType IR_Scope s ReturnStatement ClassCreator ReferenceType Fixnum MethodInvocation node getValue	1
MethodDeclaration Modifier private static addToJavaPackageModule FormalParameter ReferenceType RubyModule proxyClass FormalParameter ReferenceType JavaClass javaClass LocalVariableDeclaration ReferenceType Class TypeArgument ? VariableDeclarator clazz MethodInvocation javaClass javaClass LocalVariableDeclaration ReferenceType String VariableDeclarator fullName IfStatement BinaryOperation == Assignment MemberReference fullName MethodInvocation clazz getName = Literal null BlockStatement ReturnStatement LocalVariableDeclaration BasicType int VariableDeclarator endPackage MethodInvocation fullName Literal '.' lastIndexOf IfStatement BinaryOperation || BinaryOperation != MethodInvocation fullName Literal '$' indexOf Literal - 1 MethodInvocation ! Character MethodInvocation fullName BinaryOperation + MemberReference endPackage Literal 1 charAt isUpperCase BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation proxyClass getRuntime LocalVariableDeclaration ReferenceType String VariableDeclarator packageString TernaryExpression BinaryOperation < MemberReference endPackage Literal 0 Literal "" MethodInvocation fullName Literal 0 MemberReference endPackage substring LocalVariableDeclaration ReferenceType RubyModule VariableDeclarator packageModule MethodInvocation MemberReference runtime MemberReference packageString getJavaPackageModule IfStatement BinaryOperation != MemberReference packageModule Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator className MethodInvocation fullName BinaryOperation + MemberReference endPackage Literal 1 substring IfStatement BinaryOperation == MethodInvocation packageModule MemberReference className getConstantAt Literal null BlockStatement StatementExpression MethodInvocation packageModule MethodInvocation runtime MemberReference className MemberReference proxyClass	1
MethodDeclaration Modifier public Annotation Deprecated ReferenceType IRubyObject op_aset FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject args SwitchStatement MemberReference args length SwitchStatementCase Literal 2 ReturnStatement MethodInvocation MemberReference context MemberReference ArraySelector Literal 0 args MemberReference ArraySelector Literal 1 args op_aset SwitchStatementCase Literal 3 ReturnStatement MethodInvocation MemberReference context MemberReference ArraySelector Literal 0 args MemberReference ArraySelector Literal 1 args MemberReference ArraySelector Literal 2 args op_aset SwitchStatementCase StatementExpression MethodInvocation Arity MethodInvocation context getRuntime MemberReference args length Literal 2 Literal 3 raiseArgumentError ReturnStatement Literal null	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "to_r" ElementValuePair reads MemberReference BACKREF ElementValuePair writes MemberReference BACKREF ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject to_r FormalParameter ReferenceType ThreadContext context LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration ReferenceType DynamicScope VariableDeclarator scope MethodInvocation context getCurrentScope LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator backref MethodInvocation scope MemberReference runtime getBackRef IfStatement BinaryOperation instanceof MemberReference backref ReferenceType RubyMatchData StatementExpression Cast ReferenceType RubyMatchData MemberReference backref LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator s MethodInvocation RuntimeHelpers MemberReference context This Literal MethodInvocation RubyRegexp MemberReference runtime MemberReference Numeric.ComplexPatterns underscores_pat newDummyRegexp MethodInvocation runtime ClassCreator ReferenceType ByteList ArrayCreator BasicType byte ArrayInitializer Literal '_' newString invoke LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator a MethodInvocation RubyRational MemberReference context MemberReference s str_to_r_internal StatementExpression MethodInvocation scope MemberReference backref setBackRef IfStatement MethodInvocation ! a MethodInvocation isNil Literal 0 eltInternal BlockStatement ReturnStatement MethodInvocation a Literal 0 eltInternal BlockStatement ReturnStatement MethodInvocation RubyRational MemberReference context MethodInvocation RubyFixnum MemberReference runtime zero	1
MethodDeclaration Modifier public Annotation Override ReferenceType String toString ReturnStatement SuperMethodInvocation MethodInvocation MemberReference File separatorChar Literal '/' replace toString	0
MethodDeclaration Modifier public Annotation Override ReferenceType AllocatedDirectMemoryIO FormalParameter ReferenceType Ruby runtime FormalParameter BasicType int size FormalParameter BasicType int FormalParameter BasicType boolean clear ThrowStatement MethodInvocation runtime MemberReference msg newNotImplementedError	0
MethodDeclaration Modifier public static BasicType boolean IfStatement BinaryOperation != MemberReference INSTANCE Literal null BlockStatement ReturnStatement Literal true IfStatement MemberReference Platform IS_WINDOWS BlockStatement ReturnStatement Literal false TryStatement SynchronizedStatement ClassReference ReferenceType RubyUNIXSocket IfStatement BinaryOperation != MemberReference INSTANCE Literal null BlockStatement ReturnStatement Literal true LocalVariableDeclaration ReferenceType String VariableDeclarator libnames TernaryExpression MemberReference Platform ArrayCreator ReferenceType String ArrayInitializer Literal Literal Literal ArrayCreator ReferenceType String ArrayInitializer Literal StatementExpression Assignment MemberReference INSTANCE Cast ReferenceType MethodInvocation ClassReference ReferenceType MemberReference libnames = ReturnStatement Literal true CatchClause CatchClauseParameter Throwable e ReturnStatement Literal false	1
MethodDeclaration Modifier public BasicType int exists FormalParameter ReferenceType String name ReturnStatement MethodInvocation MemberReference name	0
MethodDeclaration Modifier public ReferenceType OpenFile getOpenFile ReturnStatement MemberReference openFile	0
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg LocalVariableDeclaration ReferenceType DynamicMethod VariableDeclarator method MethodInvocation MemberReference name searchMethod IfStatement MethodInvocation MemberReference method BlockStatement ReturnStatement MethodInvocation RuntimeHelpers MemberReference context MemberReference self MethodInvocation method getVisibility MemberReference name MemberReference CallType FUNCTIONAL MemberReference arg MemberReference Block NULL_BLOCK ReturnStatement MethodInvocation method MemberReference context MemberReference self This MemberReference name MemberReference arg call	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block ReturnStatement MethodInvocation context MethodInvocation getBlock MethodInvocation MemberReference context MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair frame Literal true ReferenceType IRubyObject FormalParameter Modifier final ReferenceType ThreadContext context FormalParameter Modifier final ReferenceType Block block ReturnStatement TernaryExpression MethodInvocation block isGiven MethodInvocation MemberReference context MemberReference block reject MethodInvocation MethodInvocation context getRuntime This Literal enumeratorize	0
MethodDeclaration Modifier public synchronized Annotation Override BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public Annotation Override ReferenceType String toString ReturnStatement SuperMethodInvocation MethodInvocation toLowerCase toString	0
MethodDeclaration Modifier public static ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject x ReturnStatement MethodInvocation MemberReference context MemberReference x MethodInvocation RubyFixnum MethodInvocation context getRuntime zero	0
MethodDeclaration Modifier public static ReferenceType RubyString FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType RubyString orig StatementExpression Assignment MemberReference orig MemberReference = LocalVariableDeclaration ReferenceType RubyString VariableDeclarator str ClassCreator ReferenceType RubyString MemberReference runtime MethodInvocation runtime getString MemberReference orig value StatementExpression Assignment MemberReference str MemberReference = ReturnStatement MemberReference str	0
MethodDeclaration Modifier public final ReferenceType FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType String ReturnStatement MethodInvocation runtimeCache MemberReference context MemberReference Literal 7	0
MethodDeclaration Modifier public static ReferenceType IRubyObject uid FormalParameter ReferenceType Ruby runtime ReturnStatement MethodInvocation runtime MethodInvocation runtime MethodInvocation getPosix newFixnum	0
MethodDeclaration Modifier public BasicType boolean isLiteral FormalParameter ReferenceType Node node ReturnStatement BinaryOperation && BinaryOperation != MemberReference node Literal null BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation instanceof MemberReference node ReferenceType FixnumNode BinaryOperation instanceof MemberReference node ReferenceType BinaryOperation instanceof MemberReference node ReferenceType FloatNode BinaryOperation instanceof MemberReference node ReferenceType SymbolNode BinaryOperation && BinaryOperation instanceof MemberReference node ReferenceType RegexpNode BinaryOperation == BinaryOperation & Cast ReferenceType RegexpNode MemberReference node MemberReference ~ ReOptions RE_OPTION_ONCE Literal 0	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair frame Literal true ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject receiver FormalParameter ReferenceType Block block ReturnStatement MethodInvocation receiver MethodInvocation MethodInvocation MemberReference context Literal "induced_from" MemberReference receiver callMethod getRuntime	1
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals Cast ReferenceType String Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals attrset = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public Annotation Override ReferenceType Arity ReturnStatement MemberReference Arity	0
MethodDeclaration Modifier public final ReferenceType org ReferenceType jruby ReferenceType ext ReferenceType ffi ReferenceType Pointer FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType CallbackInfo cbInfo FormalParameter ReferenceType Object proc ReturnStatement TernaryExpression BinaryOperation instanceof MemberReference proc ReferenceType RubyObject MethodInvocation MemberReference runtime MemberReference cbInfo Cast ReferenceType RubyObject MemberReference proc MethodInvocation MemberReference runtime MemberReference cbInfo MemberReference proc	1
MethodDeclaration Modifier final public static ReferenceType IRubyObject getArrayOfUnsigned8 FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType MemoryIO io FormalParameter BasicType long offset FormalParameter BasicType int count LocalVariableDeclaration BasicType byte VariableDeclarator array ArrayCreator BasicType byte MemberReference count StatementExpression MethodInvocation io MemberReference offset MemberReference array Literal 0 MemberReference array length get LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator arr MethodInvocation RubyArray MemberReference runtime MemberReference array length newArray ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference array length MemberReference ++ i BlockStatement StatementExpression MethodInvocation arr MethodInvocation Util MemberReference runtime MemberReference ArraySelector MemberReference i array newUnsigned8 add ReturnStatement MemberReference arr	1
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal Literal null = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public BasicType boolean is_local_id FormalParameter ReferenceType Token identifier LocalVariableDeclaration ReferenceType String VariableDeclarator name Cast ReferenceType String MethodInvocation identifier getValue ReturnStatement BinaryOperation < MethodInvocation MethodInvocation getLocalScope MethodInvocation MemberReference name isDefined getCurrentScope Literal 0	1
MethodDeclaration Modifier public static Annotation JRubyMethod ReferenceType IRubyObject dimensions FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject maybeArray FormalParameter ReferenceType IRubyObject LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime IfStatement BinaryOperation instanceof MemberReference maybeArray ReferenceType RubyArray BlockStatement ReturnStatement MethodInvocation runtime newEmptyArray AssertStatement BinaryOperation instanceof MemberReference ReferenceType RubyArray LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator rubyArray Cast ReferenceType RubyArray MemberReference maybeArray ReturnStatement MethodInvocation MemberReference context MemberReference rubyArray Cast ReferenceType RubyArray MemberReference Literal 0	1
MethodDeclaration Modifier private static ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType Group group LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator args ArrayCreator ReferenceType IRubyObject ArrayInitializer MethodInvocation runtime MethodInvocation group getName newString MethodInvocation runtime MethodInvocation group getPassword newString MethodInvocation runtime MethodInvocation group newFixnum MethodInvocation MemberReference runtime MethodInvocation group getMembers ReturnStatement MethodInvocation RubyStruct MethodInvocation runtime MemberReference args MemberReference Block NULL_BLOCK newStruct	0
MethodDeclaration Modifier private final static FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType Type type FormalParameter ReferenceType ReferenceType Buffer buffer FormalParameter ReferenceType IRubyObject value IfStatement BinaryOperation instanceof MemberReference type ReferenceType Type ReferenceType Builtin BlockStatement SwitchStatement MethodInvocation type getNativeType SwitchStatementCase VOID BreakStatement SwitchStatementCase CHAR StatementExpression MethodInvocation buffer Cast BasicType byte MethodInvocation MemberReference value longValue setByteReturn BreakStatement SwitchStatementCase UCHAR StatementExpression MethodInvocation buffer Cast BasicType byte MethodInvocation MemberReference value longValue setByteReturn BreakStatement SwitchStatementCase SHORT StatementExpression MethodInvocation buffer Cast BasicType short MethodInvocation MemberReference value longValue setShortReturn BreakStatement SwitchStatementCase USHORT StatementExpression MethodInvocation buffer Cast BasicType short MethodInvocation MemberReference value longValue setShortReturn BreakStatement SwitchStatementCase INT StatementExpression MethodInvocation buffer Cast BasicType int MethodInvocation MemberReference value longValue setIntReturn BreakStatement SwitchStatementCase UINT StatementExpression MethodInvocation buffer Cast BasicType int MethodInvocation MemberReference value longValue setIntReturn BreakStatement SwitchStatementCase LONG_LONG StatementExpression MethodInvocation buffer MethodInvocation Util MemberReference value int64Value setLongReturn BreakStatement SwitchStatementCase ULONG_LONG StatementExpression MethodInvocation buffer MethodInvocation Util MemberReference value uint64Value setLongReturn BreakStatement SwitchStatementCase LONG IfStatement BinaryOperation == MemberReference LONG_SIZE Literal 32 BlockStatement StatementExpression MethodInvocation buffer Cast BasicType int MethodInvocation MemberReference value longValue setIntReturn BlockStatement StatementExpression MethodInvocation buffer MethodInvocation Util MemberReference value int64Value setLongReturn BreakStatement SwitchStatementCase ULONG IfStatement BinaryOperation == MemberReference LONG_SIZE Literal 32 BlockStatement StatementExpression MethodInvocation buffer Cast BasicType int MethodInvocation MemberReference value longValue setIntReturn BlockStatement StatementExpression MethodInvocation buffer MethodInvocation Util MemberReference value uint64Value setLongReturn BreakStatement SwitchStatementCase FLOAT StatementExpression MethodInvocation buffer Cast BasicType float MethodInvocation RubyNumeric MemberReference value num2dbl BreakStatement SwitchStatementCase DOUBLE StatementExpression MethodInvocation buffer MethodInvocation RubyNumeric MemberReference value num2dbl BreakStatement SwitchStatementCase POINTER StatementExpression MethodInvocation buffer MethodInvocation MemberReference value addressValue setAddressReturn BreakStatement SwitchStatementCase BOOL StatementExpression MethodInvocation buffer TernaryExpression MethodInvocation value isTrue Literal 1 Literal 0 setIntReturn BreakStatement SwitchStatementCase IfStatement BinaryOperation instanceof MemberReference type ReferenceType CallbackInfo BlockStatement IfStatement BinaryOperation || BinaryOperation instanceof MemberReference value ReferenceType RubyProc MethodInvocation value Literal "call" respondsTo BlockStatement LocalVariableDeclaration ReferenceType Pointer VariableDeclarator cb MethodInvocation Factory MethodInvocation MethodInvocation MemberReference runtime Cast ReferenceType CallbackInfo MemberReference type MemberReference value getInstance StatementExpression MethodInvocation buffer MethodInvocation MemberReference cb addressValue setAddressReturn BlockStatement StatementExpression MethodInvocation buffer Literal 0L setAddressReturn BlockStatement StatementExpression MethodInvocation buffer Literal 0L setLongReturn	1
MethodDeclaration Modifier public seek FormalParameter BasicType long offset FormalParameter BasicType int whence IOException InvalidValueException PipeException BadDescriptorException StatementExpression MethodInvocation StatementExpression MethodInvocation MethodInvocation MemberReference offset MemberReference whence lseek getWriteStream	1
MethodDeclaration Modifier private ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject other LocalVariableDeclaration BasicType long VariableDeclarator x MemberReference value LocalVariableDeclaration BasicType long VariableDeclarator y Cast ReferenceType RubyFixnum MemberReference other IfStatement BinaryOperation == MemberReference y Literal 0 BlockStatement ThrowStatement MethodInvocation context MethodInvocation newZeroDivisionError getRuntime LocalVariableDeclaration BasicType long VariableDeclarator BinaryOperation % MemberReference x MemberReference y IfStatement BinaryOperation || BinaryOperation && BinaryOperation < MemberReference Literal 0 BinaryOperation > MemberReference y Literal 0 BinaryOperation && BinaryOperation > MemberReference Literal 0 BinaryOperation < MemberReference y Literal 0 BlockStatement StatementExpression Assignment MemberReference MemberReference y += ReturnStatement MethodInvocation context MethodInvocation MemberReference newFixnum getRuntime	0
MethodDeclaration Modifier public FormalParameter ReferenceType Script FormalParameter ReferenceType CallConfiguration StatementExpression Assignment This MemberReference box MemberReference ClassCreator ReferenceType MethodInvocation getImplementationClass MemberReference staticScope MemberReference MemberReference MethodInvocation getVisibility MethodInvocation argsNode MemberReference position This = StatementExpression Assignment This MemberReference box MemberReference callCount Literal - 1 = StatementExpression MethodInvocation MethodInvocation invalidateCacheDescendants getImplementationClass	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType DynamicScope VariableDeclarator scope MethodInvocation configuration StatementExpression Assignment MemberReference MethodInvocation scope = StatementExpression MethodInvocation result MemberReference scope	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair frame Literal true ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject end FormalParameter ReferenceType IRubyObject excl FormalParameter ReferenceType Block block ReturnStatement TernaryExpression MethodInvocation block isGiven MethodInvocation MemberReference context MemberReference end MethodInvocation excl isTrue MemberReference block MethodInvocation MethodInvocation context getRuntime This Literal ArrayCreator ReferenceType IRubyObject ArrayInitializer MemberReference end MemberReference excl enumeratorize	0
MethodDeclaration Modifier public BasicType int getPreCount ReturnStatement TernaryExpression BinaryOperation == MemberReference pre Literal null Literal 0 MethodInvocation pre size	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair module Literal true ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv ReturnStatement MethodInvocation context MethodInvocation BinaryOperation == MemberReference OS MemberReference OS DARWIN newBoolean getRuntime	1
MethodDeclaration Modifier public call FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation MethodInvocation opAsgnNode getReceiverNode MemberReference context Literal true compile	0
MethodDeclaration Modifier final public static ReferenceType IRubyObject getArrayOfSigned32 FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType MemoryIO io FormalParameter BasicType long offset FormalParameter BasicType int count LocalVariableDeclaration BasicType int VariableDeclarator array ArrayCreator BasicType int MemberReference count StatementExpression MethodInvocation io MemberReference offset MemberReference array Literal 0 MemberReference array length get LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator arr MethodInvocation RubyArray MemberReference runtime MemberReference array length newArray ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference array length MemberReference ++ i BlockStatement StatementExpression MethodInvocation arr MethodInvocation Util MemberReference runtime MemberReference ArraySelector MemberReference i array newSigned32 add ReturnStatement MemberReference arr	1
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType FormalParameter ReferenceType Block ReferenceType Type type ReturnStatement MethodInvocation MemberReference context MethodInvocation context MethodInvocation MemberReference arg0 MemberReference arg1 getRuntime Literal null Literal null Literal true MemberReference MemberReference type yield	0
MethodDeclaration Modifier private prefixEscapeCat FormalParameter BasicType int c StatementExpression MethodInvocation Literal '\\' StatementExpression MethodInvocation MemberReference c	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "to_r" ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject to_r FormalParameter ReferenceType ThreadContext context ReturnStatement MethodInvocation RubyRational MemberReference context This	1
MethodDeclaration Modifier public ReferenceType Object next StatementExpression MethodInvocation Literal true advance IfStatement BinaryOperation == MemberReference entry MemberReference head BlockStatement StatementExpression Assignment MemberReference Literal true = ThrowStatement ClassCreator ReferenceType NoSuchElementException ReturnStatement MethodInvocation view MethodInvocation getRuntime MemberReference entry	0
MethodDeclaration Modifier public static ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject x FormalParameter ReferenceType IRubyObject y ReturnStatement MethodInvocation x MemberReference context Literal "<<" MemberReference y callMethod	1
MethodDeclaration Modifier public FormalParameter ReferenceType join FormalParameter ReferenceType Object args StatementExpression MethodInvocation join MemberReference Channel Literal null send	0
MethodDeclaration Modifier public BasicType boolean fastHasInstanceVariable FormalParameter ReferenceType String internedName AssertStatement MethodInvocation IdUtil MemberReference internedName isInstanceVariable ReturnStatement MethodInvocation MemberReference internedName	1
MethodDeclaration Modifier public ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType JavaClass ReturnStatement MemberReference nameClassMap	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal Literal ElementValuePair required Literal 1 ReferenceType RubyBoolean FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject expected ReturnStatement MethodInvocation MethodInvocation MethodInvocation MemberReference context MemberReference expected newBoolean getRuntime	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "initialize" ElementValuePair frame Literal true ElementValuePair visibility MemberReference Visibility PRIVATE ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType Block block ReturnStatement MethodInvocation MemberReference context MemberReference arg0 MemberReference arg1 MemberReference block	0
MethodDeclaration Modifier final public static ReferenceType ByteList FormalParameter BasicType long i FormalParameter BasicType int radix ReturnStatement ClassCreator ReferenceType ByteList MethodInvocation ByteList MethodInvocation Long MemberReference i MemberReference radix toString plain Literal false	0
MethodDeclaration Modifier public ReferenceType getGlobalVariables ReturnStatement MemberReference globalVariables	0
MethodDeclaration Modifier private static ReferenceType EmptyByteListHolder prepareEmptyByteList FormalParameter ReferenceType Encoding enc LocalVariableDeclaration BasicType int VariableDeclarator index MethodInvocation enc getIndex IfStatement BinaryOperation >= MemberReference index MemberReference EMPTY_BYTELISTS length BlockStatement LocalVariableDeclaration ReferenceType EmptyByteListHolder VariableDeclarator tmp ArrayCreator ReferenceType EmptyByteListHolder BinaryOperation + MemberReference index Literal 4 StatementExpression MethodInvocation System MemberReference EMPTY_BYTELISTS Literal 0 MemberReference tmp Literal 0 MemberReference EMPTY_BYTELISTS length arraycopy ReturnStatement Assignment MemberReference ArraySelector MemberReference index EMPTY_BYTELISTS ClassCreator ReferenceType EmptyByteListHolder MemberReference enc =	1
MethodDeclaration Modifier public static ReferenceType RubyClass createCallbackInfoClass FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType RubyModule module LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator result MethodInvocation module MemberReference CLASS_NAME MethodInvocation module Literal "Type" fastGetClass MemberReference ObjectAllocator NOT_ALLOCATABLE_ALLOCATOR defineClassUnder StatementExpression MethodInvocation result ClassReference ReferenceType CallbackInfo defineAnnotatedMethods StatementExpression MethodInvocation result ClassReference ReferenceType CallbackInfo defineAnnotatedConstants StatementExpression MethodInvocation module MethodInvocation Literal MemberReference result fastSetConstant Literal "Type" fastGetClass ReturnStatement MemberReference result	1
MethodDeclaration Modifier public compileCall FormalParameter ReferenceType Node node FormalParameter ReferenceType BodyCompiler context FormalParameter BasicType boolean expr LocalVariableDeclaration Modifier final ReferenceType CallNode VariableDeclarator callNode Cast ReferenceType CallNode MemberReference node LocalVariableDeclaration ReferenceType CompilerCallback VariableDeclarator receiverCallback ClassCreator ReferenceType CompilerCallback MethodDeclaration Modifier public call FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation MethodInvocation callNode getReceiverNode MemberReference context Literal true compile LocalVariableDeclaration ReferenceType ArgumentsCallback VariableDeclarator argsCallback MethodInvocation MethodInvocation callNode getArgsNode getArgsCallback LocalVariableDeclaration ReferenceType CompilerCallback VariableDeclarator closureArg MethodInvocation MethodInvocation callNode getIterNode getBlock LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation callNode getName LocalVariableDeclaration ReferenceType CallType VariableDeclarator callType MemberReference CallType NORMAL IfStatement BinaryOperation && BinaryOperation != MemberReference argsCallback Literal null BinaryOperation == MethodInvocation argsCallback Literal 1 BlockStatement LocalVariableDeclaration ReferenceType Node VariableDeclarator argument MethodInvocation callNode MethodInvocation childNodes MethodInvocation Literal 0 get getArgsNode IfStatement BinaryOperation == MethodInvocation name length Literal 1 BlockStatement SwitchStatement MethodInvocation name Literal 0 charAt SwitchStatementCase Literal '+' Literal '-' Literal '*' Literal '/' Literal '<' Literal '>' IfStatement BinaryOperation instanceof MemberReference argument ReferenceType FixnumNode BlockStatement StatementExpression MethodInvocation context MethodInvocation MemberReference name MemberReference receiverCallback Cast ReferenceType FixnumNode MemberReference argument invokeBinaryFixnumRHS getInvocationCompiler IfStatement MemberReference ! expr StatementExpression MethodInvocation context consumeCurrentValue ReturnStatement IfStatement BinaryOperation == MethodInvocation name length Literal 2 BlockStatement IfStatement BinaryOperation instanceof MemberReference argument ReferenceType FixnumNode BlockStatement SwitchStatement MethodInvocation name Literal 0 charAt SwitchStatementCase Literal '<' Literal '>' Literal '=' Literal '[' SwitchStatement MethodInvocation name Literal 1 charAt SwitchStatementCase Literal '=' Literal '<' Literal ']' StatementExpression MethodInvocation context MethodInvocation MemberReference name MemberReference receiverCallback Cast ReferenceType FixnumNode MemberReference argument invokeBinaryFixnumRHS getInvocationCompiler IfStatement MemberReference ! expr StatementExpression MethodInvocation context consumeCurrentValue ReturnStatement IfStatement MemberReference RubyInstanceConfig BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator literalSend MethodInvocation MemberReference callNode getLiteralSend IfStatement BinaryOperation != MemberReference literalSend Literal null BlockStatement StatementExpression Assignment MemberReference name MemberReference literalSend = StatementExpression Assignment MemberReference callType MemberReference CallType FUNCTIONAL = StatementExpression MethodInvocation context MethodInvocation MemberReference name MemberReference receiverCallback MemberReference argsCallback MemberReference callType MemberReference closureArg BinaryOperation instanceof MethodInvocation callNode getIterNode ReferenceType IterNode invokeDynamic getInvocationCompiler IfStatement MemberReference ! expr StatementExpression MethodInvocation context consumeCurrentValue	1
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType ClassVarNode Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals Cast ReferenceType String Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public Annotation Deprecated ReferenceType List TypeArgument ReferenceType String ReturnStatement ClassCreator ReferenceType ArrayList TypeArgument ReferenceType String MethodInvocation MethodInvocation keySet	1
MethodDeclaration Modifier public ReferenceType Operand FormalParameter ReferenceType LocalAsgnNode localAsgnNode FormalParameter ReferenceType IR_Scope s LocalVariableDeclaration ReferenceType Operand VariableDeclarator value MethodInvocation MethodInvocation localAsgnNode getValueNode MemberReference s build StatementExpression MethodInvocation s ClassCreator ReferenceType COPY_Instr ClassCreator ReferenceType Variable MethodInvocation localAsgnNode getName MemberReference value addInstr ReturnStatement MemberReference value	0
MethodDeclaration Modifier public set FormalParameter BasicType int i FormalParameter ReferenceType String s StatementExpression MethodInvocation MemberReference i MemberReference s set	0
MethodDeclaration Modifier public Annotation Override ReferenceType NodeType getNodeType ReturnStatement MemberReference NodeType	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject get ReturnStatement MethodInvocation RubyRegexp MethodInvocation runtime MethodInvocation getCurrentScope MethodInvocation MemberReference runtime getBackRef getCurrentContext	0
MethodDeclaration Modifier public ReferenceType IRubyObject yield FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject value FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule FormalParameter BasicType boolean aValue ReturnStatement MethodInvocation body MemberReference context MemberReference value MemberReference self MemberReference MemberReference aValue MemberReference MemberReference type yield	0
MethodDeclaration Modifier private static FormalParameter ReferenceType Object a FormalParameter BasicType int lo FormalParameter BasicType int hi FormalParameter ReferenceType Comparator c IfStatement BinaryOperation <= MethodInvocation c MemberReference ArraySelector MemberReference lo a MemberReference ArraySelector BinaryOperation + MemberReference lo Literal 1 a compare Literal 0 BlockStatement IfStatement BinaryOperation > MethodInvocation c MemberReference ArraySelector BinaryOperation - MemberReference hi Literal 2 a MemberReference ArraySelector BinaryOperation - MemberReference hi Literal 1 a compare Literal 0 BlockStatement StatementExpression MethodInvocation MemberReference a MemberReference lo BinaryOperation - MemberReference hi Literal 1 MemberReference c BlockStatement IfStatement BinaryOperation > MethodInvocation c MemberReference ArraySelector BinaryOperation - MemberReference hi Literal 2 a MemberReference ArraySelector BinaryOperation - MemberReference hi Literal 1 a compare Literal 0 BlockStatement StatementExpression MethodInvocation MemberReference a MemberReference lo MemberReference hi MemberReference c BlockStatement StatementExpression MethodInvocation MemberReference a MemberReference lo BinaryOperation - MemberReference hi Literal 1 MemberReference c	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "socket?" ElementValuePair required Literal 1 ElementValuePair module Literal true ReferenceType IRubyObject socket_p FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject filename LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation recv getRuntime LocalVariableDeclaration ReferenceType JRubyFile VariableDeclarator file MethodInvocation MemberReference filename file ReturnStatement MethodInvocation runtime BinaryOperation && MethodInvocation file exists MethodInvocation runtime MethodInvocation MethodInvocation file getAbsolutePath stat MethodInvocation getPosix newBoolean	1
MethodDeclaration Modifier public pollThreadEvents StatementExpression MethodInvocation thread This pollThreadEvents	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "match" ElementValuePair frame Literal true ElementValuePair required Literal 2 ElementValuePair rest Literal true ElementValuePair compat MemberReference CompatVersion RUBY1_9 ElementValuePair reads MemberReference BACKREF ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType RubyRegexp VariableDeclarator pattern MethodInvocation MemberReference ArraySelector Literal 0 args StatementExpression Assignment MemberReference ArraySelector Literal 0 args This = LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator result MethodInvocation pattern MemberReference context Literal "match" MemberReference args callMethod ReturnStatement TernaryExpression BinaryOperation && MethodInvocation block isGiven MethodInvocation ! result isNil MethodInvocation block MemberReference context MemberReference result yield MemberReference result	0
MethodDeclaration Modifier private static ReferenceType FormalParameter ReferenceType RubyClass metaClass FormalParameter ReferenceType Method method IfStatement MethodInvocation Modifier MethodInvocation method getModifiers isStatic BlockStatement ReturnStatement ClassCreator ReferenceType MethodInvocation metaClass getMetaClass MemberReference method BlockStatement ReturnStatement ClassCreator ReferenceType MemberReference metaClass MemberReference method	0
MethodDeclaration Modifier public ReferenceType Class ReturnStatement MemberReference parameters	0
MethodDeclaration Modifier public ReferenceType NodeType getNodeType ReturnStatement MemberReference NodeType CASENODE	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal "to_s" ReferenceType IRubyObject to_s ReturnStatement MethodInvocation	1
MethodDeclaration Modifier protected BasicType boolean isIdentifierChar FormalParameter BasicType int c ReturnStatement BinaryOperation || BinaryOperation || MethodInvocation Character MemberReference c isLetterOrDigit BinaryOperation == MemberReference c Literal '_' MethodInvocation MemberReference c	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "test" ElementValuePair required Literal 2 ElementValuePair optional Literal 1 ElementValuePair module Literal true ElementValuePair visibility MemberReference PRIVATE ReferenceType IRubyObject test FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args IfStatement BinaryOperation == MemberReference args length Literal 0 ThrowStatement MethodInvocation context MethodInvocation Literal "wrong number of arguments" newArgumentError getRuntime LocalVariableDeclaration BasicType int VariableDeclarator cmd IfStatement BinaryOperation instanceof MemberReference ArraySelector Literal 0 args ReferenceType RubyFixnum BlockStatement StatementExpression Assignment MemberReference cmd Cast BasicType int Cast ReferenceType RubyFixnum MemberReference ArraySelector Literal 0 args = IfStatement BinaryOperation && BinaryOperation instanceof MemberReference ArraySelector Literal 0 args ReferenceType RubyString BinaryOperation > Cast ReferenceType RubyString MemberReference ArraySelector Literal 0 args Literal 0 BlockStatement StatementExpression Assignment MemberReference cmd Cast ReferenceType RubyString MemberReference ArraySelector Literal 0 args = BlockStatement StatementExpression Assignment MemberReference cmd Cast BasicType int MemberReference ArraySelector Literal 0 MethodInvocation convertToInteger MethodInvocation getLongValue args = SwitchStatement MemberReference cmd SwitchStatementCase Literal 'A' Literal 'b' Literal 'c' Literal 'C' Literal 'd' Literal 'e' Literal 'f' Literal 'g' Literal 'G' Literal 'k' Literal 'M' Literal 'l' Literal 'o' Literal 'O' Literal 'p' Literal 'r' Literal 'R' Literal 's' Literal 'S' Literal 'u' Literal 'w' Literal 'W' Literal 'x' Literal 'X' Literal 'z' Literal '=' Literal '<' Literal '>' Literal '-' BreakStatement SwitchStatementCase ThrowStatement MethodInvocation context MethodInvocation BinaryOperation + Literal "unknown command ?" Cast BasicType char MemberReference cmd newArgumentError getRuntime SwitchStatement MemberReference cmd SwitchStatementCase Literal '-' Literal '=' Literal '<' Literal '>' IfStatement BinaryOperation != MemberReference args length Literal 3 ThrowStatement MethodInvocation context MethodInvocation MemberReference args length Literal 3 newArgumentError getRuntime BreakStatement SwitchStatementCase IfStatement BinaryOperation != MemberReference args length Literal 2 ThrowStatement MethodInvocation context MethodInvocation MemberReference args length Literal 2 newArgumentError getRuntime BreakStatement SwitchStatement MemberReference cmd SwitchStatementCase Literal 'A' ReturnStatement MethodInvocation context MethodInvocation MemberReference ArraySelector Literal 1 MethodInvocation convertToString MethodInvocation toString args Literal false MethodInvocation getRuntime SwitchStatementCase Literal 'b' ReturnStatement MethodInvocation RubyFileTest MemberReference recv MemberReference ArraySelector Literal 1 args blockdev_p SwitchStatementCase Literal 'c' ReturnStatement MethodInvocation RubyFileTest MemberReference recv MemberReference ArraySelector Literal 1 args chardev_p SwitchStatementCase Literal 'C' ReturnStatement MethodInvocation context MethodInvocation MemberReference ArraySelector Literal 1 MethodInvocation convertToString MethodInvocation toString args Literal false MethodInvocation getRuntime SwitchStatementCase Literal 'd' ReturnStatement MethodInvocation RubyFileTest MemberReference recv MemberReference ArraySelector Literal 1 args directory_p SwitchStatementCase Literal 'e' ReturnStatement MethodInvocation RubyFileTest MemberReference recv MemberReference ArraySelector Literal 1 args SwitchStatementCase Literal 'f' ReturnStatement MethodInvocation RubyFileTest MemberReference recv MemberReference ArraySelector Literal 1 args file_p SwitchStatementCase Literal 'g' ReturnStatement MethodInvocation RubyFileTest MemberReference recv MemberReference ArraySelector Literal 1 args setgid_p SwitchStatementCase Literal 'G' ReturnStatement MethodInvocation RubyFileTest MemberReference recv MemberReference ArraySelector Literal 1 args grpowned_p SwitchStatementCase Literal 'k' ReturnStatement MethodInvocation RubyFileTest MemberReference recv MemberReference ArraySelector Literal 1 args sticky_p SwitchStatementCase Literal 'M' ReturnStatement MethodInvocation context MethodInvocation MemberReference ArraySelector Literal 1 MethodInvocation convertToString MethodInvocation toString args Literal false MethodInvocation getRuntime SwitchStatementCase Literal 'l' ReturnStatement MethodInvocation RubyFileTest MemberReference recv MemberReference ArraySelector Literal 1 args symlink_p SwitchStatementCase Literal 'o' ReturnStatement MethodInvocation RubyFileTest MemberReference recv MemberReference ArraySelector Literal 1 args owned_p SwitchStatementCase Literal 'O' ReturnStatement MethodInvocation RubyFileTest MemberReference recv MemberReference ArraySelector Literal 1 args rowned_p SwitchStatementCase Literal 'p' ReturnStatement MethodInvocation RubyFileTest MemberReference recv MemberReference ArraySelector Literal 1 args pipe_p SwitchStatementCase Literal 'r' ReturnStatement MethodInvocation RubyFileTest MemberReference recv MemberReference ArraySelector Literal 1 args readable_p SwitchStatementCase Literal 'R' ReturnStatement MethodInvocation RubyFileTest MemberReference recv MemberReference ArraySelector Literal 1 args readable_p SwitchStatementCase Literal 's' ReturnStatement MethodInvocation RubyFileTest MemberReference recv MemberReference ArraySelector Literal 1 args size_p SwitchStatementCase Literal 'S' ReturnStatement MethodInvocation RubyFileTest MemberReference recv MemberReference ArraySelector Literal 1 args socket_p SwitchStatementCase Literal 'u' ReturnStatement MethodInvocation RubyFileTest MemberReference recv MemberReference ArraySelector Literal 1 args setuid_p SwitchStatementCase Literal 'w' ReturnStatement MethodInvocation RubyFileTest MemberReference recv MemberReference ArraySelector Literal 1 args writable_p SwitchStatementCase Literal 'W' ReturnStatement MethodInvocation RubyFileTest MemberReference recv MemberReference ArraySelector Literal 1 args writable_p SwitchStatementCase Literal 'x' ReturnStatement MethodInvocation RubyFileTest MemberReference recv MemberReference ArraySelector Literal 1 args executable_p SwitchStatementCase Literal 'X' ReturnStatement MethodInvocation RubyFileTest MemberReference recv MemberReference ArraySelector Literal 1 args executable_real_p SwitchStatementCase Literal 'z' ReturnStatement MethodInvocation RubyFileTest MemberReference recv MemberReference ArraySelector Literal 1 args zero_p SwitchStatementCase Literal '=' ReturnStatement MethodInvocation context MethodInvocation MemberReference ArraySelector Literal 1 MethodInvocation convertToString MethodInvocation toString args Literal false MethodInvocation MemberReference ArraySelector Literal 2 args getRuntime SwitchStatementCase Literal '<' ReturnStatement MethodInvocation context MethodInvocation MemberReference ArraySelector Literal 1 MethodInvocation convertToString MethodInvocation toString args Literal false MethodInvocation MemberReference ArraySelector Literal 2 args getRuntime SwitchStatementCase Literal '>' ReturnStatement MethodInvocation context MethodInvocation MemberReference ArraySelector Literal 1 MethodInvocation convertToString MethodInvocation toString args Literal false MethodInvocation MemberReference ArraySelector Literal 2 args getRuntime SwitchStatementCase Literal '-' ReturnStatement MethodInvocation RubyFileTest MemberReference recv MemberReference ArraySelector Literal 1 args MemberReference ArraySelector Literal 2 args identical_p SwitchStatementCase ThrowStatement ClassCreator ReferenceType InternalError Literal code	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair required Literal 1 ElementValuePair optional Literal 2 ElementValuePair frame Literal true ElementValuePair meta Literal true ReferenceType IRubyObject open FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator Cast ReferenceType RubyClass MemberReference recv LocalVariableDeclaration ReferenceType RubyIO VariableDeclarator io Cast ReferenceType RubyIO MethodInvocation MemberReference context MemberReference args MemberReference block newInstance IfStatement MethodInvocation block isGiven BlockStatement TryStatement ReturnStatement MethodInvocation block MemberReference context MemberReference io yield TryStatement StatementExpression MethodInvocation io MethodInvocation MemberReference context MemberReference io Literal "close" MemberReference IRubyObject MemberReference Block NULL_BLOCK getMetaClass CatchClause CatchClauseParameter RaiseException re LocalVariableDeclaration ReferenceType RubyException VariableDeclarator rubyEx MethodInvocation re getException IfStatement MethodInvocation rubyEx MethodInvocation isTrue MemberReference context MethodInvocation runtime kind_of_p BlockStatement BlockStatement ThrowStatement MemberReference re ReturnStatement MemberReference io	1
MethodDeclaration Modifier public warn FormalParameter ReferenceType ID id FormalParameter ReferenceType ISourcePosition position FormalParameter ReferenceType String message FormalParameter ReferenceType Object data StatementExpression MethodInvocation MemberReference id MethodInvocation position getFile MethodInvocation position getStartLine MemberReference message MemberReference data warn	1
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType IRubyObject obj FormalParameter ReferenceType RubyModule type ReturnStatement BinaryOperation instanceof MemberReference obj ReferenceType RubySymbol	0
MethodDeclaration Modifier protected FormalParameter ReferenceType Ruby runtime LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator empty MethodInvocation JavaUtil MemberReference runtime MemberReference MethodInvocation getClass convertJavaToRuby StatementExpression MethodInvocation runtime Literal MethodInvocation runtime getNil StatementExpression MethodInvocation runtime Literal MethodInvocation runtime getNil StatementExpression MethodInvocation runtime Literal MethodInvocation runtime getNil StatementExpression MethodInvocation runtime Literal MethodInvocation runtime getNil StatementExpression MethodInvocation runtime Literal MemberReference empty StatementExpression MethodInvocation runtime Literal "$*" MemberReference empty StatementExpression MethodInvocation runtime Literal MemberReference empty StatementExpression MethodInvocation runtime Literal MemberReference empty defineGlobalConstant	0
MethodDeclaration Modifier private ReferenceType Frame FormalParameter ReferenceType Frame frame LocalVariableDeclaration BasicType int VariableDeclarator index This ++ MemberReference LocalVariableDeclaration ReferenceType Frame VariableDeclarator stack MemberReference StatementExpression Assignment MemberReference ArraySelector MemberReference index stack MemberReference frame = IfStatement BinaryOperation == BinaryOperation + MemberReference index Literal 1 MemberReference stack length BlockStatement StatementExpression MethodInvocation ReturnStatement MemberReference frame	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType NodeVisitor iVisitor ReturnStatement MethodInvocation iVisitor This	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "to_f" ReferenceType RubyFloat to_f FormalParameter ReferenceType IRubyObject recv ReturnStatement MethodInvocation RubyFloat MethodInvocation recv getRuntime Literal newFloat	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ReferenceType IRubyObject marshal_dump FormalParameter ReferenceType ThreadContext context LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator dump MethodInvocation context MethodInvocation MemberReference num MemberReference den newArray getRuntime IfStatement MethodInvocation hasVariables StatementExpression MethodInvocation dump MethodInvocation getVariableList syncVariables ReturnStatement MemberReference dump	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "[]" ElementValuePair required Literal 1 ReferenceType IRubyObject op_aref FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject key LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator value ReturnStatement TernaryExpression BinaryOperation == Assignment MemberReference value MethodInvocation MemberReference key internalGet = Literal null MethodInvocation MemberReference context Literal MemberReference key callMethod MemberReference value	1
MethodDeclaration Modifier public FormalParameter ReferenceType method FormalParameter ReferenceType String closureMethod StatementExpression MethodInvocation method loadThis StatementExpression MethodInvocation method IfStatement BinaryOperation < MemberReference MemberReference AbstractScript BlockStatement StatementExpression MethodInvocation method.method MemberReference closureMethod ldc StatementExpression MethodInvocation method.method MethodInvocation scriptCompiler getClassname BinaryOperation + Literal MemberReference MethodInvocation ClassReference ReferenceType ClassReference ReferenceType Ruby ClassReference ReferenceType String sig invokevirtual BlockStatement StatementExpression MethodInvocation method.method MemberReference pushInt StatementExpression MethodInvocation method.method MemberReference closureMethod ldc StatementExpression MethodInvocation method.method MethodInvocation scriptCompiler getClassname Literal MethodInvocation ClassReference ReferenceType ClassReference ReferenceType Ruby ClassReference BasicType int ClassReference ReferenceType String sig invokevirtual StatementExpression MemberReference ++	0
MethodDeclaration Modifier public ReferenceType RubyClass ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Set TypeArgument ReferenceType CFG_Edge FormalParameter ReferenceType BasicBlock ReturnStatement MethodInvocation MemberReference	0
MethodDeclaration Modifier public ReferenceType IRubyObject set_dictionary FormalParameter ReferenceType IRubyObject str UnsupportedEncodingException StatementExpression MethodInvocation MethodInvocation str MethodInvocation getBytes convertToString setDictionary StatementExpression MethodInvocation run ReturnStatement MemberReference str	1
MethodDeclaration Modifier public final FormalParameter BasicType int size StatementExpression Assignment MemberReference callSites ArrayCreator ReferenceType CallSite MemberReference size =	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair required Literal 2 ElementValuePair rest Literal true ElementValuePair meta Literal true ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration BasicType int VariableDeclarator count Literal 0 LocalVariableDeclaration ReferenceType RubyInteger VariableDeclarator mode MemberReference ArraySelector Literal 0 MethodInvocation convertToInteger args ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 1 BinaryOperation < MemberReference i MemberReference args length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType RubyString VariableDeclarator filename MethodInvocation MemberReference context MemberReference ArraySelector MemberReference i args get_path IfStatement MethodInvocation ! RubyFileTest MethodInvocation isTrue MemberReference filename MemberReference filename BlockStatement ThrowStatement MethodInvocation runtime BinaryOperation + Literal "No such file or directory - " MemberReference filename newErrnoENOENTError LocalVariableDeclaration BasicType boolean VariableDeclarator result BinaryOperation == Literal 0 MethodInvocation runtime MethodInvocation MethodInvocation filename getUnicodeValue Cast BasicType int MethodInvocation mode getLongValue getPosix IfStatement MemberReference result BlockStatement StatementExpression MemberReference ++ count ReturnStatement MethodInvocation runtime MemberReference count newFixnum	0
MethodDeclaration Modifier public ReferenceType Object case539_line2006 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression MethodInvocation yyerrok ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public setName FormalParameter ReferenceType String name StatementExpression Assignment This MemberReference name MemberReference name =	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair module Literal true ElementValuePair visibility MemberReference Visibility PRIVATE ReferenceType IRubyObject disable FormalParameter ReferenceType IRubyObject recv StatementExpression MethodInvocation recv MethodInvocation getWarnings MethodInvocation MemberReference ID Literal will not work on Literal warn getRuntime ReturnStatement MethodInvocation recv MethodInvocation getNil getRuntime	0
MethodDeclaration Modifier public BasicType boolean isDebug ReturnStatement MemberReference debug	0
MethodDeclaration Modifier public ReferenceType Object case290_line1089 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop IfStatement BinaryOperation && BinaryOperation != Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals Literal null BinaryOperation instanceof Cast ReferenceType BlockAcceptingNode MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals ReferenceType BlockPassNode BlockStatement ThrowStatement ClassCreator ReferenceType SyntaxException MemberReference PID BLOCK_ARG_AND_BLOCK_GIVEN MethodInvocation Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals getPosition MethodInvocation lexer getCurrentLine Literal "Both block arg and block given." StatementExpression Assignment MemberReference yyVal Cast ReferenceType BlockAcceptingNode MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals = StatementExpression Cast ReferenceType Node MemberReference yyVal ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public final BasicType byte FormalParameter BasicType long offset FormalParameter BasicType int StatementExpression MethodInvocation MemberReference offset Literal 1 checkBounds LocalVariableDeclaration BasicType int VariableDeclarator len MethodInvocation MemberReference offset Cast BasicType byte Literal 0 MemberReference indexOf LocalVariableDeclaration BasicType byte VariableDeclarator bytes ArrayCreator BasicType byte TernaryExpression BinaryOperation != MemberReference len Literal - 1 MemberReference len BinaryOperation - MemberReference length Cast BasicType int MemberReference offset StatementExpression MethodInvocation System MemberReference buffer MethodInvocation MemberReference offset index MemberReference bytes Literal 0 MemberReference bytes length arraycopy ReturnStatement MemberReference bytes	1
MethodDeclaration Modifier public final ReferenceType RubyString makeShared19 FormalParameter ReferenceType Ruby runtime FormalParameter BasicType int index FormalParameter BasicType int len ReturnStatement MethodInvocation MemberReference runtime MemberReference value MemberReference index MemberReference len makeShared19	0
MethodDeclaration Modifier public remove ThrowStatement ClassCreator ReferenceType UnsupportedOperationException	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject set FormalParameter ReferenceType IRubyObject value ReturnStatement MethodInvocation other MemberReference value set	0
MethodDeclaration Modifier public static ReferenceType IRubyObject gsub_bang FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block ReturnStatement MethodInvocation MethodInvocation MemberReference context MemberReference args MemberReference block gsub_bang MemberReference context MethodInvocation context getRuntime getLastlineString	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "initialize_copy" ElementValuePair required Literal 1 Annotation Override ReferenceType IRubyObject initialize_copy FormalParameter ReferenceType IRubyObject original IfStatement BinaryOperation == This MemberReference original ReturnStatement This IfStatement BinaryOperation == MethodInvocation getMetaClass MethodInvocation original getMetaClass BlockStatement ThrowStatement MethodInvocation MethodInvocation Literal "wrong argument class" newTypeError getRuntime LocalVariableDeclaration ReferenceType RubyMatchData VariableDeclarator origMatchData Cast ReferenceType RubyMatchData MemberReference original StatementExpression Assignment MemberReference str MemberReference origMatchData str = StatementExpression Assignment MemberReference regs MemberReference origMatchData regs = ReturnStatement This	1
MethodDeclaration Modifier private ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter BasicType int i FormalParameter BasicType boolean is_19 StatementExpression MethodInvocation check LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime IfStatement BinaryOperation || BinaryOperation < MemberReference i Literal 0 BinaryOperation <= TernaryExpression BinaryOperation == MemberReference regs Literal null Literal 1 MemberReference regs numRegs MemberReference i ThrowStatement MethodInvocation runtime BinaryOperation + BinaryOperation + Literal "index " MemberReference i Literal " out of matches" newIndexError LocalVariableDeclaration BasicType int VariableDeclarator b VariableDeclarator e IfStatement BinaryOperation == MemberReference regs Literal null BlockStatement StatementExpression Assignment MemberReference b MemberReference begin = StatementExpression Assignment MemberReference e MemberReference end = BlockStatement StatementExpression Assignment MemberReference b MemberReference regs ArraySelector MemberReference i beg = StatementExpression Assignment MemberReference e MemberReference regs ArraySelector MemberReference i end = IfStatement BinaryOperation < MemberReference b Literal 0 ReturnStatement MethodInvocation runtime MethodInvocation runtime getNil MethodInvocation runtime getNil newArray IfStatement BinaryOperation && MemberReference is_19 MethodInvocation ! str singleByteOptimizable BlockStatement StatementExpression MethodInvocation updateCharOffset StatementExpression Assignment MemberReference b MemberReference charOffsets ArraySelector MemberReference i beg = StatementExpression Assignment MemberReference e MemberReference charOffsets ArraySelector MemberReference i end = ReturnStatement MethodInvocation runtime MethodInvocation RubyFixnum MemberReference runtime MemberReference b newFixnum MethodInvocation RubyFixnum MemberReference runtime MemberReference e newFixnum newArray	1
MethodDeclaration Modifier public ReferenceType RubyClass defineClassUnder FormalParameter ReferenceType String name FormalParameter ReferenceType RubyClass superClass FormalParameter ReferenceType ObjectAllocator allocator FormalParameter ReferenceType RubyModule parent FormalParameter ReferenceType CallSite callSites LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator classObj MethodInvocation parent MemberReference name getConstantAt IfStatement BinaryOperation != MemberReference classObj Literal null BlockStatement IfStatement BinaryOperation instanceof MemberReference classObj ReferenceType RubyClass ThrowStatement MethodInvocation BinaryOperation + MemberReference name Literal " is not a class" newTypeError LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator klazz Cast ReferenceType RubyClass MemberReference classObj IfStatement BinaryOperation != MethodInvocation klazz MethodInvocation getRealClass getSuperClass MemberReference superClass BlockStatement ThrowStatement MethodInvocation BinaryOperation + MemberReference name Literal " is already defined" MemberReference name newNameError IfStatement BinaryOperation != MethodInvocation klazz getAllocator MemberReference allocator BlockStatement StatementExpression MethodInvocation klazz MemberReference allocator setAllocator ReturnStatement MemberReference klazz LocalVariableDeclaration BasicType boolean VariableDeclarator parentIsObject BinaryOperation == MemberReference parent MemberReference objectClass IfStatement BinaryOperation == MemberReference superClass Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator className TernaryExpression MemberReference parentIsObject MemberReference name BinaryOperation + BinaryOperation + MethodInvocation parent getName Literal "::" MemberReference name StatementExpression MethodInvocation warnings MemberReference ID BinaryOperation + BinaryOperation + Literal "no class for `" MemberReference className Literal "', Object MemberReference className warn StatementExpression Assignment MemberReference superClass MemberReference objectClass = ReturnStatement MethodInvocation RubyClass This MemberReference superClass MemberReference name MemberReference allocator MemberReference parent MemberReference ! parentIsObject MemberReference callSites newClass	1
MethodDeclaration Modifier public ReferenceType Operand FormalParameter ReferenceType Map TypeArgument ReferenceType Operand TypeArgument ReferenceType Operand LocalVariableDeclaration BasicType int VariableDeclarator i Literal 0 ForStatement EnhancedForControl VariableDeclaration ReferenceType Operand VariableDeclarator p MemberReference BlockStatement StatementExpression MethodInvocation MemberReference i MethodInvocation p MemberReference set StatementExpression MemberReference ++ i ReturnStatement This	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "==" ElementValuePair required Literal 1 ReferenceType IRubyObject op_equal FormalParameter ReferenceType IRubyObject other IfStatement BinaryOperation instanceof MemberReference other ReferenceType RubyProc ReturnStatement MethodInvocation MethodInvocation getFalse getRuntime IfStatement BinaryOperation || BinaryOperation == This MemberReference other This MemberReference block MethodInvocation Cast ReferenceType RubyProc MemberReference other equals BlockStatement ReturnStatement MethodInvocation MethodInvocation getTrue getRuntime ReturnStatement MethodInvocation MethodInvocation getFalse getRuntime	1
MethodDeclaration ReferenceType Object ReturnStatement SuperMethodInvocation get	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair frame Literal true ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject FormalParameter Modifier final ReferenceType Block block ReturnStatement TernaryExpression MethodInvocation block isGiven MethodInvocation MemberReference context MemberReference self MemberReference MemberReference block MethodInvocation MethodInvocation context getRuntime MemberReference self Literal MemberReference enumeratorize	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "grant_privilege" ElementValuePair module Literal true ReferenceType IRubyObject grant_privilege FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject arg ThrowStatement MethodInvocation self MethodInvocation Literal not implemented yet" newNotImplementedError getRuntime	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair optional Literal 1 ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType RubyArray public_instance_methods19 FormalParameter ReferenceType IRubyObject args ReturnStatement MethodInvocation MemberReference args MemberReference PUBLIC Literal false Literal true instance_methods	1
MethodDeclaration Modifier public encode FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType IRubyObject o FormalParameter ReferenceType ByteList result LocalVariableDeclaration BasicType int VariableDeclarator s TernaryExpression BinaryOperation == MemberReference o MethodInvocation runtime getNil Literal 0 Cast BasicType int MethodInvocation RubyNumeric MemberReference o num2long StatementExpression MethodInvocation MemberReference result MemberReference s	0
MethodDeclaration Modifier public ReferenceType String toString IfStatement BinaryOperation instanceof MemberReference _scope ReferenceType IR_Class ReturnStatement BinaryOperation + Literal "Class " Cast ReferenceType IR_Class MemberReference _scope IfStatement BinaryOperation instanceof MemberReference _scope ReferenceType IR_Module ReturnStatement BinaryOperation + Literal " Cast ReferenceType IR_Module MemberReference _scope IfStatement BinaryOperation instanceof MemberReference _scope ReferenceType IR_Method ReturnStatement BinaryOperation + Literal " Cast ReferenceType IR_Method MemberReference _scope IfStatement BinaryOperation instanceof MemberReference _scope ReferenceType ReturnStatement BinaryOperation + Literal " Cast ReferenceType MemberReference _scope ReturnStatement Cast ReferenceType IR_Closure MemberReference _scope	1
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType String name ReturnStatement Literal true	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 FormalParameter ReferenceType IRubyObject arg3 FormalParameter ReferenceType IRubyObject arg4 FormalParameter ReferenceType IRubyObject arg5 FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime TryStatement StatementExpression MethodInvocation MemberReference context MemberReference name MemberReference self MemberReference block MemberReference runtime pre StatementExpression MethodInvocation argsNode MemberReference runtime Literal 6 StatementExpression MethodInvocation argsNode MemberReference context MemberReference runtime MemberReference self MemberReference arg0 MemberReference arg1 MemberReference arg2 MemberReference arg3 MemberReference arg4 MemberReference arg5 MemberReference block prepare ReturnStatement MethodInvocation body MemberReference runtime MemberReference context MemberReference self MemberReference block CatchClause CatchClauseParameter rj ReturnStatement MethodInvocation MemberReference context MemberReference rj handleReturn CatchClause CatchClauseParameter rj ReturnStatement MethodInvocation MemberReference runtime handleRedo StatementExpression MethodInvocation MemberReference runtime MemberReference context MemberReference name post	0
MethodDeclaration Modifier public invoke FormalParameter ReferenceType ReferenceType Buffer buffer StatementExpression MethodInvocation MemberReference buffer MemberReference proc invoke	0
MethodDeclaration Modifier public Annotation Override FormalParameter ReferenceType IRubyObject values FormalParameter BasicType int index FormalParameter BasicType int size AssertStatement BinaryOperation <= MemberReference size Literal 2 BinaryOperation + Literal only scopes with variables, not " MemberReference size SwitchStatement MemberReference size SwitchStatementCase Literal 3 StatementExpression Assignment MemberReference variableValueZero MemberReference ArraySelector BinaryOperation - MemberReference values length Literal 3 values = SwitchStatementCase Literal 2 StatementExpression Assignment MemberReference variableValueOne MemberReference ArraySelector BinaryOperation - MemberReference values length Literal 2 values = SwitchStatementCase Literal 1 StatementExpression Assignment MemberReference variableValueTwo MemberReference ArraySelector BinaryOperation - MemberReference values length Literal 1 values =	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator sym MethodInvocation toString LocalVariableDeclaration Modifier final BasicType long VariableDeclarator address MethodInvocation library MemberReference sym IfStatement BinaryOperation == MemberReference address Literal 0L BlockStatement ReturnStatement MethodInvocation context MethodInvocation getNil getRuntime ReturnStatement ClassCreator ReferenceType Symbol MethodInvocation context getRuntime This MemberReference sym ClassCreator ReferenceType MethodInvocation context getRuntime This MemberReference address	0
MethodDeclaration Modifier public FormalParameter BasicType int arg0 StatementExpression MethodInvocation MethodInvocation MemberReference MemberReference arg0 getMethodVisitor	0
MethodDeclaration Modifier public FormalParameter ReferenceType Node node FormalParameter ReferenceType context FormalParameter ReferenceType ASTInspector inspector StatementExpression MethodInvocation MemberReference node MemberReference context MemberReference inspector Literal true Literal true	0
MethodDeclaration Modifier public ReferenceType RubyClass ReturnStatement MemberReference	0
MethodDeclaration Modifier public escape StatementExpression Assignment This MemberReference escaped ArraySelector Literal 0 Literal true =	0
MethodDeclaration Modifier public compileBlock FormalParameter ReferenceType Node node FormalParameter ReferenceType BodyCompiler context FormalParameter BasicType boolean expr LocalVariableDeclaration ReferenceType BlockNode VariableDeclarator blockNode Cast ReferenceType BlockNode MemberReference node ForStatement ForControl VariableDeclaration ReferenceType Iterator TypeArgument ReferenceType Node VariableDeclarator iter MethodInvocation blockNode MethodInvocation iterator childNodes MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType Node VariableDeclarator n MethodInvocation iter next StatementExpression MethodInvocation MemberReference n MemberReference context TernaryExpression MethodInvocation iter hasNext Literal false MemberReference expr compile	1
MethodDeclaration Modifier public FormalParameter BasicType char type StatementExpression MethodInvocation loadThreadContext SwitchStatement MemberReference type SwitchStatementCase Literal '~' StatementExpression MethodInvocation Literal MethodInvocation ClassReference ReferenceType IRubyObject MethodInvocation ClassReference ReferenceType ThreadContext params sig invokeUtilityMethod BreakStatement SwitchStatementCase Literal '&' StatementExpression MethodInvocation Literal MethodInvocation ClassReference ReferenceType IRubyObject MethodInvocation ClassReference ReferenceType ThreadContext params sig invokeUtilityMethod BreakStatement SwitchStatementCase Literal '`' StatementExpression MethodInvocation Literal MethodInvocation ClassReference ReferenceType IRubyObject MethodInvocation ClassReference ReferenceType ThreadContext params sig invokeUtilityMethod BreakStatement SwitchStatementCase Literal '\'' StatementExpression MethodInvocation Literal MethodInvocation ClassReference ReferenceType IRubyObject MethodInvocation ClassReference ReferenceType ThreadContext params sig invokeUtilityMethod BreakStatement SwitchStatementCase Literal '+' StatementExpression MethodInvocation Literal MethodInvocation ClassReference ReferenceType IRubyObject MethodInvocation ClassReference ReferenceType ThreadContext params sig invokeUtilityMethod BreakStatement SwitchStatementCase ThrowStatement ClassCreator ReferenceType NotCompilableException Literal backref with invalid type"	0
MethodDeclaration Modifier public final ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType String name ReturnStatement MethodInvocation runtimeCache MemberReference context MemberReference name Literal 3	0
MethodDeclaration Modifier public static ReferenceType RubyModule FormalParameter ReferenceType Ruby runtime LocalVariableDeclaration ReferenceType ThreadContext VariableDeclarator context MethodInvocation runtime getCurrentContext LocalVariableDeclaration ReferenceType RubyModule VariableDeclarator javaModule MethodInvocation runtime Literal StatementExpression MethodInvocation javaModule ClassReference ReferenceType Java defineAnnotatedMethods StatementExpression MethodInvocation JavaObject MemberReference runtime MemberReference javaModule StatementExpression MethodInvocation JavaArray MemberReference runtime MemberReference javaModule StatementExpression MethodInvocation JavaClass MemberReference runtime MemberReference javaModule StatementExpression MethodInvocation JavaMethod MemberReference runtime MemberReference javaModule StatementExpression MethodInvocation JavaConstructor MemberReference runtime MemberReference javaModule StatementExpression MethodInvocation JavaField MemberReference runtime MemberReference javaModule StatementExpression MethodInvocation MemberReference context StatementExpression MethodInvocation MemberReference context StatementExpression MethodInvocation MemberReference context StatementExpression MethodInvocation ArrayJavaProxy MemberReference context StatementExpression MethodInvocation JavaProxyClass MemberReference runtime StatementExpression MethodInvocation MemberReference context LocalVariableDeclaration ReferenceType RubyModule VariableDeclarator MethodInvocation runtime Literal StatementExpression MethodInvocation ClassReference ReferenceType JavaUtilities defineAnnotatedMethods StatementExpression MethodInvocation runtime MethodInvocation ClassCreator ReferenceType Callback MethodDeclaration Modifier public ReferenceType IRubyObject execute FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block StatementExpression MethodInvocation Arity MethodInvocation recv getRuntime MemberReference args Literal 1 Literal 1 checkArgumentCount ReturnStatement MethodInvocation Java MemberReference recv MemberReference ArraySelector Literal 0 args MethodDeclaration Modifier public ReferenceType Arity ReturnStatement MemberReference Arity getJavaSupport StatementExpression MethodInvocation MemberReference runtime StatementExpression MethodInvocation runtime MethodInvocation ClassReference ReferenceType defineAnnotatedMethods getArray StatementExpression MethodInvocation runtime MethodInvocation ClassReference ReferenceType defineAnnotatedMethods StatementExpression MethodInvocation runtime MethodInvocation ClassReference ReferenceType defineAnnotatedMethods getString StatementExpression MethodInvocation runtime MethodInvocation ClassReference ReferenceType defineAnnotatedMethods IfStatement MethodInvocation runtime MethodInvocation Literal getObject BlockStatement StatementExpression Cast ReferenceType RubyClass MethodInvocation runtime getObject StatementExpression MethodInvocation MemberReference runtime MethodInvocation runtime MethodInvocation getJavaSupport StatementExpression MethodInvocation runtime MethodInvocation MethodInvocation JavaClass MemberReference runtime ClassReference ReferenceType Object get getJavaSupport StatementExpression MethodInvocation runtime MethodInvocation Literal true getJavaSupport ReturnStatement MemberReference javaModule	0
MethodDeclaration Modifier private static FormalParameter ReferenceType RubyModule rubyMod FormalParameter ReferenceType RubyModule rubySing FormalParameter Modifier final ReferenceType Class cls LocalVariableDeclaration Modifier final ReferenceType Ruby VariableDeclarator ruby MethodInvocation rubyMod getRuntime StatementExpression MethodInvocation rubySing Literal "java_class" ClassCreator ReferenceType JavaMethod ReferenceType JavaMethodZero MemberReference rubySing MemberReference Visibility PUBLIC MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name ReturnStatement MethodInvocation MemberReference ruby MemberReference cls javaToRuby addMethod	1
MethodDeclaration Modifier public run ForStatement ForControl BlockStatement TryStatement LocalVariableDeclaration ReferenceType VariableDeclarator r MethodInvocation referenceQueue remove IfStatement BinaryOperation instanceof MemberReference r ReferenceType Runnable BlockStatement StatementExpression Cast ReferenceType Runnable MemberReference r CatchClause CatchClauseParameter InterruptedException ex BreakStatement CatchClause CatchClauseParameter Throwable t ContinueStatement	1
MethodDeclaration Modifier public final fastASet FormalParameter ReferenceType IRubyObject key FormalParameter ReferenceType IRubyObject value StatementExpression MethodInvocation MemberReference key MemberReference value	0
MethodDeclaration Modifier public ReferenceType Object next ReturnStatement MethodInvocation MemberReference value	0
MethodDeclaration Modifier public final ReferenceType IRubyObject callMethod FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg ReturnStatement MethodInvocation RuntimeHelpers MemberReference context This MemberReference name MemberReference arg invoke	0
MethodDeclaration Modifier public StatementExpression MethodInvocation MethodInvocation MemberReference visitInsn getMethodVisitor	0
MethodDeclaration Modifier public BasicType int read IOException ReturnStatement MethodInvocation reader read	0
MethodDeclaration Modifier public ReferenceType Object case280_line1051 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop IfStatement BinaryOperation instanceof Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 3 MemberReference yyTop yyVals ReferenceType SelfNode BlockStatement StatementExpression Assignment MemberReference yyVal MethodInvocation support ClassCreator ReferenceType Token Literal "[]" MethodInvocation Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 3 MemberReference yyTop yyVals getPosition Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals Literal null new_fcall = BlockStatement StatementExpression Assignment MemberReference yyVal MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 3 MemberReference yyTop yyVals ClassCreator ReferenceType Token Literal "[]" MethodInvocation Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 3 MemberReference yyTop yyVals getPosition Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal Annotation Override ReferenceType IRubyObject dup LocalVariableDeclaration ReferenceType RubyProc VariableDeclarator newProc ClassCreator ReferenceType RubyProc MethodInvocation getRuntime MethodInvocation MethodInvocation getRuntime MemberReference type StatementExpression Assignment MemberReference newProc block MethodInvocation getBlock = StatementExpression Assignment MemberReference newProc file MemberReference file = StatementExpression Assignment MemberReference newProc line MemberReference line = ReturnStatement MemberReference newProc	0
MethodDeclaration Modifier public nextValue FormalParameter ReferenceType BodyCompiler context FormalParameter ReferenceType Object FormalParameter BasicType int index LocalVariableDeclaration ReferenceType Node VariableDeclarator node Cast ReferenceType Node Cast ReferenceType Object MemberReference StatementExpression MethodInvocation MemberReference node MemberReference context Literal true compile	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime ReturnStatement MethodInvocation MemberReference runtime MethodInvocation MethodInvocation MemberReference context MethodInvocation toString MemberReference runtime	0
MethodDeclaration Modifier public Annotation Override ReferenceType Class TypeArgument ? ReturnStatement ClassReference BasicType boolean	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ReferenceType IRubyObject LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator obj MethodInvocation ref get IfStatement BinaryOperation == MemberReference obj Literal null BlockStatement ThrowStatement MethodInvocation Literal "Illegal - probably ReturnStatement MemberReference obj	1
MethodDeclaration pre FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule implementer FormalParameter ReferenceType String name FormalParameter ReferenceType Block block FormalParameter ReferenceType scope FormalParameter ReferenceType StatementExpression MethodInvocation context MemberReference name	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair required Literal 1 ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType RubyArray concat FormalParameter ReferenceType IRubyObject obj LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator ary MethodInvocation obj convertToArray IfStatement BinaryOperation > MemberReference ary realLength Literal 0 StatementExpression MethodInvocation MemberReference realLength Literal 0 MemberReference ary ReturnStatement This	1
MethodDeclaration * Output methods */ Modifier protected append FormalParameter ReferenceType String toAppend FormalParameter ReferenceType AttributeSet style TryStatement StatementExpression MethodInvocation area MethodInvocation MethodInvocation area MethodInvocation getLength getDocument MemberReference toAppend MemberReference style insertString getDocument CatchClause CatchClauseParameter BadLocationException e	1
MethodDeclaration Modifier protected Annotation Override setUp Exception StatementExpression SuperMethodInvocation setUp StatementExpression Assignment MemberReference runtime MethodInvocation Ruby newInstance = StatementExpression MethodInvocation runtime MethodInvocation ClassCreator ReferenceType ArrayList init	0
MethodDeclaration Modifier public invokeDynamicSelfNoBlockSpecificArity FormalParameter ReferenceType String name FormalParameter ReferenceType ArgumentsCallback argsCallback StatementExpression MethodInvocation methodCompiler MethodInvocation MethodInvocation MemberReference methodCompiler MemberReference name getScriptCompiler StatementExpression MethodInvocation methodCompiler loadThreadContext StatementExpression MethodInvocation methodCompiler loadSelf StatementExpression MethodInvocation method dup StatementExpression MethodInvocation method MethodInvocation ClassReference ReferenceType IRubyObject p Literal MethodInvocation ClassReference ReferenceType RubyClass sig StatementExpression MethodInvocation method MemberReference name ldc StatementExpression MethodInvocation argsCallback MemberReference methodCompiler call SwitchStatement MethodInvocation argsCallback SwitchStatementCase Literal 1 StatementExpression MethodInvocation method MethodInvocation ClassReference ReferenceType DynamicMethod p Literal "call" MethodInvocation ClassReference ReferenceType IRubyObject ClassReference ReferenceType ThreadContext ClassReference ReferenceType IRubyObject ClassReference ReferenceType RubyModule ClassReference ReferenceType String ClassReference ReferenceType IRubyObject sig invokevirtual BreakStatement SwitchStatementCase Literal 2 StatementExpression MethodInvocation method MethodInvocation ClassReference ReferenceType DynamicMethod p Literal "call" MethodInvocation ClassReference ReferenceType IRubyObject ClassReference ReferenceType ThreadContext ClassReference ReferenceType IRubyObject ClassReference ReferenceType RubyModule ClassReference ReferenceType String ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject sig invokevirtual BreakStatement SwitchStatementCase Literal 3 StatementExpression MethodInvocation method MethodInvocation ClassReference ReferenceType DynamicMethod p Literal "call" MethodInvocation ClassReference ReferenceType IRubyObject ClassReference ReferenceType ThreadContext ClassReference ReferenceType IRubyObject ClassReference ReferenceType RubyModule ClassReference ReferenceType String ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject sig invokevirtual BreakStatement	1
MethodDeclaration Modifier final free IfStatement MemberReference ! BlockStatement StatementExpression Assignment MemberReference Literal true = StatementExpression MethodInvocation MemberReference storage freeMemory	1
MethodDeclaration Modifier public ReferenceType RubyClass getArray ReturnStatement MemberReference arrayClass	0
MethodDeclaration Modifier public BasicType boolean isConstant ReturnStatement MethodInvocation isConstant	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator result MethodInvocation MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference getValueNode IfStatement BinaryOperation == MemberReference constNode Literal null BlockStatement ReturnStatement MethodInvocation context MemberReference name MemberReference result IfStatement BinaryOperation == Cast ReferenceType Node MemberReference constNode MemberReference NodeType COLON2NODE BlockStatement LocalVariableDeclaration ReferenceType Node VariableDeclarator leftNode Cast ReferenceType Colon2Node MemberReference constNode AssertStatement BinaryOperation != MemberReference leftNode Literal null Literal is not null" LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator obj MethodInvocation leftNode MemberReference runtime MemberReference context MemberReference self MemberReference ReturnStatement MethodInvocation context MethodInvocation constNode getName MemberReference obj MemberReference result BlockStatement ReturnStatement MethodInvocation context MethodInvocation constNode getName MemberReference result	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal "first" Literal ReferenceType IRubyObject first ReturnStatement MemberReference begin	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject getValue FormalParameter BasicType int offset FormalParameter BasicType int depth IfStatement BinaryOperation > MemberReference depth Literal 0 BlockStatement ReturnStatement MethodInvocation parent MemberReference offset BinaryOperation - MemberReference depth Literal 1 getValue AssertStatement BinaryOperation < MemberReference offset MemberReference SIZE MemberReference SIZE_ERROR SwitchStatement MemberReference offset SwitchStatementCase Literal 0 ReturnStatement MemberReference variableValueZero SwitchStatementCase Literal 1 ReturnStatement MemberReference variableValueOne SwitchStatementCase ThrowStatement ClassCreator ReferenceType RuntimeException MemberReference SIZE_ERROR	1
MethodDeclaration Modifier public ReferenceType Object setValue FormalParameter ReferenceType Object value LocalVariableDeclaration ReferenceType Object VariableDeclarator result This MemberReference value StatementExpression Assignment This MemberReference value MemberReference value = ReturnStatement MemberReference result	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject other ReturnStatement MethodInvocation RubyFixnum MethodInvocation context getRuntime MethodInvocation value MethodInvocation other MemberReference value convertToString caseInsensitiveCmp newFixnum	0
MethodDeclaration Modifier public ReferenceType Object case272_line1060 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop LocalVariableDeclaration ReferenceType ISourcePosition VariableDeclarator position MethodInvocation Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals getPosition IfStatement BinaryOperation == Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals Literal null BlockStatement StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType ZArrayNode MemberReference position = BlockStatement StatementExpression Assignment MemberReference yyVal Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals = StatementExpression Cast ReferenceType ISourcePositionHolder MemberReference yyVal ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public load FormalParameter ReferenceType Ruby runtime FormalParameter BasicType boolean wrap StatementExpression MethodInvocation runtime MemberReference script	0
MethodDeclaration Modifier public final StatementExpression Assignment MemberReference flags MemberReference ~ &=	0
MethodDeclaration Modifier public FormalParameter ReferenceType Node node FormalParameter ReferenceType BodyCompiler context FormalParameter BasicType boolean expr LocalVariableDeclaration ReferenceType ToAryNode VariableDeclarator Cast ReferenceType ToAryNode MemberReference node StatementExpression MethodInvocation MethodInvocation getValue MemberReference context Literal true compile StatementExpression MethodInvocation context aryToAry IfStatement MemberReference ! expr StatementExpression MethodInvocation context consumeCurrentValue	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "BigDecimal" ElementValuePair rest Literal true ElementValuePair module Literal true ElementValuePair visibility MemberReference Visibility PRIVATE ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args ReturnStatement MethodInvocation RubyBigDecimal MemberReference recv MemberReference args MemberReference Block NULL_BLOCK	0
MethodDeclaration Modifier public ReferenceType DynamicMethod LocalVariableDeclaration ReferenceType DynamicMethod VariableDeclarator method MemberReference box IfStatement BinaryOperation instanceof MemberReference method ReferenceType BlockStatement ReturnStatement MemberReference method ReturnStatement This	0
MethodDeclaration Modifier public ReferenceType RubyClass ReturnStatement MemberReference	0
MethodDeclaration Modifier public setMethodVisibility FormalParameter ReferenceType IRubyObject methods FormalParameter ReferenceType Visibility visibility IfStatement BinaryOperation && BinaryOperation >= MethodInvocation MethodInvocation getSafeLevel getRuntime Literal 4 MethodInvocation ! isTaint BlockStatement ThrowStatement MethodInvocation MethodInvocation Literal "Insecure: can't change method newSecurityError getRuntime ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference methods length MemberReference ++ i BlockStatement StatementExpression MethodInvocation MemberReference ArraySelector MemberReference i MethodInvocation asJavaString methods MemberReference visibility	1
MethodDeclaration Modifier public ReferenceType DynamicScope ReturnStatement MemberReference ArraySelector BinaryOperation - MemberReference Literal 1	0
MethodDeclaration * versions for Not to * @deprecated Use the versions with zero or one */ Modifier public Annotation Deprecated ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block unusedBlock SwitchStatement MemberReference args length SwitchStatementCase Literal 0 ReturnStatement This SwitchStatementCase Literal 1 ReturnStatement MethodInvocation MemberReference ArraySelector Literal 0 args SwitchStatementCase StatementExpression MethodInvocation Arity MethodInvocation getRuntime MemberReference args length Literal 0 Literal 1 raiseArgumentError ReturnStatement Literal null	1
MethodDeclaration Modifier public static ReferenceType FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType String filename FormalParameter BasicType boolean LocalVariableDeclaration ReferenceType VariableDeclarator stat ClassCreator ReferenceType MemberReference runtime MethodInvocation runtime StatementExpression MethodInvocation stat MemberReference filename MemberReference setup ReturnStatement MemberReference stat	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ReferenceType IRubyObject orig_name IfStatement MemberReference closed BlockStatement LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator errorClass MethodInvocation MethodInvocation Literal "Zlib" fastGetModule MethodInvocation Literal fastGetClass MethodInvocation Literal fastGetClass getRuntime ThrowStatement ClassCreator ReferenceType RaiseException MethodInvocation RubyException MethodInvocation getRuntime MemberReference errorClass Literal stream" newException ReturnStatement TernaryExpression BinaryOperation == MemberReference orig_name Literal null MethodInvocation MethodInvocation getNil getRuntime MethodInvocation MethodInvocation MemberReference orig_name newString getRuntime	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair required Literal 1 ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject other IfStatement BinaryOperation && BinaryOperation instanceof MemberReference other ReferenceType RubyInteger BinaryOperation == Cast ReferenceType RubyInteger MemberReference other Literal 0 BlockStatement ThrowStatement MethodInvocation context MethodInvocation newZeroDivisionError getRuntime ReturnStatement MethodInvocation MemberReference context MemberReference other	0
MethodDeclaration Modifier public ReferenceType Object case506_line1942 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop IfStatement BinaryOperation instanceof Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals ReferenceType SelfNode BlockStatement StatementExpression MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals checkExpression StatementExpression Assignment MemberReference yyVal Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Block block ReturnStatement MethodInvocation body MemberReference context MemberReference MemberReference type MemberReference block call	0
MethodDeclaration Modifier private ReferenceType IRubyObject getUndefConstant FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType String internedName FormalParameter ReferenceType RubyModule object IfStatement BinaryOperation == MethodInvocation MemberReference runtime MemberReference internedName Literal null ReturnStatement Literal null ReturnStatement MethodInvocation MemberReference runtime MemberReference internedName MemberReference object getConstantInner	1
MethodDeclaration Modifier public static BasicType int getNewFileno ReturnStatement MethodInvocation incrementAndGet	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "initialize" ElementValuePair required Literal 2 ElementValuePair frame Literal true ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 FormalParameter ReferenceType Block unusedBlock LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation getRuntime IfStatement MethodInvocation ! arg1 Literal "to_str" respondsTo BlockStatement ThrowStatement MethodInvocation runtime BinaryOperation + BinaryOperation + Literal "can't convert " MethodInvocation arg1 getMetaClass Literal " into String" newTypeError IfStatement MethodInvocation ! arg2 Literal "to_str" respondsTo BlockStatement ThrowStatement MethodInvocation runtime BinaryOperation + BinaryOperation + Literal "can't convert " MethodInvocation arg2 getMetaClass Literal " into String" newTypeError LocalVariableDeclaration ReferenceType String VariableDeclarator to MethodInvocation arg1 MethodInvocation toString convertToString LocalVariableDeclaration ReferenceType String VariableDeclarator from MethodInvocation arg2 MethodInvocation toString convertToString TryStatement StatementExpression Assignment MemberReference MethodInvocation Charset MethodInvocation newDecoder MethodInvocation MemberReference from forName = StatementExpression Assignment MemberReference MethodInvocation Charset MethodInvocation newEncoder MethodInvocation MemberReference to forName = IfStatement MethodInvocation ! MemberReference from StatementExpression MethodInvocation MemberReference CodingErrorAction onUnmappableCharacter IfStatement MethodInvocation ! MemberReference to StatementExpression MethodInvocation MemberReference CodingErrorAction onUnmappableCharacter CatchClause CatchClauseParameter e ThrowStatement MethodInvocation runtime Literal "invalid encoding" CatchClause CatchClauseParameter UnsupportedCharsetException e ThrowStatement MethodInvocation runtime Literal "invalid encoding" CatchClause CatchClauseParameter Exception e ThrowStatement MethodInvocation runtime MethodInvocation e toString newSystemCallError ReturnStatement This	1
MethodDeclaration Modifier public BasicType int ReturnStatement MemberReference min	0
MethodDeclaration Modifier public Annotation Deprecated ReferenceType Callback getFastSingletonMethod FormalParameter ReferenceType String method FormalParameter ReferenceType Class arg1 FormalParameter ReferenceType Class arg2 LocalVariableDeclaration ReferenceType String VariableDeclarator mname BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation type getName Literal "Callback$" MemberReference method Literal "_FS2" LocalVariableDeclaration ReferenceType String VariableDeclarator mnamePath BinaryOperation + BinaryOperation + BinaryOperation + MemberReference typePath Literal "Callback$" MemberReference method Literal "_FS2" SynchronizedStatement MethodInvocation runtime getJRubyClassLoader LocalVariableDeclaration ReferenceType Class VariableDeclarator c MethodInvocation MemberReference mname tryClass TryStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator descriptor ArrayCreator ReferenceType Class ArrayInitializer MemberReference arg1 MemberReference arg2 IfStatement BinaryOperation == MemberReference c Literal null BlockStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator signature ArrayCreator ReferenceType Class ArrayInitializer MemberReference RubyKernel IRUBY_OBJECT MemberReference arg1 MemberReference arg2 LocalVariableDeclaration ReferenceType Class VariableDeclarator ret MethodInvocation MemberReference method MemberReference signature getReturnClass LocalVariableDeclaration ReferenceType ClassWriter VariableDeclarator cw MethodInvocation MemberReference mnamePath createCtorFast LocalVariableDeclaration ReferenceType MethodVisitor VariableDeclarator mv MethodInvocation MemberReference cw startCallSFast StatementExpression MethodInvocation MemberReference mv MemberReference METHOD_ARGS_INDEX Literal 2 MemberReference descriptor loadArguments StatementExpression MethodInvocation mv MemberReference INVOKESTATIC MemberReference typePath MemberReference method MethodInvocation MemberReference ret MemberReference signature sig visitMethodInsn StatementExpression MethodInvocation mv MemberReference ARETURN visitInsn StatementExpression MethodInvocation mv Literal 4 Literal 4 visitMaxs StatementExpression Assignment MemberReference c MethodInvocation MemberReference cw MemberReference mv MemberReference mname endCall = LocalVariableDeclaration ReferenceType FastInvocationCallback VariableDeclarator ic Cast ReferenceType FastInvocationCallback MethodInvocation c newInstance StatementExpression MethodInvocation ic MethodInvocation Arity twoArguments setArity StatementExpression MethodInvocation ic MemberReference descriptor setArgumentTypes StatementExpression MethodInvocation ic MemberReference method setJavaName StatementExpression MethodInvocation ic Literal true setSingleton ReturnStatement MemberReference ic CatchClause CatchClauseParameter IllegalArgumentException e ThrowStatement MemberReference e CatchClause CatchClauseParameter Exception e ThrowStatement ClassCreator ReferenceType IllegalArgumentException MethodInvocation e getMessage	1
MethodDeclaration Modifier public FormalParameter ReferenceType BranchCallback condition FormalParameter ReferenceType BranchCallback body FormalParameter BasicType boolean LocalVariableDeclaration ReferenceType String VariableDeclarator mname MethodInvocation LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation MemberReference mname StatementExpression MethodInvocation MemberReference condition MemberReference body MemberReference	0
MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation context	0
MethodDeclaration Modifier public final BasicType boolean ReturnStatement Literal true	0
MethodDeclaration * Check the syntax of a Ruby variable, including that * than zero and starts with either an @ or a * */ Modifier final public static BasicType boolean isRubyVariable FormalParameter ReferenceType String name LocalVariableDeclaration BasicType char VariableDeclarator c ReturnStatement BinaryOperation && BinaryOperation > MethodInvocation name length Literal 0 BinaryOperation || BinaryOperation == Assignment MemberReference c MethodInvocation name Literal 0 charAt = Literal '@' BinaryOperation && BinaryOperation <= MemberReference c Literal 'Z' BinaryOperation >= MemberReference c Literal 'A'	1
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject set FormalParameter ReferenceType IRubyObject newValue IfStatement MethodInvocation newValue isNil BlockStatement StatementExpression MethodInvocation runtime MemberReference newValue BlockStatement StatementExpression MethodInvocation runtime MethodInvocation runtime MethodInvocation newValue isTrue newBoolean ReturnStatement MemberReference newValue	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "*" ReferenceType IRubyObject op_mul FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject other IfStatement BinaryOperation || BinaryOperation instanceof MemberReference other ReferenceType RubyFixnum BinaryOperation instanceof MemberReference other ReferenceType RubyBignum BlockStatement ReturnStatement MethodInvocation MemberReference context MemberReference num MemberReference den MemberReference other MethodInvocation RubyFixnum MethodInvocation context getRuntime one Literal true f_muldiv IfStatement BinaryOperation instanceof MemberReference other ReferenceType RubyFloat BlockStatement ReturnStatement MethodInvocation MemberReference context MethodInvocation MemberReference context This f_to_f MemberReference other f_mul IfStatement BinaryOperation instanceof MemberReference other ReferenceType RubyRational BlockStatement LocalVariableDeclaration ReferenceType RubyRational VariableDeclarator otherRational Cast ReferenceType RubyRational MemberReference other ReturnStatement MethodInvocation MemberReference context MemberReference num MemberReference den MemberReference otherRational num MemberReference otherRational den Literal true f_muldiv ReturnStatement MethodInvocation MemberReference context Literal "*" MemberReference other coerceBin	1
MethodDeclaration Modifier public static ReferenceType IRubyObject f_real_p FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject x ReturnStatement MethodInvocation x MemberReference context Literal "real?" callMethod	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "rindex" ElementValuePair frame Literal true ReferenceType IRubyObject rindex FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject obj FormalParameter ReferenceType Block unused IfStatement MethodInvocation unused isGiven StatementExpression MethodInvocation context MethodInvocation getWarnings MethodInvocation MemberReference ID BLOCK_UNUSED Literal "given block not used" warn getRuntime ReturnStatement MethodInvocation MemberReference context MemberReference obj rindex	1
MethodDeclaration Modifier public call FormalParameter ReferenceType BodyCompiler context IfStatement BinaryOperation == MethodInvocation node getNodeType MemberReference NodeType ARRAYNODE BlockStatement LocalVariableDeclaration ReferenceType ArrayNode VariableDeclarator arrayNode Cast ReferenceType ArrayNode MemberReference node IfStatement MethodInvocation arrayNode BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Node VariableDeclarator n MethodInvocation arrayNode childNodes BlockStatement StatementExpression MethodInvocation MemberReference n MemberReference context Literal true compile BlockStatement StatementExpression MethodInvocation MemberReference arrayNode MemberReference context Literal true compile BlockStatement StatementExpression MethodInvocation MemberReference node MemberReference context Literal true compile	0
MethodDeclaration Modifier public synchronized BasicType int IOException BadDescriptorException IfStatement MemberReference eof BlockStatement ReturnStatement Literal - 1 StatementExpression MethodInvocation checkReadable LocalVariableDeclaration BasicType int VariableDeclarator c MethodInvocation read IfStatement BinaryOperation == MemberReference c Literal - 1 BlockStatement StatementExpression Assignment MemberReference eof Literal true = ReturnStatement MemberReference c ReturnStatement BinaryOperation & MemberReference c Literal 0xff	0
MethodDeclaration Modifier public ReferenceType IR_Method ReturnStatement MethodInvocation MethodInvocation getReceiver	0
MethodDeclaration Modifier public call FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation MethodInvocation getValueNode MemberReference context Literal true compile	0
MethodDeclaration Modifier public ReferenceType Object case317_line1201 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType BreakNode Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals MemberReference NilImplicitNode NIL = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public ReferenceType DynamicScope IfStatement BinaryOperation == MethodInvocation staticScope getLocalScope MemberReference staticScope BlockStatement ReturnStatement This BlockStatement ReturnStatement MethodInvocation parent	0
MethodDeclaration Modifier public ReferenceType Colon3Node new_colon3 FormalParameter ReferenceType ISourcePosition position FormalParameter ReferenceType String name ReturnStatement ClassCreator ReferenceType Colon3Node MemberReference position MemberReference name	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair compat MemberReference CompatVersion RUBY1_8 Annotation Override ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject other IfStatement BinaryOperation instanceof MemberReference other ReferenceType RubyFixnum BlockStatement ReturnStatement MethodInvocation RubyFloat MethodInvocation context getRuntime BinaryOperation / Cast BasicType double MemberReference value Cast BasicType double Cast ReferenceType RubyFixnum MemberReference other newFloat ReturnStatement MethodInvocation MemberReference context Literal MemberReference other coerceBin	0
MethodDeclaration Modifier private static FormalParameter ReferenceType Type selfType FormalParameter ReferenceType cw LocalVariableDeclaration ReferenceType GeneratorAdapter VariableDeclarator ClassCreator ReferenceType GeneratorAdapter MemberReference ACC_PUBLIC ClassCreator ReferenceType org ReferenceType ReferenceType ReferenceType commons ReferenceType Method Literal MemberReference MemberReference Literal null MemberReference MemberReference cw StatementExpression MethodInvocation loadThis StatementExpression MethodInvocation MemberReference selfType MemberReference MemberReference getField StatementExpression MethodInvocation returnValue StatementExpression MethodInvocation endMethod	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator receiver MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator value MethodInvocation MemberReference context MemberReference self MemberReference receiver call IfStatement BinaryOperation == MethodInvocation getOperatorName Literal "||" BlockStatement IfStatement MethodInvocation value isTrue BlockStatement ReturnStatement MethodInvocation ASTInterpreter MemberReference context MemberReference value StatementExpression Assignment MemberReference value MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference = IfStatement BinaryOperation == MethodInvocation getOperatorName Literal "&&" BlockStatement IfStatement MethodInvocation ! value isTrue BlockStatement ReturnStatement MethodInvocation ASTInterpreter MemberReference context MemberReference value StatementExpression Assignment MemberReference value MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference = BlockStatement StatementExpression Assignment MemberReference value MethodInvocation MemberReference context MemberReference self MemberReference value MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference call = StatementExpression MethodInvocation MemberReference context MemberReference self MemberReference receiver MemberReference value call ReturnStatement MethodInvocation ASTInterpreter MemberReference context MemberReference value	0
MethodDeclaration Modifier private ReferenceType FormalParameter ReferenceType Method method IfStatement MethodInvocation Modifier MethodInvocation method getModifiers isStatic BlockStatement ReturnStatement ClassCreator ReferenceType MethodInvocation metaClass getMetaClass MemberReference method BlockStatement ReturnStatement ClassCreator ReferenceType MemberReference metaClass MemberReference method	0
MethodDeclaration Modifier public Annotation Override ReferenceType RubyFixnum id IfStatement BinaryOperation == BinaryOperation & MemberReference flags MemberReference Literal 0 BlockStatement ReturnStatement MethodInvocation RubyFixnum MethodInvocation getRuntime Literal 2 newFixnum BlockStatement ReturnStatement MethodInvocation RubyFixnum MethodInvocation getRuntime zero	0
MethodDeclaration Modifier public setVisibility FormalParameter ReferenceType Visibility visibility StatementExpression Assignment This MemberReference visibility MemberReference visibility =	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "to_a" Annotation Override ReferenceType RubyArray to_a ReturnStatement MethodInvocation MethodInvocation getRuntime Literal 0	0
MethodDeclaration Modifier public static ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType String internedName LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator result MethodInvocation self MethodInvocation MemberReference internedName fastGetInstanceVariable getInstanceVariables IfStatement BinaryOperation != MemberReference result Literal null ReturnStatement MemberReference result IfStatement MethodInvocation runtime isVerbose StatementExpression MethodInvocation MemberReference runtime MemberReference internedName ReturnStatement MethodInvocation runtime getNil	1
MethodDeclaration Modifier private ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject value FormalParameter ReferenceType Block block FormalParameter BasicType boolean checkArity LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator receiver MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference block IfStatement BinaryOperation == MemberReference argsNode Literal null BlockStatement StatementExpression MethodInvocation RuntimeHelpers MemberReference context MemberReference receiver MemberReference name MemberReference value invoke BlockStatement LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator args Cast ReferenceType RubyArray MethodInvocation argsNode MemberReference runtime MemberReference context MemberReference self MemberReference block StatementExpression MethodInvocation args MemberReference value append StatementExpression MethodInvocation RuntimeHelpers MemberReference context MemberReference receiver MemberReference name MethodInvocation args toJavaArray invoke ReturnStatement MethodInvocation runtime getNil	1
MethodDeclaration Modifier public final ReferenceType IRubyObject eltInternal FormalParameter BasicType int offset ReturnStatement MemberReference ArraySelector BinaryOperation + MemberReference begin MemberReference offset values	0
MethodDeclaration Modifier public ifNull FormalParameter ReferenceType Object gotoToken StatementExpression MethodInvocation method Cast ReferenceType Label MemberReference gotoToken	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ReferenceType IRubyObject reset StatementExpression MethodInvocation check StatementExpression Assignment MemberReference pos Literal 0 = StatementExpression MethodInvocation ReturnStatement This	0
MethodDeclaration Modifier public ReferenceType String getFile ReturnStatement MemberReference file	0
MethodDeclaration Modifier protected ReferenceType Library FormalParameter ReferenceType SearchState state FormalParameter ReferenceType String baseName FormalParameter ReferenceType SuffixType suffixType LocalVariableDeclaration ReferenceType Library VariableDeclarator library Literal null SwitchStatement MemberReference suffixType SwitchStatementCase Both StatementExpression Assignment MemberReference library MethodInvocation MemberReference state MemberReference baseName MemberReference SuffixType Source findBuiltinLibrary = IfStatement BinaryOperation == MemberReference library Literal null StatementExpression Assignment MemberReference library MethodInvocation MemberReference state MethodInvocation MemberReference state MemberReference baseName MemberReference SuffixType Source tryResourceFromJarURL createLibrary = IfStatement BinaryOperation == MemberReference library Literal null StatementExpression Assignment MemberReference library MethodInvocation MemberReference state MethodInvocation MemberReference state MemberReference baseName MemberReference SuffixType Source tryResourceFromLoadPathOrURL createLibrary = IfStatement BinaryOperation == MemberReference library Literal null StatementExpression Assignment MemberReference library MethodInvocation MemberReference state MemberReference baseName MemberReference SuffixType Extension findBuiltinLibrary = IfStatement BinaryOperation == MemberReference library Literal null StatementExpression Assignment MemberReference library MethodInvocation MemberReference state MethodInvocation MemberReference state MemberReference baseName MemberReference SuffixType Extension tryResourceFromJarURL createLibrary = IfStatement BinaryOperation == MemberReference library Literal null StatementExpression Assignment MemberReference library MethodInvocation MemberReference state MethodInvocation MemberReference state MemberReference baseName MemberReference SuffixType Extension tryResourceFromLoadPathOrURL createLibrary = BreakStatement SwitchStatementCase Source Extension StatementExpression Assignment MemberReference library MethodInvocation MemberReference state MemberReference baseName MemberReference suffixType findBuiltinLibrary = IfStatement BinaryOperation == MemberReference library Literal null StatementExpression Assignment MemberReference library MethodInvocation MemberReference state MethodInvocation MemberReference state MemberReference baseName MemberReference suffixType tryResourceFromJarURL createLibrary = IfStatement BinaryOperation == MemberReference library Literal null StatementExpression Assignment MemberReference library MethodInvocation MemberReference state MethodInvocation MemberReference state MemberReference baseName MemberReference suffixType tryResourceFromLoadPathOrURL createLibrary = BreakStatement SwitchStatementCase Neither StatementExpression Assignment MemberReference library MethodInvocation MemberReference state MethodInvocation MemberReference state MemberReference baseName MemberReference SuffixType Neither tryResourceFromJarURL createLibrary = IfStatement BinaryOperation == MemberReference library Literal null StatementExpression Assignment MemberReference library MethodInvocation MemberReference state MethodInvocation MemberReference state MemberReference baseName MemberReference SuffixType Neither tryResourceFromLoadPathOrURL createLibrary = BreakStatement ReturnStatement MemberReference library	1
MethodDeclaration Modifier public ReferenceType IRubyObject convert FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType Object object IfStatement BinaryOperation == MemberReference object Literal null ReturnStatement MethodInvocation runtime getNil ReturnStatement MethodInvocation RubyBignum MemberReference runtime Cast ReferenceType BigInteger MemberReference object newBignum	1
MethodDeclaration Modifier private static BasicType int raisePreprocessError FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ByteList str FormalParameter ReferenceType String err FormalParameter ReferenceType ErrorMode mode SwitchStatement MemberReference mode SwitchStatementCase StatementExpression MethodInvocation MemberReference runtime MemberReference str MemberReference str encoding Literal 0 MemberReference err raiseRegexpError19 SwitchStatementCase PREPROCESS ThrowStatement MethodInvocation runtime BinaryOperation + Literal "regexp preprocess failed: " MemberReference err newArgumentError SwitchStatementCase DESC ReturnStatement Literal 0	1
MethodDeclaration Modifier public final BasicType int length ReturnStatement MemberReference length	1
MethodDeclaration Modifier public visit FormalParameter ReferenceType IRubyObject key FormalParameter ReferenceType IRubyObject value StatementExpression MethodInvocation block MemberReference context MemberReference value yield	0
MethodDeclaration Modifier private LocalVariableDeclaration ReferenceType VariableDeclarator cv MethodInvocation getClassVisitor StatementExpression Assignment MemberReference clinitMethod ClassCreator ReferenceType SkinnyMethodAdapter MethodInvocation cv BinaryOperation | MemberReference ACC_PUBLIC MemberReference ACC_STATIC Literal MethodInvocation MemberReference Void TYPE sig Literal null Literal null visitMethod = StatementExpression MethodInvocation clinitMethod start IfStatement BinaryOperation != MemberReference Literal null BlockStatement TryStatement StatementExpression MethodInvocation Literal null MemberReference clinitMethod MethodInvocation getClassname invoke CatchClause CatchClauseParameter IllegalAccessException ex StatementExpression MethodInvocation ex printStackTrace CatchClause CatchClauseParameter IllegalArgumentException ex StatementExpression MethodInvocation ex printStackTrace CatchClause CatchClauseParameter InvocationTargetException ex StatementExpression MethodInvocation ex printStackTrace	1
MethodDeclaration Modifier public call FormalParameter ReferenceType BodyCompiler context IfStatement BinaryOperation != MethodInvocation preExeNode getBodyNode Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation preExeNode getBodyNode MemberReference context Literal true compile BlockStatement StatementExpression MethodInvocation context loadNil	0
MethodDeclaration Modifier public ReferenceType Object setValue FormalParameter ReferenceType Object o ReturnStatement MethodInvocation entry MethodInvocation JavaUtil MemberReference runtime MemberReference o convertJavaToUsableRubyObject setValue	0
MethodDeclaration Modifier public Annotation JRubyMethod ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context ReturnStatement MethodInvocation context MethodInvocation MemberReference path Literal false MethodInvocation getRuntime	0
MethodDeclaration Modifier final public static ReferenceType Encoding areCompatible FormalParameter ReferenceType IRubyObject obj1 FormalParameter ReferenceType IRubyObject obj2 IfStatement BinaryOperation && BinaryOperation instanceof MemberReference obj1 ReferenceType EncodingCapable BinaryOperation instanceof MemberReference obj2 ReferenceType EncodingCapable BlockStatement LocalVariableDeclaration ReferenceType Encoding VariableDeclarator enc1 Cast ReferenceType EncodingCapable MemberReference obj1 LocalVariableDeclaration ReferenceType Encoding VariableDeclarator enc2 Cast ReferenceType EncodingCapable MemberReference obj2 IfStatement BinaryOperation == MemberReference enc1 MemberReference enc2 ReturnStatement MemberReference enc1 IfStatement BinaryOperation && BinaryOperation instanceof MemberReference obj2 ReferenceType RubyString BinaryOperation == Cast ReferenceType RubyString MemberReference obj2 Literal 0 ReturnStatement MemberReference enc1 IfStatement BinaryOperation && BinaryOperation instanceof MemberReference obj1 ReferenceType RubyString BinaryOperation == Cast ReferenceType RubyString MemberReference obj1 Literal 0 ReturnStatement MemberReference enc2 IfStatement BinaryOperation || MethodInvocation ! enc1 isAsciiCompatible MethodInvocation ! enc2 isAsciiCompatible ReturnStatement Literal null IfStatement BinaryOperation && BinaryOperation instanceof MemberReference obj2 ReferenceType RubyString BinaryOperation instanceof MemberReference enc2 ReferenceType USASCIIEncoding ReturnStatement MemberReference enc1 IfStatement BinaryOperation && BinaryOperation instanceof MemberReference obj1 ReferenceType RubyString BinaryOperation instanceof MemberReference enc1 ReferenceType USASCIIEncoding ReturnStatement MemberReference enc2 IfStatement BinaryOperation instanceof MemberReference obj1 ReferenceType RubyString BlockStatement LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator objTmp MemberReference obj1 StatementExpression Assignment MemberReference obj1 MemberReference obj2 = StatementExpression Assignment MemberReference obj1 MemberReference objTmp = LocalVariableDeclaration ReferenceType Encoding VariableDeclarator encTmp MemberReference enc1 StatementExpression Assignment MemberReference enc1 MemberReference enc2 = StatementExpression Assignment MemberReference enc2 MemberReference encTmp = IfStatement BinaryOperation instanceof MemberReference obj1 ReferenceType RubyString BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator cr1 Cast ReferenceType RubyString MemberReference obj1 IfStatement BinaryOperation instanceof MemberReference obj2 ReferenceType RubyString BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator cr2 Cast ReferenceType RubyString MemberReference obj2 ReturnStatement MethodInvocation MemberReference enc1 MemberReference cr1 MemberReference enc2 MemberReference cr2 areCompatible IfStatement BinaryOperation == MemberReference cr1 MemberReference StringSupport CR_7BIT ReturnStatement MemberReference enc2 ReturnStatement Literal null	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "none?" ElementValuePair frame Literal true ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter Modifier final ReferenceType Block block LocalVariableDeclaration Modifier final ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration Modifier final ReferenceType ThreadContext VariableDeclarator localContext MemberReference context TryStatement IfStatement MethodInvocation block isGiven BlockStatement StatementExpression MethodInvocation MemberReference runtime MemberReference context MemberReference self ClassCreator ReferenceType BlockCallback MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext ctx FormalParameter ReferenceType IRubyObject largs FormalParameter ReferenceType Block blk StatementExpression MethodInvocation MemberReference localContext MemberReference ctx Literal "none?" checkContext LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator larg MethodInvocation MemberReference runtime MemberReference largs checkArgs IfStatement MethodInvocation block MethodInvocation isTrue MemberReference ctx MemberReference larg yield ThrowStatement MemberReference JumpException SPECIAL_JUMP ReturnStatement MethodInvocation runtime getNil callEach BlockStatement StatementExpression MethodInvocation MemberReference runtime MemberReference context MemberReference self ClassCreator ReferenceType BlockCallback MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext ctx FormalParameter ReferenceType IRubyObject largs FormalParameter ReferenceType Block blk StatementExpression MethodInvocation MemberReference localContext MemberReference ctx Literal "none?" checkContext LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator larg MethodInvocation MemberReference runtime MemberReference largs checkArgs IfStatement MethodInvocation larg isTrue ThrowStatement MemberReference JumpException SPECIAL_JUMP ReturnStatement MethodInvocation runtime getNil callEach CatchClause CatchClauseParameter JumpException.SpecialJump sj ReturnStatement MethodInvocation runtime getFalse ReturnStatement MethodInvocation runtime getTrue	1
MethodDeclaration Modifier public ReferenceType Block FormalParameter ReferenceType StatementExpression Assignment MemberReference MethodInvocation clone = ReturnStatement ClassCreator ReferenceType Block This MemberReference	0
MethodDeclaration Modifier public BasicType boolean isBlank ReturnStatement BinaryOperation == MemberReference length Literal 0	0
MethodDeclaration Modifier final protected invoke FormalParameter ReferenceType ReferenceType Buffer buffer FormalParameter ReferenceType Object recv LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator params ArrayCreator ReferenceType IRubyObject MemberReference length ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference params length MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i params MethodInvocation MemberReference runtime MemberReference ArraySelector MemberReference i parameterTypes MemberReference buffer MemberReference i fromNative = LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator retVal IfStatement BinaryOperation instanceof MemberReference recv ReferenceType RubyProc BlockStatement StatementExpression Assignment MemberReference retVal Cast ReferenceType RubyProc MemberReference recv = IfStatement BinaryOperation instanceof MemberReference recv ReferenceType Block BlockStatement StatementExpression Assignment MemberReference retVal Cast ReferenceType Block MemberReference recv = BlockStatement StatementExpression Assignment MemberReference retVal Cast ReferenceType IRubyObject MemberReference recv = StatementExpression MethodInvocation MemberReference runtime MemberReference returnType MemberReference buffer MemberReference retVal	0
MethodDeclaration Modifier public ReferenceType Object case208_line827 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals Literal "~" getOperatorCallNode = ReturnStatement MemberReference yyVal	1
MethodDeclaration finish IfStatement BinaryOperation != MemberReference Literal null BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Runnable VariableDeclarator r MemberReference BlockStatement StatementExpression MethodInvocation r run	0
MethodDeclaration Modifier public ReferenceType ReturnStatement MemberReference scope	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ReferenceType RubyFixnum arity ReturnStatement MethodInvocation MethodInvocation MethodInvocation block MethodInvocation getValue arity newFixnum getRuntime	0
MethodDeclaration Modifier private ReferenceType IRubyObject callBlock FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject caller FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator selfType MethodInvocation MemberReference context MemberReference self pollAndGetClass LocalVariableDeclaration ReferenceType CacheEntry VariableDeclarator myCache MemberReference cache IfStatement MethodInvocation myCache MemberReference selfType BlockStatement ReturnStatement MethodInvocation MemberReference context MemberReference self MemberReference selfType MemberReference methodName MemberReference block call ReturnStatement MethodInvocation MemberReference caller MemberReference selfType MemberReference block MemberReference context MemberReference self	0
MethodDeclaration Modifier private ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Regex pattern FormalParameter ReferenceType Matcher matcher FormalParameter ReferenceType Encoding enc FormalParameter ReferenceType Block block FormalParameter BasicType int begin FormalParameter BasicType int FormalParameter BasicType int tuFlags LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration BasicType byte VariableDeclarator bytes MemberReference value bytes LocalVariableDeclaration BasicType int VariableDeclarator size MemberReference value realSize LocalVariableDeclaration ReferenceType RubyMatchData VariableDeclarator match Literal null LocalVariableDeclaration ReferenceType DynamicScope VariableDeclarator scope MethodInvocation context getCurrentScope LocalVariableDeclaration BasicType int VariableDeclarator end Literal 0 IfStatement BinaryOperation == MethodInvocation pattern Literal 0 BlockStatement WhileStatement BinaryOperation >= MethodInvocation matcher BinaryOperation + MemberReference begin MemberReference end MemberReference MemberReference Option NONE search Literal 0 BlockStatement StatementExpression Assignment MemberReference end MethodInvocation MemberReference matcher MemberReference enc MemberReference begin MemberReference = StatementExpression Assignment MemberReference match MethodInvocation RubyRegexp MemberReference context This MemberReference scope MemberReference matcher MemberReference pattern = LocalVariableDeclaration ReferenceType RubyString VariableDeclarator substr MethodInvocation MemberReference runtime MethodInvocation matcher getBegin BinaryOperation - MethodInvocation matcher getEnd MethodInvocation matcher getBegin makeShared StatementExpression MethodInvocation substr MemberReference tuFlags infectBy StatementExpression MethodInvocation match MemberReference tuFlags infectBy StatementExpression MethodInvocation block MemberReference context MemberReference substr yield StatementExpression MethodInvocation MemberReference bytes MemberReference size modifyCheck BlockStatement WhileStatement BinaryOperation >= MethodInvocation matcher BinaryOperation + MemberReference begin MemberReference end MemberReference MemberReference Option NONE search Literal 0 BlockStatement StatementExpression Assignment MemberReference end MethodInvocation MemberReference matcher MemberReference enc MemberReference begin MemberReference = StatementExpression Assignment MemberReference match MethodInvocation RubyRegexp MemberReference context This MemberReference scope MemberReference matcher MemberReference pattern = StatementExpression MethodInvocation match MemberReference tuFlags infectBy StatementExpression MethodInvocation block MemberReference context MethodInvocation MemberReference runtime MemberReference matcher MemberReference MemberReference tuFlags Literal false yield StatementExpression MethodInvocation MemberReference bytes MemberReference size modifyCheck StatementExpression MethodInvocation scope TernaryExpression BinaryOperation == MemberReference match Literal null MethodInvocation runtime getNil MemberReference match setBackRef ReturnStatement This	1
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType Object VariableDeclarator result Cast ReferenceType Object MethodInvocation handle TernaryExpression MemberReference isStatic Literal null Cast ReferenceType JavaObjectWrapper MemberReference self invoke ReturnStatement MethodInvocation MemberReference ruby MemberReference result javaToRuby	0
MethodDeclaration Modifier public Annotation Override ReferenceType String getAbsolutePath ReturnStatement MethodInvocation ClassCreator MethodInvocation getAbsolutePath ReferenceType File SuperMethodInvocation getPath	0
MethodDeclaration Modifier public static ReferenceType Node skipOverNewlines FormalParameter ReferenceType Node n WhileStatement BinaryOperation == MethodInvocation n getNodeType MemberReference NodeType NEWLINENODE StatementExpression Assignment MemberReference n Cast ReferenceType NewlineNode MemberReference n = ReturnStatement MemberReference n	1
MethodDeclaration * on Function we * value of function of * @param recv Math * @param x a real * @return for real number * @see * New expansion for the */ Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair required Literal 1 ElementValuePair module Literal true ElementValuePair visibility MemberReference Visibility PRIVATE ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType RubyFloat FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject x LocalVariableDeclaration BasicType double VariableDeclarator value Cast ReferenceType RubyFloat MethodInvocation RubyKernel MemberReference recv MemberReference x LocalVariableDeclaration BasicType double VariableDeclarator result MethodInvocation MemberReference value IfStatement BinaryOperation && MethodInvocation Double MemberReference result isInfinite BinaryOperation < MemberReference value Literal 0 BlockStatement StatementExpression Assignment MemberReference result MemberReference Double NaN = StatementExpression MethodInvocation MemberReference recv MemberReference result Literal ReturnStatement MethodInvocation RubyFloat MethodInvocation recv getRuntime MemberReference result newFloat	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 FormalParameter ReferenceType IRubyObject arg3 FormalParameter ReferenceType IRubyObject arg4 FormalParameter ReferenceType IRubyObject arg5 FormalParameter ReferenceType IRubyObject arg6 FormalParameter ReferenceType IRubyObject arg7 FormalParameter ReferenceType FormalParameter ReferenceType Type type ThrowStatement MethodInvocation context MethodInvocation MemberReference NOREASON MethodInvocation context MethodInvocation getNil getRuntime Literal "yield out of getRuntime	0
MethodDeclaration Modifier public setArgValues FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 FormalParameter ReferenceType IRubyObject arg3 FormalParameter ReferenceType IRubyObject arg4 FormalParameter ReferenceType IRubyObject arg5 FormalParameter ReferenceType IRubyObject arg6 StatementExpression MethodInvocation ArrayCreator ReferenceType IRubyObject ArrayInitializer MemberReference arg0 MemberReference arg1 MemberReference arg2 MemberReference arg3 MemberReference arg4 MemberReference arg5 MemberReference arg6 Literal 7 setArgValues	0
MethodDeclaration Modifier public ReferenceType String getCurrentLine ReturnStatement MethodInvocation src getCurrentLine	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "to_hash" ReferenceType RubyHash ReturnStatement This	1
MethodDeclaration Modifier private static ReferenceType String canonicalize FormalParameter ReferenceType String canonicalPath FormalParameter ReferenceType String remaining IfStatement BinaryOperation == MemberReference remaining Literal null BlockStatement IfStatement Literal MethodInvocation MemberReference canonicalPath equals "" BlockStatement ReturnStatement Literal "/" BlockStatement IfStatement BinaryOperation && MethodInvocation MemberReference canonicalPath startsWithDriveLetterOnWindows BinaryOperation == MethodInvocation canonicalPath length Literal 2 BlockStatement StatementExpression Assignment MemberReference canonicalPath Literal "/" += ReturnStatement MemberReference canonicalPath LocalVariableDeclaration ReferenceType String VariableDeclarator child LocalVariableDeclaration BasicType int VariableDeclarator slash MethodInvocation remaining Literal '/' indexOf IfStatement BinaryOperation == MemberReference slash Literal - 1 BlockStatement StatementExpression Assignment MemberReference child MemberReference remaining = StatementExpression Assignment MemberReference remaining Literal null = BlockStatement StatementExpression Assignment MemberReference child MethodInvocation remaining Literal 0 MemberReference slash substring = StatementExpression Assignment MemberReference remaining MethodInvocation remaining BinaryOperation + MemberReference slash Literal 1 substring = IfStatement MethodInvocation child Literal "." equals BlockStatement IfStatement BinaryOperation == MemberReference slash Literal - 1 BlockStatement IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference canonicalPath Literal null BinaryOperation == MethodInvocation canonicalPath length Literal 0 BinaryOperation == MemberReference slash Literal - 1 StatementExpression Assignment MemberReference canonicalPath Literal "/" += BlockStatement IfStatement MethodInvocation child Literal ".." equals BlockStatement IfStatement BinaryOperation == MemberReference canonicalPath Literal null ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "Cannot have at the start of an absolute path" LocalVariableDeclaration BasicType int VariableDeclarator lastDir MethodInvocation canonicalPath Literal '/' lastIndexOf IfStatement BinaryOperation == MemberReference lastDir Literal - 1 BlockStatement IfStatement MethodInvocation MemberReference canonicalPath startsWithDriveLetterOnWindows BlockStatement BlockStatement StatementExpression Assignment MemberReference canonicalPath Literal "" = BlockStatement StatementExpression Assignment MemberReference canonicalPath MethodInvocation canonicalPath Literal 0 MemberReference lastDir substring = IfStatement BinaryOperation == MemberReference canonicalPath Literal null BlockStatement StatementExpression Assignment MemberReference canonicalPath MemberReference child = BlockStatement StatementExpression Assignment MemberReference canonicalPath BinaryOperation + Literal "/" MemberReference child += ReturnStatement MethodInvocation MemberReference canonicalPath MemberReference remaining canonicalize	1
MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext ctx FormalParameter ReferenceType IRubyObject largs FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator larg MethodInvocation MemberReference runtime MemberReference largs checkArgs StatementExpression MethodInvocation MemberReference localContext MemberReference ctx Literal "count" checkContext IfStatement MethodInvocation larg MemberReference arg equals StatementExpression MemberReference ++ ArraySelector Literal 0 result ReturnStatement MethodInvocation runtime getNil	1
MethodDeclaration Modifier public ReferenceType String name StatementExpression MethodInvocation compile ReturnStatement MemberReference name	0
MethodDeclaration Modifier public Annotation Override ReferenceType String FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block IfStatement MethodInvocation self MethodInvocation MethodInvocation getName Literal false isMethodBound getMetaClass BlockStatement ReturnStatement MethodInvocation ASTInterpreter MemberReference runtime MemberReference context MethodInvocation getArgsNode Literal "method" MemberReference self MemberReference ReturnStatement Literal null	0
MethodDeclaration Modifier private final static ReferenceType IRubyObject fromNative FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType Type type FormalParameter ReferenceType ReferenceType Buffer buffer FormalParameter BasicType int index SwitchStatement MethodInvocation type getNativeType SwitchStatementCase VOID ReturnStatement MethodInvocation runtime getNil SwitchStatementCase CHAR ReturnStatement MethodInvocation Util MemberReference runtime MethodInvocation buffer MemberReference index newSigned8 SwitchStatementCase UCHAR ReturnStatement MethodInvocation Util MemberReference runtime MethodInvocation buffer MemberReference index newUnsigned8 SwitchStatementCase SHORT ReturnStatement MethodInvocation Util MemberReference runtime MethodInvocation buffer MemberReference index getShort newSigned16 SwitchStatementCase USHORT ReturnStatement MethodInvocation Util MemberReference runtime MethodInvocation buffer MemberReference index getShort newUnsigned16 SwitchStatementCase INT ReturnStatement MethodInvocation Util MemberReference runtime MethodInvocation buffer MemberReference index getInt newSigned32 SwitchStatementCase UINT ReturnStatement MethodInvocation Util MemberReference runtime MethodInvocation buffer MemberReference index getInt newUnsigned32 SwitchStatementCase LONG_LONG ReturnStatement MethodInvocation Util MemberReference runtime MethodInvocation buffer MemberReference index getLong newSigned64 SwitchStatementCase ULONG_LONG ReturnStatement MethodInvocation Util MemberReference runtime MethodInvocation buffer MemberReference index getLong newUnsigned64 SwitchStatementCase LONG ReturnStatement TernaryExpression BinaryOperation == MemberReference LONG_SIZE Literal 32 MethodInvocation Util MemberReference runtime MethodInvocation buffer MemberReference index getInt newSigned32 MethodInvocation Util MemberReference runtime MethodInvocation buffer MemberReference index getLong newSigned64 SwitchStatementCase ULONG ReturnStatement TernaryExpression BinaryOperation == MemberReference LONG_SIZE Literal 32 MethodInvocation Util MemberReference runtime MethodInvocation buffer MemberReference index getInt newUnsigned32 MethodInvocation Util MemberReference runtime MethodInvocation buffer MemberReference index getLong newUnsigned64 SwitchStatementCase FLOAT ReturnStatement MethodInvocation runtime MethodInvocation buffer MemberReference index newFloat SwitchStatementCase DOUBLE ReturnStatement MethodInvocation runtime MethodInvocation buffer MemberReference index newFloat SwitchStatementCase POINTER BlockStatement LocalVariableDeclaration Modifier final BasicType long VariableDeclarator address MethodInvocation buffer MemberReference index getAddress IfStatement BinaryOperation instanceof MemberReference type ReferenceType CallbackInfo BlockStatement LocalVariableDeclaration ReferenceType CallbackInfo VariableDeclarator cbInfo Cast ReferenceType CallbackInfo MemberReference type IfStatement BinaryOperation != MemberReference address Literal 0 BlockStatement ReturnStatement ClassCreator ReferenceType JFFIInvoker MemberReference runtime MemberReference address MethodInvocation cbInfo getReturnType MethodInvocation cbInfo getParameterTypes BlockStatement ReturnStatement MethodInvocation runtime getNil BlockStatement ReturnStatement ClassCreator ReferenceType Pointer MemberReference runtime MethodInvocation MemberReference runtime MemberReference address wrap SwitchStatementCase STRING ReturnStatement MethodInvocation MemberReference runtime MemberReference buffer MemberReference index getStringParameter SwitchStatementCase BOOL ReturnStatement MethodInvocation runtime BinaryOperation != MethodInvocation buffer MemberReference index getInt Literal 0 newBoolean SwitchStatementCase ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "Invalid type " MemberReference type	1
MethodDeclaration Modifier public StatementExpression MethodInvocation method MemberReference THREADCONTEXT_INDEX aload StatementExpression MethodInvocation method StatementExpression MethodInvocation Literal MethodInvocation VoidClassReference MethodInvocation ClassReference BasicType boolean params sig	0
MethodDeclaration Modifier private final static BasicType short ReturnStatement ArrayCreator BasicType short ArrayInitializer Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 299 Literal - 1 Literal - 1 Literal 302 Literal 303 Literal - 1 Literal - 1 Literal 306 Literal 307 Literal 308 Literal 309 Literal 310 Literal 311 Literal - 1 Literal - 1 Literal 314 Literal 315 Literal 316 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 336 Literal - 1 Literal - 1 Literal 339 Literal - 1 Literal - 1 Literal 342 Literal 343 Literal - 1 Literal 345 Literal - 1 Literal 347 Literal - 1 Literal 349 Literal - 1 Literal 351 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 359 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 364 Literal 365 Literal 366 Literal 367 Literal 368 Literal 369 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 375 Literal 376 Literal - 1 Literal 378 Literal 379 Literal 257 Literal 258 Literal 259 Literal - 1 Literal 261 Literal - 1 Literal - 1 Literal - 1 Literal 265 Literal 266 Literal - 1 Literal - 1 Literal - 1 Literal 270 Literal - 1 Literal 272 Literal 273 Literal 274 Literal 275 Literal 276 Literal 277 Literal 278 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 283 Literal 284 Literal 285 Literal 286 Literal 287 Literal 288 Literal 289 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 299 Literal - 1 Literal - 1 Literal 302 Literal 303 Literal - 1 Literal - 1 Literal 306 Literal 307 Literal 308 Literal 309 Literal 310 Literal 311 Literal - 1 Literal - 1 Literal 314 Literal 315 Literal 316 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 336 Literal - 1 Literal - 1 Literal 339 Literal - 1 Literal - 1 Literal 342 Literal 343 Literal - 1 Literal 345 Literal - 1 Literal 347 Literal - 1 Literal 349 Literal - 1 Literal 351 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 359 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 364 Literal 365 Literal 366 Literal 367 Literal 368 Literal 369 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 375 Literal 376 Literal - 1 Literal 378 Literal 379 Literal 257 Literal 258 Literal 259 Literal - 1 Literal 261 Literal - 1 Literal - 1 Literal - 1 Literal 265 Literal 266 Literal - 1 Literal - 1 Literal - 1 Literal 270 Literal - 1 Literal 272 Literal 273 Literal 274 Literal 275 Literal 276 Literal 277 Literal 278 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 283 Literal 284 Literal 285 Literal 286 Literal 287 Literal 288 Literal 289 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 299 Literal - 1 Literal - 1 Literal 302 Literal 303 Literal - 1 Literal - 1 Literal 306 Literal 307 Literal 308 Literal 309 Literal 310 Literal 311 Literal - 1 Literal - 1 Literal 314 Literal 315 Literal 316 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 336 Literal - 1 Literal - 1 Literal 339 Literal - 1 Literal - 1 Literal 342 Literal 343 Literal - 1 Literal 345 Literal - 1 Literal 347 Literal - 1 Literal 349 Literal - 1 Literal 351 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 359 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 364 Literal 365 Literal 366 Literal 367 Literal 368 Literal 369 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 375 Literal 376 Literal - 1 Literal 378 Literal 379 Literal 257 Literal 258 Literal 259 Literal - 1 Literal 261 Literal - 1 Literal - 1 Literal - 1 Literal 265 Literal 266 Literal - 1 Literal - 1 Literal - 1 Literal 270 Literal - 1 Literal 272 Literal 273 Literal 274 Literal 275 Literal 276 Literal 277 Literal 278 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 283 Literal 284 Literal 285 Literal 286 Literal 287 Literal 288 Literal 289 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 299 Literal - 1 Literal - 1 Literal 302 Literal 303 Literal - 1 Literal - 1 Literal 306 Literal 307 Literal 308 Literal 309 Literal 310 Literal 311 Literal - 1 Literal - 1 Literal 314 Literal 315 Literal 316 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 336 Literal - 1 Literal - 1 Literal 339 Literal - 1 Literal - 1 Literal 342 Literal 343 Literal - 1 Literal 345 Literal - 1 Literal 347 Literal - 1 Literal 349 Literal - 1 Literal 351 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 359 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 364 Literal 365 Literal 366 Literal 367 Literal 368 Literal 369 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 375 Literal 376 Literal - 1 Literal 378 Literal 379 Literal 257 Literal 258 Literal 259 Literal - 1 Literal 261 Literal - 1 Literal - 1 Literal - 1 Literal 265 Literal 266 Literal - 1 Literal - 1 Literal - 1 Literal 270 Literal - 1 Literal 272 Literal 273 Literal 274 Literal 275 Literal 276 Literal 277 Literal 278 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 283 Literal 284 Literal 285 Literal 286 Literal 287 Literal 288 Literal 289 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 299 Literal - 1 Literal - 1 Literal 302 Literal 303 Literal - 1 Literal - 1 Literal 306 Literal 307 Literal 308 Literal 309 Literal 310 Literal 311 Literal - 1 Literal - 1 Literal 314 Literal 315 Literal 316 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 336 Literal - 1 Literal - 1 Literal 339 Literal - 1 Literal - 1 Literal 342 Literal 343 Literal - 1 Literal 345 Literal - 1 Literal 347 Literal - 1 Literal 349 Literal - 1 Literal 351 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 359 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 364 Literal 365 Literal 366 Literal 367 Literal 368 Literal 369 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 375 Literal 376 Literal - 1 Literal 378 Literal 379 Literal 257 Literal 258 Literal 259 Literal - 1 Literal 261 Literal - 1 Literal - 1 Literal - 1 Literal 265 Literal 266 Literal - 1 Literal - 1 Literal - 1 Literal 270 Literal - 1 Literal 272 Literal 273 Literal 274 Literal 275 Literal 276 Literal 277 Literal 278 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 283 Literal 284 Literal 285 Literal 286 Literal 287 Literal 288 Literal 289 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 299 Literal - 1 Literal - 1 Literal 302 Literal 303 Literal - 1 Literal - 1 Literal 306 Literal 307 Literal 308 Literal 309 Literal 310 Literal 311 Literal - 1 Literal - 1 Literal 314 Literal 315 Literal 316 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 336 Literal - 1 Literal - 1 Literal 339 Literal - 1 Literal - 1 Literal 342 Literal 343 Literal - 1 Literal 345 Literal - 1 Literal 347 Literal - 1 Literal 349 Literal - 1 Literal 351 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 359 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 364 Literal 365 Literal 366 Literal 367 Literal 368 Literal 369 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 375 Literal 376 Literal - 1 Literal 378 Literal 379 Literal 257 Literal 258 Literal 259 Literal - 1 Literal 261 Literal - 1 Literal - 1 Literal - 1 Literal 265 Literal 266 Literal - 1 Literal - 1 Literal - 1 Literal 270 Literal - 1 Literal 272 Literal 273 Literal 274 Literal 275 Literal 276 Literal 277 Literal 278 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 283 Literal 284 Literal 285 Literal 286 Literal 287 Literal 288 Literal 289 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 299 Literal - 1 Literal - 1 Literal 302 Literal 303 Literal - 1 Literal - 1 Literal 306 Literal 307 Literal 308 Literal 309 Literal 310 Literal 311 Literal - 1 Literal - 1 Literal 314 Literal 315 Literal 316 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 336 Literal - 1 Literal - 1 Literal 339 Literal - 1 Literal - 1 Literal 342 Literal 343 Literal - 1 Literal 345 Literal - 1 Literal 347 Literal - 1 Literal 349 Literal - 1 Literal 351 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 359 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 364 Literal 365 Literal 366 Literal 367 Literal 368 Literal 369 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 375 Literal 376 Literal - 1 Literal 378 Literal 379 Literal 257 Literal 258 Literal 259 Literal - 1 Literal 261 Literal - 1 Literal - 1 Literal - 1 Literal 265 Literal 266 Literal - 1 Literal - 1 Literal - 1 Literal 270 Literal - 1 Literal 272 Literal 273 Literal 274 Literal 275 Literal 276 Literal 277 Literal 278 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 283 Literal 284 Literal 285 Literal 286 Literal 287 Literal 288 Literal 289 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 299 Literal - 1 Literal - 1 Literal 302 Literal 303 Literal - 1 Literal - 1 Literal 306 Literal 307 Literal 308 Literal 309 Literal 310 Literal 311 Literal - 1 Literal - 1 Literal 314 Literal 315 Literal 316 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 336 Literal - 1 Literal - 1 Literal 339 Literal - 1 Literal - 1 Literal 342 Literal 343 Literal - 1 Literal 345 Literal - 1 Literal 347 Literal - 1 Literal 349 Literal - 1 Literal 351 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 359 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 364 Literal 365 Literal 366 Literal 367 Literal 368 Literal 369 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 375 Literal 376 Literal - 1 Literal 378 Literal 379 Literal 257 Literal 258 Literal 259 Literal - 1 Literal 261 Literal - 1 Literal - 1 Literal - 1 Literal 265 Literal 266 Literal - 1 Literal - 1 Literal - 1 Literal 270 Literal - 1 Literal 272 Literal 273 Literal 274 Literal 275 Literal 276 Literal 277 Literal 278 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 283 Literal 284 Literal 285 Literal 286 Literal 287 Literal 288 Literal 289 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 299 Literal - 1 Literal - 1 Literal 302 Literal 303 Literal - 1 Literal - 1 Literal 306 Literal 307 Literal 308 Literal 309 Literal 310 Literal 311 Literal - 1 Literal - 1 Literal 314 Literal 315 Literal 316 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 336 Literal - 1 Literal - 1 Literal 339 Literal - 1 Literal - 1 Literal 342 Literal 343 Literal - 1 Literal 345 Literal - 1 Literal 347 Literal - 1 Literal 349 Literal - 1 Literal 351 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 359 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 364 Literal 365 Literal 366 Literal 367 Literal 368 Literal 369 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 375 Literal 376 Literal - 1 Literal 378 Literal 379 Literal 257 Literal 258 Literal 259 Literal - 1 Literal 261 Literal - 1 Literal - 1 Literal - 1 Literal 265 Literal 266 Literal - 1 Literal - 1 Literal - 1 Literal 270 Literal - 1 Literal 272 Literal 273 Literal 274 Literal 275 Literal 276 Literal 277 Literal 278 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 283 Literal 284 Literal 285 Literal 286 Literal 287 Literal 288 Literal 289 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 299 Literal - 1 Literal - 1 Literal 302 Literal 303 Literal - 1 Literal - 1 Literal 306 Literal 307 Literal 308 Literal 309 Literal 310 Literal 311 Literal - 1 Literal - 1 Literal 314 Literal 315 Literal 316 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 336 Literal - 1 Literal - 1 Literal 339 Literal - 1 Literal - 1 Literal 342 Literal 343 Literal - 1 Literal 345 Literal - 1 Literal 347 Literal - 1 Literal 349 Literal - 1 Literal 351 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 359 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 364 Literal 365 Literal 366 Literal 367 Literal 368 Literal 369 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 375 Literal 376 Literal - 1 Literal 378 Literal 379 Literal 257 Literal 258 Literal 259 Literal - 1 Literal 261 Literal - 1 Literal - 1 Literal - 1 Literal 265 Literal 266 Literal - 1 Literal - 1 Literal - 1 Literal 270 Literal - 1 Literal 272 Literal 273 Literal 274 Literal 275 Literal 276 Literal 277 Literal 278 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 283 Literal 284 Literal 285 Literal 286 Literal 287 Literal 288 Literal 289 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 299 Literal - 1 Literal - 1 Literal 302 Literal 303 Literal - 1 Literal - 1 Literal 306 Literal 307 Literal 308 Literal 309 Literal 310 Literal 311 Literal - 1 Literal - 1 Literal 314 Literal 315 Literal 316 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 336 Literal - 1 Literal - 1 Literal 339 Literal - 1 Literal - 1 Literal 342 Literal 343 Literal - 1 Literal 345 Literal - 1 Literal 347 Literal - 1 Literal 349 Literal - 1 Literal 351 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 359 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 364 Literal 365 Literal 366 Literal 367 Literal 368 Literal 369 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 375 Literal 376 Literal - 1 Literal 378 Literal 379 Literal 257 Literal 258 Literal 259 Literal - 1 Literal 261 Literal - 1 Literal - 1 Literal - 1 Literal 265 Literal 266 Literal - 1 Literal - 1 Literal - 1 Literal 270 Literal - 1 Literal 272 Literal 273 Literal 274 Literal 275 Literal 276 Literal 277 Literal 278 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 283 Literal 284 Literal 285 Literal 286 Literal 287 Literal 288 Literal 289 Literal - 1 Literal - 1 Literal 292 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 299 Literal - 1 Literal - 1 Literal 302 Literal 303 Literal - 1 Literal - 1 Literal 306 Literal 307 Literal 308 Literal 309 Literal 310 Literal 311 Literal - 1 Literal - 1 Literal 314 Literal 315 Literal 316 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 336 Literal - 1 Literal - 1 Literal 339 Literal - 1 Literal - 1 Literal 342 Literal 343 Literal - 1 Literal 345 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 351 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 359 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 364 Literal 365 Literal 366 Literal 367 Literal 368 Literal 369 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 375 Literal 376 Literal - 1 Literal 378 Literal 379 Literal 257 Literal 258 Literal 259 Literal - 1 Literal 261 Literal - 1 Literal - 1 Literal - 1 Literal 265 Literal 266 Literal - 1 Literal - 1 Literal - 1 Literal 270 Literal - 1 Literal 272 Literal 273 Literal 274 Literal 275 Literal 276 Literal 277 Literal 278 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 283 Literal 284 Literal 285 Literal 286 Literal 287 Literal 288 Literal 289 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 299 Literal - 1 Literal - 1 Literal 302 Literal 303 Literal - 1 Literal - 1 Literal 306 Literal 307 Literal 308 Literal 309 Literal 310 Literal 311 Literal - 1 Literal - 1 Literal 314 Literal 315 Literal 316 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 336 Literal - 1 Literal - 1 Literal 339 Literal - 1 Literal - 1 Literal 342 Literal 343 Literal - 1 Literal 345 Literal - 1 Literal 347 Literal - 1 Literal - 1 Literal - 1 Literal 351 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 359 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 364 Literal 365 Literal 366 Literal 367 Literal 368 Literal 369 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 375 Literal 376 Literal - 1 Literal 378 Literal 379 Literal 257 Literal 258 Literal 259 Literal - 1 Literal 261 Literal - 1 Literal - 1 Literal - 1 Literal 265 Literal 266 Literal - 1 Literal - 1 Literal - 1 Literal 270 Literal - 1 Literal 272 Literal 273 Literal 274 Literal 275 Literal 276 Literal 277 Literal 278 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 283 Literal 284 Literal 285 Literal 286 Literal 287 Literal 288 Literal 289 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 299 Literal - 1 Literal - 1 Literal 302 Literal 303 Literal - 1 Literal - 1 Literal 306 Literal 307 Literal 308 Literal 309 Literal 310 Literal 311 Literal - 1 Literal - 1 Literal 314 Literal 315 Literal 316 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 336 Literal - 1 Literal - 1 Literal 339 Literal 340 Literal - 1 Literal 342 Literal 343 Literal - 1 Literal 345 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 351 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 359 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 364 Literal 365 Literal 366 Literal 367 Literal 368 Literal 369 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 375 Literal 376 Literal - 1 Literal 378 Literal 379 Literal 257 Literal 258 Literal 259 Literal - 1 Literal 261 Literal - 1 Literal - 1 Literal - 1 Literal 265 Literal 266 Literal - 1 Literal - 1 Literal - 1 Literal 270 Literal - 1 Literal 272 Literal 273 Literal 274 Literal 275 Literal 276 Literal 277 Literal 278 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 283 Literal 284 Literal 285 Literal 286 Literal 287 Literal 288 Literal 289 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 299 Literal - 1 Literal - 1 Literal 302 Literal 303 Literal - 1 Literal - 1 Literal 306 Literal 307 Literal 308 Literal 309 Literal 310 Literal 311 Literal - 1 Literal - 1 Literal 314 Literal 315 Literal 316 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 336 Literal - 1 Literal - 1 Literal 339 Literal - 1 Literal - 1 Literal 342 Literal 343 Literal - 1 Literal 345 Literal - 1 Literal 347 Literal - 1 Literal - 1 Literal - 1 Literal 351 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 359 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 364 Literal 365 Literal 366 Literal 367 Literal 368 Literal 369 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 375 Literal 376 Literal - 1 Literal 378 Literal 379 Literal 257 Literal 258 Literal 259 Literal - 1 Literal 261 Literal - 1 Literal - 1 Literal - 1 Literal 265 Literal 266 Literal - 1 Literal - 1 Literal - 1 Literal 270 Literal - 1 Literal 272 Literal 273 Literal 274 Literal 275 Literal 276 Literal 277 Literal 278 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 283 Literal 284 Literal 285 Literal 286 Literal 287 Literal 288 Literal 289 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 299 Literal - 1 Literal - 1 Literal 302 Literal 303 Literal - 1 Literal - 1 Literal 306 Literal 307 Literal 308 Literal 309 Literal 310 Literal 311 Literal - 1 Literal - 1 Literal 314 Literal 315 Literal 316 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 336 Literal - 1 Literal - 1 Literal 339 Literal - 1 Literal - 1 Literal 342 Literal 343 Literal - 1 Literal 345 Literal - 1 Literal 347 Literal - 1 Literal - 1 Literal - 1 Literal 351 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 359 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 364 Literal 365 Literal 366 Literal 367 Literal 368 Literal 369 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 375 Literal 376 Literal - 1 Literal 378 Literal 379 Literal 257 Literal 258 Literal 259 Literal - 1 Literal 261 Literal - 1 Literal - 1 Literal - 1 Literal 265 Literal 266 Literal - 1 Literal - 1 Literal - 1 Literal 270 Literal - 1 Literal 272 Literal 273 Literal 274 Literal 275 Literal 276 Literal 277 Literal 278 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 283 Literal 284 Literal 285 Literal 286 Literal 287 Literal 288 Literal 289 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 299 Literal - 1 Literal - 1 Literal 302 Literal 303 Literal - 1 Literal - 1 Literal 306 Literal 307 Literal 308 Literal 309 Literal 310 Literal 311 Literal - 1 Literal - 1 Literal 314 Literal 315 Literal 316 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 336 Literal - 1 Literal - 1 Literal 339 Literal - 1 Literal - 1 Literal 342 Literal 343 Literal - 1 Literal 345 Literal - 1 Literal 347 Literal - 1 Literal - 1 Literal - 1 Literal 351 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 359 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 364 Literal 365 Literal 366 Literal 367 Literal 368 Literal 369 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 375 Literal 376 Literal - 1 Literal 378 Literal 379 Literal 257 Literal 258 Literal 259 Literal - 1 Literal 261 Literal - 1 Literal - 1 Literal - 1 Literal 265 Literal 266 Literal - 1 Literal - 1 Literal - 1 Literal 270 Literal - 1 Literal 272 Literal 273 Literal 274 Literal 275 Literal 276 Literal 277 Literal 278 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 283 Literal 284 Literal 285 Literal 286 Literal 287 Literal 288 Literal 289 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 299 Literal - 1 Literal - 1 Literal 302 Literal 303 Literal - 1 Literal - 1 Literal 306 Literal 307 Literal 308 Literal 309 Literal 310 Literal 311 Literal - 1 Literal - 1 Literal 314 Literal 315 Literal 316 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 336 Literal - 1 Literal - 1 Literal 339 Literal - 1 Literal - 1 Literal 342 Literal 343 Literal - 1 Literal 345 Literal - 1 Literal 347 Literal - 1 Literal - 1 Literal - 1 Literal 351 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 359 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 364 Literal 365 Literal 366 Literal 367 Literal 368 Literal 369 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 375 Literal 376 Literal - 1 Literal 378 Literal 379 Literal 257 Literal 258 Literal 259 Literal - 1 Literal 261 Literal - 1 Literal - 1 Literal - 1 Literal 265 Literal 266 Literal - 1 Literal - 1 Literal - 1 Literal 270 Literal - 1 Literal 272 Literal 273 Literal 274 Literal 275 Literal 276 Literal 277 Literal 278 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 283 Literal 284 Literal 285 Literal 286 Literal 287 Literal 288 Literal 289 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 299 Literal - 1 Literal - 1 Literal 302 Literal 303 Literal - 1 Literal - 1 Literal 306 Literal 307 Literal 308 Literal 309 Literal 310 Literal 311 Literal - 1 Literal - 1 Literal 314 Literal 315 Literal 316 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 336 Literal - 1 Literal - 1 Literal 339 Literal - 1 Literal - 1 Literal 342 Literal 343 Literal - 1 Literal 345 Literal - 1 Literal 347 Literal - 1 Literal - 1 Literal - 1 Literal 351 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 359 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 364 Literal 365 Literal 366 Literal 367 Literal 368 Literal 369 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 375 Literal 376 Literal - 1 Literal 378 Literal 379 Literal 257 Literal 258 Literal 259 Literal - 1 Literal 261 Literal - 1 Literal - 1 Literal - 1 Literal 265 Literal 266 Literal - 1 Literal - 1 Literal - 1 Literal 270 Literal - 1 Literal 272 Literal 273 Literal 274 Literal 275 Literal 276 Literal 277 Literal 278 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 283 Literal 284 Literal 285 Literal 286 Literal 287 Literal 288 Literal 289 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 299 Literal - 1 Literal - 1 Literal 302 Literal 303 Literal - 1 Literal - 1 Literal 306 Literal 307 Literal 308 Literal 309 Literal 310 Literal 311 Literal - 1 Literal - 1 Literal 314 Literal 315 Literal 316 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 336 Literal - 1 Literal - 1 Literal 339 Literal - 1 Literal - 1 Literal 342 Literal 343 Literal - 1 Literal 345 Literal - 1 Literal 347 Literal - 1 Literal - 1 Literal - 1 Literal 351 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 359 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 364 Literal 365 Literal 366 Literal 367 Literal 368 Literal 369 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 375 Literal 376 Literal - 1 Literal 378 Literal 379 Literal 257 Literal 258 Literal 259 Literal - 1 Literal 261 Literal - 1 Literal - 1 Literal - 1 Literal 265 Literal 266 Literal - 1 Literal - 1 Literal - 1 Literal 270 Literal - 1 Literal 272 Literal 273 Literal 274 Literal 275 Literal 276 Literal 277 Literal 278 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 283 Literal 284 Literal 285 Literal 286 Literal 287 Literal 288 Literal 289 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 299 Literal - 1 Literal - 1 Literal 302 Literal 303 Literal - 1 Literal - 1 Literal 306 Literal 307 Literal 308 Literal 309 Literal 310 Literal 311 Literal - 1 Literal - 1 Literal 314 Literal 315 Literal 316 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 336 Literal - 1 Literal - 1 Literal 339 Literal 340 Literal - 1 Literal 342 Literal 343 Literal - 1 Literal 345 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 351 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 359 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 364 Literal 365 Literal 366 Literal 367 Literal 368 Literal 369 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 375 Literal 376 Literal - 1 Literal 378 Literal 379 Literal 257 Literal 258 Literal 259 Literal - 1 Literal 261 Literal - 1 Literal - 1 Literal - 1 Literal 265 Literal 266 Literal - 1 Literal - 1 Literal - 1 Literal 270 Literal - 1 Literal 272 Literal 273 Literal 274 Literal 275 Literal 276 Literal 277 Literal 278 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 283 Literal 284 Literal 285 Literal 286 Literal 287 Literal 288 Literal 289 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 299 Literal - 1 Literal - 1 Literal 302 Literal 303 Literal - 1 Literal - 1 Literal 306 Literal 307 Literal 308 Literal 309 Literal 310 Literal 311 Literal - 1 Literal - 1 Literal 314 Literal 315 Literal 316 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 336 Literal - 1 Literal - 1 Literal 339 Literal - 1 Literal - 1 Literal 342 Literal 343 Literal - 1 Literal 345 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 351 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 359 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 364 Literal 365 Literal 366 Literal 367 Literal 368 Literal 369 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 375 Literal 376 Literal - 1 Literal 378 Literal 379 Literal 257 Literal 258 Literal 259 Literal - 1 Literal 261 Literal - 1 Literal - 1 Literal - 1 Literal 265 Literal 266 Literal - 1 Literal - 1 Literal - 1 Literal 270 Literal - 1 Literal 272 Literal 273 Literal 274 Literal 275 Literal 276 Literal 277 Literal 278 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 283 Literal 284 Literal 285 Literal 286 Literal 287 Literal 288 Literal 289 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 299 Literal - 1 Literal - 1 Literal 302 Literal 303 Literal - 1 Literal - 1 Literal 306 Literal 307 Literal 308 Literal 309 Literal 310 Literal 311 Literal - 1 Literal - 1 Literal 314 Literal 315 Literal 316 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 336 Literal - 1 Literal - 1 Literal 339 Literal - 1 Literal - 1 Literal 342 Literal 343 Literal - 1 Literal 345 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 351 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 359 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 364 Literal 365 Literal 366 Literal 367 Literal 368 Literal 369 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 375 Literal 376 Literal - 1 Literal 378 Literal 379 Literal 257 Literal 258 Literal 259 Literal - 1 Literal 261 Literal - 1 Literal - 1 Literal - 1 Literal 265 Literal 266 Literal - 1 Literal - 1 Literal - 1 Literal 270 Literal - 1 Literal 272 Literal 273 Literal 274 Literal 275 Literal 276 Literal 277 Literal 278 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 283 Literal 284 Literal 285 Literal 286 Literal 287 Literal 288 Literal 289 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 299 Literal - 1 Literal - 1 Literal 302 Literal 303 Literal - 1 Literal - 1 Literal 306 Literal 307 Literal 308 Literal 309 Literal 310 Literal 311 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 316 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 333 Literal - 1 Literal - 1 Literal 336 Literal - 1 Literal - 1 Literal 339 Literal - 1 Literal - 1 Literal 342 Literal 343 Literal - 1 Literal 345 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 364 Literal 365 Literal 366 Literal 367 Literal 368 Literal 369 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 375 Literal 376 Literal - 1 Literal 378 Literal 379 Literal 257 Literal 258 Literal 259 Literal - 1 Literal 261 Literal - 1 Literal - 1 Literal - 1 Literal 265 Literal 266 Literal - 1 Literal - 1 Literal - 1 Literal 270 Literal - 1 Literal 272 Literal 273 Literal 274 Literal 275 Literal 276 Literal 277 Literal 278 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 283 Literal 284 Literal 285 Literal 286 Literal 287 Literal 288 Literal 289 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 299 Literal - 1 Literal - 1 Literal 302 Literal 303 Literal - 1 Literal - 1 Literal 306 Literal 307 Literal 308 Literal 309 Literal 310 Literal 311 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 316 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 336 Literal - 1 Literal - 1 Literal 339 Literal - 1 Literal - 1 Literal 342 Literal 343 Literal - 1 Literal 345 Literal - 1 Literal 347 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 364 Literal 365 Literal 366 Literal 367 Literal 368 Literal 369 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 375 Literal 376 Literal - 1 Literal 378 Literal 379 Literal 257 Literal 258 Literal 259 Literal - 1 Literal 261 Literal - 1 Literal - 1 Literal - 1 Literal 265 Literal 266 Literal - 1 Literal - 1 Literal - 1 Literal 270 Literal - 1 Literal 272 Literal 273 Literal 274 Literal 275 Literal 276 Literal 277 Literal 278 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 283 Literal 284 Literal 285 Literal 286 Literal 287 Literal 288 Literal 289 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 299 Literal - 1 Literal - 1 Literal 302 Literal 303 Literal - 1 Literal - 1 Literal 306 Literal 307 Literal 308 Literal 309 Literal 310 Literal 311 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 316 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 336 Literal - 1 Literal - 1 Literal 339 Literal - 1 Literal - 1 Literal 342 Literal 343 Literal - 1 Literal 345 Literal - 1 Literal 347 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 364 Literal 365 Literal 366 Literal 367 Literal 368 Literal 369 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 375 Literal 376 Literal - 1 Literal 378 Literal 379 Literal 257 Literal 258 Literal 259 Literal - 1 Literal 261 Literal - 1 Literal - 1 Literal - 1 Literal 265 Literal 266 Literal - 1 Literal - 1 Literal - 1 Literal 270 Literal - 1 Literal 272 Literal 273 Literal 274 Literal 275 Literal 276 Literal 277 Literal 278 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 283 Literal 284 Literal 285 Literal 286 Literal 287 Literal 288 Literal 289 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 299 Literal - 1 Literal - 1 Literal 302 Literal 303 Literal - 1 Literal - 1 Literal 306 Literal 307 Literal 308 Literal 309 Literal 310 Literal 311 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 316 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 336 Literal - 1 Literal - 1 Literal 339 Literal - 1 Literal - 1 Literal 342 Literal 343 Literal - 1 Literal 345 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 364 Literal 365 Literal 366 Literal 367 Literal 368 Literal 369 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 375 Literal 376 Literal - 1 Literal 378 Literal 379 Literal 257 Literal 258 Literal 259 Literal - 1 Literal 261 Literal - 1 Literal - 1 Literal - 1 Literal 265 Literal 266 Literal - 1 Literal - 1 Literal - 1 Literal 270 Literal - 1 Literal 272 Literal 273 Literal 274 Literal 275 Literal 276 Literal 277 Literal 278 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 283 Literal 284 Literal 285 Literal 286 Literal 287 Literal 288 Literal 289 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 299 Literal - 1 Literal - 1 Literal 302 Literal 303 Literal - 1 Literal - 1 Literal 306 Literal 307 Literal 308 Literal 309 Literal 310 Literal 311 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 316 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 336 Literal - 1 Literal - 1 Literal 339 Literal - 1 Literal - 1 Literal 342 Literal 343 Literal - 1 Literal 345 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 364 Literal 365 Literal 366 Literal 367 Literal 368 Literal 369 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 375 Literal 376 Literal - 1 Literal 378 Literal 379 Literal 257 Literal 258 Literal 259 Literal - 1 Literal 261 Literal - 1 Literal - 1 Literal - 1 Literal 265 Literal 266 Literal - 1 Literal - 1 Literal - 1 Literal 270 Literal - 1 Literal 272 Literal 273 Literal 274 Literal 275 Literal 276 Literal 277 Literal 278 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 283 Literal 284 Literal 285 Literal 286 Literal 287 Literal 288 Literal 289 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 299 Literal - 1 Literal - 1 Literal 302 Literal 303 Literal - 1 Literal - 1 Literal 306 Literal 307 Literal 308 Literal 309 Literal 310 Literal 311 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 316 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 336 Literal - 1 Literal - 1 Literal 339 Literal - 1 Literal - 1 Literal 342 Literal 343 Literal - 1 Literal 345 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 364 Literal 365 Literal 366 Literal 367 Literal 368 Literal 369 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 375 Literal 376 Literal - 1 Literal 378 Literal 379 Literal 257 Literal 258 Literal 259 Literal 260 Literal 261 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal 267 Literal 268 Literal 269 Literal 270 Literal 271 Literal - 1 Literal - 1 Literal 274 Literal 275 Literal 276 Literal 277 Literal 278 Literal 279 Literal 280 Literal - 1 Literal - 1 Literal 283 Literal 284 Literal 285 Literal 286 Literal 287 Literal 288 Literal 289 Literal 290 Literal 291 Literal 292 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal 298 Literal 299 Literal 300 Literal 301 Literal 302 Literal 303 Literal - 1 Literal - 1 Literal 306 Literal 307 Literal 308 Literal - 1 Literal 310 Literal - 1 Literal - 1 Literal - 1 Literal 314 Literal 315 Literal - 1 Literal 317 Literal 318 Literal 319 Literal 320 Literal - 1 Literal 322 Literal 323 Literal - 1 Literal - 1 Literal 326 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 331 Literal 332 Literal 333 Literal 334 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 347 Literal 348 Literal - 1 Literal 350 Literal 351 Literal 352 Literal 353 Literal 354 Literal 355 Literal 356 Literal 357 Literal 358 Literal - 1 Literal 360 Literal - 1 Literal - 1 Literal 363 Literal 364 Literal 257 Literal 258 Literal 259 Literal 260 Literal 261 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal 267 Literal 268 Literal 269 Literal 270 Literal 271 Literal - 1 Literal - 1 Literal 274 Literal 275 Literal 276 Literal 277 Literal 278 Literal 279 Literal 280 Literal - 1 Literal - 1 Literal 283 Literal 284 Literal 285 Literal 286 Literal 287 Literal 288 Literal 289 Literal 290 Literal 291 Literal 292 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal 298 Literal 299 Literal 300 Literal 301 Literal 302 Literal 303 Literal - 1 Literal - 1 Literal 306 Literal 307 Literal - 1 Literal - 1 Literal 310 Literal - 1 Literal - 1 Literal - 1 Literal 314 Literal 315 Literal - 1 Literal 317 Literal 318 Literal 319 Literal 320 Literal - 1 Literal 322 Literal 323 Literal - 1 Literal - 1 Literal 326 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 331 Literal 332 Literal 333 Literal 334 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 347 Literal 348 Literal - 1 Literal 350 Literal 351 Literal 352 Literal 353 Literal 354 Literal 355 Literal 356 Literal 357 Literal 358 Literal - 1 Literal 360 Literal - 1 Literal - 1 Literal 363 Literal 364 Literal 257 Literal 258 Literal 259 Literal 260 Literal 261 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal 267 Literal 268 Literal 269 Literal 270 Literal 271 Literal - 1 Literal - 1 Literal 274 Literal 275 Literal 276 Literal 277 Literal 278 Literal 279 Literal 280 Literal - 1 Literal - 1 Literal 283 Literal 284 Literal 285 Literal 286 Literal 287 Literal 288 Literal 289 Literal 290 Literal 291 Literal 292 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal 298 Literal 299 Literal 300 Literal 301 Literal 302 Literal 303 Literal - 1 Literal - 1 Literal 306 Literal 307 Literal 308 Literal 309 Literal 310 Literal 311 Literal - 1 Literal - 1 Literal 314 Literal 315 Literal - 1 Literal 317 Literal 318 Literal 319 Literal 320 Literal - 1 Literal 322 Literal 323 Literal - 1 Literal - 1 Literal 326 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 331 Literal 332 Literal 333 Literal 334 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 340 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 347 Literal 348 Literal - 1 Literal 350 Literal 351 Literal 352 Literal 353 Literal 354 Literal 355 Literal 356 Literal 357 Literal 358 Literal - 1 Literal 360 Literal - 1 Literal - 1 Literal 363 Literal 257 Literal 258 Literal 259 Literal 260 Literal 261 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal 267 Literal 268 Literal 269 Literal 270 Literal 271 Literal - 1 Literal - 1 Literal 274 Literal 275 Literal 276 Literal 277 Literal 278 Literal 279 Literal 280 Literal - 1 Literal - 1 Literal 283 Literal 284 Literal 285 Literal 286 Literal 287 Literal 288 Literal 289 Literal 290 Literal 291 Literal 292 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal 298 Literal 299 Literal 300 Literal 301 Literal 302 Literal 303 Literal - 1 Literal - 1 Literal 306 Literal 307 Literal 308 Literal 309 Literal 310 Literal 311 Literal - 1 Literal - 1 Literal 314 Literal 315 Literal - 1 Literal 317 Literal 318 Literal 319 Literal 320 Literal - 1 Literal 322 Literal 323 Literal - 1 Literal - 1 Literal 326 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 331 Literal 332 Literal 333 Literal 334 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 347 Literal 348 Literal - 1 Literal 350 Literal 351 Literal 352 Literal 353 Literal 354 Literal 355 Literal 356 Literal 357 Literal 358 Literal - 1 Literal 360 Literal - 1 Literal - 1 Literal 363 Literal 257 Literal 258 Literal 259 Literal 260 Literal 261 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal 267 Literal 268 Literal 269 Literal 270 Literal 271 Literal - 1 Literal - 1 Literal 274 Literal 275 Literal 276 Literal 277 Literal 278 Literal 279 Literal 280 Literal - 1 Literal - 1 Literal 283 Literal 284 Literal 285 Literal 286 Literal 287 Literal 288 Literal 289 Literal 290 Literal 291 Literal 292 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal 298 Literal 299 Literal 300 Literal 301 Literal 302 Literal 303 Literal - 1 Literal - 1 Literal 306 Literal 307 Literal - 1 Literal - 1 Literal 310 Literal - 1 Literal - 1 Literal - 1 Literal 314 Literal 315 Literal - 1 Literal 317 Literal 318 Literal 319 Literal 320 Literal - 1 Literal 322 Literal 323 Literal - 1 Literal - 1 Literal 326 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 331 Literal 332 Literal 333 Literal 334 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 347 Literal 348 Literal - 1 Literal 350 Literal 351 Literal 352 Literal 353 Literal 354 Literal 355 Literal 356 Literal 357 Literal 358 Literal - 1 Literal 360 Literal 306 Literal 307 Literal 363 Literal - 1 Literal 310 Literal - 1 Literal - 1 Literal - 1 Literal 314 Literal 315 Literal - 1 Literal 317 Literal 318 Literal 319 Literal 320 Literal - 1 Literal 322 Literal 323 Literal - 1 Literal - 1 Literal 326 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 331 Literal 332 Literal 333 Literal 334 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 347 Literal 348 Literal - 1 Literal 350 Literal 351 Literal 352 Literal 353 Literal 354 Literal 355 Literal 356 Literal 357 Literal 358 Literal - 1 Literal 360 Literal 306 Literal 307 Literal 363 Literal - 1 Literal 310 Literal - 1 Literal - 1 Literal - 1 Literal 314 Literal 315 Literal - 1 Literal 317 Literal 318 Literal 319 Literal 320 Literal - 1 Literal 322 Literal 323 Literal - 1 Literal - 1 Literal 326 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 331 Literal 332 Literal 333 Literal 334 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 347 Literal 348 Literal - 1 Literal 350 Literal 351 Literal 352 Literal 353 Literal 354 Literal 355 Literal 356 Literal 357 Literal 358 Literal - 1 Literal 360 Literal 306 Literal 307 Literal 363 Literal - 1 Literal 310 Literal - 1 Literal - 1 Literal - 1 Literal 314 Literal 315 Literal - 1 Literal 317 Literal 318 Literal 319 Literal 320 Literal - 1 Literal 322 Literal 323 Literal - 1 Literal - 1 Literal 326 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 331 Literal 332 Literal 333 Literal 334 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 347 Literal 348 Literal - 1 Literal 350 Literal 351 Literal 352 Literal 353 Literal 354 Literal 355 Literal 356 Literal 357 Literal 358 Literal - 1 Literal 360 Literal 306 Literal 307 Literal 363 Literal - 1 Literal 310 Literal - 1 Literal - 1 Literal - 1 Literal 314 Literal 315 Literal - 1 Literal 317 Literal 318 Literal 319 Literal 320 Literal - 1 Literal 322 Literal 323 Literal - 1 Literal - 1 Literal 326 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 331 Literal 332 Literal 333 Literal 334 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 347 Literal 348 Literal - 1 Literal 350 Literal 351 Literal 352 Literal 353 Literal 354 Literal 355 Literal 356 Literal 357 Literal 358 Literal - 1 Literal 360 Literal 306 Literal 307 Literal 363 Literal - 1 Literal 310 Literal - 1 Literal - 1 Literal - 1 Literal 314 Literal 315 Literal - 1 Literal 317 Literal 318 Literal 319 Literal 320 Literal - 1 Literal 322 Literal 323 Literal - 1 Literal - 1 Literal 326 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 331 Literal 332 Literal 333 Literal 334 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 347 Literal 348 Literal - 1 Literal 350 Literal 351 Literal 352 Literal 353 Literal 354 Literal 355 Literal 356 Literal 357 Literal 358 Literal - 1 Literal 360 Literal 306 Literal 307 Literal 363 Literal - 1 Literal 310 Literal - 1 Literal - 1 Literal - 1 Literal 314 Literal 315 Literal - 1 Literal 317 Literal 318 Literal 319 Literal 320 Literal - 1 Literal 322 Literal 323 Literal - 1 Literal - 1 Literal 326 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 331 Literal 332 Literal 333 Literal 334 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 347 Literal 348 Literal - 1 Literal 350 Literal 351 Literal 352 Literal 353 Literal 354 Literal 355 Literal 356 Literal 357 Literal 358 Literal - 1 Literal 360 Literal 306 Literal 307 Literal 363 Literal - 1 Literal 310 Literal - 1 Literal - 1 Literal - 1 Literal 314 Literal 315 Literal - 1 Literal 317 Literal 318 Literal 319 Literal 320 Literal - 1 Literal 322 Literal 323 Literal - 1 Literal - 1 Literal 326 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 331 Literal 332 Literal 333 Literal 334 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 347 Literal 348 Literal - 1 Literal 350 Literal 351 Literal 352 Literal 353 Literal 354 Literal 355 Literal 356 Literal 357 Literal 358 Literal - 1 Literal 360 Literal 306 Literal 307 Literal 363 Literal - 1 Literal 310 Literal - 1 Literal - 1 Literal - 1 Literal 314 Literal 315 Literal - 1 Literal 317 Literal 318 Literal 319 Literal 320 Literal - 1 Literal 322 Literal 323 Literal - 1 Literal - 1 Literal 326 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 331 Literal 332 Literal 333 Literal 334 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 347 Literal 348 Literal - 1 Literal 350 Literal 351 Literal 352 Literal 353 Literal 354 Literal 355 Literal 356 Literal 357 Literal 358 Literal - 1 Literal 360 Literal 306 Literal 307 Literal 363 Literal - 1 Literal 310 Literal - 1 Literal - 1 Literal - 1 Literal 314 Literal 315 Literal - 1 Literal 317 Literal 318 Literal 319 Literal 320 Literal - 1 Literal 322 Literal 323 Literal - 1 Literal - 1 Literal 326 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 331 Literal 332 Literal 333 Literal 334 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 347 Literal 348 Literal - 1 Literal 350 Literal 351 Literal 352 Literal 353 Literal 354 Literal 355 Literal 356 Literal 357 Literal 358 Literal - 1 Literal 360 Literal 306 Literal 307 Literal 363 Literal - 1 Literal 310 Literal - 1 Literal - 1 Literal - 1 Literal 314 Literal 315 Literal - 1 Literal 317 Literal 318 Literal 319 Literal 320 Literal - 1 Literal 322 Literal 323 Literal - 1 Literal - 1 Literal 326 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 331 Literal 332 Literal 333 Literal 334 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 347 Literal 348 Literal - 1 Literal 350 Literal 351 Literal 352 Literal 353 Literal 354 Literal 355 Literal 356 Literal 357 Literal 358 Literal - 1 Literal 360 Literal 306 Literal 307 Literal 363 Literal - 1 Literal 310 Literal - 1 Literal - 1 Literal - 1 Literal 314 Literal 315 Literal - 1 Literal 317 Literal 318 Literal 319 Literal 320 Literal - 1 Literal 322 Literal 323 Literal - 1 Literal - 1 Literal 326 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 331 Literal 332 Literal 333 Literal 334 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 347 Literal 348 Literal - 1 Literal 350 Literal 351 Literal 352 Literal 353 Literal 354 Literal 355 Literal 356 Literal 357 Literal 358 Literal - 1 Literal 360 Literal 306 Literal 307 Literal 363 Literal - 1 Literal 310 Literal - 1 Literal - 1 Literal - 1 Literal 314 Literal 315 Literal - 1 Literal 317 Literal 318 Literal 319 Literal 320 Literal - 1 Literal 322 Literal 323 Literal - 1 Literal - 1 Literal 326 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 331 Literal 332 Literal 333 Literal 334 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 347 Literal 348 Literal - 1 Literal 350 Literal 351 Literal 352 Literal 353 Literal 354 Literal 355 Literal 356 Literal 357 Literal 358 Literal - 1 Literal 360 Literal - 1 Literal - 1 Literal 363	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject index LocalVariableDeclaration BasicType int VariableDeclarator i MethodInvocation MemberReference index LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration BasicType int VariableDeclarator e MethodInvocation MemberReference runtime MemberReference i IfStatement BinaryOperation < MemberReference e Literal 0 ReturnStatement MethodInvocation runtime getNil IfStatement MethodInvocation ! str singleByteOptimizable BlockStatement StatementExpression MethodInvocation updateCharOffset StatementExpression Assignment MemberReference e MemberReference charOffsets ArraySelector MemberReference i end = ReturnStatement MethodInvocation RubyFixnum MemberReference runtime MemberReference e newFixnum	1
MethodDeclaration Modifier public ReferenceType IRubyObject op_plus FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject other ReturnStatement MethodInvocation MemberReference context MethodInvocation other convertToString op_plus	1
MethodDeclaration Modifier public Annotation JRubyMethod ReferenceType IRubyObject pop FormalParameter ReferenceType ThreadContext context StatementExpression MethodInvocation modifyCheck IfStatement BinaryOperation == MemberReference realLength Literal 0 ReturnStatement MethodInvocation context MethodInvocation getNil getRuntime TryStatement IfStatement MemberReference isShared BlockStatement ReturnStatement MemberReference ArraySelector BinaryOperation + MemberReference begin MemberReference -- realLength values BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator index BinaryOperation + MemberReference begin MemberReference -- realLength LocalVariableDeclaration Modifier final ReferenceType IRubyObject VariableDeclarator obj MemberReference ArraySelector MemberReference index values StatementExpression Assignment MemberReference ArraySelector MemberReference index values MethodInvocation context MethodInvocation getNil getRuntime = ReturnStatement MemberReference obj CatchClause CatchClauseParameter ArrayIndexOutOfBoundsException e StatementExpression MethodInvocation concurrentModification ReturnStatement MethodInvocation context MethodInvocation getNil getRuntime	1
MethodDeclaration Modifier public Annotation Override BasicType int hashCode ReturnStatement MethodInvocation MethodInvocation getRuntime	0
MethodDeclaration Modifier public ReferenceType Colon3Node getCPath ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType Object javaInvokee FormalParameter ReferenceType Object arg0 StatementExpression MethodInvocation Literal 1 checkArity StatementExpression MethodInvocation MemberReference javaInvokee IfStatement MethodInvocation MemberReference javaInvokee BlockStatement ReturnStatement MethodInvocation MemberReference javaInvokee MemberReference arg0 ReturnStatement MethodInvocation MemberReference method MemberReference javaInvokee MemberReference arg0 invokeDirectWithExceptionHandling	0
MethodDeclaration Modifier public ReferenceType Object case483_line1828 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression MethodInvocation Literal "formal argument cannot be a global variable" yyerror ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public ReferenceType Object case508_line1950 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop IfStatement BinaryOperation == Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals Literal null BlockStatement StatementExpression MethodInvocation Literal "can't define single method for ()." yyerror IfStatement BinaryOperation instanceof Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals ReferenceType ILiteralNode BlockStatement StatementExpression MethodInvocation Literal "can't define single method for literals." yyerror StatementExpression MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals checkExpression StatementExpression Assignment MemberReference yyVal Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public FormalParameter ReferenceType String name FormalParameter ReferenceType Object gotoToken StatementExpression MethodInvocation method dup StatementExpression MethodInvocation method MethodInvocation ClassReference ReferenceType RubyModule p LocalVariableDeclaration ReferenceType Label VariableDeclarator ClassCreator ReferenceType Label LocalVariableDeclaration ReferenceType Label VariableDeclarator ClassCreator ReferenceType Label StatementExpression MethodInvocation method MemberReference StatementExpression MethodInvocation method MemberReference CHECKCAST MethodInvocation ClassReference ReferenceType RubyModule p visitTypeInsn StatementExpression MethodInvocation method MemberReference name ldc StatementExpression MethodInvocation method MethodInvocation ClassReference ReferenceType RubyModule p Literal MethodInvocation ClassReference BasicType boolean MethodInvocation ClassReference ReferenceType String params sig invokevirtual StatementExpression MethodInvocation method Cast ReferenceType Label MemberReference gotoToken StatementExpression MethodInvocation method MemberReference go_to StatementExpression MethodInvocation method MemberReference label StatementExpression MethodInvocation method pop StatementExpression MethodInvocation method Cast ReferenceType Label MemberReference gotoToken go_to StatementExpression MethodInvocation method MemberReference label	0
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator line MethodInvocation MemberReference context MemberReference args WhileStatement MethodInvocation ! line isNil BlockStatement StatementExpression MethodInvocation block MemberReference context MemberReference line yield StatementExpression Assignment MemberReference line MethodInvocation MemberReference context MemberReference args = ReturnStatement This	0
MethodDeclaration Modifier public Annotation Override setArgValues FormalParameter ReferenceType IRubyObject arg0 StatementExpression Assignment MemberReference variableValueZero MemberReference arg0 =	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair required Literal 1 ReferenceType IRubyObject same FormalParameter ReferenceType IRubyObject other IfStatement BinaryOperation instanceof MemberReference other ReferenceType JavaObject BlockStatement StatementExpression Assignment MemberReference other Cast ReferenceType JavaObject MethodInvocation other dataGetStruct = IfStatement BinaryOperation instanceof MemberReference other ReferenceType JavaObject BlockStatement ReturnStatement MethodInvocation MethodInvocation getFalse getRuntime IfStatement BinaryOperation && BinaryOperation == MethodInvocation getValue Literal null BinaryOperation == Cast ReferenceType JavaObject MemberReference other Literal null BlockStatement ReturnStatement MethodInvocation MethodInvocation getTrue getRuntime LocalVariableDeclaration BasicType boolean VariableDeclarator isSame BinaryOperation == MethodInvocation getValue Cast ReferenceType JavaObject MemberReference other ReturnStatement TernaryExpression MemberReference isSame MethodInvocation MethodInvocation getTrue getRuntime MethodInvocation MethodInvocation getFalse getRuntime	0
MethodDeclaration Modifier final public static ReferenceType DynamicMethod FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType RubyModule module FormalParameter ReferenceType com ReferenceType kenai ReferenceType jffi ReferenceType Function function FormalParameter ReferenceType Type returnType FormalParameter ReferenceType Type parameterTypes FormalParameter ReferenceType CallingConvention convention LocalVariableDeclaration ReferenceType DynamicMethod VariableDeclarator dm IfStatement BinaryOperation && BinaryOperation == MemberReference convention MemberReference CallingConvention DEFAULT MethodInvocation MethodInvocation MemberReference returnType MemberReference parameterTypes getFactory BlockStatement StatementExpression Assignment MemberReference dm MethodInvocation MethodInvocation MemberReference module MemberReference function MemberReference returnType MemberReference parameterTypes getFactory = IfStatement BinaryOperation && BinaryOperation == MemberReference convention MemberReference CallingConvention DEFAULT MethodInvocation MethodInvocation MemberReference returnType MemberReference parameterTypes getFactory BlockStatement StatementExpression Assignment MemberReference dm MethodInvocation MethodInvocation MemberReference module MemberReference function MemberReference returnType MemberReference parameterTypes getFactory = BlockStatement StatementExpression Assignment MemberReference dm MethodInvocation MethodInvocation MemberReference module MemberReference function MemberReference returnType MemberReference parameterTypes MemberReference convention MethodInvocation runtime getNil getFactory = ReturnStatement MemberReference dm	0
MethodDeclaration Modifier public ReferenceType RubyModule determineModule IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference MethodInvocation MethodInvocation determineModule = AssertStatement BinaryOperation != MemberReference Literal null Literal is created before determine StatementExpression Assignment MemberReference MethodInvocation MemberReference = ReturnStatement MemberReference	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime TryStatement StatementExpression MethodInvocation MemberReference context MemberReference name MemberReference self MemberReference block MemberReference runtime pre StatementExpression MethodInvocation argsNode MemberReference runtime Literal 2 StatementExpression MethodInvocation argsNode MemberReference context MemberReference runtime MemberReference self MemberReference arg0 MemberReference arg1 MemberReference block prepare ReturnStatement MethodInvocation body MemberReference runtime MemberReference context MemberReference self MemberReference block CatchClause CatchClauseParameter rj ReturnStatement MethodInvocation MemberReference context MemberReference rj handleReturn CatchClause CatchClauseParameter rj ReturnStatement MethodInvocation MemberReference runtime handleRedo StatementExpression MethodInvocation MemberReference runtime MemberReference context MemberReference name post	0
MethodDeclaration Modifier private BasicType boolean FormalParameter ReferenceType Node node IfStatement BinaryOperation instanceof MemberReference node ReferenceType MultipleAsgnNode BlockStatement ThrowStatement ClassCreator ReferenceType SyntaxException MemberReference PID MethodInvocation node getPosition MethodInvocation lexer getCurrentLine Literal "Multiple assignment in IfStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation instanceof MemberReference node ReferenceType LocalAsgnNode BinaryOperation instanceof MemberReference node ReferenceType BinaryOperation instanceof MemberReference node ReferenceType GlobalAsgnNode BinaryOperation instanceof MemberReference node ReferenceType InstAsgnNode BlockStatement LocalVariableDeclaration ReferenceType Node VariableDeclarator Cast ReferenceType AssignableNode MemberReference node IfStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation instanceof MemberReference ReferenceType ILiteralNode BinaryOperation instanceof MemberReference ReferenceType NilNode BinaryOperation instanceof MemberReference ReferenceType TrueNode BinaryOperation instanceof MemberReference ReferenceType FalseNode BlockStatement StatementExpression MethodInvocation warnings MemberReference ID MethodInvocation node getPosition Literal "Found '=' in should be warn ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration Modifier public static Annotation Deprecated ReferenceType Object convertRubyToJava FormalParameter ReferenceType IRubyObject rubyObject ReturnStatement MethodInvocation MemberReference rubyObject ClassReference ReferenceType Object convertRubyToJava	1
MethodDeclaration Modifier private ReferenceType ByteList succCommon19 FormalParameter ReferenceType ByteList original LocalVariableDeclaration BasicType byte VariableDeclarator carry ArrayCreator BasicType byte MemberReference org.jcodings.Config ENC_CODE_TO_MBC_MAXLEN LocalVariableDeclaration BasicType int VariableDeclarator carryP Literal 0 StatementExpression Assignment MemberReference ArraySelector Literal 0 carry Literal 1 = LocalVariableDeclaration BasicType int VariableDeclarator carryLen Literal 1 LocalVariableDeclaration ReferenceType ByteList VariableDeclarator value ClassCreator ReferenceType ByteList MemberReference original StatementExpression Assignment MemberReference value encoding MemberReference original encoding = LocalVariableDeclaration ReferenceType Encoding VariableDeclarator enc MemberReference original encoding LocalVariableDeclaration BasicType int VariableDeclarator p MemberReference value begin LocalVariableDeclaration BasicType int VariableDeclarator end BinaryOperation + MemberReference p MemberReference value realSize LocalVariableDeclaration BasicType int VariableDeclarator s MemberReference end LocalVariableDeclaration BasicType byte VariableDeclarator bytes MemberReference value bytes LocalVariableDeclaration ReferenceType NeighborChar VariableDeclarator neighbor MemberReference NeighborChar FOUND LocalVariableDeclaration BasicType int VariableDeclarator lastAlnum Literal - 1 LocalVariableDeclaration BasicType boolean VariableDeclarator alnumSeen Literal false WhileStatement BinaryOperation != Assignment MemberReference s MethodInvocation enc MemberReference bytes MemberReference p MemberReference s MemberReference end prevCharHead = Literal - 1 BlockStatement IfStatement BinaryOperation && BinaryOperation == MemberReference neighbor MemberReference NeighborChar NOT_CHAR BinaryOperation != MemberReference lastAlnum Literal - 1 BlockStatement IfStatement TernaryExpression MethodInvocation ASCII BinaryOperation & MemberReference ArraySelector MemberReference lastAlnum bytes Literal 0xff isAlpha MethodInvocation ASCII BinaryOperation & MemberReference ArraySelector MemberReference s bytes Literal 0xff isDigit TernaryExpression MethodInvocation ASCII BinaryOperation & MemberReference ArraySelector MemberReference lastAlnum bytes Literal 0xff isDigit MethodInvocation ASCII BinaryOperation & MemberReference ArraySelector MemberReference s bytes Literal 0xff isAlpha Literal false BlockStatement StatementExpression Assignment MemberReference s MemberReference lastAlnum = BreakStatement LocalVariableDeclaration BasicType int VariableDeclarator cl MethodInvocation StringSupport MemberReference enc MemberReference bytes MemberReference s MemberReference end preciseLength IfStatement BinaryOperation <= MemberReference cl Literal 0 ContinueStatement SwitchStatement Assignment MemberReference neighbor MethodInvocation MemberReference enc MemberReference bytes MemberReference s MemberReference cl MemberReference carry Literal 0 = SwitchStatementCase NOT_CHAR ContinueStatement SwitchStatementCase FOUND ReturnStatement MemberReference value SwitchStatementCase WRAPPED StatementExpression Assignment MemberReference lastAlnum MemberReference s = StatementExpression Assignment MemberReference alnumSeen Literal true = StatementExpression Assignment MemberReference carryP BinaryOperation - MemberReference s MemberReference p = StatementExpression Assignment MemberReference carryLen MemberReference cl = IfStatement MemberReference ! alnumSeen BlockStatement StatementExpression Assignment MemberReference s MemberReference end = WhileStatement BinaryOperation != Assignment MemberReference s MethodInvocation enc MemberReference bytes MemberReference p MemberReference s MemberReference end prevCharHead = Literal - 1 BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator cl MethodInvocation StringSupport MemberReference enc MemberReference bytes MemberReference s MemberReference end preciseLength IfStatement BinaryOperation <= MemberReference cl Literal 0 ContinueStatement StatementExpression Assignment MemberReference neighbor MethodInvocation MemberReference enc MemberReference bytes MemberReference s MemberReference cl succChar = IfStatement BinaryOperation == MemberReference neighbor MemberReference NeighborChar FOUND ReturnStatement MemberReference value IfStatement BinaryOperation != MethodInvocation StringSupport MemberReference enc MemberReference bytes MemberReference s BinaryOperation + MemberReference s Literal 1 preciseLength MemberReference cl StatementExpression MethodInvocation MemberReference enc MemberReference bytes MemberReference s MemberReference cl succChar IfStatement MethodInvocation ! enc isAsciiCompatible BlockStatement StatementExpression MethodInvocation System MemberReference bytes MemberReference s MemberReference carry Literal 0 MemberReference cl arraycopy StatementExpression Assignment MemberReference carryLen MemberReference cl = StatementExpression Assignment MemberReference carryP BinaryOperation - MemberReference s MemberReference p = StatementExpression MethodInvocation value BinaryOperation + BinaryOperation + MemberReference value begin MemberReference value realSize MemberReference carryLen StatementExpression Assignment MemberReference s BinaryOperation + MemberReference value begin MemberReference carryP = StatementExpression MethodInvocation System MemberReference value bytes MemberReference s MemberReference value bytes BinaryOperation + MemberReference s MemberReference carryLen BinaryOperation - MemberReference value realSize MemberReference carryP arraycopy StatementExpression MethodInvocation System MemberReference carry Literal 0 MemberReference value bytes MemberReference s MemberReference carryLen arraycopy StatementExpression Assignment MemberReference value realSize MemberReference carryLen += ReturnStatement MemberReference value	1
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType RubyNumeric numeric FormalParameter ReferenceType Class target LocalVariableDeclaration BasicType long VariableDeclarator value MethodInvocation numeric getLongValue IfStatement MethodInvocation MemberReference value BlockStatement ReturnStatement MethodInvocation Character Cast BasicType char MemberReference value valueOf ThrowStatement MethodInvocation numeric MethodInvocation BinaryOperation + Literal "too for " MemberReference numeric newRangeError getRuntime	0
MethodDeclaration Modifier public static ReferenceType IRubyObject aryToAry FormalParameter ReferenceType IRubyObject value IfStatement BinaryOperation instanceof MemberReference value ReferenceType RubyArray ReturnStatement MemberReference value IfStatement MethodInvocation value Literal "to_ary" respondsTo BlockStatement ReturnStatement MethodInvocation TypeConverter MemberReference value MethodInvocation value MethodInvocation getArray getRuntime Literal "to_ary" Literal false convertToType ReturnStatement MethodInvocation value MethodInvocation MemberReference value newArray getRuntime	1
MethodDeclaration Modifier public ReferenceType Object case282_line1067 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType HashNode MethodInvocation Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals getPosition Cast ReferenceType ListNode MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public Annotation Deprecated ReferenceType Callback getSingletonMethod FormalParameter ReferenceType String method FormalParameter ReferenceType Class arg1 FormalParameter ReferenceType Class arg2 FormalParameter ReferenceType Class arg3 ReturnStatement ClassCreator ReferenceType ReflectionCallback MemberReference type MemberReference method ArrayCreator ReferenceType Class ArrayInitializer MemberReference arg1 MemberReference arg2 MemberReference arg3 Literal false Literal true MethodInvocation Arity Literal 3 fixed Literal false	1
MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext ctx FormalParameter ReferenceType IRubyObject largs FormalParameter ReferenceType Block blk StatementExpression MethodInvocation MemberReference localContext MemberReference ctx Literal "none?" checkContext LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator larg MethodInvocation MemberReference runtime MemberReference largs checkArgs IfStatement MethodInvocation larg isTrue ThrowStatement MemberReference JumpException SPECIAL_JUMP ReturnStatement MethodInvocation runtime getNil	1
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference Literal " = " MemberReference	0
MethodDeclaration Modifier public invokespecial FormalParameter ReferenceType String arg1 FormalParameter ReferenceType String arg2 FormalParameter ReferenceType String arg3 StatementExpression MethodInvocation MethodInvocation MemberReference INVOKESPECIAL MemberReference arg1 MemberReference arg2 MemberReference arg3 visitMethodInsn getMethodVisitor	0
MethodDeclaration Modifier public ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType List TypeArgument ReferenceType JavaMethodDescriptor ReturnStatement MemberReference annotatedMethods1_8	1
MethodDeclaration Modifier public Annotation Override ReferenceType String FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block IfStatement BinaryOperation != MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference Literal null BlockStatement TryStatement LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator receiver MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator metaClass MethodInvocation receiver getMetaClass LocalVariableDeclaration ReferenceType DynamicMethod VariableDeclarator method MethodInvocation metaClass MemberReference name searchMethod LocalVariableDeclaration ReferenceType Visibility VariableDeclarator visibility MethodInvocation method getVisibility IfStatement BinaryOperation && BinaryOperation != MemberReference visibility MemberReference Visibility PRIVATE BinaryOperation || BinaryOperation != MemberReference visibility MemberReference Visibility PROTECTED MethodInvocation metaClass MethodInvocation MemberReference self isInstance getRealClass BlockStatement IfStatement MethodInvocation metaClass MemberReference name Literal false isMethodBound BlockStatement ReturnStatement MethodInvocation ASTInterpreter MemberReference runtime MemberReference context MemberReference argsNode Literal MemberReference self MemberReference CatchClause CatchClauseParameter JumpException e ReturnStatement Literal null	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair required Literal 1 ElementValuePair optional Literal 1 ElementValuePair frame Literal true ElementValuePair module Literal true ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation recv getRuntime StatementExpression MethodInvocation runtime MethodInvocation Literal require ReturnStatement MethodInvocation RuntimeHelpers MemberReference context MethodInvocation runtime Literal MemberReference args MemberReference block invoke	0
MethodDeclaration Modifier public static BasicType boolean ReturnStatement Literal true	0
MethodDeclaration Modifier public final FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType IRubyObject key FormalParameter ReferenceType IRubyObject value IfStatement BinaryOperation == MethodInvocation key MethodInvocation getRealClass getMetaClass MethodInvocation runtime getString BlockStatement StatementExpression MethodInvocation MemberReference runtime Cast ReferenceType RubyString MemberReference key MemberReference value BlockStatement StatementExpression MethodInvocation MemberReference key MemberReference value	0
MethodDeclaration Modifier public Annotation Deprecated ReferenceType Callback getFastMethod FormalParameter ReferenceType String rubyName FormalParameter ReferenceType String method FormalParameter ReferenceType Class arg1 ReturnStatement ClassCreator ReferenceType ReflectionCallback MemberReference type MemberReference method ArrayCreator ReferenceType Class ArrayInitializer MemberReference arg1 Literal false Literal false MethodInvocation Arity singleArgument Literal true	1
MethodDeclaration Modifier public BasicType boolean allowClass FormalParameter ReferenceType String name ReturnStatement MethodInvocation ! name Literal "File" equals	1
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType String internedName FormalParameter ReferenceType RubyModule object LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator result MethodInvocation MemberReference runtime MemberReference internedName MemberReference object getConstantInner ReturnStatement TernaryExpression BinaryOperation == MemberReference result Literal null MethodInvocation MemberReference internedName fastGetConstant MemberReference result	0
MethodDeclaration Modifier public setUp Exception StatementExpression SuperMethodInvocation setUp StatementExpression Assignment MemberReference runtime MethodInvocation Ruby newInstance = StatementExpression Assignment MemberReference target ClassCreator ReferenceType =	0
MethodDeclaration Modifier public BasicType int write FormalParameter ReferenceType ByteList buf IOException BadDescriptorException StatementExpression MethodInvocation ReturnStatement MethodInvocation MethodInvocation ByteBuffer MethodInvocation buf unsafeBytes MethodInvocation buf begin MethodInvocation buf length wrap	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair required Literal 1 ElementValuePair frame Literal true ElementValuePair module Literal true ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject arg FormalParameter ReferenceType Block b LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation recv getRuntime StatementExpression MethodInvocation runtime MethodInvocation arg isTrue ReturnStatement MethodInvocation runtime getNil	0
MethodDeclaration Modifier private BasicType int IfStatement MethodInvocation isZero BlockStatement ReturnStatement Literal 0 LocalVariableDeclaration ReferenceType BigDecimal VariableDeclarator val MethodInvocation value MethodInvocation stripTrailingZeros abs ReturnStatement BinaryOperation - MethodInvocation val precision MethodInvocation val scale	1
MethodDeclaration Modifier private FormalParameter ReferenceType Node node FormalParameter ReferenceType BodyCompiler context FormalParameter Modifier final BasicType boolean LocalVariableDeclaration Modifier final ReferenceType RescueNode VariableDeclarator rescueNode Cast ReferenceType RescueNode MemberReference node LocalVariableDeclaration ReferenceType BranchCallback VariableDeclarator body ClassCreator ReferenceType BranchCallback MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context IfStatement BinaryOperation != MethodInvocation rescueNode getBodyNode Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation rescueNode getBodyNode MemberReference context Literal true compile BlockStatement StatementExpression MethodInvocation context loadNil IfStatement BinaryOperation != MethodInvocation rescueNode Literal null BlockStatement StatementExpression MethodInvocation context consumeCurrentValue StatementExpression MethodInvocation MethodInvocation rescueNode MemberReference context Literal true compile LocalVariableDeclaration ReferenceType BranchCallback VariableDeclarator ClassCreator ReferenceType BranchCallback MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation MethodInvocation rescueNode MemberReference context MemberReference LocalVariableDeclaration ReferenceType ASTInspector VariableDeclarator ClassCreator ReferenceType ASTInspector StatementExpression MethodInvocation MethodInvocation rescueNode inspect IfStatement MemberReference BlockStatement StatementExpression MethodInvocation context MemberReference body MemberReference MethodInvocation MemberReference ASTInspector getFlag BlockStatement StatementExpression MethodInvocation context MemberReference body MemberReference MethodInvocation MemberReference ASTInspector getFlag	0
MethodDeclaration Modifier public static ReferenceType JRubyFile create FormalParameter ReferenceType String cwd FormalParameter ReferenceType String pathname ReturnStatement MethodInvocation MemberReference cwd MemberReference pathname	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal Annotation Override ReferenceType IRubyObject abs FormalParameter ReferenceType ThreadContext context IfStatement BinaryOperation < MethodInvocation Double MemberReference value doubleToLongBits Literal 0 BlockStatement ReturnStatement MethodInvocation RubyFloat MethodInvocation context getRuntime MethodInvocation Math MemberReference value abs newFloat ReturnStatement This	0
MethodDeclaration Modifier public call FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation MethodInvocation getValueNode MemberReference context Literal true compile	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "sort_by" ElementValuePair frame Literal true ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter Modifier final ReferenceType Block block ReturnStatement TernaryExpression MethodInvocation block isGiven MethodInvocation MemberReference context MemberReference self MemberReference block sort_by MethodInvocation MethodInvocation context getRuntime MemberReference self Literal "sort_by" enumeratorize	1
MethodDeclaration Modifier public TryStatement StatementExpression MethodInvocation runtime Literal CatchClause CatchClauseParameter RaiseException e StatementExpression MethodInvocation Literal of non-existent library should fail" ClassReference ReferenceType RaiseException MethodInvocation e getClass assertEquals StatementExpression MethodInvocation Literal of non-existent library should exception should only be RaiseException with no root cause" MethodInvocation e getCause	0
MethodDeclaration Modifier public static ReferenceType IRubyObject isExceptionHandled FormalParameter ReferenceType RubyException currentException FormalParameter ReferenceType IRubyObject exception0 FormalParameter ReferenceType IRubyObject exception1 FormalParameter ReferenceType IRubyObject exception2 FormalParameter ReferenceType ThreadContext context LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator result MethodInvocation MemberReference currentException MemberReference exception0 MemberReference context isExceptionHandled IfStatement MethodInvocation result isTrue ReturnStatement MemberReference result ReturnStatement MethodInvocation MemberReference currentException MemberReference exception1 MemberReference exception2 MemberReference context isExceptionHandled	1
MethodDeclaration Modifier public final Annotation JRubyMethod ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context ReturnStatement MethodInvocation RubyArray MethodInvocation context getRuntime MemberReference parameterTypes newArray	1
MethodDeclaration Modifier public final BasicType long getAddress ReturnStatement Cast ReferenceType MethodInvocation getMemoryIO	0
MethodDeclaration Modifier private BasicType int star FormalParameter BasicType boolean spaceSeen IOException LocalVariableDeclaration BasicType int VariableDeclarator c MethodInvocation src read SwitchStatement MemberReference c SwitchStatementCase Literal '*' IfStatement BinaryOperation == Assignment MemberReference c MethodInvocation src read = Literal '=' BlockStatement StatementExpression Assignment MemberReference lex_state MemberReference LexState EXPR_BEG = StatementExpression Assignment MemberReference yaccValue ClassCreator ReferenceType Token Literal "**" MethodInvocation getPosition = ReturnStatement MemberReference Tokens tOP_ASGN StatementExpression MethodInvocation src MemberReference c unread StatementExpression Assignment MemberReference yaccValue ClassCreator ReferenceType Token Literal "**" MethodInvocation getPosition = StatementExpression Assignment MemberReference c MemberReference Tokens tPOW = BreakStatement SwitchStatementCase Literal '=' StatementExpression Assignment MemberReference lex_state MemberReference LexState EXPR_BEG = StatementExpression Assignment MemberReference yaccValue ClassCreator ReferenceType Token Literal "*" MethodInvocation getPosition = ReturnStatement MemberReference Tokens tOP_ASGN SwitchStatementCase StatementExpression MethodInvocation src MemberReference c unread IfStatement BinaryOperation && BinaryOperation && MethodInvocation isARG MemberReference spaceSeen MethodInvocation ! Character MemberReference c isWhitespace BlockStatement IfStatement MethodInvocation warnings isVerbose StatementExpression MethodInvocation warnings MemberReference ID ARGUMENT_AS_PREFIX MethodInvocation getPosition Literal interpreted as argument Literal "*" warning StatementExpression Assignment MemberReference c MemberReference Tokens tSTAR = IfStatement MethodInvocation isBEG BlockStatement StatementExpression Assignment MemberReference c MemberReference Tokens tSTAR = BlockStatement StatementExpression Assignment MemberReference c MemberReference Tokens tSTAR2 = StatementExpression Assignment MemberReference yaccValue ClassCreator ReferenceType Token Literal "*" MethodInvocation getPosition = StatementExpression MethodInvocation determineExpressionState ReturnStatement MemberReference c	1
MethodDeclaration Modifier private static FormalParameter ReferenceType Map methods FormalParameter ReferenceType Class classOrInterface FormalParameter ReferenceType Set names LocalVariableDeclaration ReferenceType Method VariableDeclarator mths MethodInvocation classOrInterface getDeclaredMethods ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference mths length MemberReference ++ i BlockStatement IfStatement BinaryOperation || BinaryOperation == MemberReference names Literal null MethodInvocation names MemberReference ArraySelector MemberReference i MethodInvocation getName mths contains BlockStatement StatementExpression MethodInvocation MemberReference methods MemberReference ArraySelector MemberReference i mths addMethod	1
MethodDeclaration Modifier public static BasicType long FormalParameter ReferenceType Encoding enc FormalParameter BasicType byte bytes FormalParameter BasicType int p FormalParameter BasicType int end IfStatement MethodInvocation enc BlockStatement ReturnStatement BinaryOperation / BinaryOperation - BinaryOperation + BinaryOperation - MemberReference end MemberReference p MethodInvocation enc minLength Literal 1 MethodInvocation enc minLength IfStatement MethodInvocation enc isAsciiCompatible BlockStatement ReturnStatement MethodInvocation MemberReference enc MemberReference bytes MemberReference p MemberReference end BlockStatement ReturnStatement MethodInvocation MemberReference enc MemberReference bytes MemberReference p MemberReference end	0
MethodDeclaration Modifier public ReferenceType String getTypeInstance FormalParameter BasicType long i FormalParameter ReferenceType String o FormalParameter ReferenceType String o2 FormalParameter ReferenceType String ReturnStatement Literal	0
MethodDeclaration Modifier public final BasicType float FormalParameter BasicType long offset ThrowStatement MethodInvocation ex	0
MethodDeclaration Modifier private final static BasicType short ReturnStatement ArrayCreator BasicType short ArrayInitializer Literal 354 Literal 355 Literal 356 Literal 357 Literal 358 Literal 359 Literal 360 Literal 361 Literal 362 Literal - 1 Literal 364 Literal 365 Literal 366 Literal 367 Literal 368 Literal 369 Literal 63 Literal - 1 Literal - 1 Literal 373 Literal - 1 Literal 375 Literal 376 Literal - 1 Literal 378 Literal 379 Literal 257 Literal 258 Literal 259 Literal - 1 Literal 261 Literal 262 Literal 263 Literal 264 Literal 265 Literal 266 Literal 267 Literal 268 Literal 269 Literal 270 Literal 271 Literal 272 Literal 273 Literal 274 Literal 275 Literal 276 Literal 277 Literal 278 Literal - 1 Literal - 1 Literal 281 Literal 282 Literal 283 Literal 284 Literal 285 Literal 286 Literal 287 Literal 288 Literal 289 Literal 290 Literal 291 Literal 292 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal 299 Literal - 1 Literal - 1 Literal 302 Literal 303 Literal 304 Literal - 1 Literal 306 Literal 307 Literal 308 Literal 309 Literal 310 Literal 311 Literal 312 Literal 313 Literal 314 Literal 315 Literal 316 Literal 317 Literal 318 Literal 319 Literal 320 Literal 321 Literal 322 Literal 323 Literal 324 Literal 325 Literal 326 Literal 327 Literal 328 Literal 329 Literal 330 Literal - 1 Literal - 1 Literal 333 Literal 334 Literal 335 Literal 336 Literal - 1 Literal 338 Literal 339 Literal - 1 Literal 341 Literal 342 Literal 343 Literal 344 Literal 345 Literal 346 Literal 347 Literal 348 Literal 349 Literal 350 Literal 351 Literal 352 Literal 353 Literal 354 Literal 355 Literal 356 Literal 357 Literal 358 Literal 359 Literal 360 Literal 0 Literal 362 Literal - 1 Literal 364 Literal 365 Literal 366 Literal 367 Literal 368 Literal 369 Literal - 1 Literal 10 Literal - 1 Literal 373 Literal - 1 Literal 375 Literal 376 Literal - 1 Literal 378 Literal 379 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 281 Literal 282 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 44 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 59 Literal - 1 Literal 61 Literal - 1 Literal 63 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 317 Literal 318 Literal 319 Literal 320 Literal 321 Literal 322 Literal 323 Literal 324 Literal 325 Literal 326 Literal 327 Literal - 1 Literal 329 Literal 330 Literal - 1 Literal - 1 Literal 333 Literal 334 Literal - 1 Literal - 1 Literal 91 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal 344 Literal 348 Literal 346 Literal 350 Literal - 1 Literal 352 Literal 353 Literal 354 Literal 355 Literal 356 Literal 357 Literal 358 Literal - 1 Literal 360 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 362 Literal 297 Literal - 1 Literal - 1 Literal 0 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 10 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 317 Literal 318 Literal 319 Literal 320 Literal 321 Literal 322 Literal 323 Literal 324 Literal 325 Literal 326 Literal 327 Literal - 1 Literal 329 Literal 330 Literal - 1 Literal - 1 Literal 333 Literal 334 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 44 Literal - 1 Literal - 1 Literal - 1 Literal 348 Literal - 1 Literal 350 Literal - 1 Literal 352 Literal 353 Literal 354 Literal 355 Literal 356 Literal 357 Literal 358 Literal 59 Literal 360 Literal 61 Literal - 1 Literal 63 Literal - 1 Literal - 1 Literal - 1 Literal 306 Literal 307 Literal - 1 Literal - 1 Literal 310 Literal - 1 Literal - 1 Literal - 1 Literal 314 Literal 315 Literal - 1 Literal 317 Literal 318 Literal 319 Literal 320 Literal 321 Literal 322 Literal 323 Literal - 1 Literal - 1 Literal 326 Literal 327 Literal - 1 Literal - 1 Literal 91 Literal 331 Literal 332 Literal 333 Literal 334 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 340 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 10 Literal 347 Literal 348 Literal - 1 Literal 350 Literal 351 Literal 352 Literal 353 Literal 354 Literal 355 Literal 356 Literal 357 Literal 358 Literal 359 Literal 360 Literal - 1 Literal 0 Literal 363 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 10 Literal 257 Literal 258 Literal 259 Literal - 1 Literal 261 Literal 262 Literal 263 Literal 264 Literal 265 Literal 266 Literal - 1 Literal 268 Literal 269 Literal 270 Literal 271 Literal 272 Literal 273 Literal 274 Literal 275 Literal 276 Literal 277 Literal 278 Literal 59 Literal 280 Literal - 1 Literal - 1 Literal 283 Literal 284 Literal 285 Literal 286 Literal 287 Literal 288 Literal 289 Literal 290 Literal 291 Literal 292 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal 299 Literal - 1 Literal - 1 Literal 302 Literal 303 Literal 304 Literal 59 Literal 306 Literal 307 Literal 308 Literal 309 Literal 310 Literal 311 Literal 312 Literal 313 Literal 314 Literal 315 Literal 316 Literal 317 Literal 318 Literal 319 Literal 320 Literal 321 Literal 322 Literal 323 Literal 324 Literal 325 Literal 326 Literal 327 Literal 328 Literal 329 Literal 330 Literal - 1 Literal - 1 Literal 333 Literal 334 Literal 335 Literal 336 Literal - 1 Literal - 1 Literal 339 Literal 340 Literal 341 Literal 342 Literal 343 Literal - 1 Literal 345 Literal - 1 Literal 347 Literal 348 Literal 349 Literal 350 Literal 351 Literal 352 Literal 353 Literal 354 Literal 355 Literal 356 Literal 357 Literal 358 Literal 359 Literal 360 Literal 361 Literal 362 Literal - 1 Literal 364 Literal 365 Literal 366 Literal 367 Literal 368 Literal 369 Literal - 1 Literal - 1 Literal - 1 Literal 373 Literal - 1 Literal 375 Literal 376 Literal 63 Literal 378 Literal 379 Literal 257 Literal 258 Literal 259 Literal - 1 Literal 261 Literal 262 Literal 263 Literal 264 Literal 265 Literal 266 Literal - 1 Literal 268 Literal 269 Literal 270 Literal 271 Literal 272 Literal 273 Literal 274 Literal 275 Literal 276 Literal 277 Literal 278 Literal - 1 Literal 280 Literal - 1 Literal - 1 Literal 283 Literal 284 Literal 285 Literal 286 Literal 287 Literal 288 Literal 289 Literal 290 Literal 291 Literal 292 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal 299 Literal - 1 Literal - 1 Literal 302 Literal 303 Literal 304 Literal - 1 Literal 306 Literal 307 Literal 308 Literal 309 Literal 310 Literal 311 Literal 312 Literal 313 Literal 314 Literal 315 Literal 316 Literal 317 Literal 318 Literal 319 Literal 320 Literal 321 Literal 322 Literal 323 Literal 324 Literal 325 Literal 326 Literal 327 Literal 328 Literal 329 Literal 330 Literal - 1 Literal - 1 Literal 333 Literal 334 Literal 335 Literal 336 Literal - 1 Literal - 1 Literal 339 Literal 340 Literal 341 Literal 342 Literal 343 Literal - 1 Literal 345 Literal - 1 Literal 347 Literal 348 Literal 349 Literal 350 Literal 351 Literal 352 Literal 353 Literal 354 Literal 355 Literal 356 Literal 357 Literal 358 Literal 359 Literal 360 Literal 361 Literal 362 Literal - 1 Literal 364 Literal 365 Literal 366 Literal 367 Literal 368 Literal 369 Literal 0 Literal - 1 Literal - 1 Literal 373 Literal - 1 Literal 375 Literal 376 Literal - 1 Literal 378 Literal 379 Literal 10 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 306 Literal 281 Literal 308 Literal 309 Literal 310 Literal 311 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 44 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 328 Literal - 1 Literal - 1 Literal - 1 Literal 59 Literal - 1 Literal 61 Literal 335 Literal 63 Literal - 1 Literal - 1 Literal 339 Literal 340 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 347 Literal 348 Literal 349 Literal 350 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 91 Literal - 1 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 362 Literal - 1 Literal - 1 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 0 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 10 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 317 Literal 318 Literal 319 Literal 320 Literal 321 Literal 322 Literal 323 Literal 324 Literal 325 Literal 326 Literal 327 Literal - 1 Literal 329 Literal 330 Literal - 1 Literal - 1 Literal 333 Literal 334 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 44 Literal - 1 Literal 348 Literal - 1 Literal 350 Literal - 1 Literal 352 Literal 353 Literal 354 Literal 355 Literal 356 Literal 357 Literal 358 Literal - 1 Literal 360 Literal 59 Literal - 1 Literal 61 Literal - 1 Literal 63 Literal - 1 Literal - 1 Literal - 1 Literal 306 Literal 307 Literal - 1 Literal - 1 Literal 310 Literal - 1 Literal - 1 Literal - 1 Literal 314 Literal 315 Literal - 1 Literal 317 Literal 318 Literal 319 Literal 320 Literal 321 Literal 322 Literal 323 Literal - 1 Literal - 1 Literal 326 Literal 327 Literal - 1 Literal - 1 Literal 91 Literal 331 Literal 332 Literal 333 Literal 334 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 340 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 347 Literal 348 Literal - 1 Literal 350 Literal 351 Literal 352 Literal 353 Literal 354 Literal 355 Literal 356 Literal 357 Literal 358 Literal 359 Literal 360 Literal - 1 Literal 0 Literal 363 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 10 Literal 257 Literal 258 Literal 259 Literal - 1 Literal 261 Literal 262 Literal 263 Literal 264 Literal 265 Literal 266 Literal - 1 Literal 268 Literal 269 Literal 270 Literal 271 Literal 272 Literal 273 Literal 274 Literal 275 Literal 276 Literal 277 Literal 278 Literal - 1 Literal 280 Literal - 1 Literal - 1 Literal 283 Literal 284 Literal 285 Literal 286 Literal 287 Literal 288 Literal 289 Literal 290 Literal 291 Literal 292 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal 299 Literal - 1 Literal - 1 Literal 302 Literal 303 Literal 304 Literal 59 Literal 306 Literal 307 Literal 308 Literal 309 Literal 310 Literal 311 Literal 312 Literal 313 Literal 314 Literal 315 Literal 316 Literal 317 Literal 318 Literal 319 Literal 320 Literal 321 Literal 322 Literal 323 Literal 324 Literal 325 Literal 326 Literal 327 Literal 328 Literal 329 Literal 330 Literal - 1 Literal - 1 Literal 333 Literal 334 Literal 335 Literal 336 Literal - 1 Literal - 1 Literal 339 Literal 340 Literal 341 Literal 342 Literal 343 Literal - 1 Literal 345 Literal - 1 Literal 347 Literal 348 Literal 349 Literal 350 Literal 351 Literal 352 Literal 353 Literal 354 Literal 355 Literal 356 Literal 357 Literal 358 Literal 359 Literal 360 Literal 361 Literal 362 Literal - 1 Literal 364 Literal 365 Literal 366 Literal 367 Literal 368 Literal 369 Literal - 1 Literal - 1 Literal - 1 Literal 373 Literal - 1 Literal 375 Literal 376 Literal - 1 Literal 378 Literal 379 Literal 257 Literal 258 Literal 259 Literal - 1 Literal 261 Literal 262 Literal 263 Literal 264 Literal 265 Literal 266 Literal - 1 Literal 268 Literal 269 Literal 270 Literal 271 Literal 272 Literal 273 Literal 274 Literal 275 Literal 276 Literal 277 Literal 278 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 283 Literal 284 Literal 285 Literal 286 Literal 287 Literal 288 Literal 289 Literal 290 Literal 291 Literal 292 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal 299 Literal - 1 Literal - 1 Literal 302 Literal 303 Literal 304 Literal 44 Literal 306 Literal 307 Literal 308 Literal 309 Literal 310 Literal 311 Literal 312 Literal 313 Literal 314 Literal 315 Literal 316 Literal 317 Literal 318 Literal 319 Literal 320 Literal 321 Literal 322 Literal 323 Literal 324 Literal 325 Literal 326 Literal 327 Literal 328 Literal 329 Literal 330 Literal - 1 Literal - 1 Literal 333 Literal 334 Literal 335 Literal 336 Literal - 1 Literal - 1 Literal 339 Literal 340 Literal 341 Literal 342 Literal 343 Literal - 1 Literal 345 Literal - 1 Literal 347 Literal 348 Literal 349 Literal 350 Literal 351 Literal 352 Literal 353 Literal 354 Literal 355 Literal 356 Literal 357 Literal 358 Literal 359 Literal 360 Literal - 1 Literal 362 Literal - 1 Literal 364 Literal 365 Literal 366 Literal 367 Literal 368 Literal 369 Literal - 1 Literal - 1 Literal - 1 Literal 373 Literal - 1 Literal 375 Literal 376 Literal - 1 Literal 378 Literal 379 Literal 257 Literal 258 Literal 259 Literal - 1 Literal 261 Literal 262 Literal 263 Literal 264 Literal 265 Literal 266 Literal 267 Literal 268 Literal 269 Literal 270 Literal 271 Literal 272 Literal 273 Literal 274 Literal 275 Literal 276 Literal 277 Literal 278 Literal - 1 Literal - 1 Literal 281 Literal - 1 Literal 283 Literal 284 Literal 285 Literal 286 Literal 287 Literal 288 Literal 289 Literal 290 Literal 291 Literal 292 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal 299 Literal - 1 Literal - 1 Literal 302 Literal 303 Literal 304 Literal - 1 Literal 306 Literal 307 Literal 308 Literal 309 Literal 310 Literal 311 Literal 312 Literal 313 Literal 314 Literal 315 Literal 316 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 0 Literal 328 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 335 Literal 336 Literal 10 Literal - 1 Literal 339 Literal - 1 Literal 341 Literal 342 Literal 343 Literal - 1 Literal 345 Literal - 1 Literal 347 Literal - 1 Literal 349 Literal - 1 Literal 351 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 359 Literal - 1 Literal - 1 Literal 362 Literal - 1 Literal 364 Literal 365 Literal 366 Literal 367 Literal 368 Literal 369 Literal - 1 Literal 44 Literal - 1 Literal 373 Literal - 1 Literal 375 Literal 376 Literal - 1 Literal 378 Literal 379 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 58 Literal 59 Literal - 1 Literal 61 Literal - 1 Literal 63 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 257 Literal 258 Literal 259 Literal - 1 Literal 261 Literal - 1 Literal - 1 Literal - 1 Literal 265 Literal 266 Literal - 1 Literal - 1 Literal - 1 Literal 270 Literal - 1 Literal 272 Literal 273 Literal 274 Literal 275 Literal 276 Literal 277 Literal 278 Literal - 1 Literal 91 Literal - 1 Literal - 1 Literal 283 Literal 284 Literal 285 Literal 286 Literal 287 Literal 288 Literal 289 Literal 0 Literal - 1 Literal 292 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 299 Literal 10 Literal - 1 Literal 302 Literal 303 Literal 304 Literal - 1 Literal 306 Literal 307 Literal 308 Literal 309 Literal 310 Literal 311 Literal - 1 Literal 313 Literal - 1 Literal - 1 Literal 316 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 44 Literal - 1 Literal 336 Literal - 1 Literal - 1 Literal 339 Literal - 1 Literal - 1 Literal 342 Literal 343 Literal - 1 Literal 345 Literal - 1 Literal - 1 Literal 58 Literal 59 Literal - 1 Literal - 1 Literal - 1 Literal 63 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 364 Literal 365 Literal 366 Literal 367 Literal 368 Literal 369 Literal - 1 Literal - 1 Literal - 1 Literal 373 Literal - 1 Literal 375 Literal 376 Literal - 1 Literal 378 Literal 379 Literal - 1 Literal 91 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 667 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 677 Literal - 1 Literal - 1 Literal 680 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 0 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 10 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 44 Literal - 1 Literal - 1 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal 58 Literal 59 Literal - 1 Literal 61 Literal - 1 Literal 63 Literal - 1 Literal 280 Literal 281 Literal 282 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 305 Literal 91 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 317 Literal 318 Literal 319 Literal 320 Literal 321 Literal 322 Literal 323 Literal 324 Literal 325 Literal 326 Literal 327 Literal 328 Literal 329 Literal 330 Literal - 1 Literal - 1 Literal 333 Literal 334 Literal 335 Literal - 1 Literal - 1 Literal 338 Literal - 1 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal - 1 Literal 348 Literal 0 Literal 350 Literal - 1 Literal 352 Literal 353 Literal 354 Literal 355 Literal 356 Literal 357 Literal 358 Literal 10 Literal 360 Literal 361 Literal 362 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal 267 Literal 268 Literal 269 Literal 841 Literal 271 Literal 843 Literal 374 Literal 845 Literal - 1 Literal - 1 Literal - 1 Literal 849 Literal - 1 Literal 280 Literal 281 Literal 282 Literal 854 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal 44 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 305 Literal 58 Literal 59 Literal - 1 Literal - 1 Literal - 1 Literal 63 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 317 Literal 318 Literal 319 Literal 320 Literal 321 Literal 322 Literal 323 Literal 324 Literal 325 Literal 326 Literal 327 Literal 328 Literal 329 Literal 330 Literal - 1 Literal - 1 Literal 333 Literal 334 Literal 335 Literal - 1 Literal - 1 Literal 338 Literal 91 Literal 911 Literal 341 Literal - 1 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal 918 Literal 348 Literal 920 Literal 350 Literal 922 Literal 352 Literal 353 Literal 354 Literal 355 Literal 356 Literal 357 Literal 358 Literal - 1 Literal 360 Literal 361 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 939 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 374 Literal - 1 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 281 Literal 282 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 305 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 317 Literal 318 Literal 319 Literal 320 Literal 321 Literal 322 Literal 323 Literal 324 Literal 325 Literal 326 Literal 327 Literal 328 Literal 329 Literal 330 Literal - 1 Literal 0 Literal 333 Literal 334 Literal 335 Literal - 1 Literal 337 Literal 338 Literal - 1 Literal - 1 Literal 341 Literal 10 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal - 1 Literal 348 Literal - 1 Literal 350 Literal - 1 Literal 352 Literal 353 Literal 354 Literal 355 Literal 356 Literal 357 Literal 358 Literal - 1 Literal 360 Literal - 1 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 374 Literal - 1 Literal 44 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 58 Literal 59 Literal - 1 Literal 61 Literal - 1 Literal 63 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 280 Literal 281 Literal 282 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 91 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 305 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 317 Literal 318 Literal 319 Literal 320 Literal 321 Literal 322 Literal 323 Literal 324 Literal 325 Literal 326 Literal 327 Literal 328 Literal 329 Literal 330 Literal - 1 Literal 0 Literal 333 Literal 334 Literal 335 Literal - 1 Literal - 1 Literal 338 Literal - 1 Literal - 1 Literal 341 Literal 10 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal - 1 Literal 348 Literal - 1 Literal 350 Literal - 1 Literal 352 Literal 353 Literal 354 Literal 355 Literal 356 Literal 357 Literal 358 Literal - 1 Literal 360 Literal 361 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 374 Literal - 1 Literal 44 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 306 Literal 307 Literal 58 Literal 59 Literal 310 Literal 61 Literal - 1 Literal 63 Literal 314 Literal 315 Literal - 1 Literal 317 Literal 318 Literal 319 Literal 320 Literal 321 Literal 322 Literal 323 Literal - 1 Literal - 1 Literal 326 Literal 327 Literal - 1 Literal - 1 Literal - 1 Literal 331 Literal 332 Literal 333 Literal 334 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 340 Literal 91 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 347 Literal 348 Literal - 1 Literal 350 Literal 351 Literal 352 Literal 353 Literal 354 Literal 355 Literal 356 Literal 357 Literal 358 Literal 359 Literal 360 Literal - 1 Literal - 1 Literal 363 Literal 0 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 10 Literal - 1 Literal - 1 Literal - 1 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 281 Literal 282 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal 44 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 305 Literal 58 Literal 59 Literal - 1 Literal - 1 Literal - 1 Literal 63 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 317 Literal 318 Literal 319 Literal 320 Literal 321 Literal 322 Literal 323 Literal 324 Literal 325 Literal 326 Literal 327 Literal 328 Literal 329 Literal 330 Literal - 1 Literal - 1 Literal 333 Literal 334 Literal 335 Literal - 1 Literal - 1 Literal 338 Literal 91 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal - 1 Literal 348 Literal 0 Literal 350 Literal - 1 Literal 352 Literal 353 Literal 354 Literal 355 Literal 356 Literal 357 Literal 358 Literal 10 Literal 360 Literal - 1 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 374 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 44 Literal - 1 Literal - 1 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal 58 Literal 59 Literal - 1 Literal - 1 Literal - 1 Literal 63 Literal - 1 Literal - 1 Literal 281 Literal 282 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 305 Literal 91 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 317 Literal 318 Literal 319 Literal 320 Literal 321 Literal 322 Literal 323 Literal 324 Literal 325 Literal 326 Literal 327 Literal 328 Literal 329 Literal 330 Literal - 1 Literal - 1 Literal 333 Literal 334 Literal 335 Literal - 1 Literal - 1 Literal 338 Literal - 1 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal - 1 Literal 348 Literal - 1 Literal 350 Literal - 1 Literal 352 Literal 353 Literal 354 Literal 355 Literal 356 Literal 357 Literal 358 Literal 0 Literal 360 Literal - 1 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 10 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 374 Literal - 1 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 281 Literal 282 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 44 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 58 Literal 59 Literal 305 Literal - 1 Literal - 1 Literal 63 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 317 Literal 318 Literal 319 Literal 320 Literal 321 Literal 322 Literal 323 Literal 324 Literal 325 Literal 326 Literal 327 Literal 328 Literal 329 Literal 330 Literal - 1 Literal - 1 Literal 333 Literal 334 Literal 335 Literal 91 Literal - 1 Literal 338 Literal - 1 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal - 1 Literal 348 Literal 0 Literal 350 Literal - 1 Literal 352 Literal 353 Literal 354 Literal 355 Literal 356 Literal 357 Literal 358 Literal 10 Literal 360 Literal - 1 Literal 362 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal 374 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 281 Literal 282 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal 44 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 305 Literal 58 Literal 59 Literal - 1 Literal - 1 Literal - 1 Literal 63 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 317 Literal 318 Literal 319 Literal 320 Literal 321 Literal 322 Literal 323 Literal 324 Literal 325 Literal 326 Literal 327 Literal 328 Literal 329 Literal 330 Literal - 1 Literal - 1 Literal 333 Literal 334 Literal 335 Literal - 1 Literal - 1 Literal 338 Literal 91 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal - 1 Literal 348 Literal - 1 Literal 350 Literal - 1 Literal 352 Literal 353 Literal 354 Literal 355 Literal 356 Literal 357 Literal 358 Literal - 1 Literal 360 Literal 0 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 10 Literal - 1 Literal - 1 Literal 374 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 44 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal 58 Literal 59 Literal - 1 Literal - 1 Literal - 1 Literal 63 Literal 281 Literal 282 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 305 Literal - 1 Literal - 1 Literal 91 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 317 Literal 318 Literal 319 Literal 320 Literal 321 Literal 322 Literal 323 Literal 324 Literal 325 Literal 326 Literal 327 Literal 328 Literal 329 Literal 330 Literal - 1 Literal - 1 Literal 333 Literal 334 Literal 335 Literal - 1 Literal - 1 Literal 338 Literal - 1 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal - 1 Literal 348 Literal 0 Literal 350 Literal - 1 Literal 352 Literal 353 Literal 354 Literal 355 Literal 356 Literal 357 Literal 358 Literal 10 Literal 360 Literal - 1 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal 267 Literal 268 Literal 269 Literal 374 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 281 Literal 282 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 44 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 58 Literal 59 Literal 305 Literal - 1 Literal - 1 Literal 63 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 317 Literal 318 Literal 319 Literal 320 Literal 321 Literal 322 Literal 323 Literal 324 Literal 325 Literal 326 Literal 327 Literal 328 Literal 329 Literal 330 Literal - 1 Literal - 1 Literal 333 Literal 334 Literal 335 Literal 91 Literal - 1 Literal 338 Literal - 1 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal - 1 Literal 348 Literal - 1 Literal 350 Literal - 1 Literal 352 Literal 353 Literal 354 Literal 355 Literal 356 Literal 357 Literal 358 Literal - 1 Literal 360 Literal 0 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 10 Literal - 1 Literal - 1 Literal 374 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 281 Literal 282 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal 44 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 305 Literal 58 Literal 59 Literal - 1 Literal - 1 Literal - 1 Literal 63 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 318 Literal 319 Literal 320 Literal 321 Literal 322 Literal 323 Literal 324 Literal 325 Literal 326 Literal 327 Literal 328 Literal 329 Literal 330 Literal - 1 Literal - 1 Literal 333 Literal 334 Literal 335 Literal - 1 Literal - 1 Literal 338 Literal - 1 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal - 1 Literal 348 Literal 0 Literal 350 Literal - 1 Literal 352 Literal 353 Literal 354 Literal 355 Literal 356 Literal 357 Literal 358 Literal 10 Literal 360 Literal - 1 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 374 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 44 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal 58 Literal 59 Literal - 1 Literal - 1 Literal - 1 Literal 63 Literal 281 Literal 282 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 305 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 318 Literal 319 Literal 320 Literal 321 Literal 322 Literal 323 Literal 324 Literal 325 Literal 326 Literal 327 Literal 328 Literal 329 Literal 330 Literal - 1 Literal 0 Literal 333 Literal 334 Literal 335 Literal - 1 Literal - 1 Literal 338 Literal - 1 Literal - 1 Literal 341 Literal 10 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal - 1 Literal 348 Literal - 1 Literal 350 Literal - 1 Literal 352 Literal 353 Literal 354 Literal 355 Literal 356 Literal 357 Literal 358 Literal - 1 Literal 360 Literal - 1 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 374 Literal - 1 Literal 44 Literal - 1 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal 58 Literal 59 Literal - 1 Literal - 1 Literal - 1 Literal 63 Literal - 1 Literal 281 Literal 282 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 305 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 318 Literal 319 Literal 320 Literal 321 Literal 322 Literal 323 Literal 324 Literal 325 Literal 326 Literal 327 Literal - 1 Literal 329 Literal 330 Literal - 1 Literal - 1 Literal 333 Literal 334 Literal - 1 Literal - 1 Literal - 1 Literal 338 Literal - 1 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal - 1 Literal 348 Literal 0 Literal 350 Literal - 1 Literal 352 Literal 353 Literal 354 Literal 355 Literal 356 Literal 357 Literal 358 Literal 10 Literal 360 Literal - 1 Literal 362 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal 374 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 281 Literal 282 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal 44 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 305 Literal 58 Literal 59 Literal - 1 Literal - 1 Literal - 1 Literal 63 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 318 Literal 319 Literal 320 Literal 321 Literal 322 Literal 323 Literal 324 Literal 325 Literal 326 Literal 327 Literal - 1 Literal 329 Literal 330 Literal - 1 Literal - 1 Literal 333 Literal 334 Literal - 1 Literal - 1 Literal - 1 Literal 338 Literal - 1 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal - 1 Literal 348 Literal - 1 Literal 350 Literal - 1 Literal 352 Literal 353 Literal 354 Literal 355 Literal 356 Literal 357 Literal 358 Literal - 1 Literal 360 Literal - 1 Literal 362 Literal 0 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 10 Literal 374 Literal - 1 Literal - 1 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 281 Literal 282 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal 44 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 305 Literal 58 Literal 59 Literal - 1 Literal - 1 Literal - 1 Literal 63 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 318 Literal 319 Literal 320 Literal 321 Literal 322 Literal 323 Literal 324 Literal 325 Literal 326 Literal 327 Literal - 1 Literal 329 Literal 330 Literal - 1 Literal - 1 Literal 333 Literal 334 Literal - 1 Literal - 1 Literal - 1 Literal 338 Literal - 1 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal - 1 Literal 348 Literal 0 Literal 350 Literal - 1 Literal 352 Literal 353 Literal 354 Literal 355 Literal 356 Literal 357 Literal 358 Literal 10 Literal 360 Literal - 1 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 374 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 44 Literal - 1 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal 58 Literal 59 Literal - 1 Literal - 1 Literal - 1 Literal 63 Literal - 1 Literal 281 Literal 282 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 305 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 318 Literal 319 Literal 320 Literal 321 Literal 322 Literal 323 Literal 324 Literal 325 Literal 326 Literal 327 Literal - 1 Literal 329 Literal 330 Literal - 1 Literal 0 Literal 333 Literal 334 Literal - 1 Literal - 1 Literal - 1 Literal 338 Literal - 1 Literal - 1 Literal 341 Literal 10 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal - 1 Literal 348 Literal - 1 Literal 350 Literal - 1 Literal 352 Literal 353 Literal 354 Literal 355 Literal 356 Literal 357 Literal 358 Literal - 1 Literal 360 Literal - 1 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 374 Literal - 1 Literal 44 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal 58 Literal 59 Literal - 1 Literal - 1 Literal - 1 Literal 63 Literal 281 Literal 282 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 305 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 318 Literal 319 Literal 320 Literal 321 Literal 322 Literal 323 Literal 324 Literal 325 Literal 326 Literal 327 Literal - 1 Literal 329 Literal 330 Literal - 1 Literal - 1 Literal 333 Literal 334 Literal - 1 Literal - 1 Literal - 1 Literal 338 Literal - 1 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal - 1 Literal 348 Literal 0 Literal 350 Literal - 1 Literal 352 Literal 353 Literal 354 Literal 355 Literal 356 Literal 357 Literal 358 Literal 10 Literal 360 Literal - 1 Literal 362 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal 374 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 281 Literal 282 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal 44 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 305 Literal 58 Literal 59 Literal - 1 Literal - 1 Literal - 1 Literal 63 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 318 Literal 319 Literal 320 Literal 321 Literal 322 Literal 323 Literal 324 Literal 325 Literal 326 Literal 327 Literal - 1 Literal 329 Literal 330 Literal - 1 Literal - 1 Literal 333 Literal 334 Literal - 1 Literal - 1 Literal - 1 Literal 338 Literal - 1 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal - 1 Literal 348 Literal - 1 Literal 350 Literal - 1 Literal 352 Literal 353 Literal 354 Literal 355 Literal 356 Literal 357 Literal 358 Literal - 1 Literal 360 Literal 0 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 10 Literal - 1 Literal - 1 Literal 374 Literal - 1 Literal - 1 Literal - 1 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 281 Literal 282 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 44 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 58 Literal 59 Literal 305 Literal - 1 Literal - 1 Literal 63 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 318 Literal 319 Literal 320 Literal 321 Literal 322 Literal 323 Literal 324 Literal 325 Literal 326 Literal 327 Literal - 1 Literal 329 Literal 330 Literal - 1 Literal - 1 Literal 333 Literal 334 Literal - 1 Literal - 1 Literal - 1 Literal 338 Literal - 1 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal - 1 Literal 348 Literal 0 Literal 350 Literal - 1 Literal 352 Literal 353 Literal 354 Literal 355 Literal 356 Literal 357 Literal 358 Literal 10 Literal 360 Literal - 1 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 374 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 44 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal 58 Literal 59 Literal - 1 Literal - 1 Literal - 1 Literal 63 Literal 281 Literal 282 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 305 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 318 Literal 319 Literal 320 Literal 321 Literal 322 Literal 323 Literal 324 Literal 325 Literal 326 Literal 327 Literal - 1 Literal 329 Literal 330 Literal - 1 Literal - 1 Literal 333 Literal 334 Literal - 1 Literal - 1 Literal - 1 Literal 338 Literal 0 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal - 1 Literal - 1 Literal 10 Literal 350 Literal - 1 Literal - 1 Literal - 1 Literal 354 Literal 355 Literal 356 Literal 357 Literal 358 Literal - 1 Literal 360 Literal - 1 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 374 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal 267 Literal 268 Literal 269 Literal 44 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 281 Literal 282 Literal - 1 Literal 58 Literal 59 Literal - 1 Literal - 1 Literal - 1 Literal 63 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 305 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 318 Literal 319 Literal 320 Literal 321 Literal 322 Literal 323 Literal 324 Literal 325 Literal 326 Literal 327 Literal - 1 Literal 329 Literal 330 Literal - 1 Literal - 1 Literal 333 Literal 334 Literal - 1 Literal - 1 Literal - 1 Literal 338 Literal - 1 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal - 1 Literal - 1 Literal 0 Literal 350 Literal - 1 Literal - 1 Literal - 1 Literal 354 Literal 355 Literal 356 Literal 357 Literal 358 Literal 10 Literal 360 Literal - 1 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal 267 Literal 268 Literal 269 Literal 374 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 281 Literal 282 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 44 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 58 Literal 59 Literal 305 Literal - 1 Literal - 1 Literal 63 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 318 Literal 319 Literal 320 Literal 321 Literal 322 Literal 323 Literal 324 Literal 325 Literal 326 Literal 327 Literal - 1 Literal 329 Literal 330 Literal - 1 Literal - 1 Literal 333 Literal 334 Literal - 1 Literal - 1 Literal - 1 Literal 338 Literal - 1 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal - 1 Literal - 1 Literal - 1 Literal 350 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 356 Literal 357 Literal 358 Literal - 1 Literal 360 Literal - 1 Literal 362 Literal 0 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 10 Literal 374 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 281 Literal 282 Literal - 1 Literal - 1 Literal 44 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal 58 Literal 59 Literal - 1 Literal - 1 Literal - 1 Literal 63 Literal 305 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 318 Literal 319 Literal 320 Literal 321 Literal 322 Literal 323 Literal 324 Literal 325 Literal 326 Literal 327 Literal - 1 Literal 329 Literal 330 Literal - 1 Literal - 1 Literal 333 Literal 334 Literal - 1 Literal - 1 Literal - 1 Literal 338 Literal - 1 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal - 1 Literal - 1 Literal 0 Literal 350 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 356 Literal 357 Literal 358 Literal 10 Literal 360 Literal - 1 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 374 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal 267 Literal 268 Literal 269 Literal 44 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 281 Literal 282 Literal - 1 Literal 58 Literal 59 Literal - 1 Literal - 1 Literal - 1 Literal 63 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 305 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 318 Literal 319 Literal 320 Literal 321 Literal 322 Literal 323 Literal 324 Literal 325 Literal 326 Literal 327 Literal - 1 Literal 329 Literal 330 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 0 Literal - 1 Literal - 1 Literal 338 Literal - 1 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal 344 Literal 10 Literal 346 Literal - 1 Literal - 1 Literal - 1 Literal 350 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 356 Literal 357 Literal 358 Literal - 1 Literal 360 Literal - 1 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 374 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 44 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal 58 Literal 59 Literal - 1 Literal - 1 Literal - 1 Literal 63 Literal 281 Literal 282 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 305 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 318 Literal 319 Literal 320 Literal 321 Literal 322 Literal 323 Literal 324 Literal 325 Literal 326 Literal 327 Literal - 1 Literal 329 Literal 330 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 0 Literal 338 Literal - 1 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal 10 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 356 Literal 357 Literal 358 Literal - 1 Literal 360 Literal - 1 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 262 Literal 263 Literal 264 Literal - 1 Literal 374 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal 44 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 281 Literal 282 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 58 Literal 59 Literal - 1 Literal 290 Literal 291 Literal 63 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 305 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 318 Literal 319 Literal 320 Literal 321 Literal 322 Literal 323 Literal 324 Literal 325 Literal 326 Literal 327 Literal - 1 Literal 329 Literal 330 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 338 Literal - 1 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal - 1 Literal - 1 Literal 0 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 356 Literal 357 Literal 358 Literal 10 Literal 360 Literal - 1 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 262 Literal 263 Literal 264 Literal 374 Literal - 1 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 281 Literal 282 Literal - 1 Literal 44 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal 58 Literal 59 Literal - 1 Literal - 1 Literal - 1 Literal 63 Literal - 1 Literal 305 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 318 Literal 319 Literal 320 Literal 321 Literal 322 Literal 323 Literal 324 Literal 325 Literal 326 Literal 327 Literal - 1 Literal 329 Literal 330 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 0 Literal 338 Literal - 1 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal 10 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 356 Literal 357 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 374 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 44 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal 58 Literal 59 Literal - 1 Literal - 1 Literal - 1 Literal 63 Literal 281 Literal 282 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295	1
MethodDeclaration Modifier private ReferenceType IRubyObject callBlock FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject caller FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType RubyModule VariableDeclarator klazz MethodInvocation context getFrameKlazz LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation context getFrameName LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator selfType MethodInvocation MemberReference context MemberReference self MemberReference klazz MemberReference name pollAndGetClass LocalVariableDeclaration ReferenceType CacheEntry VariableDeclarator myCache MemberReference cache IfStatement BinaryOperation && BinaryOperation && BinaryOperation == MemberReference name MemberReference lastName BinaryOperation != MemberReference selfType Literal null MethodInvocation myCache MemberReference selfType BlockStatement ReturnStatement MethodInvocation MemberReference context MemberReference self MemberReference selfType MemberReference name MemberReference arg1 MemberReference block call ReturnStatement MethodInvocation MemberReference caller MemberReference selfType MemberReference block MemberReference context MemberReference self MemberReference name MemberReference arg1	1
MethodDeclaration Modifier public static ReferenceType IRubyObject convertJavaToRuby FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType Object object ReturnStatement MethodInvocation MemberReference runtime MemberReference object convertJavaToUsableRubyObject	0
MethodDeclaration Modifier public BasicType int getRestArg ReturnStatement MemberReference restArg	0
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Block block StatementExpression MethodInvocation LocalVariableDeclaration ReferenceType String VariableDeclarator contents MemberReference ForStatement ForControl Assignment MemberReference pos Literal 0 = BinaryOperation < MemberReference pos MemberReference contents length MemberReference ++ pos BlockStatement StatementExpression MethodInvocation block MemberReference context MethodInvocation MethodInvocation MemberReference ArraySelector MemberReference pos contents newString getRuntime yield ReturnStatement This	0
MethodDeclaration Modifier public StatementExpression Assignment MemberReference flags MemberReference ~ &=	0
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType FormalParameter ReferenceType Block ReferenceType Type type ReturnStatement MethodInvocation MemberReference context ArrayCreator ReferenceType IRubyObject ArrayInitializer MethodInvocation RubyArray MethodInvocation context getRuntime MemberReference arg0 MemberReference arg1 MemberReference Block NULL_BLOCK call	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair required Literal 2 ElementValuePair optional Literal 2 ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject args LocalVariableDeclaration BasicType long VariableDeclarator off MethodInvocation MemberReference ArraySelector Literal 0 args getOffset LocalVariableDeclaration ReferenceType ByteList VariableDeclarator bl MemberReference ArraySelector Literal 1 MethodInvocation convertToString MethodInvocation getByteList args LocalVariableDeclaration BasicType int VariableDeclarator idx TernaryExpression BinaryOperation > MemberReference args length Literal 2 MethodInvocation Util MemberReference ArraySelector Literal 2 args int32Value Literal 0 IfStatement BinaryOperation || BinaryOperation < MemberReference idx Literal 0 BinaryOperation > MemberReference idx MethodInvocation bl length BlockStatement ThrowStatement MethodInvocation context MethodInvocation Literal "Invalid string index" newRangeError getRuntime LocalVariableDeclaration BasicType int VariableDeclarator len TernaryExpression BinaryOperation > MemberReference args length Literal 3 MethodInvocation Util MemberReference ArraySelector Literal 3 args int32Value BinaryOperation - MethodInvocation bl length MemberReference idx IfStatement BinaryOperation || BinaryOperation < MemberReference len Literal 0 BinaryOperation > MemberReference len BinaryOperation - MethodInvocation bl length MemberReference idx BlockStatement ThrowStatement MethodInvocation context MethodInvocation Literal "Invalid newRangeError getRuntime StatementExpression MethodInvocation MethodInvocation MemberReference off MethodInvocation bl unsafeBytes BinaryOperation + MethodInvocation bl begin MemberReference idx MemberReference len put getMemoryIO ReturnStatement This	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "start_with?" ReferenceType IRubyObject start_with_p FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg ReturnStatement TernaryExpression MethodInvocation MemberReference arg start_with_pCommon MethodInvocation context MethodInvocation getTrue getRuntime MethodInvocation context MethodInvocation getFalse getRuntime	1
MethodDeclaration Modifier public call FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation MethodInvocation globalAsgnNode getValueNode MemberReference context Literal true compile	0
MethodDeclaration Modifier public static ReferenceType RubyString FormalParameter ReferenceType Ruby runtime FormalParameter BasicType int size ReturnStatement ClassCreator ReferenceType RubyString MemberReference runtime MethodInvocation runtime getString ClassCreator ReferenceType ByteList MemberReference size Literal false	0
MethodDeclaration Modifier public synchronized BasicType int getline FormalParameter ReferenceType ByteList dst FormalParameter BasicType byte terminator IOException BadDescriptorException StatementExpression MethodInvocation checkReadable StatementExpression MethodInvocation ensureRead StatementExpression MethodInvocation descriptor LocalVariableDeclaration BasicType int VariableDeclarator totalRead Literal 0 LocalVariableDeclaration BasicType boolean VariableDeclarator found Literal false IfStatement BinaryOperation != MemberReference ungotc Literal - 1 BlockStatement StatementExpression MethodInvocation dst Cast BasicType byte MemberReference ungotc append StatementExpression Assignment MemberReference found BinaryOperation == MemberReference ungotc MemberReference terminator = StatementExpression Assignment MemberReference ungotc Literal - 1 = StatementExpression MemberReference ++ totalRead WhileStatement MemberReference ! found BlockStatement LocalVariableDeclaration Modifier final BasicType byte VariableDeclarator bytes MethodInvocation buffer array LocalVariableDeclaration Modifier final BasicType int VariableDeclarator begin BinaryOperation + MethodInvocation buffer arrayOffset MethodInvocation buffer position LocalVariableDeclaration Modifier final BasicType int VariableDeclarator end BinaryOperation + MemberReference begin MethodInvocation buffer remaining LocalVariableDeclaration BasicType int VariableDeclarator len Literal 0 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MemberReference begin BinaryOperation && BinaryOperation < MemberReference i MemberReference end MemberReference ! found MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference found BinaryOperation == MemberReference ArraySelector MemberReference i bytes MemberReference terminator = StatementExpression MemberReference ++ len IfStatement BinaryOperation > MemberReference len Literal 0 BlockStatement StatementExpression MethodInvocation dst MemberReference buffer MemberReference len append StatementExpression Assignment MemberReference totalRead MemberReference len += IfStatement MemberReference ! found BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator n MethodInvocation refillBuffer IfStatement BinaryOperation <= MemberReference n Literal 0 BlockStatement IfStatement BinaryOperation && BinaryOperation < MemberReference n Literal 0 BinaryOperation < MemberReference totalRead Literal 1 BlockStatement ReturnStatement Literal - 1 BreakStatement ReturnStatement MemberReference totalRead	1
MethodDeclaration Modifier public ReferenceType RubyParserResult getResult ReturnStatement MemberReference result	0
MethodDeclaration Modifier public static FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType IRubyObject error StatementExpression MethodInvocation runtime MethodInvocation Literal "$!" MemberReference error set getGlobalVariables	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public ReferenceType IRubyObject to_i FormalParameter ReferenceType Ruby runtime ReturnStatement MethodInvocation runtime MethodInvocation newFixnum	1
MethodDeclaration Modifier public FormalParameter ReferenceType method FormalParameter BasicType long value IfStatement BinaryOperation && BinaryOperation <= MemberReference value Literal 5 BinaryOperation >= MemberReference value Literal - 1 BlockStatement StatementExpression MethodInvocation method SwitchStatement Cast BasicType int MemberReference value SwitchStatementCase Literal - 1 StatementExpression MethodInvocation method.method MethodInvocation ClassReference ReferenceType RubyFixnum p Literal MethodInvocation ClassReference ReferenceType RubyFixnum ClassReference ReferenceType Ruby sig invokestatic BreakStatement SwitchStatementCase Literal 0 StatementExpression MethodInvocation method.method MethodInvocation ClassReference ReferenceType RubyFixnum p Literal "zero" MethodInvocation ClassReference ReferenceType RubyFixnum ClassReference ReferenceType Ruby sig invokestatic BreakStatement SwitchStatementCase Literal 1 StatementExpression MethodInvocation method.method MethodInvocation ClassReference ReferenceType RubyFixnum p Literal "one" MethodInvocation ClassReference ReferenceType RubyFixnum ClassReference ReferenceType Ruby sig invokestatic BreakStatement SwitchStatementCase Literal 2 StatementExpression MethodInvocation method.method MethodInvocation ClassReference ReferenceType RubyFixnum p Literal "two" MethodInvocation ClassReference ReferenceType RubyFixnum ClassReference ReferenceType Ruby sig invokestatic BreakStatement SwitchStatementCase Literal 3 StatementExpression MethodInvocation method.method MethodInvocation ClassReference ReferenceType RubyFixnum p Literal "three" MethodInvocation ClassReference ReferenceType RubyFixnum ClassReference ReferenceType Ruby sig invokestatic BreakStatement SwitchStatementCase Literal 4 StatementExpression MethodInvocation method.method MethodInvocation ClassReference ReferenceType RubyFixnum p Literal "four" MethodInvocation ClassReference ReferenceType RubyFixnum ClassReference ReferenceType Ruby sig invokestatic BreakStatement SwitchStatementCase Literal 5 StatementExpression MethodInvocation method.method MethodInvocation ClassReference ReferenceType RubyFixnum p Literal "five" MethodInvocation ClassReference ReferenceType RubyFixnum ClassReference ReferenceType Ruby sig invokestatic BreakStatement SwitchStatementCase ThrowStatement ClassCreator ReferenceType RuntimeException Literal BlockStatement LocalVariableDeclaration ReferenceType Integer VariableDeclarator index MethodInvocation fixnumIndices MemberReference value get IfStatement BinaryOperation == MemberReference index Literal null BlockStatement StatementExpression Assignment MemberReference index ClassCreator ReferenceType Integer MemberReference ++ inheritedFixnumCount = StatementExpression MethodInvocation fixnumIndices MemberReference value MemberReference index put StatementExpression MethodInvocation method loadThis StatementExpression MethodInvocation method IfStatement BinaryOperation && BinaryOperation <= MemberReference value MemberReference Integer MAX_VALUE BinaryOperation >= MemberReference value MemberReference Integer MIN_VALUE BlockStatement IfStatement BinaryOperation < MemberReference index MemberReference AbstractScript BlockStatement StatementExpression MethodInvocation method.method Cast BasicType int MemberReference value pushInt StatementExpression MethodInvocation method.method MethodInvocation scriptCompiler getClassname BinaryOperation + Literal "getFixnum" MemberReference index MethodInvocation ClassReference ReferenceType RubyFixnum ClassReference ReferenceType Ruby ClassReference BasicType int sig invokevirtual BlockStatement StatementExpression MethodInvocation method.method MethodInvocation index intValue pushInt StatementExpression MethodInvocation method.method Cast BasicType int MemberReference value pushInt StatementExpression MethodInvocation method.method MethodInvocation scriptCompiler getClassname Literal "getFixnum" MethodInvocation ClassReference ReferenceType RubyFixnum ClassReference ReferenceType Ruby ClassReference BasicType int ClassReference BasicType int sig invokevirtual BlockStatement StatementExpression MethodInvocation method.method MethodInvocation index intValue pushInt StatementExpression MethodInvocation method.method MemberReference value ldc StatementExpression MethodInvocation method.method MethodInvocation scriptCompiler getClassname Literal "getFixnum" MethodInvocation ClassReference ReferenceType RubyFixnum ClassReference ReferenceType Ruby ClassReference BasicType int ClassReference BasicType long sig invokevirtual	1
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType MultipleAsgn19Node MethodInvocation Cast ReferenceType ListNode MemberReference ArraySelector BinaryOperation + Literal - 4 MemberReference yyTop yyVals getPosition Cast ReferenceType ListNode MemberReference ArraySelector BinaryOperation + Literal - 4 MemberReference yyTop yyVals Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals Cast ReferenceType ListNode MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public final BasicType int getInt FormalParameter BasicType long offset StatementExpression MethodInvocation MemberReference offset Literal 4 checkBounds ReturnStatement MethodInvocation BinaryOperation + MemberReference address MemberReference offset getInt	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MethodInvocation ruby MethodInvocation getInstanceConfig MethodInvocation MethodInvocation toString get	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "initialize" ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context StatementExpression Assignment MemberReference memory MethodInvocation MemoryPointer MethodInvocation context getRuntime MethodInvocation layout getSize Literal 1 Literal true = ReturnStatement This	0
MethodDeclaration Modifier public ReferenceType Node getBodyNode ReturnStatement MemberReference bodyNode	0
MethodDeclaration Modifier public Annotation Override BasicType int getNativeTypeIndex ReturnStatement MemberReference ClassIndex OBJECT	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context ReturnStatement MethodInvocation Literal - 8 Literal false	0
MethodDeclaration Modifier public ReferenceType Operand FormalParameter Modifier final ReferenceType WhileNode whileNode FormalParameter ReferenceType IR_Scope s ReturnStatement MethodInvocation MemberReference s MethodInvocation whileNode getConditionNode MethodInvocation whileNode getBodyNode Literal true MethodInvocation ! whileNode evaluateAtStart	0
MethodDeclaration Modifier public static ReferenceType IRubyObject f_sub FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject x FormalParameter ReferenceType IRubyObject y IfStatement BinaryOperation && BinaryOperation instanceof MemberReference y ReferenceType RubyFixnum BinaryOperation == Cast ReferenceType RubyFixnum MemberReference y Literal 0 ReturnStatement MemberReference x ReturnStatement MethodInvocation x MemberReference context Literal "-" MemberReference y callMethod	1
MethodDeclaration Modifier public StatementExpression MemberReference --	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "wrap" ElementValuePair required Literal 1 ElementValuePair frame Literal true ElementValuePair meta Literal true ReferenceType IRubyObject wrap FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject io FormalParameter ReferenceType Block block IOException LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation recv getRuntime LocalVariableDeclaration ReferenceType VariableDeclarator instance IfStatement BinaryOperation == MemberReference recv MethodInvocation runtime MethodInvocation Literal "GzipWriter" getClass Literal "Zlib" getModule BlockStatement StatementExpression Assignment MemberReference instance MethodInvocation MemberReference recv ArrayCreator ReferenceType IRubyObject ArrayInitializer MemberReference io MemberReference block = BlockStatement StatementExpression Assignment MemberReference instance MethodInvocation MemberReference recv ArrayCreator ReferenceType IRubyObject ArrayInitializer MemberReference io MemberReference block newInstance = ReturnStatement MethodInvocation MemberReference context MemberReference instance MemberReference block	1
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject ReturnStatement ArrayCreator ReferenceType IRubyObject ArrayInitializer MemberReference variableValueZero MemberReference variableValueOne MemberReference variableValueTwo MemberReference variableValueThree	0
MethodDeclaration Modifier public final BasicType int op_cmp FormalParameter ReferenceType RubyString other ReturnStatement MethodInvocation value MemberReference other value cmp	1
MethodDeclaration Modifier public Annotation Override ReferenceType DynamicMethod FormalParameter ReferenceType RubyModule klazz FormalParameter ReferenceType Method method LocalVariableDeclaration ReferenceType Class VariableDeclarator parameters MethodInvocation method getParameterTypes IfStatement BinaryOperation > MemberReference parameters length Literal 0 BlockStatement ReturnStatement ClassCreator ReferenceType MemberReference klazz MemberReference method BlockStatement ReturnStatement ClassCreator ReferenceType MemberReference klazz MemberReference method	0
MethodDeclaration Modifier public ReferenceType Node getIterNode ReturnStatement MemberReference	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator args Cast ReferenceType ArrayNode MethodInvocation getArgsNode ReturnStatement MethodInvocation callAdapter MemberReference context MemberReference self MemberReference self MemberReference args MethodInvocation RuntimeHelpers MemberReference runtime MemberReference context MemberReference self MemberReference MemberReference getBlock call	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair rest Literal true ElementValuePair visibility MemberReference PRIVATE ElementValuePair reads MemberReference VISIBILITY ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject args LocalVariableDeclaration ReferenceType Visibility VariableDeclarator visibility MethodInvocation context getCurrentVisibility ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference args length MemberReference ++ i BlockStatement StatementExpression MethodInvocation MemberReference context MemberReference ArraySelector MemberReference i MethodInvocation asJavaString MethodInvocation intern args MemberReference visibility Literal true Literal false addAccessor ReturnStatement MethodInvocation context MethodInvocation getNil getRuntime	1
MethodDeclaration Modifier public synchronized Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal Literal Literal ElementValuePair optional Literal 1 ReferenceType IRubyObject pop FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject args StatementExpression MethodInvocation MemberReference context checkShutdown LocalVariableDeclaration BasicType boolean VariableDeclarator should_block Literal true IfStatement BinaryOperation == MethodInvocation Arity MethodInvocation context getRuntime MemberReference args Literal 0 Literal 1 checkArgumentCount Literal 1 BlockStatement StatementExpression Assignment MemberReference should_block MemberReference ! ArraySelector Literal 0 MethodInvocation isTrue args = IfStatement BinaryOperation && MemberReference ! should_block BinaryOperation == MethodInvocation entries size Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType RaiseException MethodInvocation context getRuntime MethodInvocation context MethodInvocation getRuntime Literal empty" Literal false StatementExpression MemberReference ++ numWaiting TryStatement WhileStatement BinaryOperation == MethodInvocation java_length Literal 0 BlockStatement TryStatement StatementExpression MethodInvocation context MethodInvocation This Literal null wait_timeout getThread CatchClause CatchClauseParameter InterruptedException e StatementExpression MethodInvocation MemberReference context checkShutdown StatementExpression MemberReference -- numWaiting ReturnStatement Cast ReferenceType IRubyObject MethodInvocation entries removeFirst	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "&" ElementValuePair required Literal 1 ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject other ReturnStatement MethodInvocation MemberReference context MethodInvocation MemberReference context MemberReference other convertToInteger op_and	1
MethodDeclaration Modifier public ReferenceType Node getFirstNode ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType IRubyObject self LocalVariableDeclaration ReferenceType RubyFixnum VariableDeclarator Cast ReferenceType RubyFixnum MemberReference self IfStatement BinaryOperation > MemberReference value MemberReference Integer MAX_VALUE BlockStatement ThrowStatement MethodInvocation self MethodInvocation BinaryOperation + BinaryOperation + Literal " MemberReference value Literal " is too large for Java newRangeError getRuntime ReturnStatement MethodInvocation Integer Cast BasicType int MemberReference value valueOf	0
MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation context BinaryOperation + Literal "$" Cast ReferenceType BackRefNode MemberReference node pushString	0
MethodDeclaration Modifier private static BasicType int FormalParameter ReferenceType Enum TypeArgument ? head FormalParameter ReferenceType Enum TypeArgument ? LocalVariableDeclaration Modifier final BasicType int VariableDeclarator ArrayCreator BasicType int BinaryOperation + MemberReference length Literal 1 StatementExpression Assignment MemberReference ArraySelector Literal 0 MethodInvocation head = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference length MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector BinaryOperation + MemberReference i Literal 1 MemberReference ArraySelector MemberReference i MethodInvocation = ReturnStatement MemberReference	0
MethodDeclaration Modifier public final BasicType long longValue FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject obj ReturnStatement BinaryOperation & MethodInvocation Float Cast BasicType float MethodInvocation RubyNumeric MemberReference obj num2dbl Literal	1
MethodDeclaration Modifier final public static BasicType byte FormalParameter BasicType int i ReturnStatement MethodInvocation ByteList MethodInvocation Integer MethodInvocation toLowerCase MemberReference i toHexString plain	0
MethodDeclaration Modifier private static FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType RubyException LocalVariableDeclaration ReferenceType Frame VariableDeclarator MethodInvocation context LocalVariableDeclaration ReferenceType String VariableDeclarator msg MethodInvocation String Literal "Exception at - MethodInvocation getMetaClass MethodInvocation MethodInvocation toString convertToString MethodInvocation getFile BinaryOperation + MethodInvocation getLine Literal 1 MethodInvocation to_s format StatementExpression MethodInvocation runtime MethodInvocation MemberReference msg print	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "each_pair" ElementValuePair frame Literal true ReferenceType IRubyObject each_pair19 FormalParameter Modifier final ReferenceType ThreadContext context FormalParameter Modifier final ReferenceType Block block ReturnStatement TernaryExpression MethodInvocation block isGiven MethodInvocation MemberReference context MemberReference block each_pair MethodInvocation MethodInvocation context getRuntime This Literal "each_pair" enumeratorize	1
MethodDeclaration Modifier public static FormalParameter ReferenceType Ruby runtime StatementExpression MethodInvocation runtime MethodInvocation ClassReference ReferenceType defineAnnotatedMethods getClassClass StatementExpression MethodInvocation runtime MethodInvocation ClassReference ReferenceType defineAnnotatedMethods getThread StatementExpression MethodInvocation runtime MethodInvocation ClassReference ReferenceType defineAnnotatedMethods getString	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject get ReturnStatement MethodInvocation runtime MethodInvocation runtime getSafeLevel newFixnum	0
MethodDeclaration Modifier public ReferenceType IRubyObject getConstantAt FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator value MethodInvocation MemberReference name ReturnStatement TernaryExpression BinaryOperation == MemberReference value MemberReference UNDEF MethodInvocation MethodInvocation getRuntime MemberReference name MemberReference value	0
MethodDeclaration Modifier protected ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject caller FormalParameter ReferenceType RubyClass selfType FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self LocalVariableDeclaration ReferenceType CacheEntry VariableDeclarator entry MethodInvocation selfType MemberReference methodName LocalVariableDeclaration ReferenceType DynamicMethod VariableDeclarator method MemberReference entry method IfStatement MethodInvocation MemberReference method MemberReference caller BlockStatement ReturnStatement MethodInvocation MemberReference context MemberReference self MemberReference method MemberReference args StatementExpression Assignment MemberReference cache MemberReference entry = ReturnStatement MethodInvocation method MemberReference context MemberReference self MemberReference selfType MemberReference methodName MemberReference args call	0
MethodDeclaration Modifier public final BasicType short FormalParameter BasicType byte array FormalParameter BasicType int offset ReturnStatement Cast BasicType short BinaryOperation | BinaryOperation & MemberReference ArraySelector MemberReference offset array Literal 0xff BinaryOperation << BinaryOperation & MemberReference ArraySelector BinaryOperation + MemberReference offset Literal 1 array Literal 0xff Literal 8	0
MethodDeclaration Modifier public ReferenceType ClassLoader getClassLoader ReturnStatement MemberReference classLoader	0
MethodDeclaration Modifier public FormalParameter ReferenceType Node node FormalParameter ReferenceType BodyCompiler context FormalParameter BasicType boolean expr LocalVariableDeclaration ReferenceType LocalAsgnNode VariableDeclarator localAsgnNode Cast ReferenceType LocalAsgnNode MemberReference node StatementExpression MethodInvocation context MethodInvocation MethodInvocation localAsgnNode getIndex MethodInvocation localAsgnNode MemberReference expr assignLocalVariable getVariableCompiler	0
MethodDeclaration Modifier private Annotation Deprecated FormalParameter ReferenceType SkinnyMethodAdapter mv FormalParameter ReferenceType Label afterCall StatementExpression MethodInvocation mv MemberReference DISPATCHER_RUBYMODULE_INDEX aload StatementExpression MethodInvocation mv MemberReference DISPATCHER_NAME_INDEX aload StatementExpression MethodInvocation mv MethodInvocation ClassReference ReferenceType RubyModule p Literal MethodInvocation ClassReference ReferenceType DynamicMethod MethodInvocation ClassReference ReferenceType String params sig invokevirtual LocalVariableDeclaration ReferenceType Label VariableDeclarator okCall ClassCreator ReferenceType Label StatementExpression MethodInvocation MemberReference mv MemberReference afterCall MemberReference okCall StatementExpression MethodInvocation mv MemberReference okCall label StatementExpression MethodInvocation mv MemberReference DISPATCHER_THREADCONTEXT_INDEX aload StatementExpression MethodInvocation mv MemberReference DISPATCHER_SELF_INDEX aload StatementExpression MethodInvocation mv MemberReference DISPATCHER_RUBYMODULE_INDEX aload StatementExpression MethodInvocation mv MemberReference DISPATCHER_NAME_INDEX aload StatementExpression MethodInvocation mv MemberReference aload StatementExpression MethodInvocation mv MemberReference DISPATCHER_BLOCK_INDEX aload StatementExpression MethodInvocation mv MethodInvocation ClassReference ReferenceType DynamicMethod p Literal "call" MethodInvocation ClassReference ReferenceType IRubyObject MethodInvocation ClassReference ReferenceType ThreadContext ClassReference ReferenceType IRubyObject ClassReference ReferenceType RubyModule ClassReference ReferenceType String ClassReference ReferenceType IRubyObject ClassReference ReferenceType Block params sig invokevirtual	1
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType String internedName FormalParameter ReferenceType IRubyObject result LocalVariableDeclaration ReferenceType RubyModule VariableDeclarator module IfStatement BinaryOperation != Assignment MemberReference module MethodInvocation MethodInvocation MethodInvocation getModule getCurrentScope = Literal null BlockStatement StatementExpression MethodInvocation module MemberReference internedName MemberReference result fastSetConstant ReturnStatement MemberReference result ThrowStatement MethodInvocation runtime Literal "no class/module to define constant" newTypeError	1
MethodDeclaration Modifier private ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block WhileStatement RescuedBlock Literal true BlockStatement LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator globalExceptionState MethodInvocation runtime MethodInvocation Literal "$!" get getGlobalVariables LocalVariableDeclaration BasicType boolean VariableDeclarator anotherExceptionRaised Literal false TryStatement ReturnStatement MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference executeBody CatchClause CatchClauseParameter RaiseException raiseJump TryStatement ReturnStatement MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference MemberReference raiseJump handleException CatchClause CatchClauseParameter JumpException.RetryJump rj CatchClause CatchClauseParameter RaiseException je StatementExpression Assignment MemberReference anotherExceptionRaised Literal true = ThrowStatement MemberReference je CatchClause CatchClauseParameter JumpException.FlowControlException ThrowStatement MemberReference CatchClause CatchClauseParameter Throwable t TryStatement ReturnStatement MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference MemberReference t handleJavaException CatchClause CatchClauseParameter JumpException.RetryJump rj CatchClause CatchClauseParameter RaiseException je StatementExpression Assignment MemberReference anotherExceptionRaised Literal true = ThrowStatement MemberReference je IfStatement MemberReference ! anotherExceptionRaised StatementExpression MethodInvocation runtime MethodInvocation Literal "$!" MemberReference globalExceptionState set getGlobalVariables	1
MethodDeclaration Modifier public ReferenceType String getFile ThrowStatement ClassCreator ReferenceType UnsupportedOperationException Literal "Not supported	0
MethodDeclaration Modifier private check IfStatement BinaryOperation == MemberReference str Literal null ThrowStatement MethodInvocation MethodInvocation Literal "uninitialized object" newArgumentError getRuntime	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "|" ElementValuePair required Literal 1 ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject other ReturnStatement MethodInvocation MemberReference context MethodInvocation MemberReference context MemberReference other convertToInteger op_or	1
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject ReturnStatement MethodInvocation MethodInvocation getRuntime MethodInvocation Long MemberReference value valueOf javaToRuby	0
MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block ReturnStatement MethodInvocation MemberReference context MemberReference self MemberReference clazz MemberReference name MemberReference args call	0
MethodDeclaration Modifier public static BasicType int FormalParameter BasicType byte bytes FormalParameter BasicType int p FormalParameter BasicType int len FormalParameter ReferenceType Encoding enc LocalVariableDeclaration BasicType int VariableDeclarator olen Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator c WhileStatement BinaryOperation && BinaryOperation && BinaryOperation > MemberReference -- len Literal 0 MethodInvocation enc Assignment MemberReference c BinaryOperation & MemberReference ArraySelector MemberReference ++ p bytes Literal 0xff = isDigit BinaryOperation < MemberReference c Literal '8' StatementExpression MemberReference ++ olen ReturnStatement MemberReference olen	1
MethodDeclaration Modifier public ReferenceType Operand FormalParameter ReferenceType Map TypeArgument ReferenceType Operand TypeArgument ReferenceType Operand StatementExpression Assignment MemberReference Cast ReferenceType MethodInvocation MemberReference = ReturnStatement This	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "initialize" ElementValuePair required Literal 2 ElementValuePair optional Literal 1 ElementValuePair frame Literal true ElementValuePair visibility MemberReference Visibility PRIVATE ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block unusedBlock IfStatement BinaryOperation || MethodInvocation ! begin isNil MethodInvocation ! end isNil BlockStatement ThrowStatement MethodInvocation MethodInvocation Literal Literal "initialize" newNameError getRuntime StatementExpression MethodInvocation MemberReference context MemberReference ArraySelector Literal 0 args MemberReference ArraySelector Literal 1 args BinaryOperation && BinaryOperation > MemberReference args length Literal 2 MemberReference ArraySelector Literal 2 MethodInvocation isTrue args init ReturnStatement MethodInvocation MethodInvocation getNil getRuntime	0
MethodDeclaration Modifier public ReferenceType Object case203_line826 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals Literal "**" Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals MethodInvocation getPosition getOperatorCallNode Literal "-@" getOperatorCallNode = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public warn FormalParameter ReferenceType id FormalParameter ReferenceType String message FormalParameter ReferenceType Object data LocalVariableDeclaration ReferenceType ID VariableDeclarator IfStatement BinaryOperation == MemberReference id MemberReference BlockStatement StatementExpression Assignment MemberReference MemberReference ID = BlockStatement StatementExpression Assignment MemberReference MemberReference ID = StatementExpression MethodInvocation runtime MethodInvocation MemberReference MemberReference message MemberReference data warn getWarnings	0
MethodDeclaration Modifier private ReferenceType IRubyObject handleJavaException FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block FormalParameter ReferenceType Throwable LocalVariableDeclaration ReferenceType RescueBodyNode VariableDeclarator cRescueNode MemberReference rescueNode WhileStatement BinaryOperation != MemberReference cRescueNode Literal null BlockStatement LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator exceptions MethodInvocation MemberReference cRescueNode MemberReference runtime MemberReference context MemberReference self MemberReference IfStatement MethodInvocation RuntimeHelpers MethodInvocation isTrue MemberReference MemberReference exceptions MemberReference context BlockStatement StatementExpression MethodInvocation runtime MethodInvocation Literal "$!" MethodInvocation JavaUtil MemberReference runtime MemberReference convertJavaToUsableRubyObject set getGlobalVariables ReturnStatement MethodInvocation cRescueNode MemberReference runtime MemberReference context MemberReference self MemberReference StatementExpression Assignment MemberReference cRescueNode MethodInvocation cRescueNode = StatementExpression MethodInvocation MethodInvocation MemberReference ThrowStatement ClassCreator ReferenceType RuntimeException Literal failed"	1
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType RubyClass LocalVariableDeclaration ReferenceType RubyException VariableDeclarator instance ClassCreator ReferenceType MemberReference runtime MemberReference StatementExpression MethodInvocation instance MemberReference setMetaClass ReturnStatement MemberReference instance	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator receiver MethodInvocation MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference getReceiverNode LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator arg MethodInvocation MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference getArgsNode LocalVariableDeclaration ReferenceType Block VariableDeclarator block MethodInvocation RuntimeHelpers MemberReference context MemberReference self MemberReference getBlock IfStatement BinaryOperation instanceof MemberReference arg ReferenceType RubyArray BlockStatement LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator nodes Cast ReferenceType RubyArray MemberReference arg SwitchStatement MethodInvocation nodes size SwitchStatementCase Literal 0 ReturnStatement MethodInvocation callAdapter MemberReference context MemberReference self MemberReference receiver MemberReference block call SwitchStatementCase Literal 1 ReturnStatement MethodInvocation callAdapter MemberReference context MemberReference self MemberReference receiver MethodInvocation nodes Literal 0 eltInternal MemberReference block call SwitchStatementCase Literal 2 ReturnStatement MethodInvocation callAdapter MemberReference context MemberReference self MemberReference receiver MethodInvocation nodes Literal 0 eltInternal MethodInvocation nodes Literal 1 eltInternal MemberReference block call SwitchStatementCase Literal 3 ReturnStatement MethodInvocation callAdapter MemberReference context MemberReference self MemberReference receiver MethodInvocation nodes Literal 0 eltInternal MethodInvocation nodes Literal 1 eltInternal MethodInvocation nodes Literal 2 eltInternal MemberReference block call SwitchStatementCase ReturnStatement MethodInvocation callAdapter MemberReference context MemberReference self MemberReference receiver MethodInvocation nodes MemberReference block call ReturnStatement MethodInvocation callAdapter MemberReference context MemberReference self MemberReference receiver MemberReference arg MemberReference block call	0
MethodDeclaration Modifier private flushWrite IOException BadDescriptorException IfStatement BinaryOperation || BinaryOperation || MemberReference reading MethodInvocation ! modes isWritable BinaryOperation == MethodInvocation buffer position Literal 0 ReturnStatement LocalVariableDeclaration BasicType int VariableDeclarator len MethodInvocation buffer position StatementExpression MethodInvocation buffer flip LocalVariableDeclaration BasicType int VariableDeclarator n MethodInvocation descriptor MemberReference buffer write IfStatement BinaryOperation != MemberReference n MemberReference len BlockStatement StatementExpression MethodInvocation buffer clear	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair module Literal true ElementValuePair visibility MemberReference PRIVATE ReferenceType RubyNumeric rand FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime ReturnStatement MethodInvocation RubyFloat MemberReference runtime MethodInvocation runtime MethodInvocation newFloat	0
MethodDeclaration Modifier public if_icmplt FormalParameter ReferenceType Label arg0 StatementExpression MethodInvocation MethodInvocation MemberReference MemberReference arg0 getMethodVisitor	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair meta Literal true ElementValuePair visibility MemberReference Visibility PRIVATE ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType IRubyObject newInstanceBang FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject num FormalParameter ReferenceType IRubyObject den IfStatement BinaryOperation instanceof MemberReference num ReferenceType RubyInteger StatementExpression Assignment MemberReference num MethodInvocation MemberReference context MemberReference num f_to_i = IfStatement BinaryOperation instanceof MemberReference den ReferenceType RubyInteger StatementExpression Assignment MemberReference den MethodInvocation MemberReference context MemberReference den f_to_i = LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator res MethodInvocation MemberReference context MemberReference den MethodInvocation RubyFixnum MemberReference runtime zero f_cmp IfStatement BinaryOperation == MemberReference res MethodInvocation RubyFixnum MemberReference runtime minus_one BlockStatement StatementExpression Assignment MemberReference num MethodInvocation MemberReference context MemberReference num f_negate = StatementExpression Assignment MemberReference den MethodInvocation MemberReference context MemberReference den f_negate = IfStatement BinaryOperation == MemberReference res MethodInvocation RubyFixnum MemberReference runtime zero BlockStatement ThrowStatement MethodInvocation runtime newZeroDivisionError ReturnStatement ClassCreator ReferenceType RubyRational MemberReference runtime MemberReference recv MemberReference num MemberReference den	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair frame Literal true ElementValuePair visibility MemberReference Visibility PRIVATE Annotation Override ReferenceType IRubyObject ReturnStatement This	0
MethodDeclaration Modifier protected FormalParameter BasicType int depth FormalParameter BasicType int index SwitchStatement MemberReference index SwitchStatementCase Literal 0 StatementExpression MethodInvocation MemberReference depth unwrapParentScopes StatementExpression MethodInvocation methodCompiler loadNil StatementExpression MethodInvocation method MethodInvocation ClassReference ReferenceType DynamicScope p Literal MethodInvocation ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject sig invokevirtual BreakStatement SwitchStatementCase Literal 1 StatementExpression MethodInvocation MemberReference depth unwrapParentScopes StatementExpression MethodInvocation methodCompiler loadNil StatementExpression MethodInvocation method MethodInvocation ClassReference ReferenceType DynamicScope p Literal "getValueOneDepthZeroOrNil" MethodInvocation ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject sig invokevirtual BreakStatement SwitchStatementCase Literal 2 StatementExpression MethodInvocation MemberReference depth unwrapParentScopes StatementExpression MethodInvocation methodCompiler loadNil StatementExpression MethodInvocation method MethodInvocation ClassReference ReferenceType DynamicScope p Literal "getValueTwoDepthZeroOrNil" MethodInvocation ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject sig invokevirtual BreakStatement SwitchStatementCase Literal 3 StatementExpression MethodInvocation MemberReference depth unwrapParentScopes StatementExpression MethodInvocation methodCompiler loadNil StatementExpression MethodInvocation method MethodInvocation ClassReference ReferenceType DynamicScope p Literal MethodInvocation ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject sig invokevirtual BreakStatement SwitchStatementCase StatementExpression MethodInvocation method MethodInvocation methodCompiler getDynamicScopeIndex aload StatementExpression MethodInvocation method MemberReference index pushInt StatementExpression MethodInvocation method MemberReference depth pushInt StatementExpression MethodInvocation methodCompiler loadNil StatementExpression MethodInvocation method MethodInvocation ClassReference ReferenceType DynamicScope p Literal MethodInvocation ClassReference ReferenceType IRubyObject MethodInvocation MemberReference Integer TYPE MemberReference Integer TYPE ClassReference ReferenceType IRubyObject params sig invokevirtual	1
MethodDeclaration Modifier public ReferenceType Object case351_line1323 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support MethodInvocation Cast ReferenceType RestArgNode MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals getPosition Literal null Literal null Cast ReferenceType RestArgNode MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals Literal null Cast ReferenceType BlockArgNode MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals new_args = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "chardev?" ElementValuePair required Literal 1 ElementValuePair module Literal true ReferenceType IRubyObject chardev_p FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject filename LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation recv getRuntime LocalVariableDeclaration ReferenceType JRubyFile VariableDeclarator file MethodInvocation MemberReference filename file ReturnStatement MethodInvocation runtime BinaryOperation && MethodInvocation file exists MethodInvocation runtime MethodInvocation MethodInvocation file getAbsolutePath stat MethodInvocation isCharDev getPosix newBoolean	1
MethodDeclaration Modifier private BasicType boolean isExpression FormalParameter ReferenceType Node node DoStatement Literal true BlockStatement IfStatement BinaryOperation == MemberReference node Literal null ReturnStatement Literal true SwitchStatement MethodInvocation node getNodeType SwitchStatementCase BEGINNODE StatementExpression Assignment MemberReference node Cast ReferenceType BeginNode MemberReference node = BreakStatement SwitchStatementCase BLOCKNODE StatementExpression Assignment MemberReference node Cast ReferenceType BlockNode MemberReference node = BreakStatement SwitchStatementCase BREAKNODE StatementExpression Assignment MemberReference node Cast ReferenceType BreakNode MemberReference node = BreakStatement SwitchStatementCase CLASSNODE DEFNNODE DEFSNODE MODULENODE NEXTNODE REDONODE RETRYNODE RETURNNODE UNTILNODE WHILENODE ReturnStatement Literal false SwitchStatementCase IFNODE ReturnStatement BinaryOperation && MethodInvocation Cast ReferenceType IfNode MemberReference node isExpression MethodInvocation Cast ReferenceType IfNode MemberReference node isExpression SwitchStatementCase NEWLINENODE StatementExpression Assignment MemberReference node Cast ReferenceType NewlineNode MemberReference node = BreakStatement SwitchStatementCase ReturnStatement Literal true	1
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression MethodInvocation support pushBlockScope ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public FormalParameter ReferenceType RubyClass objectClass FormalParameter ReferenceType IRubyObject StatementExpression MethodInvocation StatementExpression MethodInvocation MemberReference Visibility PRIVATE StatementExpression MethodInvocation MemberReference objectClass LocalVariableDeclaration ReferenceType Frame VariableDeclarator frame MethodInvocation StatementExpression MethodInvocation frame MemberReference StatementExpression MethodInvocation MethodInvocation MethodInvocation MemberReference objectClass getCurrentScope	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 StatementExpression MethodInvocation handle TernaryExpression MemberReference isStatic Literal null Cast ReferenceType JavaObjectWrapper MemberReference self MethodInvocation MemberReference arg0 MethodInvocation MemberReference arg1 invoke ReturnStatement MemberReference self	0
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement MemberReference identifier	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context LocalVariableDeclaration ReferenceType RubyHash VariableDeclarator hash MethodInvocation RubyHash MethodInvocation getRuntime IfStatement BinaryOperation == MethodInvocation pattern numberOfNames Literal 0 ReturnStatement MemberReference hash ForStatement ForControl VariableDeclaration ReferenceType Iterator TypeArgument ReferenceType NameEntry VariableDeclarator i MethodInvocation pattern namedBackrefIterator MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType NameEntry VariableDeclarator e MethodInvocation i next LocalVariableDeclaration BasicType int VariableDeclarator backrefs MethodInvocation e getBackRefs LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator ary MethodInvocation MethodInvocation MemberReference backrefs length newArray getRuntime ForStatement EnhancedForControl VariableDeclaration BasicType int VariableDeclarator backref MemberReference backrefs StatementExpression MethodInvocation ary MethodInvocation RubyFixnum MethodInvocation getRuntime MemberReference backref newFixnum append StatementExpression MethodInvocation hash MethodInvocation RubyString MethodInvocation MemberReference context freeze MethodInvocation getRuntime MemberReference e name MemberReference e nameP BinaryOperation - MemberReference e nameEnd MemberReference e nameP MemberReference ary fastASet ReturnStatement MemberReference hash	1
MethodDeclaration Modifier public static ReferenceType IRubyObject invoke FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType String name FormalParameter ReferenceType Block block ReturnStatement MethodInvocation self MethodInvocation MemberReference context MemberReference self MemberReference name MemberReference block getMetaClass	0
MethodDeclaration Modifier public FormalParameter ReferenceType scope FormalParameter ReferenceType Label start FormalParameter ReferenceType Label end StatementExpression MethodInvocation method Literal MethodInvocation ClassReference ReferenceType DynamicScope ci Literal null MemberReference start MemberReference end MethodInvocation methodCompiler getDynamicScopeIndex	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ReferenceType RubyBoolean ReturnStatement MethodInvocation MethodInvocation MethodInvocation Modifier MethodInvocation MethodInvocation getModifiers javaClass isProtected newBoolean getRuntime	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject StatementExpression MethodInvocation modifyCheck ReturnStatement This	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ReferenceType IRubyObject group IfStatement BinaryOperation == MemberReference Literal null BlockStatement ReturnStatement MethodInvocation MethodInvocation getNil getRuntime ReturnStatement MemberReference	0
MethodDeclaration Modifier public final Annotation Override ReferenceType String toString LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator sb ClassCreator ReferenceType StringBuilder StatementExpression MethodInvocation sb Literal append ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference parameterTypes length MemberReference ++ i BlockStatement StatementExpression MethodInvocation sb MemberReference ArraySelector MemberReference i MethodInvocation toString MethodInvocation toLowerCase parameterTypes append IfStatement BinaryOperation < MemberReference i BinaryOperation - MemberReference parameterTypes length Literal 1 BlockStatement StatementExpression MethodInvocation sb Literal ", " append StatementExpression MethodInvocation sb BinaryOperation + BinaryOperation + Literal "] MethodInvocation returnType MethodInvocation toLowerCase toString Literal "]" append ReturnStatement MethodInvocation sb toString	0
MethodDeclaration Modifier public Annotation Deprecated ReferenceType IRubyObject module_eval FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block ReturnStatement MethodInvocation MemberReference context This MemberReference args MemberReference block specificEval	1
MethodDeclaration Modifier public define FormalParameter ReferenceType RubyModule module FormalParameter ReferenceType JavaMethodDescriptor desc FormalParameter ReferenceType DynamicMethod LocalVariableDeclaration ReferenceType JRubyMethod VariableDeclarator jrubyMethod MemberReference desc anno IfStatement MethodInvocation jrubyMethod frame BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation jrubyMethod name BlockStatement StatementExpression MethodInvocation MemberReference name add IfStatement BinaryOperation || BinaryOperation == MethodInvocation jrubyMethod compat MemberReference CompatVersion BinaryOperation == MethodInvocation module MethodInvocation getInstanceConfig MethodInvocation getRuntime MethodInvocation jrubyMethod compat BlockStatement LocalVariableDeclaration ReferenceType RubyModule VariableDeclarator IfStatement MethodInvocation jrubyMethod meta BlockStatement StatementExpression Assignment MemberReference MethodInvocation module = StatementExpression MethodInvocation MemberReference LocalVariableDeclaration ReferenceType String VariableDeclarator baseName IfStatement BinaryOperation == MethodInvocation jrubyMethod MemberReference length name Literal 0 BlockStatement StatementExpression Assignment MemberReference baseName MemberReference desc name = StatementExpression MethodInvocation MemberReference baseName MemberReference addMethod BlockStatement StatementExpression Assignment MemberReference baseName MethodInvocation jrubyMethod ArraySelector Literal 0 name = ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation jrubyMethod name BlockStatement StatementExpression MethodInvocation MemberReference name MemberReference addMethod IfStatement BinaryOperation > MethodInvocation jrubyMethod MemberReference length alias Literal 0 BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator alias MethodInvocation jrubyMethod alias BlockStatement StatementExpression MethodInvocation MemberReference alias MemberReference baseName defineAlias BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator baseName IfStatement BinaryOperation == MethodInvocation jrubyMethod MemberReference length name Literal 0 BlockStatement StatementExpression Assignment MemberReference baseName MemberReference desc name = StatementExpression MethodInvocation module MemberReference baseName MemberReference addMethod BlockStatement StatementExpression Assignment MemberReference baseName MethodInvocation jrubyMethod ArraySelector Literal 0 name = ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation jrubyMethod name BlockStatement StatementExpression MethodInvocation module MemberReference name MemberReference addMethod IfStatement BinaryOperation > MethodInvocation jrubyMethod MemberReference length alias Literal 0 BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator alias MethodInvocation jrubyMethod alias BlockStatement StatementExpression MethodInvocation module MemberReference alias MemberReference baseName defineAlias IfStatement MethodInvocation jrubyMethod module BlockStatement StatementExpression Assignment MemberReference MethodInvocation module = LocalVariableDeclaration ReferenceType DynamicMethod VariableDeclarator MethodInvocation dup StatementExpression MethodInvocation MemberReference PUBLIC setVisibility IfStatement BinaryOperation == MethodInvocation jrubyMethod MemberReference length name Literal 0 BlockStatement StatementExpression Assignment MemberReference baseName MemberReference desc name = StatementExpression MethodInvocation MemberReference desc name MemberReference addMethod BlockStatement StatementExpression Assignment MemberReference baseName MethodInvocation jrubyMethod ArraySelector Literal 0 name = ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation jrubyMethod name BlockStatement StatementExpression MethodInvocation MemberReference name MemberReference addMethod IfStatement BinaryOperation > MethodInvocation jrubyMethod MemberReference length alias Literal 0 BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator alias MethodInvocation jrubyMethod alias BlockStatement StatementExpression MethodInvocation MemberReference alias MemberReference baseName defineAlias	0
MethodDeclaration Modifier public static ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject real FormalParameter ReferenceType IRubyObject image ReturnStatement MethodInvocation MemberReference context MemberReference recv MemberReference real MemberReference image newInstance	0
MethodDeclaration Modifier public ReferenceType RaiseException FormalParameter ReferenceType String message ReturnStatement MethodInvocation MethodInvocation MethodInvocation Literal fastGetClass getErrno MemberReference message newRaiseException	0
MethodDeclaration Modifier public static ReferenceType IRubyObject last_match_s FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args SwitchStatement MemberReference args length SwitchStatementCase Literal 0 ReturnStatement MethodInvocation MemberReference context MemberReference recv last_match_s SwitchStatementCase Literal 1 ReturnStatement MethodInvocation MemberReference context MemberReference recv MemberReference ArraySelector Literal 0 args last_match_s SwitchStatementCase StatementExpression MethodInvocation Arity MethodInvocation context getRuntime MemberReference args length Literal 0 Literal 1 raiseArgumentError ReturnStatement Literal null	1
MethodDeclaration Modifier public visit FormalParameter ReferenceType IRubyObject key FormalParameter ReferenceType IRubyObject value StatementExpression MethodInvocation self MemberReference context MemberReference key MemberReference value op_aset	0
MethodDeclaration Modifier public ReferenceType IRubyObject getValue FormalParameter ReferenceType ThreadContext context LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator value MemberReference ReturnStatement TernaryExpression MethodInvocation MemberReference context MemberReference value MemberReference value MethodInvocation MemberReference context MemberReference name	0
MethodDeclaration Modifier public Annotation Override write FormalParameter Modifier final BasicType byte b IOException StatementExpression MethodInvocation MemberReference b Literal 0 MemberReference b length write	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject args IfStatement BinaryOperation == MemberReference compiledMethod Literal null StatementExpression MethodInvocation initializeMethod ReturnStatement MethodInvocation compiledMethod MemberReference context MemberReference self MemberReference clazz MemberReference name MemberReference args call	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context ReturnStatement MethodInvocation MemberReference context This This f_mul	0
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType DynamicMethod VariableDeclarator method MethodInvocation MemberReference name searchMethod IfStatement MethodInvocation MemberReference method BlockStatement ReturnStatement MethodInvocation RuntimeHelpers MemberReference context MemberReference self MethodInvocation method getVisibility MemberReference name MemberReference CallType FUNCTIONAL MemberReference arg0 MemberReference arg1 MemberReference arg2 MemberReference block ReturnStatement MethodInvocation method MemberReference context MemberReference self This MemberReference name MemberReference arg0 MemberReference arg1 MemberReference arg2 MemberReference block call	0
MethodDeclaration Modifier public TryStatement StatementExpression MethodInvocation runtime Literal ''" CatchClause CatchClauseParameter RaiseException e StatementExpression MethodInvocation Literal "Empty library is not exception should have been ClassReference ReferenceType RaiseException MethodInvocation e getClass assertEquals StatementExpression MethodInvocation Literal "Empty library is not exception should only be RaiseException with no root cause" MethodInvocation e getCause	0
MethodDeclaration Modifier public Annotation Override BasicType boolean ReturnStatement Literal true	0
MethodDeclaration Modifier public ReferenceType IRubyObject yield FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject value FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule FormalParameter BasicType boolean FormalParameter ReferenceType FormalParameter ReferenceType Block ReferenceType Type type IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference self MethodInvocation MemberReference = LocalVariableDeclaration ReferenceType Visibility VariableDeclarator oldVis MethodInvocation MethodInvocation getVisibility getFrame LocalVariableDeclaration ReferenceType Frame VariableDeclarator MethodInvocation MemberReference context MemberReference MemberReference pre LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime TryStatement IfStatement MemberReference ! noargblock BlockStatement StatementExpression Assignment MemberReference value TernaryExpression MemberReference MethodInvocation assigner MemberReference runtime MemberReference value MethodInvocation assigner MemberReference runtime MemberReference value convertToArray = StatementExpression MethodInvocation assigner MemberReference runtime MemberReference context MemberReference self MemberReference value MemberReference Block NULL_BLOCK ReturnStatement MethodInvocation MemberReference context MemberReference self CatchClause CatchClauseParameter JumpException.NextJump nj ReturnStatement MethodInvocation MemberReference context MemberReference nj MemberReference type handleNextJump StatementExpression MethodInvocation MemberReference context MemberReference MemberReference oldVis MemberReference post	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "|" ElementValuePair required Literal 1 ReferenceType RubyBoolean op_or FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject obj ReturnStatement MethodInvocation recv MethodInvocation MethodInvocation obj isTrue newBoolean getRuntime	1
MethodDeclaration Modifier public final ReferenceType RubyRegexp FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType String name FormalParameter BasicType int options ReturnStatement MethodInvocation runtimeCache MemberReference runtime Literal 8 MemberReference name MemberReference options	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair compat MemberReference CompatVersion RUBY1_9 Annotation Override ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context IfStatement BinaryOperation || MethodInvocation Double MemberReference value isInfinite MethodInvocation Double MemberReference value isNaN ReturnStatement MethodInvocation RubyFixnum MethodInvocation context getRuntime one ReturnStatement SuperMethodInvocation MemberReference context	1
MethodDeclaration Modifier public FormalParameter BasicType boolean IfStatement BinaryOperation && MemberReference MethodInvocation ! BlockStatement StatementExpression MethodInvocation lock IfStatement BinaryOperation && MemberReference ! MethodInvocation BlockStatement StatementExpression MethodInvocation unlock	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair required Literal 1 ReferenceType IRubyObject default_value_set FormalParameter Modifier final ReferenceType IRubyObject defaultValue StatementExpression MethodInvocation modify StatementExpression Assignment MemberReference ifNone MemberReference defaultValue = StatementExpression Assignment MemberReference flags MemberReference ~ PROCDEFAULT_HASH_F &= ReturnStatement MemberReference ifNone	1
MethodDeclaration Modifier private StatementExpression MethodInvocation	0
MethodDeclaration Modifier public populate FormalParameter ReferenceType RubyModule FormalParameter ReferenceType Class clazz LocalVariableDeclaration ReferenceType MethodFactory VariableDeclarator MethodInvocation MethodFactory MethodInvocation MethodInvocation getJRubyClassLoader getRuntime createFactory LocalVariableDeclaration ReferenceType RubyModule ReferenceType VariableDeclarator ClassCreator ReferenceType RubyModule ReferenceType StatementExpression MethodInvocation MemberReference clazz ForStatement EnhancedForControl VariableDeclaration ReferenceType Map ReferenceType Entry TypeArgument ReferenceType String TypeArgument ReferenceType List TypeArgument ReferenceType JavaMethodDescriptor VariableDeclarator entry MethodInvocation MethodInvocation entrySet BlockStatement StatementExpression MethodInvocation MethodInvocation entry getKey MethodInvocation entry getValue MemberReference ForStatement EnhancedForControl VariableDeclaration ReferenceType Map ReferenceType Entry TypeArgument ReferenceType String TypeArgument ReferenceType List TypeArgument ReferenceType JavaMethodDescriptor VariableDeclarator entry MethodInvocation MethodInvocation entrySet BlockStatement StatementExpression MethodInvocation MethodInvocation entry getKey MethodInvocation entry getValue MemberReference ForStatement EnhancedForControl VariableDeclaration ReferenceType Map ReferenceType Entry TypeArgument ReferenceType String TypeArgument ReferenceType List TypeArgument ReferenceType JavaMethodDescriptor VariableDeclarator entry MethodInvocation MethodInvocation entrySet BlockStatement StatementExpression MethodInvocation MethodInvocation entry getKey MethodInvocation entry getValue MemberReference ForStatement EnhancedForControl VariableDeclaration ReferenceType Map ReferenceType Entry TypeArgument ReferenceType String TypeArgument ReferenceType List TypeArgument ReferenceType JavaMethodDescriptor VariableDeclarator entry MethodInvocation MethodInvocation entrySet BlockStatement StatementExpression MethodInvocation MethodInvocation entry getKey MethodInvocation entry getValue MemberReference ForStatement EnhancedForControl VariableDeclaration ReferenceType Map ReferenceType Entry TypeArgument ReferenceType String TypeArgument ReferenceType List TypeArgument ReferenceType JavaMethodDescriptor VariableDeclarator entry MethodInvocation MethodInvocation entrySet BlockStatement StatementExpression MethodInvocation MethodInvocation entry getKey MethodInvocation entry getValue MemberReference ForStatement EnhancedForControl VariableDeclaration ReferenceType Map ReferenceType Entry TypeArgument ReferenceType String TypeArgument ReferenceType List TypeArgument ReferenceType JavaMethodDescriptor VariableDeclarator entry MethodInvocation MethodInvocation entrySet BlockStatement StatementExpression MethodInvocation MethodInvocation entry getKey MethodInvocation entry getValue MemberReference	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair frame Literal true ElementValuePair reads MemberReference BACKREF ElementValuePair writes MemberReference BACKREF ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType IRubyObject gsub FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType Block block ReturnStatement MethodInvocation MemberReference context MemberReference arg0 MemberReference block Literal false gsub	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal "map" ElementValuePair frame Literal true ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter Modifier final ReferenceType Block block ReturnStatement MethodInvocation MemberReference context MemberReference self MemberReference block Literal "map"	0
MethodDeclaration Modifier public ReferenceType Object case98_line666 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support MethodInvocation Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals getPosition Cast ReferenceType String Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals new_colon3 = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "eql?" ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject other LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime IfStatement BinaryOperation && BinaryOperation instanceof MemberReference other ReferenceType RubyString MethodInvocation value Cast ReferenceType RubyString MemberReference other equal ReturnStatement MethodInvocation runtime getTrue ReturnStatement MethodInvocation runtime getFalse	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair required Literal 2 ElementValuePair optional Literal 1 ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject args LocalVariableDeclaration Modifier final ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration Modifier final ReferenceType IRubyObject VariableDeclarator fieldName MemberReference ArraySelector Literal 0 args StatementExpression MethodInvocation MemberReference runtime MemberReference fieldName checkFieldName IfStatement BinaryOperation instanceof MemberReference ArraySelector Literal 1 args ReferenceType RubyInteger BlockStatement ThrowStatement MethodInvocation runtime BinaryOperation + BinaryOperation + Literal "wrong argument type " MemberReference ArraySelector Literal 1 MethodInvocation getMetaClass MethodInvocation getName args Literal " (expected newTypeError LocalVariableDeclaration BasicType int VariableDeclarator strlen MethodInvocation Util MemberReference ArraySelector Literal 1 args int32Value LocalVariableDeclaration BasicType int VariableDeclarator offset MethodInvocation MemberReference args Literal 2 Literal 1 calculateOffset LocalVariableDeclaration ReferenceType Type VariableDeclarator type Cast ReferenceType Type MethodInvocation context MethodInvocation Literal fastGetModule MethodInvocation Literal "Type" fastGetClass MethodInvocation Literal fastFetchConstant getRuntime ReturnStatement MethodInvocation MemberReference runtime MemberReference ArraySelector Literal 0 args ClassCreator ReferenceType MemberReference fieldName MemberReference type MemberReference ++ fieldCount MemberReference offset MemberReference strlen Literal 1 MemberReference strlen storeField	1
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter BasicType int intIndex IfStatement BinaryOperation || BinaryOperation < MemberReference intIndex Literal 0 BinaryOperation >= MemberReference intIndex MethodInvocation getLength BlockStatement ThrowStatement MethodInvocation MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "index out of bounds for java array (" MemberReference intIndex Literal " for length " MethodInvocation getLength Literal ")" newArgumentError getRuntime ReturnStatement MethodInvocation JavaUtil MethodInvocation getRuntime MemberReference MethodInvocation getValue MemberReference intIndex	0
MethodDeclaration Modifier private final static ReferenceType ArrayIO newLE64ArrayIO ReturnStatement ClassCreator ReferenceType	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "readline" ElementValuePair module Literal true ElementValuePair visibility MemberReference Visibility PRIVATE ReferenceType IRubyObject s_readline FormalParameter ReferenceType IRubyObject recv IOException ReturnStatement MethodInvocation MemberReference recv MethodInvocation RubyString MethodInvocation recv getRuntime newEmptyString MethodInvocation recv MethodInvocation getFalse getRuntime s_readline	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "read_string" ReferenceType IRubyObject read_string FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject rbLength ReturnStatement TernaryExpression MethodInvocation ! rbLength isNil MethodInvocation MemoryUtil MethodInvocation context getRuntime MethodInvocation getMemoryIO Literal 0 MethodInvocation Util MemberReference rbLength int32Value getTaintedByteString MethodInvocation MemoryUtil MethodInvocation context getRuntime MethodInvocation getMemoryIO Literal 0 getTaintedString	1
MethodDeclaration Modifier public static ReferenceType RubyStruct unmarshalFrom FormalParameter ReferenceType input java.io.IOException LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation input getRuntime LocalVariableDeclaration ReferenceType RubySymbol VariableDeclarator className Cast ReferenceType RubySymbol MethodInvocation input LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator MethodInvocation MemberReference runtime MethodInvocation className asJavaString pathToClass IfStatement BinaryOperation == MemberReference Literal null BlockStatement ThrowStatement MethodInvocation runtime BinaryOperation + Literal "uninitialized constant " MemberReference className MethodInvocation className asJavaString newNameError LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator mem MethodInvocation MemberReference MemberReference Block NULL_BLOCK members LocalVariableDeclaration BasicType int VariableDeclarator len MethodInvocation input LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator values ArrayCreator ReferenceType IRubyObject MemberReference len ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference len MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i values MethodInvocation runtime getNil = LocalVariableDeclaration ReferenceType RubyStruct VariableDeclarator result MethodInvocation MemberReference MemberReference values MemberReference Block NULL_BLOCK newStruct StatementExpression MethodInvocation input MemberReference result ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference len MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator slot MethodInvocation input IfStatement MethodInvocation ! mem MethodInvocation toString MethodInvocation MethodInvocation slot toString equals MemberReference i eltInternal BlockStatement ThrowStatement MethodInvocation runtime BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal " MethodInvocation getName Literal " not compatible MemberReference slot Literal " for :" MethodInvocation mem MemberReference i eltInternal Literal ")" newTypeError StatementExpression MethodInvocation result MethodInvocation runtime MemberReference i newFixnum MethodInvocation input ReturnStatement MemberReference result	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair required Literal 1 ElementValuePair optional Literal 1 ReferenceType IRubyObject seek FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args LocalVariableDeclaration ReferenceType ArgsFileData VariableDeclarator data MethodInvocation MemberReference context MemberReference recv Literal "no stream to getData ReturnStatement Cast ReferenceType RubyIO MemberReference data currentFile	0
MethodDeclaration Modifier public Annotation Deprecated ReferenceType IncludedModuleWrapper FormalParameter ReferenceType RubyClass superClazz LocalVariableDeclaration ReferenceType IncludedModuleWrapper VariableDeclarator includedModule ClassCreator ReferenceType IncludedModuleWrapper MethodInvocation getRuntime MemberReference superClazz This IfStatement BinaryOperation != MethodInvocation getSuperClass Literal null BlockStatement StatementExpression MethodInvocation includedModule MethodInvocation getSuperClass includeModule ReturnStatement MemberReference includedModule	1
MethodDeclaration Modifier public Annotation Override ReferenceType Class TypeArgument ? LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation dataGetStruct ReturnStatement TernaryExpression BinaryOperation != MemberReference Literal null MethodInvocation getClass MemberReference Void TYPE	0
MethodDeclaration Modifier private ReferenceType IRubyObject op_aset FormalParameter ReferenceType ThreadContext context FormalParameter BasicType int idx FormalParameter ReferenceType IRubyObject arg1 StatementExpression Assignment MemberReference idx MethodInvocation MemberReference idx MemberReference value realSize = IfStatement BinaryOperation instanceof MemberReference arg1 ReferenceType RubyFixnum BlockStatement StatementExpression MethodInvocation modify StatementExpression MethodInvocation value MemberReference idx MethodInvocation RubyNumeric Cast ReferenceType RubyFixnum MemberReference arg1 fix2int set BlockStatement StatementExpression MethodInvocation MemberReference idx Literal 1 MethodInvocation arg1 convertToString replaceInternal ReturnStatement MemberReference arg1	1
MethodDeclaration Modifier protected post FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType FormalParameter ReferenceType Visibility FormalParameter ReferenceType Frame StatementExpression MethodInvocation MethodInvocation MemberReference setVisibility getFrame StatementExpression MethodInvocation context MemberReference MemberReference	0
MethodDeclaration Modifier private compileAttrAssign FormalParameter ReferenceType Node node FormalParameter ReferenceType BodyCompiler context FormalParameter BasicType boolean expr LocalVariableDeclaration Modifier final ReferenceType AttrAssignNode VariableDeclarator attrAssignNode Cast ReferenceType AttrAssignNode MemberReference node LocalVariableDeclaration ReferenceType CompilerCallback VariableDeclarator receiverCallback ClassCreator ReferenceType CompilerCallback MethodDeclaration Modifier public call FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation MethodInvocation attrAssignNode getReceiverNode MemberReference context Literal true compile LocalVariableDeclaration ReferenceType ArgumentsCallback VariableDeclarator argsCallback MethodInvocation MethodInvocation attrAssignNode getArgsNode getArgsCallback StatementExpression MethodInvocation context MethodInvocation MethodInvocation attrAssignNode getName MemberReference receiverCallback MemberReference argsCallback invokeAttrAssign getInvocationCompiler IfStatement MemberReference ! expr StatementExpression MethodInvocation context consumeCurrentValue	1
MethodDeclaration Modifier public ReferenceType RaiseException ReturnStatement MethodInvocation Literal a directory"	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair required Literal 1 ReferenceType IRubyObject chmod FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg LocalVariableDeclaration BasicType int VariableDeclarator mode Cast BasicType int MethodInvocation arg MethodInvocation getLongValue convertToInteger IfStatement ClassCreator ! MethodInvocation exists ReferenceType File MemberReference path BlockStatement ThrowStatement MethodInvocation context MethodInvocation BinaryOperation + Literal "No such file or directory - " MemberReference path newErrnoENOENTError getRuntime ReturnStatement MethodInvocation context MethodInvocation MethodInvocation context MethodInvocation getPosix MethodInvocation MemberReference path MemberReference mode chmod getRuntime newFixnum getRuntime	1
MethodDeclaration Modifier private Annotation Deprecated loadArgument FormalParameter ReferenceType MethodVisitor mv FormalParameter BasicType int argsIndex FormalParameter BasicType int argIndex FormalParameter ReferenceType Class StatementExpression MethodInvocation mv MemberReference ALOAD MemberReference argsIndex visitVarInsn StatementExpression MethodInvocation mv ClassCreator ReferenceType Integer MemberReference argIndex StatementExpression MethodInvocation mv MemberReference visitInsn StatementExpression MethodInvocation MemberReference mv MemberReference checkCast	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair frame Literal true ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter Modifier final ReferenceType Block block ReturnStatement TernaryExpression MethodInvocation block isGiven MethodInvocation MemberReference context MemberReference self MemberReference block reject MethodInvocation MethodInvocation context getRuntime MemberReference self Literal enumeratorize	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType Boolean MethodInvocation support isInDef = StatementExpression MethodInvocation support Literal false setInDef ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier private BasicType int calculateActualRequired FormalParameter BasicType int paramsLength FormalParameter BasicType int optional FormalParameter BasicType boolean rest FormalParameter BasicType boolean isStatic FormalParameter BasicType boolean hasContext FormalParameter BasicType boolean hasBlock LocalVariableDeclaration BasicType int VariableDeclarator actualRequired IfStatement BinaryOperation && BinaryOperation == MemberReference optional Literal 0 MemberReference ! rest BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator args MemberReference paramsLength IfStatement BinaryOperation == MemberReference args Literal 0 BlockStatement StatementExpression Assignment MemberReference actualRequired Literal 0 = BlockStatement IfStatement MemberReference isStatic BlockStatement StatementExpression MemberReference -- args IfStatement MemberReference hasContext BlockStatement StatementExpression MemberReference -- args IfStatement MemberReference hasBlock BlockStatement StatementExpression MemberReference -- args StatementExpression Assignment MemberReference actualRequired MemberReference args = BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator args MemberReference paramsLength IfStatement BinaryOperation == MemberReference args Literal 0 BlockStatement StatementExpression Assignment MemberReference actualRequired Literal 0 = BlockStatement IfStatement MemberReference isStatic BlockStatement StatementExpression MemberReference -- args IfStatement MemberReference hasContext BlockStatement StatementExpression MemberReference -- args IfStatement MemberReference hasBlock BlockStatement StatementExpression MemberReference -- args StatementExpression MemberReference -- args StatementExpression Assignment MemberReference actualRequired MemberReference args = IfStatement BinaryOperation != MemberReference actualRequired Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType RuntimeException Literal "Combining specific args with is not yet supported" ReturnStatement MemberReference actualRequired	1
MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject caller FormalParameter ReferenceType IRubyObject self FormalParameter BasicType long IfStatement BinaryOperation instanceof MemberReference self ReferenceType RubyFixnum BlockStatement ReturnStatement Cast ReferenceType RubyFixnum MemberReference self ReturnStatement SuperMethodInvocation MemberReference context MemberReference caller MemberReference self MemberReference call	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Cast ReferenceType AssignableNode MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals StatementExpression Assignment MemberReference yyVal Cast ReferenceType MultipleAsgn19Node MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals = StatementExpression Cast ReferenceType MultipleAsgn19Node MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public ReferenceType IRubyObject getConstantFrom FormalParameter ReferenceType String name ReturnStatement MethodInvocation MethodInvocation name intern	0
MethodDeclaration Modifier private ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject other LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime IfStatement BinaryOperation instanceof MemberReference other ReferenceType RubyFloat BlockStatement ReturnStatement MethodInvocation RubyFloat MemberReference runtime MethodInvocation Math MemberReference value Cast ReferenceType RubyFloat MemberReference other pow newFloat ReturnStatement MethodInvocation MemberReference context Literal "**" MemberReference other coerceBin	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair required Literal 1 ElementValuePair rest Literal true ElementValuePair module Literal true ElementValuePair visibility MemberReference PRIVATE ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType RubyFixnum FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration BasicType long VariableDeclarator pid MethodInvocation ShellLauncher MemberReference runtime MemberReference args ReturnStatement MethodInvocation RubyFixnum MemberReference runtime MemberReference pid newFixnum	0
MethodDeclaration Modifier public Annotation Deprecated ReferenceType Callback getMethod FormalParameter ReferenceType String method FormalParameter ReferenceType Class arg1 FormalParameter ReferenceType Class arg2 FormalParameter ReferenceType Class arg3 LocalVariableDeclaration ReferenceType String VariableDeclarator mname BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation type getName Literal "Callback$" MemberReference method Literal LocalVariableDeclaration ReferenceType String VariableDeclarator mnamePath BinaryOperation + BinaryOperation + BinaryOperation + MemberReference typePath Literal "Callback$" MemberReference method Literal SynchronizedStatement MethodInvocation runtime getJRubyClassLoader LocalVariableDeclaration ReferenceType Class VariableDeclarator c MethodInvocation MemberReference mname tryClass TryStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator descriptor ArrayCreator ReferenceType Class ArrayInitializer MemberReference arg1 MemberReference arg2 MemberReference arg3 IfStatement BinaryOperation == MemberReference c Literal null BlockStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator signature ArrayCreator ReferenceType Class ArrayInitializer MemberReference arg1 MemberReference arg2 MemberReference arg3 ClassReference ReferenceType Block LocalVariableDeclaration ReferenceType Class VariableDeclarator ret MethodInvocation MemberReference method MemberReference descriptor getReturnClass LocalVariableDeclaration ReferenceType ClassWriter VariableDeclarator cw MethodInvocation MemberReference mnamePath createCtor LocalVariableDeclaration ReferenceType MethodVisitor VariableDeclarator mv MethodInvocation MemberReference cw startCall StatementExpression MethodInvocation MemberReference mv MemberReference METHOD_ARGS_INDEX Literal 3 MemberReference descriptor loadArguments StatementExpression MethodInvocation mv MemberReference ALOAD Literal 3 visitVarInsn StatementExpression MethodInvocation mv MemberReference INVOKEVIRTUAL MemberReference typePath MemberReference method MethodInvocation MemberReference ret MemberReference signature sig visitMethodInsn StatementExpression MethodInvocation mv MemberReference ARETURN visitInsn StatementExpression MethodInvocation mv Literal 5 Literal 3 visitMaxs StatementExpression Assignment MemberReference c MethodInvocation MemberReference cw MemberReference mv MemberReference mname endCall = LocalVariableDeclaration ReferenceType InvocationCallback VariableDeclarator ic Cast ReferenceType InvocationCallback MethodInvocation c newInstance StatementExpression MethodInvocation ic MethodInvocation Arity Literal 3 fixed setArity StatementExpression MethodInvocation ic MemberReference descriptor setArgumentTypes StatementExpression MethodInvocation ic MemberReference method setJavaName ReturnStatement MemberReference ic CatchClause CatchClauseParameter IllegalArgumentException e ThrowStatement MemberReference e CatchClause CatchClauseParameter Exception e ThrowStatement ClassCreator ReferenceType IllegalArgumentException MethodInvocation e getMessage	1
MethodDeclaration Modifier public ReferenceType Object case456_line1738 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals gettable = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public ReferenceType Object case294_line1133 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support MethodInvocation Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 3 MemberReference yyTop yyVals getPosition Literal null Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals newCaseNode = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair rest Literal true ReferenceType IRubyObject invoke FormalParameter ReferenceType IRubyObject args StatementExpression MethodInvocation BinaryOperation - MemberReference args length Literal 1 checkArity LocalVariableDeclaration ReferenceType Object VariableDeclarator arguments ArrayCreator ReferenceType Object BinaryOperation - MemberReference args length Literal 1 StatementExpression MethodInvocation MemberReference args MemberReference arguments Literal 1 LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator invokee MemberReference ArraySelector Literal 0 args IfStatement MethodInvocation invokee isNil BlockStatement ReturnStatement MethodInvocation MemberReference method Literal null MemberReference arguments invokeWithExceptionHandling LocalVariableDeclaration ReferenceType Object VariableDeclarator javaInvokee MethodInvocation JavaUtil MethodInvocation getValue MethodInvocation getRuntime MemberReference invokee Literal not a java object" IfStatement MethodInvocation ! method MethodInvocation MemberReference javaInvokee isInstance getDeclaringClass BlockStatement ThrowStatement MethodInvocation MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal not instance of class (" Literal MethodInvocation javaInvokee MethodInvocation getName getClass Literal " " MethodInvocation method MethodInvocation getName getDeclaringClass Literal ")" newTypeError getRuntime IfStatement BinaryOperation && BinaryOperation instanceof MemberReference javaInvokee ReferenceType InternalJavaProxy MethodInvocation ! Modifier MethodInvocation method getModifiers isFinal BlockStatement LocalVariableDeclaration ReferenceType JavaProxyClass VariableDeclarator jpc Cast ReferenceType InternalJavaProxy MemberReference javaInvokee LocalVariableDeclaration ReferenceType JavaProxyMethod VariableDeclarator jpm IfStatement BinaryOperation && BinaryOperation != Assignment MemberReference jpm MethodInvocation jpc MethodInvocation method getName MemberReference parameterTypes getMethod = Literal null MethodInvocation jpm hasSuperImplementation BlockStatement ReturnStatement MethodInvocation MethodInvocation jpm getSuperMethod MemberReference javaInvokee MemberReference arguments invokeWithExceptionHandling ReturnStatement MethodInvocation MemberReference method MemberReference javaInvokee MemberReference arguments invokeWithExceptionHandling	1
MethodDeclaration Modifier public static Annotation Deprecated Annotation JRubyMethod ElementValuePair frame Literal true ElementValuePair module Literal true ElementValuePair visibility MemberReference Visibility PRIVATE ReferenceType IRubyObject ruby_to_java FormalParameter Modifier final ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject object FormalParameter ReferenceType Block unusedBlock ReturnStatement MethodInvocation JavaUtil MemberReference recv MemberReference object MemberReference unusedBlock ruby_to_java	1
MethodDeclaration Modifier static FormalParameter ReferenceType Ruby runtime LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator rb_cUNIXSocket MethodInvocation runtime Literal "UNIXSocket" MethodInvocation runtime Literal "BasicSocket" fastGetClass MemberReference defineClass StatementExpression MethodInvocation runtime MethodInvocation Literal MemberReference rb_cUNIXSocket fastSetConstant getObject StatementExpression MethodInvocation rb_cUNIXSocket ClassReference ReferenceType RubyUNIXSocket defineAnnotatedMethods	1
MethodDeclaration Modifier public invokeEqq FormalParameter ReferenceType ArgumentsCallback receivers FormalParameter ReferenceType CompilerCallback argument IfStatement BinaryOperation == MemberReference argument Literal null BlockStatement StatementExpression MethodInvocation receivers MemberReference methodCompiler call SwitchStatement MethodInvocation receivers SwitchStatementCase Literal 1 StatementExpression MethodInvocation methodCompiler Literal "invokeEqqForCaselessWhen" MethodInvocation ClassReference BasicType boolean ClassReference ReferenceType IRubyObject sig invokeUtilityMethod BreakStatement SwitchStatementCase Literal 2 StatementExpression MethodInvocation methodCompiler Literal "invokeEqqForCaselessWhen" MethodInvocation ClassReference BasicType boolean ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject sig invokeUtilityMethod BreakStatement SwitchStatementCase Literal 3 StatementExpression MethodInvocation methodCompiler Literal "invokeEqqForCaselessWhen" MethodInvocation ClassReference BasicType boolean ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject sig invokeUtilityMethod BreakStatement SwitchStatementCase StatementExpression MethodInvocation methodCompiler Literal "invokeEqqForCaselessWhen" MethodInvocation ClassReference BasicType boolean ClassReference ReferenceType IRubyObject sig invokeUtilityMethod BlockStatement StatementExpression MethodInvocation methodCompiler MethodInvocation MethodInvocation MemberReference methodCompiler Literal "===" MemberReference CallType NORMAL cacheCallSite getScriptCompiler StatementExpression MethodInvocation methodCompiler loadThreadContext StatementExpression MethodInvocation methodCompiler loadSelf StatementExpression MethodInvocation argument MemberReference methodCompiler call StatementExpression MethodInvocation receivers MemberReference methodCompiler call SwitchStatement MethodInvocation receivers SwitchStatementCase Literal 1 StatementExpression MethodInvocation methodCompiler Literal "invokeEqqForCaseWhen" MethodInvocation ClassReference BasicType boolean ClassReference ReferenceType CallSite ClassReference ReferenceType ThreadContext ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject sig invokeUtilityMethod BreakStatement SwitchStatementCase Literal 2 StatementExpression MethodInvocation methodCompiler Literal "invokeEqqForCaseWhen" MethodInvocation ClassReference BasicType boolean ClassReference ReferenceType CallSite ClassReference ReferenceType ThreadContext ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject sig invokeUtilityMethod BreakStatement SwitchStatementCase Literal 3 StatementExpression MethodInvocation methodCompiler Literal "invokeEqqForCaseWhen" MethodInvocation ClassReference BasicType boolean ClassReference ReferenceType CallSite ClassReference ReferenceType ThreadContext ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject sig invokeUtilityMethod BreakStatement SwitchStatementCase StatementExpression MethodInvocation methodCompiler Literal "invokeEqqForCaseWhen" MethodInvocation ClassReference BasicType boolean ClassReference ReferenceType CallSite ClassReference ReferenceType ThreadContext ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject sig invokeUtilityMethod	1
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType NodeVisitor ReturnStatement MethodInvocation This	0
MethodDeclaration Modifier public forEachInValueArray FormalParameter BasicType int start FormalParameter BasicType int preCount FormalParameter ReferenceType Object FormalParameter BasicType int postCount FormalParameter ReferenceType Object FormalParameter ReferenceType ArrayCallback FormalParameter ReferenceType CompilerCallback argsCallback IfStatement BinaryOperation || BinaryOperation < MemberReference start MemberReference preCount BinaryOperation != MemberReference argsCallback Literal null BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation MethodInvocation grabTempLocal getVariableCompiler StatementExpression MethodInvocation MethodInvocation MemberReference setTempLocal getVariableCompiler ForStatement ForControl BinaryOperation < MemberReference start MemberReference preCount MemberReference ++ start BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference getVariableCompiler SwitchStatement MemberReference start SwitchStatementCase Literal 0 StatementExpression MethodInvocation Literal MethodInvocation ClassReference ReferenceType IRubyObject ClassReference ReferenceType RubyArray sig invokeUtilityMethod BreakStatement SwitchStatementCase Literal 1 StatementExpression MethodInvocation Literal MethodInvocation ClassReference ReferenceType IRubyObject ClassReference ReferenceType RubyArray sig invokeUtilityMethod BreakStatement SwitchStatementCase Literal 2 StatementExpression MethodInvocation Literal MethodInvocation ClassReference ReferenceType IRubyObject ClassReference ReferenceType RubyArray sig invokeUtilityMethod BreakStatement SwitchStatementCase StatementExpression MethodInvocation method MemberReference start pushInt StatementExpression MethodInvocation Literal MethodInvocation ClassReference ReferenceType IRubyObject ClassReference ReferenceType RubyArray ClassReference BasicType int sig invokeUtilityMethod BreakStatement StatementExpression MethodInvocation This MemberReference MemberReference start nextValue IfStatement BinaryOperation != MemberReference argsCallback Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference getVariableCompiler StatementExpression MethodInvocation StatementExpression MethodInvocation method MemberReference start pushInt StatementExpression MethodInvocation Literal MethodInvocation ClassReference ReferenceType RubyArray ClassReference ReferenceType RubyArray ClassReference ReferenceType Ruby ClassReference BasicType int sig invokeUtilityMethod StatementExpression MethodInvocation argsCallback This call IfStatement BinaryOperation > MemberReference postCount Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType NotCompilableException Literal mode can't handle post variables in masgn yet" StatementExpression MethodInvocation MethodInvocation MemberReference getVariableCompiler StatementExpression MethodInvocation MethodInvocation releaseTempLocal getVariableCompiler	0
MethodDeclaration Modifier public BasicType long ReturnStatement MethodInvocation get	0
MethodDeclaration Modifier public ReferenceType DynamicScope ReturnStatement ClassCreator ReferenceType MemberReference staticScope MemberReference parent	0
MethodDeclaration Modifier public static Annotation Deprecated ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject arg ReturnStatement MethodInvocation MethodInvocation self getRuntime MemberReference arg	1
MethodDeclaration Modifier public static ReferenceType RubyClass createStringClass FormalParameter ReferenceType Ruby runtime LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator MethodInvocation runtime Literal MethodInvocation runtime getObject MemberReference defineClass StatementExpression MethodInvocation runtime MemberReference setString StatementExpression Assignment MemberReference index MemberReference ClassIndex STRING = StatementExpression Assignment MemberReference ClassCreator ReferenceType RubyModule ReferenceType MethodDeclaration Modifier public Annotation Override BasicType boolean FormalParameter ReferenceType IRubyObject obj FormalParameter ReferenceType RubyModule type ReturnStatement BinaryOperation instanceof MemberReference obj ReferenceType RubyString = StatementExpression MethodInvocation MethodInvocation runtime includeModule IfStatement MethodInvocation ! runtime is1_9 StatementExpression MethodInvocation MethodInvocation runtime includeModule StatementExpression MethodInvocation ClassReference ReferenceType RubyString defineAnnotatedMethods ReturnStatement MemberReference	1
MethodDeclaration Modifier private synchronized ReferenceType Map TypeArgument ReferenceType IRubyObject TypeArgument ReferenceType IRubyObject IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType HashMap TypeArgument ReferenceType IRubyObject TypeArgument ReferenceType IRubyObject = ReturnStatement MemberReference	0
MethodDeclaration Modifier public call FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation MethodInvocation iVisited getLeftNode MemberReference context Literal true compile	0
MethodDeclaration Modifier public Annotation Override assign FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject FormalParameter ReferenceType Block block StatementExpression MethodInvocation parameter1 MemberReference runtime MemberReference context MemberReference self MemberReference MemberReference block Literal false assign StatementExpression MethodInvocation parameter2 MemberReference runtime MemberReference context MemberReference self MethodInvocation runtime getNil MemberReference block Literal false assign StatementExpression MethodInvocation MemberReference runtime MemberReference context MemberReference self MethodInvocation runtime getNil MemberReference block Literal false assign StatementExpression MethodInvocation rest MemberReference runtime MemberReference context MemberReference self MethodInvocation runtime MemberReference IRubyObject MemberReference block Literal true assign	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "count" ElementValuePair frame Literal true ReferenceType IRubyObject count FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter Modifier final ReferenceType IRubyObject arg FormalParameter Modifier final ReferenceType Block block LocalVariableDeclaration Modifier final ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration Modifier final ReferenceType ThreadContext VariableDeclarator localContext MemberReference context LocalVariableDeclaration Modifier final BasicType int VariableDeclarator result ArrayCreator BasicType int ArrayInitializer Literal 0 IfStatement MethodInvocation block isGiven StatementExpression MethodInvocation runtime MethodInvocation MemberReference ID BLOCK_UNUSED Literal "given block not used" warn getWarnings StatementExpression MethodInvocation MemberReference runtime MemberReference context MemberReference self ClassCreator ReferenceType BlockCallback MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext ctx FormalParameter ReferenceType IRubyObject largs FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator larg MethodInvocation MemberReference runtime MemberReference largs checkArgs StatementExpression MethodInvocation MemberReference localContext MemberReference ctx Literal "count" checkContext IfStatement MethodInvocation larg MemberReference arg equals StatementExpression MemberReference ++ ArraySelector Literal 0 result ReturnStatement MethodInvocation runtime getNil callEach ReturnStatement MethodInvocation RubyFixnum MemberReference runtime MemberReference ArraySelector Literal 0 result newFixnum	1
MethodDeclaration Modifier public ReferenceType IRubyObject fastStoreConstant FormalParameter ReferenceType String internedName FormalParameter ReferenceType IRubyObject value AssertStatement BinaryOperation && MethodInvocation IdUtil MemberReference internedName isConstant BinaryOperation != MemberReference value Literal null StatementExpression MethodInvocation ensureConstantsSettable ReturnStatement MethodInvocation MemberReference internedName MemberReference value	1
MethodDeclaration Modifier public ReferenceType Object case353_line1315 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType IterNode MethodInvocation Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 4 MemberReference yyTop yyVals getPosition Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals MethodInvocation support getCurrentScope Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals = StatementExpression MethodInvocation support popCurrentScope ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public ReferenceType IRubyObject new_instance FormalParameter ReferenceType Object arguments StatementExpression MethodInvocation MemberReference arguments length checkArity TryStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator result MethodInvocation constructor MemberReference arguments newInstance ReturnStatement MethodInvocation JavaObject MethodInvocation getRuntime MemberReference result wrap CatchClause CatchClauseParameter IllegalArgumentException iae ThrowStatement MethodInvocation MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "expected " MethodInvocation MethodInvocation inspect argument_types Literal ", got [" MemberReference ArraySelector Literal 0 MethodInvocation getClass MethodInvocation getName arguments Literal ", ...]" newTypeError getRuntime CatchClause CatchClauseParameter IllegalAccessException iae ThrowStatement MethodInvocation MethodInvocation Literal "illegal access" newTypeError getRuntime CatchClause CatchClauseParameter InvocationTargetException ite StatementExpression MethodInvocation MethodInvocation getJavaSupport MethodInvocation MethodInvocation ite getTargetException MemberReference constructor handleNativeException getRuntime AssertStatement Literal false ReturnStatement Literal null CatchClause CatchClauseParameter InstantiationException ie ThrowStatement MethodInvocation MethodInvocation BinaryOperation + Literal "can't make instance of " MethodInvocation constructor MethodInvocation getName getDeclaringClass newTypeError getRuntime	1
MethodDeclaration Modifier public FormalParameter ReferenceType Frame frame AssertStatement BinaryOperation != MemberReference frame block Literal null Literal uses null object It should NEVER be null" StatementExpression Assignment This MemberReference self MemberReference frame self = StatementExpression Assignment This MemberReference name MemberReference frame name = StatementExpression Assignment This MemberReference klazz MemberReference frame klazz = StatementExpression Assignment This MemberReference fileName MemberReference frame fileName = StatementExpression Assignment This MemberReference line MemberReference frame line = StatementExpression Assignment This MemberReference block MemberReference frame block = StatementExpression Assignment This MemberReference visibility MemberReference frame visibility = StatementExpression Assignment This MemberReference MemberReference frame =	1
MethodDeclaration Modifier public Annotation Override ReferenceType String toString ReturnStatement BinaryOperation + BinaryOperation + MethodInvocation getFile Literal ":" MethodInvocation getStartLine	0
MethodDeclaration Modifier public Annotation Override write FormalParameter BasicType int b IOException StatementExpression MethodInvocation BinaryOperation + Literal "" MemberReference b	0
MethodDeclaration Modifier public ReferenceType Node FormalParameter ReferenceType Node receiver FormalParameter ReferenceType Token name FormalParameter ReferenceType Node argsNode IfStatement BinaryOperation instanceof MemberReference argsNode ReferenceType ArrayNode BlockStatement LocalVariableDeclaration ReferenceType ArrayNode VariableDeclarator args Cast ReferenceType ArrayNode MemberReference argsNode IfStatement BinaryOperation && BinaryOperation == MethodInvocation args size Literal 1 BinaryOperation instanceof MethodInvocation args Literal 0 get ReferenceType FixnumNode BlockStatement ReturnStatement ClassCreator ReferenceType CallOneArgFixnumNode MethodInvocation MemberReference receiver MemberReference args position MemberReference receiver Literal "[]" MemberReference args ReturnStatement MethodInvocation MemberReference receiver MemberReference name MemberReference argsNode Literal null new_call	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair meta Literal true ReferenceType IRubyObject list FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime ReturnStatement MethodInvocation RubyArray MemberReference runtime MethodInvocation runtime MethodInvocation Literal 0 newArrayNoCopy	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject encoding FormalParameter ReferenceType ThreadContext context ReturnStatement MethodInvocation context MethodInvocation MethodInvocation MethodInvocation pattern getEncoding getEncoding getRuntime	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject obj ReturnStatement MethodInvocation context MethodInvocation BinaryOperation || BinaryOperation == This MemberReference obj MethodInvocation MemberReference obj newBoolean getRuntime	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair frame Literal true ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter Modifier final ReferenceType Block block LocalVariableDeclaration Modifier final ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime IfStatement MethodInvocation ! block isGiven ReturnStatement MethodInvocation MemberReference runtime MemberReference self Literal enumeratorize LocalVariableDeclaration Modifier final ReferenceType IRubyObject VariableDeclarator result ArrayCreator ReferenceType IRubyObject ArrayInitializer MethodInvocation runtime getNil MethodInvocation runtime getNil LocalVariableDeclaration Modifier final ReferenceType ThreadContext VariableDeclarator localContext MemberReference context StatementExpression MethodInvocation MemberReference runtime MemberReference context MemberReference self ClassCreator ReferenceType BlockCallback FieldDeclaration ReferenceType IRubyObject VariableDeclarator Literal null VariableDeclarator Literal null MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext ctx FormalParameter ReferenceType IRubyObject largs FormalParameter ReferenceType Block blk StatementExpression MethodInvocation MemberReference localContext MemberReference ctx Literal checkContext LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator arg MethodInvocation MemberReference runtime MemberReference largs checkArgs LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator v MethodInvocation block MemberReference ctx MemberReference arg yield IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference Assignment MemberReference MemberReference v = = StatementExpression Assignment MemberReference ArraySelector Literal 0 result Assignment MemberReference ArraySelector Literal 1 result MemberReference arg = = BlockStatement IfStatement BinaryOperation < MethodInvocation RubyComparable MemberReference ctx MethodInvocation v MemberReference ctx Literal "<=>" MemberReference callMethod MemberReference v MemberReference cmpint Literal 0 BlockStatement StatementExpression Assignment MemberReference MemberReference v = StatementExpression Assignment MemberReference ArraySelector Literal 0 result MemberReference arg = IfStatement BinaryOperation > MethodInvocation RubyComparable MemberReference ctx MethodInvocation v MemberReference ctx Literal "<=>" MemberReference callMethod MemberReference v MemberReference cmpint Literal 0 BlockStatement StatementExpression Assignment MemberReference MemberReference v = StatementExpression Assignment MemberReference ArraySelector Literal 1 result MemberReference arg = ReturnStatement MethodInvocation runtime getNil callEach ReturnStatement MethodInvocation runtime MemberReference result newArrayNoCopy	1
MethodDeclaration Modifier public setArgValues FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 StatementExpression MethodInvocation ArrayCreator ReferenceType IRubyObject ArrayInitializer MemberReference arg0 MemberReference arg1 MemberReference arg2 Literal 3 setArgValues	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair module Literal true ElementValuePair visibility MemberReference Visibility PRIVATE ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv ReturnStatement MethodInvocation MethodInvocation context getRuntime	0
MethodDeclaration Modifier final public static ReferenceType IRubyObject convertToType FormalParameter ReferenceType IRubyObject obj FormalParameter ReferenceType RubyClass target FormalParameter ReferenceType String convertMethod FormalParameter BasicType boolean IfStatement MethodInvocation ! obj MemberReference convertMethod respondsTo BlockStatement ReturnStatement MethodInvocation MemberReference MemberReference obj MemberReference target ReturnStatement MethodInvocation obj MethodInvocation obj MethodInvocation getCurrentContext getRuntime MemberReference convertMethod callMethod	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair required Literal 1 ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject offset ReturnStatement MethodInvocation MethodInvocation context getRuntime MethodInvocation MemberReference offset getOffset	1
MethodDeclaration Modifier private final ReferenceType RubyFixnum to_int FormalParameter ReferenceType Ruby runtime IfStatement MethodInvocation runtime isVerbose BlockStatement StatementExpression MethodInvocation runtime MethodInvocation MemberReference ID Literal Symbol as an integer" warn getWarnings ReturnStatement MethodInvocation MemberReference runtime to_i	1
MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext ctx FormalParameter ReferenceType IRubyObject largs FormalParameter ReferenceType Block blk LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator larg MethodInvocation MemberReference runtime MemberReference largs checkArgs SynchronizedStatement MemberReference result StatementExpression MethodInvocation result MemberReference larg append StatementExpression MethodInvocation block MemberReference ctx MemberReference larg yield ReturnStatement MethodInvocation runtime getNil	0
MethodDeclaration Modifier public BasicType int ReturnStatement MethodInvocation get	0
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement TernaryExpression MethodInvocation isTrue Literal "true" Literal "false"	0
MethodDeclaration Modifier public call FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation MethodInvocation whenNode getExpressionNodes MemberReference context Literal true compile	0
MethodDeclaration Modifier public Annotation Deprecated ReferenceType Callback getFastMethod FormalParameter ReferenceType String method ReturnStatement ClassCreator ReferenceType ReflectionCallback MemberReference type MemberReference method MemberReference NULL_CLASS_ARRAY Literal false Literal false MethodInvocation Arity noArguments Literal true	1
MethodDeclaration Modifier public ReferenceType IRubyObject ReturnStatement MemberReference	0
MethodDeclaration Modifier private advance FormalParameter BasicType boolean consume IfStatement MemberReference ! BlockStatement DoStatement BinaryOperation && BinaryOperation != MemberReference entry MemberReference head MethodInvocation ! entry BlockStatement IfStatement BinaryOperation != MemberReference MemberReference generation BlockStatement StatementExpression Assignment MemberReference MemberReference generation = StatementExpression Assignment MemberReference entry MemberReference head = StatementExpression Assignment MemberReference entry MemberReference entry = StatementExpression Assignment MemberReference MemberReference ! consume =	0
MethodDeclaration Modifier public consumeCurrentValue StatementExpression MethodInvocation method pop	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "type" ReferenceType RubyClass StatementExpression MethodInvocation MethodInvocation getWarnings MethodInvocation MemberReference ID Literal is use Literal Literal warn getRuntime ReturnStatement MethodInvocation type	1
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator javaInterfaces MethodInvocation self MethodInvocation Literal "@java_interfaces" fastGetInstanceVariable getInstanceVariables IfStatement BinaryOperation && BinaryOperation != MemberReference javaInterfaces Literal null Cast ReferenceType RubyArray MemberReference javaInterfaces BlockStatement ReturnStatement MethodInvocation RuntimeHelpers MemberReference context MemberReference arg Literal MemberReference self invoke ReturnStatement MethodInvocation context MethodInvocation getNil getRuntime	0
MethodDeclaration Modifier public StatementExpression MethodInvocation MethodInvocation MemberReference visitInsn getMethodVisitor	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ReferenceType IRubyObject hash FormalParameter ReferenceType ThreadContext context ReturnStatement MethodInvocation MemberReference context MethodInvocation real MemberReference context Literal callMethod MethodInvocation image MemberReference context Literal callMethod	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair required Literal 1 ElementValuePair frame Literal true ElementValuePair meta Literal true ReferenceType RubyTime load FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject from FormalParameter ReferenceType Block block ReturnStatement MethodInvocation MemberReference recv Cast ReferenceType RubyTime Cast ReferenceType RubyClass MemberReference recv MemberReference from	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair module Literal true ReferenceType IRubyObject sid_available_p FormalParameter ReferenceType IRubyObject self ThrowStatement MethodInvocation self MethodInvocation Literal not implemented yet" newNotImplementedError getRuntime	1
MethodDeclaration Modifier private BasicType int doubleQuote IOException StatementExpression Assignment MemberReference lex_strterm ClassCreator ReferenceType StringTerm MemberReference str_dquote Literal '\0' Literal '"' = StatementExpression Assignment MemberReference yaccValue ClassCreator ReferenceType Token Literal "\"" MethodInvocation getPosition = ReturnStatement MemberReference Tokens	0
MethodDeclaration Modifier private static ReferenceType Unsafe LocalVariableDeclaration ReferenceType Unsafe VariableDeclarator Literal null TryStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator unsafeClass MethodInvocation Class Literal forName StatementExpression Assignment MemberReference Cast ReferenceType Unsafe MethodInvocation unsafeClass newInstance = CatchClause CatchClauseParameter Throwable ignore IfStatement MemberReference DEBUG StatementExpression MethodInvocation ignore printStackTrace TryStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator unsafeClass MethodInvocation Class Literal forName LocalVariableDeclaration ReferenceType Field VariableDeclarator field MethodInvocation unsafeClass Literal getDeclaredField StatementExpression MethodInvocation field Literal true setAccessible StatementExpression Assignment MemberReference Cast ReferenceType Unsafe MethodInvocation Class MethodInvocation newInstance Literal forName = CatchClause CatchClauseParameter Throwable ignore IfStatement MemberReference DEBUG StatementExpression MethodInvocation ignore printStackTrace IfStatement BinaryOperation && MemberReference DEBUG BinaryOperation == MemberReference Literal null StatementExpression MethodInvocation System.err Literal "No Unsafe implementation available" println ReturnStatement MemberReference	1
MethodDeclaration Modifier public static ReferenceType RubyString newString FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType CharSequence str ReturnStatement ClassCreator ReferenceType RubyString MemberReference runtime MethodInvocation runtime getString MemberReference str	0
MethodDeclaration Modifier public FormalParameter ReferenceType BranchCallback FormalParameter ReferenceType BranchCallback FormalParameter BasicType boolean LocalVariableDeclaration ReferenceType Label VariableDeclarator afterRubyCatchBody ClassCreator ReferenceType Label LocalVariableDeclaration ReferenceType Label VariableDeclarator catchRetry ClassCreator ReferenceType Label LocalVariableDeclaration ReferenceType Label VariableDeclarator catchJumps ClassCreator ReferenceType Label LocalVariableDeclaration ReferenceType Label VariableDeclarator exitRescue ClassCreator ReferenceType Label StatementExpression MethodInvocation loadThreadContext StatementExpression MethodInvocation Literal "getErrorInfo" MethodInvocation ClassReference ReferenceType IRubyObject sig StatementExpression MethodInvocation method MethodInvocation getPreviousExceptionIndex astore LocalVariableDeclaration ReferenceType Label VariableDeclarator beforeBody ClassCreator ReferenceType Label LocalVariableDeclaration ReferenceType Label VariableDeclarator afterBody ClassCreator ReferenceType Label LocalVariableDeclaration ReferenceType Label VariableDeclarator rubyCatchBlock ClassCreator ReferenceType Label LocalVariableDeclaration ReferenceType Label VariableDeclarator flowCatchBlock ClassCreator ReferenceType Label StatementExpression MethodInvocation method MemberReference beforeBody MemberReference afterBody MemberReference flowCatchBlock MethodInvocation ClassReference JumpException ReferenceType p visitTryCatchBlock StatementExpression MethodInvocation method MemberReference beforeBody MemberReference afterBody MemberReference rubyCatchBlock MethodInvocation ClassReference ReferenceType Throwable p visitTryCatchBlock StatementExpression MethodInvocation method MemberReference beforeBody BlockStatement StatementExpression MethodInvocation This branch StatementExpression MethodInvocation method MemberReference afterBody label StatementExpression MethodInvocation method MemberReference exitRescue go_to StatementExpression MethodInvocation method MemberReference flowCatchBlock label BlockStatement StatementExpression MethodInvocation method athrow StatementExpression MethodInvocation method MemberReference rubyCatchBlock label BlockStatement StatementExpression MethodInvocation method MethodInvocation astore StatementExpression MethodInvocation This branch StatementExpression MethodInvocation method MemberReference afterRubyCatchBody label StatementExpression MethodInvocation method MemberReference exitRescue go_to IfStatement MemberReference BlockStatement StatementExpression MethodInvocation method MemberReference rubyCatchBlock MemberReference afterRubyCatchBody MemberReference catchRetry MethodInvocation ClassReference JumpException ReferenceType p trycatch StatementExpression MethodInvocation method MemberReference catchRetry label BlockStatement StatementExpression MethodInvocation method pop StatementExpression MethodInvocation method MemberReference beforeBody go_to StatementExpression MethodInvocation method MemberReference beforeBody MemberReference afterRubyCatchBody MemberReference catchJumps MethodInvocation ClassReference JumpException ReferenceType p trycatch StatementExpression MethodInvocation method MemberReference catchJumps label BlockStatement StatementExpression MethodInvocation loadThreadContext StatementExpression MethodInvocation method MethodInvocation getPreviousExceptionIndex aload StatementExpression MethodInvocation Literal "setErrorInfo" MethodInvocation ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject sig StatementExpression MethodInvocation method pop StatementExpression MethodInvocation method athrow StatementExpression MethodInvocation method MemberReference exitRescue label StatementExpression MethodInvocation loadThreadContext StatementExpression MethodInvocation method MethodInvocation getPreviousExceptionIndex aload StatementExpression MethodInvocation Literal "setErrorInfo" MethodInvocation ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject sig StatementExpression MethodInvocation method pop	1
MethodDeclaration Modifier public ReferenceType Object convert FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject rubyObject ReturnStatement MethodInvocation rubyObject ClassReference ReferenceType BigDecimal toJava	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal "to_enum" Literal "enum_for" ElementValuePair optional Literal 1 ElementValuePair rest Literal true ElementValuePair frame Literal true ReferenceType IRubyObject obj_to_enum FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator newArgs ArrayCreator ReferenceType IRubyObject BinaryOperation + MemberReference args length Literal 1 StatementExpression Assignment MemberReference ArraySelector Literal 0 newArgs MemberReference self = StatementExpression MethodInvocation System MemberReference args Literal 0 MemberReference newArgs Literal 1 MemberReference args length arraycopy ReturnStatement MethodInvocation context MethodInvocation MethodInvocation MemberReference context Literal MemberReference newArgs callMethod getRuntime	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "[]=" ElementValuePair reads MemberReference BACKREF ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject op_aset19 FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 IfStatement BinaryOperation instanceof MemberReference arg0 ReferenceType RubyRegexp BlockStatement StatementExpression MethodInvocation MemberReference context Cast ReferenceType RubyRegexp MemberReference arg0 MemberReference arg1 MemberReference arg2 subpatSet19 BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator beg MethodInvocation RubyNumeric MemberReference arg0 num2int LocalVariableDeclaration BasicType int VariableDeclarator len MethodInvocation RubyNumeric MemberReference arg1 num2int StatementExpression MethodInvocation MemberReference len checkLength LocalVariableDeclaration ReferenceType RubyString VariableDeclarator repl MethodInvocation arg2 convertToString StatementExpression MethodInvocation MethodInvocation MemberReference beg MethodInvocation strLength checkIndex MemberReference len MemberReference repl replaceInternal19 ReturnStatement MemberReference arg2	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "==" ElementValuePair required Literal 1 ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject op_equal FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject other IfStatement MethodInvocation other isNil BlockStatement ReturnStatement MethodInvocation RubyBoolean MethodInvocation getRuntime Literal false newBoolean IfStatement BinaryOperation instanceof MemberReference other ReferenceType RubyTime BlockStatement ReturnStatement MethodInvocation MethodInvocation BinaryOperation == MethodInvocation Cast ReferenceType RubyTime MemberReference other cmp Literal 0 newBoolean getRuntime ReturnStatement MethodInvocation RubyComparable MemberReference context This MemberReference other op_equal	1
MethodDeclaration Modifier public ReferenceType CallSite ReturnStatement MemberReference extraCallSites	0
MethodDeclaration Modifier public ReferenceType IRubyObject yield FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule FormalParameter BasicType boolean aValue FormalParameter ReferenceType FormalParameter ReferenceType Block ReferenceType Type type FormalParameter ReferenceType Block block IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference self MethodInvocation MemberReference = LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator realArgs MethodInvocation MemberReference args LocalVariableDeclaration ReferenceType Visibility VariableDeclarator oldVis MethodInvocation MethodInvocation getVisibility getFrame LocalVariableDeclaration ReferenceType Frame VariableDeclarator MethodInvocation MemberReference context MemberReference MemberReference pre TryStatement ReturnStatement MethodInvocation MemberReference context MemberReference self MemberReference realArgs MemberReference block call CatchClause CatchClauseParameter JumpException.NextJump nj ReturnStatement MethodInvocation MemberReference context MemberReference nj MemberReference type handleNextJump StatementExpression MethodInvocation MemberReference context MemberReference MemberReference oldVis MemberReference post	1
MethodDeclaration Modifier public ReferenceType String getTypeInstance FormalParameter BasicType long l ReturnStatement Literal "long"	0
MethodDeclaration Modifier final ReferenceType FormalParameter ReferenceType type SwitchStatement Cast ReferenceType NativeType MemberReference type SwitchStatementCase BOOL ReturnStatement MemberReference INSTANCE SwitchStatementCase CHAR ReturnStatement MemberReference INSTANCE SwitchStatementCase UCHAR ReturnStatement MemberReference INSTANCE SwitchStatementCase SHORT ReturnStatement MemberReference INSTANCE SwitchStatementCase USHORT ReturnStatement MemberReference INSTANCE SwitchStatementCase INT ReturnStatement MemberReference INSTANCE SwitchStatementCase UINT ReturnStatement MemberReference INSTANCE SwitchStatementCase FLOAT ReturnStatement MemberReference INSTANCE SwitchStatementCase LONG IfStatement BinaryOperation == MethodInvocation Platform MethodInvocation longSize getPlatform Literal 32 BlockStatement ReturnStatement MemberReference INSTANCE ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal is too for int parameter" SwitchStatementCase ULONG IfStatement BinaryOperation == MethodInvocation Platform MethodInvocation longSize getPlatform Literal 32 BlockStatement ReturnStatement MemberReference INSTANCE ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal is too for int parameter" SwitchStatementCase POINTER BUFFER_IN BUFFER_OUT BUFFER_INOUT IfStatement BinaryOperation == MethodInvocation Platform MethodInvocation addressSize getPlatform Literal 32 BlockStatement ReturnStatement MemberReference INSTANCE ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal is too for int parameter" SwitchStatementCase ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "Unknown type " MemberReference type	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair required Literal 1 ReferenceType RubyBoolean FormalParameter ReferenceType IRubyObject other IfStatement BinaryOperation instanceof MemberReference other ReferenceType JavaClass BlockStatement ThrowStatement MethodInvocation MethodInvocation BinaryOperation + BinaryOperation + Literal requires JavaClass (" MethodInvocation other getType Literal " newTypeError getRuntime LocalVariableDeclaration ReferenceType Class TypeArgument ? VariableDeclarator otherClass Cast ReferenceType JavaClass MemberReference other ReturnStatement TernaryExpression MethodInvocation MethodInvocation javaClass MemberReference otherClass assignable MethodInvocation MethodInvocation getTrue getRuntime MethodInvocation MethodInvocation getFalse getRuntime	1
MethodDeclaration Modifier public ReferenceType org ReferenceType jruby ReferenceType Ruby getRuntime ReturnStatement MemberReference runtime	0
MethodDeclaration Modifier protected Annotation Override setUp Exception StatementExpression SuperMethodInvocation setUp StatementExpression Assignment MemberReference runtime MethodInvocation Ruby newInstance = StatementExpression Assignment MemberReference Cast ReferenceType MethodInvocation runtime getNil =	0
MethodDeclaration Modifier private FormalParameter ReferenceType Node node FormalParameter ReferenceType BodyCompiler context FormalParameter Modifier final BasicType boolean LocalVariableDeclaration Modifier final ReferenceType RescueBodyNode VariableDeclarator rescueBodyNode Cast ReferenceType RescueBodyNode MemberReference node StatementExpression MethodInvocation context LocalVariableDeclaration Modifier final ReferenceType Node VariableDeclarator exceptionList MethodInvocation rescueBodyNode LocalVariableDeclaration ReferenceType ArgumentsCallback VariableDeclarator rescueArgs MethodInvocation MemberReference exceptionList getArgsCallback IfStatement BinaryOperation == MemberReference rescueArgs Literal null StatementExpression Assignment MemberReference rescueArgs ClassCreator ReferenceType ArgumentsCallback MethodDeclaration Modifier public BasicType int ReturnStatement Literal 1 MethodDeclaration Modifier public call FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation context = StatementExpression MethodInvocation context MemberReference rescueArgs checkIsExceptionHandled LocalVariableDeclaration ReferenceType BranchCallback VariableDeclarator ClassCreator ReferenceType BranchCallback MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context LocalVariableDeclaration ReferenceType Node VariableDeclarator realBody MethodInvocation rescueBodyNode getBodyNode IfStatement BinaryOperation instanceof MemberReference realBody ReferenceType NewlineNode BlockStatement StatementExpression MethodInvocation context MethodInvocation realBody getPosition setLinePosition WhileStatement BinaryOperation instanceof MemberReference realBody ReferenceType NewlineNode BlockStatement StatementExpression Assignment MemberReference realBody Cast ReferenceType NewlineNode MemberReference realBody = IfStatement MethodInvocation realBody MethodInvocation getNodeType BlockStatement StatementExpression MethodInvocation MemberReference realBody MemberReference context Literal true compile StatementExpression MethodInvocation context BlockStatement StatementExpression MethodInvocation context IfStatement MemberReference BlockStatement StatementExpression MethodInvocation MethodInvocation rescueBodyNode getBodyNode MemberReference context Literal true compile BlockStatement LocalVariableDeclaration ReferenceType BodyCompiler VariableDeclarator nestedBody MethodInvocation context BinaryOperation + Literal "rescue_line_" MethodInvocation rescueBodyNode MethodInvocation getStartLine getPosition StatementExpression MethodInvocation MethodInvocation rescueBodyNode getBodyNode MemberReference nestedBody Literal true compile StatementExpression MethodInvocation nestedBody StatementExpression MethodInvocation context LocalVariableDeclaration ReferenceType BranchCallback VariableDeclarator ClassCreator ReferenceType BranchCallback MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context IfStatement BinaryOperation != MethodInvocation rescueBodyNode Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation rescueBodyNode MemberReference context MemberReference BlockStatement StatementExpression MethodInvocation context StatementExpression MethodInvocation context MemberReference MemberReference performBooleanBranch	1
MethodDeclaration Modifier public Annotation Override BasicType boolean equals FormalParameter ReferenceType Object other IfStatement BinaryOperation == MemberReference other This BlockStatement ReturnStatement Literal true IfStatement BinaryOperation instanceof MemberReference other ReferenceType RubyFixnum BlockStatement LocalVariableDeclaration ReferenceType RubyFixnum VariableDeclarator num Cast ReferenceType RubyFixnum MemberReference other IfStatement BinaryOperation == MemberReference num value MemberReference value BlockStatement ReturnStatement Literal true ReturnStatement Literal false	0
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType FormalParameter ReferenceType Block ReferenceType Type type ReturnStatement MethodInvocation MemberReference context MethodInvocation context MethodInvocation MemberReference arg0 MemberReference arg1 getRuntime Literal null Literal null Literal true MemberReference MemberReference type yield	0
MethodDeclaration Modifier public Annotation Deprecated ReferenceType Callback getOptSingletonMethod FormalParameter ReferenceType String method ReturnStatement ClassCreator ReferenceType ReflectionCallback MemberReference type MemberReference method ArrayCreator ReferenceType Class ArrayInitializer ClassReference ReferenceType IRubyObject Literal true Literal true MethodInvocation Arity optional Literal false	1
MethodDeclaration Modifier public ReferenceType Object case330_line1229 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType IfNode MethodInvocation Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 4 MemberReference yyTop yyVals getPosition MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 3 MemberReference yyTop yyVals getConditionNode Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public ReferenceType getBeanManager ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType RubyClass ReturnStatement ClassCreator ReferenceType MemberReference runtime MemberReference	0
MethodDeclaration Modifier public static ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration BasicType int VariableDeclarator count MemberReference args length LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator filename MemberReference ArraySelector Literal 0 MethodInvocation convertToString args StatementExpression MethodInvocation runtime MemberReference filename checkSafeString LocalVariableDeclaration ReferenceType ByteList VariableDeclarator separator MethodInvocation MemberReference runtime MemberReference args Literal 1 LocalVariableDeclaration ReferenceType RubyIO VariableDeclarator io Cast ReferenceType RubyIO MethodInvocation RubyFile MemberReference context MethodInvocation runtime getFile ArrayCreator ReferenceType IRubyObject ArrayInitializer MemberReference filename MemberReference Block NULL_BLOCK open IfStatement MethodInvocation ! io isNil BlockStatement TryStatement LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator str MethodInvocation io MemberReference runtime MemberReference separator getline WhileStatement MethodInvocation ! str isNil BlockStatement StatementExpression MethodInvocation block MemberReference context MemberReference str yield StatementExpression Assignment MemberReference str MethodInvocation io MemberReference runtime MemberReference separator getline = StatementExpression MethodInvocation io close ReturnStatement MethodInvocation runtime getNil	1
MethodDeclaration Modifier public Annotation Override ReferenceType String FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block TryStatement IfStatement MethodInvocation MethodInvocation leftNode MemberReference runtime MemberReference context MemberReference self MemberReference ReturnStatement Literal "method" CatchClause CatchClauseParameter JumpException e ReturnStatement Literal null	1
MethodDeclaration Modifier private static ReferenceType RubyModule getProxyOrPackageUnderPackage FormalParameter ReferenceType ThreadContext context FormalParameter Modifier final ReferenceType Ruby runtime FormalParameter ReferenceType RubyModule parentPackage FormalParameter ReferenceType String sym LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator packageNameObj MethodInvocation parentPackage Literal fastGetInstanceVariable IfStatement BinaryOperation == MemberReference packageNameObj Literal null BlockStatement ThrowStatement MethodInvocation runtime Literal "invalid package module" newArgumentError LocalVariableDeclaration ReferenceType String VariableDeclarator packageName MethodInvocation packageNameObj asJavaString LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator name MethodInvocation sym MethodInvocation intern trim IfStatement BinaryOperation == MethodInvocation name length Literal 0 BlockStatement ThrowStatement MethodInvocation runtime Literal "empty class or package name" newArgumentError LocalVariableDeclaration ReferenceType String VariableDeclarator fullName BinaryOperation + MemberReference packageName MemberReference name IfStatement MethodInvocation ! Character MethodInvocation name Literal 0 charAt isUpperCase BlockStatement IfStatement MethodInvocation MemberReference name containsKey BlockStatement ThrowStatement MethodInvocation runtime BinaryOperation + Literal "illegal package name " MemberReference name newArgumentError TryStatement ReturnStatement MethodInvocation MemberReference runtime MethodInvocation JavaClass MemberReference runtime MemberReference fullName getProxyClass CatchClause CatchClauseParameter RaiseException re LocalVariableDeclaration ReferenceType RubyException VariableDeclarator rubyEx MethodInvocation re getException IfStatement MethodInvocation rubyEx MethodInvocation isTrue MemberReference context MethodInvocation runtime kind_of_p BlockStatement StatementExpression MethodInvocation RuntimeHelpers MemberReference runtime MethodInvocation runtime getNil CatchClause CatchClauseParameter Exception e LocalVariableDeclaration ReferenceType RubyModule VariableDeclarator packageModule IfStatement BinaryOperation == Assignment MemberReference packageModule MethodInvocation MemberReference runtime MemberReference fullName getJavaPackageModule = Literal null BlockStatement ReturnStatement Literal null LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator ivarName BinaryOperation + Literal "@__pkg__" MemberReference name StatementExpression MethodInvocation parentPackage MemberReference ivarName MemberReference packageModule fastSetInstanceVariable LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator singleton MethodInvocation parentPackage StatementExpression MethodInvocation singleton MemberReference name ClassCreator ReferenceType org ReferenceType jruby ReferenceType internal ReferenceType runtime ReferenceType methods ReferenceType JavaMethod MemberReference singleton MemberReference Visibility PUBLIC MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block IfStatement BinaryOperation != MemberReference args length Literal 0 BlockStatement StatementExpression MethodInvocation Arity MemberReference runtime MemberReference args length Literal 0 Literal 0 raiseArgumentError LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator variable IfStatement BinaryOperation != Assignment MemberReference variable Cast ReferenceType RubyModule MemberReference self = Literal null BlockStatement ReturnStatement MemberReference variable ReturnStatement MethodInvocation runtime getNil MethodDeclaration Modifier public Annotation Override ReferenceType Arity ReturnStatement MethodInvocation Arity noArguments addMethod ReturnStatement MemberReference packageModule BlockStatement ReturnStatement MethodInvocation MemberReference runtime MethodInvocation JavaClass MemberReference runtime MemberReference fullName forNameVerbose getProxyClass	1
MethodDeclaration Modifier public ReferenceType Object case381_line1443 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal Cast ReferenceType ListNode MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier private ReferenceType RubyClass defineClassIfAllowed FormalParameter ReferenceType String name FormalParameter ReferenceType RubyClass superClass IfStatement BinaryOperation && BinaryOperation != MemberReference superClass Literal null MethodInvocation profile MemberReference name allowClass BlockStatement ReturnStatement MethodInvocation MemberReference name MemberReference superClass MethodInvocation superClass getAllocator defineClass ReturnStatement Literal null	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement MethodInvocation	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair frame Literal true ReferenceType IRubyObject ReturnStatement TernaryExpression BinaryOperation != BinaryOperation & MemberReference flags MemberReference PROCDEFAULT_HASH_F Literal 0 MemberReference ifNone MethodInvocation MethodInvocation getNil getRuntime	1
MethodDeclaration Modifier public static BasicType byte FormalParameter ReferenceType String string ReturnStatement MethodInvocation ByteList MemberReference string plain	0
MethodDeclaration Modifier public final ReferenceType NativeType getNativeType ReturnStatement MemberReference nativeType	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType OpAsgnNode MethodInvocation Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 4 MemberReference yyTop yyVals getPosition Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 4 MemberReference yyTop yyVals Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals Cast ReferenceType String Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals Cast ReferenceType String Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "empty?" ReferenceType RubyBoolean empty_p FormalParameter ReferenceType ThreadContext context LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime IfStatement MethodInvocation runtime isVerbose BlockStatement StatementExpression MethodInvocation runtime MethodInvocation MemberReference ID Literal is use instead" Literal Literal warning getWarnings ReturnStatement MethodInvocation MemberReference context	1
MethodDeclaration Modifier public ReferenceType GeneratorAdapter method ReturnStatement MethodInvocation MethodInvocation method	0
MethodDeclaration Modifier public static ReferenceType RubyClass createObjectClass FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType RubyClass objectClass StatementExpression Assignment MemberReference objectClass index MemberReference ClassIndex OBJECT = StatementExpression MethodInvocation objectClass ClassReference ReferenceType defineAnnotatedMethods ReturnStatement MemberReference objectClass	1
MethodDeclaration Modifier private ReferenceType IRubyObject ReturnStatement MethodInvocation RubyString MethodInvocation getRuntime MethodInvocation	0
MethodDeclaration Modifier public BasicType long getLongValue ReturnStatement Literal 0	0
MethodDeclaration Modifier final protected IfStatement MethodInvocation isFrozen BlockStatement ThrowStatement MethodInvocation MethodInvocation Literal getRuntime	0
MethodDeclaration Modifier private BasicType int StatementExpression MemberReference -- StatementExpression MethodInvocation StatementExpression MethodInvocation StatementExpression Assignment MemberReference lex_state TernaryExpression MemberReference isOneEight MemberReference LexState EXPR_END MemberReference LexState EXPR_ENDARG = StatementExpression Assignment MemberReference yaccValue ClassCreator ReferenceType Token Literal ")" MethodInvocation getPosition = ReturnStatement MemberReference Tokens	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ReferenceType IRubyObject ReturnStatement TernaryExpression MethodInvocation MethodInvocation MethodInvocation getTrue getRuntime MethodInvocation MethodInvocation getFalse getRuntime	1
MethodDeclaration Modifier public FormalParameter ReferenceType RubyModule klazz FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType String name FormalParameter ReferenceType Block block FormalParameter ReferenceType String fileName FormalParameter BasicType int line AssertStatement BinaryOperation != MemberReference block Literal null Literal uses null object It should NEVER be null" StatementExpression Assignment This MemberReference self MemberReference self = StatementExpression Assignment This MemberReference name MemberReference name = StatementExpression Assignment This MemberReference klazz MemberReference klazz = StatementExpression Assignment This MemberReference fileName MemberReference fileName = StatementExpression Assignment This MemberReference line MemberReference line = StatementExpression Assignment This MemberReference block MemberReference block = StatementExpression Assignment This MemberReference visibility MemberReference Visibility PUBLIC = StatementExpression Assignment This MemberReference Literal false =	1
MethodDeclaration Modifier private static ReferenceType String getSimpleName FormalParameter ReferenceType Class TypeArgument ? clazz IfStatement MethodInvocation clazz isArray BlockStatement ReturnStatement BinaryOperation + MethodInvocation MethodInvocation clazz getComponentType getSimpleName Literal "[]" LocalVariableDeclaration ReferenceType String VariableDeclarator className MethodInvocation clazz getName LocalVariableDeclaration BasicType int VariableDeclarator len MethodInvocation className length LocalVariableDeclaration BasicType int VariableDeclarator i MethodInvocation className Literal '$' lastIndexOf IfStatement BinaryOperation != MemberReference i Literal - 1 BlockStatement DoStatement BinaryOperation && BinaryOperation < MemberReference i MemberReference len MethodInvocation Character MethodInvocation className MemberReference i charAt isDigit BlockStatement StatementExpression MemberReference ++ i ReturnStatement MethodInvocation className MemberReference i substring ReturnStatement MethodInvocation className BinaryOperation + MethodInvocation className Literal '.' lastIndexOf Literal 1 substring	0
MethodDeclaration Modifier public static Annotation Deprecated ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject self ReturnStatement MethodInvocation MethodInvocation self getRuntime uid	1
MethodDeclaration Modifier public BasicType boolean isConstant ForStatement EnhancedForControl VariableDeclaration ReferenceType KeyValuePair VariableDeclarator MemberReference _pairs IfStatement BinaryOperation || MethodInvocation ! isConstant MethodInvocation ! isConstant ReturnStatement Literal false ReturnStatement Literal true	1
MethodDeclaration Modifier public ReferenceType String getVariables ReturnStatement MemberReference	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "cos" ElementValuePair required Literal 1 ElementValuePair module Literal true ElementValuePair visibility MemberReference Visibility PRIVATE ReferenceType RubyFloat cos FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject x LocalVariableDeclaration BasicType double VariableDeclarator value Cast ReferenceType RubyFloat MethodInvocation RubyKernel MemberReference recv MemberReference x ReturnStatement MethodInvocation RubyFloat MethodInvocation recv getRuntime MethodInvocation Math MemberReference value cos newFloat	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object arg0 StatementExpression MethodInvocation Literal 1 checkArity TryStatement ReturnStatement MethodInvocation constructor MemberReference arg0 newInstance CatchClause CatchClauseParameter IllegalArgumentException iae ReturnStatement MethodInvocation MemberReference iae MemberReference arg0 handlelIllegalArgumentEx CatchClause CatchClauseParameter IllegalAccessException iae ReturnStatement MethodInvocation MemberReference iae handleIllegalAccessEx CatchClause CatchClauseParameter InvocationTargetException ite ReturnStatement MethodInvocation MemberReference ite MemberReference constructor handleInvocationTargetEx CatchClause CatchClauseParameter Throwable t ReturnStatement MethodInvocation MemberReference t MemberReference constructor handleThrowable	1
MethodDeclaration Modifier public marshalTo FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType Object obj FormalParameter ReferenceType RubyClass type FormalParameter ReferenceType marshalStream IOException ThrowStatement MethodInvocation runtime BinaryOperation + Literal "no marshal_dump is defined for class " MethodInvocation type getName newTypeError	0
MethodDeclaration Modifier public ReferenceType Node gettable FormalParameter ReferenceType Token token SwitchStatement MethodInvocation token getType SwitchStatementCase MemberReference Tokens kSELF ReturnStatement ClassCreator ReferenceType SelfNode MethodInvocation token getPosition SwitchStatementCase MemberReference Tokens kNIL ReturnStatement ClassCreator ReferenceType NilNode MethodInvocation token getPosition SwitchStatementCase MemberReference Tokens kTRUE ReturnStatement ClassCreator ReferenceType TrueNode MethodInvocation token getPosition SwitchStatementCase MemberReference Tokens kFALSE ReturnStatement ClassCreator ReferenceType FalseNode MethodInvocation token getPosition SwitchStatementCase MemberReference Tokens k__FILE__ ReturnStatement ClassCreator ReferenceType MethodInvocation token getPosition MethodInvocation ByteList MethodInvocation token MethodInvocation getFile getPosition create SwitchStatementCase MemberReference Tokens k__LINE__ ReturnStatement ClassCreator ReferenceType FixnumNode MethodInvocation token getPosition BinaryOperation + MethodInvocation token MethodInvocation getStartLine getPosition Literal 1 SwitchStatementCase MemberReference Tokens k__ENCODING__ ReturnStatement ClassCreator ReferenceType MethodInvocation token getPosition SwitchStatementCase MemberReference Tokens tIDENTIFIER ReturnStatement MethodInvocation MethodInvocation token getPosition Cast ReferenceType String MethodInvocation token getValue declare SwitchStatementCase MemberReference Tokens tCONSTANT ReturnStatement ClassCreator ReferenceType ConstNode MethodInvocation token getPosition Cast ReferenceType String MethodInvocation token getValue SwitchStatementCase MemberReference Tokens tIVAR ReturnStatement ClassCreator ReferenceType InstVarNode MethodInvocation token getPosition Cast ReferenceType String MethodInvocation token getValue SwitchStatementCase MemberReference Tokens tCVAR ReturnStatement ClassCreator ReferenceType ClassVarNode MethodInvocation token getPosition Cast ReferenceType String MethodInvocation token getValue SwitchStatementCase MemberReference Tokens tGVAR ReturnStatement ClassCreator ReferenceType GlobalVarNode MethodInvocation token getPosition Cast ReferenceType String MethodInvocation token getValue StatementExpression MethodInvocation MethodInvocation token getPosition Cast ReferenceType String MethodInvocation token getValue ReturnStatement Literal null	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "to_s" ReferenceType IRubyObject to_s ReturnStatement MethodInvocation anyToString	1
MethodDeclaration Modifier private static BasicType boolean registerSelect FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Selector selector FormalParameter ReferenceType IRubyObject obj FormalParameter ReferenceType RubyIO ioObj FormalParameter BasicType int ops IOException LocalVariableDeclaration ReferenceType Channel VariableDeclarator channel MethodInvocation ioObj getChannel IfStatement BinaryOperation || BinaryOperation == MemberReference channel Literal null BinaryOperation instanceof MemberReference channel ReferenceType SelectableChannel BlockStatement ReturnStatement Literal false StatementExpression Cast ReferenceType SelectableChannel MemberReference channel LocalVariableDeclaration BasicType int VariableDeclarator real_ops BinaryOperation & Cast ReferenceType SelectableChannel MemberReference channel MemberReference ops LocalVariableDeclaration ReferenceType SelectionKey VariableDeclarator key Cast ReferenceType SelectableChannel MemberReference channel IfStatement BinaryOperation == MemberReference key Literal null BlockStatement StatementExpression Cast ReferenceType SelectableChannel MemberReference channel BlockStatement StatementExpression MethodInvocation key BinaryOperation | MethodInvocation key interestOps MemberReference real_ops interestOps ReturnStatement Literal true	1
MethodDeclaration Modifier final ReferenceType Encoding isCompatibleWith FormalParameter ReferenceType EncodingCapable other IfStatement BinaryOperation instanceof MemberReference other ReferenceType RubyString ReturnStatement MethodInvocation Cast ReferenceType RubyString MemberReference other checkEncoding LocalVariableDeclaration ReferenceType Encoding VariableDeclarator enc1 MemberReference value encoding Statement LocalVariableDeclaration ReferenceType Encoding VariableDeclarator enc2 MethodInvocation other getEncoding IfStatement BinaryOperation == MemberReference enc1 MemberReference enc2 ReturnStatement MemberReference enc1 IfStatement BinaryOperation == MemberReference value realSize Literal 0 ReturnStatement MemberReference enc2 IfStatement BinaryOperation || MethodInvocation ! enc1 isAsciiCompatible MethodInvocation ! enc2 isAsciiCompatible ReturnStatement Literal null IfStatement BinaryOperation instanceof MemberReference enc2 ReferenceType USASCIIEncoding ReturnStatement MemberReference enc1 IfStatement BinaryOperation == MethodInvocation scanForCodeRange MemberReference CR_7BIT ReturnStatement MemberReference enc2 ReturnStatement Literal null	1
MethodDeclaration Modifier public static ReferenceType String FormalParameter ReferenceType RubyModule clazz LocalVariableDeclaration ReferenceType String VariableDeclarator path MethodInvocation clazz getName IfStatement BinaryOperation == MethodInvocation path Literal 0 charAt Literal '#' BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator TernaryExpression MethodInvocation clazz isClass Literal "class" Literal "module" ThrowStatement MethodInvocation clazz MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "can't dump " MemberReference Literal " " MemberReference path newTypeError getRuntime LocalVariableDeclaration ReferenceType RubyModule VariableDeclarator real TernaryExpression MethodInvocation clazz isModule MemberReference clazz Cast ReferenceType RubyClass MemberReference clazz IfStatement BinaryOperation != MethodInvocation clazz MethodInvocation MemberReference path getClassFromPath getRuntime MemberReference real BlockStatement ThrowStatement MethodInvocation clazz MethodInvocation BinaryOperation + MemberReference path Literal " can't be newTypeError getRuntime ReturnStatement MemberReference path	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator receiver MethodInvocation MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference getReceiverNode LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator rArg1 MethodInvocation arg1 MemberReference runtime MemberReference context MemberReference self MemberReference LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator firstValue MethodInvocation MemberReference context MemberReference self MemberReference receiver MemberReference rArg1 call IfStatement MethodInvocation ! firstValue isTrue ReturnStatement MemberReference firstValue StatementExpression Assignment MemberReference firstValue MethodInvocation MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference getValueNode = StatementExpression MethodInvocation MemberReference context MemberReference self MemberReference receiver MemberReference rArg1 MemberReference firstValue call ReturnStatement MemberReference firstValue	1
MethodDeclaration FormalParameter ReferenceType RubyClass StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public synchronized ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType VariableAccessor IfStatement BinaryOperation == MemberReference MemberReference Collections EMPTY_MAP StatementExpression Assignment MemberReference ClassCreator ReferenceType Hashtable TypeArgument ReferenceType String TypeArgument ReferenceType VariableAccessor Literal 1 = ReturnStatement MemberReference	1
MethodDeclaration Modifier public FormalParameter ReferenceType String methodName FormalParameter ReferenceType String signature StatementExpression MethodInvocation method MemberReference MemberReference methodName MemberReference signature invokevirtual	0
MethodDeclaration Modifier final static BasicType byte FormalParameter BasicType long address FormalParameter BasicType int ReturnStatement MethodInvocation MemberReference address MemberReference	1
MethodDeclaration Modifier public setArgValues FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 StatementExpression MethodInvocation ArrayCreator ReferenceType IRubyObject ArrayInitializer MemberReference arg0 MemberReference arg1 Literal 2 setArgValues	0
MethodDeclaration Modifier final public static ReferenceType ByteList FormalParameter BasicType long i ReturnStatement ClassCreator ReferenceType ByteList MethodInvocation MemberReference i	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "*" ElementValuePair required Literal 1 ReferenceType IRubyObject op_mul FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg ReturnStatement MethodInvocation MemberReference context MemberReference arg MethodInvocation MethodInvocation Literal "BigDecimal" fastGetClass MethodInvocation Literal "vpPrecLimit" searchInternalModuleVariable getRuntime	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "join" ElementValuePair optional Literal 1 ElementValuePair backtrace Literal true ReferenceType IRubyObject join FormalParameter ReferenceType IRubyObject args LocalVariableDeclaration BasicType long VariableDeclarator timeoutMillis MemberReference Long MAX_VALUE IfStatement BinaryOperation > MemberReference args length Literal 0 BlockStatement IfStatement BinaryOperation > MemberReference args length Literal 1 BlockStatement ThrowStatement MethodInvocation MethodInvocation MemberReference args length Literal 1 newArgumentError getRuntime StatementExpression Assignment MemberReference timeoutMillis Cast BasicType long BinaryOperation * Literal MemberReference ArraySelector Literal 0 MethodInvocation MethodInvocation getValue args = IfStatement BinaryOperation <= MemberReference timeoutMillis Literal 0 BlockStatement IfStatement MethodInvocation threadImpl isAlive BlockStatement ReturnStatement MethodInvocation MethodInvocation getNil getRuntime BlockStatement ReturnStatement This IfStatement MethodInvocation BlockStatement ThrowStatement MethodInvocation MethodInvocation Literal "thread tried to join newThreadError getRuntime TryStatement IfStatement MethodInvocation threadService BlockStatement SynchronizedStatement This StatementExpression MethodInvocation LocalVariableDeclaration ReferenceType RubyThread VariableDeclarator currentThread MethodInvocation MethodInvocation getCurrentContext MethodInvocation getThread getRuntime LocalVariableDeclaration Modifier final BasicType long VariableDeclarator MethodInvocation Math MemberReference timeoutMillis Literal 200 min LocalVariableDeclaration BasicType long VariableDeclarator start MethodInvocation System currentTimeMillis WhileStatement Literal true BlockStatement StatementExpression MethodInvocation currentThread pollThreadEvents StatementExpression MethodInvocation threadImpl MemberReference join IfStatement MethodInvocation ! threadImpl isAlive BlockStatement BreakStatement IfStatement BinaryOperation > BinaryOperation - MethodInvocation System currentTimeMillis MemberReference start MemberReference timeoutMillis BlockStatement BreakStatement CatchClause CatchClauseParameter InterruptedException ie StatementExpression MethodInvocation ie printStackTrace AssertStatement Literal false MemberReference ie CatchClause CatchClauseParameter ie StatementExpression MethodInvocation ie printStackTrace AssertStatement Literal false MemberReference ie IfStatement BinaryOperation != MemberReference Literal null BlockStatement ThrowStatement MemberReference IfStatement MethodInvocation threadImpl isAlive BlockStatement ReturnStatement MethodInvocation MethodInvocation getNil getRuntime BlockStatement ReturnStatement This	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal Literal "to_i" ReferenceType IRubyObject fileno FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv ReturnStatement Cast ReferenceType RubyIO MethodInvocation MemberReference currentFile MemberReference context MemberReference recv Literal "no stream" getData	1
MethodDeclaration Modifier private final ReferenceType RaiseException concurrentModification ReturnStatement MethodInvocation MethodInvocation Literal "Detected invalid hash contents due to modifications with getRuntime	1
MethodDeclaration Modifier protected ReferenceType String ReturnStatement BinaryOperation + BinaryOperation + MethodInvocation MethodInvocation getDeclaringClass Literal "/" MethodInvocation getName	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "define_method" ElementValuePair frame Literal true ElementValuePair visibility MemberReference PRIVATE ElementValuePair reads MemberReference VISIBILITY ReferenceType IRubyObject define_method FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation arg0 MethodInvocation intern asJavaString LocalVariableDeclaration ReferenceType DynamicMethod VariableDeclarator Literal null LocalVariableDeclaration ReferenceType Visibility VariableDeclarator visibility MethodInvocation context getCurrentVisibility IfStatement BinaryOperation == MemberReference visibility MemberReference MODULE_FUNCTION StatementExpression Assignment MemberReference visibility MemberReference PRIVATE = LocalVariableDeclaration ReferenceType RubyProc VariableDeclarator proc MethodInvocation runtime MemberReference Block.Type MemberReference block newProc StatementExpression Assignment MethodInvocation proc MemberReference type getBlock MemberReference Block.Type = StatementExpression Assignment MemberReference MethodInvocation MemberReference name MemberReference visibility MemberReference proc createProcMethod = StatementExpression MethodInvocation RuntimeHelpers This MemberReference name MemberReference MethodInvocation context getPreviousVisibility MemberReference context MemberReference runtime ReturnStatement MemberReference proc	1
MethodDeclaration Modifier public final BasicType long FormalParameter BasicType long offset ReturnStatement TernaryExpression BinaryOperation == MemberReference LONG_SIZE Literal 32 MethodInvocation MemberReference offset getInt MethodInvocation MemberReference offset getLong	0
MethodDeclaration Modifier public static Annotation Deprecated ReferenceType IRubyObject kill FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args ReturnStatement MethodInvocation MethodInvocation recv getRuntime MemberReference args kill	1
MethodDeclaration Modifier public static ReferenceType String FormalParameter ReferenceType String one FormalParameter ReferenceType String two FormalParameter ReferenceType String FormalParameter ReferenceType String FormalParameter ReferenceType String FormalParameter ReferenceType String FormalParameter ReferenceType String seven FormalParameter ReferenceType String eight ReturnStatement ArrayCreator ReferenceType String ArrayInitializer MemberReference one MemberReference two MemberReference MemberReference MemberReference MemberReference MemberReference seven MemberReference eight	1
MethodDeclaration Modifier public ReferenceType IRubyObject fastGetInstanceVariable FormalParameter ReferenceType String internedName AssertStatement MethodInvocation IdUtil MemberReference internedName isInstanceVariable ReturnStatement Cast ReferenceType IRubyObject MethodInvocation MemberReference internedName	1
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject block FormalParameter ReferenceType IRubyObject sig ReturnStatement MethodInvocation recv MethodInvocation getNil getRuntime	0
MethodDeclaration Modifier public final ReferenceType IRubyObject get FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType MemoryIO io FormalParameter BasicType long offset ReturnStatement MethodInvocation Util MemberReference runtime MethodInvocation io MemberReference offset getShort newUnsigned16	1
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType Block block IfStatement MethodInvocation block isGiven BlockStatement StatementExpression MethodInvocation MethodInvocation self getRuntime LocalVariableDeclaration ReferenceType RubyProc VariableDeclarator proc MethodInvocation RubyProc MethodInvocation self getRuntime MemberReference block MemberReference Block.Type newProc LocalVariableDeclaration ReferenceType JavaMethod VariableDeclarator method Cast ReferenceType JavaMethod MethodInvocation MemberReference self MemberReference name MemberReference arg0 MemberReference proc LocalVariableDeclaration ReferenceType Object VariableDeclarator cArg0 MethodInvocation MemberReference context MemberReference arg0 MemberReference method Literal 0 convertArg LocalVariableDeclaration ReferenceType Object VariableDeclarator cArg1 MethodInvocation MemberReference context MemberReference proc MemberReference method Literal 1 convertArg ReturnStatement MethodInvocation method MemberReference cArg0 MemberReference cArg1 BlockStatement ReturnStatement MethodInvocation MemberReference context MemberReference self MemberReference clazz MemberReference name MemberReference arg0 call	0
MethodDeclaration Modifier public ReferenceType Object call FormalParameter BasicType int channel FormalParameter ReferenceType Object message IfStatement MethodInvocation MemberReference channel BlockStatement StatementExpression MethodInvocation MemberReference channel MemberReference message ReturnStatement Literal null BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator request ClassCreator ReferenceType MemberReference message StatementExpression MethodInvocation MemberReference channel MemberReference request ReturnStatement MethodInvocation request call	0
MethodDeclaration Modifier public write FormalParameter Modifier final BasicType int IOException StatementExpression MethodInvocation MethodInvocation io MethodInvocation getCurrentContext getRuntime MemberReference io MemberReference io MethodInvocation RubyString MethodInvocation io getRuntime ClassCreator ReferenceType ByteList ArrayCreator BasicType byte ArrayInitializer Cast BasicType byte MemberReference Literal false call	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop LocalVariableDeclaration ReferenceType Node VariableDeclarator body Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType DefnNode MethodInvocation Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 5 MemberReference yyTop yyVals getPosition ClassCreator ReferenceType ArgumentNode Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 4 MemberReference yyTop yyVals Cast ReferenceType String Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 4 MemberReference yyTop yyVals Cast ReferenceType ArgsNode MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals MethodInvocation support getCurrentScope MemberReference body = StatementExpression MethodInvocation support popCurrentScope StatementExpression MethodInvocation support Literal false setInDef ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "real?" ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject ReturnStatement MethodInvocation MethodInvocation getTrue getRuntime	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ReferenceType IRubyObject rewind FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv LocalVariableDeclaration ReferenceType ArgsFileData VariableDeclarator data MethodInvocation MemberReference context MemberReference recv Literal "no stream to getData LocalVariableDeclaration ReferenceType RubyFixnum VariableDeclarator retVal Cast ReferenceType RubyIO MemberReference data currentFile StatementExpression Cast ReferenceType RubyIO MemberReference data currentFile StatementExpression Assignment MemberReference data Literal 0 = StatementExpression Assignment MemberReference data currentLineNumber Literal 0 = ReturnStatement MemberReference retVal	0
MethodDeclaration Modifier private ReferenceType IRubyObject FormalParameter ReferenceType Ruby ruby StatementExpression MethodInvocation ruby MethodInvocation MemberReference ID Literal "multiple values for a block parameter for warn getWarnings ReturnStatement MethodInvocation ruby getNil	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule klazz FormalParameter ReferenceType String name ReturnStatement MethodInvocation MemberReference context MemberReference self MemberReference klazz MemberReference oldName call	0
MethodDeclaration Modifier public ReferenceType RubyClass defineClassUnder FormalParameter ReferenceType String name FormalParameter ReferenceType RubyClass superClass FormalParameter ReferenceType ObjectAllocator allocator ReturnStatement MethodInvocation MethodInvocation MemberReference name MemberReference superClass MemberReference allocator This defineClassUnder getRuntime	0
MethodDeclaration Modifier protected Annotation Deprecated ReferenceType Class endCall FormalParameter ReferenceType ClassWriter cw FormalParameter ReferenceType MethodVisitor mv FormalParameter ReferenceType String name StatementExpression MethodInvocation mv visitEnd StatementExpression MethodInvocation cw visitEnd LocalVariableDeclaration BasicType byte VariableDeclarator code MethodInvocation cw toByteArray ReturnStatement MethodInvocation classLoader MemberReference name MemberReference code MemberReference defineClass	1
MethodDeclaration Modifier public ReferenceType RubyClass ReturnStatement MemberReference	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair backtrace Literal true ElementValuePair meta Literal true ReferenceType IRubyObject java_method FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject proxyClass FormalParameter ReferenceType IRubyObject rubyName FormalParameter ReferenceType IRubyObject argTypes LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation rubyName asJavaString LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator argTypesAry MethodInvocation argTypes convertToArray LocalVariableDeclaration ReferenceType Class VariableDeclarator argTypesClasses Cast ReferenceType Class MethodInvocation argTypesAry ArrayCreator ReferenceType Class MethodInvocation argTypesAry size toArray ReturnStatement MethodInvocation MemberReference context MemberReference proxyClass MemberReference name MemberReference argTypesClasses getRubyMethod	1
MethodDeclaration Modifier public static ReferenceType Arity optional ReturnStatement MemberReference OPTIONAL	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal Literal ReferenceType IRubyObject getc TryStatement LocalVariableDeclaration ReferenceType OpenFile VariableDeclarator myOpenFile MethodInvocation getOpenFileChecked StatementExpression MethodInvocation myOpenFile MethodInvocation getRuntime checkReadable StatementExpression MethodInvocation myOpenFile setReadBuffered LocalVariableDeclaration ReferenceType Stream VariableDeclarator stream MethodInvocation myOpenFile getMainStream StatementExpression MethodInvocation MemberReference stream readCheck StatementExpression MethodInvocation stream clearerr LocalVariableDeclaration BasicType int VariableDeclarator c MethodInvocation myOpenFile MethodInvocation getMainStream IfStatement BinaryOperation == MemberReference c Literal - 1 BlockStatement ReturnStatement MethodInvocation MethodInvocation getNil getRuntime ReturnStatement MethodInvocation MethodInvocation MemberReference c newFixnum getRuntime CatchClause CatchClauseParameter PipeException ex ThrowStatement MethodInvocation MethodInvocation newErrnoEPIPEError getRuntime CatchClause CatchClauseParameter InvalidValueException ex ThrowStatement MethodInvocation MethodInvocation newErrnoEINVALError getRuntime CatchClause CatchClauseParameter BadDescriptorException e ThrowStatement MethodInvocation MethodInvocation newErrnoEBADFError getRuntime CatchClause CatchClauseParameter EOFException e ThrowStatement MethodInvocation MethodInvocation newEOFError getRuntime CatchClause CatchClauseParameter IOException e ThrowStatement MethodInvocation MethodInvocation MethodInvocation e getMessage newIOError getRuntime	1
MethodDeclaration Modifier public ReferenceType ISourcePosition getPosition FormalParameter ReferenceType ISourcePosition ReturnStatement MethodInvocation MemberReference getPosition	0
MethodDeclaration Modifier public BasicType boolean remove FormalParameter ReferenceType RubyHash hash FormalParameter ReferenceType Object o IfStatement BinaryOperation instanceof MemberReference o ReferenceType IRubyObject ReturnStatement Literal false ReturnStatement BinaryOperation != MethodInvocation hash Cast ReferenceType IRubyObject MemberReference o internalDelete MemberReference NO_ENTRY	1
MethodDeclaration Modifier public load FormalParameter Modifier final ReferenceType Ruby runtime FormalParameter BasicType boolean wrap IOException StatementExpression MethodInvocation runtime Literal MethodInvocation runtime MethodInvocation runtime MethodInvocation getAllocator defineClass StatementExpression MethodInvocation MemberReference runtime StatementExpression MethodInvocation MemberReference runtime createSocket IfStatement BinaryOperation && MethodInvocation runtime MemberReference getInstanceConfig MethodInvocation RubyUNIXSocket BlockStatement StatementExpression MethodInvocation RubyUNIXSocket MemberReference runtime StatementExpression MethodInvocation MemberReference runtime StatementExpression MethodInvocation MemberReference runtime StatementExpression MethodInvocation RubyTCPSocket MemberReference runtime StatementExpression MethodInvocation MemberReference runtime StatementExpression MethodInvocation MemberReference runtime	0
MethodDeclaration Modifier public ReferenceType Object case279_line1048 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support MethodInvocation Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals getPosition Cast ReferenceType String Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals new_colon3 = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public Annotation Override ReferenceType RubyClass ThrowStatement MethodInvocation MethodInvocation Literal "can't define newTypeError getRuntime	0
MethodDeclaration Modifier public BasicType boolean isExclusive ReturnStatement MemberReference	0
MethodDeclaration Modifier public static ReferenceType IRubyObject FormalParameter ReferenceType RubyArray array IfStatement BinaryOperation < Literal 1 MethodInvocation array getLength BlockStatement ReturnStatement MethodInvocation array Literal 1 eltInternal BlockStatement ReturnStatement MethodInvocation array MethodInvocation getNil getRuntime	0
MethodDeclaration Modifier public static ReferenceType RubyArray splatValue FormalParameter ReferenceType IRubyObject value IfStatement MethodInvocation value isNil BlockStatement ReturnStatement MethodInvocation value MethodInvocation MemberReference value newArray getRuntime ReturnStatement MethodInvocation MemberReference value	0
MethodDeclaration Modifier public ReferenceType Node getBodyNode ReturnStatement MemberReference bodyNode	0
MethodDeclaration Modifier public ReferenceType IRubyObject concatArrays FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType JavaArray original FormalParameter ReferenceType JavaArray additional LocalVariableDeclaration BasicType int VariableDeclarator oldLength Cast BasicType int MethodInvocation original MethodInvocation getLongValue length LocalVariableDeclaration BasicType int VariableDeclarator addLength Cast BasicType int MethodInvocation additional MethodInvocation getLongValue length LocalVariableDeclaration ReferenceType Object VariableDeclarator newArray MethodInvocation Array MethodInvocation javaClass BinaryOperation + MemberReference oldLength MemberReference addLength newInstance LocalVariableDeclaration ReferenceType JavaArray VariableDeclarator javaArray ClassCreator ReferenceType JavaArray MethodInvocation getRuntime MemberReference newArray StatementExpression MethodInvocation System MethodInvocation original getValue Literal 0 MemberReference newArray Literal 0 MemberReference oldLength arraycopy StatementExpression MethodInvocation System MethodInvocation additional getValue Literal 0 MemberReference newArray MemberReference oldLength MemberReference addLength arraycopy LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator proxyClass Cast ReferenceType RubyClass MethodInvocation Java MemberReference javaArray MethodInvocation array_class get_proxy_class LocalVariableDeclaration ReferenceType ArrayJavaProxy VariableDeclarator proxy ClassCreator ReferenceType ArrayJavaProxy MethodInvocation context getRuntime MemberReference proxyClass StatementExpression MethodInvocation proxy MemberReference javaArray ReturnStatement MemberReference proxy	1
MethodDeclaration Modifier public ReferenceType Object case237_line923 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair frame Literal true ElementValuePair reads MemberReference BACKREF ElementValuePair writes MemberReference BACKREF ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType Block block ReturnStatement TernaryExpression MethodInvocation block isGiven MethodInvocation MemberReference context MemberReference block Literal null Literal null MemberReference arg0 Literal false Literal 0 MethodInvocation MethodInvocation context getRuntime This Literal MemberReference arg0 enumeratorize	0
MethodDeclaration Modifier final public static FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType MemoryIO io FormalParameter BasicType long offset FormalParameter ReferenceType RubyArray ary LocalVariableDeclaration BasicType int VariableDeclarator array ArrayCreator BasicType int MethodInvocation ary size ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference array length MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i array Cast BasicType int MethodInvocation Util MethodInvocation ary MemberReference i entry uint32Value = StatementExpression MethodInvocation io MemberReference offset MemberReference array Literal 0 MemberReference array length put	1
MethodDeclaration Modifier public ReferenceType Type ReturnStatement MethodInvocation method	0
MethodDeclaration Modifier public static ReferenceType newInstance FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType RubyClass FormalParameter ReferenceType String msg ReturnStatement ClassCreator ReferenceType MemberReference runtime MemberReference MemberReference msg	0
MethodDeclaration Modifier public final ReferenceType RubyFixnum FormalParameter ReferenceType Ruby runtime FormalParameter BasicType int i FormalParameter BasicType long value ReturnStatement MethodInvocation runtimeCache MemberReference runtime MemberReference i MemberReference value	0
MethodDeclaration Modifier public FormalParameter ReferenceType Label StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference ArraySelector Literal 0 escaped	0
MethodDeclaration Modifier public ReferenceType T FormalParameter ReferenceType Object javaObject FormalParameter ReferenceType A allocator IfStatement BinaryOperation || BinaryOperation == MemberReference javaObject Literal null BinaryOperation == MemberReference allocator Literal null ReturnStatement Literal null LocalVariableDeclaration BasicType int VariableDeclarator hash MethodInvocation MemberReference javaObject hash ReturnStatement MethodInvocation MethodInvocation MemberReference javaObject MemberReference hash MemberReference allocator MemberReference hash	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference argv	0
MethodDeclaration Modifier public ReferenceType Object case349_line1317 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support MethodInvocation Cast ReferenceType ListNode MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals getPosition Literal null Cast ReferenceType ListNode MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals Literal null Literal null Cast ReferenceType BlockArgNode MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals new_args = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public Annotation Override setVisibility FormalParameter ReferenceType Visibility visibility LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType StatementExpression Assignment MemberReference MethodInvocation box.actualMethod dup = StatementExpression Assignment MemberReference callCount MemberReference box callCount = StatementExpression Assignment MemberReference box MemberReference = StatementExpression SuperMethodInvocation MemberReference visibility setVisibility	0
MethodDeclaration Modifier private final static BasicType long getAddress FormalParameter ReferenceType Pointer ptr ReturnStatement Cast ReferenceType MethodInvocation ptr getMemoryIO	1
MethodDeclaration Modifier public defineVariable FormalParameter Modifier final ReferenceType GlobalVariable variable StatementExpression MethodInvocation globalVariables MethodInvocation variable name ClassCreator ReferenceType MethodDeclaration Modifier public ReferenceType IRubyObject getValue ReturnStatement MethodInvocation variable get MethodDeclaration Modifier public ReferenceType IRubyObject setValue FormalParameter ReferenceType IRubyObject newValue ReturnStatement MethodInvocation variable MemberReference newValue set define	0
MethodDeclaration Modifier public ReferenceType Object case38_line449 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType NotNode MethodInvocation Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals getPosition MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals getConditionNode = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public ReferenceType Operand FormalParameter Modifier final ReferenceType IfNode ifNode FormalParameter ReferenceType IR_Scope s LocalVariableDeclaration ReferenceType Node VariableDeclarator actualCondition MethodInvocation MethodInvocation ifNode skipOverNewlines LocalVariableDeclaration ReferenceType Variable VariableDeclarator result MethodInvocation s getNewVariable LocalVariableDeclaration ReferenceType Label VariableDeclarator MethodInvocation s getNewLabel LocalVariableDeclaration ReferenceType Label VariableDeclarator doneLabel MethodInvocation s getNewLabel StatementExpression MethodInvocation s ClassCreator ReferenceType MethodInvocation MemberReference actualCondition MemberReference s build MemberReference BooleanLiteral FALSE MemberReference addInstr IfStatement BinaryOperation != MethodInvocation ifNode getThenBody Literal null StatementExpression MethodInvocation s ClassCreator ReferenceType COPY_Instr MemberReference result MethodInvocation MethodInvocation ifNode getThenBody MemberReference s build addInstr StatementExpression MethodInvocation s ClassCreator ReferenceType COPY_Instr MemberReference result MemberReference Nil NIL addInstr StatementExpression MethodInvocation s ClassCreator ReferenceType JUMP_Instr MemberReference doneLabel addInstr StatementExpression MethodInvocation s ClassCreator ReferenceType LABEL_Instr MemberReference addInstr IfStatement BinaryOperation != MethodInvocation ifNode getElseBody Literal null StatementExpression MethodInvocation s ClassCreator ReferenceType COPY_Instr MemberReference result MethodInvocation MethodInvocation ifNode getElseBody MemberReference s build addInstr StatementExpression MethodInvocation s ClassCreator ReferenceType COPY_Instr MemberReference result MemberReference Nil NIL addInstr StatementExpression MethodInvocation s ClassCreator ReferenceType LABEL_Instr MemberReference doneLabel addInstr ReturnStatement MemberReference result	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject other LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime IfStatement BinaryOperation instanceof MemberReference other ReferenceType BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator equal BinaryOperation == MethodInvocation getObject Cast ReferenceType MemberReference other ReturnStatement MethodInvocation runtime MemberReference equal newBoolean ReturnStatement MethodInvocation runtime getFalse	1
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals checkExpression StatementExpression MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals checkExpression LocalVariableDeclaration BasicType boolean VariableDeclarator isLiteral BinaryOperation && BinaryOperation instanceof Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals ReferenceType FixnumNode BinaryOperation instanceof Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals ReferenceType FixnumNode StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType DotNode MethodInvocation Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals getPosition Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals Literal true MemberReference isLiteral = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public static Annotation Deprecated BasicType boolean FormalParameter ReferenceType IRubyObject rubyObject ReturnStatement Cast ReferenceType Boolean MethodInvocation MemberReference rubyObject ClassReference BasicType boolean convertRubyToJava	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ReferenceType StructLayout build FormalParameter ReferenceType ThreadContext context ReturnStatement ClassCreator ReferenceType StructLayout MethodInvocation context getRuntime MemberReference MemberReference fields BinaryOperation + MemberReference BinaryOperation & BinaryOperation - MemberReference size Literal 1 BinaryOperation - MemberReference Literal 1 MemberReference	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "gets" ElementValuePair writes MemberReference FrameField LASTLINE ElementValuePair compat MemberReference RUBY1_9 ReferenceType IRubyObject gets19 FormalParameter ReferenceType ThreadContext context LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator result MethodInvocation MemberReference runtime MethodInvocation MemberReference runtime separator getline IfStatement MethodInvocation ! result isNil StatementExpression MethodInvocation context MethodInvocation MemberReference result setLastLine getCurrentScope ReturnStatement MemberReference result	1
MethodDeclaration Modifier public ReferenceType IRubyObject ReturnStatement MethodInvocation MethodInvocation getRuntime MethodInvocation value dup newString	0
MethodDeclaration Modifier public ReferenceType ReturnStatement This	0
MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType Block block ReturnStatement MethodInvocation body MemberReference context MemberReference arg0 MemberReference arg1 MemberReference MemberReference type MemberReference block call	0
MethodDeclaration Modifier public final ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType String name ReturnStatement MethodInvocation runtimeCache MemberReference context MemberReference name Literal 5	0
MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation MethodInvocation andNode getSecondNode MemberReference context Literal true compile	0
MethodDeclaration Modifier protected ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject caller FormalParameter ReferenceType RubyClass selfType FormalParameter ReferenceType Block block FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 FormalParameter ReferenceType IRubyObject arg3 LocalVariableDeclaration ReferenceType CacheEntry VariableDeclarator entry TernaryExpression BinaryOperation != MemberReference selfType Literal null MethodInvocation selfType MemberReference name MemberReference CacheEntry LocalVariableDeclaration ReferenceType DynamicMethod VariableDeclarator method MemberReference entry method IfStatement MethodInvocation MemberReference method MemberReference caller BlockStatement ReturnStatement MethodInvocation MemberReference context MemberReference self MemberReference name MemberReference method MemberReference arg1 MemberReference arg2 MemberReference arg3 MemberReference block StatementExpression Assignment MemberReference lastName MemberReference name = StatementExpression Assignment MemberReference cache MemberReference entry = ReturnStatement MethodInvocation method MemberReference context MemberReference self MemberReference selfType MemberReference name MemberReference arg1 MemberReference arg2 MemberReference arg3 MemberReference block call	1
MethodDeclaration Modifier public Annotation JRubyMethod ReferenceType IRubyObject type_parameters ReturnStatement MethodInvocation Java MethodInvocation getRuntime MethodInvocation constructor getInstance	1
MethodDeclaration Modifier public ReferenceType Operand FormalParameter Modifier final ReferenceType Colon2Node iVisited FormalParameter ReferenceType IR_Scope s LocalVariableDeclaration ReferenceType Node VariableDeclarator leftNode MethodInvocation iVisited getLeftNode LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator name MethodInvocation iVisited getName IfStatement BinaryOperation == MemberReference leftNode Literal null BlockStatement ReturnStatement MethodInvocation MemberReference s MemberReference s MemberReference name IfStatement BinaryOperation instanceof MemberReference iVisited ReferenceType Colon2ConstNode BlockStatement LocalVariableDeclaration ReferenceType Operand VariableDeclarator module MethodInvocation MethodInvocation iVisited getLeftNode MemberReference s build IfStatement BinaryOperation instanceof MemberReference module ReferenceType MetaObject BlockStatement ReturnStatement MethodInvocation Cast ReferenceType MetaObject MemberReference module MemberReference s MemberReference name BlockStatement LocalVariableDeclaration ReferenceType Variable VariableDeclarator constVal MethodInvocation s getNewVariable StatementExpression MethodInvocation s ClassCreator ReferenceType MemberReference constVal MemberReference module MemberReference name addInstr ReturnStatement MemberReference constVal IfStatement BinaryOperation instanceof MemberReference iVisited ReferenceType Colon2MethodNode BlockStatement LocalVariableDeclaration ReferenceType Colon2MethodNode VariableDeclarator Cast ReferenceType Colon2MethodNode MemberReference iVisited LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Operand VariableDeclarator args MethodInvocation Literal null MemberReference s setupCallArgs LocalVariableDeclaration ReferenceType Operand VariableDeclarator block MethodInvocation Literal null MemberReference s setupCallClosure LocalVariableDeclaration ReferenceType Variable VariableDeclarator callResult MethodInvocation s getNewVariable LocalVariableDeclaration ReferenceType IR_Instr VariableDeclarator callInstr ClassCreator ReferenceType CALL_Instr MemberReference callResult ClassCreator ReferenceType MethAddr MethodInvocation getName MethodInvocation args ArrayCreator ReferenceType Operand MethodInvocation args size toArray MemberReference block StatementExpression MethodInvocation s MemberReference callInstr addInstr ReturnStatement MemberReference callResult BlockStatement ThrowStatement ClassCreator ReferenceType NotCompilableException BinaryOperation + Literal "Not " MemberReference iVisited	1
MethodDeclaration Modifier public ReferenceType Object case192_line785 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression MethodInvocation Literal "constant re-assignment" yyerror ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal Literal "<<" ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType RubyString FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject other IfStatement BinaryOperation instanceof MemberReference other ReferenceType RubyFixnum BlockStatement LocalVariableDeclaration ReferenceType Encoding VariableDeclarator enc MemberReference value encoding LocalVariableDeclaration BasicType int VariableDeclarator c MethodInvocation RubyNumeric MemberReference other num2int LocalVariableDeclaration BasicType int VariableDeclarator cl MethodInvocation MethodInvocation context getRuntime MemberReference enc MemberReference c codeLength StatementExpression MethodInvocation BinaryOperation + MemberReference value realSize MemberReference cl StatementExpression MethodInvocation enc MemberReference c MemberReference value bytes BinaryOperation + MemberReference value begin MemberReference value realSize codeToMbc StatementExpression Assignment MemberReference value realSize MemberReference cl += ReturnStatement This ReturnStatement MethodInvocation MemberReference other	0
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context LocalVariableDeclaration ReferenceType JavaArray VariableDeclarator javaArray ClassCreator ReferenceType JavaArray MethodInvocation getRuntime MethodInvocation Array MethodInvocation javaClass Literal 0 newInstance LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator proxyClass Cast ReferenceType RubyClass MethodInvocation Java MemberReference javaArray MethodInvocation array_class get_proxy_class LocalVariableDeclaration ReferenceType ArrayJavaProxy VariableDeclarator proxy ClassCreator ReferenceType ArrayJavaProxy MethodInvocation context getRuntime MemberReference proxyClass StatementExpression MethodInvocation proxy MemberReference javaArray ReturnStatement MemberReference proxy	1
MethodDeclaration Modifier public ReferenceType Iterator iterator ReturnStatement ClassCreator ReferenceType MemberReference view	0
MethodDeclaration Modifier public ReferenceType BigInteger getValue ReturnStatement MemberReference value	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression MethodInvocation support BinaryOperation + MethodInvocation support getInSingle Literal 1 setInSingle StatementExpression MethodInvocation support pushLocalScope StatementExpression MethodInvocation lexer MemberReference LexState EXPR_END setState ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public ReferenceType RubyArray FormalParameter ReferenceType ThreadContext context FormalParameter BasicType boolean LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator array MethodInvocation runtime newArray LocalVariableDeclaration ReferenceType RubyModule VariableDeclarator objectClass MethodInvocation runtime getObject IfStatement MemberReference BlockStatement IfStatement BinaryOperation || BinaryOperation == MethodInvocation MethodInvocation getModule getRuntime This BinaryOperation == MemberReference objectClass This BlockStatement StatementExpression MethodInvocation array MethodInvocation objectClass addAll BlockStatement LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType String VariableDeclarator names ClassCreator ReferenceType HashSet TypeArgument ReferenceType String ForStatement ForControl VariableDeclaration ReferenceType RubyModule VariableDeclarator module This BinaryOperation && BinaryOperation != MemberReference module Literal null BinaryOperation != MemberReference module MemberReference objectClass Assignment MemberReference module MethodInvocation module getSuperClass = BlockStatement StatementExpression MethodInvocation names MethodInvocation module addAll StatementExpression MethodInvocation array MemberReference names addAll BlockStatement IfStatement BinaryOperation || BinaryOperation == MethodInvocation MethodInvocation getModule getRuntime This BinaryOperation == MemberReference objectClass This BlockStatement StatementExpression MethodInvocation array MethodInvocation objectClass addAll BlockStatement StatementExpression MethodInvocation array MethodInvocation addAll ReturnStatement MemberReference array	1
MethodDeclaration Modifier public ReferenceType String getNewConstant FormalParameter ReferenceType String type FormalParameter ReferenceType String name_prefix FormalParameter ReferenceType Object init LocalVariableDeclaration ReferenceType VariableDeclarator cv MethodInvocation getClassVisitor LocalVariableDeclaration ReferenceType String VariableDeclarator realName MethodInvocation StatementExpression MethodInvocation cv MethodInvocation visitEnd MemberReference ACC_PRIVATE MemberReference realName MemberReference type Literal null Literal null visitField IfStatement BinaryOperation != MemberReference init Literal null BlockStatement StatementExpression MethodInvocation initMethod MemberReference THIS aload StatementExpression MethodInvocation initMethod MemberReference init ldc StatementExpression MethodInvocation initMethod MethodInvocation getClassname MemberReference realName MemberReference type putfield ReturnStatement MemberReference realName	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair frame Literal true ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg FormalParameter ReferenceType Block block ReturnStatement TernaryExpression MethodInvocation block isGiven MethodInvocation MemberReference context MemberReference arg MemberReference block MethodInvocation MethodInvocation context getRuntime This Literal MemberReference arg enumeratorize	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair rest Literal true ReferenceType RubyModule FormalParameter ReferenceType IRubyObject args StatementExpression MethodInvocation MethodInvocation MemberReference args MemberReference PRIVATE setMethodVisibility getMetaClass ReturnStatement This	1
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType NodeVisitor iVisitor ReturnStatement MethodInvocation iVisitor This	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal Literal ElementValuePair required Literal 1 ElementValuePair optional Literal 1 ElementValuePair meta Literal true ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType RubyString quote FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration Modifier final ReferenceType KCode VariableDeclarator code IfStatement BinaryOperation || BinaryOperation == MemberReference args length Literal 1 MemberReference ArraySelector Literal 1 MethodInvocation isNil args BlockStatement StatementExpression Assignment MemberReference code MethodInvocation runtime getKCode = BlockStatement StatementExpression Assignment MemberReference code MethodInvocation KCode MemberReference runtime MemberReference ArraySelector Literal 1 MethodInvocation toString args create = LocalVariableDeclaration ReferenceType RubyString VariableDeclarator src MemberReference ArraySelector Literal 0 MethodInvocation convertToString args LocalVariableDeclaration ReferenceType RubyString VariableDeclarator dst MethodInvocation RubyString MemberReference runtime MethodInvocation MethodInvocation src getByteList MethodInvocation code getEncoding quote StatementExpression MethodInvocation dst MemberReference src infectBy ReturnStatement MemberReference dst	0
MethodDeclaration Modifier public Annotation Override ReferenceType Arity ReturnStatement MethodInvocation Arity noArguments	0
MethodDeclaration Modifier public synchronized static ReferenceType CallSite FormalParameter ReferenceType String name IfStatement MethodInvocation name Literal equals ReturnStatement ClassCreator ReferenceType IfStatement MemberReference RubyInstanceConfig ReturnStatement MethodInvocation MemberReference name getFastOpsCallSite ReturnStatement ClassCreator ReferenceType NormalCachingCallSite MemberReference name	1
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 LocalVariableDeclaration ReferenceType DynamicMethod VariableDeclarator method MethodInvocation MemberReference name searchMethod IfStatement MethodInvocation MemberReference method BlockStatement ReturnStatement MethodInvocation RuntimeHelpers MemberReference context MemberReference self MethodInvocation method getVisibility MemberReference name MemberReference CallType FUNCTIONAL MemberReference arg0 MemberReference arg1 MemberReference arg2 MemberReference Block NULL_BLOCK ReturnStatement MethodInvocation method MemberReference context MemberReference self This MemberReference name MemberReference arg0 MemberReference arg1 MemberReference arg2 call	0
MethodDeclaration Modifier public static ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime ReturnStatement MethodInvocation MemberReference runtime MethodInvocation runtime	0
MethodDeclaration Modifier public ReferenceType RubyClass ReturnStatement MemberReference	0
MethodDeclaration Modifier public warning FormalParameter ReferenceType ID id FormalParameter ReferenceType String fileName FormalParameter BasicType int lineNumber FormalParameter ReferenceType String message FormalParameter ReferenceType Object data AssertStatement MethodInvocation isVerbose StatementExpression MethodInvocation MemberReference id MemberReference fileName MemberReference lineNumber MemberReference message MemberReference data warn	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType AssignedName other ReturnStatement BinaryOperation && BinaryOperation != MemberReference other Literal null BinaryOperation == MemberReference value MemberReference value	0
MethodDeclaration Modifier public final ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType RubyClass ReturnStatement ClassCreator ReferenceType Struct MemberReference runtime MemberReference	1
MethodDeclaration Modifier public static ReferenceType RubyFixnum FormalParameter ReferenceType Ruby runtime ReturnStatement MemberReference runtime ArraySelector BinaryOperation + MemberReference Literal 3	0
MethodDeclaration Modifier public static ReferenceType Arity fixed FormalParameter BasicType int arity AssertStatement BinaryOperation >= MemberReference arity Literal 0 ReturnStatement MethodInvocation MemberReference arity createArity	1
MethodDeclaration Modifier public Annotation JRubyMethod ReferenceType IRubyObject LocalVariableDeclaration ReferenceType Method VariableDeclarator meth MethodInvocation MethodInvocation javaClass IfStatement BinaryOperation != MemberReference meth Literal null BlockStatement ReturnStatement ClassCreator ReferenceType JavaMethod MethodInvocation getRuntime MemberReference meth ReturnStatement MethodInvocation MethodInvocation getNil getRuntime	1
MethodDeclaration Modifier public BasicType long ReturnStatement MethodInvocation get	0
MethodDeclaration Modifier public Annotation Override FormalParameter ReferenceType Node node FormalParameter ReferenceType BodyCompiler context FormalParameter BasicType boolean expr StatementExpression MethodInvocation Cast ReferenceType Hash19Node MemberReference node MemberReference context MemberReference expr	0
MethodDeclaration Modifier public static ReferenceType BigDecimal bigSqrt FormalParameter ReferenceType BigDecimal squarD FormalParameter ReferenceType MathContext rootMC LocalVariableDeclaration BasicType int VariableDeclarator sign MethodInvocation squarD signum IfStatement BinaryOperation == MemberReference sign Literal - 1 BlockStatement ThrowStatement ClassCreator ReferenceType ArithmeticException BinaryOperation + Literal root of a negative number: " MemberReference squarD IfStatement BinaryOperation == MemberReference sign Literal 0 BlockStatement ReturnStatement MethodInvocation squarD MemberReference rootMC round LocalVariableDeclaration BasicType int VariableDeclarator prec MethodInvocation rootMC IfStatement BinaryOperation == MemberReference prec Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal roots won't have precision = 0" LocalVariableDeclaration BasicType int VariableDeclarator Literal 62 LocalVariableDeclaration BasicType int VariableDeclarator nInit Literal 16 LocalVariableDeclaration ReferenceType MathContext VariableDeclarator nMC ClassCreator ReferenceType MathContext Literal 18 MemberReference RoundingMode HALF_DOWN LocalVariableDeclaration ReferenceType BigDecimal VariableDeclarator x Literal null VariableDeclarator e Literal null LocalVariableDeclaration ReferenceType BigDecimal VariableDeclarator v Literal null VariableDeclarator g Literal null LocalVariableDeclaration ReferenceType BigInteger VariableDeclarator bi MethodInvocation squarD unscaledValue LocalVariableDeclaration BasicType int VariableDeclarator biLen MethodInvocation bi LocalVariableDeclaration BasicType int VariableDeclarator shift MethodInvocation Math Literal 0 BinaryOperation + BinaryOperation - MemberReference biLen MemberReference TernaryExpression BinaryOperation == BinaryOperation % MemberReference biLen Literal 2 Literal 0 Literal 0 Literal 1 max StatementExpression Assignment MemberReference bi MethodInvocation bi MemberReference shift shiftRight = LocalVariableDeclaration BasicType double VariableDeclarator root MethodInvocation Math MethodInvocation bi doubleValue sqrt LocalVariableDeclaration ReferenceType BigDecimal VariableDeclarator ClassCreator ReferenceType BigDecimal MethodInvocation BinaryOperation / MemberReference shift Literal 2 shiftLeft LocalVariableDeclaration BasicType int VariableDeclarator scale MethodInvocation squarD scale IfStatement BinaryOperation == BinaryOperation % MemberReference scale Literal 2 Literal 1 BlockStatement StatementExpression Assignment MemberReference root MemberReference *= StatementExpression Assignment MemberReference scale Cast BasicType int MethodInvocation Math BinaryOperation / MemberReference scale Literal 2. floor = StatementExpression Assignment MemberReference x ClassCreator ReferenceType BigDecimal MemberReference root MemberReference nMC = StatementExpression Assignment MemberReference x MethodInvocation x MemberReference MemberReference nMC multiply = IfStatement BinaryOperation != MemberReference scale Literal 0 BlockStatement StatementExpression Assignment MemberReference x MethodInvocation x MemberReference scale movePointLeft = IfStatement BinaryOperation < MemberReference prec MemberReference nInit BlockStatement ReturnStatement MethodInvocation x MemberReference rootMC round StatementExpression Assignment MemberReference v MethodInvocation BigDecimal.ONE MethodInvocation MemberReference x multiply MemberReference nMC = LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Integer VariableDeclarator nPrecs ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Integer AssertStatement BinaryOperation > MemberReference nInit Literal 3 Literal ending ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator m BinaryOperation + MemberReference prec Literal 1 BinaryOperation > MemberReference m MemberReference nInit Assignment MemberReference m BinaryOperation + BinaryOperation / MemberReference m Literal 2 TernaryExpression BinaryOperation > MemberReference m Literal 100 Literal 1 Literal 2 = BlockStatement StatementExpression MethodInvocation nPrecs MemberReference m add ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i BinaryOperation - MethodInvocation nPrecs size Literal 1 BinaryOperation > MemberReference i Literal - 1 MemberReference -- i BlockStatement StatementExpression Assignment MemberReference nMC ClassCreator ReferenceType MathContext MethodInvocation nPrecs MemberReference i get TernaryExpression BinaryOperation == BinaryOperation % MemberReference i Literal 2 Literal 1 MemberReference RoundingMode HALF_UP MemberReference RoundingMode HALF_DOWN = StatementExpression Assignment MemberReference e MethodInvocation squarD MethodInvocation x MemberReference x MemberReference nMC multiply MemberReference nMC subtract = IfStatement BinaryOperation != MemberReference i Literal 0 BlockStatement StatementExpression Assignment MemberReference x MethodInvocation x MethodInvocation e MemberReference v MemberReference nMC multiply add = BlockStatement StatementExpression Assignment MemberReference x MethodInvocation x MethodInvocation e MemberReference v MemberReference rootMC multiply MemberReference rootMC add = BreakStatement StatementExpression Assignment MemberReference g MethodInvocation BigDecimal.ONE MethodInvocation MethodInvocation MemberReference v MemberReference nMC multiply MemberReference x multiply subtract = StatementExpression Assignment MemberReference v MethodInvocation v MethodInvocation g MemberReference v MemberReference nMC multiply add = ReturnStatement MemberReference x	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ReferenceType IRubyObject rewind IfStatement BinaryOperation && MethodInvocation ! isTaint BinaryOperation >= MethodInvocation MethodInvocation getSafeLevel getRuntime Literal 4 ThrowStatement MethodInvocation MethodInvocation Literal "Insecure: can't close" newSecurityError getRuntime StatementExpression MethodInvocation StatementExpression Assignment MemberReference pos Literal 0 = ReturnStatement This	1
MethodDeclaration Modifier public final ReferenceType FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType String descriptor ReturnStatement MethodInvocation runtimeCache This MemberReference context Literal 9 MemberReference descriptor	0
MethodDeclaration Modifier public static ReferenceType RubyArray FormalParameter ReferenceType IRubyObject value LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator tmp MethodInvocation value checkArrayType IfStatement MethodInvocation tmp isNil BlockStatement LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation value getRuntime IfStatement BinaryOperation != MethodInvocation value MethodInvocation Literal "to_a" searchMethod MethodInvocation getImplementationClass getMetaClass MethodInvocation runtime BlockStatement StatementExpression Assignment MemberReference value MethodInvocation value MethodInvocation runtime getCurrentContext Literal "to_a" callMethod = IfStatement BinaryOperation instanceof MemberReference value ReferenceType RubyArray ThrowStatement MethodInvocation runtime Literal "`to_a' did not return Array" newTypeError ReturnStatement Cast ReferenceType RubyArray MemberReference value BlockStatement ReturnStatement MethodInvocation runtime MemberReference value newArray ReturnStatement Cast ReferenceType RubyArray MemberReference tmp	1
MethodDeclaration Modifier private static ReferenceType List TypeArgument ReferenceType String FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType String path LocalVariableDeclaration Modifier final ReferenceType JRubyFile VariableDeclarator directory MethodInvocation JRubyFile MethodInvocation runtime getCurrentDirectory MemberReference path create LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType String VariableDeclarator MethodInvocation MemberReference directory getContents StatementExpression MethodInvocation Literal 0 Literal "." add StatementExpression MethodInvocation Literal 1 Literal ".." add ReturnStatement MemberReference	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "initialize" ElementValuePair visibility MemberReference Visibility PRIVATE ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject initialize_m19 FormalParameter ReferenceType IRubyObject arg IfStatement BinaryOperation instanceof MemberReference arg ReferenceType RubyRegexp ReturnStatement MethodInvocation Cast ReferenceType RubyRegexp MemberReference arg ReturnStatement MethodInvocation MethodInvocation arg convertToString Literal 0 initializeCommon19	1
MethodDeclaration Modifier public StatementExpression MethodInvocation MemberReference Literal end" eval StatementExpression MethodInvocation MemberReference Literal end" eval ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i Literal 2 MemberReference ++ i BlockStatement StatementExpression MethodInvocation MemberReference Literal "foo" eval ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i Literal 2 MemberReference ++ i BlockStatement StatementExpression MethodInvocation MemberReference Literal "foo" eval	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal Literal "compile" ElementValuePair required Literal 1 ElementValuePair optional Literal 2 ElementValuePair meta Literal true ReferenceType RubyRegexp newInstance FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator Cast ReferenceType RubyClass MemberReference recv LocalVariableDeclaration ReferenceType RubyRegexp VariableDeclarator re Cast ReferenceType RubyRegexp MethodInvocation StatementExpression MethodInvocation re MemberReference args MemberReference Block NULL_BLOCK ReturnStatement MemberReference re	0
MethodDeclaration Modifier public start StatementExpression MethodInvocation MethodInvocation visitCode getMethodVisitor	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ReferenceType IRubyObject size_p LocalVariableDeclaration BasicType long VariableDeclarator size MethodInvocation IfStatement BinaryOperation == MemberReference size Literal 0 ReturnStatement MethodInvocation MethodInvocation getNil getRuntime ReturnStatement MethodInvocation MethodInvocation MemberReference size newFixnum getRuntime	1
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement BinaryOperation + Literal TernaryExpression MethodInvocation isBlank Literal "" MethodInvocation MemberReference toString	0
MethodDeclaration Modifier public final FormalParameter BasicType long offset FormalParameter BasicType double value StatementExpression MethodInvocation MemberReference offset Literal 8 checkBounds StatementExpression MethodInvocation BinaryOperation + MemberReference address MemberReference offset MemberReference value	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType String ReturnStatement ClassCreator ReferenceType ArrayList TypeArgument ReferenceType String MethodInvocation MethodInvocation keySet getClassVariablesForRead	1
MethodDeclaration Modifier public static Annotation Deprecated ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 FormalParameter ReferenceType IRubyObject arg3 ReturnStatement MethodInvocation MethodInvocation recv getRuntime MemberReference arg1 MemberReference arg2 MemberReference arg3	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType IRubyObject offset FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject index ReturnStatement MethodInvocation MemberReference context MethodInvocation RubyNumeric MemberReference index num2int Literal false	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "first" ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject first FormalParameter ReferenceType ThreadContext context ReturnStatement MemberReference begin	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support MethodInvocation Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals getPosition Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals literal_concat = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier private BasicType boolean FormalParameter ReferenceType String arg IfStatement BinaryOperation != Literal null MemberReference arg BlockStatement ReturnStatement MethodInvocation ! MemberReference arg ReturnStatement Literal true	0
MethodDeclaration Modifier public Annotation Override ReferenceType File getAbsoluteFile ReturnStatement This	0
MethodDeclaration Modifier public final FormalParameter BasicType long offset FormalParameter BasicType long value IfStatement BinaryOperation == MemberReference LONG_SIZE Literal 32 BlockStatement StatementExpression MethodInvocation MemberReference offset Cast BasicType int MemberReference value BlockStatement StatementExpression MethodInvocation MemberReference offset MemberReference value putLong	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType NodeVisitor ReturnStatement MethodInvocation This	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "autoload?" ElementValuePair required Literal 1 ElementValuePair module Literal true ElementValuePair visibility MemberReference PRIVATE ReferenceType IRubyObject autoload_p FormalParameter ReferenceType ThreadContext context FormalParameter Modifier final ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject symbol LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration ReferenceType RubyModule VariableDeclarator module TernaryExpression BinaryOperation instanceof MemberReference recv ReferenceType RubyModule Cast ReferenceType RubyModule MemberReference recv MethodInvocation runtime getObject LocalVariableDeclaration ReferenceType String VariableDeclarator name BinaryOperation + BinaryOperation + MethodInvocation module getName Literal "::" MethodInvocation symbol asJavaString LocalVariableDeclaration ReferenceType VariableDeclarator autoloadMethod MethodInvocation runtime MethodInvocation MemberReference name IfStatement BinaryOperation == MemberReference autoloadMethod Literal null ReturnStatement MethodInvocation runtime getNil ReturnStatement MethodInvocation runtime MethodInvocation autoloadMethod file newString	1
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType other ReturnStatement BinaryOperation < MemberReference value MemberReference other value	0
MethodDeclaration Modifier public Annotation Override printStackTrace FormalParameter ReferenceType PrintWriter pw LocalVariableDeclaration ReferenceType ByteArrayOutputStream VariableDeclarator baos ClassCreator ReferenceType ByteArrayOutputStream StatementExpression MethodInvocation ClassCreator ReferenceType PrintStream MemberReference baos printStackTrace StatementExpression MethodInvocation pw MethodInvocation baos toString print	0
MethodDeclaration Modifier protected ReferenceType Class findClass FormalParameter ReferenceType String name ClassNotFoundException IfStatement MethodInvocation name Literal equals BlockStatement LocalVariableDeclaration BasicType byte VariableDeclarator classBytes MethodInvocation MemberReference message createClass ReturnStatement MethodInvocation MemberReference name MemberReference classBytes Literal 0 MemberReference classBytes length defineClass ReturnStatement SuperMethodInvocation MemberReference name findClass	1
MethodDeclaration Modifier public synchronized Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal "push" Literal "<<" Literal ReferenceType IRubyObject push FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject value StatementExpression MethodInvocation MemberReference context checkShutdown StatementExpression MethodInvocation entries MemberReference value addLast StatementExpression MethodInvocation ReturnStatement MethodInvocation context MethodInvocation getNil getRuntime	1
MethodDeclaration Modifier public ReferenceType ListNode getOptArgs ReturnStatement MemberReference optArgs	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "to_s" ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject t ReturnStatement MethodInvocation t MethodInvocation Literal "true" newString getRuntime	1
MethodDeclaration Modifier public ReferenceType String getTypeInstance FormalParameter BasicType double d ReturnStatement Literal "double"	0
MethodDeclaration Modifier public FormalParameter BasicType int index FormalParameter BasicType int depth IfStatement BinaryOperation == MemberReference depth Literal 0 BlockStatement StatementExpression MethodInvocation MemberReference index BlockStatement StatementExpression MethodInvocation MemberReference depth MemberReference index	0
MethodDeclaration Modifier public ReferenceType String getTypeInstance FormalParameter ReferenceType BigInteger b ReturnStatement Literal	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType FormalParameter ReferenceType Block ReferenceType Type type ReturnStatement MethodInvocation MemberReference context Literal null MemberReference MemberReference type yield	0
MethodDeclaration Modifier private final ReferenceType IRubyObject eltOk FormalParameter BasicType long offset TryStatement ReturnStatement MemberReference ArraySelector BinaryOperation + MemberReference begin Cast BasicType int MemberReference offset values CatchClause CatchClauseParameter ArrayIndexOutOfBoundsException e StatementExpression MethodInvocation concurrentModification ReturnStatement MethodInvocation MethodInvocation getNil getRuntime	1
MethodDeclaration Modifier public BasicType long ReturnStatement MethodInvocation get	0
MethodDeclaration Modifier public ReferenceType Object case233_line907 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support MethodInvocation Cast ReferenceType ListNode MemberReference ArraySelector BinaryOperation + Literal - 4 MemberReference yyTop yyVals getPosition MethodInvocation support MethodInvocation Cast ReferenceType ListNode MemberReference ArraySelector BinaryOperation + Literal - 4 MemberReference yyTop yyVals getPosition ClassCreator ReferenceType HashNode MethodInvocation getPosition Cast ReferenceType ListNode MemberReference ArraySelector BinaryOperation + Literal - 4 MemberReference yyTop yyVals newArrayNode Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals arg_concat = StatementExpression Assignment MemberReference yyVal MethodInvocation support Cast ReferenceType Node MemberReference yyVal Cast ReferenceType BlockPassNode MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals arg_blk_pass = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public Annotation Override ReferenceType RubyArray convertToArray ReturnStatement This	0
MethodDeclaration Modifier public final FormalParameter BasicType byte buffer FormalParameter BasicType int offset FormalParameter BasicType float value StatementExpression MethodInvocation MemberReference buffer MemberReference offset MethodInvocation Float MemberReference value	0
MethodDeclaration Modifier private static BasicType double FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType IRubyObject o IfStatement BinaryOperation instanceof MemberReference o ReferenceType RubyString BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator str MethodInvocation o asJavaString LocalVariableDeclaration BasicType double VariableDeclarator d MethodInvocation RubyNumeric MethodInvocation o num2dbl IfStatement MethodInvocation str Literal matches BlockStatement ReturnStatement MemberReference d BlockStatement ThrowStatement MethodInvocation runtime Literal item not a newTypeError ReturnStatement MethodInvocation RubyKernel MethodInvocation MemberReference o MemberReference o	0
MethodDeclaration addMethod FormalParameter ReferenceType Method method FormalParameter ReferenceType Class TypeArgument ? javaClass IfStatement BinaryOperation == MemberReference methods Literal null BlockStatement StatementExpression Assignment MemberReference methods ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Method Literal 4 = IfStatement MethodInvocation ! Ruby isSecurityRestricted BlockStatement TryStatement StatementExpression MethodInvocation method Literal true setAccessible CatchClause CatchClauseParameter SecurityException e StatementExpression MethodInvocation methods MemberReference method add StatementExpression Assignment MemberReference BinaryOperation == MemberReference javaClass MethodInvocation method getDeclaringClass |=	1
MethodDeclaration Modifier private ReferenceType InputStream getCodeResourceAsStream FormalParameter ReferenceType String name IfStatement BinaryOperation == MemberReference name Literal null BlockStatement ReturnStatement Literal null TryStatement LocalVariableDeclaration Modifier final ReferenceType URL VariableDeclarator directURL ClassCreator ReferenceType URL MethodInvocation MemberReference name ReturnStatement MethodInvocation directURL openStream CatchClause CatchClauseParameter IOException e ReturnStatement ClassReference MethodInvocation getClassLoader MethodInvocation MemberReference name getResourceAsStream ReferenceType JRubyApplet	1
MethodDeclaration Modifier private final ReferenceType IRubyObject invoke FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 LocalVariableDeclaration BasicType long VariableDeclarator retval MethodInvocation invoker MemberReference function MethodInvocation c1 MemberReference context MemberReference arg1 longValue MethodInvocation c2 MemberReference context MemberReference arg2 longValue ReturnStatement MethodInvocation resultConverter MemberReference context MemberReference retval fromNative	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal Annotation Override ReferenceType IRubyObject dup ReturnStatement SuperMethodInvocation dup	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal Annotation Override ReferenceType RubyFixnum hash LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation getRuntime ReturnStatement MethodInvocation RubyFixnum MemberReference runtime MethodInvocation MemberReference runtime newFixnum	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ReferenceType IRubyObject ReturnStatement MethodInvocation MethodInvocation getNil getRuntime	0
MethodDeclaration Modifier private StatementExpression MethodInvocation config MethodInvocation MethodInvocation config println getOutput	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ReferenceType IRubyObject ReturnStatement MethodInvocation MethodInvocation BinaryOperation * MethodInvocation stat Literal 1000 getRuntime	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject setValue FormalParameter BasicType int offset FormalParameter ReferenceType IRubyObject value FormalParameter BasicType int depth IfStatement BinaryOperation > MemberReference depth Literal 0 BlockStatement AssertStatement BinaryOperation != MemberReference parent Literal null Literal "If depth > 0, then parent should not be null" ReturnStatement MethodInvocation parent MemberReference offset MemberReference value BinaryOperation - MemberReference depth Literal 1 setValue BlockStatement AssertStatement BinaryOperation < MemberReference offset MemberReference SIZE MemberReference SIZE_ERROR SwitchStatement MemberReference offset SwitchStatementCase Literal 0 ReturnStatement Assignment MemberReference variableValueZero MemberReference value = SwitchStatementCase Literal 1 ReturnStatement Assignment MemberReference variableValueOne MemberReference value = SwitchStatementCase Literal 2 ReturnStatement Assignment MemberReference variableValueTwo MemberReference value = SwitchStatementCase Literal 3 ReturnStatement Assignment MemberReference variableValueThree MemberReference value = SwitchStatementCase ThrowStatement ClassCreator ReferenceType RuntimeException MemberReference SIZE_ERROR	1
MethodDeclaration Modifier public StatementExpression MethodInvocation MethodInvocation RubyFixnum MemberReference runtime zero MethodInvocation MemberReference to_i assertEquals	0
MethodDeclaration Modifier public ReferenceType Node getThenBody ReturnStatement MemberReference	0
MethodDeclaration Modifier public Annotation Override FormalParameter ReferenceType List TypeArgument ReferenceType Variable l ForStatement EnhancedForControl VariableDeclaration ReferenceType Operand VariableDeclarator o MemberReference StatementExpression MethodInvocation o MemberReference l	1
MethodDeclaration Modifier public FormalParameter BasicType int StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public static BasicType int FormalParameter BasicType long cr ReturnStatement Cast BasicType int BinaryOperation >>> MemberReference cr Literal 31	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair required Literal 1 ElementValuePair frame Literal true ReferenceType IRubyObject prec FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject receiver FormalParameter ReferenceType IRubyObject type FormalParameter ReferenceType Block block ReturnStatement MethodInvocation type MemberReference context Literal "induced_from" MemberReference receiver callMethod	0
MethodDeclaration Modifier private BasicType int parseNumber FormalParameter BasicType int c IOException StatementExpression Assignment MemberReference lex_state MemberReference LexState EXPR_END = StatementExpression MethodInvocation tokenBuffer Literal 0 setLength IfStatement BinaryOperation == MemberReference c Literal '-' BlockStatement StatementExpression MethodInvocation tokenBuffer Cast BasicType char MemberReference c append StatementExpression Assignment MemberReference c MethodInvocation src read = IfStatement BinaryOperation == MemberReference c Literal '+' BlockStatement StatementExpression Assignment MemberReference c MethodInvocation src read = LocalVariableDeclaration BasicType int VariableDeclarator nondigit Literal 0 IfStatement BinaryOperation == MemberReference c Literal '0' BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator startLen MethodInvocation tokenBuffer length SwitchStatement Assignment MemberReference c MethodInvocation src read = SwitchStatementCase Literal 'x' Literal 'X' StatementExpression Assignment MemberReference c MethodInvocation src read = IfStatement MethodInvocation MemberReference c isHexChar BlockStatement ForStatement ForControl Assignment MemberReference c MethodInvocation src read = BlockStatement IfStatement BinaryOperation == MemberReference c Literal '_' BlockStatement IfStatement BinaryOperation != MemberReference nondigit Literal '\0' BreakStatement StatementExpression Assignment MemberReference nondigit MemberReference c = IfStatement MethodInvocation MemberReference c isHexChar BlockStatement StatementExpression Assignment MemberReference nondigit Literal '\0' = StatementExpression MethodInvocation tokenBuffer Cast BasicType char MemberReference c append BlockStatement BreakStatement StatementExpression MethodInvocation src MemberReference c unread IfStatement BinaryOperation == MethodInvocation tokenBuffer length MemberReference startLen BlockStatement ThrowStatement ClassCreator ReferenceType SyntaxException MemberReference PID MethodInvocation getPosition MethodInvocation getCurrentLine Literal number without IfStatement BinaryOperation != MemberReference nondigit Literal '\0' BlockStatement ThrowStatement ClassCreator ReferenceType SyntaxException MemberReference PID TRAILING_UNDERSCORE_IN_NUMBER MethodInvocation getPosition MethodInvocation getCurrentLine Literal "Trailing '_' in number." StatementExpression Assignment MemberReference yaccValue MethodInvocation MethodInvocation tokenBuffer toString Literal 16 getInteger = ReturnStatement MemberReference Tokens tINTEGER SwitchStatementCase Literal 'b' Literal 'B' StatementExpression Assignment MemberReference c MethodInvocation src read = IfStatement BinaryOperation || BinaryOperation == MemberReference c Literal '0' BinaryOperation == MemberReference c Literal '1' BlockStatement ForStatement ForControl Assignment MemberReference c MethodInvocation src read = BlockStatement IfStatement BinaryOperation == MemberReference c Literal '_' BlockStatement IfStatement BinaryOperation != MemberReference nondigit Literal '\0' BreakStatement StatementExpression Assignment MemberReference nondigit MemberReference c = IfStatement BinaryOperation || BinaryOperation == MemberReference c Literal '0' BinaryOperation == MemberReference c Literal '1' BlockStatement StatementExpression Assignment MemberReference nondigit Literal '\0' = StatementExpression MethodInvocation tokenBuffer Cast BasicType char MemberReference c append BlockStatement BreakStatement StatementExpression MethodInvocation src MemberReference c unread IfStatement BinaryOperation == MethodInvocation tokenBuffer length MemberReference startLen BlockStatement ThrowStatement ClassCreator ReferenceType SyntaxException MemberReference PID EMPTY_BINARY_NUMBER MethodInvocation getPosition MethodInvocation getCurrentLine Literal "Binary number without digits." IfStatement BinaryOperation != MemberReference nondigit Literal '\0' BlockStatement ThrowStatement ClassCreator ReferenceType SyntaxException MemberReference PID TRAILING_UNDERSCORE_IN_NUMBER MethodInvocation getPosition MethodInvocation getCurrentLine Literal "Trailing '_' in number." StatementExpression Assignment MemberReference yaccValue MethodInvocation MethodInvocation tokenBuffer toString Literal 2 getInteger = ReturnStatement MemberReference Tokens tINTEGER SwitchStatementCase Literal 'd' Literal 'D' StatementExpression Assignment MemberReference c MethodInvocation src read = IfStatement MethodInvocation Character MemberReference c isDigit BlockStatement ForStatement ForControl Assignment MemberReference c MethodInvocation src read = BlockStatement IfStatement BinaryOperation == MemberReference c Literal '_' BlockStatement IfStatement BinaryOperation != MemberReference nondigit Literal '\0' BreakStatement StatementExpression Assignment MemberReference nondigit MemberReference c = IfStatement MethodInvocation Character MemberReference c isDigit BlockStatement StatementExpression Assignment MemberReference nondigit Literal '\0' = StatementExpression MethodInvocation tokenBuffer Cast BasicType char MemberReference c append BlockStatement BreakStatement StatementExpression MethodInvocation src MemberReference c unread IfStatement BinaryOperation == MethodInvocation tokenBuffer length MemberReference startLen BlockStatement ThrowStatement ClassCreator ReferenceType SyntaxException MemberReference PID EMPTY_BINARY_NUMBER MethodInvocation getPosition MethodInvocation getCurrentLine Literal "Binary number without digits." IfStatement BinaryOperation != MemberReference nondigit Literal '\0' BlockStatement ThrowStatement ClassCreator ReferenceType SyntaxException MemberReference PID TRAILING_UNDERSCORE_IN_NUMBER MethodInvocation getPosition MethodInvocation getCurrentLine Literal "Trailing '_' in number." StatementExpression Assignment MemberReference yaccValue MethodInvocation MethodInvocation tokenBuffer toString Literal 10 getInteger = ReturnStatement MemberReference Tokens tINTEGER SwitchStatementCase Literal 'o' Literal 'O' StatementExpression Assignment MemberReference c MethodInvocation src read = SwitchStatementCase Literal '0' Literal '1' Literal '2' Literal '3' Literal '4' Literal '5' Literal '6' Literal '7' Literal '_' ForStatement ForControl Assignment MemberReference c MethodInvocation src read = BlockStatement IfStatement BinaryOperation == MemberReference c Literal '_' BlockStatement IfStatement BinaryOperation != MemberReference nondigit Literal '\0' BreakStatement StatementExpression Assignment MemberReference nondigit MemberReference c = IfStatement BinaryOperation && BinaryOperation >= MemberReference c Literal '0' BinaryOperation <= MemberReference c Literal '7' BlockStatement StatementExpression Assignment MemberReference nondigit Literal '\0' = StatementExpression MethodInvocation tokenBuffer Cast BasicType char MemberReference c append BlockStatement BreakStatement IfStatement BinaryOperation > MethodInvocation tokenBuffer length MemberReference startLen BlockStatement StatementExpression MethodInvocation src MemberReference c unread IfStatement BinaryOperation != MemberReference nondigit Literal '\0' BlockStatement ThrowStatement ClassCreator ReferenceType SyntaxException MemberReference PID TRAILING_UNDERSCORE_IN_NUMBER MethodInvocation getPosition MethodInvocation getCurrentLine Literal "Trailing '_' in number." StatementExpression Assignment MemberReference yaccValue MethodInvocation MethodInvocation tokenBuffer toString Literal 8 getInteger = ReturnStatement MemberReference Tokens tINTEGER SwitchStatementCase Literal '8' Literal '9' ThrowStatement ClassCreator ReferenceType SyntaxException MemberReference PID MethodInvocation getPosition MethodInvocation getCurrentLine Literal "Illegal octal SwitchStatementCase Literal '.' Literal 'e' Literal 'E' StatementExpression MethodInvocation tokenBuffer Literal '0' append BreakStatement SwitchStatementCase StatementExpression MethodInvocation src MemberReference c unread StatementExpression Assignment MemberReference yaccValue ClassCreator ReferenceType FixnumNode MethodInvocation getPosition Literal 0 = ReturnStatement MemberReference Tokens tINTEGER LocalVariableDeclaration BasicType boolean VariableDeclarator seen_point Literal false LocalVariableDeclaration BasicType boolean VariableDeclarator seen_e Literal false ForStatement ForControl Assignment MemberReference c MethodInvocation src read = BlockStatement SwitchStatement MemberReference c SwitchStatementCase Literal '0' Literal '1' Literal '2' Literal '3' Literal '4' Literal '5' Literal '6' Literal '7' Literal '8' Literal '9' StatementExpression Assignment MemberReference nondigit Literal '\0' = StatementExpression MethodInvocation tokenBuffer Cast BasicType char MemberReference c append BreakStatement SwitchStatementCase Literal '.' IfStatement BinaryOperation != MemberReference nondigit Literal '\0' BlockStatement StatementExpression MethodInvocation src MemberReference c unread ThrowStatement ClassCreator ReferenceType SyntaxException MemberReference PID TRAILING_UNDERSCORE_IN_NUMBER MethodInvocation getPosition MethodInvocation getCurrentLine Literal "Trailing '_' in number." IfStatement BinaryOperation || MemberReference seen_point MemberReference seen_e BlockStatement StatementExpression MethodInvocation src MemberReference c unread ReturnStatement MethodInvocation MethodInvocation tokenBuffer toString Literal true MemberReference nondigit BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator c2 IfStatement MethodInvocation ! Character Assignment MemberReference c2 MethodInvocation src read = isDigit BlockStatement StatementExpression MethodInvocation src MemberReference c2 unread StatementExpression MethodInvocation src Literal '.' unread IfStatement BinaryOperation == MemberReference c Literal '_' BlockStatement BlockStatement StatementExpression Assignment MemberReference yaccValue MethodInvocation MethodInvocation tokenBuffer toString Literal 10 getInteger = ReturnStatement MemberReference Tokens tINTEGER BlockStatement StatementExpression MethodInvocation tokenBuffer Literal '.' append StatementExpression MethodInvocation tokenBuffer Cast BasicType char MemberReference c2 append StatementExpression Assignment MemberReference seen_point Literal true = StatementExpression Assignment MemberReference nondigit Literal '\0' = BreakStatement SwitchStatementCase Literal 'e' Literal 'E' IfStatement BinaryOperation != MemberReference nondigit Literal '\0' BlockStatement ThrowStatement ClassCreator ReferenceType SyntaxException MemberReference PID TRAILING_UNDERSCORE_IN_NUMBER MethodInvocation getPosition MethodInvocation getCurrentLine Literal "Trailing '_' in number." IfStatement MemberReference seen_e BlockStatement StatementExpression MethodInvocation src MemberReference c unread ReturnStatement MethodInvocation MethodInvocation tokenBuffer toString Literal true MemberReference nondigit BlockStatement StatementExpression MethodInvocation tokenBuffer Cast BasicType char MemberReference c append StatementExpression Assignment MemberReference seen_e Literal true = StatementExpression Assignment MemberReference nondigit MemberReference c = StatementExpression Assignment MemberReference c MethodInvocation src read = IfStatement BinaryOperation || BinaryOperation == MemberReference c Literal '-' BinaryOperation == MemberReference c Literal '+' BlockStatement StatementExpression MethodInvocation tokenBuffer Cast BasicType char MemberReference c append StatementExpression Assignment MemberReference nondigit MemberReference c = BlockStatement StatementExpression MethodInvocation src MemberReference c unread BreakStatement SwitchStatementCase Literal '_' IfStatement BinaryOperation != MemberReference nondigit Literal '\0' BlockStatement ThrowStatement ClassCreator ReferenceType SyntaxException MemberReference PID TRAILING_UNDERSCORE_IN_NUMBER MethodInvocation getPosition MethodInvocation getCurrentLine Literal "Trailing '_' in number." StatementExpression Assignment MemberReference nondigit MemberReference c = BreakStatement SwitchStatementCase StatementExpression MethodInvocation src MemberReference c unread ReturnStatement MethodInvocation MethodInvocation tokenBuffer toString BinaryOperation || MemberReference seen_e MemberReference seen_point MemberReference nondigit	1
MethodDeclaration Modifier public ReferenceType Object case316_line1193 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop LocalVariableDeclaration ReferenceType Node VariableDeclarator body Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType DefsNode MethodInvocation Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 8 MemberReference yyTop yyVals getPosition Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 7 MemberReference yyTop yyVals ClassCreator ReferenceType ArgumentNode Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 4 MemberReference yyTop yyVals Cast ReferenceType String Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 4 MemberReference yyTop yyVals Cast ReferenceType ArgsNode MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals MethodInvocation support getCurrentScope MemberReference body = StatementExpression MethodInvocation support popCurrentScope StatementExpression MethodInvocation support BinaryOperation - MethodInvocation support getInSingle Literal 1 setInSingle ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "convert" ElementValuePair meta Literal true ElementValuePair visibility MemberReference Visibility PRIVATE ReferenceType IRubyObject convert FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject a1 ReturnStatement MethodInvocation MemberReference context MemberReference recv MemberReference a1 MethodInvocation context MethodInvocation getNil getRuntime	0
MethodDeclaration Modifier public ReferenceType Object newInstance FormalParameter ReferenceType Object args FormalParameter ReferenceType JavaProxyInvocationHandler handler IllegalArgumentException InstantiationException IllegalAccessException InvocationTargetException IfStatement BinaryOperation != MemberReference args length MemberReference length BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "wrong number of LocalVariableDeclaration ReferenceType Object VariableDeclarator realArgs ArrayCreator ReferenceType Object BinaryOperation + MemberReference args length Literal 1 StatementExpression MethodInvocation System MemberReference args Literal 0 MemberReference realArgs Literal 0 MemberReference args length arraycopy StatementExpression Assignment MemberReference ArraySelector MemberReference args length realArgs MemberReference handler = ReturnStatement MethodInvocation MemberReference realArgs newInstance	1
MethodDeclaration Modifier private ReferenceType IRubyObject iconv FormalParameter ReferenceType IRubyObject str FormalParameter BasicType int start FormalParameter BasicType int end IfStatement MethodInvocation str isNil BlockStatement StatementExpression MethodInvocation reset StatementExpression MethodInvocation reset ReturnStatement MethodInvocation RubyString MethodInvocation getRuntime newEmptyString ReturnStatement MethodInvocation MethodInvocation str convertToString MemberReference start MemberReference end	0
MethodDeclaration Modifier private BadDescriptorException IOException IfStatement BinaryOperation != BinaryOperation & MemberReference mode MemberReference Literal 0 BlockStatement StatementExpression MethodInvocation MethodInvocation getWriteStream fflush	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support MethodInvocation Cast ReferenceType ListNode MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals getPosition Cast ReferenceType ListNode MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals Literal null Literal null Literal null Cast ReferenceType BlockArgNode MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals new_args = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "to_ary" ReferenceType IRubyObject ReturnStatement This	1
MethodDeclaration Modifier public static ReferenceType RubyClass FormalParameter ReferenceType Ruby runtime LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator numeric MethodInvocation runtime Literal MethodInvocation runtime getObject MemberReference defineClass StatementExpression MethodInvocation runtime MemberReference numeric StatementExpression Assignment MemberReference numeric ClassCreator ReferenceType RubyModule ReferenceType MethodDeclaration Modifier public Annotation Override BasicType boolean FormalParameter ReferenceType IRubyObject obj FormalParameter ReferenceType RubyModule type ReturnStatement BinaryOperation instanceof MemberReference obj ReferenceType RubyNumeric = StatementExpression MethodInvocation numeric MethodInvocation runtime includeModule StatementExpression MethodInvocation numeric ClassReference ReferenceType RubyNumeric defineAnnotatedMethods ReturnStatement MemberReference numeric	0
MethodDeclaration Modifier public Annotation Override ReferenceType Arity ReturnStatement MemberReference Arity	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair meta Literal true ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject recv ReturnStatement MethodInvocation recv MethodInvocation Literal 20 newFixnum getRuntime	1
MethodDeclaration Modifier public ReferenceType getJavaSupport ReturnStatement MemberReference	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public final ReferenceType IRubyObject invoke FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType Function function FormalParameter ReferenceType HeapInvocationBuffer args ReturnStatement MethodInvocation FFIUtil MemberReference runtime MethodInvocation invoker MemberReference function MemberReference args invokeAddress getString	1
MethodDeclaration Modifier public synchronized StatementExpression MethodInvocation Literal null	0
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType String name FormalParameter BasicType int index LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation context MethodInvocation getRuntime LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator value MethodInvocation context MemberReference name StatementExpression Assignment MemberReference ArraySelector MemberReference index constants MemberReference value = IfStatement BinaryOperation != MemberReference value Literal null StatementExpression Assignment MemberReference ArraySelector MemberReference index MemberReference = ReturnStatement MemberReference value	1
MethodDeclaration Modifier public static FormalParameter ReferenceType Channel channel FormalParameter BasicType int op InterruptedException IOException StatementExpression MethodInvocation MethodInvocation MemberReference channel MemberReference op await MemberReference channel	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "include?" ElementValuePair required Literal 1 ReferenceType RubyBoolean include_p FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject item ReturnStatement MethodInvocation context MethodInvocation MethodInvocation MemberReference context MemberReference item includes newBoolean getRuntime	1
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier private static FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ByteList to FormalParameter BasicType byte bytes FormalParameter BasicType int start FormalParameter BasicType int len FormalParameter ReferenceType Encoding enc LocalVariableDeclaration BasicType int VariableDeclarator p MemberReference start LocalVariableDeclaration BasicType int VariableDeclarator end BinaryOperation + MemberReference p MemberReference len LocalVariableDeclaration BasicType boolean VariableDeclarator needEscape Literal false WhileStatement BinaryOperation < MemberReference p MemberReference end BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator c BinaryOperation & MemberReference ArraySelector MemberReference p bytes Literal 0xff IfStatement BinaryOperation || BinaryOperation == MemberReference c Literal '/' BinaryOperation && MethodInvocation ! enc MemberReference c isPrint BinaryOperation == MethodInvocation enc MemberReference bytes MemberReference p MemberReference end length Literal 1 BlockStatement StatementExpression Assignment MemberReference needEscape Literal true = BreakStatement StatementExpression Assignment MemberReference p MethodInvocation enc MemberReference bytes MemberReference p MemberReference end length += IfStatement MemberReference ! needEscape BlockStatement StatementExpression MethodInvocation to MemberReference bytes MemberReference start MemberReference len append BlockStatement StatementExpression Assignment MemberReference p MemberReference start = WhileStatement BinaryOperation < MemberReference p MemberReference end BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator c BinaryOperation & MemberReference ArraySelector MemberReference p bytes Literal 0xff IfStatement BinaryOperation == MemberReference c Literal '\\' BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator n BinaryOperation + MethodInvocation enc MemberReference bytes BinaryOperation + MemberReference p Literal 1 MemberReference end length Literal 1 StatementExpression MethodInvocation to MemberReference bytes MemberReference p MemberReference n append StatementExpression Assignment MemberReference p MemberReference n += ContinueStatement IfStatement BinaryOperation == MemberReference c Literal '/' BlockStatement StatementExpression MethodInvocation to Cast BasicType byte Literal '\\' append StatementExpression MethodInvocation to MemberReference bytes MemberReference p Literal 1 append IfStatement BinaryOperation != MethodInvocation enc MemberReference bytes MemberReference p MemberReference end length Literal 1 BlockStatement StatementExpression MethodInvocation to MemberReference bytes MemberReference p MethodInvocation enc MemberReference bytes MemberReference p MemberReference end length append StatementExpression Assignment MemberReference p MethodInvocation enc MemberReference bytes MemberReference p MemberReference end length += ContinueStatement IfStatement MethodInvocation enc MemberReference c isPrint BlockStatement StatementExpression MethodInvocation to MemberReference bytes MemberReference p Literal 1 append IfStatement MethodInvocation ! enc MemberReference c isSpace BlockStatement StatementExpression MethodInvocation Sprintf MemberReference runtime MemberReference to Literal "\\%03o" BinaryOperation & MemberReference ArraySelector MemberReference p bytes Literal 0377 sprintf BlockStatement StatementExpression MethodInvocation to MemberReference bytes MemberReference p Literal 1 append StatementExpression MemberReference ++ p	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "squeeze!" ElementValuePair rest Literal true ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject args LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime IfStatement BinaryOperation == MemberReference value realSize Literal 0 BlockStatement StatementExpression MethodInvocation modifyCheck ReturnStatement MethodInvocation runtime getNil LocalVariableDeclaration ReferenceType RubyString VariableDeclarator otherStr MemberReference ArraySelector Literal 0 MethodInvocation convertToString args LocalVariableDeclaration ReferenceType Encoding VariableDeclarator enc MethodInvocation MemberReference otherStr checkEncoding LocalVariableDeclaration Modifier final BasicType boolean VariableDeclarator squeeze ArrayCreator BasicType boolean MemberReference TRANS_SIZE LocalVariableDeclaration ReferenceType TrTables VariableDeclarator tables MethodInvocation otherStr MemberReference runtime MemberReference squeeze Literal null Literal true MemberReference enc trSetupTable LocalVariableDeclaration BasicType boolean VariableDeclarator singlebyte BinaryOperation && MethodInvocation singleByteOptimizable MethodInvocation otherStr singleByteOptimizable ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 1 BinaryOperation < MemberReference i MemberReference args length MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference otherStr MemberReference ArraySelector MemberReference i MethodInvocation convertToString args = StatementExpression Assignment MemberReference enc MethodInvocation MemberReference otherStr checkEncoding = StatementExpression Assignment MemberReference singlebyte BinaryOperation && MemberReference singlebyte MethodInvocation otherStr singleByteOptimizable = StatementExpression Assignment MemberReference tables MethodInvocation otherStr MemberReference runtime MemberReference squeeze MemberReference tables Literal false MemberReference enc trSetupTable = StatementExpression MethodInvocation modifyAndKeepCodeRange IfStatement MemberReference singlebyte BlockStatement ReturnStatement MethodInvocation MemberReference runtime MemberReference squeeze squeezeCommon BlockStatement ReturnStatement MethodInvocation MemberReference runtime MemberReference squeeze MemberReference tables MemberReference enc Literal true squeezeCommon19	1
MethodDeclaration Modifier public final BasicType byte FormalParameter BasicType long offset StatementExpression MethodInvocation MemberReference offset Literal 1 checkBounds LocalVariableDeclaration BasicType int VariableDeclarator len MethodInvocation MemberReference offset Cast BasicType byte Literal 0 indexOf LocalVariableDeclaration BasicType byte VariableDeclarator bytes ArrayCreator BasicType byte TernaryExpression BinaryOperation != MemberReference len Literal - 1 MemberReference len BinaryOperation - MemberReference length Cast BasicType int MemberReference offset StatementExpression MethodInvocation System MemberReference buffer MethodInvocation MemberReference offset index MemberReference bytes Literal 0 MemberReference bytes length arraycopy ReturnStatement MemberReference bytes	1
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter BasicType long id SynchronizedStatement MemberReference identities StatementExpression MethodInvocation cleanIdentities LocalVariableDeclaration ReferenceType IdReference VariableDeclarator reference Cast ReferenceType IdReference MethodInvocation identities ClassCreator ReferenceType Long MemberReference id get IfStatement BinaryOperation == MemberReference reference Literal null ReturnStatement Literal null ReturnStatement Cast ReferenceType IRubyObject MethodInvocation reference get	1
MethodDeclaration Modifier public ReferenceType Object case417_line1607 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType ZArrayNode MethodInvocation Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals getPosition = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public ReferenceType IRubyObject getValue FormalParameter ReferenceType ThreadContext context LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator value MemberReference ReturnStatement TernaryExpression MethodInvocation MemberReference context MemberReference value MemberReference value MethodInvocation MemberReference context MemberReference name	0
MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext ctx FormalParameter ReferenceType IRubyObject largs FormalParameter ReferenceType Block blk StatementExpression MemberReference ArraySelector Literal 0 MethodInvocation MemberReference ArraySelector Literal 0 largs append result IfStatement BinaryOperation == MemberReference ArraySelector Literal 0 MethodInvocation size result MemberReference size BlockStatement StatementExpression MethodInvocation block MemberReference ctx MemberReference ArraySelector Literal 0 result yield StatementExpression Assignment MemberReference ArraySelector Literal 0 result MethodInvocation runtime MemberReference size newArray = ReturnStatement MethodInvocation runtime getNil	0
MethodDeclaration Modifier public Annotation JRubyMethod ReferenceType IRubyObject size FormalParameter ReferenceType ThreadContext context ReturnStatement MethodInvocation context MethodInvocation MethodInvocation type getNativeSize newFixnum getRuntime	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair required Literal 1 ElementValuePair module Literal true ElementValuePair visibility MemberReference Visibility PRIVATE ReferenceType RubyFloat FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject x LocalVariableDeclaration BasicType double VariableDeclarator value Cast ReferenceType RubyFloat MethodInvocation RubyKernel MemberReference recv MemberReference x ReturnStatement MethodInvocation RubyFloat MethodInvocation recv getRuntime MethodInvocation Math MemberReference value newFloat	0
MethodDeclaration Modifier public LocalVariableDeclaration Modifier final ReferenceType IRubyObject VariableDeclarator MethodInvocation MemberReference runtime ClassCreator ReferenceType javaToRuby LocalVariableDeclaration BasicType boolean VariableDeclarator Literal false TryStatement StatementExpression MethodInvocation MemberReference runtime MemberReference Literal ArrayCreator ReferenceType Object ArrayInitializer ClassReference ReferenceType Object invokeMethod CatchClause CatchClauseParameter RaiseException e StatementExpression Assignment MemberReference Literal true = LocalVariableDeclaration Modifier final ReferenceType VariableDeclarator ne Cast ReferenceType MethodInvocation e getException LocalVariableDeclaration Modifier final ReferenceType VariableDeclarator ee Cast ReferenceType MethodInvocation ne getCause StatementExpression MethodInvocation Literal "The exception we should be the one we MemberReference expectedException MemberReference ee assertEquals StatementExpression MethodInvocation Literal "Java Exception should have been thrown and as a MemberReference assertTrue	0
MethodDeclaration Modifier public FormalParameter ReferenceType CallType callType FormalParameter ReferenceType Visibility visibility StatementExpression Assignment MemberReference lastCallType MemberReference callType = StatementExpression Assignment MemberReference MemberReference visibility =	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ReferenceType IRubyObject StatementExpression MethodInvocation check LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation getRuntime IfStatement MethodInvocation ! isMatched BlockStatement LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator errorClass MethodInvocation runtime MethodInvocation Literal fastGetClass Literal fastGetClass ThrowStatement ClassCreator ReferenceType RaiseException MethodInvocation RubyException MemberReference runtime MemberReference errorClass Literal failed: previous match failed" newException StatementExpression Assignment MemberReference pos MemberReference lastPos = StatementExpression MethodInvocation ReturnStatement This	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "to_io" ReferenceType IRubyObject to_io ReturnStatement MemberReference	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal "get_array_of_string" ElementValuePair required Literal 2 ReferenceType IRubyObject get_array_of_string FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject rbOffset FormalParameter ReferenceType IRubyObject rbCount LocalVariableDeclaration Modifier final BasicType int VariableDeclarator POINTER_SIZE BinaryOperation / MethodInvocation Platform MethodInvocation addressSize getPlatform Literal 8 LocalVariableDeclaration Modifier final BasicType long VariableDeclarator off MethodInvocation MemberReference rbOffset getOffset LocalVariableDeclaration Modifier final BasicType int VariableDeclarator count MethodInvocation Util MemberReference rbCount int32Value LocalVariableDeclaration Modifier final ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration Modifier final ReferenceType RubyArray VariableDeclarator arr MethodInvocation RubyArray MemberReference runtime MemberReference count newArray ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference count MemberReference ++ i BlockStatement LocalVariableDeclaration Modifier final ReferenceType MemoryIO VariableDeclarator mem MethodInvocation MethodInvocation BinaryOperation + MemberReference off BinaryOperation * MemberReference i MemberReference POINTER_SIZE getMemoryIO getMemoryIO StatementExpression MethodInvocation arr TernaryExpression BinaryOperation && BinaryOperation != MemberReference mem Literal null MethodInvocation ! mem MethodInvocation MemoryUtil MemberReference runtime MemberReference mem Literal 0 getTaintedString MethodInvocation runtime getNil add ReturnStatement MemberReference arr	1
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator receiver MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation getName IfStatement BinaryOperation && BinaryOperation >= MethodInvocation runtime getSafeLevel Literal 4 MethodInvocation ! receiver isTaint BlockStatement ThrowStatement MethodInvocation runtime Literal can't define singleton method." newSecurityError IfStatement BinaryOperation || BinaryOperation instanceof MemberReference receiver ReferenceType RubyFixnum BinaryOperation instanceof MemberReference receiver ReferenceType RubySymbol BlockStatement ThrowStatement MethodInvocation runtime BinaryOperation + BinaryOperation + BinaryOperation + Literal "can't define singleton method \"" MemberReference name Literal "\" for " MethodInvocation receiver MethodInvocation getMetaClass newTypeError IfStatement MethodInvocation receiver isFrozen ThrowStatement MethodInvocation runtime Literal LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator rubyClass MethodInvocation receiver IfStatement BinaryOperation && BinaryOperation >= MethodInvocation runtime getSafeLevel Literal 4 BinaryOperation != MethodInvocation rubyClass MethodInvocation MemberReference name get getMethods Literal null BlockStatement ThrowStatement MethodInvocation runtime Literal "redefining method newSecurityError StatementExpression MethodInvocation scope determineModule LocalVariableDeclaration ReferenceType Node VariableDeclarator body TernaryExpression BinaryOperation == MemberReference bodyNode Literal null ClassCreator ReferenceType NilNode MethodInvocation getPosition MemberReference bodyNode LocalVariableDeclaration ReferenceType DynamicMethod VariableDeclarator MethodInvocation DynamicMethodFactory MemberReference runtime MemberReference rubyClass MemberReference name MemberReference scope MemberReference body MemberReference argsNode MemberReference Visibility PUBLIC MethodInvocation getPosition newInterpretedMethod StatementExpression MethodInvocation rubyClass MemberReference name MemberReference addMethod StatementExpression MethodInvocation receiver MemberReference context Literal MethodInvocation runtime MemberReference name fastNewSymbol callMethod ReturnStatement MethodInvocation runtime getNil	1
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 ReturnStatement MethodInvocation MemberReference context MemberReference self MemberReference clazz MemberReference name MemberReference arg0 MemberReference arg1 MemberReference arg2 MemberReference Block NULL_BLOCK call	0
MethodDeclaration Modifier public static ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject receiver FormalParameter ReferenceType CallSite FormalParameter ReferenceType IRubyObject value FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject caller StatementExpression MethodInvocation MemberReference context MemberReference caller MemberReference receiver MemberReference value call ReturnStatement MemberReference value	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair rest Literal true ElementValuePair visibility MemberReference PRIVATE ElementValuePair reads MemberReference VISIBILITY ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject args LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime IfStatement BinaryOperation && BinaryOperation == MemberReference args length Literal 2 BinaryOperation || BinaryOperation == MemberReference ArraySelector Literal 1 args MethodInvocation runtime getTrue BinaryOperation == MemberReference ArraySelector Literal 1 args MethodInvocation runtime getFalse BlockStatement StatementExpression MethodInvocation runtime MethodInvocation MemberReference ID Literal boolean argument is warn getWarnings StatementExpression MethodInvocation MemberReference context MemberReference ArraySelector Literal 0 MethodInvocation asJavaString MethodInvocation intern args MethodInvocation context getCurrentVisibility MemberReference ArraySelector Literal 0 MethodInvocation isTrue args Literal true addAccessor ReturnStatement MethodInvocation runtime getNil ReturnStatement MethodInvocation MemberReference context MemberReference args	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement Literal false	0
MethodDeclaration Modifier private ReferenceType org ReferenceType ReferenceType ReferenceType Label getLabel FormalParameter ReferenceType Label label LocalVariableDeclaration ReferenceType org ReferenceType ReferenceType ReferenceType Label VariableDeclarator MethodInvocation MethodInvocation MemberReference MethodInvocation MemberReference label get IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference MethodInvocation MethodInvocation newLabel method = StatementExpression MethodInvocation MethodInvocation MemberReference MethodInvocation MemberReference label MemberReference put ReturnStatement MemberReference	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "Integer" ElementValuePair required Literal 1 ElementValuePair module Literal true ElementValuePair visibility MemberReference PRIVATE ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject object IfStatement BinaryOperation instanceof MemberReference object ReferenceType RubyFloat BlockStatement LocalVariableDeclaration BasicType double VariableDeclarator val Cast ReferenceType RubyFloat MemberReference object IfStatement BinaryOperation && BinaryOperation > MemberReference val Cast BasicType double MemberReference RubyFixnum BinaryOperation < MemberReference val Cast BasicType double MemberReference RubyFixnum BlockStatement ReturnStatement MethodInvocation RubyNumeric MethodInvocation context getRuntime Cast ReferenceType RubyFloat MemberReference object dbl2num IfStatement BinaryOperation || BinaryOperation instanceof MemberReference object ReferenceType RubyFixnum BinaryOperation instanceof MemberReference object ReferenceType RubyBignum BlockStatement ReturnStatement MemberReference object IfStatement BinaryOperation instanceof MemberReference object ReferenceType RubyString BlockStatement ReturnStatement MethodInvocation RubyNumeric MethodInvocation context getRuntime Cast ReferenceType RubyString MemberReference object Literal 0 Literal true LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator tmp MethodInvocation TypeConverter MemberReference object MethodInvocation context MethodInvocation getInteger getRuntime Literal "to_int" Literal false convertToType IfStatement MethodInvocation tmp isNil ReturnStatement MethodInvocation object Literal "to_i" convertToInteger ReturnStatement MemberReference tmp	1
MethodDeclaration Modifier private addLazyBuiltin FormalParameter ReferenceType String name FormalParameter ReferenceType String shortName FormalParameter ReferenceType String className StatementExpression MethodInvocation MemberReference name ClassCreator ReferenceType MemberReference shortName MemberReference className MethodInvocation getJRubyClassLoader	0
MethodDeclaration Modifier public setName FormalParameter ReferenceType String name StatementExpression Assignment This MemberReference name MemberReference name =	0
MethodDeclaration Modifier private FormalParameter BasicType int index FormalParameter ReferenceType Object message LocalVariableDeclaration ReferenceType VariableDeclarator Literal null LocalVariableDeclaration ReferenceType Object VariableDeclarator args Literal null SynchronizedStatement This LocalVariableDeclaration Modifier final ReferenceType LinkedList VariableDeclarator MemberReference ArraySelector MemberReference index writes IfStatement BinaryOperation == MemberReference Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IndexOutOfBoundsException StatementExpression MethodInvocation MemberReference message addLast StatementExpression Assignment MemberReference mask BinaryOperation << Literal 1L MemberReference index |= LocalVariableDeclaration Modifier final ReferenceType VariableDeclarator MemberReference ArraySelector MemberReference index reactionsPerChannel ForStatement EnhancedForControl VariableDeclaration ReferenceType VariableDeclarator reaction MemberReference BlockStatement IfStatement BinaryOperation == BinaryOperation & MemberReference reaction mask MemberReference mask MemberReference reaction mask BlockStatement LocalVariableDeclaration Modifier final BasicType int VariableDeclarator MemberReference reaction StatementExpression Assignment MemberReference args ArrayCreator ReferenceType Object MemberReference length = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference length MemberReference ++ i BlockStatement LocalVariableDeclaration Modifier final BasicType int VariableDeclarator MemberReference ArraySelector MemberReference i LocalVariableDeclaration Modifier final ReferenceType LinkedList VariableDeclarator reading MemberReference ArraySelector MemberReference writes StatementExpression Assignment MemberReference ArraySelector MemberReference i args MethodInvocation reading removeFirst = IfStatement MethodInvocation reading isEmpty BlockStatement StatementExpression Assignment MemberReference mask BinaryOperation << Literal 1L MemberReference &= StatementExpression Assignment MemberReference MemberReference reaction = BreakStatement IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation This MemberReference args dispatch	0
MethodDeclaration Modifier public BasicType boolean LocalVariableDeclaration ReferenceType Thread VariableDeclarator thread This MemberReference nativeThread MethodInvocation get IfStatement BinaryOperation != MemberReference thread Literal null StatementExpression MethodInvocation thread ReturnStatement Literal false	1
MethodDeclaration Modifier public ReferenceType Arity arity ReturnStatement MemberReference arity	0
MethodDeclaration Modifier private static appendFeaturesToClass FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyClass clazz LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator javaClassObj MethodInvocation self MethodInvocation Literal "@java_class" fastGetInstanceVariable getInstanceVariables IfStatement BinaryOperation == MemberReference javaClassObj Literal null BlockStatement StatementExpression Assignment MemberReference javaClassObj MethodInvocation runtime getNil = StatementExpression MethodInvocation self MethodInvocation Literal "@java_class" MemberReference javaClassObj getInstanceVariables LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator javaClass MethodInvocation clazz MethodInvocation Literal "@java_class" fastGetInstanceVariable getInstanceVariables IfStatement BinaryOperation == MemberReference javaClass Literal null BlockStatement StatementExpression Assignment MemberReference javaClass MethodInvocation runtime getNil = StatementExpression MethodInvocation clazz MethodInvocation Literal "@java_class" MemberReference javaClass fastSetInstanceVariable getInstanceVariables LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator javaProxyClass MethodInvocation clazz MethodInvocation Literal "@java_proxy_class" fastGetInstanceVariable getInstanceVariables IfStatement BinaryOperation == MemberReference javaProxyClass Literal null BlockStatement StatementExpression Assignment MemberReference javaProxyClass MethodInvocation runtime getNil = StatementExpression MethodInvocation clazz MethodInvocation Literal "@java_proxy_class" MemberReference javaProxyClass fastSetInstanceVariable getInstanceVariables IfStatement BinaryOperation || BinaryOperation && MethodInvocation javaClass isTrue MethodInvocation ! clazz MethodInvocation Literal "java_proxy_class" Literal false isMethodBound MethodInvocation javaProxyClass isTrue BlockStatement ThrowStatement MethodInvocation runtime Literal "can not add Java interface to existing Java class" newArgumentError LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator javaInterfaces MethodInvocation clazz MethodInvocation Literal "@java_interfaces" fastGetInstanceVariable getInstanceVariables IfStatement BinaryOperation == MemberReference javaInterfaces Literal null BlockStatement StatementExpression Assignment MemberReference javaInterfaces MethodInvocation RubyArray MemberReference runtime MemberReference javaClassObj newArray = StatementExpression MethodInvocation clazz MethodInvocation Literal "@java_interfaces" MemberReference javaInterfaces fastSetInstanceVariable getInstanceVariables IfStatement MethodInvocation ! clazz Literal Literal false isMethodBound BlockStatement LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator singleton MethodInvocation clazz StatementExpression MethodInvocation singleton MemberReference context Literal "java_interfaces" addReadAttribute LocalVariableDeclaration ReferenceType DynamicMethod VariableDeclarator MethodInvocation singleton MethodInvocation dup Literal searchMethod StatementExpression MethodInvocation singleton Literal MemberReference addMethod StatementExpression MethodInvocation MemberReference Visibility PRIVATE setVisibility StatementExpression MethodInvocation singleton Literal ClassCreator ReferenceType org ReferenceType jruby ReferenceType internal ReferenceType runtime ReferenceType methods ReferenceType JavaMethod MemberReference singleton MemberReference Visibility PUBLIC MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block AssertStatement BinaryOperation instanceof MemberReference self ReferenceType RubyClass Literal "new defined on LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator clazzSelf Cast ReferenceType RubyClass MemberReference self LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator newObj MethodInvocation clazzSelf StatementExpression MethodInvocation RuntimeHelpers MemberReference context MemberReference newObj Literal MemberReference args MemberReference block invoke StatementExpression MethodInvocation RuntimeHelpers MemberReference context MemberReference newObj Literal "initialize" MemberReference args MemberReference block invoke ReturnStatement MemberReference newObj addMethod StatementExpression MethodInvocation clazz Literal ClassCreator ReferenceType JavaMethodN MemberReference clazz MemberReference Visibility PRIVATE MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject args ReturnStatement MethodInvocation MemberReference self MemberReference args jcreateProxy addMethod StatementExpression MethodInvocation clazz Literal ClassCreator ReferenceType JavaMethodN MemberReference clazz MemberReference Visibility PRIVATE MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject args LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator result MethodInvocation MemberReference self MemberReference args jcreateProxy ReturnStatement MemberReference result addMethod StatementExpression MethodInvocation clazz MethodInvocation runtime Literal getModule includeModule StatementExpression MethodInvocation clazz Literal "java_class" ClassCreator ReferenceType JavaMethodZero MemberReference clazz MemberReference Visibility PUBLIC MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name ReturnStatement Cast ReferenceType JavaObject MethodInvocation self dataGetStruct addMethod StatementExpression MethodInvocation clazz Literal "old_eqq" Literal "===" defineAlias StatementExpression MethodInvocation clazz Literal "===" ClassCreator ReferenceType JavaMethodOne MemberReference clazz MemberReference Visibility PUBLIC MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg IfStatement MethodInvocation arg Literal "java_object" respondsTo BlockStatement LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator interfaces MethodInvocation self MethodInvocation getInstanceVariables MethodInvocation Literal "@java_interfaces" fastGetInstanceVariable getMetaClass AssertStatement BinaryOperation instanceof MemberReference interfaces ReferenceType RubyArray Literal "interface list was not an array" ReturnStatement MethodInvocation context MethodInvocation Cast ReferenceType RubyArray MemberReference interfaces newBoolean getRuntime BlockStatement ReturnStatement MethodInvocation RuntimeHelpers MemberReference context MemberReference self Literal "old_eqq" MemberReference arg invoke addMethod IfStatement MethodInvocation ! clazz Literal Literal false isMethodBound BlockStatement LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator singleton MethodInvocation clazz StatementExpression MethodInvocation singleton Literal ClassCreator ReferenceType JavaMethodOne MemberReference clazz MemberReference Visibility PRIVATE MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator javaInterfaces MethodInvocation self MethodInvocation Literal "@java_interfaces" fastGetInstanceVariable getInstanceVariables IfStatement BinaryOperation && BinaryOperation != MemberReference javaInterfaces Literal null Cast ReferenceType RubyArray MemberReference javaInterfaces BlockStatement ReturnStatement MethodInvocation RuntimeHelpers MemberReference context MemberReference arg Literal MemberReference self invoke ReturnStatement MethodInvocation context MethodInvocation getNil getRuntime addMethod StatementExpression MethodInvocation singleton Literal ClassCreator ReferenceType JavaMethodOne MemberReference clazz MemberReference Visibility PRIVATE MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator javaInterfaces Cast ReferenceType RubyArray MethodInvocation self MethodInvocation Literal "@java_interfaces" fastGetInstanceVariable getInstanceVariables ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation javaInterfaces size MemberReference ++ i BlockStatement StatementExpression MethodInvocation RuntimeHelpers MemberReference context MethodInvocation JavaUtilities MemberReference self MethodInvocation javaInterfaces MemberReference i eltInternal get_interface_module Literal MemberReference self invoke ReturnStatement MemberReference javaInterfaces addMethod BlockStatement IfStatement BinaryOperation || MethodInvocation javaInterfaces isFrozen Cast ReferenceType RubyArray MemberReference javaInterfaces BlockStatement StatementExpression Cast ReferenceType RubyArray MemberReference javaInterfaces	1
MethodDeclaration Modifier public pushString FormalParameter ReferenceType String str StatementExpression MethodInvocation method MemberReference str ldc	0
MethodDeclaration Modifier public ReferenceType Node ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType NodeVisitor iVisitor ReturnStatement MethodInvocation iVisitor This	0
MethodDeclaration Modifier public BasicType boolean FormalParameter BasicType int c ReturnStatement BinaryOperation || BinaryOperation == MemberReference c Literal ';' BinaryOperation == MemberReference c Literal '@'	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "change_privilege" ElementValuePair module Literal true ReferenceType IRubyObject change_privilege FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject arg ThrowStatement MethodInvocation self MethodInvocation Literal not implemented yet" newNotImplementedError getRuntime	1
MethodDeclaration Modifier public Annotation Override ReferenceType String toString ReturnStatement MethodInvocation ClassCreator ReferenceType StringBuffer Literal "" toString	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject args SwitchStatement MemberReference args length SwitchStatementCase Literal 0 ReturnStatement MethodInvocation MemberReference context MemberReference self MemberReference clazz MemberReference name call SwitchStatementCase Literal 1 ReturnStatement MethodInvocation MemberReference context MemberReference self MemberReference clazz MemberReference name MemberReference ArraySelector Literal 0 args call SwitchStatementCase ReturnStatement MethodInvocation This MemberReference context MemberReference name MemberReference args length Literal 0 Literal 1 raiseArgumentError	0
MethodDeclaration Modifier public ReferenceType Node getBodyNode ReturnStatement MemberReference bodyNode	0
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block SwitchStatement MemberReference args length SwitchStatementCase Literal 0 ReturnStatement MethodInvocation MemberReference context MemberReference block SwitchStatementCase Literal 1 ReturnStatement MethodInvocation MemberReference context MemberReference ArraySelector Literal 0 args Literal null MemberReference block SwitchStatementCase Literal 2 ReturnStatement MethodInvocation MemberReference context MemberReference ArraySelector Literal 0 args MemberReference ArraySelector Literal 1 args MemberReference block SwitchStatementCase StatementExpression MethodInvocation Arity MethodInvocation getRuntime MemberReference args length Literal 0 Literal 2 raiseArgumentError ReturnStatement Literal null	1
MethodDeclaration Modifier public static BasicType boolean FormalParameter ReferenceType String id ReturnStatement MethodInvocation id Literal "=" endsWith	0
MethodDeclaration Modifier public Annotation Deprecated ReferenceType Callback getMethod FormalParameter ReferenceType String method LocalVariableDeclaration ReferenceType String VariableDeclarator mname BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation type getName Literal "Callback$" MemberReference method Literal "_0" LocalVariableDeclaration ReferenceType String VariableDeclarator mnamePath BinaryOperation + BinaryOperation + BinaryOperation + MemberReference typePath Literal "Callback$" MemberReference method Literal "_0" SynchronizedStatement MethodInvocation runtime getJRubyClassLoader LocalVariableDeclaration ReferenceType Class VariableDeclarator c MethodInvocation MemberReference mname tryClass TryStatement IfStatement BinaryOperation == MemberReference c Literal null BlockStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator signature ArrayCreator ReferenceType Class ArrayInitializer ClassReference ReferenceType Block LocalVariableDeclaration ReferenceType Class VariableDeclarator ret MethodInvocation MemberReference method MemberReference signature getReturnClass LocalVariableDeclaration ReferenceType ClassWriter VariableDeclarator cw MethodInvocation MemberReference mnamePath createCtor LocalVariableDeclaration ReferenceType MethodVisitor VariableDeclarator mv MethodInvocation MemberReference cw startCall StatementExpression MethodInvocation mv MemberReference ALOAD Literal 3 visitVarInsn StatementExpression MethodInvocation mv MemberReference INVOKEVIRTUAL MemberReference typePath MemberReference method MethodInvocation MemberReference ret MemberReference signature sig visitMethodInsn StatementExpression MethodInvocation mv MemberReference ARETURN visitInsn StatementExpression MethodInvocation mv Literal 1 Literal 3 visitMaxs StatementExpression Assignment MemberReference c MethodInvocation MemberReference cw MemberReference mv MemberReference mname endCall = LocalVariableDeclaration ReferenceType InvocationCallback VariableDeclarator ic Cast ReferenceType InvocationCallback MethodInvocation c newInstance StatementExpression MethodInvocation ic MethodInvocation Arity noArguments setArity StatementExpression MethodInvocation ic MemberReference method setJavaName ReturnStatement MemberReference ic CatchClause CatchClauseParameter IllegalArgumentException e ThrowStatement MemberReference e CatchClause CatchClauseParameter Exception e ThrowStatement ClassCreator ReferenceType IllegalArgumentException MethodInvocation e getMessage	1
MethodDeclaration Modifier public ReferenceType RubyModule ReturnStatement MemberReference klazz	0
MethodDeclaration ReferenceType IRubyObject ReturnStatement MemberReference image	0
MethodDeclaration Modifier protected FormalParameter ReferenceType BodyCompiler context FormalParameter ReferenceType HashNode hashNode FormalParameter ReferenceType ArrayCallback StatementExpression MethodInvocation context MethodInvocation hashNode getListNode MemberReference BinaryOperation / MethodInvocation hashNode MethodInvocation size getListNode Literal 2	0
MethodDeclaration Modifier public static ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType IRubyObject args LocalVariableDeclaration ReferenceType Selector VariableDeclarator selector Literal null TryStatement LocalVariableDeclaration ReferenceType Set VariableDeclarator pending ClassCreator ReferenceType HashSet LocalVariableDeclaration ReferenceType Set VariableDeclarator unselectable_reads ClassCreator ReferenceType HashSet LocalVariableDeclaration ReferenceType Set VariableDeclarator unselectable_writes ClassCreator ReferenceType HashSet LocalVariableDeclaration ReferenceType Map TypeArgument ReferenceType RubyIO TypeArgument ReferenceType Boolean VariableDeclarator blocking ClassCreator ReferenceType HashMap StatementExpression Assignment MemberReference selector MethodInvocation Selector open = IfStatement MemberReference ! ArraySelector Literal 0 MethodInvocation isNil args BlockStatement StatementExpression MethodInvocation MemberReference runtime MemberReference ArraySelector Literal 0 args checkArrayType ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i Cast ReferenceType RubyArray MemberReference ArraySelector Literal 0 args MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator obj Cast ReferenceType IRubyObject MethodInvocation i next LocalVariableDeclaration ReferenceType RubyIO VariableDeclarator ioObj MethodInvocation MemberReference context MemberReference obj IfStatement BinaryOperation instanceof MethodInvocation ioObj getChannel ReferenceType SelectableChannel StatementExpression MethodInvocation blocking MemberReference ioObj Cast ReferenceType SelectableChannel MethodInvocation ioObj getChannel put IfStatement MethodInvocation MemberReference context MemberReference selector MemberReference obj MemberReference ioObj BinaryOperation | MemberReference SelectionKey OP_READ MemberReference SelectionKey OP_ACCEPT registerSelect BlockStatement IfStatement MethodInvocation ioObj BlockStatement StatementExpression MethodInvocation pending MemberReference obj add BlockStatement IfStatement BinaryOperation != BinaryOperation & MethodInvocation getMode MemberReference OpenFile READABLE Literal 0 BlockStatement StatementExpression MethodInvocation unselectable_reads MemberReference obj add IfStatement BinaryOperation && BinaryOperation > MemberReference args length Literal 1 MemberReference ! ArraySelector Literal 1 MethodInvocation isNil args BlockStatement StatementExpression MethodInvocation MemberReference runtime MemberReference ArraySelector Literal 1 args checkArrayType ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i Cast ReferenceType RubyArray MemberReference ArraySelector Literal 1 args MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator obj Cast ReferenceType IRubyObject MethodInvocation i next LocalVariableDeclaration ReferenceType RubyIO VariableDeclarator ioObj MethodInvocation MemberReference context MemberReference obj IfStatement BinaryOperation && MethodInvocation ! blocking MemberReference ioObj containsKey BinaryOperation instanceof MethodInvocation ioObj getChannel ReferenceType SelectableChannel StatementExpression MethodInvocation blocking MemberReference ioObj Cast ReferenceType SelectableChannel MethodInvocation ioObj getChannel put IfStatement MethodInvocation ! MemberReference context MemberReference selector MemberReference obj MemberReference ioObj MemberReference SelectionKey OP_WRITE registerSelect BlockStatement IfStatement BinaryOperation != BinaryOperation & MethodInvocation getMode MemberReference OpenFile WRITABLE Literal 0 BlockStatement StatementExpression MethodInvocation unselectable_writes MemberReference obj add IfStatement BinaryOperation && BinaryOperation > MemberReference args length Literal 2 MemberReference ! ArraySelector Literal 2 MethodInvocation isNil args BlockStatement StatementExpression MethodInvocation MemberReference runtime MemberReference ArraySelector Literal 2 args checkArrayType LocalVariableDeclaration Modifier final BasicType boolean VariableDeclarator has_timeout BinaryOperation && BinaryOperation > MemberReference args length Literal 3 MemberReference ! ArraySelector Literal 3 MethodInvocation isNil args LocalVariableDeclaration BasicType long VariableDeclarator timeout Literal 0 IfStatement MemberReference has_timeout BlockStatement LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator timeArg MemberReference ArraySelector Literal 3 args IfStatement BinaryOperation instanceof MemberReference timeArg ReferenceType RubyFloat BlockStatement StatementExpression Assignment MemberReference timeout MethodInvocation Math BinaryOperation * Cast ReferenceType RubyFloat MemberReference timeArg Literal 1000 round = IfStatement BinaryOperation instanceof MemberReference timeArg ReferenceType RubyFixnum BlockStatement StatementExpression Assignment MemberReference timeout MethodInvocation Math BinaryOperation * Cast ReferenceType RubyFixnum MemberReference timeArg Literal 1000 round = BlockStatement ThrowStatement MethodInvocation runtime BinaryOperation + BinaryOperation + Literal "can't convert " MethodInvocation timeArg MethodInvocation getName getMetaClass Literal " into time newTypeError IfStatement BinaryOperation < MemberReference timeout Literal 0 BlockStatement ThrowStatement MethodInvocation runtime Literal "negative timeout given" newArgumentError IfStatement BinaryOperation && BinaryOperation && MethodInvocation pending isEmpty MethodInvocation unselectable_reads isEmpty MethodInvocation unselectable_writes isEmpty BlockStatement IfStatement MemberReference has_timeout BlockStatement IfStatement BinaryOperation == MemberReference timeout Literal 0 BlockStatement StatementExpression MethodInvocation selector selectNow BlockStatement StatementExpression MethodInvocation selector MemberReference timeout select BlockStatement StatementExpression MethodInvocation selector select BlockStatement StatementExpression MethodInvocation selector selectNow LocalVariableDeclaration ReferenceType List VariableDeclarator r ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType List VariableDeclarator w ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType List VariableDeclarator e ClassCreator ReferenceType ArrayList ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation selector MethodInvocation iterator selectedKeys MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType SelectionKey VariableDeclarator key Cast ReferenceType SelectionKey MethodInvocation i next TryStatement LocalVariableDeclaration BasicType int VariableDeclarator interestAndReady BinaryOperation & MethodInvocation key interestOps MethodInvocation key readyOps IfStatement BinaryOperation != BinaryOperation & MemberReference interestAndReady BinaryOperation | BinaryOperation | MemberReference SelectionKey OP_READ MemberReference SelectionKey OP_ACCEPT MemberReference SelectionKey OP_CONNECT Literal 0 BlockStatement StatementExpression MethodInvocation r MethodInvocation key attachment add StatementExpression MethodInvocation pending MethodInvocation key attachment remove IfStatement BinaryOperation != BinaryOperation & MemberReference interestAndReady MemberReference SelectionKey OP_WRITE Literal 0 BlockStatement StatementExpression MethodInvocation w MethodInvocation key attachment add CatchClause CatchClauseParameter StatementExpression MethodInvocation pending MethodInvocation key attachment remove StatementExpression MethodInvocation e MethodInvocation key attachment add StatementExpression MethodInvocation r MemberReference pending addAll StatementExpression MethodInvocation r MemberReference unselectable_reads addAll StatementExpression MethodInvocation w MemberReference unselectable_writes addAll StatementExpression MethodInvocation selector close ForStatement EnhancedForControl VariableDeclaration ReferenceType Map ReferenceType Entry VariableDeclarator blockingEntry MethodInvocation blocking entrySet BlockStatement LocalVariableDeclaration ReferenceType SelectableChannel VariableDeclarator channel Cast ReferenceType SelectableChannel Cast ReferenceType RubyIO MethodInvocation blockingEntry getKey SynchronizedStatement MethodInvocation channel blockingLock StatementExpression MethodInvocation channel Cast ReferenceType Boolean MethodInvocation blockingEntry getValue configureBlocking IfStatement BinaryOperation && BinaryOperation && BinaryOperation == MethodInvocation r size Literal 0 BinaryOperation == MethodInvocation w size Literal 0 BinaryOperation == MethodInvocation e size Literal 0 BlockStatement ReturnStatement MethodInvocation runtime getNil LocalVariableDeclaration ReferenceType List VariableDeclarator ret ClassCreator ReferenceType ArrayList StatementExpression MethodInvocation ret MethodInvocation RubyArray MemberReference runtime MemberReference r newArray add StatementExpression MethodInvocation ret MethodInvocation RubyArray MemberReference runtime MemberReference w newArray add StatementExpression MethodInvocation ret MethodInvocation RubyArray MemberReference runtime MemberReference e newArray add ReturnStatement MethodInvocation RubyArray MemberReference runtime MemberReference ret newArray CatchClause CatchClauseParameter IOException e ThrowStatement MethodInvocation runtime MethodInvocation e getMessage newIOError IfStatement BinaryOperation != MemberReference selector Literal null BlockStatement TryStatement StatementExpression MethodInvocation selector close CatchClause CatchClauseParameter Exception e	1
MethodDeclaration Modifier public BasicType int ReturnStatement Literal - 1	0
MethodDeclaration Modifier public ReferenceType Object case388_line1464 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType IterNode MethodInvocation Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 4 MemberReference yyTop yyVals getPosition Cast ReferenceType ArgsNode MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals MethodInvocation support getCurrentScope = StatementExpression Cast ReferenceType ISourcePositionHolder MemberReference ArraySelector BinaryOperation + Literal - 5 MemberReference yyTop yyVals StatementExpression MethodInvocation support popCurrentScope ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier private static ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime AssertStatement BinaryOperation instanceof MethodInvocation runtime MethodInvocation getGlobalVariables ReferenceType RubyString LocalVariableDeclaration ReferenceType RubyString VariableDeclarator separator Cast ReferenceType RubyString MethodInvocation runtime MethodInvocation getGlobalVariables StatementExpression MethodInvocation MemberReference context MemberReference MethodInvocation separator getByteList write ReturnStatement MethodInvocation runtime getNil	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair module Literal true ElementValuePair visibility MemberReference Visibility PRIVATE ReferenceType IRubyObject get_package_module_dot_format FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject arg0 ReturnStatement MethodInvocation Java MemberReference recv MemberReference arg0 get_package_module_dot_format	1
MethodDeclaration Modifier public ReferenceType Node getFirstNode ReturnStatement MemberReference	0
MethodDeclaration Modifier private ReferenceType RubyArray FormalParameter ReferenceType Field fields LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator result MethodInvocation MethodInvocation MemberReference fields length newArray getRuntime ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference fields length MemberReference ++ i BlockStatement StatementExpression MethodInvocation result ClassCreator ReferenceType JavaField MethodInvocation getRuntime MemberReference ArraySelector MemberReference i fields append ReturnStatement MemberReference result	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "<<" ElementValuePair required Literal 1 ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject other LocalVariableDeclaration BasicType long VariableDeclarator shift LocalVariableDeclaration BasicType boolean VariableDeclarator neg Literal false ForStatement ForControl BlockStatement IfStatement BinaryOperation instanceof MemberReference other ReferenceType RubyFixnum BlockStatement StatementExpression Assignment MemberReference shift Cast ReferenceType RubyFixnum MemberReference other = IfStatement BinaryOperation < MemberReference shift Literal 0 BlockStatement StatementExpression Assignment MemberReference neg Literal true = StatementExpression Assignment MemberReference shift MemberReference - shift = BreakStatement IfStatement BinaryOperation instanceof MemberReference other ReferenceType RubyBignum BlockStatement LocalVariableDeclaration ReferenceType RubyBignum VariableDeclarator otherBignum Cast ReferenceType RubyBignum MemberReference other IfStatement BinaryOperation < MethodInvocation otherBignum.value signum Literal 0 BlockStatement LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator tmp MethodInvocation otherBignum This checkShiftDown IfStatement MethodInvocation ! tmp isNil ReturnStatement MemberReference tmp StatementExpression Assignment MemberReference neg Literal true = StatementExpression Assignment MemberReference shift MethodInvocation MemberReference otherBignum = BreakStatement StatementExpression Assignment MemberReference other MethodInvocation other convertToInteger = ReturnStatement MethodInvocation MethodInvocation getRuntime TernaryExpression MemberReference neg MethodInvocation value Cast BasicType int MemberReference shift shiftRight MethodInvocation value Cast BasicType int MemberReference shift shiftLeft bignorm	1
MethodDeclaration Modifier public final FormalParameter BasicType long offset FormalParameter BasicType long value StatementExpression MethodInvocation MemberReference offset BinaryOperation >> MemberReference Literal 3 checkBounds StatementExpression MethodInvocation MemberReference buffer MethodInvocation MemberReference offset index MemberReference value	1
MethodDeclaration Modifier public Annotation Override BasicType boolean ReturnStatement Literal false	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier private final static ReferenceType String LocalVariableDeclaration ReferenceType String VariableDeclarator arch MethodInvocation MethodInvocation toLowerCase Literal "os.arch" Literal "unknown" getProperty ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator s MethodInvocation ARCH_NAMES keySet BlockStatement IfStatement MethodInvocation s MemberReference arch equalsIgnoreCase BlockStatement ReturnStatement MethodInvocation ARCH_NAMES MemberReference s get ReturnStatement MemberReference arch	1
MethodDeclaration Modifier public encode FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType IRubyObject o FormalParameter ReferenceType ByteList result LocalVariableDeclaration BasicType long VariableDeclarator l MethodInvocation MemberReference o IfStatement BinaryOperation == MemberReference Platform BYTE_ORDER MemberReference Platform BIG_ENDIAN StatementExpression MethodInvocation MemberReference result MemberReference l StatementExpression MethodInvocation MemberReference result MemberReference l	1
MethodDeclaration Modifier public FormalParameter ReferenceType Node node FormalParameter ReferenceType BodyCompiler context FormalParameter BasicType boolean expr IfStatement MemberReference RubyInstanceConfig PEEPHOLE_OPTZ BlockStatement IfStatement MemberReference expr BlockStatement StatementExpression MethodInvocation context loadNil StatementExpression MethodInvocation context pollThreadEvents BlockStatement StatementExpression MethodInvocation context loadNil StatementExpression MethodInvocation context pollThreadEvents IfStatement MemberReference ! expr StatementExpression MethodInvocation context consumeCurrentValue	1
MethodDeclaration Modifier static ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject x FormalParameter ReferenceType IRubyObject y ReturnStatement MethodInvocation MemberReference context MethodInvocation context MethodInvocation getComplex getRuntime MemberReference x MemberReference y	0
MethodDeclaration Modifier public clear StatementExpression MethodInvocation	0
MethodDeclaration Modifier public FormalParameter BasicType int StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public final FormalParameter BasicType int size StatementExpression Assignment MemberReference ArrayCreator ReferenceType CacheEntry MemberReference size = StatementExpression MethodInvocation Arrays MemberReference MemberReference CacheEntry fill	0
MethodDeclaration Modifier public ReferenceType Object getValue ReturnStatement This	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime IfStatement MethodInvocation runtime isVerbose BlockStatement StatementExpression MethodInvocation runtime MethodInvocation MemberReference ID Literal is use instead" Literal Literal warning getWarnings ReturnStatement MethodInvocation	0
MethodDeclaration Modifier private final static BasicType boolean checkFieldName FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType IRubyObject fieldName IfStatement BinaryOperation || BinaryOperation instanceof MemberReference fieldName ReferenceType RubyString BinaryOperation instanceof MemberReference fieldName ReferenceType RubySymbol BlockStatement ThrowStatement MethodInvocation runtime BinaryOperation + BinaryOperation + Literal "wrong argument type " MethodInvocation fieldName MethodInvocation getName getMetaClass Literal " (expected String or newTypeError ReturnStatement Literal true	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "div" ReferenceType IRubyObject op_idiv FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject other ReturnStatement MethodInvocation MemberReference context MethodInvocation MemberReference context This MemberReference other f_div f_floor	1
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType RubyHash VariableDeclarator ClassCreator ReferenceType RubyHash MethodInvocation Ruby StatementExpression MethodInvocation Literal null MethodInvocation Literal "Non matching get assertEquals	0
MethodDeclaration Modifier public visit FormalParameter ReferenceType IRubyObject key FormalParameter ReferenceType IRubyObject value StatementExpression MethodInvocation block MemberReference context MethodInvocation RubyArray MemberReference runtime MemberReference key MemberReference value newArray Literal null Literal null Literal true yield	0
MethodDeclaration Modifier public checkWritable IOException IfStatement MethodInvocation ! modes isWritable ThrowStatement ClassCreator ReferenceType IOException Literal "not for writing"	1
MethodDeclaration Modifier public BasicType boolean ReturnStatement BinaryOperation != BinaryOperation & MemberReference stack Literal 1 Literal 0	0
MethodDeclaration Modifier public static sort FormalParameter ReferenceType Object a FormalParameter ReferenceType Comparator c IfStatement BinaryOperation < MemberReference a length MemberReference BlockStatement StatementExpression MethodInvocation MemberReference a Literal 0 MemberReference a length MemberReference c ReturnStatement StatementExpression MethodInvocation MemberReference a Literal 0 MemberReference a length MemberReference c	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator formatter MethodInvocation Literal StatementExpression MethodInvocation Literal " MethodInvocation formatter Literal format assertEquals	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration BasicType long VariableDeclarator lvalue This MemberReference value IfStatement BinaryOperation == MethodInvocation block MethodInvocation getBody MemberReference BlockStatement LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator nil MethodInvocation runtime getNil ForStatement ForControl VariableDeclaration BasicType long VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference lvalue MemberReference ++ i BlockStatement StatementExpression MethodInvocation block MemberReference context MemberReference nil yield BlockStatement ForStatement ForControl VariableDeclaration BasicType long VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference lvalue MemberReference ++ i BlockStatement StatementExpression MethodInvocation block MemberReference context MethodInvocation RubyFixnum MemberReference runtime MemberReference i newFixnum yield ReturnStatement This	0
MethodDeclaration * public Operand IR_Scope * final FlipNode flipNode = * * if * m.performBooleanBranch(new * public * build(flipNode.getEndNode(), * m.performBooleanBranch(new * public * * m.getVariableCompiler().assignLocalVariable(flipNode.getIndex(), flipNode.getDepth(), * * new * public * * * * * new * public * * * m.getVariableCompiler().assignLocalVariable(flipNode.getIndex(), flipNode.getDepth(), * * * } else * m.performBooleanBranch(new * public * build(flipNode.getEndNode(), * m.performBooleanBranch(new * public * * m.getVariableCompiler().assignLocalVariable(flipNode.getIndex(), flipNode.getDepth(), * * new * public * * * * * new * public * * m.performBooleanBranch(new * public * build(flipNode.getEndNode(), * * m.getVariableCompiler().assignLocalVariable(flipNode.getIndex(), flipNode.getDepth(), * * * new * public * * * * * * * don't require * if * * private * m.performBooleanBranch(new * public * * * new * public * * * * * private * m.performBooleanBranch(new * public * * * new * public * * * * */ Modifier public ReferenceType Operand buildFloat FormalParameter ReferenceType FloatNode node FormalParameter ReferenceType IR_Scope m ReturnStatement ClassCreator ReferenceType Float MethodInvocation node getValue	1
MethodDeclaration Modifier public FormalParameter ReferenceType String name FormalParameter ReferenceType DynamicMethod method SynchronizedStatement MethodInvocation getMethods StatementExpression MethodInvocation MemberReference name MemberReference method StatementExpression MethodInvocation invalidateCacheDescendants	0
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType RubyProc proc StatementExpression MethodInvocation MemberReference proc push ReturnStatement MemberReference proc	0
MethodDeclaration Modifier public ReferenceType ISourcePosition getPosition ReturnStatement MemberReference position	0
MethodDeclaration Modifier private attrAssignNode FormalParameter ReferenceType AttrAssignNode node StatementExpression MethodInvocation sb MethodInvocation MethodInvocation node getName append Literal " " append	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject FormalParameter BasicType int offset FormalParameter ReferenceType IRubyObject nil AssertStatement BinaryOperation < MemberReference offset MemberReference SIZE MemberReference SIZE_ERROR SwitchStatement MemberReference offset SwitchStatementCase Literal 0 IfStatement BinaryOperation == MemberReference variableValueZero Literal null ReturnStatement Assignment MemberReference variableValueZero MemberReference nil = ReturnStatement MemberReference variableValueZero SwitchStatementCase Literal 1 IfStatement BinaryOperation == MemberReference variableValueOne Literal null ReturnStatement Assignment MemberReference variableValueOne MemberReference nil = ReturnStatement MemberReference variableValueOne SwitchStatementCase Literal 2 IfStatement BinaryOperation == MemberReference variableValueTwo Literal null ReturnStatement Assignment MemberReference variableValueTwo MemberReference nil = ReturnStatement MemberReference variableValueTwo SwitchStatementCase ThrowStatement ClassCreator ReferenceType RuntimeException MemberReference SIZE_ERROR	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "chomp!" ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime IfStatement BinaryOperation == MemberReference value realSize Literal 0 ReturnStatement MethodInvocation runtime getNil LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator rsObj MethodInvocation runtime MethodInvocation Literal "$/" get getGlobalVariables IfStatement BinaryOperation == MemberReference rsObj MethodInvocation runtime MethodInvocation getGlobalVariables ReturnStatement MethodInvocation MemberReference runtime smartChopBangCommon19 ReturnStatement MethodInvocation MemberReference runtime MemberReference rsObj chompBangCommon19	1
MethodDeclaration Modifier protected ReferenceType Node FormalParameter ReferenceType ArrayNode argsNode LocalVariableDeclaration BasicType int VariableDeclarator size MethodInvocation argsNode size SwitchStatement MemberReference size SwitchStatementCase Literal 1 IfStatement BinaryOperation instanceof This ReferenceType BlockStatement ReturnStatement ClassCreator ReferenceType MethodInvocation getPosition MemberReference MemberReference name MemberReference argsNode BlockStatement ReturnStatement This SwitchStatementCase Literal 2 IfStatement BinaryOperation instanceof This ReferenceType BlockStatement ReturnStatement ClassCreator ReferenceType MethodInvocation getPosition MemberReference MemberReference name MemberReference argsNode BlockStatement ReturnStatement This SwitchStatementCase Literal 3 IfStatement BinaryOperation instanceof This ReferenceType BlockStatement ReturnStatement ClassCreator ReferenceType MethodInvocation getPosition MemberReference MemberReference name MemberReference argsNode BlockStatement ReturnStatement This SwitchStatementCase ReturnStatement ClassCreator ReferenceType AttrAssignNode MethodInvocation getPosition MemberReference MemberReference name MemberReference argsNode	0
MethodDeclaration Modifier public Annotation Override ReferenceType String FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block ReturnStatement Literal "false"	0
MethodDeclaration Modifier public static Annotation Deprecated ReferenceType Object FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg FormalParameter ReferenceType Class target ReturnStatement MethodInvocation arg MemberReference target toJava	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "reverse_each" ElementValuePair frame Literal true ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Block block ReturnStatement TernaryExpression MethodInvocation block isGiven MethodInvocation MemberReference context MemberReference block MethodInvocation MethodInvocation context getRuntime This Literal "reverse_each" enumeratorize	1
MethodDeclaration Modifier public final put FormalParameter BasicType long offset FormalParameter BasicType short src FormalParameter BasicType int off FormalParameter BasicType int len StatementExpression MethodInvocation BinaryOperation + MemberReference address MemberReference offset MemberReference src MemberReference off MemberReference len	0
MethodDeclaration Modifier public visit FormalParameter ReferenceType IRubyObject key FormalParameter ReferenceType IRubyObject value IfStatement MethodInvocation MemberReference context MemberReference obj MemberReference value equalInternal BlockStatement ThrowStatement ClassCreator ReferenceType MemberReference key MemberReference value	0
MethodDeclaration Modifier public final FormalParameter BasicType byte buffer FormalParameter BasicType int offset FormalParameter BasicType long value StatementExpression MethodInvocation MemberReference buffer MemberReference offset MemberReference value	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal "module_eval" Literal "class_eval" ElementValuePair frame Literal true ReferenceType IRubyObject module_eval FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Block block ReturnStatement MethodInvocation MemberReference context This MemberReference block specificEval	1
MethodDeclaration Modifier public BasicType boolean ReturnStatement MethodInvocation constructor	0
MethodDeclaration Modifier public static ReferenceType RubyInteger bignorm FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType BigInteger bi IfStatement BinaryOperation || BinaryOperation < MethodInvocation bi MemberReference compareTo Literal 0 BinaryOperation > MethodInvocation bi MemberReference compareTo Literal 0 BlockStatement ReturnStatement MethodInvocation MemberReference runtime MemberReference bi newBignum ReturnStatement MethodInvocation runtime MethodInvocation bi longValue newFixnum	0
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 FormalParameter ReferenceType FormalParameter ReferenceType Block ReferenceType Type type ReturnStatement MethodInvocation MemberReference context ArrayCreator ReferenceType IRubyObject ArrayInitializer MethodInvocation RubyArray MethodInvocation context getRuntime MemberReference arg0 MemberReference arg1 MemberReference arg2 MemberReference Block NULL_BLOCK call	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType Object VariableDeclarator newArgs ArrayCreator ReferenceType Object MemberReference args length ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference args length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator arg MemberReference ArraySelector MemberReference i args StatementExpression Assignment MemberReference ArraySelector MemberReference i newArgs MethodInvocation MemberReference arg = LocalVariableDeclaration ReferenceType Object VariableDeclarator result Cast ReferenceType Object MethodInvocation handle TernaryExpression MemberReference isStatic Literal null Cast ReferenceType JavaObjectWrapper MemberReference self MemberReference newArgs invoke ReturnStatement MethodInvocation MemberReference ruby MemberReference result javaToRuby	0
MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject caller FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 FormalParameter ReferenceType Block block TryStatement ReturnStatement MethodInvocation MemberReference context MemberReference caller MemberReference self MemberReference arg1 MemberReference arg2 MemberReference block callBlock CatchClause CatchClauseParameter JumpException.BreakJump bj ReturnStatement MethodInvocation MemberReference context MemberReference bj handleBreakJump CatchClause CatchClauseParameter JumpException.RetryJump rj ThrowStatement MethodInvocation MemberReference context retryJumpError	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "get_string" ElementValuePair required Literal 1 ReferenceType IRubyObject get_string FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject offArg ReturnStatement MethodInvocation MemoryUtil MethodInvocation context getRuntime MethodInvocation getMemoryIO MethodInvocation MemberReference offArg getOffset getTaintedString	1
MethodDeclaration Modifier public ReferenceType ArgsNode ReturnStatement MemberReference args	0
MethodDeclaration Modifier private FormalParameter Modifier final BasicType int val TryStatement StatementExpression MethodInvocation MemberReference intern MemberReference val setInt CatchClause CatchClauseParameter IllegalAccessException e ThrowStatement ClassCreator ReferenceType IllegalStateException MethodInvocation e toString	1
MethodDeclaration Modifier public visit FormalParameter ReferenceType IRubyObject key FormalParameter ReferenceType IRubyObject value StatementExpression MethodInvocation self MemberReference context MemberReference key MemberReference value op_aset19	0
MethodDeclaration Modifier public empty StatementExpression Assignment MemberReference value MemberReference ByteList = StatementExpression Assignment MemberReference MemberReference =	0
MethodDeclaration Modifier private static ReferenceType RubyBigDecimal newZero FormalParameter ReferenceType Ruby runtime FormalParameter BasicType int sign LocalVariableDeclaration ReferenceType RubyBigDecimal VariableDeclarator ClassCreator ReferenceType RubyBigDecimal MemberReference runtime MemberReference BigDecimal IfStatement BinaryOperation < MemberReference sign Literal 0 BlockStatement StatementExpression Assignment MemberReference Literal - 1 = BlockStatement StatementExpression Assignment MemberReference Literal 1 = ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType String name ReturnStatement TernaryExpression BinaryOperation != MemberReference kcode Literal null MethodInvocation kcode toLowerCase Literal null	1
MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext ctx FormalParameter ReferenceType IRubyObject largs FormalParameter ReferenceType Block blk LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator larg MethodInvocation MemberReference runtime MemberReference largs checkArgs StatementExpression MethodInvocation MemberReference localContext MemberReference ctx Literal "first" checkContext StatementExpression Assignment MemberReference ArraySelector Literal 0 holder MemberReference larg = ThrowStatement MemberReference JumpException SPECIAL_JUMP	0
MethodDeclaration Modifier public BasicType boolean isClass ReturnStatement Literal false	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal "each_line" Literal ElementValuePair optional Literal 1 ElementValuePair frame Literal true ReferenceType IRubyObject each_line FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType ArgsFileData VariableDeclarator data MethodInvocation ArgsFileData MemberReference recv getDataFrom IfStatement MethodInvocation ! data MemberReference context next_argv ReturnStatement MethodInvocation context MethodInvocation getNil getRuntime IfStatement BinaryOperation instanceof MemberReference data currentFile ReferenceType RubyIO BlockStatement IfStatement MethodInvocation ! data MemberReference context next_argv ReturnStatement MemberReference recv StatementExpression MethodInvocation data.currentFile MemberReference context Literal ArrayCreator ReferenceType IRubyObject Literal 0 MemberReference block callMethod StatementExpression Assignment MemberReference data next_p Literal 1 = LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator str WhileStatement Assignment MemberReference str MethodInvocation MemberReference context MemberReference recv MemberReference args argf_getline = BlockStatement StatementExpression MethodInvocation block MemberReference context MemberReference str yield ReturnStatement MemberReference recv	1
MethodDeclaration Modifier public Annotation Override ReferenceType String toString TryStatement LocalVariableDeclaration ReferenceType ByteList VariableDeclarator buffer ClassCreator ReferenceType ByteList Literal 20 StatementExpression MethodInvocation buffer MemberReference ArraySelector BinaryOperation - MemberReference index Literal 1 bytes append StatementExpression MethodInvocation buffer MemberReference ArraySelector MemberReference index bytes append StatementExpression MethodInvocation buffer ArrayCreator BasicType byte ArrayInitializer Literal '-' Literal '>' append ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i BinaryOperation + MemberReference index Literal 1 BinaryOperation < MemberReference i BinaryOperation + MemberReference index Literal 20 MemberReference ++ i BlockStatement IfStatement BinaryOperation > MemberReference index MemberReference realSize BreakStatement StatementExpression MethodInvocation buffer MemberReference ArraySelector MemberReference i bytes append StatementExpression MethodInvocation buffer ArrayCreator BasicType byte ArrayInitializer Literal ' ' Literal '.' Literal '.' Literal '.' append ReturnStatement MethodInvocation buffer toString CatchClause CatchClauseParameter Exception e ReturnStatement Literal null	1
MethodDeclaration Modifier public ReferenceType Object case10_line333 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType AliasNode MethodInvocation Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 3 MemberReference yyTop yyVals getPosition Cast ReferenceType String Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals Cast ReferenceType String Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public ReferenceType IRubyObject invoke FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 FormalParameter ReferenceType CallType callType FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType DynamicMethod VariableDeclarator method MethodInvocation MemberReference name searchMethod LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator caller MethodInvocation context IfStatement MethodInvocation MemberReference method MemberReference name MemberReference caller MemberReference callType BlockStatement ReturnStatement MethodInvocation RuntimeHelpers MemberReference context MemberReference self MethodInvocation method getVisibility MemberReference name MemberReference callType MemberReference arg0 MemberReference arg1 MemberReference arg2 MemberReference block ReturnStatement MethodInvocation method MemberReference context MemberReference self This MemberReference name MemberReference arg0 MemberReference arg1 MemberReference arg2 MemberReference block call	1
MethodDeclaration Modifier public ReferenceType Object case428_line1600 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public ReferenceType Object case108_line696 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType Object args StatementExpression MethodInvocation MemberReference args length checkArity ReturnStatement MethodInvocation MemberReference method Literal null MemberReference args invokeDirectWithExceptionHandling	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair module Literal true ElementValuePair visibility MemberReference Visibility PRIVATE ReferenceType IRubyObject start FormalParameter ReferenceType IRubyObject recv ReturnStatement MethodInvocation recv MethodInvocation getNil getRuntime	0
MethodDeclaration Modifier public setLine FormalParameter BasicType int line StatementExpression Assignment This MemberReference line MemberReference line =	0
MethodDeclaration Modifier private FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType String VariableDeclarator ArrayCreator ReferenceType String BinaryOperation + MemberReference length Literal 1 StatementExpression MethodInvocation System MemberReference Literal 0 MemberReference Literal 0 MemberReference length arraycopy StatementExpression Assignment MemberReference MemberReference = StatementExpression Assignment MemberReference ArraySelector BinaryOperation - MemberReference length Literal 1 MemberReference name = LocalVariableDeclaration BasicType boolean VariableDeclarator ArrayCreator BasicType boolean BinaryOperation + MemberReference length Literal 1 StatementExpression MethodInvocation System MemberReference Literal 0 MemberReference Literal 0 MemberReference length arraycopy StatementExpression Assignment MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType ReturnStatement MemberReference reason	0
MethodDeclaration Modifier public ReferenceType ISourcePosition getPosition IfStatement BinaryOperation == MethodInvocation lastPosition getStartLine MethodInvocation source getLine ReturnStatement MemberReference lastPosition StatementExpression Assignment MemberReference lastPosition ClassCreator ReferenceType MethodInvocation source getFilename MethodInvocation source getLine = ReturnStatement MemberReference lastPosition	1
MethodDeclaration Modifier public static ReferenceType RubyRange FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject begin FormalParameter ReferenceType IRubyObject end LocalVariableDeclaration ReferenceType RubyRange VariableDeclarator ClassCreator ReferenceType RubyRange MemberReference runtime MethodInvocation runtime getRange StatementExpression MethodInvocation MemberReference context MemberReference begin MemberReference end Literal false init ReturnStatement MemberReference	0
MethodDeclaration Modifier public static ReferenceType IRubyObject f_rshift FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject x FormalParameter ReferenceType IRubyObject y ReturnStatement MethodInvocation x MemberReference context Literal ">>" MemberReference y callMethod	1
MethodDeclaration Modifier public visit FormalParameter ReferenceType IRubyObject key FormalParameter ReferenceType IRubyObject value StatementExpression MethodInvocation block MemberReference context MemberReference key yield	0
MethodDeclaration Modifier public final BasicType int FormalParameter BasicType byte bytes FormalParameter BasicType int p FormalParameter BasicType int len FormalParameter ReferenceType Encoding enc ReturnStatement MethodInvocation MemberReference bytes MemberReference p MemberReference len MemberReference enc MemberReference CR_UNKNOWN Literal 0	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "binding" ReferenceType IRubyObject ReturnStatement MethodInvocation MethodInvocation MethodInvocation block getBinding getRuntime	0
MethodDeclaration Modifier public static FormalParameter BasicType long n LocalVariableDeclaration BasicType long VariableDeclarator start MethodInvocation System currentTimeMillis LocalVariableDeclaration BasicType long VariableDeclarator result MethodInvocation MemberReference n StatementExpression MethodInvocation System.out BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal " BinaryOperation - MethodInvocation System currentTimeMillis MemberReference start Literal "ms for MemberReference n Literal ") = " MemberReference result println	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType join FormalParameter ReferenceType Object args StatementExpression MethodInvocation join MemberReference Channel Literal null send ReturnStatement Literal - 1	0
MethodDeclaration Modifier private static FormalParameter ReferenceType IRubyObject receiver FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType RubySymbol name StatementExpression MethodInvocation receiver MemberReference context Literal MemberReference name callMethod	0
MethodDeclaration Modifier public FormalParameter ReferenceType ModeFlags InvalidValueException IfStatement MethodInvocation ! MemberReference originalModes BlockStatement ThrowStatement ClassCreator ReferenceType InvalidValueException	0
MethodDeclaration Modifier public final ReferenceType Object ReturnStatement MemberReference generation token	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "[]=" ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 AssertStatement MethodInvocation ! MethodInvocation is1_9 getRuntime IfStatement BinaryOperation instanceof MemberReference arg0 ReferenceType RubyFixnum BlockStatement StatementExpression MethodInvocation Cast ReferenceType RubyFixnum MemberReference arg0 MemberReference arg1 store IfStatement BinaryOperation instanceof MemberReference arg0 ReferenceType RubyRange BlockStatement LocalVariableDeclaration BasicType long VariableDeclarator beglen Cast ReferenceType RubyRange MemberReference arg0 StatementExpression MethodInvocation MemberReference ArraySelector Literal 0 beglen MemberReference ArraySelector Literal 1 beglen MemberReference arg1 IfStatement BinaryOperation instanceof MemberReference arg0 ReferenceType RubySymbol BlockStatement ThrowStatement MethodInvocation MethodInvocation Literal "Symbol as array index" newTypeError getRuntime BlockStatement StatementExpression MethodInvocation MethodInvocation RubyNumeric MemberReference arg0 num2long MemberReference arg1 store ReturnStatement MemberReference arg1	0
MethodDeclaration Modifier public prepare FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 FormalParameter ReferenceType IRubyObject arg3 FormalParameter ReferenceType IRubyObject arg4 FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType DynamicScope VariableDeclarator scope MethodInvocation context getCurrentScope IfStatement MemberReference isSimple BlockStatement StatementExpression MethodInvocation scope MemberReference arg0 MemberReference arg1 MemberReference arg2 MemberReference arg3 MemberReference arg4 setArgValues BlockStatement StatementExpression MethodInvocation MemberReference context MemberReference runtime MemberReference self ArrayCreator ReferenceType IRubyObject ArrayInitializer MemberReference arg0 MemberReference arg1 MemberReference arg2 MemberReference arg3 MemberReference arg4 MemberReference block prepare IfStatement BinaryOperation != MethodInvocation getBlock Literal null StatementExpression MethodInvocation MemberReference scope MemberReference runtime MemberReference block processBlockArg	1
MethodDeclaration Modifier public ReferenceType Object case460_line1742 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal Cast ReferenceType BlockArgNode MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public Annotation JRubyMethod ReferenceType RubyModule ReturnStatement MethodInvocation Java MethodInvocation getRuntime This getProxyClass	1
MethodDeclaration Modifier public Annotation Override BasicType double ReturnStatement MemberReference value	0
MethodDeclaration Modifier private static ReferenceType Object TryStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator MethodInvocation Class Literal forName LocalVariableDeclaration ReferenceType java ReferenceType lang ReferenceType reflect ReferenceType Field VariableDeclarator f MethodInvocation Literal getDeclaredField StatementExpression MethodInvocation f Literal true setAccessible ReturnStatement ClassReference MethodInvocation MethodInvocation f MemberReference get cast ReferenceType Unsafe CatchClause CatchClauseParameter Exception ex ReturnStatement Literal null	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType IRubyObject end FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject index LocalVariableDeclaration BasicType int VariableDeclarator i MethodInvocation RubyNumeric MemberReference index num2int LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration BasicType int VariableDeclarator e MethodInvocation MemberReference runtime MemberReference i ReturnStatement TernaryExpression BinaryOperation < MemberReference e Literal 0 MethodInvocation runtime getNil MethodInvocation RubyFixnum MemberReference runtime MemberReference e newFixnum	0
MethodDeclaration Modifier public ReferenceType NodeType getNodeType ReturnStatement MemberReference NodeType IFNODE	0
MethodDeclaration Modifier public ReferenceType IRubyObject getValue FormalParameter BasicType int offset FormalParameter BasicType int depth AssertStatement BinaryOperation != MemberReference depth Literal 0 MemberReference SIZE_ERROR ReturnStatement MethodInvocation parent MemberReference offset BinaryOperation - MemberReference depth Literal 1 getValue	1
MethodDeclaration Modifier public BasicType boolean ReturnStatement BinaryOperation == MemberReference MemberReference	0
MethodDeclaration Modifier public compileZArray FormalParameter ReferenceType Node node FormalParameter ReferenceType BodyCompiler context FormalParameter BasicType boolean expr LocalVariableDeclaration BasicType boolean VariableDeclarator doit BinaryOperation || MemberReference expr MemberReference ! RubyInstanceConfig PEEPHOLE_OPTZ LocalVariableDeclaration BasicType boolean VariableDeclarator popit BinaryOperation && MemberReference ! RubyInstanceConfig PEEPHOLE_OPTZ MemberReference ! expr IfStatement MemberReference doit BlockStatement StatementExpression MethodInvocation context IfStatement MemberReference popit StatementExpression MethodInvocation context consumeCurrentValue	1
MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule klazz FormalParameter ReferenceType String name ReturnStatement MethodInvocation MemberReference context MemberReference self MemberReference klazz MemberReference name MemberReference Block NULL_BLOCK call	0
MethodDeclaration Modifier public ReferenceType IRubyObject convert FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType Object object IfStatement BinaryOperation == MemberReference object Literal null ReturnStatement MethodInvocation runtime getNil ReturnStatement MethodInvocation RubyFixnum MemberReference runtime Cast ReferenceType Short MemberReference object newFixnum	0
MethodDeclaration Modifier public static ReferenceType Ruby FormalParameter ReferenceType List FormalParameter ReferenceType LocalVariableDeclaration ReferenceType RubyInstanceConfig VariableDeclarator config ClassCreator ReferenceType RubyInstanceConfig IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation config MemberReference ReturnStatement MethodInvocation MemberReference MemberReference config	0
MethodDeclaration Modifier public FormalParameter ReferenceType reaction IfStatement BinaryOperation != BinaryOperation & BinaryOperation & MemberReference mask MemberReference ~ asyncMask MemberReference reaction asyncMask Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "Cannot use a channel in a position" IfStatement BinaryOperation != BinaryOperation & BinaryOperation & MemberReference reaction mask MemberReference ~ reaction asyncMask MemberReference asyncMask Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "Cannot use an channel in the head position of a StatementExpression Assignment MemberReference Literal null = LocalVariableDeclaration Modifier final BasicType int VariableDeclarator MemberReference reaction ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference length MemberReference ++ i BlockStatement LocalVariableDeclaration Modifier final BasicType int VariableDeclarator index MemberReference ArraySelector MemberReference i IfStatement BinaryOperation <= MethodInvocation reactionsPerChannel size MemberReference index BlockStatement StatementExpression MethodInvocation reactionsPerChannel BinaryOperation + MemberReference index Literal 1 WhileStatement BinaryOperation <= MethodInvocation reactionsPerChannel size MemberReference index BlockStatement StatementExpression MethodInvocation reactionsPerChannel Literal null add LocalVariableDeclaration ReferenceType ArrayList TypeArgument ReferenceType VariableDeclarator MethodInvocation reactionsPerChannel MemberReference index get IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType ArrayList TypeArgument ReferenceType = StatementExpression MethodInvocation reactionsPerChannel MemberReference index MemberReference set StatementExpression MethodInvocation MemberReference reaction add StatementExpression Assignment MemberReference asyncMask MemberReference reaction asyncMask |= StatementExpression Assignment MemberReference mask MemberReference reaction mask |=	1
MethodDeclaration Modifier public ReferenceType Object case173_line696 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop LocalVariableDeclaration ReferenceType ISourcePosition VariableDeclarator position MethodInvocation Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals getPosition LocalVariableDeclaration ReferenceType Node VariableDeclarator body TernaryExpression BinaryOperation == Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals Literal null MemberReference NilImplicitNode NIL Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals StatementExpression Assignment MemberReference yyVal MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 4 MemberReference yyTop yyVals ClassCreator ReferenceType RescueNode MemberReference position Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals ClassCreator ReferenceType RescueBodyNode MemberReference position Literal null MemberReference body Literal null Literal null node_assign = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public BasicType boolean isConstant ForStatement EnhancedForControl VariableDeclaration ReferenceType Operand VariableDeclarator o MemberReference IfStatement MethodInvocation ! o isConstant ReturnStatement Literal false ReturnStatement Literal true	1
MethodDeclaration Modifier public BasicType boolean ReturnStatement MethodInvocation MemberReference getFlag	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "read" ReferenceType IRubyObject read StatementExpression MethodInvocation IfStatement BinaryOperation >= MemberReference pos MemberReference length ReturnStatement MethodInvocation MethodInvocation getNil getRuntime LocalVariableDeclaration ReferenceType RubyString VariableDeclarator result MethodInvocation MethodInvocation MemberReference ArraySelector MemberReference pos newString getRuntime StatementExpression MemberReference ++ pos ReturnStatement MemberReference result	1
MethodDeclaration Modifier final BasicType int FormalParameter ReferenceType Member member ReturnStatement MemberReference ArraySelector MemberReference member index	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair required Literal 1 ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType RubyArray FormalParameter ReferenceType IRubyObject obj StatementExpression MethodInvocation modifyCheck ReturnStatement MethodInvocation MemberReference obj concat	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ReferenceType IRubyObject op_ceil FormalParameter ReferenceType ThreadContext context ReturnStatement MethodInvocation MemberReference context MethodInvocation MemberReference context MethodInvocation MemberReference context MemberReference num f_negate MemberReference den f_idiv f_negate	1
MethodDeclaration Modifier private static BasicType int fourBytesToInt FormalParameter BasicType byte b FormalParameter BasicType int offset LocalVariableDeclaration BasicType int VariableDeclarator value StatementExpression Assignment MemberReference value MethodInvocation MemberReference ArraySelector MemberReference ++ offset b byteToUnsigned = StatementExpression Assignment MemberReference value BinaryOperation << MethodInvocation MemberReference ArraySelector MemberReference ++ offset b byteToUnsigned Literal 8 |= StatementExpression Assignment MemberReference value BinaryOperation << MethodInvocation MemberReference ArraySelector MemberReference ++ offset b byteToUnsigned Literal 16 |= StatementExpression Assignment MemberReference value BinaryOperation << MethodInvocation MemberReference ArraySelector MemberReference ++ offset b byteToUnsigned Literal 24 |= ReturnStatement MemberReference value	1
MethodDeclaration Modifier private BasicType int FormalParameter ReferenceType String name ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference length MemberReference ++ i BlockStatement IfStatement BinaryOperation == MemberReference name MemberReference ArraySelector MemberReference i ReturnStatement MemberReference i ReturnStatement Literal - 1	1
MethodDeclaration Modifier public ReferenceType Object case240_line932 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support MethodInvocation Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 4 MemberReference yyTop yyVals getPosition MethodInvocation support MethodInvocation Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 4 MemberReference yyTop yyVals getPosition Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 4 MemberReference yyTop yyVals newArrayNode Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals arg_concat = StatementExpression Assignment MemberReference yyVal MethodInvocation support Cast ReferenceType Node MemberReference yyVal Cast ReferenceType BlockPassNode MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals arg_blk_pass = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier private static ReferenceType DynamicMethod selectInternalMM FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType Visibility visibility FormalParameter ReferenceType CallType callType IfStatement BinaryOperation == MemberReference visibility MemberReference Visibility PRIVATE BlockStatement ReturnStatement MethodInvocation runtime IfStatement BinaryOperation == MemberReference visibility MemberReference Visibility PROTECTED BlockStatement ReturnStatement MethodInvocation runtime IfStatement BinaryOperation == MemberReference callType MemberReference CallType VARIABLE BlockStatement ReturnStatement MethodInvocation runtime IfStatement BinaryOperation == MemberReference callType MemberReference CallType BlockStatement ReturnStatement MethodInvocation runtime BlockStatement ReturnStatement MethodInvocation runtime	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair frame Literal true ReferenceType IRubyObject FormalParameter Modifier final ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject to FormalParameter Modifier final ReferenceType Block block ReturnStatement TernaryExpression MethodInvocation block isGiven MethodInvocation MemberReference context MemberReference to MemberReference block MethodInvocation MethodInvocation context getRuntime This Literal MemberReference to enumeratorize	0
MethodDeclaration Modifier public BasicType long FormalParameter ReferenceType Process process TryStatement IfStatement MethodInvocation ProcessImpl MemberReference process isInstance BlockStatement ReturnStatement Cast ReferenceType Long MethodInvocation MemberReference process get CatchClause CatchClauseParameter Exception e ReturnStatement MethodInvocation process hashCode	1
MethodDeclaration Modifier public final FormalParameter BasicType long offset FormalParameter BasicType int value StatementExpression MethodInvocation BinaryOperation + MemberReference address MemberReference offset MemberReference value	0
MethodDeclaration Modifier public ReferenceType RaiseException newRuntimeError FormalParameter ReferenceType String message ReturnStatement MethodInvocation MethodInvocation getRuntimeError MemberReference message newRaiseException	0
MethodDeclaration Modifier public static ReferenceType IRubyObject createRawBacktrace FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType stackTrace FormalParameter BasicType boolean filter LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator traceArray MethodInvocation RubyArray MemberReference runtime newArray ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference stackTrace length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator element MemberReference ArraySelector MemberReference i stackTrace IfStatement MemberReference filter BlockStatement IfStatement BinaryOperation || MethodInvocation element MethodInvocation Literal startsWith getClassName BinaryOperation < MethodInvocation element getLineNumber Literal 0 BlockStatement ContinueStatement LocalVariableDeclaration ReferenceType RubyString VariableDeclarator str MethodInvocation RubyString MemberReference runtime MethodInvocation MemberReference element createRubyBacktraceString newString StatementExpression MethodInvocation traceArray MemberReference str append ReturnStatement MemberReference traceArray	1
MethodDeclaration Modifier public final put FormalParameter BasicType long offset FormalParameter BasicType int src FormalParameter BasicType int off FormalParameter BasicType int len StatementExpression MethodInvocation BinaryOperation + MemberReference address MemberReference offset MemberReference src MemberReference off MemberReference len	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support MethodInvocation Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 4 MemberReference yyTop yyVals getPosition Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 3 MemberReference yyTop yyVals Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals newCaseNode = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier protected BasicType int FormalParameter BasicType int c IOException ReturnStatement MethodInvocation src Literal '\n' skipUntil	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "instance_methods" ElementValuePair optional Literal 1 ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType RubyArray FormalParameter ReferenceType IRubyObject args ReturnStatement MethodInvocation MemberReference args MemberReference PRIVATE Literal true Literal true instance_methods	1
MethodDeclaration Modifier public static ReferenceType Set TypeArgument ReferenceType String getRubyNamesForJavaName FormalParameter ReferenceType String javaName FormalParameter ReferenceType List TypeArgument ReferenceType Method methods LocalVariableDeclaration ReferenceType String VariableDeclarator javaPropertyName MethodInvocation JavaUtil MemberReference javaName getJavaPropertyName LocalVariableDeclaration ReferenceType String VariableDeclarator rubyName MethodInvocation JavaUtil MemberReference javaName getRubyCasedName LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType String VariableDeclarator nameSet ClassCreator ReferenceType TypeArgument ReferenceType String StatementExpression MethodInvocation nameSet MemberReference javaName add StatementExpression MethodInvocation nameSet MemberReference rubyName add LocalVariableDeclaration ReferenceType String VariableDeclarator rubyPropertyName Literal null ForStatement EnhancedForControl VariableDeclaration ReferenceType Method VariableDeclarator method MemberReference methods BlockStatement LocalVariableDeclaration ReferenceType Class TypeArgument ? VariableDeclarator argTypes MethodInvocation method getParameterTypes LocalVariableDeclaration ReferenceType Class TypeArgument ? VariableDeclarator resultType MethodInvocation method getReturnType LocalVariableDeclaration BasicType int VariableDeclarator argCount MemberReference argTypes length IfStatement BinaryOperation != MemberReference javaPropertyName Literal null BlockStatement IfStatement MethodInvocation rubyName Literal "get_" startsWith BlockStatement StatementExpression Assignment MemberReference rubyPropertyName MethodInvocation rubyName Literal 4 substring = IfStatement BinaryOperation || BinaryOperation == MemberReference argCount Literal 0 BinaryOperation && BinaryOperation == MemberReference argCount Literal 1 BinaryOperation == MemberReference ArraySelector Literal 0 argTypes ClassReference BasicType int BlockStatement StatementExpression MethodInvocation nameSet MemberReference javaPropertyName add StatementExpression MethodInvocation nameSet MemberReference rubyPropertyName add IfStatement BinaryOperation == MemberReference resultType ClassReference BasicType boolean BlockStatement StatementExpression MethodInvocation nameSet BinaryOperation + MemberReference javaPropertyName Literal '?' add StatementExpression MethodInvocation nameSet BinaryOperation + MemberReference rubyPropertyName Literal '?' add IfStatement MethodInvocation rubyName Literal "set_" startsWith BlockStatement StatementExpression Assignment MemberReference rubyPropertyName MethodInvocation rubyName Literal 4 substring = IfStatement BinaryOperation && BinaryOperation == MemberReference argCount Literal 1 BinaryOperation == MemberReference resultType VoidClassReference BlockStatement StatementExpression MethodInvocation nameSet BinaryOperation + MemberReference javaPropertyName Literal '=' add StatementExpression MethodInvocation nameSet BinaryOperation + MemberReference rubyPropertyName Literal '=' add IfStatement MethodInvocation rubyName Literal startsWith BlockStatement StatementExpression Assignment MemberReference rubyPropertyName MethodInvocation rubyName Literal 3 substring = IfStatement BinaryOperation == MemberReference resultType ClassReference BasicType boolean BlockStatement StatementExpression MethodInvocation nameSet MemberReference javaPropertyName add StatementExpression MethodInvocation nameSet MemberReference rubyPropertyName add StatementExpression MethodInvocation nameSet BinaryOperation + MemberReference javaPropertyName Literal '?' add StatementExpression MethodInvocation nameSet BinaryOperation + MemberReference rubyPropertyName Literal '?' add BlockStatement IfStatement BinaryOperation == MemberReference resultType ClassReference BasicType boolean BlockStatement StatementExpression MethodInvocation nameSet BinaryOperation + MemberReference javaName Literal '?' add StatementExpression MethodInvocation nameSet BinaryOperation + MemberReference rubyName Literal '?' add ReturnStatement MemberReference nameSet	1
MethodDeclaration Modifier public BasicType int getSize ReturnStatement MemberReference vTableSize	0
MethodDeclaration Modifier public BasicType int getLine ReturnStatement MemberReference line	0
MethodDeclaration Modifier private final static ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject FormalParameter BasicType int count FormalParameter BasicType int FormalParameter BasicType boolean clear FormalParameter ReferenceType Block block LocalVariableDeclaration BasicType int VariableDeclarator typeSize MethodInvocation MemberReference context MemberReference LocalVariableDeclaration BasicType int VariableDeclarator total BinaryOperation * MemberReference typeSize MemberReference count IfStatement BinaryOperation < MemberReference total Literal 0 BlockStatement ThrowStatement MethodInvocation context MethodInvocation MethodInvocation String Literal size objects of %d MemberReference count MemberReference typeSize format newArgumentError getRuntime LocalVariableDeclaration ReferenceType AllocatedDirectMemoryIO VariableDeclarator io MethodInvocation Factory MethodInvocation MethodInvocation context getRuntime TernaryExpression BinaryOperation > MemberReference total Literal 0 MemberReference total Literal 1 MemberReference MemberReference clear getInstance IfStatement BinaryOperation == MemberReference io Literal null BlockStatement LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime ThrowStatement ClassCreator ReferenceType RaiseException MemberReference runtime MethodInvocation runtime MethodInvocation String Literal "Failed to %d objects of %d MemberReference typeSize MemberReference count format Literal true LocalVariableDeclaration ReferenceType MemoryPointer VariableDeclarator ptr ClassCreator ReferenceType MemoryPointer MethodInvocation context getRuntime MemberReference recv MemberReference io MemberReference total MemberReference typeSize IfStatement MethodInvocation block isGiven BlockStatement TryStatement ReturnStatement MethodInvocation block MemberReference context MemberReference ptr yield StatementExpression MethodInvocation io free BlockStatement ReturnStatement MemberReference ptr	1
MethodDeclaration Modifier public ReferenceType Object convert FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject rubyObject ReturnStatement MethodInvocation rubyObject ClassReference ReferenceType Double toJava	0
MethodDeclaration Modifier public Annotation JRubyMethod ReferenceType IRubyObject ReturnStatement MethodInvocation Java MethodInvocation getRuntime MethodInvocation MethodInvocation getClassLoader javaClass getInstance	1
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType ArrayNode MethodInvocation getPosition = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier private Annotation Deprecated ReferenceType Class getReturnClass FormalParameter ReferenceType String method FormalParameter ReferenceType Class args Exception ReturnStatement MethodInvocation type MethodInvocation getReturnType MemberReference method MemberReference args getMethod	1
MethodDeclaration Modifier public final ReferenceType RubyRegexp FormalParameter ReferenceType Ruby runtime FormalParameter BasicType int i FormalParameter ReferenceType String name FormalParameter BasicType int options ReturnStatement MethodInvocation runtimeCache MemberReference runtime MemberReference i MemberReference name MemberReference options	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject convertToArray FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType IRubyObject value ReturnStatement MethodInvocation MemberReference runtime MemberReference value Literal false	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair required Literal 1 ElementValuePair module Literal true ElementValuePair visibility MemberReference Visibility PRIVATE ReferenceType IRubyObject euid_set FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject arg ReturnStatement MethodInvocation MethodInvocation context getRuntime MemberReference arg euid_set	1
MethodDeclaration Modifier public static ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType IRubyObject value ThrowStatement MethodInvocation runtime MemberReference BREAK MemberReference value Literal "unexpected	0
MethodDeclaration Modifier private ReferenceType String LocalVariableDeclaration ReferenceType BigDecimal VariableDeclarator val MethodInvocation value abs ReturnStatement MethodInvocation val MethodInvocation toString unscaledValue	1
MethodDeclaration Modifier public static BasicType boolean getBoolean FormalParameter ReferenceType String property FormalParameter BasicType boolean TryStatement IfStatement BinaryOperation != MethodInvocation System MemberReference property getProperty Literal null BlockStatement ReturnStatement MethodInvocation Boolean MemberReference property getBoolean BlockStatement ReturnStatement MemberReference CatchClause CatchClauseParameter SecurityException se ReturnStatement MemberReference	0
MethodDeclaration Modifier private ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Regex pattern FormalParameter ReferenceType Regex prepared FormalParameter ReferenceType RubyHash hash FormalParameter ReferenceType Block block FormalParameter ReferenceType RubyRegexp regexp LocalVariableDeclaration BasicType int VariableDeclarator begin MemberReference value begin LocalVariableDeclaration BasicType int VariableDeclarator len MemberReference value realSize LocalVariableDeclaration BasicType int VariableDeclarator BinaryOperation + MemberReference begin MemberReference len LocalVariableDeclaration BasicType byte VariableDeclarator bytes MemberReference value bytes LocalVariableDeclaration ReferenceType Encoding VariableDeclarator enc MemberReference value encoding LocalVariableDeclaration Modifier final ReferenceType Matcher VariableDeclarator matcher MethodInvocation prepared MemberReference bytes MemberReference begin MemberReference matcher LocalVariableDeclaration ReferenceType DynamicScope VariableDeclarator scope MethodInvocation context getCurrentScope IfStatement BinaryOperation >= MethodInvocation matcher MemberReference begin MemberReference MemberReference Option NONE search Literal 0 BlockStatement LocalVariableDeclaration ReferenceType RubyMatchData VariableDeclarator match MethodInvocation RubyRegexp MemberReference context This MemberReference scope MemberReference matcher MemberReference pattern StatementExpression Assignment MemberReference match regexp MemberReference regexp = LocalVariableDeclaration Modifier final ReferenceType RubyString VariableDeclarator repl LocalVariableDeclaration Modifier final BasicType int VariableDeclarator tuFlags LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator MethodInvocation MemberReference runtime MethodInvocation matcher getBegin BinaryOperation - MethodInvocation matcher getEnd MethodInvocation matcher getBegin makeShared19 IfStatement BinaryOperation == MemberReference hash Literal null BlockStatement StatementExpression Assignment MemberReference tuFlags Literal 0 = StatementExpression Assignment MemberReference repl MethodInvocation MemberReference context MethodInvocation block MemberReference context MemberReference yield objAsString = BlockStatement StatementExpression Assignment MemberReference tuFlags MemberReference hash flags = StatementExpression Assignment MemberReference repl MethodInvocation MemberReference context MethodInvocation hash MemberReference context MemberReference op_aref objAsString = StatementExpression MethodInvocation MemberReference bytes MemberReference len MemberReference enc modifyCheck StatementExpression MethodInvocation StatementExpression MethodInvocation scope MemberReference match setBackRef ReturnStatement MethodInvocation MemberReference context MemberReference pattern MemberReference matcher MemberReference repl BinaryOperation | MemberReference tuFlags MemberReference repl flags BlockStatement ReturnStatement MethodInvocation scope MethodInvocation runtime getNil setBackRef	0
MethodDeclaration Modifier public static ReferenceType Object callIt FormalParameter ReferenceType Object a FormalParameter ReferenceType Object b FormalParameter ReferenceType Object c FormalParameter ReferenceType SingleMethodInterface obj ReturnStatement MethodInvocation obj callIt	0
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement MethodInvocation String MemberReference value valueOf	0
MethodDeclaration Modifier private BasicType int FormalParameter ReferenceType IRubyObject arg ReturnStatement MethodInvocation MemberReference arg num2int	0
MethodDeclaration Modifier public BasicType int compare FormalParameter ReferenceType IRubyObject o1 FormalParameter ReferenceType IRubyObject o2 ReturnStatement MethodInvocation RubyFixnum MemberReference ArraySelector Literal 1 MethodInvocation MemberReference localContext Literal "<=>" MemberReference ArraySelector Literal 1 o2 callMethod o1 fix2int	0
MethodDeclaration Modifier public replace FormalParameter ReferenceType DocumentFilter ReferenceType FilterBypass fb FormalParameter BasicType int offset FormalParameter BasicType int length FormalParameter ReferenceType String text FormalParameter ReferenceType AttributeSet attrs BadLocationException IfStatement BinaryOperation >= MemberReference offset MemberReference startPos StatementExpression SuperMethodInvocation MemberReference fb MemberReference offset MemberReference length MemberReference text MemberReference attrs replace	1
MethodDeclaration Modifier private ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject sep FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime IfStatement MethodInvocation sep isNil BlockStatement StatementExpression MethodInvocation block MemberReference context This yield ReturnStatement This LocalVariableDeclaration ReferenceType ByteList VariableDeclarator val MethodInvocation value shallowDup LocalVariableDeclaration BasicType int VariableDeclarator p MemberReference val begin LocalVariableDeclaration BasicType int VariableDeclarator s MemberReference p LocalVariableDeclaration BasicType int VariableDeclarator len MemberReference val realSize LocalVariableDeclaration BasicType int VariableDeclarator end BinaryOperation + MemberReference p MemberReference len LocalVariableDeclaration BasicType byte VariableDeclarator bytes MemberReference val bytes LocalVariableDeclaration Modifier final ReferenceType Encoding VariableDeclarator enc LocalVariableDeclaration ReferenceType RubyString VariableDeclarator sepStr MethodInvocation sep convertToString IfStatement BinaryOperation == MemberReference sepStr MethodInvocation runtime MethodInvocation getGlobalVariables BlockStatement StatementExpression Assignment MemberReference enc MemberReference val encoding = WhileStatement BinaryOperation < MemberReference p MemberReference end BlockStatement IfStatement BinaryOperation == MemberReference ArraySelector MemberReference p bytes Cast BasicType byte Literal '\n' BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation enc MemberReference bytes MemberReference s MemberReference p MemberReference end leftAdjustCharHead IfStatement MethodInvocation enc MemberReference bytes MemberReference MemberReference end isNewLine BlockStatement StatementExpression Assignment MemberReference p BinaryOperation + MemberReference MethodInvocation StringSupport MemberReference enc MemberReference bytes MemberReference MemberReference end length = StatementExpression MethodInvocation block MemberReference context MethodInvocation MethodInvocation This infectBy MemberReference runtime MemberReference val MemberReference s BinaryOperation - MemberReference p MemberReference s makeShared19 yield StatementExpression Assignment MemberReference s MemberReference ++ p = StatementExpression MemberReference ++ p BlockStatement StatementExpression Assignment MemberReference enc MethodInvocation MemberReference sepStr checkEncoding = LocalVariableDeclaration ReferenceType ByteList VariableDeclarator sepValue MemberReference sepStr value LocalVariableDeclaration Modifier final BasicType int VariableDeclarator newLine LocalVariableDeclaration BasicType int VariableDeclarator rslen MemberReference sepValue realSize IfStatement BinaryOperation == MemberReference rslen Literal 0 BlockStatement StatementExpression Assignment MemberReference newLine Literal '\n' = BlockStatement StatementExpression Assignment MemberReference newLine MethodInvocation MemberReference runtime MemberReference enc MemberReference sepValue bytes MemberReference sepValue begin BinaryOperation + MemberReference sepValue begin MemberReference sepValue realSize codePoint = WhileStatement BinaryOperation < MemberReference p MemberReference end BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator c MethodInvocation MemberReference runtime MemberReference enc MemberReference bytes MemberReference p MemberReference end codePoint DoStatement again Literal false BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator n MethodInvocation MemberReference runtime MemberReference enc MemberReference c codeLength IfStatement BinaryOperation && BinaryOperation == MemberReference rslen Literal 0 BinaryOperation == MemberReference c MemberReference newLine BlockStatement StatementExpression Assignment MemberReference p MemberReference n += IfStatement BinaryOperation && BinaryOperation < MemberReference p MemberReference end BinaryOperation != Assignment MemberReference c MethodInvocation MemberReference runtime MemberReference enc MemberReference bytes MemberReference p MemberReference end codePoint = MemberReference newLine ContinueStatement again WhileStatement BinaryOperation && BinaryOperation < MemberReference p MemberReference end BinaryOperation == MethodInvocation MemberReference runtime MemberReference enc MemberReference bytes MemberReference p MemberReference end codePoint MemberReference newLine StatementExpression Assignment MemberReference p MemberReference n += StatementExpression Assignment MemberReference p MemberReference n -= IfStatement BinaryOperation && BinaryOperation == MemberReference c MemberReference newLine BinaryOperation || BinaryOperation <= MemberReference rslen Literal 1 BinaryOperation == MethodInvocation ByteList MemberReference sepValue bytes MemberReference sepValue begin MemberReference rslen MemberReference bytes MemberReference p MemberReference rslen memcmp Literal 0 BlockStatement StatementExpression MethodInvocation block MemberReference context MethodInvocation MethodInvocation This infectBy MemberReference runtime MemberReference val MemberReference s BinaryOperation + BinaryOperation - MemberReference p MemberReference s TernaryExpression BinaryOperation != MemberReference rslen Literal 0 MemberReference rslen MemberReference n makeShared19 yield StatementExpression Assignment MemberReference s BinaryOperation + MemberReference p TernaryExpression BinaryOperation != MemberReference rslen Literal 0 MemberReference rslen MemberReference n = StatementExpression Assignment MemberReference p MemberReference n += IfStatement BinaryOperation != MemberReference s MemberReference end BlockStatement StatementExpression MethodInvocation block MemberReference context MethodInvocation MethodInvocation This infectBy MemberReference runtime MemberReference val MemberReference s BinaryOperation - MemberReference end MemberReference s makeShared19 yield ReturnStatement This	1
MethodDeclaration Modifier public ReferenceType Object case85_line610 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals Cast ReferenceType String Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals attrset = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public Annotation Override BasicType boolean isClass ReturnStatement Literal false	0
MethodDeclaration Modifier public ReferenceType Object case69_line546 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType MultipleAsgnNode MethodInvocation Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals getPosition Literal null ClassCreator ReferenceType StarNode MethodInvocation getPosition = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public ReferenceType Object invoke FormalParameter ReferenceType Object proxy FormalParameter ReferenceType Method method FormalParameter ReferenceType Object args Throwable LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator rubyArgs ArrayCreator ReferenceType IRubyObject BinaryOperation + MemberReference args length Literal 1 StatementExpression Assignment MemberReference ArraySelector Literal 0 rubyArgs MethodInvocation RubySymbol MemberReference ruby MethodInvocation method getName = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 1 BinaryOperation < MemberReference i MemberReference rubyArgs length MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i rubyArgs MethodInvocation MemberReference ruby MemberReference ArraySelector BinaryOperation - MemberReference i Literal 1 args javaToRuby = ReturnStatement MethodInvocation MethodInvocation MethodInvocation ruby getCurrentContext MemberReference rubyArgs call	0
MethodDeclaration Modifier public static ReferenceType Ruby FormalParameter ReferenceType List FormalParameter ReferenceType RubyInstanceConfig config LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation Ruby MemberReference config newInstance StatementExpression MethodInvocation runtime MethodInvocation MemberReference init StatementExpression MethodInvocation runtime MethodInvocation Literal "java" require ReturnStatement MemberReference runtime	0
MethodDeclaration Modifier protected ReferenceType Class endCall FormalParameter ReferenceType ClassWriter cw FormalParameter ReferenceType MethodVisitor mv FormalParameter ReferenceType String name StatementExpression MethodInvocation MemberReference mv endMethod ReturnStatement MethodInvocation MemberReference cw MemberReference name endClass	0
MethodDeclaration Modifier public final ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject object ReturnStatement MethodInvocation runtimeCache MemberReference runtime Literal 4 MemberReference name MemberReference object getVariable	0
MethodDeclaration Modifier public ReferenceType RubyClass getTime ReturnStatement MemberReference	0
MethodDeclaration Modifier public static ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject value IfStatement BinaryOperation && MethodInvocation ! value isNil BinaryOperation instanceof MemberReference value ReferenceType RubyMatchData ThrowStatement MethodInvocation runtime MemberReference value MethodInvocation runtime newTypeError ReturnStatement MethodInvocation context MethodInvocation MemberReference value setBackRef getCurrentScope	1
MethodDeclaration Modifier public static ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType IRubyObject arg ReturnStatement MethodInvocation MemberReference runtime MemberReference arg euid_set	0
MethodDeclaration Modifier private syntaxError FormalParameter ReferenceType LexerSource src ThrowStatement ClassCreator ReferenceType SyntaxException MemberReference PID MethodInvocation src getPosition MethodInvocation src getCurrentLine BinaryOperation + BinaryOperation + Literal "can't find string \"" MemberReference marker Literal "\" before EOF" MemberReference marker	0
MethodDeclaration Modifier private BasicType int FormalParameter BasicType int c IOException IfStatement BinaryOperation != Assignment MemberReference c MethodInvocation in read = Literal '\n' BlockStatement StatementExpression MethodInvocation Cast BasicType char MemberReference c unread StatementExpression Assignment MemberReference c Literal '\n' = BlockStatement StatementExpression MemberReference ++ offset ReturnStatement MemberReference c	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair required Literal 1 ElementValuePair frame Literal true ElementValuePair meta Literal true ReferenceType IRubyObject kill FormalParameter ReferenceType IRubyObject receiver FormalParameter ReferenceType IRubyObject rubyThread FormalParameter ReferenceType Block block IfStatement BinaryOperation instanceof MemberReference rubyThread ReferenceType RubyThread ThrowStatement MethodInvocation receiver MethodInvocation MemberReference rubyThread MethodInvocation receiver MethodInvocation getThread getRuntime newTypeError getRuntime ReturnStatement Cast ReferenceType RubyThread MemberReference rubyThread	1
MethodDeclaration Modifier public ReferenceType Node parse FormalParameter ReferenceType ByteList content FormalParameter ReferenceType String file FormalParameter ReferenceType DynamicScope scope FormalParameter BasicType int lineNumber FormalParameter BasicType boolean extraPositionInformation IfStatement BinaryOperation != MemberReference parserStats Literal null StatementExpression MethodInvocation parserStats ReturnStatement MethodInvocation parser MemberReference file MemberReference content MemberReference scope ClassCreator ReferenceType ParserConfiguration MethodInvocation getKCode MemberReference lineNumber MemberReference extraPositionInformation Literal false Literal true MemberReference config parse	1
MethodDeclaration Modifier protected ReferenceType JavaCallable FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 LocalVariableDeclaration ReferenceType JavaCallable VariableDeclarator callable IfStatement BinaryOperation == Assignment MemberReference callable MemberReference javaCallable = Literal null BlockStatement LocalVariableDeclaration ReferenceType JavaCallable VariableDeclarator callablesForArity Literal null IfStatement BinaryOperation || BinaryOperation <= MemberReference javaCallables length Literal 3 BinaryOperation == Assignment MemberReference callablesForArity MemberReference ArraySelector Literal 3 javaCallables = Literal null BlockStatement ThrowStatement MethodInvocation self MethodInvocation Literal 3 BinaryOperation - MemberReference javaCallables length Literal 1 newArgumentError getRuntime StatementExpression Assignment MemberReference callable MethodInvocation CallableSelector MemberReference self MemberReference cache MemberReference callablesForArity MemberReference arg0 MemberReference arg1 MemberReference arg2 = BlockStatement IfStatement BinaryOperation != MethodInvocation callable MemberReference length getParameterTypes Literal 3 BlockStatement ThrowStatement MethodInvocation self MethodInvocation Literal 3 MethodInvocation callable MemberReference length getParameterTypes newArgumentError getRuntime ReturnStatement MemberReference callable	1
MethodDeclaration Modifier protected ReferenceType DynamicMethod FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType String methodName ReturnStatement MethodInvocation runtimeCache MemberReference context MemberReference self Literal 4 MemberReference methodName getMethod	0
MethodDeclaration Modifier public load FormalParameter Modifier final ReferenceType Ruby runtime FormalParameter BasicType boolean wrap IOException StatementExpression MethodInvocation runtime MethodInvocation Literal StatementExpression MethodInvocation runtime MethodInvocation Literal StatementExpression MethodInvocation runtime MethodInvocation Literal require StatementExpression MethodInvocation MemberReference runtime create	0
MethodDeclaration Modifier public static ReferenceType RubyHash FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject LocalVariableDeclaration ReferenceType RubyHash VariableDeclarator hash MethodInvocation RubyHash MemberReference runtime StatementExpression MethodInvocation hash MemberReference runtime MemberReference MemberReference StatementExpression MethodInvocation hash MemberReference runtime MemberReference MemberReference ReturnStatement MemberReference hash	0
MethodDeclaration Modifier public StatementExpression MethodInvocation StatementExpression MethodInvocation method Literal ldc StatementExpression MethodInvocation method MethodInvocation ClassReference ReferenceType Ruby p Literal MethodInvocation ClassReference ReferenceType RubyClass ClassReference ReferenceType String sig invokevirtual StatementExpression MethodInvocation method swap StatementExpression MethodInvocation method MethodInvocation ClassReference ReferenceType RubyModule p Literal MethodInvocation ClassReference BasicType boolean MethodInvocation ClassReference ReferenceType IRubyObject params sig invokevirtual StatementExpression MethodInvocation method LocalVariableDeclaration ReferenceType Label VariableDeclarator ClassCreator ReferenceType Label StatementExpression MethodInvocation method MemberReference StatementExpression MethodInvocation StatementExpression MethodInvocation method athrow StatementExpression MethodInvocation method MemberReference label	0
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject args IOException LocalVariableDeclaration ReferenceType ByteList VariableDeclarator sep Cast ReferenceType RubyString MethodInvocation MethodInvocation getGlobalVariables MethodInvocation Literal "$/" get getRuntime IfStatement BinaryOperation > MemberReference args length Literal 0 BlockStatement StatementExpression Assignment MemberReference sep MemberReference ArraySelector Literal 0 MethodInvocation convertToString MethodInvocation getByteList args = ReturnStatement MethodInvocation MemberReference sep	0
MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation MethodInvocation flipNode MemberReference context Literal true compile StatementExpression MethodInvocation context ClassCreator ReferenceType BranchCallback MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation context StatementExpression MethodInvocation context MethodInvocation MethodInvocation flipNode getIndex MethodInvocation flipNode Literal false assignLocalVariable getVariableCompiler ClassCreator ReferenceType BranchCallback MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context performBooleanBranch StatementExpression MethodInvocation context	0
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType IRubyObject cmd FormalParameter ReferenceType IRubyObject arg LocalVariableDeclaration BasicType long VariableDeclarator realCmd MethodInvocation cmd MethodInvocation getLongValue convertToInteger LocalVariableDeclaration BasicType long VariableDeclarator nArg Literal 0 IfStatement BinaryOperation || BinaryOperation || BinaryOperation == MemberReference arg Literal null MethodInvocation arg isNil BinaryOperation == MemberReference arg MethodInvocation runtime getFalse BlockStatement StatementExpression Assignment MemberReference nArg Literal 0 = IfStatement BinaryOperation instanceof MemberReference arg ReferenceType RubyFixnum BlockStatement StatementExpression Assignment MemberReference nArg MethodInvocation RubyFixnum MemberReference arg fix2long = IfStatement BinaryOperation == MemberReference arg MethodInvocation runtime getTrue BlockStatement StatementExpression Assignment MemberReference nArg Literal 1 = BlockStatement ThrowStatement MethodInvocation runtime Literal "JRuby does not support string for second argument yet" newNotImplementedError LocalVariableDeclaration ReferenceType OpenFile VariableDeclarator myOpenFile MethodInvocation getOpenFileChecked IfStatement BinaryOperation == MemberReference realCmd MemberReference FcntlLibrary BlockStatement IfStatement BinaryOperation || BinaryOperation == MemberReference realCmd MethodInvocation value BinaryOperation == MemberReference realCmd MethodInvocation value BlockStatement IfStatement BinaryOperation == BinaryOperation & MemberReference nArg MemberReference FcntlLibrary MemberReference FcntlLibrary BlockStatement BlockStatement TryStatement LocalVariableDeclaration BasicType boolean VariableDeclarator block BinaryOperation != BinaryOperation & MemberReference nArg MemberReference ModeFlags NONBLOCK MemberReference ModeFlags NONBLOCK StatementExpression MethodInvocation myOpenFile MethodInvocation MemberReference block setBlocking getMainStream CatchClause CatchClauseParameter IOException e ThrowStatement MethodInvocation runtime MethodInvocation e getMessage newIOError IfStatement BinaryOperation == MemberReference realCmd MethodInvocation value BlockStatement ReturnStatement TernaryExpression MethodInvocation myOpenFile MethodInvocation isBlocking getMainStream MethodInvocation RubyFixnum MemberReference runtime zero MethodInvocation RubyFixnum MemberReference runtime MemberReference ModeFlags NONBLOCK newFixnum BlockStatement ThrowStatement MethodInvocation runtime Literal "JRuby only F_SETFL and F_GETFL with NONBLOCK for newNotImplementedError ReturnStatement MethodInvocation runtime Literal 0 newFixnum	1
MethodDeclaration Modifier private setupClassFields FormalParameter ReferenceType Class TypeArgument ? javaClass FormalParameter ReferenceType List TypeArgument ReferenceType ConstantField constantFields FormalParameter ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType AssignedName staticNames FormalParameter ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType NamedInstaller staticCallbacks FormalParameter ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType AssignedName instanceNames FormalParameter ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType NamedInstaller instanceCallbacks LocalVariableDeclaration ReferenceType Field VariableDeclarator fields MethodInvocation MemberReference javaClass getFields ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MemberReference fields length BinaryOperation >= MemberReference -- i Literal 0 BlockStatement LocalVariableDeclaration ReferenceType Field VariableDeclarator field MemberReference ArraySelector MemberReference i fields IfStatement BinaryOperation != MemberReference javaClass MethodInvocation field getDeclaringClass ContinueStatement IfStatement MethodInvocation ConstantField MemberReference field isConstant BlockStatement StatementExpression MethodInvocation constantFields ClassCreator ReferenceType ConstantField MemberReference field add ContinueStatement LocalVariableDeclaration BasicType int VariableDeclarator modifiers MethodInvocation field getModifiers IfStatement MethodInvocation Modifier MemberReference modifiers isStatic BlockStatement StatementExpression MethodInvocation MemberReference staticCallbacks MemberReference staticNames MemberReference field MethodInvocation Modifier MemberReference modifiers isFinal Literal true BlockStatement StatementExpression MethodInvocation MemberReference instanceCallbacks MemberReference instanceNames MemberReference field MethodInvocation Modifier MemberReference modifiers isFinal Literal false	1
MethodDeclaration Modifier public ReferenceType RubyFixnum FormalParameter ReferenceType Ruby runtime IfStatement BinaryOperation == MemberReference Literal null BlockStatement ReturnStatement Assignment MemberReference MethodInvocation RubyFixnum MemberReference runtime MemberReference value newFixnum = ReturnStatement MemberReference	1
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 ReturnStatement MethodInvocation body MemberReference context MemberReference arg0 MemberReference arg1 MemberReference arg2 MemberReference MemberReference type	0
MethodDeclaration Modifier static protected ReferenceType RubyModule FormalParameter ReferenceType RubyModule cls IfStatement MethodInvocation cls isSingleton StatementExpression Assignment MemberReference cls MethodInvocation cls getSuperClass = WhileStatement MethodInvocation cls isIncluded StatementExpression Assignment MemberReference cls MethodInvocation cls getMetaClass = IfStatement BinaryOperation instanceof MemberReference cls ReferenceType MetaClass StatementExpression Assignment MemberReference cls Cast ReferenceType MetaClass MemberReference cls = ReturnStatement MemberReference cls	1
MethodDeclaration Modifier public ReferenceType Double FormalParameter ReferenceType Double d ReturnStatement MethodInvocation vri MemberReference d	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 LocalVariableDeclaration ReferenceType Class VariableDeclarator javaClass MethodInvocation MemberReference self LocalVariableDeclaration BasicType int VariableDeclarator x MethodInvocation RubyFixnum MethodInvocation arg0 convertToInteger fix2int LocalVariableDeclaration BasicType int VariableDeclarator y MethodInvocation RubyFixnum MethodInvocation arg1 convertToInteger fix2int LocalVariableDeclaration BasicType int VariableDeclarator z MethodInvocation RubyFixnum MethodInvocation arg2 convertToInteger fix2int ReturnStatement MethodInvocation MethodInvocation context getRuntime MethodInvocation Array MemberReference javaClass ArrayCreator BasicType int ArrayInitializer MemberReference x MemberReference y MemberReference z newInstance javaToRuby	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair optional Literal 2 ElementValuePair module Literal true ElementValuePair visibility MemberReference Visibility PRIVATE ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args Exception StatementExpression Assignment MemberReference args MethodInvocation Arity MethodInvocation recv getRuntime MemberReference args Literal 0 Literal 2 scanArgs = LocalVariableDeclaration BasicType int VariableDeclarator Literal 1 LocalVariableDeclaration ReferenceType ByteList VariableDeclarator bytes Literal null IfStatement MemberReference ! ArraySelector Literal 0 MethodInvocation isNil args StatementExpression Assignment MemberReference bytes MemberReference ArraySelector Literal 0 MethodInvocation convertToString MethodInvocation getByteList args = IfStatement MemberReference ! ArraySelector Literal 1 MethodInvocation isNil args StatementExpression Assignment MemberReference MethodInvocation RubyNumeric MemberReference ArraySelector Literal 1 args fix2int = LocalVariableDeclaration ReferenceType Adler32Ext VariableDeclarator ext ClassCreator ReferenceType Adler32Ext MemberReference IfStatement BinaryOperation != MemberReference bytes Literal null BlockStatement StatementExpression MethodInvocation ext MethodInvocation bytes unsafeBytes MethodInvocation bytes begin MethodInvocation bytes length update ReturnStatement MethodInvocation recv MethodInvocation MethodInvocation ext getValue newFixnum getRuntime	1
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType Node childNodes ReturnStatement MethodInvocation Node MemberReference pre MemberReference rest MethodInvocation getValueNode createList	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair required Literal 1 ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject name ReturnStatement MethodInvocation Java MethodInvocation getRuntime MethodInvocation MethodInvocation MethodInvocation name asJavaString getResourceAsStream javaClass getInstance	1
MethodDeclaration Modifier public Annotation Override ReferenceType String toString IfStatement BinaryOperation instanceof This ReferenceType ReturnStatement Literal "" LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator builder ClassCreator ReferenceType StringBuilder Literal 60 StatementExpression MethodInvocation builder MethodInvocation MethodInvocation getNodeName append Literal "(" append IfStatement BinaryOperation instanceof This ReferenceType INameNode BlockStatement StatementExpression MethodInvocation builder MethodInvocation Cast ReferenceType INameNode This append Literal ":" append StatementExpression MethodInvocation builder MethodInvocation MethodInvocation MethodInvocation getStartLine getPosition append Literal " " append ForStatement EnhancedForControl VariableDeclaration ReferenceType Node VariableDeclarator child MethodInvocation childNodes BlockStatement StatementExpression MethodInvocation builder MethodInvocation MemberReference child append Literal ", " append StatementExpression MethodInvocation builder Literal ")" append ReturnStatement MethodInvocation builder toString	1
MethodDeclaration Modifier public ReferenceType Frame LocalVariableDeclaration BasicType int VariableDeclarator index MemberReference LocalVariableDeclaration ReferenceType Frame VariableDeclarator stack MemberReference IfStatement BinaryOperation == BinaryOperation + MemberReference index Literal 1 MemberReference stack length BlockStatement StatementExpression MethodInvocation ReturnStatement MemberReference ArraySelector BinaryOperation + MemberReference index Literal 1 stack	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "inspect" ReferenceType IRubyObject inspect ReturnStatement MethodInvocation RubyString MethodInvocation getRuntime MethodInvocation ByteList BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "#<" MethodInvocation MethodInvocation getRealClass MethodInvocation getName getMetaClass Literal ": " MethodInvocation Literal ">" plain	0
MethodDeclaration Modifier public ReferenceType Operand FormalParameter ReferenceType GlobalVarNode node FormalParameter ReferenceType IR_Scope m LocalVariableDeclaration ReferenceType Variable VariableDeclarator rv MethodInvocation m getNewVariable StatementExpression MethodInvocation m ClassCreator ReferenceType MemberReference rv MethodInvocation node getName addInstr ReturnStatement MemberReference rv	0
MethodDeclaration Modifier public static ReferenceType IRubyObject FormalParameter ReferenceType Throwable FormalParameter ReferenceType IRubyObject throwables FormalParameter ReferenceType ThreadContext context IfStatement BinaryOperation instanceof MemberReference ReferenceType RaiseException BlockStatement ReturnStatement MethodInvocation Cast ReferenceType RaiseException MemberReference MemberReference throwables MemberReference context isExceptionHandled BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference throwables length MemberReference ++ i BlockStatement IfStatement MethodInvocation MemberReference MemberReference ArraySelector Literal 0 throwables BlockStatement ReturnStatement MethodInvocation context MethodInvocation getTrue getRuntime ReturnStatement MethodInvocation context MethodInvocation getFalse getRuntime	1
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals backrefAssignError ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier private BasicType int getIdentifier FormalParameter BasicType int c IOException DoStatement MethodInvocation MemberReference c isIdentifierChar BlockStatement StatementExpression MethodInvocation tokenBuffer Cast BasicType char MemberReference c append StatementExpression Assignment MemberReference c MethodInvocation src read = ReturnStatement MemberReference c	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "eql?" ElementValuePair required Literal 1 Annotation Override ReferenceType IRubyObject eql_p FormalParameter ReferenceType IRubyObject other IfStatement BinaryOperation instanceof MemberReference other ReferenceType RubyTime BlockStatement LocalVariableDeclaration ReferenceType RubyTime VariableDeclarator otherTime Cast ReferenceType RubyTime MemberReference other ReturnStatement TernaryExpression BinaryOperation && BinaryOperation == MemberReference usec MemberReference otherTime usec BinaryOperation == MethodInvocation MethodInvocation otherTime MethodInvocation MethodInvocation getTrue getRuntime MethodInvocation MethodInvocation getFalse getRuntime ReturnStatement MethodInvocation MethodInvocation getFalse getRuntime	1
MethodDeclaration Modifier protected FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType DynamicScope scope FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject args StatementExpression MethodInvocation MemberReference context MemberReference runtime MemberReference scope MemberReference args MethodInvocation MemberReference context MemberReference runtime MemberReference self MemberReference args	0
MethodDeclaration Modifier public ReferenceType IRubyObject getTopSelf ReturnStatement MemberReference	0
MethodDeclaration Modifier protected ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject caller FormalParameter ReferenceType RubyClass selfType FormalParameter ReferenceType Block block FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject arg LocalVariableDeclaration ReferenceType CacheEntry VariableDeclarator entry MethodInvocation selfType MemberReference methodName LocalVariableDeclaration ReferenceType DynamicMethod VariableDeclarator method MemberReference entry method IfStatement MethodInvocation MemberReference method MemberReference caller BlockStatement ReturnStatement MethodInvocation MemberReference context MemberReference self MemberReference method MemberReference arg MemberReference block StatementExpression Assignment MemberReference cache MemberReference entry = ReturnStatement MethodInvocation method MemberReference context MemberReference self MemberReference selfType MemberReference methodName MemberReference arg MemberReference block call	0
MethodDeclaration Modifier public final FormalParameter BasicType int size StatementExpression Assignment MemberReference ArrayCreator ReferenceType RubyRegexp MemberReference size =	0
MethodDeclaration Modifier private static BasicType boolean FormalParameter ReferenceType Class types FormalParameter ReferenceType IRubyObject args ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference types length MemberReference ++ i BlockStatement IfStatement BinaryOperation || MethodInvocation MemberReference ArraySelector MemberReference i types MemberReference ArraySelector MemberReference i args assignable MethodInvocation MemberReference ArraySelector MemberReference i types MemberReference ArraySelector MemberReference i args BlockStatement ReturnStatement Literal false ReturnStatement Literal true	1
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement Literal "true"	0
MethodDeclaration Modifier final static BasicType byte FormalParameter BasicType long address ReturnStatement MethodInvocation MemberReference address	1
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block ThrowStatement MethodInvocation context MethodInvocation BinaryOperation + Literal "no public constructors for " MemberReference clazz newTypeError getRuntime	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal Literal ElementValuePair required Literal 2 ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject offset FormalParameter ReferenceType IRubyObject arrParam StatementExpression MethodInvocation MemoryUtil MethodInvocation context getRuntime MethodInvocation getMemoryIO MethodInvocation MemberReference offset getOffset MethodInvocation MemberReference arrParam checkArray putArrayOfSigned8 ReturnStatement This	1
MethodDeclaration Modifier public ReferenceType Node ReturnStatement MemberReference superNode	0
MethodDeclaration Modifier private static FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType RubyThread currentThread FormalParameter ReferenceType IRubyObject exception IfStatement MethodInvocation currentThread MethodInvocation isTrue BlockStatement StatementExpression MethodInvocation currentThread ArrayCreator ReferenceType IRubyObject ArrayInitializer MemberReference exception MethodInvocation runtime Literal newString	0
MethodDeclaration Modifier public final BasicType int getNativeSize ReturnStatement MemberReference size	0
MethodDeclaration Modifier public static copyDataToJavaArray FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType RubyArray rubyArray FormalParameter BasicType int src FormalParameter ReferenceType JavaArray javaArray FormalParameter BasicType int dest FormalParameter BasicType int length LocalVariableDeclaration ReferenceType Class VariableDeclarator targetType MethodInvocation javaArray getComponentType LocalVariableDeclaration BasicType int VariableDeclarator destLength Cast BasicType int MethodInvocation javaArray MethodInvocation getLongValue length LocalVariableDeclaration BasicType int VariableDeclarator srcLength MethodInvocation rubyArray getLength ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation && BinaryOperation && BinaryOperation < BinaryOperation + MemberReference src MemberReference i MemberReference srcLength BinaryOperation < BinaryOperation + MemberReference dest MemberReference i MemberReference destLength BinaryOperation < MemberReference i MemberReference length MemberReference ++ i BlockStatement StatementExpression MethodInvocation javaArray BinaryOperation + MemberReference dest MemberReference i MethodInvocation rubyArray MethodInvocation MemberReference targetType toJava BinaryOperation + MemberReference src MemberReference i entry setWithExceptionHandling	1
MethodDeclaration post FormalParameter ReferenceType ThreadContext context StatementExpression MethodInvocation context	0
MethodDeclaration Modifier private ReferenceType Node new_fcall_simpleargs FormalParameter ReferenceType Token operation FormalParameter ReferenceType ArrayNode args FormalParameter ReferenceType Node iter LocalVariableDeclaration ReferenceType String VariableDeclarator name Cast ReferenceType String MethodInvocation operation getValue LocalVariableDeclaration ReferenceType ISourcePosition VariableDeclarator position MethodInvocation MemberReference operation MemberReference args position SwitchStatement MethodInvocation args size SwitchStatementCase Literal 0 IfStatement BinaryOperation != MemberReference iter Literal null ReturnStatement ClassCreator ReferenceType FCallNoArgBlockNode MemberReference position MemberReference name MemberReference args Cast ReferenceType IterNode MemberReference iter ReturnStatement ClassCreator ReferenceType FCallNoArgNode MemberReference position MemberReference args MemberReference name SwitchStatementCase Literal 1 IfStatement BinaryOperation != MemberReference iter Literal null ReturnStatement ClassCreator ReferenceType MemberReference position MemberReference name MemberReference args Cast ReferenceType IterNode MemberReference iter ReturnStatement ClassCreator ReferenceType MemberReference position MemberReference name MemberReference args SwitchStatementCase Literal 2 IfStatement BinaryOperation != MemberReference iter Literal null ReturnStatement ClassCreator ReferenceType MemberReference position MemberReference name MemberReference args Cast ReferenceType IterNode MemberReference iter ReturnStatement ClassCreator ReferenceType MemberReference position MemberReference name MemberReference args SwitchStatementCase Literal 3 IfStatement BinaryOperation != MemberReference iter Literal null ReturnStatement ClassCreator ReferenceType MemberReference position MemberReference name MemberReference args Cast ReferenceType IterNode MemberReference iter ReturnStatement ClassCreator ReferenceType MemberReference position MemberReference name MemberReference args SwitchStatementCase IfStatement BinaryOperation != MemberReference iter Literal null ReturnStatement ClassCreator ReferenceType MemberReference position MemberReference name MemberReference args Cast ReferenceType IterNode MemberReference iter ReturnStatement ClassCreator ReferenceType MemberReference position MemberReference name MemberReference args	1
MethodDeclaration Modifier public Annotation Override ReferenceType RubyFloat ReturnStatement This	0
MethodDeclaration Modifier private static FormalParameter ReferenceType ByteList result FormalParameter BasicType int s StatementExpression MethodInvocation result MethodInvocation Cast BasicType byte BinaryOperation & BinaryOperation >> MemberReference s Literal 8 Literal 0xff append Cast BasicType byte BinaryOperation & MemberReference s Literal 0xff append StatementExpression MethodInvocation result MethodInvocation Cast BasicType byte BinaryOperation & BinaryOperation >> MemberReference s Literal 24 Literal 0xff append Cast BasicType byte BinaryOperation & BinaryOperation >> MemberReference s Literal 16 Literal 0xff append	0
MethodDeclaration Modifier public static ReferenceType String setInt FormalParameter BasicType int i ReturnStatement MethodInvocation String MemberReference i valueOf	0
MethodDeclaration Modifier public ReferenceType Node getReceiverNode ReturnStatement MemberReference	0
MethodDeclaration Modifier protected ReferenceType Object FormalParameter ReferenceType Object first ReturnStatement MemberReference first	0
MethodDeclaration Modifier public Annotation JRubyMethod ReferenceType RubyString name ReturnStatement MethodInvocation MethodInvocation MethodInvocation field getName newString getRuntime	0
MethodDeclaration Modifier private static BasicType long FormalParameter ReferenceType IRubyObject arg IfStatement BinaryOperation == MemberReference arg MethodInvocation arg MethodInvocation getNil getRuntime BlockStatement ReturnStatement Literal 0L IfStatement BinaryOperation instanceof MemberReference arg ReferenceType RubyBignum BlockStatement LocalVariableDeclaration ReferenceType BigInteger VariableDeclarator Cast ReferenceType RubyBignum MemberReference arg IfStatement BinaryOperation || BinaryOperation < MethodInvocation MemberReference compareTo Literal 0 BinaryOperation > MethodInvocation MemberReference compareTo Literal 0 BlockStatement ThrowStatement MethodInvocation arg MethodInvocation Literal too to convert into newRangeError getRuntime ReturnStatement MethodInvocation longValue ReturnStatement MethodInvocation RubyNumeric MemberReference arg num2long	0
MethodDeclaration Modifier public ReferenceType Object getObject IfStatement BinaryOperation == MemberReference object Literal null StatementExpression Assignment MemberReference object Cast ReferenceType JavaObject MethodInvocation dataGetStruct = ReturnStatement MemberReference object	1
MethodDeclaration Modifier private FormalParameter ReferenceType AliasNode node StatementExpression MethodInvocation sb MethodInvocation MethodInvocation node append MethodInvocation MethodInvocation node append Literal " " append	0
MethodDeclaration Modifier public static FormalParameter ReferenceType o FormalParameter BasicType int LocalVariableDeclaration BasicType long VariableDeclarator time MethodInvocation System currentTimeMillis ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference MemberReference ++ i BlockStatement StatementExpression MethodInvocation o Literal "Charlie" getName StatementExpression MethodInvocation System.out BinaryOperation + Literal " BinaryOperation - MethodInvocation System currentTimeMillis MemberReference time println	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal "include?" Literal "member?" ElementValuePair required Literal 1 ElementValuePair frame Literal true ReferenceType IRubyObject include_p FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter Modifier final ReferenceType IRubyObject arg LocalVariableDeclaration Modifier final ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration Modifier final ReferenceType ThreadContext VariableDeclarator localContext MemberReference context TryStatement StatementExpression MethodInvocation MemberReference runtime MemberReference context MemberReference self ClassCreator ReferenceType BlockCallback MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext ctx FormalParameter ReferenceType IRubyObject largs FormalParameter ReferenceType Block blk LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator larg MethodInvocation MemberReference runtime MemberReference largs checkArgs StatementExpression MethodInvocation MemberReference localContext MemberReference ctx Literal checkContext IfStatement MethodInvocation RubyObject MemberReference ctx MemberReference larg MemberReference arg equalInternal BlockStatement ThrowStatement MemberReference JumpException SPECIAL_JUMP ReturnStatement MethodInvocation runtime getNil callEach CatchClause CatchClauseParameter JumpException.SpecialJump sj ReturnStatement MethodInvocation runtime getTrue ReturnStatement MethodInvocation runtime getFalse	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal Literal ElementValuePair required Literal 2 ReferenceType IRubyObject put_int64 FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject offset FormalParameter ReferenceType IRubyObject value StatementExpression MethodInvocation MethodInvocation MethodInvocation MemberReference offset getOffset MethodInvocation Util MemberReference value int64Value putLong getMemoryIO ReturnStatement This	1
MethodDeclaration Modifier private static ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject clazz FormalParameter ReferenceType IRubyObject x AssertStatement BinaryOperation instanceof MemberReference x ReferenceType RubyRational ReturnStatement MethodInvocation MemberReference context MemberReference clazz MemberReference x MethodInvocation RubyFixnum MethodInvocation context getRuntime one	1
MethodDeclaration Modifier public static ReferenceType RubyClass createNilClass FormalParameter ReferenceType Ruby runtime LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator MethodInvocation runtime Literal MethodInvocation runtime getObject MemberReference defineClass StatementExpression MethodInvocation runtime MemberReference StatementExpression Assignment MemberReference index MemberReference ClassIndex NIL = StatementExpression MethodInvocation ClassReference ReferenceType defineAnnotatedMethods StatementExpression MethodInvocation MethodInvocation Literal getMetaClass ReturnStatement MemberReference	1
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public static Annotation JRubyMethod ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject recv ReturnStatement MethodInvocation recv MethodInvocation getNil getRuntime	1
MethodDeclaration Modifier public FormalParameter ReferenceType Label arg0 StatementExpression MethodInvocation MethodInvocation MemberReference MemberReference arg0 getMethodVisitor	1
MethodDeclaration Modifier private init FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject begin FormalParameter ReferenceType IRubyObject end FormalParameter BasicType boolean isExclusive IfStatement BinaryOperation && BinaryOperation instanceof MemberReference begin ReferenceType RubyFixnum BinaryOperation instanceof MemberReference end ReferenceType RubyFixnum BlockStatement TryStatement LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator result MethodInvocation begin MemberReference context Literal "<=>" MemberReference end callMethod IfStatement MethodInvocation result isNil ThrowStatement MethodInvocation MethodInvocation Literal "bad value for range" newArgumentError getRuntime CatchClause CatchClauseParameter RaiseException re ThrowStatement MethodInvocation MethodInvocation Literal "bad value for range" newArgumentError getRuntime StatementExpression Assignment This MemberReference begin MemberReference begin = StatementExpression Assignment This MemberReference end MemberReference end = StatementExpression Assignment This MemberReference isExclusive MemberReference isExclusive =	1
MethodDeclaration Modifier public Annotation Override ReferenceType Object FormalParameter ReferenceType NodeVisitor iVisitor ReturnStatement MethodInvocation iVisitor This	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime StatementExpression MethodInvocation MemberReference runtime LocalVariableDeclaration ReferenceType VariableDeclarator proxy MethodInvocation MemberReference self LocalVariableDeclaration ReferenceType JavaConstructor VariableDeclarator constructor Cast ReferenceType JavaConstructor MethodInvocation MemberReference self MemberReference name MemberReference arg0 MemberReference arg1 LocalVariableDeclaration ReferenceType Object VariableDeclarator cArg0 MethodInvocation MemberReference context MemberReference arg0 MemberReference constructor Literal 0 convertArg LocalVariableDeclaration ReferenceType Object VariableDeclarator cArg1 MethodInvocation MemberReference context MemberReference arg1 MemberReference constructor Literal 1 convertArg StatementExpression MethodInvocation proxy MethodInvocation JavaObject MemberReference runtime MethodInvocation constructor MemberReference cArg0 MemberReference cArg1 wrap ReturnStatement MemberReference self	0
MethodDeclaration Modifier public ReferenceType IRubyObject setValue FormalParameter ReferenceType IRubyObject newValue StatementExpression Assignment MemberReference value MemberReference newValue = ReturnStatement MemberReference newValue	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator proxy MethodInvocation MemberReference context MemberReference self MemberReference clazz Literal MemberReference args MemberReference block call IfStatement BinaryOperation instanceof MethodInvocation proxy dataGetStruct ReferenceType JavaObject BlockStatement StatementExpression MethodInvocation RuntimeHelpers MemberReference context MemberReference proxy Literal MemberReference args MemberReference block invoke ReturnStatement MemberReference proxy	1
MethodDeclaration Modifier public BasicType int LocalVariableDeclaration ReferenceType CacheEntry VariableDeclarator MethodInvocation getCache IfStatement BinaryOperation != MemberReference MemberReference CacheEntry BlockStatement ReturnStatement MethodInvocation MemberReference index getImplementationClass ReturnStatement MemberReference ClassIndex	0
MethodDeclaration Modifier public encode FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType IRubyObject o FormalParameter ReferenceType ByteList result StatementExpression MethodInvocation MemberReference result MethodInvocation MemberReference runtime MemberReference o	0
MethodDeclaration Modifier public static StatementExpression Assignment MemberReference ClassCreator ReferenceType HashMap TypeArgument ReferenceType String TypeArgument ReferenceType IR_Class = LocalVariableDeclaration ReferenceType IR_Class VariableDeclarator obj MethodInvocation Literal Literal null Literal null addCoreClass StatementExpression MethodInvocation Literal "Class" MethodInvocation Literal "Module" MemberReference obj Literal null addCoreClass Literal null addCoreClass StatementExpression MethodInvocation Literal MemberReference obj ArrayCreator ReferenceType String ArrayInitializer Literal "+" Literal "-" Literal "/" Literal "*" addCoreClass StatementExpression MethodInvocation Literal "Float" MemberReference obj ArrayCreator ReferenceType String ArrayInitializer Literal "+" Literal "-" Literal "/" Literal "*" addCoreClass StatementExpression MethodInvocation Literal MemberReference obj ArrayCreator ReferenceType String ArrayInitializer Literal "[]" addCoreClass StatementExpression MethodInvocation Literal MemberReference obj Literal null addCoreClass StatementExpression MethodInvocation Literal MemberReference obj Literal null addCoreClass StatementExpression MethodInvocation Literal MemberReference obj Literal null addCoreClass	1
MethodDeclaration Modifier public static ReferenceType IRubyObject get_package_module_dot_format FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject dottedName LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation recv getRuntime LocalVariableDeclaration ReferenceType RubyModule VariableDeclarator module MethodInvocation MemberReference runtime MethodInvocation dottedName asJavaString getJavaPackageModule ReturnStatement TernaryExpression BinaryOperation == MemberReference module Literal null MethodInvocation runtime getNil MemberReference module	1
MethodDeclaration Modifier private static BasicType boolean FormalParameter ReferenceType Ruby runtime LocalVariableDeclaration ReferenceType RubyFixnum VariableDeclarator currentExceptionMode Cast ReferenceType RubyFixnum MethodInvocation runtime MethodInvocation Literal "vpExceptionMode" searchInternalModuleVariable Literal "BigDecimal" fastGetClass LocalVariableDeclaration ReferenceType RubyFixnum VariableDeclarator EXCEPTION_NaN Cast ReferenceType RubyFixnum MethodInvocation runtime MethodInvocation Literal "EXCEPTION_NaN" fastGetConstant Literal "BigDecimal" fastGetClass ReturnStatement BinaryOperation != BinaryOperation & MethodInvocation currentExceptionMode getLongValue MethodInvocation EXCEPTION_NaN getLongValue Literal 0	1
MethodDeclaration Modifier public ReferenceType Collection values ReturnStatement ClassCreator ReferenceType MemberReference	0
MethodDeclaration Modifier public Annotation Override ReferenceType Class TypeArgument ? ReturnStatement ClassReference BasicType double	0
MethodDeclaration Modifier public run StatementExpression MethodInvocation console Literal true setVisible StatementExpression MethodInvocation runtime Literal 'irb'; require IRB.start"	1
MethodDeclaration Modifier protected ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType String name FormalParameter ReferenceType DynamicMethod method FormalParameter ReferenceType IRubyObject args ReturnStatement MethodInvocation RuntimeHelpers MemberReference context MemberReference self MethodInvocation method getVisibility MemberReference name MemberReference callType MemberReference args MemberReference Block NULL_BLOCK	0
MethodDeclaration Modifier public final ReferenceType RubyString FormalParameter ReferenceType Ruby runtime ReturnStatement MethodInvocation runtimeCache MemberReference runtime Literal 9 getString	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair module Literal true ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject recv LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation recv getRuntime TryStatement StatementExpression MethodInvocation runtime MethodInvocation getPosix CatchClause CatchClauseParameter Exception e IfStatement MethodInvocation runtime MethodInvocation isTrue getDebug BlockStatement StatementExpression MethodInvocation runtime MethodInvocation MemberReference ID Literal is not supported by on this MemberReference e warn getWarnings ReturnStatement MethodInvocation runtime getNil	0
MethodDeclaration Modifier private static BasicType boolean startsWithDriveLetterOnWindows FormalParameter ReferenceType String path ReturnStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference path Literal null MemberReference Platform IS_WINDOWS TernaryExpression BinaryOperation && BinaryOperation > MethodInvocation path length Literal 1 BinaryOperation == MethodInvocation path Literal 0 charAt Literal '/' BinaryOperation && BinaryOperation && BinaryOperation > MethodInvocation path length Literal 2 MethodInvocation MethodInvocation path Literal 1 charAt isWindowsDriveLetter BinaryOperation == MethodInvocation path Literal 2 charAt Literal ':' BinaryOperation && BinaryOperation && BinaryOperation > MethodInvocation path length Literal 1 MethodInvocation MethodInvocation path Literal 0 charAt isWindowsDriveLetter BinaryOperation == MethodInvocation path Literal 1 charAt Literal ':'	1
MethodDeclaration Modifier public ReferenceType Object case79_line578 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop IfStatement BinaryOperation || MethodInvocation support isInDef MethodInvocation support isInSingle BlockStatement StatementExpression MethodInvocation Literal "dynamic constant assignment" yyerror LocalVariableDeclaration ReferenceType ISourcePosition VariableDeclarator position MethodInvocation Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals getPosition StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType ConstDeclNode MemberReference position Literal null MethodInvocation support MemberReference position Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals Cast ReferenceType String Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals new_colon2 MemberReference NilImplicitNode NIL = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public static ReferenceType String FormalParameter ReferenceType Float f ReturnStatement MethodInvocation String MemberReference f valueOf	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal "address" Literal "to_i" ReferenceType IRubyObject address FormalParameter ReferenceType ThreadContext context ReturnStatement MethodInvocation context MethodInvocation MethodInvocation getAddress newFixnum getRuntime	0
MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType Block block StatementExpression MethodInvocation MemberReference context MemberReference name TryStatement LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator cls Cast ReferenceType RubyClass MemberReference self LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator obj MethodInvocation cls StatementExpression MemberReference cls ArraySelector MemberReference MethodInvocation MemberReference context MemberReference self MemberReference obj MemberReference block call ReturnStatement MemberReference obj StatementExpression MethodInvocation MemberReference context	0
MethodDeclaration Modifier public static BasicType int FormalParameter ReferenceType channel FormalParameter ReferenceType ByteBuffer buf IOException ReturnStatement MethodInvocation MemberReference channel MemberReference buf Literal true write	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MethodInvocation ruby MethodInvocation getInstanceConfig MethodInvocation get	0
MethodDeclaration Modifier final static Annotation SuppressWarnings Literal "unchecked" T A ReferenceType Segment TypeArgument ReferenceType T TypeArgument ReferenceType A newArray FormalParameter BasicType int size ReturnStatement ArrayCreator ReferenceType Segment MemberReference size	0
MethodDeclaration Modifier public BasicType double IfStatement BinaryOperation == MemberReference _str Literal null BlockStatement ReturnStatement Literal 0.0 LocalVariableDeclaration BasicType int VariableDeclarator q MemberReference str StatementExpression MethodInvocation LocalVariableDeclaration BasicType int VariableDeclarator endPlace ArrayCreator BasicType int ArrayInitializer MemberReference str LocalVariableDeclaration BasicType double VariableDeclarator d Literal 0.0 TryStatement StatementExpression Assignment MemberReference d MethodInvocation MemberReference str MemberReference endPlace = CatchClause CatchClauseParameter ERange e StatementExpression Assignment MemberReference d TernaryExpression BinaryOperation == MethodInvocation e getKind MemberReference ERange.Kind Overflow MemberReference Double MAX_VALUE MemberReference Double MIN_VALUE = LocalVariableDeclaration BasicType int VariableDeclarator w BinaryOperation - MemberReference ArraySelector Literal 0 endPlace MemberReference str LocalVariableDeclaration ReferenceType String VariableDeclarator ellipsis Literal "" IfStatement BinaryOperation > MemberReference w Literal 20 BlockStatement StatementExpression Assignment MemberReference w Literal 20 = StatementExpression Assignment MemberReference ellipsis Literal "..." = BlockStatement StatementExpression Assignment MemberReference ellipsis Literal "" = TryStatement StatementExpression MethodInvocation runtime MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal " ClassCreator ReferenceType String MemberReference data MemberReference str MemberReference w Literal "ISO-8859-1" MemberReference ellipsis Literal " out of range" warn getWarnings CatchClause CatchClauseParameter java.io.UnsupportedEncodingException ex IfStatement BinaryOperation == MemberReference str MemberReference ArraySelector Literal 0 endPlace BlockStatement IfStatement MemberReference badcheck BlockStatement StatementExpression MethodInvocation Literal "Float()" invalidString ReturnStatement MemberReference d IfStatement BinaryOperation < MemberReference ArraySelector Literal 0 endPlace MemberReference end BlockStatement LocalVariableDeclaration BasicType byte VariableDeclarator buf ArrayCreator BasicType byte BinaryOperation - MemberReference end MemberReference str LocalVariableDeclaration BasicType int VariableDeclarator n Literal 0 StatementExpression MethodInvocation System MemberReference data MemberReference str MemberReference buf Literal 0 BinaryOperation - MemberReference ArraySelector Literal 0 endPlace MemberReference str arraycopy StatementExpression Assignment MemberReference n BinaryOperation - MemberReference ArraySelector Literal 0 endPlace MemberReference str = StatementExpression Assignment MemberReference str MemberReference ArraySelector Literal 0 endPlace = WhileStatement BinaryOperation < MemberReference str MemberReference end BlockStatement IfStatement BinaryOperation == MemberReference ArraySelector MemberReference str data Literal '_' BlockStatement IfStatement MemberReference badcheck BlockStatement IfStatement BinaryOperation || BinaryOperation == MemberReference n Literal 0 MethodInvocation ! MemberReference buf BinaryOperation - MemberReference n Literal 1 isDigit BlockStatement StatementExpression MethodInvocation Literal "Float()" invalidString StatementExpression MemberReference ++ str IfStatement MethodInvocation ! MemberReference data MemberReference str isDigit BlockStatement StatementExpression MethodInvocation Literal "Float()" invalidString BlockStatement StatementExpression MemberReference ++ str WhileStatement BinaryOperation && BinaryOperation < MemberReference str MemberReference end BinaryOperation == MemberReference ArraySelector MemberReference str data Literal '_' BlockStatement StatementExpression MemberReference ++ str ContinueStatement StatementExpression Assignment MemberReference ArraySelector MemberReference ++ n buf MemberReference ArraySelector MemberReference ++ str data = StatementExpression Assignment MemberReference data MemberReference buf = StatementExpression Assignment MemberReference str Literal 0 = StatementExpression Assignment MemberReference end MemberReference buf length = TryStatement StatementExpression Assignment MemberReference d MethodInvocation MemberReference str MemberReference endPlace = CatchClause CatchClauseParameter ERange e StatementExpression Assignment MemberReference d TernaryExpression BinaryOperation == MethodInvocation e getKind MemberReference ERange.Kind Overflow MemberReference Double MAX_VALUE MemberReference Double MIN_VALUE = LocalVariableDeclaration BasicType int VariableDeclarator w BinaryOperation - MemberReference ArraySelector Literal 0 endPlace MemberReference str LocalVariableDeclaration ReferenceType String VariableDeclarator ellipsis Literal "" IfStatement BinaryOperation > MemberReference w Literal 20 BlockStatement StatementExpression Assignment MemberReference w Literal 20 = StatementExpression Assignment MemberReference ellipsis Literal "..." = BlockStatement StatementExpression Assignment MemberReference ellipsis Literal "" = TryStatement StatementExpression MethodInvocation runtime MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal " ClassCreator ReferenceType String MemberReference data MemberReference str MemberReference w Literal "ISO-8859-1" MemberReference ellipsis Literal " out of range" warn getWarnings CatchClause CatchClauseParameter java.io.UnsupportedEncodingException ex IfStatement MemberReference badcheck BlockStatement IfStatement BinaryOperation == MemberReference str MemberReference ArraySelector Literal 0 endPlace BlockStatement StatementExpression MethodInvocation Literal "Float()" invalidString WhileStatement BinaryOperation && BinaryOperation < MemberReference ArraySelector Literal 0 endPlace MemberReference end MethodInvocation MemberReference ArraySelector Literal 0 endPlace isSpace BlockStatement StatementExpression MemberReference ++ ArraySelector Literal 0 endPlace IfStatement BinaryOperation < MemberReference ArraySelector Literal 0 endPlace MemberReference end BlockStatement StatementExpression MethodInvocation Literal "Float()" invalidString ReturnStatement MemberReference d	1
MethodDeclaration Modifier public execute FormalParameter BasicType int count FormalParameter ReferenceType Runnable r ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference count MemberReference ++ i BlockStatement StatementExpression MethodInvocation r run	0
MethodDeclaration Modifier private ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType RubyArray array TryStatement StatementExpression MethodInvocation MethodInvocation MemberReference array registerInspecting getRuntime ReturnStatement MethodInvocation MemberReference context MethodInvocation array toJavaArray StatementExpression MethodInvocation MethodInvocation MemberReference array unregisterInspecting getRuntime	0
MethodDeclaration Modifier public call FormalParameter ReferenceType BodyCompiler context IfStatement BinaryOperation != MethodInvocation getBodyNode Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation getBodyNode MemberReference context Literal true compile BlockStatement StatementExpression MethodInvocation context loadNil	0
MethodDeclaration Modifier public final FormalParameter BasicType long offset FormalParameter BasicType long value StatementExpression MethodInvocation BinaryOperation + MemberReference address MemberReference offset MemberReference value	0
MethodDeclaration Modifier public static BasicType long FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType IRubyObject FormalParameter ReferenceType OutputStream output TryStatement LocalVariableDeclaration ReferenceType VariableDeclarator aProcess ClassCreator ReferenceType MethodInvocation MemberReference runtime MemberReference MemberReference runtime ReturnStatement MethodInvocation MemberReference aProcess CatchClause CatchClauseParameter IOException e ThrowStatement MethodInvocation runtime MemberReference e newIOErrorFromException	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal Literal ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context LocalVariableDeclaration ReferenceType VariableDeclarator sock MethodInvocation IfStatement BinaryOperation == Literal null MemberReference sock BlockStatement ThrowStatement MethodInvocation context MethodInvocation Literal "Not newIOError getRuntime ReturnStatement MethodInvocation context MethodInvocation MethodInvocation sock toString newString getRuntime	0
MethodDeclaration Modifier public ReferenceType RaiseException newErrnoENOENTError ReturnStatement MethodInvocation MethodInvocation MethodInvocation Literal fastGetClass getErrno Literal "File not found" newRaiseException	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType IRubyObject get FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType StructLayout ReferenceType Storage cache FormalParameter ReferenceType IRubyObject ptr ReturnStatement MethodInvocation Factory MethodInvocation MemberReference runtime Cast ReferenceType Pointer MemberReference ptr MemberReference cbInfo getInstance	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject other IfStatement BinaryOperation && BinaryOperation instanceof MemberReference other ReferenceType RubyNumeric MethodInvocation MethodInvocation isTrue MemberReference context MemberReference other f_real_p BlockStatement ReturnStatement MethodInvocation context MethodInvocation MethodInvocation MemberReference context MethodInvocation getMetaClass MemberReference other newComplexBang This newArray getRuntime ThrowStatement MethodInvocation context MethodInvocation BinaryOperation + BinaryOperation + MethodInvocation other MethodInvocation getName getMetaClass Literal " can't be into " MethodInvocation MethodInvocation getName getMetaClass newTypeError getRuntime	0
MethodDeclaration Modifier public static ReferenceType DynamicMethod FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType RubyClass selfClass FormalParameter ReferenceType Visibility visibility FormalParameter ReferenceType String name FormalParameter ReferenceType CallType callType LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime IfStatement MethodInvocation name Literal "method_missing" equals BlockStatement ReturnStatement MethodInvocation MemberReference runtime MemberReference visibility MemberReference callType selectInternalMM LocalVariableDeclaration ReferenceType DynamicMethod VariableDeclarator MethodInvocation selfClass Literal "method_missing" searchMethod IfStatement BinaryOperation || MethodInvocation isUndefined BinaryOperation == MemberReference MethodInvocation runtime BlockStatement ReturnStatement MethodInvocation MemberReference runtime MemberReference visibility MemberReference callType selectInternalMM ReturnStatement ClassCreator ReferenceType MemberReference	1
MethodDeclaration Modifier public static FormalParameter BasicType int n LocalVariableDeclaration BasicType long VariableDeclarator start MethodInvocation System currentTimeMillis LocalVariableDeclaration BasicType int VariableDeclarator result MethodInvocation MemberReference n StatementExpression MethodInvocation System.out BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal " BinaryOperation - MethodInvocation System currentTimeMillis MemberReference start Literal "ms for MemberReference n Literal ") = " MemberReference result println	0
MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 FormalParameter ReferenceType IRubyObject arg3 FormalParameter ReferenceType Block block ReturnStatement MethodInvocation body MemberReference context MemberReference arg0 MemberReference arg1 MemberReference arg2 MemberReference arg3 MemberReference MemberReference type MemberReference block call	0
MethodDeclaration Modifier public ReferenceType IRubyObject convert FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType Object object IfStatement BinaryOperation == MemberReference object Literal null ReturnStatement MethodInvocation runtime getNil ReturnStatement MethodInvocation RubyFloat MemberReference runtime Cast ReferenceType Double MemberReference object newFloat	1
MethodDeclaration Modifier private ReferenceType RubySymbol to_sym LocalVariableDeclaration ReferenceType RubySymbol VariableDeclarator symbol MethodInvocation MethodInvocation MethodInvocation MemberReference value getRuntime IfStatement BinaryOperation == MethodInvocation symbol getBytes MemberReference value StatementExpression Assignment MemberReference MemberReference = ReturnStatement MemberReference symbol	1
MethodDeclaration Modifier public static ReferenceType RubyClass FormalParameter ReferenceType Ruby runtime LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator MethodInvocation runtime Literal "Complex" MethodInvocation runtime MemberReference defineClass StatementExpression MethodInvocation runtime MemberReference StatementExpression Assignment MemberReference index MemberReference ClassIndex = StatementExpression Assignment MemberReference ClassCreator ReferenceType RubyModule ReferenceType MethodDeclaration Modifier public Annotation Override BasicType boolean FormalParameter ReferenceType IRubyObject obj FormalParameter ReferenceType RubyModule type ReturnStatement BinaryOperation instanceof MemberReference obj ReferenceType RubyComplex = StatementExpression MethodInvocation ClassReference ReferenceType RubyComplex defineAnnotatedMethods StatementExpression MethodInvocation MethodInvocation Literal "allocate" StatementExpression MethodInvocation MethodInvocation Literal LocalVariableDeclaration ReferenceType String VariableDeclarator ArrayInitializer Literal "<" Literal "<=" Literal "<=>" Literal ">" Literal ">=" Literal Literal Literal "floor" Literal Literal "modulo" Literal "round" Literal Literal "truncate" ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator MemberReference BlockStatement StatementExpression MethodInvocation MemberReference StatementExpression MethodInvocation Literal "I" MethodInvocation RubyComplex MethodInvocation runtime getCurrentContext MethodInvocation RubyFixnum MemberReference runtime zero MethodInvocation RubyFixnum MemberReference runtime one defineConstant ReturnStatement MemberReference	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject other ReturnStatement MethodInvocation MemberReference context Literal "/" MemberReference other callMethod	0
MethodDeclaration Modifier public final ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject object FormalParameter ReferenceType IRubyObject value ReturnStatement MethodInvocation runtimeCache MemberReference runtime Literal 2 MemberReference name MemberReference object MemberReference value setVariable	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair required Literal 1 ElementValuePair frame Literal true ElementValuePair visibility MemberReference Visibility PRIVATE ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject name FormalParameter ReferenceType Block block StatementExpression MethodInvocation ensureInstanceVariablesSettable LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator value IfStatement BinaryOperation != Assignment MemberReference value Cast ReferenceType IRubyObject MethodInvocation MethodInvocation MethodInvocation name asJavaString validateInstanceVariable = Literal null BlockStatement ReturnStatement MemberReference value ThrowStatement MethodInvocation context MethodInvocation BinaryOperation + BinaryOperation + Literal variable " MethodInvocation name asJavaString Literal " not defined" MethodInvocation name asJavaString newNameError getRuntime	1
MethodDeclaration Modifier public ReferenceType Object case77_line574 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal Cast ReferenceType ListNode MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType Runner VariableDeclarator runners ArrayCreator ReferenceType Runner MemberReference RUNNER_COUNT ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference RUNNER_COUNT MemberReference ++ i StatementExpression Assignment MemberReference ArraySelector MemberReference i runners ClassCreator ReferenceType Runner BinaryOperation + Literal "R" MemberReference i MemberReference = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference RUNNER_COUNT MemberReference ++ i StatementExpression MemberReference ArraySelector MemberReference i MethodInvocation start runners TryStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference RUNNER_COUNT MemberReference ++ i StatementExpression MemberReference ArraySelector MemberReference i MethodInvocation join runners CatchClause CatchClauseParameter InterruptedException ie ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference RUNNER_COUNT MemberReference ++ i BlockStatement IfStatement MemberReference ArraySelector MemberReference i MethodInvocation runners BlockStatement IfStatement BinaryOperation != MemberReference ArraySelector MemberReference i MethodInvocation runners Literal null BlockStatement ThrowStatement MemberReference ArraySelector MemberReference i MethodInvocation runners	1
MethodDeclaration Modifier public visitTypeInsn FormalParameter BasicType int arg0 FormalParameter ReferenceType String arg1 StatementExpression MethodInvocation MethodInvocation MemberReference arg0 MemberReference arg1 visitTypeInsn getMethodVisitor	0
MethodDeclaration Modifier public static BasicType double FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ByteList str FormalParameter BasicType boolean badcheck ReturnStatement ClassCreator MethodInvocation ReferenceType Convert2 MemberReference runtime MemberReference str Literal - 1 MemberReference badcheck	0
MethodDeclaration Modifier public static BasicType boolean invokeEqqForCaseWhen FormalParameter ReferenceType CallSite FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject caller FormalParameter ReferenceType IRubyObject arg FormalParameter ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator result MethodInvocation MemberReference context MemberReference caller MemberReference MemberReference arg call IfStatement MethodInvocation result isTrue ReturnStatement Literal true ReturnStatement MethodInvocation MemberReference MemberReference context MemberReference caller MemberReference arg MemberReference MemberReference invokeEqqForCaseWhen	1
MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation MethodInvocation flipNode MemberReference context Literal true compile StatementExpression MethodInvocation context ClassCreator ReferenceType BranchCallback MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation MethodInvocation flipNode MemberReference context Literal true compile StatementExpression MethodInvocation MemberReference context StatementExpression MethodInvocation context MethodInvocation MethodInvocation flipNode getIndex MethodInvocation flipNode Literal false assignLocalVariable getVariableCompiler StatementExpression MethodInvocation context ClassCreator ReferenceType BranchCallback MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation context performBooleanBranch	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType IRubyObject otherValue FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block ReturnStatement BinaryOperation == MemberReference otherValue MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType PrintStream errorStream LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator backtrace MethodInvocation MethodInvocation MethodInvocation getCurrentContext getRuntime Literal callMethod LocalVariableDeclaration BasicType boolean VariableDeclarator debug MethodInvocation MethodInvocation getDebug MethodInvocation isTrue getRuntime IfStatement BinaryOperation && MethodInvocation ! backtrace isNil BinaryOperation instanceof MemberReference backtrace ReferenceType RubyArray BlockStatement LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator elements MethodInvocation backtrace MethodInvocation toJavaArray convertToArray ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 1 BinaryOperation < MemberReference i MemberReference elements length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator MemberReference ArraySelector MemberReference i elements IfStatement BinaryOperation instanceof MemberReference ReferenceType RubyString BlockStatement StatementExpression MethodInvocation MemberReference errorStream MemberReference IfStatement BinaryOperation && BinaryOperation && BinaryOperation && MemberReference ! debug BinaryOperation != MemberReference MemberReference BinaryOperation == MemberReference i MemberReference RubyException BinaryOperation > MemberReference elements length MemberReference RubyException BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator hiddenLevels BinaryOperation - BinaryOperation - MemberReference elements length MemberReference RubyException MemberReference RubyException StatementExpression MethodInvocation errorStream BinaryOperation + BinaryOperation + Literal ... " MemberReference hiddenLevels Literal " print StatementExpression Assignment MemberReference i BinaryOperation - MemberReference elements length MemberReference RubyException =	1
MethodDeclaration Modifier public static callTraceFunction FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType RubyEvent event LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation context getFrameName LocalVariableDeclaration ReferenceType RubyModule VariableDeclarator type MethodInvocation context getFrameKlazz StatementExpression MethodInvocation runtime MemberReference context MemberReference event MethodInvocation context getFile MethodInvocation context getLine MemberReference name MemberReference type callEventHooks	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair rest Literal true ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject resume FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject args InterruptedException SynchronizedStatement MemberReference yieldLock IfStatement BinaryOperation == MemberReference args length Literal 0 BlockStatement StatementExpression Assignment MemberReference result MethodInvocation context MethodInvocation getNil getRuntime = IfStatement BinaryOperation == MemberReference args length Literal 1 BlockStatement StatementExpression Assignment MemberReference result MemberReference ArraySelector Literal 0 args = BlockStatement StatementExpression Assignment MemberReference result MethodInvocation context MethodInvocation MemberReference args getRuntime = IfStatement MemberReference ! BlockStatement StatementExpression MethodInvocation MemberReference execute StatementExpression MethodInvocation yieldLock wait BlockStatement StatementExpression MethodInvocation yieldLock StatementExpression MethodInvocation yieldLock wait ReturnStatement MemberReference result	1
MethodDeclaration Modifier public ReferenceType IRubyObject each_pair FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator member Cast ReferenceType RubyArray MethodInvocation MethodInvocation Literal "__member__" getInternalVariable AssertStatement MethodInvocation ! member isNil Literal "uninitialized ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference values length MemberReference ++ i BlockStatement StatementExpression MethodInvocation block MemberReference context MethodInvocation MethodInvocation ArrayCreator ReferenceType IRubyObject ArrayInitializer MethodInvocation member MemberReference i eltInternal MemberReference ArraySelector MemberReference i values newArrayNoCopy getRuntime yield ReturnStatement This	1
MethodDeclaration Modifier protected ReferenceType String ReturnStatement MethodInvocation MethodInvocation toString getType	0
MethodDeclaration Modifier public static BasicType double FormalParameter BasicType double f FormalParameter BasicType long e ReturnStatement BinaryOperation * MemberReference f MethodInvocation Math Literal 2.0 MemberReference e pow	0
MethodDeclaration Modifier public ReferenceType Ruby getRuntime ReturnStatement MemberReference runtime	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ReferenceType IRubyObject ReturnStatement TernaryExpression MethodInvocation hasSuperImplementation MethodInvocation MethodInvocation getTrue getRuntime MethodInvocation MethodInvocation getFalse getRuntime	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "strip!" ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime IfStatement BinaryOperation == MemberReference value realSize Literal 0 BlockStatement StatementExpression MethodInvocation modifyCheck ReturnStatement MethodInvocation runtime getNil LocalVariableDeclaration ReferenceType Encoding VariableDeclarator enc MemberReference value encoding LocalVariableDeclaration BasicType int VariableDeclarator s MemberReference value begin LocalVariableDeclaration BasicType int VariableDeclarator end BinaryOperation + MemberReference s MemberReference value realSize LocalVariableDeclaration BasicType byte VariableDeclarator bytes MemberReference value bytes LocalVariableDeclaration Modifier final ReferenceType IRubyObject VariableDeclarator result IfStatement MethodInvocation MemberReference enc singleByteOptimizable BlockStatement StatementExpression Assignment MemberReference result MethodInvocation MemberReference runtime MemberReference enc MemberReference bytes MemberReference s MemberReference end singleByteStrip = BlockStatement StatementExpression Assignment MemberReference result MethodInvocation MemberReference runtime MemberReference enc MemberReference bytes MemberReference s MemberReference end multiByteStrip = StatementExpression MethodInvocation keepCodeRange ReturnStatement MemberReference result	1
MethodDeclaration Modifier private ReferenceType IRubyObject each_codepointCommon FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration BasicType byte VariableDeclarator bytes MemberReference value bytes LocalVariableDeclaration BasicType int VariableDeclarator p MemberReference value begin LocalVariableDeclaration BasicType int VariableDeclarator end BinaryOperation + MemberReference p MemberReference value realSize LocalVariableDeclaration ReferenceType Encoding VariableDeclarator enc MemberReference value encoding WhileStatement BinaryOperation < MemberReference p MemberReference end BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator c MethodInvocation MemberReference runtime MemberReference enc MemberReference bytes MemberReference p MemberReference end codePoint LocalVariableDeclaration BasicType int VariableDeclarator n MethodInvocation MemberReference runtime MemberReference enc MemberReference c codeLength StatementExpression MethodInvocation block MemberReference context MethodInvocation runtime MemberReference c newFixnum yield StatementExpression Assignment MemberReference p MemberReference n += ReturnStatement This	1
MethodDeclaration Modifier public ReferenceType Operand FormalParameter Modifier final ReferenceType OpAsgnOrNode orNode FormalParameter ReferenceType IR_Scope s LocalVariableDeclaration ReferenceType Label VariableDeclarator l1 MethodInvocation s getNewLabel LocalVariableDeclaration ReferenceType Variable VariableDeclarator f MethodInvocation s getNewVariable LocalVariableDeclaration ReferenceType Operand VariableDeclarator v1 IfStatement MethodInvocation MethodInvocation orNode getFirstNode BlockStatement ThrowStatement ClassCreator ReferenceType NotCompilableException BinaryOperation + MemberReference orNode Literal "is not yet since the first node of the OR requires to be implemented" BlockStatement StatementExpression Assignment MemberReference v1 MethodInvocation MethodInvocation orNode getFirstNode MemberReference s build = StatementExpression MethodInvocation s ClassCreator ReferenceType MemberReference f MemberReference v1 addInstr StatementExpression MethodInvocation s ClassCreator ReferenceType MemberReference f MemberReference BooleanLiteral TRUE MemberReference l1 addInstr StatementExpression MethodInvocation MethodInvocation orNode getSecondNode MemberReference s build StatementExpression MethodInvocation s ClassCreator ReferenceType LABEL_Instr MemberReference l1 addInstr StatementExpression MethodInvocation s ClassCreator ReferenceType THREAD_POLL_Instr addInstr ReturnStatement MemberReference v1	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal "odd?" ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType RubyBoolean odd_p IfStatement BinaryOperation != BinaryOperation % MemberReference value Literal 2 Literal 0 BlockStatement ReturnStatement MethodInvocation MethodInvocation getTrue getRuntime ReturnStatement MethodInvocation MethodInvocation getFalse getRuntime	1
MethodDeclaration Modifier public final Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block StatementExpression MethodInvocation arity MethodInvocation context getRuntime MemberReference args checkArity ReturnStatement MethodInvocation MemberReference context MemberReference ArraySelector Literal 0 args MemberReference ArraySelector Literal 1 args invoke	1
MethodDeclaration Modifier private final ReferenceType IRubyObject gsub FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType Block block FormalParameter Modifier final BasicType boolean bang IfStatement MethodInvocation block isGiven BlockStatement ReturnStatement MethodInvocation MemberReference context MemberReference bang MethodInvocation MemberReference arg0 getQuotedPattern MemberReference block Literal null Literal 0 gsubCommon BlockStatement ThrowStatement MethodInvocation context MethodInvocation Literal "wrong number of arguments for 2)" newArgumentError getRuntime	1
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block StatementExpression MethodInvocation context pollThreadEvents ThrowStatement ClassCreator ReferenceType JumpException ReferenceType NextJump MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference	0
MethodDeclaration ReferenceType Entry LocalVariableDeclaration ReferenceType Entry VariableDeclarator e MemberReference next IfStatement BinaryOperation == MemberReference e Literal null BlockStatement ThrowStatement ClassCreator ReferenceType NoSuchElementException LocalVariableDeclaration ReferenceType Entry VariableDeclarator n MemberReference e next LocalVariableDeclaration ReferenceType Entry VariableDeclarator t MemberReference table LocalVariableDeclaration BasicType int VariableDeclarator i MemberReference index WhileStatement BinaryOperation && BinaryOperation == MemberReference n Literal null BinaryOperation > MemberReference i Literal 0 BlockStatement StatementExpression Assignment MemberReference n MemberReference ArraySelector MemberReference -- i t = StatementExpression Assignment MemberReference index MemberReference i = StatementExpression Assignment MemberReference next MemberReference n = ReturnStatement Assignment MemberReference current MemberReference e =	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair optional Literal 2 ElementValuePair module Literal true ElementValuePair visibility MemberReference Visibility PRIVATE ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args Exception StatementExpression Assignment MemberReference args MethodInvocation Arity MethodInvocation recv getRuntime MemberReference args Literal 0 Literal 2 scanArgs = LocalVariableDeclaration BasicType long VariableDeclarator crc Literal 0 LocalVariableDeclaration ReferenceType ByteList VariableDeclarator bytes Literal null IfStatement MemberReference ! ArraySelector Literal 0 MethodInvocation isNil args StatementExpression Assignment MemberReference bytes MemberReference ArraySelector Literal 0 MethodInvocation convertToString MethodInvocation getByteList args = IfStatement MemberReference ! ArraySelector Literal 1 MethodInvocation isNil args StatementExpression Assignment MemberReference crc MethodInvocation RubyNumeric MemberReference ArraySelector Literal 1 args num2long = LocalVariableDeclaration ReferenceType VariableDeclarator ext ClassCreator ReferenceType Cast BasicType int MemberReference crc IfStatement BinaryOperation != MemberReference bytes Literal null BlockStatement StatementExpression MethodInvocation ext MethodInvocation bytes unsafeBytes MethodInvocation bytes begin MethodInvocation bytes length update ReturnStatement MethodInvocation recv MethodInvocation MethodInvocation ext getValue newFixnum getRuntime	1
MethodDeclaration Modifier public ReferenceType Object case490_line1872 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Cast ReferenceType ListNode MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals StatementExpression Assignment MemberReference yyVal Cast ReferenceType ListNode MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public static ReferenceType RubyHash FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject LocalVariableDeclaration ReferenceType RubyHash VariableDeclarator hash MethodInvocation RubyHash MemberReference runtime StatementExpression MethodInvocation hash MemberReference runtime MemberReference MemberReference StatementExpression MethodInvocation hash MemberReference runtime MemberReference MemberReference StatementExpression MethodInvocation hash MemberReference runtime MemberReference MemberReference ReturnStatement MemberReference hash	0
MethodDeclaration Modifier public BasicType boolean isRubyVariable LocalVariableDeclaration BasicType char VariableDeclarator c ReturnStatement BinaryOperation && BinaryOperation > MethodInvocation name length Literal 0 BinaryOperation || BinaryOperation == Assignment MemberReference c MethodInvocation name Literal 0 charAt = Literal '@' BinaryOperation && BinaryOperation <= MemberReference c Literal 'Z' BinaryOperation >= MemberReference c Literal 'A'	1
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair required Literal 1 ElementValuePair rest Literal true ReferenceType IRubyObject extend FormalParameter ReferenceType IRubyObject args LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation getRuntime ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference args length MemberReference ++ i BlockStatement IfStatement MemberReference ! ArraySelector MemberReference i MethodInvocation isModule args ThrowStatement MethodInvocation runtime MemberReference ArraySelector MemberReference i args MethodInvocation runtime getModule newTypeError LocalVariableDeclaration ReferenceType ThreadContext VariableDeclarator context MethodInvocation runtime getCurrentContext ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i BinaryOperation - MemberReference args length Literal 1 BinaryOperation >= MemberReference i Literal 0 MemberReference -- i BlockStatement StatementExpression MemberReference ArraySelector MemberReference i MethodInvocation MemberReference context Literal "extend_object" This callMethod args StatementExpression MemberReference ArraySelector MemberReference i MethodInvocation MemberReference context Literal This callMethod args ReturnStatement This	1
MethodDeclaration Modifier public setValue FormalParameter ReferenceType Object value StatementExpression Assignment This MemberReference value MemberReference value =	0
MethodDeclaration Modifier private static ReferenceType Object med3 FormalParameter ReferenceType Object lo FormalParameter ReferenceType Object mid FormalParameter ReferenceType Object hi FormalParameter ReferenceType Comparator c IfStatement BinaryOperation < MethodInvocation c MemberReference mid MemberReference lo compare Literal 0 BlockStatement IfStatement BinaryOperation < MethodInvocation c MemberReference hi MemberReference mid compare Literal 0 BlockStatement ReturnStatement MemberReference mid BlockStatement IfStatement BinaryOperation < MethodInvocation c MemberReference hi MemberReference lo compare Literal 0 BlockStatement ReturnStatement MemberReference hi BlockStatement ReturnStatement MemberReference lo BlockStatement IfStatement BinaryOperation < MethodInvocation c MemberReference hi MemberReference mid compare Literal 0 BlockStatement IfStatement BinaryOperation < MethodInvocation c MemberReference hi MemberReference lo compare Literal 0 BlockStatement ReturnStatement MemberReference lo BlockStatement ReturnStatement MemberReference hi BlockStatement ReturnStatement MemberReference mid	1
MethodDeclaration FormalParameter ReferenceType RubyModule StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public static Annotation Deprecated ReferenceType RubyArray FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType IRubyObject value LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator tmp MethodInvocation value checkArrayType IfStatement MethodInvocation tmp isNil BlockStatement IfStatement BinaryOperation != MethodInvocation value MethodInvocation Literal "to_a" searchMethod MethodInvocation getImplementationClass getMetaClass MethodInvocation runtime BlockStatement StatementExpression Assignment MemberReference value MethodInvocation value MethodInvocation runtime getCurrentContext Literal "to_a" callMethod = IfStatement BinaryOperation instanceof MemberReference value ReferenceType RubyArray ThrowStatement MethodInvocation runtime Literal "`to_a' did not return Array" newTypeError ReturnStatement Cast ReferenceType RubyArray MemberReference value BlockStatement ReturnStatement MethodInvocation runtime MemberReference value newArray ReturnStatement Cast ReferenceType RubyArray MemberReference tmp	1
MethodDeclaration Modifier public ReferenceType KCode getKCode ReturnStatement MemberReference kcode	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair meta Literal true ReferenceType IRubyObject alloc FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject size ReturnStatement MethodInvocation RubyString MethodInvocation context getRuntime Cast BasicType int MethodInvocation size MethodInvocation getLongValue convertToInteger	0
MethodDeclaration Modifier public ReferenceType FormalParameter ReferenceType String methodName StatementExpression MethodInvocation method MemberReference THIS aload ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 1 BinaryOperation <= MemberReference i MethodInvocation MemberReference ++ i BlockStatement StatementExpression MethodInvocation method MemberReference i aload StatementExpression Assignment MemberReference methodName BinaryOperation + BinaryOperation + MemberReference methodName Literal "_" MethodInvocation script = StatementExpression MethodInvocation method MethodInvocation script getClassname MemberReference methodName MethodInvocation getSignature invokestatic LocalVariableDeclaration ReferenceType VariableDeclarator methodCompiler ClassCreator ReferenceType MemberReference script MemberReference methodName MemberReference inspector MemberReference scope This StatementExpression MethodInvocation methodCompiler ReturnStatement MemberReference methodCompiler	0
MethodDeclaration Modifier private ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject other LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime IfStatement BinaryOperation instanceof MemberReference other ReferenceType RubyBignum BlockStatement ReturnStatement Cast ReferenceType RubyBignum MemberReference other IfStatement BinaryOperation instanceof MemberReference other ReferenceType RubyFloat BlockStatement ReturnStatement MethodInvocation runtime BinaryOperation * Cast BasicType double MemberReference value Cast ReferenceType RubyFloat MemberReference other newFloat ReturnStatement MethodInvocation MemberReference context Literal "*" MemberReference other coerceBin	0
MethodDeclaration Modifier protected post FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType FormalParameter ReferenceType Visibility FormalParameter ReferenceType Frame StatementExpression MethodInvocation MethodInvocation MemberReference setVisibility getFrame StatementExpression MethodInvocation context MemberReference MemberReference	0
MethodDeclaration Modifier private ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject args LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime IfStatement BinaryOperation && BinaryOperation < MemberReference pos MethodInvocation internal MemberReference realSize getByteList MemberReference ! eof BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator isParagraph Literal false LocalVariableDeclaration ReferenceType ByteList VariableDeclarator sep IfStatement BinaryOperation > MemberReference args length Literal 0 BlockStatement IfStatement MemberReference ArraySelector Literal 0 MethodInvocation isNil args BlockStatement LocalVariableDeclaration ReferenceType ByteList VariableDeclarator buf MethodInvocation internal MethodInvocation Cast BasicType int MemberReference pos BinaryOperation - MethodInvocation internal MemberReference realSize getByteList Cast BasicType int MemberReference pos makeShared getByteList StatementExpression Assignment MemberReference pos MemberReference buf realSize += ReturnStatement MethodInvocation RubyString MemberReference runtime MemberReference buf newString StatementExpression Assignment MemberReference sep MemberReference ArraySelector Literal 0 MethodInvocation convertToString MethodInvocation getByteList args = IfStatement BinaryOperation == MemberReference sep realSize Literal 0 BlockStatement StatementExpression Assignment MemberReference isParagraph Literal true = StatementExpression Assignment MemberReference sep MemberReference Stream PARAGRAPH_SEPARATOR = BlockStatement StatementExpression Assignment MemberReference sep Cast ReferenceType RubyString MethodInvocation runtime MethodInvocation Literal "$/" get getGlobalVariables = LocalVariableDeclaration ReferenceType ByteList VariableDeclarator ss MethodInvocation internal getByteList IfStatement MemberReference isParagraph BlockStatement StatementExpression MethodInvocation MemberReference ss IfStatement BinaryOperation == MemberReference pos MemberReference ss realSize BlockStatement ReturnStatement MethodInvocation runtime getNil LocalVariableDeclaration BasicType int VariableDeclarator ix MethodInvocation ss MemberReference sep Cast BasicType int MemberReference pos indexOf LocalVariableDeclaration ReferenceType ByteList VariableDeclarator add IfStatement BinaryOperation == Literal - 1 MemberReference ix BlockStatement StatementExpression Assignment MemberReference ix MethodInvocation internal MemberReference realSize getByteList = StatementExpression Assignment MemberReference add MemberReference ByteList = BlockStatement StatementExpression Assignment MemberReference add TernaryExpression MemberReference isParagraph MemberReference NEWLINE MemberReference sep = LocalVariableDeclaration ReferenceType ByteList VariableDeclarator line ClassCreator ReferenceType ByteList BinaryOperation + BinaryOperation - MemberReference ix Cast BasicType int MemberReference pos MethodInvocation add length StatementExpression MethodInvocation line MethodInvocation internal getByteList Cast BasicType int MemberReference pos BinaryOperation - MemberReference ix Cast BasicType int MemberReference pos append StatementExpression MethodInvocation line MemberReference add append StatementExpression Assignment MemberReference pos BinaryOperation + MemberReference ix MemberReference add realSize = StatementExpression MemberReference ++ ReturnStatement MethodInvocation RubyString MemberReference runtime MemberReference line newString ReturnStatement MethodInvocation runtime getNil	1
MethodDeclaration Modifier public FormalParameter ReferenceType ThreadContext ReferenceType RubyStackTraceElement backtraceFrames StatementExpression Assignment This MemberReference backtraceFrames MemberReference backtraceFrames = IfStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation == MemberReference MemberReference BinaryOperation == MemberReference MemberReference BinaryOperation == MemberReference MemberReference BinaryOperation == MemberReference MemberReference BlockStatement StatementExpression Assignment MemberReference javaStackTrace MethodInvocation Thread MethodInvocation getStackTrace currentThread =	0
MethodDeclaration Modifier public final ReferenceType IRubyObject fromNative FormalParameter ReferenceType ThreadContext context FormalParameter BasicType long value ReturnStatement MethodInvocation context MethodInvocation BinaryOperation != MemberReference value Literal 0 newBoolean getRuntime	1
MethodDeclaration Modifier public FormalParameter ReferenceType StatementExpression Assignment This MemberReference scope MemberReference =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation MethodInvocation MemberReference visitInsn getMethodVisitor	0
MethodDeclaration Modifier public ReferenceType PrintStream getOutput ReturnStatement MemberReference output	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject assign FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject value FormalParameter ReferenceType Block block FormalParameter BasicType boolean checkArity IfStatement BinaryOperation && MethodInvocation runtime isVerbose MethodInvocation context MethodInvocation isSingleton BlockStatement StatementExpression MethodInvocation runtime MethodInvocation MemberReference ID MethodInvocation getPosition Literal singleton class warn getWarnings StatementExpression MethodInvocation ASTInterpreter MethodInvocation MemberReference name MemberReference value MemberReference context MemberReference runtime getClassVariableBase ReturnStatement MethodInvocation runtime getNil	0
MethodDeclaration Modifier public setValue FormalParameter ReferenceType CharSequence value StatementExpression MethodInvocation MethodInvocation ByteList MemberReference value plain view	1
MethodDeclaration Modifier public BasicType boolean ReturnStatement Literal true	0
MethodDeclaration Modifier private ReferenceType RaiseException FormalParameter ReferenceType Throwable exception FormalParameter ReferenceType Member target LocalVariableDeclaration ReferenceType RaiseException VariableDeclarator re MethodInvocation RaiseException MemberReference runtime MemberReference exception MemberReference target createNativeRaiseException ReturnStatement MemberReference re	1
MethodDeclaration Modifier public StatementExpression MethodInvocation MethodInvocation MemberReference visitInsn getMethodVisitor	0
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject other FormalParameter ReferenceType String method IfStatement BinaryOperation instanceof MemberReference other ReferenceType RubyFixnum BlockStatement ReturnStatement MethodInvocation MemberReference context MemberReference value Cast ReferenceType RubyFixnum MemberReference other ReturnStatement MethodInvocation MemberReference context MemberReference method MemberReference other coerceBin	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair frame Literal true ReferenceType IRubyObject default_value_get FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg IfStatement BinaryOperation != BinaryOperation & MemberReference flags MemberReference PROCDEFAULT_HASH_F Literal 0 BlockStatement ReturnStatement MethodInvocation RuntimeHelpers MemberReference context MemberReference ifNone Literal "call" This MemberReference arg invoke ReturnStatement MemberReference ifNone	1
MethodDeclaration Modifier public BasicType int run IfStatement MethodInvocation config BlockStatement StatementExpression MethodInvocation IfStatement MethodInvocation config BlockStatement StatementExpression MethodInvocation IfStatement MethodInvocation ! config BlockStatement IfStatement MethodInvocation config BlockStatement StatementExpression MethodInvocation printUsage IfStatement MethodInvocation config BlockStatement StatementExpression MethodInvocation ReturnStatement Literal 0 LocalVariableDeclaration ReferenceType InputStream VariableDeclarator in MethodInvocation config getScriptSource LocalVariableDeclaration ReferenceType String VariableDeclarator filename MethodInvocation config LocalVariableDeclaration ReferenceType String VariableDeclarator args MethodInvocation MemberReference in IfStatement BinaryOperation > MemberReference args length Literal 0 BlockStatement StatementExpression MethodInvocation config MemberReference args LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation Ruby MemberReference config newInstance TryStatement StatementExpression MethodInvocation Thread MethodInvocation MethodInvocation runtime getJRubyClassLoader currentThread CatchClause CatchClauseParameter SecurityException se IfStatement MethodInvocation runtime MethodInvocation isVerbose getInstanceConfig BlockStatement StatementExpression MethodInvocation config MethodInvocation Literal "WARNING: restrictions disallowed setting context classloader for main println getError IfStatement BinaryOperation == MemberReference in Literal null BlockStatement IfStatement MethodInvocation config BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator status Literal 0 TryStatement StatementExpression MethodInvocation runtime MemberReference in MemberReference filename StatementExpression MethodInvocation config MethodInvocation BinaryOperation + Literal OK for " MemberReference filename println getOutput CatchClause CatchClauseParameter RaiseException re StatementExpression Assignment MemberReference status Literal - 1 = IfStatement MethodInvocation re MethodInvocation getMetaClass MethodInvocation MethodInvocation Literal equals getException BlockStatement StatementExpression MethodInvocation config MethodInvocation BinaryOperation + Literal "SyntaxError in " MethodInvocation re MethodInvocation MethodInvocation runtime getCurrentContext message getException println getOutput BlockStatement ThrowStatement MemberReference re IfStatement BinaryOperation > MethodInvocation config MemberReference length Literal 0 BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator arg MethodInvocation config BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator argFile ClassCreator ReferenceType File MemberReference arg IfStatement MethodInvocation argFile exists BlockStatement TryStatement StatementExpression MethodInvocation runtime ClassCreator ReferenceType FileInputStream MemberReference argFile MemberReference arg StatementExpression MethodInvocation config MethodInvocation BinaryOperation + Literal OK for " MemberReference arg println getOutput CatchClause CatchClauseParameter FileNotFoundException fnfe StatementExpression Assignment MemberReference status Literal - 1 = StatementExpression MethodInvocation config MethodInvocation BinaryOperation + Literal "File not found: " MemberReference arg println getOutput CatchClause CatchClauseParameter RaiseException re StatementExpression Assignment MemberReference status Literal - 1 = IfStatement MethodInvocation re MethodInvocation getMetaClass MethodInvocation MethodInvocation Literal equals getException BlockStatement StatementExpression MethodInvocation config MethodInvocation BinaryOperation + Literal "SyntaxError in " MethodInvocation re MethodInvocation MethodInvocation runtime getCurrentContext message getException println getOutput BlockStatement ThrowStatement MemberReference re BlockStatement StatementExpression Assignment MemberReference status Literal - 1 = StatementExpression MethodInvocation config MethodInvocation BinaryOperation + Literal "File not found: " MemberReference arg println getOutput ReturnStatement MemberReference status BlockStatement LocalVariableDeclaration BasicType long VariableDeclarator now Literal - 1 TryStatement IfStatement MethodInvocation config BlockStatement StatementExpression Assignment MemberReference now MethodInvocation System currentTimeMillis = IfStatement MethodInvocation config BlockStatement StatementExpression MethodInvocation startSampleThread TryStatement StatementExpression MethodInvocation runtime MemberReference in MemberReference filename StatementExpression MethodInvocation runtime tearDown IfStatement MethodInvocation config BlockStatement StatementExpression MethodInvocation config MethodInvocation BinaryOperation + BinaryOperation + Literal " BinaryOperation - MethodInvocation System currentTimeMillis MemberReference now Literal " ms" println getOutput IfStatement MethodInvocation config BlockStatement StatementExpression MethodInvocation report CatchClause CatchClauseParameter RaiseException rj LocalVariableDeclaration ReferenceType RubyException VariableDeclarator raisedException MethodInvocation rj getException IfStatement MethodInvocation runtime MethodInvocation MemberReference raisedException isInstance BlockStatement LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator status MethodInvocation raisedException MethodInvocation runtime getCurrentContext Literal callMethod IfStatement BinaryOperation && BinaryOperation != MemberReference status Literal null MethodInvocation ! status isNil BlockStatement ReturnStatement MethodInvocation RubyNumeric MemberReference status fix2int BlockStatement StatementExpression MethodInvocation runtime MemberReference raisedException printError ReturnStatement Literal 1 ReturnStatement Literal 0	1
MethodDeclaration Modifier public static ReferenceType Object unwrapJavaValue FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType IRubyObject obj FormalParameter ReferenceType String errorMessage IfStatement BinaryOperation instanceof MemberReference obj ReferenceType JavaMethod BlockStatement ReturnStatement Cast ReferenceType JavaMethod MemberReference obj IfStatement BinaryOperation instanceof MemberReference obj ReferenceType JavaConstructor BlockStatement ReturnStatement Cast ReferenceType JavaConstructor MemberReference obj IfStatement BinaryOperation instanceof MemberReference obj ReferenceType JavaField BlockStatement ReturnStatement Cast ReferenceType JavaField MemberReference obj IfStatement BinaryOperation instanceof MemberReference obj ReferenceType JavaObject BlockStatement ReturnStatement Cast ReferenceType JavaObject MemberReference obj IfStatement BinaryOperation && BinaryOperation != MethodInvocation obj dataGetStruct Literal null BinaryOperation instanceof MethodInvocation obj dataGetStruct ReferenceType IRubyObject BlockStatement ReturnStatement MethodInvocation MemberReference runtime Cast ReferenceType IRubyObject MethodInvocation obj dataGetStruct MemberReference errorMessage unwrapJavaValue BlockStatement ThrowStatement MethodInvocation runtime MemberReference errorMessage newTypeError	1
MethodDeclaration Modifier private ReferenceType RubyArray FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject num FormalParameter BasicType boolean last LocalVariableDeclaration BasicType int VariableDeclarator n MethodInvocation RubyNumeric MemberReference num num2int IfStatement BinaryOperation > MemberReference n MemberReference realLength BlockStatement StatementExpression Assignment MemberReference n MemberReference realLength = IfStatement BinaryOperation < MemberReference n Literal 0 BlockStatement ThrowStatement MethodInvocation context MethodInvocation Literal "negative array size" newArgumentError getRuntime ReturnStatement MethodInvocation TernaryExpression MemberReference last BinaryOperation - MemberReference realLength MemberReference n Literal 0 MemberReference n MethodInvocation getMetaClass makeShared	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "sub!" ElementValuePair frame Literal true ElementValuePair module Literal true ElementValuePair visibility MemberReference PRIVATE ElementValuePair reads MemberReference LASTLINE ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType IRubyObject sub_bang FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType Block block ReturnStatement MethodInvocation MethodInvocation MemberReference context MemberReference arg0 MemberReference block sub_bang MemberReference context MethodInvocation context getRuntime getLastlineString	1
MethodDeclaration ReferenceType add FormalParameter ReferenceType Channel channel FormalParameter BasicType int ops FormalParameter ReferenceType Object monitor LocalVariableDeclaration ReferenceType IOChannel VariableDeclarator io ClassCreator ReferenceType IOChannel Cast ReferenceType SelectableChannel MemberReference channel MemberReference ops MemberReference monitor StatementExpression MethodInvocation MemberReference io add StatementExpression MethodInvocation selector ReturnStatement ClassCreator ReferenceType MemberReference io	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "gets" ElementValuePair writes MemberReference FrameField LASTLINE ElementValuePair compat MemberReference RUBY1_8 ReferenceType IRubyObject gets FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator result MethodInvocation MethodInvocation context getRuntime MethodInvocation MemberReference separator getline IfStatement MethodInvocation ! result isNil StatementExpression MethodInvocation context MethodInvocation MemberReference result setLastLine getCurrentScope ReturnStatement MemberReference result	1
MethodDeclaration Modifier protected ReferenceType IRubyObject handleRedo FormalParameter ReferenceType Ruby runtime RaiseException ThrowStatement MethodInvocation runtime MemberReference MethodInvocation runtime getNil Literal "unexpected	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair required Literal 1 ElementValuePair optional Literal 1 ReferenceType IRubyObject readpartial FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject args LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator value MethodInvocation MemberReference context MemberReference args Literal false getPartial IfStatement MethodInvocation value isNil ThrowStatement MethodInvocation context MethodInvocation newEOFError getRuntime ReturnStatement MemberReference value	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime ReturnStatement MethodInvocation MemberReference runtime MethodInvocation MethodInvocation MemberReference context MethodInvocation toString MemberReference runtime	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "annotations?" ReferenceType RubyBoolean annotations_p ReturnStatement MethodInvocation MethodInvocation BinaryOperation > MethodInvocation MethodInvocation MemberReference length Literal 0 newBoolean getRuntime	1
MethodDeclaration Modifier private static BasicType int FormalParameter BasicType byte bytes FormalParameter BasicType int start FormalParameter BasicType int end LocalVariableDeclaration BasicType int VariableDeclarator idx MemberReference start WhileStatement BinaryOperation && BinaryOperation && BinaryOperation < MemberReference idx MemberReference end BinaryOperation < MemberReference idx MemberReference bytes length BinaryOperation != MemberReference ArraySelector MemberReference idx bytes Literal '/' BlockStatement StatementExpression MemberReference ++ idx ReturnStatement MemberReference idx	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "reject!" ElementValuePair frame Literal true ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Block block ReturnStatement TernaryExpression MethodInvocation block isGiven MethodInvocation MemberReference context MemberReference block rejectBang MethodInvocation MethodInvocation context getRuntime This Literal "reject!" enumeratorize	1
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType Node childNodes ReturnStatement MethodInvocation MemberReference createList	0
MethodDeclaration Modifier public Annotation Override ReferenceType DynamicMethod FormalParameter ReferenceType RubyModule module ReturnStatement TernaryExpression BinaryOperation || BinaryOperation == MemberReference enums Literal null MethodInvocation enums isNil MethodInvocation MethodFactory MethodInvocation getRuntime MemberReference module MemberReference function MemberReference returnType MemberReference parameterTypes MemberReference convention MethodInvocation MethodInvocation MemberReference module MemberReference function MemberReference returnType MemberReference parameterTypes MemberReference convention MemberReference enums getFactory	1
MethodDeclaration Modifier private ReferenceType IRubyObject IOException LocalVariableDeclaration ReferenceType String VariableDeclarator className MethodInvocation MethodInvocation asJavaString LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator MethodInvocation MemberReference className findClass LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator result MethodInvocation StatementExpression MethodInvocation MemberReference result LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator MethodInvocation StatementExpression MethodInvocation result MethodInvocation MethodInvocation getCurrentContext getRuntime Literal MemberReference callMethod ReturnStatement MemberReference result	0
MethodDeclaration Modifier private static FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject from FormalParameter ReferenceType IRubyObject to FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator i MemberReference from LocalVariableDeclaration ReferenceType RubyFixnum VariableDeclarator one MethodInvocation RubyFixnum MemberReference runtime one WhileStatement Literal true BlockStatement IfStatement MethodInvocation i MethodInvocation isTrue MemberReference context Literal ">" MemberReference to callMethod BlockStatement BreakStatement StatementExpression MethodInvocation block MemberReference context MemberReference i yield StatementExpression Assignment MemberReference i MethodInvocation i MemberReference context Literal "+" MemberReference one callMethod =	0
MethodDeclaration Modifier private ReferenceType IRubyObject handlelIllegalArgumentEx FormalParameter ReferenceType IllegalArgumentException iae FormalParameter ReferenceType Object arguments ThrowStatement MethodInvocation MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "for constructor of type" MethodInvocation constructor MethodInvocation getSimpleName getDeclaringClass Literal " expected " MethodInvocation MethodInvocation inspect argument_types Literal "; " MethodInvocation MemberReference arguments Literal "; error: " MethodInvocation iae getMessage newTypeError getRuntime	0
MethodDeclaration Modifier public final put FormalParameter BasicType long offset FormalParameter BasicType double src FormalParameter BasicType int off FormalParameter BasicType int len ThrowStatement MethodInvocation ex	0
MethodDeclaration Modifier private BasicType boolean ReturnStatement MethodInvocation threadImpl	0
MethodDeclaration Modifier public ReferenceType IRubyObject specificEval FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType RubyModule FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 FormalParameter ReferenceType Block block IfStatement MethodInvocation block isGiven ThrowStatement MethodInvocation context MethodInvocation Literal 2 Literal 0 newArgumentError getRuntime LocalVariableDeclaration ReferenceType RubyString VariableDeclarator evalStr IfStatement BinaryOperation instanceof MemberReference arg0 ReferenceType RubyString BlockStatement StatementExpression Assignment MemberReference evalStr Cast ReferenceType RubyString MemberReference arg0 = BlockStatement StatementExpression Assignment MemberReference evalStr MethodInvocation arg0 convertToString = LocalVariableDeclaration ReferenceType String VariableDeclarator file MethodInvocation arg1 MethodInvocation asJavaString convertToString LocalVariableDeclaration BasicType int VariableDeclarator line Cast BasicType int BinaryOperation - MethodInvocation arg2 MethodInvocation getLongValue convertToInteger Literal 1 ReturnStatement MethodInvocation MemberReference context MemberReference MemberReference evalStr MemberReference file MemberReference line evalUnder	1
MethodDeclaration Modifier public final marshal FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType InvocationBuffer buffer FormalParameter ReferenceType IRubyObject parameter IfStatement BinaryOperation instanceof MemberReference parameter ReferenceType RubySymbol BlockStatement StatementExpression Assignment MemberReference parameter MethodInvocation enums MemberReference parameter fastARef = IfStatement MethodInvocation parameter isNil BlockStatement ThrowStatement MethodInvocation context MethodInvocation BinaryOperation + Literal "wrong argument. Could not locate enum value for " MemberReference parameter newArgumentError getRuntime StatementExpression MethodInvocation marshaller MemberReference context MemberReference buffer MemberReference parameter marshal	1
MethodDeclaration Modifier public static ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject one FormalParameter ReferenceType IRubyObject two FormalParameter ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject ReturnStatement ArrayCreator ReferenceType IRubyObject ArrayInitializer MemberReference one MemberReference two MemberReference MemberReference MemberReference	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal "succ" Literal ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context IfStatement BinaryOperation instanceof This ReferenceType RubyFixnum BlockStatement ReturnStatement MethodInvocation RubyFixnum MethodInvocation context getRuntime BinaryOperation + MethodInvocation getLongValue Literal 1L newFixnum BlockStatement ReturnStatement MethodInvocation MemberReference context Literal "+" MethodInvocation RubyFixnum MethodInvocation context getRuntime one callMethod	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 IfStatement BinaryOperation >= MemberReference box callCount Literal 0 BlockStatement ReturnStatement MethodInvocation MethodInvocation MemberReference context MemberReference self MemberReference clazz MemberReference name MemberReference arg0 MemberReference arg1 MemberReference arg2 call MemberReference context MemberReference name tryJitReturnMethod ReturnStatement MethodInvocation box.actualMethod MemberReference context MemberReference self MemberReference clazz MemberReference name MemberReference arg0 MemberReference arg1 MemberReference arg2 call	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal Literal "<<" ElementValuePair rest Literal true ReferenceType IRubyObject yield FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject args StatementExpression MethodInvocation StatementExpression MethodInvocation proc MemberReference context MemberReference args call ReturnStatement This	0
MethodDeclaration Modifier public run StatementExpression MethodInvocation MethodInvocation prompt trim MemberReference promptStyle append StatementExpression MethodInvocation Literal " " MemberReference inputStyle append StatementExpression MethodInvocation area MethodInvocation area MethodInvocation getLength getDocument setCaretPosition StatementExpression Assignment MemberReference startPos MethodInvocation area MethodInvocation getLength getDocument = StatementExpression MethodInvocation Readline MethodInvocation moveToEnd MethodInvocation Readline MemberReference runtime getHolder getHistory	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal "==" Literal "eql?" ElementValuePair required Literal 1 ReferenceType IRubyObject op_equal FormalParameter ReferenceType IRubyObject other IfStatement BinaryOperation instanceof MemberReference other ReferenceType JavaObject BlockStatement StatementExpression Assignment MemberReference other Cast ReferenceType JavaObject MethodInvocation other dataGetStruct = IfStatement BinaryOperation instanceof MemberReference other ReferenceType JavaObject BlockStatement ReturnStatement MethodInvocation MethodInvocation getFalse getRuntime IfStatement BinaryOperation && BinaryOperation == MethodInvocation getValue Literal null BinaryOperation == Cast ReferenceType JavaObject MemberReference other Literal null BlockStatement ReturnStatement MethodInvocation MethodInvocation getTrue getRuntime LocalVariableDeclaration BasicType boolean VariableDeclarator isEqual MethodInvocation MethodInvocation Cast ReferenceType JavaObject MemberReference other equals getValue ReturnStatement TernaryExpression MemberReference isEqual MethodInvocation MethodInvocation getTrue getRuntime MethodInvocation MethodInvocation getFalse getRuntime	1
MethodDeclaration Modifier public final FormalParameter BasicType long offset FormalParameter BasicType int value StatementExpression MethodInvocation MemberReference offset Literal 4 checkBounds StatementExpression MethodInvocation BinaryOperation + MemberReference address MemberReference offset MemberReference value	0
MethodDeclaration Modifier public Annotation JRubyMethod ReferenceType IRubyObject name ReturnStatement MethodInvocation MethodInvocation Cast ReferenceType Member MethodInvocation newString getRuntime	0
MethodDeclaration Modifier public nextValue FormalParameter ReferenceType BodyCompiler context FormalParameter ReferenceType Object object FormalParameter BasicType int index LocalVariableDeclaration ReferenceType OptArgNode VariableDeclarator Cast ReferenceType OptArgNode Cast ReferenceType ListNode MemberReference object StatementExpression MethodInvocation MethodInvocation getValue MemberReference context Literal false	0
MethodDeclaration Modifier private static ReferenceType String FormalParameter ReferenceType String name ReturnStatement MethodInvocation name Literal '.' Literal '/' replace	0
MethodDeclaration Modifier public ReferenceType NodeType getNodeType ReturnStatement MemberReference NodeType XSTRNODE	0
MethodDeclaration Modifier public static ReferenceType RubyModule FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject IfStatement BinaryOperation || BinaryOperation == MemberReference Literal null MethodInvocation isNil BlockStatement StatementExpression Assignment MemberReference MethodInvocation context MethodInvocation MethodInvocation getModule getCurrentScope = IfStatement BinaryOperation == MemberReference Literal null BlockStatement ThrowStatement MethodInvocation context MethodInvocation Literal "no outer class/module" newTypeError getRuntime IfStatement BinaryOperation instanceof MemberReference ReferenceType RubyModule BlockStatement ReturnStatement Cast ReferenceType RubyModule MemberReference BlockStatement ThrowStatement MethodInvocation context MethodInvocation BinaryOperation + MemberReference Literal " is not a class/module" newTypeError getRuntime	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal ElementValuePair meta Literal true ElementValuePair required Literal 3 ElementValuePair optional Literal 1 ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block ReturnStatement MethodInvocation MemberReference context MemberReference recv MemberReference ArraySelector Literal 0 args MethodInvocation RubyNumeric MemberReference ArraySelector Literal 1 args fix2int MethodInvocation RubyNumeric MemberReference ArraySelector Literal 2 args num2int MemberReference ArraySelector Literal 3 MethodInvocation isTrue args MemberReference block	0
MethodDeclaration Modifier public ReferenceType OutputStream ReturnStatement MethodInvocation Cast ReferenceType MethodInvocation descriptor getChannel	0
MethodDeclaration Modifier public ReferenceType Object case25_line391 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals checkExpression LocalVariableDeclaration ReferenceType String VariableDeclarator asgnOp Cast ReferenceType String Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals IfStatement MethodInvocation asgnOp Literal "||" equals BlockStatement StatementExpression Cast ReferenceType AssignableNode MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType OpAsgnOrNode MethodInvocation Cast ReferenceType AssignableNode MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals getPosition MethodInvocation support Cast ReferenceType AssignableNode MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals gettable2 Cast ReferenceType AssignableNode MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals = IfStatement MethodInvocation asgnOp Literal "&&" equals BlockStatement StatementExpression Cast ReferenceType AssignableNode MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType OpAsgnAndNode MethodInvocation Cast ReferenceType AssignableNode MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals getPosition MethodInvocation support Cast ReferenceType AssignableNode MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals gettable2 Cast ReferenceType AssignableNode MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals = BlockStatement StatementExpression Cast ReferenceType AssignableNode MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals StatementExpression Cast ReferenceType AssignableNode MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals StatementExpression Assignment MemberReference yyVal Cast ReferenceType AssignableNode MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public Annotation JRubyMethod ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context ReturnStatement MethodInvocation context MethodInvocation MemberReference path Literal true getRuntime	0
MethodDeclaration Modifier public FormalParameter ReferenceType method FormalParameter ReferenceType String methodName FormalParameter BasicType int receiverLocal StatementExpression MethodInvocation method loadThis StatementExpression MethodInvocation method loadThreadContext StatementExpression MethodInvocation method.method MemberReference receiverLocal aload IfStatement BinaryOperation < MemberReference MemberReference AbstractScript BlockStatement StatementExpression MethodInvocation method.method MemberReference methodName ldc StatementExpression MethodInvocation method.method MethodInvocation scriptCompiler getClassname BinaryOperation + Literal MemberReference MethodInvocation ClassReference ReferenceType DynamicMethod ClassReference ReferenceType ThreadContext ClassReference ReferenceType IRubyObject ClassReference ReferenceType String sig invokevirtual BlockStatement StatementExpression MethodInvocation method.method MemberReference pushInt StatementExpression MethodInvocation method.method MemberReference methodName ldc StatementExpression MethodInvocation method.method MethodInvocation scriptCompiler getClassname Literal MethodInvocation ClassReference ReferenceType DynamicMethod ClassReference ReferenceType ThreadContext ClassReference ReferenceType IRubyObject ClassReference BasicType int ClassReference ReferenceType String sig invokevirtual StatementExpression MemberReference ++	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public StatementExpression MethodInvocation method MethodInvocation ClassReference ReferenceType RubyArray p Literal MethodInvocation ClassReference ReferenceType RubyArray MethodInvocation ClassReference ReferenceType IRubyObject params sig invokevirtual	0
MethodDeclaration Modifier public Annotation Override ReferenceType String FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block LocalVariableDeclaration ReferenceType RubyModule VariableDeclarator module MethodInvocation context MethodInvocation MethodInvocation getModule getCurrentScope IfStatement BinaryOperation && BinaryOperation == MemberReference module Literal null MethodInvocation self MethodInvocation MemberReference name fastIsClassVarDefined getMetaClass BlockStatement ReturnStatement Literal "class variable" IfStatement MethodInvocation module MemberReference name fastIsClassVarDefined BlockStatement ReturnStatement Literal "class variable" LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator attached TernaryExpression MethodInvocation module isSingleton Cast ReferenceType MetaClass MemberReference module Literal null IfStatement BinaryOperation && BinaryOperation instanceof MemberReference attached ReferenceType RubyModule Cast ReferenceType RubyModule MemberReference attached BlockStatement ReturnStatement Literal "class variable" ReturnStatement Literal null	1
MethodDeclaration Modifier public StatementExpression Assignment MemberReference counter Literal 0 = StatementExpression MethodInvocation runtime Literal StatementExpression MethodInvocation Literal "The library have been loaded" MemberReference counter Literal 1 assertEquals	0
MethodDeclaration Modifier public static ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject x FormalParameter ReferenceType IRubyObject y IfStatement BinaryOperation || MethodInvocation MemberReference context MemberReference x f_zero_p MethodInvocation MemberReference context MemberReference y f_zero_p ReturnStatement MethodInvocation RubyFixnum MethodInvocation context getRuntime zero ReturnStatement MethodInvocation MemberReference context MethodInvocation MemberReference context MethodInvocation MemberReference context MemberReference x MethodInvocation MemberReference context MemberReference x MemberReference y f_gcd f_div MemberReference y f_mul f_abs	1
MethodDeclaration Modifier public final FormalParameter BasicType byte buffer FormalParameter BasicType int offset FormalParameter BasicType int value StatementExpression Assignment MemberReference ArraySelector BinaryOperation + MemberReference offset Literal 0 buffer Cast BasicType byte BinaryOperation >> MemberReference value Literal 0 = StatementExpression Assignment MemberReference ArraySelector BinaryOperation + MemberReference offset Literal 1 buffer Cast BasicType byte BinaryOperation >> MemberReference value Literal 8 =	0
MethodDeclaration Modifier public Annotation Override ReferenceType String getParent ReturnStatement SuperMethodInvocation MethodInvocation MemberReference File separatorChar Literal '/' replace getParent	0
MethodDeclaration Modifier public FormalParameter ReferenceType Label arg0 StatementExpression MethodInvocation MethodInvocation MemberReference MemberReference arg0 getMethodVisitor	1
MethodDeclaration Modifier public ReferenceType Operand ReturnStatement MemberReference	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair frame Literal true ReferenceType IRubyObject fill FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg FormalParameter ReferenceType Block block IfStatement MethodInvocation block isGiven BlockStatement IfStatement BinaryOperation instanceof MemberReference arg ReferenceType RubyRange BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator beglen Cast ReferenceType RubyRange MemberReference arg ReturnStatement MethodInvocation MemberReference context MemberReference ArraySelector Literal 0 beglen MemberReference ArraySelector Literal 1 beglen MemberReference block fillCommon LocalVariableDeclaration BasicType int VariableDeclarator beg ReturnStatement MethodInvocation MemberReference context Assignment MemberReference beg MethodInvocation MemberReference arg fillBegin = MethodInvocation MemberReference beg Literal null fillLen MemberReference block fillCommon BlockStatement ReturnStatement MethodInvocation MemberReference context Literal 0 MemberReference realLength MemberReference arg fillCommon	1
MethodDeclaration Modifier public ReferenceType Operand FormalParameter ReferenceType Map TypeArgument ReferenceType Operand TypeArgument ReferenceType Operand StatementExpression MethodInvocation MemberReference LocalVariableDeclaration ReferenceType Operand VariableDeclarator val MethodInvocation MemberReference getValue ReturnStatement MethodInvocation val MemberReference MemberReference	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator args Cast ReferenceType RubyArray MethodInvocation MethodInvocation dup MemberReference runtime MemberReference context MemberReference self MemberReference ReturnStatement MethodInvocation args MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference append	0
MethodDeclaration Modifier public ReferenceType Operand buildNil FormalParameter ReferenceType Node node FormalParameter ReferenceType IR_Scope m StatementExpression MethodInvocation m ClassCreator ReferenceType THREAD_POLL_Instr addInstr ReturnStatement MemberReference Nil NIL	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair required Literal 1 ElementValuePair module Literal true ElementValuePair visibility MemberReference Visibility PRIVATE ReferenceType RubyFloat FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject x LocalVariableDeclaration BasicType double VariableDeclarator value Cast ReferenceType RubyFloat MethodInvocation RubyKernel MemberReference recv MemberReference x LocalVariableDeclaration BasicType double VariableDeclarator result IfStatement BinaryOperation || MethodInvocation Double MemberReference value isNaN BinaryOperation < MemberReference value Literal 1 BlockStatement StatementExpression Assignment MemberReference result MemberReference Double NaN = IfStatement BinaryOperation < MemberReference value Literal BlockStatement StatementExpression Assignment MemberReference result MethodInvocation Math BinaryOperation + MemberReference value MethodInvocation Math BinaryOperation - BinaryOperation * MemberReference value MemberReference value Literal 1.0 sqrt log = BlockStatement StatementExpression Assignment MemberReference result BinaryOperation + Literal MethodInvocation Math MemberReference value log = StatementExpression MethodInvocation MemberReference recv MemberReference result Literal ReturnStatement MethodInvocation RubyFloat MethodInvocation recv getRuntime MemberReference result newFloat	0
MethodDeclaration Modifier private ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime IfStatement BinaryOperation > MemberReference realSize Literal 0 BlockStatement LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator res MethodInvocation RubyString MemberReference runtime MemberReference bytes MemberReference begin MemberReference realSize newString StatementExpression MethodInvocation MemberReference ReturnStatement MemberReference res ReturnStatement MethodInvocation RubyString MemberReference runtime newEmptyString	0
MethodDeclaration Modifier public static ReferenceType IRubyObject isExceptionHandled FormalParameter ReferenceType RubyException currentException FormalParameter ReferenceType IRubyObject exception0 FormalParameter ReferenceType IRubyObject exception1 FormalParameter ReferenceType ThreadContext context LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator result MethodInvocation MemberReference currentException MemberReference exception0 MemberReference context isExceptionHandled IfStatement MethodInvocation result isTrue ReturnStatement MemberReference result ReturnStatement MethodInvocation MemberReference currentException MemberReference exception1 MemberReference context isExceptionHandled	1
MethodDeclaration Modifier public ReferenceType Object case14_line335 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public StatementExpression MethodInvocation StatementExpression MethodInvocation Literal MethodInvocation ClassReference ReferenceType RubyBoolean sig	1
MethodDeclaration Modifier private ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject arg0 FormalParameter BasicType int jflag LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation getRuntime ReturnStatement MethodInvocation MemberReference runtime MemberReference MethodInvocation RubyFixnum MemberReference arg0 num2int MemberReference jflag justifyCommon	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal ElementValuePair meta Literal true ReferenceType IRubyObject newInstance FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject count FormalParameter ReferenceType Block block ReturnStatement MethodInvocation MemberReference context MemberReference recv MemberReference MethodInvocation RubyNumeric MemberReference count fix2int Literal 1 Literal true MemberReference block	0
MethodDeclaration Modifier public ReferenceType Object put FormalParameter ReferenceType Object key FormalParameter ReferenceType Object value LocalVariableDeclaration ReferenceType Object VariableDeclarator masked_key MethodInvocation MemberReference key LocalVariableDeclaration BasicType int VariableDeclarator hash MethodInvocation MemberReference masked_key ReturnStatement MethodInvocation MemberReference hash MemberReference masked_key MemberReference value put	1
MethodDeclaration Modifier public static ReferenceType RubyClass unmarshalFrom FormalParameter ReferenceType input java.io.IOException LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation RubyString MethodInvocation input LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator result MethodInvocation MethodInvocation input getRuntime MemberReference name getClassFromPath StatementExpression MethodInvocation input MemberReference result ReturnStatement MemberReference result	1
MethodDeclaration Modifier private addAccessor FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType String internedName FormalParameter ReferenceType Visibility visibility FormalParameter BasicType boolean readable FormalParameter BasicType boolean writeable AssertStatement BinaryOperation == MemberReference internedName MethodInvocation internedName intern BinaryOperation + MemberReference internedName Literal " is not interned" LocalVariableDeclaration Modifier final ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime IfStatement BinaryOperation == MemberReference visibility MemberReference PRIVATE BlockStatement IfStatement BinaryOperation == MemberReference visibility MemberReference MODULE_FUNCTION BlockStatement StatementExpression Assignment MemberReference visibility MemberReference PRIVATE = LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator variableName BinaryOperation + Literal "@" MemberReference internedName IfStatement MemberReference readable BlockStatement StatementExpression MethodInvocation MemberReference internedName ClassCreator ReferenceType JavaMethodZero This MemberReference visibility MemberReference CallConfiguration FrameNoneScopeNone FieldDeclaration Modifier private ReferenceType RubyClass ReferenceType VariableAccessor VariableDeclarator accessor MemberReference RubyClass.VariableAccessor MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator variable Cast ReferenceType IRubyObject MethodInvocation MethodInvocation MemberReference self get MethodInvocation self MethodInvocation getRealClass getMetaClass ReturnStatement TernaryExpression BinaryOperation == MemberReference variable Literal null MethodInvocation runtime getNil MemberReference variable MethodDeclaration Modifier private ReferenceType RubyClass ReferenceType VariableAccessor FormalParameter ReferenceType RubyClass cls LocalVariableDeclaration ReferenceType RubyClass ReferenceType VariableAccessor VariableDeclarator localAccessor MemberReference accessor IfStatement BinaryOperation != MethodInvocation localAccessor MethodInvocation cls hashCode BlockStatement StatementExpression Assignment MemberReference localAccessor MethodInvocation cls MemberReference variableName = StatementExpression Assignment MemberReference accessor MemberReference localAccessor = ReturnStatement MemberReference localAccessor addMethod StatementExpression MethodInvocation MemberReference context Literal "method_added" MethodInvocation runtime MemberReference internedName fastNewSymbol callMethod IfStatement MemberReference writeable BlockStatement StatementExpression Assignment MemberReference internedName BinaryOperation + MemberReference internedName Literal "=" = StatementExpression MethodInvocation MemberReference internedName ClassCreator ReferenceType JavaMethodOne This MemberReference visibility MemberReference CallConfiguration FrameNoneScopeNone FieldDeclaration Modifier private ReferenceType RubyClass ReferenceType VariableAccessor VariableDeclarator accessor MemberReference RubyClass.VariableAccessor MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg1 StatementExpression MethodInvocation MethodInvocation MemberReference self MemberReference arg1 set MethodInvocation self MethodInvocation getRealClass getMetaClass ReturnStatement MemberReference arg1 MethodDeclaration Modifier private ReferenceType RubyClass ReferenceType VariableAccessor FormalParameter ReferenceType RubyClass cls LocalVariableDeclaration ReferenceType RubyClass ReferenceType VariableAccessor VariableDeclarator localAccessor MemberReference accessor IfStatement BinaryOperation != MethodInvocation localAccessor MethodInvocation cls hashCode BlockStatement StatementExpression Assignment MemberReference localAccessor MethodInvocation cls MemberReference variableName = StatementExpression Assignment MemberReference accessor MemberReference localAccessor = ReturnStatement MemberReference localAccessor addMethod StatementExpression MethodInvocation MemberReference context Literal "method_added" MethodInvocation runtime MemberReference internedName fastNewSymbol callMethod	1
MethodDeclaration Modifier public static BasicType boolean FormalParameter ReferenceType String id ReturnStatement BinaryOperation && BinaryOperation > MethodInvocation id length Literal 0 BinaryOperation == MethodInvocation id Literal 0 charAt Literal '$'	0
MethodDeclaration Modifier public StatementExpression MethodInvocation MethodInvocation ! isTrue assertTrue	1
MethodDeclaration Modifier final BasicType boolean singleByteOptimizable ReturnStatement BinaryOperation || BinaryOperation == MethodInvocation getCodeRange MemberReference CR_7BIT MethodInvocation	0
MethodDeclaration Modifier public static ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 LocalVariableDeclaration BasicType int VariableDeclarator pid Cast BasicType int MethodInvocation arg1 MethodInvocation getLongValue convertToInteger LocalVariableDeclaration BasicType int VariableDeclarator gid Cast BasicType int MethodInvocation arg2 MethodInvocation getLongValue convertToInteger ReturnStatement MethodInvocation runtime MethodInvocation runtime MethodInvocation MemberReference pid MemberReference gid getPosix newFixnum	0
MethodDeclaration Modifier public FormalParameter ReferenceType globalVariables StatementExpression Assignment This MemberReference globalVariables MemberReference globalVariables =	0
MethodDeclaration Modifier public static Annotation Deprecated BasicType char FormalParameter ReferenceType IRubyObject rubyObject ReturnStatement Cast ReferenceType Character MethodInvocation MemberReference rubyObject ClassReference BasicType char convertRubyToJava	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "upcase!" ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime IfStatement BinaryOperation == MemberReference value realSize Literal 0 BlockStatement StatementExpression MethodInvocation modifyCheck ReturnStatement MethodInvocation runtime getNil StatementExpression MethodInvocation modify ReturnStatement MethodInvocation MemberReference runtime MemberReference value bytes MemberReference value begin BinaryOperation + MemberReference value begin MemberReference value realSize	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair optional Literal 1 ElementValuePair module Literal true ElementValuePair visibility MemberReference PRIVATE ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args ReturnStatement MethodInvocation MemberReference context MethodInvocation context MethodInvocation getGlobalVariables MethodInvocation Literal get getRuntime MemberReference args	0
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement MemberReference name	0
MethodDeclaration Modifier public final ReferenceType FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType String descriptor ReturnStatement MethodInvocation runtimeCache This MemberReference context Literal 0 MemberReference descriptor	0
MethodDeclaration Modifier public final ReferenceType CallSite ReturnStatement MemberReference runtimeCache ArraySelector Literal 4 callSites	0
MethodDeclaration Modifier public BasicType boolean isConstant ReturnStatement BinaryOperation && MethodInvocation _begin isConstant MethodInvocation isConstant	0
MethodDeclaration Modifier private FormalParameter ReferenceType Ruby runtime AssertStatement MethodInvocation runtime StatementExpression MethodInvocation runtime MethodInvocation This add	0
MethodDeclaration Modifier public Annotation Override BasicType boolean ReturnStatement Literal false	0
MethodDeclaration Modifier public static ReferenceType CacheEntry FormalParameter ReferenceType IRubyObject obj FormalParameter ReferenceType String name1 FormalParameter ReferenceType String name2 ReturnStatement MethodInvocation MethodInvocation obj getMetaClass MemberReference name1 MemberReference name2	0
MethodDeclaration Modifier public final get FormalParameter BasicType long offset FormalParameter BasicType double dst FormalParameter BasicType int off FormalParameter BasicType int len StatementExpression MethodInvocation BinaryOperation + MemberReference address MemberReference offset MemberReference dst MemberReference off MemberReference len	0
MethodDeclaration Modifier public final marshal FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType InvocationBuffer buffer FormalParameter ReferenceType IRubyObject parameter IfStatement BinaryOperation instanceof MemberReference parameter ReferenceType RubyString BlockStatement StatementExpression MethodInvocation Util MethodInvocation context getRuntime MemberReference parameter LocalVariableDeclaration ReferenceType ByteList VariableDeclarator bl Cast ReferenceType RubyString MemberReference parameter StatementExpression MethodInvocation buffer MethodInvocation bl unsafeBytes MethodInvocation bl begin MethodInvocation bl length BinaryOperation | MemberReference ArrayFlags IN MemberReference ArrayFlags NULTERMINATE putArray IfStatement MethodInvocation parameter isNil BlockStatement StatementExpression MethodInvocation buffer Literal 0 BlockStatement ThrowStatement MethodInvocation context MethodInvocation Literal "Invalid string parameter" newArgumentError getRuntime	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "drop_while" ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject drop_while FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime IfStatement MethodInvocation ! block isGiven ReturnStatement MethodInvocation MemberReference runtime This Literal "drop_while" enumeratorize LocalVariableDeclaration BasicType int VariableDeclarator i MemberReference begin ForStatement ForControl BinaryOperation < MemberReference i BinaryOperation + MemberReference begin MemberReference realLength MemberReference ++ i BlockStatement IfStatement MethodInvocation ! block MethodInvocation isTrue MemberReference context MemberReference ArraySelector MemberReference i values yield BreakStatement LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator result MethodInvocation BinaryOperation - MemberReference i MemberReference begin MemberReference realLength subseq ReturnStatement TernaryExpression MethodInvocation result isNil MethodInvocation runtime newEmptyArray MemberReference result	1
MethodDeclaration Modifier private FormalParameter ReferenceType Process child StatementExpression Assignment MemberReference MethodInvocation MethodInvocation child getErrorStream = IfStatement BinaryOperation instanceof MemberReference ReferenceType FileInputStream BlockStatement StatementExpression Assignment MemberReference Cast ReferenceType FileInputStream MemberReference = BlockStatement StatementExpression Assignment MemberReference Literal null = StatementExpression Assignment MemberReference inerrPumper Literal null =	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block ReturnStatement MethodInvocation callAdapter MemberReference context MemberReference self MemberReference self MethodInvocation arg1 MemberReference runtime MemberReference context MemberReference self MemberReference MethodInvocation arg2 MemberReference runtime MemberReference context MemberReference self MemberReference MethodInvocation arg3 MemberReference runtime MemberReference context MemberReference self MemberReference call	0
MethodDeclaration Modifier public final Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block StatementExpression MethodInvocation arity MethodInvocation context getRuntime MemberReference args checkArity ReturnStatement MethodInvocation MemberReference context MemberReference ArraySelector Literal 0 args MemberReference ArraySelector Literal 1 args invoke	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair required Literal 1 ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject value LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MemberReference begin BinaryOperation < MemberReference i BinaryOperation + MemberReference begin MemberReference realLength MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator v MemberReference ArraySelector MemberReference i values IfStatement BinaryOperation instanceof MemberReference v ReferenceType RubyArray BlockStatement LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator arr Cast ReferenceType RubyArray MemberReference v IfStatement BinaryOperation && BinaryOperation > MemberReference arr realLength Literal 1 MethodInvocation MemberReference context MemberReference arr ArraySelector BinaryOperation + MemberReference arr begin Literal 1 values MemberReference value equalInternal ReturnStatement MemberReference arr ReturnStatement MethodInvocation runtime getNil	1
MethodDeclaration FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject proxy FormalParameter ReferenceType Object args LocalVariableDeclaration BasicType int VariableDeclarator len MemberReference args length LocalVariableDeclaration ReferenceType Class VariableDeclarator argTypes ArrayCreator ReferenceType Class MemberReference args length ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference len MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i argTypes MemberReference ArraySelector MemberReference i MethodInvocation getClass args = ThrowStatement MethodInvocation proxy MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "no " MemberReference name Literal " with arguments matching " MethodInvocation Arrays MemberReference argTypes toString Literal " on object " MethodInvocation proxy getMetaClass Literal null newNameError getRuntime	0
MethodDeclaration Modifier private static BasicType boolean FormalParameter BasicType long value ReturnStatement BinaryOperation && BinaryOperation >= MemberReference value MemberReference Integer MIN_VALUE BinaryOperation <= MemberReference value Literal	1
MethodDeclaration Modifier public ReferenceType Member getTarget ReturnStatement MemberReference target	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair required Literal 2 ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 LocalVariableDeclaration BasicType int VariableDeclarator owner Literal - 1 IfStatement MethodInvocation ! arg1 isNil BlockStatement StatementExpression Assignment MemberReference owner MethodInvocation RubyNumeric MemberReference arg1 num2int = LocalVariableDeclaration BasicType int VariableDeclarator group Literal - 1 IfStatement MethodInvocation ! arg2 isNil BlockStatement StatementExpression Assignment MemberReference group MethodInvocation RubyNumeric MemberReference arg2 num2int = IfStatement ClassCreator ! MethodInvocation exists ReferenceType File MemberReference path BlockStatement ThrowStatement MethodInvocation context MethodInvocation BinaryOperation + Literal "No such file or directory - " MemberReference path newErrnoENOENTError getRuntime ReturnStatement MethodInvocation context MethodInvocation MethodInvocation context MethodInvocation getPosix MethodInvocation MemberReference path MemberReference owner MemberReference group getRuntime newFixnum getRuntime	0
MethodDeclaration Modifier public static ReferenceType CacheEntry FormalParameter ReferenceType RubyClass clazz FormalParameter ReferenceType String name1 FormalParameter ReferenceType String name2 FormalParameter ReferenceType String name3 LocalVariableDeclaration ReferenceType CacheEntry VariableDeclarator entry MethodInvocation clazz MemberReference name1 IfStatement BinaryOperation == MemberReference entry method MemberReference INSTANCE BlockStatement ReturnStatement MethodInvocation MemberReference clazz MemberReference name2 MemberReference name3 ReturnStatement MemberReference entry	0
MethodDeclaration Modifier public ReferenceType Arity ReturnStatement MemberReference Arity	0
MethodDeclaration Modifier public ReferenceType DynamicMethod ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType String getSignature IfStatement MethodInvocation MemberReference scope BlockStatement StatementExpression Assignment MemberReference specificArity Literal false = ReturnStatement MethodInvocation MethodInvocation script getClassname Literal 4 BlockStatement StatementExpression Assignment MemberReference specificArity Literal true = ReturnStatement MethodInvocation MethodInvocation script getClassname MethodInvocation scope getRequiredArgs	0
MethodDeclaration Modifier private applyProxyExtenders LocalVariableDeclaration ReferenceType ArrayList TypeArgument ReferenceType IRubyObject VariableDeclarator extenders IfStatement BinaryOperation != Assignment MemberReference extenders MemberReference proxyExtenders = Literal null BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType IRubyObject VariableDeclarator extender MemberReference extenders BlockStatement StatementExpression MethodInvocation MemberReference extender StatementExpression Assignment MemberReference proxyExtenders Literal null =	1
MethodDeclaration Modifier public static ReferenceType RubyArray FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType String function AssertStatement BinaryOperation >= MemberReference args length Literal 2 LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator array MethodInvocation context MethodInvocation BinaryOperation - MemberReference args length Literal 2 newArray getRuntime LocalVariableDeclaration ReferenceType VariableDeclarator iconv MethodInvocation MemberReference context MemberReference recv MemberReference ArraySelector Literal 0 args MemberReference ArraySelector Literal 1 args TryStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 2 BinaryOperation < MemberReference i MemberReference args length MemberReference ++ i BlockStatement StatementExpression MethodInvocation array MethodInvocation iconv MemberReference ArraySelector MemberReference i args iconv append StatementExpression MethodInvocation iconv close ReturnStatement MemberReference array	1
MethodDeclaration Modifier public Annotation Override BasicType boolean FormalParameter ReferenceType IRubyObject obj FormalParameter ReferenceType RubyModule type ReturnStatement BinaryOperation instanceof MemberReference obj ReferenceType RubyModule	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType NodeVisitor iVisitor ReturnStatement MethodInvocation iVisitor This	0
MethodDeclaration Modifier public BasicType boolean isSingleton ReturnStatement Literal false	0
MethodDeclaration Modifier public static ReferenceType IRubyObject isExceptionHandled FormalParameter ReferenceType RubyException currentException FormalParameter ReferenceType IRubyObject exception FormalParameter ReferenceType ThreadContext context LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime IfStatement MethodInvocation ! runtime MethodInvocation MemberReference exception isInstance getModule BlockStatement ThrowStatement MethodInvocation runtime Literal "class or module required for rescue clause" newTypeError LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator result MethodInvocation MemberReference context MemberReference exception Literal "===" MemberReference currentException invoke IfStatement MethodInvocation result isTrue ReturnStatement MemberReference result ReturnStatement MethodInvocation runtime getFalse	1
MethodDeclaration Modifier public static ReferenceType Arity noArguments ReturnStatement MemberReference	0
MethodDeclaration Modifier private ReferenceType RubyClass searchProvidersForClass FormalParameter ReferenceType String name FormalParameter ReferenceType RubyClass superClazz IfStatement BinaryOperation != MemberReference Literal null BlockStatement SynchronizedStatement MemberReference LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator clazz ForStatement EnhancedForControl VariableDeclaration ReferenceType VariableDeclarator classProvider MemberReference BlockStatement IfStatement BinaryOperation != Assignment MemberReference clazz MethodInvocation classProvider This MemberReference name MemberReference superClazz defineClassUnder = Literal null BlockStatement ReturnStatement MemberReference clazz ReturnStatement Literal null	1
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression MethodInvocation StatementExpression MethodInvocation method MemberReference StatementExpression MethodInvocation Literal MethodInvocation ClassReference ReferenceType RubyArray MethodInvocation ClassReference ReferenceType IRubyObject ClassReference ReferenceType Ruby ClassReference BasicType boolean params sig invokeUtilityMethod	0
MethodDeclaration Modifier public ReferenceType ISourcePosition getPosition ReturnStatement MemberReference position	0
MethodDeclaration Modifier public StatementExpression MethodInvocation	0
MethodDeclaration Modifier private BasicType boolean FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject value ReturnStatement BinaryOperation && BinaryOperation != MemberReference value Literal null BinaryOperation == MemberReference generation MethodInvocation context MethodInvocation getRuntime	0
MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block ReturnStatement MethodInvocation body MemberReference context MemberReference args MemberReference MemberReference type MemberReference block call	0
MethodDeclaration Modifier public ReferenceType ByteList IOException LocalVariableDeclaration BasicType int VariableDeclarator length MethodInvocation LocalVariableDeclaration BasicType byte VariableDeclarator buffer ArrayCreator BasicType byte MemberReference length LocalVariableDeclaration BasicType int VariableDeclarator Literal 0 WhileStatement BinaryOperation < MemberReference MemberReference length BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator read MethodInvocation inputStream MemberReference buffer MemberReference BinaryOperation - MemberReference length MemberReference read IfStatement BinaryOperation == MemberReference read Literal - 1 BlockStatement ThrowStatement MethodInvocation MethodInvocation Literal data too newArgumentError getRuntime StatementExpression Assignment MemberReference MemberReference read += ReturnStatement ClassCreator ReferenceType ByteList MemberReference buffer Literal false	0
MethodDeclaration Modifier public static ReferenceType String getType FormalParameter ReferenceType String s ReturnStatement Literal	0
MethodDeclaration Modifier public static Annotation Deprecated ReferenceType RubyArray splatValue FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType IRubyObject value IfStatement MethodInvocation value isNil BlockStatement ReturnStatement MethodInvocation runtime MemberReference value newArray ReturnStatement MethodInvocation MemberReference runtime MemberReference value	1
MethodDeclaration Modifier private IOException LocalVariableDeclaration Modifier final BasicType byte VariableDeclarator header ArrayInitializer MemberReference MemberReference MemberReference Literal 0 Cast BasicType byte MemberReference Cast BasicType byte BinaryOperation >> MemberReference Literal 8 Cast BasicType byte BinaryOperation >> MemberReference Literal 16 Cast BasicType byte BinaryOperation >> MemberReference Literal 24 Literal 0 MemberReference StatementExpression MethodInvocation out MemberReference header write	0
MethodDeclaration Modifier public compileRegexp FormalParameter ReferenceType Node node FormalParameter ReferenceType BodyCompiler context FormalParameter BasicType boolean expr LocalVariableDeclaration ReferenceType RegexpNode VariableDeclarator reNode Cast ReferenceType RegexpNode MemberReference node IfStatement MemberReference RubyInstanceConfig PEEPHOLE_OPTZ BlockStatement IfStatement MemberReference expr StatementExpression MethodInvocation context MethodInvocation reNode getValue MethodInvocation reNode BlockStatement StatementExpression MethodInvocation context MethodInvocation reNode getValue MethodInvocation reNode IfStatement MemberReference ! expr StatementExpression MethodInvocation context consumeCurrentValue	1
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop LocalVariableDeclaration ReferenceType Node VariableDeclarator node IfStatement BinaryOperation != Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 3 MemberReference yyTop yyVals Literal null BlockStatement StatementExpression Assignment MemberReference node MethodInvocation support MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 3 MemberReference yyTop yyVals ClassCreator ReferenceType GlobalVarNode MethodInvocation Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 5 MemberReference yyTop yyVals getPosition Literal "$!" node_assign Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals appendToBlock = IfStatement BinaryOperation != Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals Literal null BlockStatement StatementExpression MethodInvocation node MethodInvocation support MethodInvocation getPosition Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals BlockStatement StatementExpression Assignment MemberReference node Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals = LocalVariableDeclaration ReferenceType Node VariableDeclarator body TernaryExpression BinaryOperation == MemberReference node Literal null MemberReference NilImplicitNode NIL MemberReference node StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType RescueBodyNode MethodInvocation Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 5 MemberReference yyTop yyVals getPosition Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 4 MemberReference yyTop yyVals MemberReference body Cast ReferenceType RescueBodyNode MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier private static addUnassignedAlias FormalParameter ReferenceType String name FormalParameter ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType AssignedName assignedNames FormalParameter ReferenceType MethodInstaller installer IfStatement BinaryOperation == MemberReference name Literal null ReturnStatement LocalVariableDeclaration ReferenceType AssignedName VariableDeclarator assignedName MethodInvocation assignedNames MemberReference name get IfStatement MethodInvocation Priority.ALIAS MemberReference assignedName BlockStatement StatementExpression MethodInvocation installer MemberReference name StatementExpression MethodInvocation assignedNames MemberReference name ClassCreator ReferenceType AssignedName MemberReference name MemberReference Priority ALIAS put IfStatement MethodInvocation Priority.ALIAS MemberReference assignedName BlockStatement StatementExpression MethodInvocation installer MemberReference name	1
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType NodeVisitor iVisitor ReturnStatement MethodInvocation iVisitor This	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType Block block ReturnStatement MethodInvocation RuntimeHelpers MemberReference context MemberReference self Literal MemberReference arg0 MemberReference arg1 MemberReference block invoke	0
MethodDeclaration Modifier public static ReferenceType Pair pair FormalParameter ReferenceType N ReturnStatement ClassCreator ReferenceType Pair MemberReference	0
MethodDeclaration Modifier private ReferenceType IRubyObject fillCommon FormalParameter ReferenceType ThreadContext context FormalParameter BasicType int beg FormalParameter BasicType long len FormalParameter ReferenceType IRubyObject item StatementExpression MethodInvocation modify IfStatement BinaryOperation < MemberReference len Literal 0 ReturnStatement This IfStatement BinaryOperation > MemberReference len BinaryOperation - MemberReference Integer MAX_VALUE MemberReference beg ThrowStatement MethodInvocation context MethodInvocation Literal "argument too big" newArgumentError getRuntime LocalVariableDeclaration BasicType int VariableDeclarator end Cast BasicType int BinaryOperation + MemberReference beg MemberReference len IfStatement BinaryOperation > MemberReference end MemberReference realLength BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator valuesLength BinaryOperation - MemberReference values length MemberReference begin IfStatement BinaryOperation >= MemberReference end MemberReference valuesLength StatementExpression MethodInvocation MemberReference end MemberReference valuesLength realloc StatementExpression Assignment MemberReference realLength MemberReference end = IfStatement BinaryOperation > MemberReference len Literal 0 BlockStatement TryStatement StatementExpression MethodInvocation MemberReference values BinaryOperation + MemberReference begin MemberReference beg BinaryOperation + MemberReference begin MemberReference end MemberReference item fill CatchClause CatchClauseParameter ArrayIndexOutOfBoundsException e StatementExpression MethodInvocation concurrentModification ReturnStatement This	1
MethodDeclaration Modifier public static BasicType int nth FormalParameter ReferenceType Encoding enc FormalParameter BasicType byte bytes FormalParameter BasicType int p FormalParameter BasicType int end FormalParameter BasicType int n IfStatement MethodInvocation enc BlockStatement StatementExpression Assignment MemberReference p MemberReference n += IfStatement MethodInvocation enc BlockStatement StatementExpression Assignment MemberReference p BinaryOperation * MemberReference n MethodInvocation enc maxLength += IfStatement MethodInvocation enc isAsciiCompatible BlockStatement StatementExpression Assignment MemberReference p MethodInvocation MemberReference enc MemberReference bytes MemberReference p MemberReference end MemberReference n = BlockStatement StatementExpression Assignment MemberReference p MethodInvocation MemberReference enc MemberReference bytes MemberReference p MemberReference end MemberReference n = ReturnStatement TernaryExpression BinaryOperation > MemberReference p MemberReference end MemberReference end MemberReference p	0
MethodDeclaration Modifier public static ReferenceType RubyString FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType RubyClass clazz FormalParameter ReferenceType ByteList bytes LocalVariableDeclaration ReferenceType RubyString VariableDeclarator str ClassCreator ReferenceType RubyString MemberReference runtime MemberReference clazz MemberReference bytes StatementExpression Assignment MemberReference str MemberReference = ReturnStatement MemberReference str	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType Node childNodes ReturnStatement MethodInvocation MethodInvocation getValueNode createList	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair required Literal 1 ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject symbol ReturnStatement MethodInvocation Literal null MethodInvocation symbol asJavaString Literal false	1
MethodDeclaration Modifier static protected ReferenceType RubyModule FormalParameter ReferenceType Ruby ruby FormalParameter ReferenceType Class cls IfStatement MethodInvocation cls isInterface BlockStatement LocalVariableDeclaration ReferenceType RubyModule VariableDeclarator rubyMod MethodInvocation RubyModule MemberReference ruby newModule ReturnStatement MemberReference rubyMod BlockStatement LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator rubyCls MethodInvocation RubyClass MemberReference ruby Cast ReferenceType RubyClass MethodInvocation MemberReference ruby MethodInvocation cls getSuperclass newClass ReturnStatement MemberReference rubyCls	1
MethodDeclaration Modifier public label FormalParameter ReferenceType Label label StatementExpression MethodInvocation MethodInvocation MemberReference label getMethodVisitor	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "+" ReferenceType IRubyObject op_add FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject other IfStatement BinaryOperation || BinaryOperation instanceof MemberReference other ReferenceType RubyFixnum BinaryOperation instanceof MemberReference other ReferenceType RubyBignum BlockStatement ReturnStatement MethodInvocation MemberReference context MemberReference num MemberReference den MemberReference other MethodInvocation RubyFixnum MethodInvocation context getRuntime one Literal true f_addsub IfStatement BinaryOperation instanceof MemberReference other ReferenceType RubyFloat BlockStatement ReturnStatement MethodInvocation MemberReference context MethodInvocation MemberReference context This f_to_f MemberReference other f_add IfStatement BinaryOperation instanceof MemberReference other ReferenceType RubyRational BlockStatement LocalVariableDeclaration ReferenceType RubyRational VariableDeclarator otherRational Cast ReferenceType RubyRational MemberReference other ReturnStatement MethodInvocation MemberReference context MemberReference num MemberReference den MemberReference otherRational num MemberReference otherRational den Literal true f_addsub ReturnStatement MethodInvocation MemberReference context Literal "+" MemberReference other coerceBin	1
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal { MemberReference value Literal ", MemberReference position Literal "}"	0
MethodDeclaration Modifier public ReferenceType Object case222_line871 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals checkExpression StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType NewlineNode MethodInvocation Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals getPosition MethodInvocation support MethodInvocation Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals getPosition Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals newSplatNode = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair required Literal 2 ElementValuePair module Literal true ElementValuePair visibility MemberReference Visibility PRIVATE ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 ThrowStatement MethodInvocation recv MethodInvocation Literal not yet implemented" newNotImplementedError getRuntime	0
MethodDeclaration Modifier public static ReferenceType IRubyObject cmperr FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject other LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator target IfStatement BinaryOperation || MethodInvocation other BinaryOperation || BinaryOperation || MethodInvocation other isNil MethodInvocation other isTrue BinaryOperation == MemberReference other MethodInvocation recv MethodInvocation getFalse getRuntime BlockStatement StatementExpression Assignment MemberReference target MethodInvocation other inspect = BlockStatement StatementExpression Assignment MemberReference target MethodInvocation other getType = ThrowStatement MethodInvocation recv MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal of " MethodInvocation recv getType Literal " with " MemberReference target Literal " failed" newArgumentError getRuntime	0
MethodDeclaration Modifier public BasicType boolean isAbsolute ReturnStatement MemberReference absolute	0
MethodDeclaration Modifier public ReferenceType Object case344_line1301 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop LocalVariableDeclaration ReferenceType RestArgNode VariableDeclarator rest ClassCreator ReferenceType UnnamedRestArgNode Cast ReferenceType ListNode MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals MethodInvocation support MethodInvocation Literal "*" addVariable getCurrentScope StatementExpression Assignment MemberReference yyVal MethodInvocation support Cast ReferenceType ListNode MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals Cast ReferenceType ListNode MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals Literal null MemberReference rest Literal null Literal null new_args = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public ReferenceType Node getBodyNode ReturnStatement MemberReference bodyNode	0
MethodDeclaration Modifier private FormalParameter ReferenceType Ruby ruby FormalParameter BasicType int length StatementExpression MethodInvocation ruby MethodInvocation MemberReference ID BinaryOperation + BinaryOperation + Literal "multiple values for a block parameter (" MemberReference length Literal " for warn getWarnings	0
MethodDeclaration Modifier public BasicType boolean isDefined FormalParameter ReferenceType String name AssertStatement BinaryOperation != MemberReference name Literal null AssertStatement MethodInvocation name Literal "$" startsWith LocalVariableDeclaration ReferenceType GlobalVariable VariableDeclarator variable Cast ReferenceType GlobalVariable MethodInvocation globalVariables MemberReference name get ReturnStatement BinaryOperation && BinaryOperation != MemberReference variable Literal null BinaryOperation instanceof MethodInvocation variable ReferenceType	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair frame Literal true ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Block block ReturnStatement TernaryExpression MethodInvocation block isGiven MethodInvocation MemberReference context MemberReference block MethodInvocation MethodInvocation context getRuntime This Literal enumeratorize	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType Block block ReturnStatement MethodInvocation MemberReference context MemberReference self MemberReference clazz MemberReference name MemberReference arg0 call	0
MethodDeclaration Modifier public Annotation Override BasicType int available IOException IfStatement BinaryOperation != MemberReference in Literal null BlockStatement ReturnStatement MethodInvocation in available BlockStatement ReturnStatement Literal 0	0
MethodDeclaration Modifier public ReferenceType IRubyObject fetchClassVariable FormalParameter ReferenceType String name AssertStatement MethodInvocation IdUtil MemberReference name ReturnStatement MethodInvocation MethodInvocation MemberReference name get getClassVariablesForRead	1
MethodDeclaration Modifier public ReferenceType Operand buildSelf FormalParameter ReferenceType Node node FormalParameter ReferenceType IR_Scope s ReturnStatement MethodInvocation s getSelf	1
MethodDeclaration Modifier public update FormalParameter Modifier final BasicType byte b FormalParameter Modifier final BasicType int off FormalParameter Modifier final BasicType int len StatementExpression This MemberReference intern MethodInvocation MemberReference b MemberReference off MemberReference len update	0
MethodDeclaration Modifier public ReferenceType RubyModule getClassFromPath FormalParameter ReferenceType String path LocalVariableDeclaration ReferenceType RubyModule VariableDeclarator c MethodInvocation getObject IfStatement BinaryOperation || BinaryOperation == MethodInvocation path length Literal 0 BinaryOperation == MethodInvocation path Literal 0 charAt Literal '#' BlockStatement ThrowStatement MethodInvocation BinaryOperation + Literal "can't retrieve class " MemberReference path newTypeError LocalVariableDeclaration BasicType int VariableDeclarator pbeg Literal 0 VariableDeclarator p Literal 0 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator l MethodInvocation path length BinaryOperation < MemberReference p MemberReference l BlockStatement WhileStatement BinaryOperation && BinaryOperation < MemberReference p MemberReference l BinaryOperation != MethodInvocation path MemberReference p charAt Literal ':' BlockStatement StatementExpression MemberReference ++ p LocalVariableDeclaration ReferenceType String VariableDeclarator str MethodInvocation path MemberReference pbeg MemberReference p substring IfStatement BinaryOperation && BinaryOperation < MemberReference p MemberReference l BinaryOperation == MethodInvocation path MemberReference p charAt Literal ':' BlockStatement IfStatement BinaryOperation && BinaryOperation < BinaryOperation + MemberReference p Literal 1 MemberReference l BinaryOperation != MethodInvocation path BinaryOperation + MemberReference p Literal 1 charAt Literal ':' BlockStatement ThrowStatement MethodInvocation BinaryOperation + Literal "undefined class/module " MethodInvocation path MemberReference pbeg MemberReference p substring newTypeError StatementExpression Assignment MemberReference p Literal 2 += StatementExpression Assignment MemberReference pbeg MemberReference p = LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator MethodInvocation c MemberReference str IfStatement BinaryOperation instanceof MemberReference ReferenceType RubyModule BlockStatement ThrowStatement MethodInvocation BinaryOperation + BinaryOperation + Literal "" MemberReference path Literal " does not refer to class/module" newTypeError StatementExpression Assignment MemberReference c Cast ReferenceType RubyModule MemberReference = ReturnStatement MemberReference c	1
MethodDeclaration Modifier public FormalParameter ReferenceType l StatementExpression MethodInvocation pop	0
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter BasicType int level LocalVariableDeclaration BasicType int VariableDeclarator traceSize BinaryOperation + BinaryOperation - MemberReference MemberReference level Literal 1 LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator backtrace MethodInvocation runtime MemberReference traceSize newArray ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i BinaryOperation - MemberReference traceSize Literal 1 BinaryOperation > MemberReference i Literal 0 MemberReference -- i BlockStatement StatementExpression MethodInvocation MemberReference runtime MemberReference backtrace MemberReference ArraySelector MemberReference i MemberReference ArraySelector BinaryOperation - MemberReference i Literal 1 addBackTraceElement ReturnStatement MemberReference backtrace	0
MethodDeclaration Modifier public Annotation JRubyMethod ReferenceType IRubyObject iconv FormalParameter ReferenceType IRubyObject str FormalParameter ReferenceType IRubyObject startArg LocalVariableDeclaration BasicType int VariableDeclarator start Literal 0 IfStatement MethodInvocation ! startArg isNil StatementExpression Assignment MemberReference start MethodInvocation RubyNumeric MemberReference startArg fix2int = ReturnStatement MethodInvocation MemberReference str MemberReference start Literal - 1 iconv	1
MethodDeclaration Modifier final protected ensureConstantsSettable LocalVariableDeclaration BasicType boolean VariableDeclarator isSecure BinaryOperation && BinaryOperation >= MethodInvocation MethodInvocation getSafeLevel getRuntime Literal 4 MethodInvocation ! isTaint IfStatement MemberReference isSecure ThrowStatement MethodInvocation MethodInvocation MemberReference newSecurityError getRuntime IfStatement MethodInvocation isFrozen ThrowStatement MethodInvocation MethodInvocation MemberReference getRuntime	1
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 LocalVariableDeclaration ReferenceType Object VariableDeclarator array MethodInvocation MemberReference self LocalVariableDeclaration BasicType int VariableDeclarator x MethodInvocation RubyFixnum MethodInvocation arg0 convertToInteger fix2int LocalVariableDeclaration BasicType int VariableDeclarator y MethodInvocation RubyFixnum MethodInvocation arg1 convertToInteger fix2int LocalVariableDeclaration ReferenceType Object VariableDeclarator obj MethodInvocation MemberReference arg2 StatementExpression MethodInvocation Array MethodInvocation Array MemberReference array MemberReference x get MemberReference y MemberReference obj set ReturnStatement MemberReference arg2	0
MethodDeclaration Modifier public final put FormalParameter BasicType long offset FormalParameter BasicType long src FormalParameter BasicType int off FormalParameter BasicType int len StatementExpression MethodInvocation BinaryOperation + MemberReference address MemberReference offset MemberReference src MemberReference off MemberReference len	0
MethodDeclaration Modifier public ReferenceType Object case347_line1311 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support MethodInvocation Cast ReferenceType ListNode MemberReference ArraySelector BinaryOperation + Literal - 3 MemberReference yyTop yyVals getPosition Literal null Cast ReferenceType ListNode MemberReference ArraySelector BinaryOperation + Literal - 3 MemberReference yyTop yyVals Cast ReferenceType RestArgNode MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals Literal null Cast ReferenceType BlockArgNode MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals new_args = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule klazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 FormalParameter ReferenceType IRubyObject arg3 ReturnStatement MethodInvocation MemberReference context MemberReference self MemberReference klazz MemberReference name MemberReference arg0 MemberReference arg1 MemberReference arg2 MemberReference arg3 MemberReference Block NULL_BLOCK call	1
MethodDeclaration Modifier public ReferenceType FileChannel getInput ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Variable getNewVariable FormalParameter ReferenceType String prefix IfStatement BinaryOperation == MemberReference prefix Literal null StatementExpression Assignment MemberReference prefix Literal = IfStatement MethodInvocation ! prefix Literal "%" startsWith StatementExpression Assignment MemberReference prefix Literal "%" += LocalVariableDeclaration ReferenceType Integer VariableDeclarator idx MethodInvocation _nextVarIndex MemberReference prefix get IfStatement BinaryOperation == MemberReference idx Literal null StatementExpression Assignment MemberReference idx Literal 0 = StatementExpression MethodInvocation _nextVarIndex MemberReference prefix BinaryOperation + MemberReference idx Literal 1 put ReturnStatement ClassCreator ReferenceType Variable BinaryOperation + MemberReference prefix MemberReference idx	1
MethodDeclaration Modifier public ReferenceType IRubyObject getValue FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType RubyModule target LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator value MemberReference ReturnStatement TernaryExpression MethodInvocation MemberReference context MemberReference target MemberReference value MemberReference value MethodInvocation MemberReference context MemberReference target	0
MethodDeclaration Modifier public ReferenceType IRubyObject get FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType Object array FormalParameter BasicType int i ReturnStatement MethodInvocation MemberReference runtime Cast ReferenceType Object MemberReference array convert	0
MethodDeclaration Modifier public static ReferenceType FormalParameter ReferenceType String pattern LocalVariableDeclaration ReferenceType Matcher VariableDeclarator matcher MethodInvocation regexp MemberReference pattern matcher IfStatement BinaryOperation && MethodInvocation matcher matches BinaryOperation || BinaryOperation != MethodInvocation matcher Literal 1 group Literal null BinaryOperation != MethodInvocation matcher Literal 2 group Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator formatter MethodInvocation matcher Literal 1 group LocalVariableDeclaration BasicType int VariableDeclarator TernaryExpression BinaryOperation != MethodInvocation matcher Literal 2 group Literal null MethodInvocation Integer MethodInvocation matcher Literal 2 group valueOf Literal 0 ReturnStatement ClassCreator ReferenceType MemberReference formatter MemberReference ReturnStatement Literal null	0
MethodDeclaration Modifier public ReferenceType IRubyObject fetch FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block SwitchStatement MemberReference args length SwitchStatementCase Literal 1 ReturnStatement MethodInvocation MemberReference context MemberReference ArraySelector Literal 0 args MemberReference block fetch SwitchStatementCase Literal 2 ReturnStatement MethodInvocation MemberReference context MemberReference ArraySelector Literal 0 args MemberReference ArraySelector Literal 1 args MemberReference block fetch SwitchStatementCase StatementExpression MethodInvocation Arity MethodInvocation getRuntime MemberReference args length Literal 1 Literal 2 raiseArgumentError ReturnStatement Literal null	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal "to_s" Literal "inspect" Annotation Override ReferenceType IRubyObject to_s LocalVariableDeclaration ReferenceType VariableDeclarator IfStatement BinaryOperation == MethodInvocation dt getZone MemberReference DateTimeZone BlockStatement StatementExpression Assignment MemberReference MemberReference = BlockStatement StatementExpression Assignment MemberReference MemberReference = LocalVariableDeclaration ReferenceType String VariableDeclarator result MethodInvocation MemberReference dt print ReturnStatement MethodInvocation MethodInvocation MemberReference result newString getRuntime	0
MethodDeclaration Modifier public BasicType int getIndex ReturnStatement BinaryOperation & MemberReference location Literal	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal Literal ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context LocalVariableDeclaration ReferenceType VariableDeclarator sock MethodInvocation IfStatement BinaryOperation == Literal null MemberReference sock BlockStatement ThrowStatement MethodInvocation context MethodInvocation Literal "Not newIOError getRuntime ReturnStatement MethodInvocation context MethodInvocation MethodInvocation sock toString newString getRuntime	0
MethodDeclaration Modifier public ReferenceType Node aryset FormalParameter ReferenceType Node receiver FormalParameter ReferenceType Node index StatementExpression MethodInvocation MemberReference receiver checkExpression ReturnStatement MethodInvocation MethodInvocation receiver getPosition MemberReference receiver Literal "[]=" MemberReference index	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ReferenceType IRubyObject StatementExpression MethodInvocation ReturnStatement MethodInvocation MethodInvocation MemberReference closedWrite newBoolean getRuntime	1
MethodDeclaration Modifier public static ReferenceType RubyClass createBootstrapClass FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType String name FormalParameter ReferenceType RubyClass superClass FormalParameter ReferenceType ObjectAllocator allocator LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator obj IfStatement BinaryOperation == MemberReference superClass Literal null BlockStatement StatementExpression Assignment MemberReference obj ClassCreator ReferenceType RubyClass MemberReference runtime = StatementExpression Assignment MemberReference obj marshal MemberReference = BlockStatement StatementExpression Assignment MemberReference obj ClassCreator ReferenceType RubyClass MemberReference runtime MemberReference superClass = StatementExpression MethodInvocation obj MemberReference allocator setAllocator StatementExpression MethodInvocation obj MemberReference name ReturnStatement MemberReference obj	0
MethodDeclaration Modifier public astore FormalParameter BasicType int arg0 StatementExpression MethodInvocation MethodInvocation MemberReference MemberReference arg0 visitVarInsn getMethodVisitor	0
MethodDeclaration Modifier public ReferenceType Map TypeArgument ReferenceType Object TypeArgument ReferenceType IRubyObject ReturnStatement MemberReference contextVariables	0
MethodDeclaration Modifier public Annotation JRubyMethod ReferenceType IRubyObject ReturnStatement MethodInvocation Java MethodInvocation getRuntime MethodInvocation MethodInvocation javaClass getInstance	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair module Literal true ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv ReturnStatement MethodInvocation context MethodInvocation BinaryOperation == MemberReference OS MemberReference OS LINUX newBoolean getRuntime	1
MethodDeclaration Modifier private final ReferenceType IRubyObject multibyteSubstr19 FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType Encoding enc FormalParameter BasicType int len FormalParameter BasicType int beg FormalParameter BasicType int length LocalVariableDeclaration BasicType int VariableDeclarator p LocalVariableDeclaration BasicType int VariableDeclarator s MemberReference value begin LocalVariableDeclaration BasicType int VariableDeclarator end BinaryOperation + MemberReference s MemberReference length LocalVariableDeclaration BasicType byte VariableDeclarator bytes MemberReference value bytes IfStatement BinaryOperation < MemberReference beg Literal 0 BlockStatement IfStatement BinaryOperation > MemberReference len MemberReference - beg StatementExpression Assignment MemberReference len MemberReference - beg = IfStatement BinaryOperation < BinaryOperation * MemberReference - beg MethodInvocation enc maxLength BinaryOperation >>> MemberReference length Literal 3 BlockStatement StatementExpression Assignment MemberReference beg MemberReference - beg = LocalVariableDeclaration BasicType int VariableDeclarator e MemberReference end WhileStatement BinaryOperation && BinaryOperation > MemberReference -- beg MemberReference len BinaryOperation != Assignment MemberReference e MethodInvocation enc MemberReference bytes MemberReference s MemberReference e MemberReference e prevCharHead = Literal - 1 Statement StatementExpression Assignment MemberReference p MemberReference e = IfStatement BinaryOperation == MemberReference p Literal - 1 ReturnStatement MethodInvocation runtime getNil WhileStatement BinaryOperation && BinaryOperation > MemberReference -- len Literal 0 BinaryOperation != Assignment MemberReference p MethodInvocation enc MemberReference bytes MemberReference s MemberReference p MemberReference e prevCharHead = Literal - 1 Statement IfStatement BinaryOperation == MemberReference p Literal - 1 ReturnStatement MethodInvocation runtime getNil ReturnStatement MethodInvocation MemberReference runtime BinaryOperation - MemberReference p MemberReference s BinaryOperation - MemberReference e MemberReference p makeShared19 BlockStatement StatementExpression Assignment MemberReference beg MethodInvocation MemberReference enc strLength += IfStatement BinaryOperation < MemberReference beg Literal 0 ReturnStatement MethodInvocation runtime getNil IfStatement BinaryOperation && BinaryOperation > MemberReference beg Literal 0 BinaryOperation > MemberReference beg MethodInvocation MemberReference enc strLength BlockStatement ReturnStatement MethodInvocation runtime getNil IfStatement BinaryOperation == MemberReference len Literal 0 BlockStatement StatementExpression Assignment MemberReference p Literal 0 = IfStatement BinaryOperation && MethodInvocation BinaryOperation instanceof MemberReference enc ReferenceType BlockStatement StatementExpression Assignment MemberReference p MethodInvocation StringSupport MemberReference bytes MemberReference s MemberReference end MemberReference beg = StatementExpression Assignment MemberReference len MethodInvocation StringSupport MemberReference bytes MemberReference p MemberReference end MemberReference len = IfStatement MethodInvocation enc BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator w MethodInvocation enc maxLength StatementExpression Assignment MemberReference p BinaryOperation + MemberReference s BinaryOperation * MemberReference beg MemberReference w = IfStatement BinaryOperation > MemberReference p MemberReference end BlockStatement StatementExpression Assignment MemberReference p MemberReference end = StatementExpression Assignment MemberReference len Literal 0 = IfStatement BinaryOperation > BinaryOperation * MemberReference len MemberReference w BinaryOperation - MemberReference end MemberReference p BlockStatement StatementExpression Assignment MemberReference len BinaryOperation - MemberReference end MemberReference p = BlockStatement StatementExpression Assignment MemberReference len MemberReference w *= IfStatement BinaryOperation == Assignment MemberReference p MethodInvocation StringSupport MemberReference enc MemberReference bytes MemberReference s MemberReference end MemberReference beg nth = MemberReference end BlockStatement StatementExpression Assignment MemberReference len Literal 0 = BlockStatement StatementExpression Assignment MemberReference len MethodInvocation StringSupport MemberReference enc MemberReference bytes MemberReference p MemberReference end MemberReference len offset = ReturnStatement MethodInvocation MemberReference runtime BinaryOperation - MemberReference p MemberReference s MemberReference len makeShared19	1
MethodDeclaration Modifier public final ReferenceType RubyString FormalParameter ReferenceType Ruby runtime ReturnStatement MethodInvocation runtimeCache MemberReference runtime Literal 5 getString	0
MethodDeclaration Modifier public FormalParameter ReferenceType method FormalParameter ReferenceType String StatementExpression MethodInvocation method loadThis StatementExpression MethodInvocation method.method swap StatementExpression MethodInvocation method loadThreadContext StatementExpression MethodInvocation method.method MemberReference ldc IfStatement BinaryOperation < MemberReference MemberReference AbstractScript BlockStatement StatementExpression MethodInvocation method.method MethodInvocation scriptCompiler getClassname BinaryOperation + Literal MemberReference MethodInvocation ClassReference ReferenceType IRubyObject ClassReference ReferenceType RubyModule ClassReference ReferenceType ThreadContext ClassReference ReferenceType String sig invokevirtual BlockStatement StatementExpression MethodInvocation method.method MemberReference pushInt StatementExpression MethodInvocation method.method MethodInvocation scriptCompiler getClassname Literal MethodInvocation ClassReference ReferenceType IRubyObject ClassReference ReferenceType RubyModule ClassReference ReferenceType ThreadContext ClassReference ReferenceType String ClassReference BasicType int sig invokevirtual StatementExpression MemberReference ++	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "<" ElementValuePair required Literal 1 ReferenceType RubyBoolean op_lt FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject other LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator result MethodInvocation recv MemberReference context Literal "<=>" MemberReference other callMethod IfStatement MethodInvocation result isNil StatementExpression MethodInvocation MemberReference recv MemberReference other cmperr ReturnStatement MethodInvocation RubyBoolean MethodInvocation context getRuntime BinaryOperation < MethodInvocation MemberReference context MemberReference result MemberReference recv MemberReference other cmpint Literal 0 newBoolean	1
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType IterNode MethodInvocation Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 4 MemberReference yyTop yyVals getPosition Cast ReferenceType ArgsNode MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals MethodInvocation support getCurrentScope = StatementExpression MethodInvocation support popCurrentScope ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public Annotation Deprecated ReferenceType Callback getFastSingletonMethod FormalParameter ReferenceType String method FormalParameter ReferenceType Class arg1 FormalParameter ReferenceType Class arg2 FormalParameter ReferenceType Class arg3 LocalVariableDeclaration ReferenceType String VariableDeclarator mname BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation type getName Literal "Callback$" MemberReference method Literal LocalVariableDeclaration ReferenceType String VariableDeclarator mnamePath BinaryOperation + BinaryOperation + BinaryOperation + MemberReference typePath Literal "Callback$" MemberReference method Literal SynchronizedStatement MethodInvocation runtime getJRubyClassLoader LocalVariableDeclaration ReferenceType Class VariableDeclarator c MethodInvocation MemberReference mname tryClass TryStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator descriptor ArrayCreator ReferenceType Class ArrayInitializer MemberReference arg1 MemberReference arg2 MemberReference arg3 IfStatement BinaryOperation == MemberReference c Literal null BlockStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator signature ArrayCreator ReferenceType Class ArrayInitializer MemberReference RubyKernel IRUBY_OBJECT MemberReference arg1 MemberReference arg2 MemberReference arg3 LocalVariableDeclaration ReferenceType Class VariableDeclarator ret MethodInvocation MemberReference method MemberReference signature getReturnClass LocalVariableDeclaration ReferenceType ClassWriter VariableDeclarator cw MethodInvocation MemberReference mnamePath createCtorFast LocalVariableDeclaration ReferenceType MethodVisitor VariableDeclarator mv MethodInvocation MemberReference cw startCallSFast StatementExpression MethodInvocation MemberReference mv MemberReference METHOD_ARGS_INDEX Literal 3 MemberReference descriptor loadArguments StatementExpression MethodInvocation mv MemberReference INVOKESTATIC MemberReference typePath MemberReference method MethodInvocation MemberReference ret MemberReference signature sig visitMethodInsn StatementExpression MethodInvocation mv MemberReference ARETURN visitInsn StatementExpression MethodInvocation mv Literal 5 Literal 3 visitMaxs StatementExpression Assignment MemberReference c MethodInvocation MemberReference cw MemberReference mv MemberReference mname endCall = LocalVariableDeclaration ReferenceType FastInvocationCallback VariableDeclarator ic Cast ReferenceType FastInvocationCallback MethodInvocation c newInstance StatementExpression MethodInvocation ic MethodInvocation Arity Literal 3 fixed setArity StatementExpression MethodInvocation ic MemberReference descriptor setArgumentTypes StatementExpression MethodInvocation ic MemberReference method setJavaName StatementExpression MethodInvocation ic Literal true setSingleton ReturnStatement MemberReference ic CatchClause CatchClauseParameter IllegalArgumentException e ThrowStatement MemberReference e CatchClause CatchClauseParameter Exception e ThrowStatement ClassCreator ReferenceType IllegalArgumentException MethodInvocation e getMessage	1
MethodDeclaration Modifier public IfStatement MemberReference managementEnabled StatementExpression MethodInvocation BinaryOperation + MemberReference base Literal "service=JITCompiler" unregister	1
MethodDeclaration Modifier public ReferenceType Object invoke FormalParameter ReferenceType Object proxy FormalParameter ReferenceType JavaProxyMethod m FormalParameter ReferenceType Object nargs Throwable LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation m getName LocalVariableDeclaration ReferenceType DynamicMethod VariableDeclarator method MethodInvocation self MethodInvocation MemberReference name searchMethod getMetaClass LocalVariableDeclaration BasicType int VariableDeclarator v MethodInvocation method MethodInvocation getValue LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator newArgs ArrayCreator ReferenceType IRubyObject MemberReference nargs length ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MemberReference nargs length BinaryOperation >= MemberReference -- i Literal 0 BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i newArgs MethodInvocation JavaUtil MemberReference runtime MemberReference ArraySelector MemberReference i nargs convertJavaToUsableRubyObject = IfStatement BinaryOperation || BinaryOperation < MemberReference v Literal 0 BinaryOperation == MemberReference v MemberReference newArgs length BlockStatement ReturnStatement MethodInvocation RuntimeHelpers MethodInvocation MethodInvocation m getReturnType toJava MethodInvocation runtime getCurrentContext MemberReference self MemberReference name MemberReference newArgs invoke BlockStatement LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator superClass MethodInvocation self MethodInvocation getSuperClass getMetaClass ReturnStatement MethodInvocation RuntimeHelpers MethodInvocation MethodInvocation m getReturnType toJava MethodInvocation runtime getCurrentContext MemberReference superClass MemberReference self MemberReference name MemberReference newArgs MemberReference Block NULL_BLOCK	1
MethodDeclaration Modifier public ReferenceType Type ReturnStatement MethodInvocation method	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal ReferenceType IRubyObject LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator digest MethodInvocation StatementExpression MethodInvocation reset ReturnStatement MemberReference digest	1
MethodDeclaration Modifier public StatementExpression MethodInvocation MethodInvocation MemberReference visitInsn getMethodVisitor	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType NodeVisitor iVisitor ReturnStatement MethodInvocation iVisitor This	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject args ReturnStatement MethodInvocation RuntimeHelpers MemberReference context MemberReference self Literal MemberReference args invoke	0
MethodDeclaration unpack LocalVariableDeclaration ReferenceType VariableTableEntry VariableDeclarator table ArrayCreator ReferenceType VariableTableEntry MemberReference StatementExpression MethodInvocation MemberReference table MemberReference name1 MemberReference StatementExpression MethodInvocation MemberReference table MemberReference name2 MemberReference StatementExpression MethodInvocation MemberReference table MemberReference name3 MemberReference StatementExpression MethodInvocation MemberReference table MemberReference name4 MemberReference value4 StatementExpression MethodInvocation MemberReference table MemberReference name5 MemberReference value5 StatementExpression Assignment MemberReference packedVFields Literal null = StatementExpression Assignment MemberReference vTableThreshold Cast BasicType int BinaryOperation * MemberReference MemberReference = StatementExpression Assignment MemberReference vTable MemberReference table =	0
MethodDeclaration Modifier public call FormalParameter ReferenceType BodyCompiler context IfStatement BinaryOperation != MethodInvocation getVarNode Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation getVarNode MemberReference context Literal false	0
MethodDeclaration Modifier public static registerRubyMethods FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType RubyClass result StatementExpression MethodInvocation result ClassReference ReferenceType JavaAccessibleObject defineAnnotatedMethods	1
MethodDeclaration Modifier public static ReferenceType IRubyObject fallback FormalParameter ReferenceType site FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject caller FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg0 LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator selfClass MethodInvocation MemberReference context MemberReference self pollAndGetClass LocalVariableDeclaration ReferenceType CacheEntry VariableDeclarator entry MethodInvocation selfClass MemberReference name IfStatement MethodInvocation MemberReference entry MethodInvocation site callType MemberReference name MemberReference caller BlockStatement ReturnStatement MethodInvocation MemberReference entry MethodInvocation site callType MemberReference context MemberReference self MemberReference name MemberReference arg0 StatementExpression MethodInvocation site MethodInvocation MemberReference MemberReference MemberReference MemberReference entry MemberReference site ReturnStatement MethodInvocation MemberReference context MemberReference self MemberReference selfClass MemberReference name MemberReference arg0 call	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType NodeVisitor iVisitor ReturnStatement MethodInvocation iVisitor This	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator proxy MethodInvocation MemberReference context MemberReference self MemberReference clazz Literal call IfStatement BinaryOperation instanceof MethodInvocation proxy dataGetStruct ReferenceType JavaObject BlockStatement StatementExpression MethodInvocation RuntimeHelpers MemberReference context MemberReference proxy Literal invoke ReturnStatement MemberReference proxy	0
MethodDeclaration Modifier public visit FormalParameter ReferenceType IRubyObject key FormalParameter ReferenceType IRubyObject value StatementExpression MethodInvocation block MemberReference context MemberReference key MemberReference value	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator expression TernaryExpression BinaryOperation == MemberReference caseNode Literal null Literal null MethodInvocation caseNode MemberReference runtime MemberReference context MemberReference self MemberReference StatementExpression MethodInvocation context pollThreadEvents ForStatement EnhancedForControl VariableDeclaration ReferenceType Node VariableDeclarator child MethodInvocation cases childNodes BlockStatement LocalVariableDeclaration ReferenceType WhenNode VariableDeclarator when Cast ReferenceType WhenNode MemberReference child LocalVariableDeclaration ReferenceType ISourcePosition VariableDeclarator position MethodInvocation child getPosition StatementExpression MethodInvocation context MethodInvocation position getFile StatementExpression MethodInvocation context MethodInvocation position getStartLine setLine IfStatement MethodInvocation runtime hasEventHooks StatementExpression MethodInvocation ASTInterpreter MemberReference runtime MemberReference context MemberReference RubyEvent callTraceFunction LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator result MethodInvocation when MemberReference expression MemberReference context MemberReference runtime MemberReference self MemberReference when IfStatement BinaryOperation != MemberReference result Literal null ReturnStatement MemberReference result StatementExpression MethodInvocation context pollThreadEvents ReturnStatement TernaryExpression BinaryOperation != MemberReference Literal null MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference MethodInvocation runtime getNil	1
MethodDeclaration Modifier public ReferenceType NodeType getNodeType ReturnStatement MemberReference NodeType ORNODE	0
MethodDeclaration Modifier final protected static FormalParameter ReferenceType ThreadContext context StatementExpression MethodInvocation context	1
MethodDeclaration Modifier protected addPath FormalParameter ReferenceType String path IfStatement BinaryOperation || BinaryOperation == MemberReference path Literal null BinaryOperation == MethodInvocation path length Literal 0 ReturnStatement SynchronizedStatement MemberReference StatementExpression MethodInvocation MethodInvocation runtime MethodInvocation path Literal '\\' Literal '/' replace newString append	1
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement MemberReference	0
MethodDeclaration Modifier private ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime IOException LocalVariableDeclaration ReferenceType Channel VariableDeclarator socketChannel MethodInvocation openFile MethodInvocation getDescriptor MethodInvocation getChannel getMainStream ReturnStatement MethodInvocation MemberReference runtime TernaryExpression BinaryOperation instanceof MemberReference socketChannel ReferenceType SocketChannel MethodInvocation MethodInvocation asSocket Literal false	1
MethodDeclaration Modifier public BasicType int hashCode ReturnStatement MethodInvocation hashCode	0
MethodDeclaration Modifier private figureOutBase IfStatement BinaryOperation <= MemberReference base Literal 0 BlockStatement IfStatement BinaryOperation && BinaryOperation < MemberReference str MemberReference end BinaryOperation == MemberReference ArraySelector MemberReference str data Literal '0' BlockStatement IfStatement BinaryOperation < BinaryOperation + MemberReference str Literal 1 MemberReference end BlockStatement SwitchStatement MemberReference ArraySelector BinaryOperation + MemberReference str Literal 1 data SwitchStatementCase Literal 'x' Literal 'X' StatementExpression Assignment MemberReference base Literal 16 = BreakStatement SwitchStatementCase Literal 'b' Literal 'B' StatementExpression Assignment MemberReference base Literal 2 = BreakStatement SwitchStatementCase Literal 'o' Literal 'O' StatementExpression Assignment MemberReference base Literal 8 = BreakStatement SwitchStatementCase Literal 'd' Literal 'D' StatementExpression Assignment MemberReference base Literal 10 = BreakStatement SwitchStatementCase StatementExpression Assignment MemberReference base Literal 8 = BlockStatement StatementExpression Assignment MemberReference base Literal 8 = IfStatement BinaryOperation < MemberReference base Literal - 1 BlockStatement StatementExpression Assignment MemberReference base MemberReference - base = BlockStatement StatementExpression Assignment MemberReference base Literal 10 =	1
MethodDeclaration Modifier public FormalParameter ReferenceType String name FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType staticScope StatementExpression MethodInvocation MemberReference clazz MemberReference staticScope StatementExpression MethodInvocation MemberReference name	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType RubyNumeric numeric FormalParameter ReferenceType Class target ReturnStatement MethodInvocation numeric	0
MethodDeclaration Modifier public ReferenceType Node getValueNode ReturnStatement MemberReference	0
MethodDeclaration Modifier public static BasicType double FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType String number LocalVariableDeclaration ReferenceType ByteList VariableDeclarator s ClassCreator ReferenceType ByteList MethodInvocation ByteList MemberReference number plain Literal false ReturnStatement ClassCreator MethodInvocation Literal 0 Literal null ReferenceType Convert2 MemberReference runtime MemberReference s Literal - 1 Literal false	0
MethodDeclaration Modifier public final ReferenceType IRubyObject invoke FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType Function function FormalParameter ReferenceType HeapInvocationBuffer args ReturnStatement MethodInvocation runtime MethodInvocation invoker MemberReference function MemberReference args newFloat	1
MethodDeclaration Modifier public ReferenceType IRubyObject get FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType Object array FormalParameter BasicType int i ReturnStatement MethodInvocation MemberReference runtime Cast ReferenceType Long MemberReference array convert	0
MethodDeclaration Modifier public FormalParameter ReferenceType RubyModule type FormalParameter ReferenceType staticScope StatementExpression MethodInvocation MemberReference type StatementExpression MethodInvocation StatementExpression MethodInvocation MethodInvocation MemberReference type StatementExpression MethodInvocation MethodInvocation MemberReference Visibility PUBLIC setVisibility StatementExpression MethodInvocation staticScope MemberReference type StatementExpression MethodInvocation MethodInvocation staticScope	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context ReturnStatement MethodInvocation context MethodInvocation MemberReference newBoolean getRuntime	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "to_io" ReferenceType RubyIO to_io ReturnStatement This	1
MethodDeclaration Modifier private FormalParameter BasicType boolean fast LocalVariableDeclaration ReferenceType Class VariableDeclarator args IfStatement MemberReference isStaticMethod BlockStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator types ArrayCreator ReferenceType Class BinaryOperation + MemberReference argumentTypes length Literal 1 StatementExpression MethodInvocation System MemberReference argumentTypes Literal 0 MemberReference types Literal 1 MemberReference argumentTypes length arraycopy StatementExpression Assignment MemberReference ArraySelector Literal 0 types ClassReference ReferenceType IRubyObject = StatementExpression Assignment MemberReference args MemberReference types = BlockStatement StatementExpression Assignment MemberReference args MemberReference argumentTypes = IfStatement MemberReference ! fast BlockStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator types ArrayCreator ReferenceType Class BinaryOperation + MemberReference args length Literal 1 StatementExpression MethodInvocation System MemberReference args Literal 0 MemberReference types Literal 0 MemberReference args length arraycopy StatementExpression Assignment MemberReference ArraySelector MemberReference args length types ClassReference ReferenceType Block = StatementExpression Assignment MemberReference args MemberReference types = TryStatement StatementExpression Assignment MemberReference method MethodInvocation type MemberReference methodName MemberReference args getMethod = CatchClause CatchClauseParameter NoSuchMethodException e ThrowStatement ClassCreator ReferenceType RuntimeException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal Cannot get method \"" MemberReference methodName Literal "\" in class \"" MethodInvocation type getName Literal "\" by CatchClause CatchClauseParameter SecurityException e ThrowStatement ClassCreator ReferenceType RuntimeException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal Cannot get method \"" MemberReference methodName Literal "\" in class \"" MethodInvocation type getName Literal "\" by	1
MethodDeclaration Modifier private replace FormalParameter BasicType byte classBytes FormalParameter ReferenceType String find FormalParameter ReferenceType String replaceWith LocalVariableDeclaration BasicType byte VariableDeclarator findBytes MethodInvocation find getBytes LocalVariableDeclaration BasicType byte VariableDeclarator replaceBytes MethodInvocation replaceWith getBytes ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference classBytes length MemberReference ++ i BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator match Literal true ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j Literal 0 BinaryOperation < MemberReference j MemberReference findBytes length MemberReference ++ j BlockStatement IfStatement BinaryOperation != MemberReference ArraySelector BinaryOperation + MemberReference i MemberReference j classBytes MemberReference ArraySelector MemberReference j findBytes BlockStatement StatementExpression Assignment MemberReference match Literal false = BreakStatement IfStatement MemberReference match BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j Literal 0 BinaryOperation < MemberReference j MemberReference findBytes length MemberReference ++ j StatementExpression Assignment MemberReference ArraySelector BinaryOperation + MemberReference i MemberReference j classBytes MemberReference ArraySelector MemberReference j replaceBytes = ReturnStatement	1
MethodDeclaration Modifier public ReferenceType Arity ReturnStatement MethodInvocation Arity optional	0
MethodDeclaration Modifier public static Annotation Deprecated ReferenceType IRubyObject open FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block ReturnStatement MethodInvocation MethodInvocation recv MethodInvocation getCurrentContext getRuntime MemberReference recv MemberReference args MemberReference block open	1
MethodDeclaration Modifier public ReferenceType RubyProc FormalParameter ReferenceType Block ReferenceType Type type FormalParameter ReferenceType Block block IfStatement BinaryOperation && BinaryOperation != MemberReference type MemberReference Block.Type BinaryOperation != MethodInvocation block Literal null ReturnStatement MethodInvocation block LocalVariableDeclaration ReferenceType RubyProc VariableDeclarator proc MethodInvocation RubyProc This MemberReference type newProc StatementExpression MethodInvocation proc MethodInvocation getCurrentContext MemberReference block ReturnStatement MemberReference proc	1
MethodDeclaration Modifier public synchronized ReferenceType Object call LocalVariableDeclaration BasicType boolean VariableDeclarator interrupted Literal false TryStatement WhileStatement BinaryOperation == MemberReference reaction Literal null BlockStatement TryStatement StatementExpression MethodInvocation wait CatchClause CatchClauseParameter InterruptedException e StatementExpression Assignment MemberReference interrupted Literal true = IfStatement MemberReference interrupted BlockStatement StatementExpression MethodInvocation Thread MethodInvocation currentThread ReturnStatement MethodInvocation reaction MemberReference join MemberReference args	0
MethodDeclaration Modifier public FormalParameter BasicType int StatementExpression MethodInvocation MethodInvocation MemberReference getRuntime	0
MethodDeclaration Modifier private BasicType int FormalParameter Modifier final ReferenceType LexerSource src java.io.IOException LocalVariableDeclaration BasicType char VariableDeclarator kcode Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator options Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator c LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator ClassCreator ReferenceType StringBuilder Literal 10 ForStatement ForControl Assignment MemberReference c MethodInvocation src read = BinaryOperation && BinaryOperation != MemberReference c MemberReference RubyYaccLexer EOF MethodInvocation Character MemberReference c isLetter Assignment MemberReference c MethodInvocation src read = BlockStatement SwitchStatement MemberReference c SwitchStatementCase Literal 'i' StatementExpression Assignment MemberReference options MemberReference ReOptions RE_OPTION_IGNORECASE |= BreakStatement SwitchStatementCase Literal 'x' StatementExpression Assignment MemberReference options MemberReference ReOptions RE_OPTION_EXTENDED |= BreakStatement SwitchStatementCase Literal 'm' StatementExpression Assignment MemberReference options MemberReference ReOptions RE_OPTION_MULTILINE |= BreakStatement SwitchStatementCase Literal 'o' StatementExpression Assignment MemberReference options MemberReference ReOptions RE_OPTION_ONCE |= BreakStatement SwitchStatementCase Literal 'n' StatementExpression Assignment MemberReference kcode Literal 16 = BreakStatement SwitchStatementCase Literal 'e' StatementExpression Assignment MemberReference kcode Literal 32 = BreakStatement SwitchStatementCase Literal 's' StatementExpression Assignment MemberReference kcode Literal 48 = BreakStatement SwitchStatementCase Literal 'u' StatementExpression Assignment MemberReference kcode Literal 64 = BreakStatement SwitchStatementCase Literal 'j' StatementExpression Assignment MemberReference options Literal 256 |= BreakStatement SwitchStatementCase StatementExpression MethodInvocation Cast BasicType char MemberReference c append BreakStatement StatementExpression MethodInvocation src MemberReference c unread IfStatement BinaryOperation != MethodInvocation length Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType SyntaxException MemberReference PID MethodInvocation src getPosition BinaryOperation + BinaryOperation + BinaryOperation + Literal "unknown regexp TernaryExpression BinaryOperation > MethodInvocation length Literal 1 Literal "s" Literal "" Literal " - " MethodInvocation toString MethodInvocation toString ReturnStatement BinaryOperation | MemberReference options MemberReference kcode	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg0 LocalVariableDeclaration ReferenceType Object VariableDeclarator result Cast ReferenceType Object MethodInvocation handle TernaryExpression MemberReference isStatic Literal null Cast ReferenceType JavaObjectWrapper MemberReference self MethodInvocation MemberReference arg0 invoke ReturnStatement MethodInvocation MemberReference ruby MemberReference result javaToRuby	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair module Literal true ElementValuePair backtrace Literal true ElementValuePair visibility MemberReference Visibility PRIVATE ReferenceType IRubyObject get_proxy_or_package_under_package FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 ReturnStatement MethodInvocation Java MemberReference context MemberReference recv MemberReference arg0 MemberReference arg1 get_proxy_or_package_under_package	1
MethodDeclaration Modifier public ReferenceType RaiseException newErrnoEPIPEError ReturnStatement MethodInvocation MethodInvocation MethodInvocation Literal fastGetClass getErrno Literal newRaiseException	0
MethodDeclaration Modifier public FormalParameter ReferenceType Process process StatementExpression Assignment This MemberReference process MemberReference process =	0
MethodDeclaration Modifier private static BasicType int FormalParameter Modifier final BasicType int h FormalParameter Modifier final BasicType int length ReturnStatement BinaryOperation & MemberReference h BinaryOperation - MemberReference length Literal 1	1
MethodDeclaration Modifier public synchronized ReferenceType ByteList FormalParameter ReferenceType ByteList separatorString IOException BadDescriptorException StatementExpression MethodInvocation checkReadable StatementExpression MethodInvocation ensureRead IfStatement BinaryOperation == MemberReference separatorString Literal null BlockStatement ReturnStatement MethodInvocation readall LocalVariableDeclaration Modifier final ReferenceType ByteList VariableDeclarator separator TernaryExpression BinaryOperation == MemberReference separatorString MemberReference PARAGRAPH_DELIMETER MemberReference PARAGRAPH_SEPARATOR MemberReference separatorString StatementExpression MethodInvocation descriptor IfStatement MethodInvocation feof BlockStatement ReturnStatement Literal null LocalVariableDeclaration BasicType int VariableDeclarator c MethodInvocation read IfStatement BinaryOperation == MemberReference c Literal - 1 BlockStatement ReturnStatement Literal null StatementExpression MethodInvocation buffer BinaryOperation - MethodInvocation buffer position Literal 1 position LocalVariableDeclaration ReferenceType ByteList VariableDeclarator buf ClassCreator ReferenceType ByteList Literal 40 LocalVariableDeclaration BasicType byte VariableDeclarator first MemberReference separator ArraySelector MemberReference separator begin bytes WhileStatement LineLoop Literal true BlockStatement WhileStatement ReadLoop Literal true BlockStatement LocalVariableDeclaration BasicType byte VariableDeclarator bytes MethodInvocation buffer array LocalVariableDeclaration BasicType int VariableDeclarator offset MethodInvocation buffer position LocalVariableDeclaration BasicType int VariableDeclarator max MethodInvocation buffer limit ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MemberReference offset BinaryOperation < MemberReference i MemberReference max MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference c MemberReference ArraySelector MemberReference i bytes = IfStatement BinaryOperation == MemberReference c MemberReference first BlockStatement StatementExpression MethodInvocation buf MemberReference bytes MemberReference offset BinaryOperation - MemberReference i MemberReference offset append IfStatement BinaryOperation >= MemberReference i MemberReference max BlockStatement StatementExpression MethodInvocation buffer clear BlockStatement StatementExpression MethodInvocation buffer BinaryOperation + MemberReference i Literal 1 position BreakStatement ReadLoop StatementExpression MethodInvocation buf MemberReference bytes MemberReference offset MethodInvocation buffer remaining append LocalVariableDeclaration BasicType int VariableDeclarator read MethodInvocation refillBuffer IfStatement BinaryOperation == MemberReference read Literal - 1 BreakStatement LineLoop ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference separator realSize MemberReference ++ i BlockStatement IfStatement BinaryOperation == MemberReference c Literal - 1 BlockStatement BreakStatement LineLoop IfStatement BinaryOperation != MemberReference c MemberReference separator ArraySelector BinaryOperation + MemberReference separator begin MemberReference i bytes BlockStatement StatementExpression MethodInvocation buf MemberReference c append ContinueStatement LineLoop StatementExpression MethodInvocation buf MemberReference c append IfStatement BinaryOperation < MemberReference i BinaryOperation - MemberReference separator realSize Literal 1 BlockStatement StatementExpression Assignment MemberReference c MethodInvocation read = BreakStatement IfStatement BinaryOperation == MemberReference separatorString MemberReference PARAGRAPH_DELIMETER BlockStatement WhileStatement BinaryOperation == MemberReference c MemberReference separator ArraySelector MemberReference separator begin bytes BlockStatement StatementExpression Assignment MemberReference c MethodInvocation read = StatementExpression MethodInvocation MemberReference c ReturnStatement MemberReference buf	1
MethodDeclaration Modifier public BasicType int StatementExpression MethodInvocation cleanup ReturnStatement MethodInvocation cache size	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair module Literal true ElementValuePair visibility MemberReference Visibility PRIVATE ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject achar Exception LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation recv getRuntime IfStatement MethodInvocation ! achar Literal "to_str" respondsTo BlockStatement ThrowStatement MethodInvocation runtime BinaryOperation + BinaryOperation + Literal "can't convert " MethodInvocation achar getMetaClass Literal " into String" newTypeError StatementExpression MethodInvocation ProcCompletor MethodInvocation achar MethodInvocation toString convertToString ReturnStatement MemberReference achar	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "class" ReferenceType RubyClass type ReturnStatement MethodInvocation MethodInvocation getRealClass getMetaClass	0
MethodDeclaration Modifier public BasicType int ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Operand ReturnStatement ArrayCreator ReferenceType Operand ArrayInitializer	0
MethodDeclaration Modifier public Annotation Deprecated ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject log ReturnStatement MethodInvocation MethodInvocation MethodInvocation getCurrentContext getRuntime MemberReference log	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal Literal Literal ReferenceType IRubyObject length ReturnStatement MethodInvocation RubyFixnum MethodInvocation getRuntime MethodInvocation newFixnum	0
MethodDeclaration Modifier protected Annotation Override setUp Exception StatementExpression SuperMethodInvocation setUp StatementExpression Assignment MemberReference runtime MethodInvocation Ruby newInstance =	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair required Literal 1 ElementValuePair module Literal true ElementValuePair visibility MemberReference Visibility PRIVATE ReferenceType RubyFloat FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject x LocalVariableDeclaration BasicType double VariableDeclarator value Cast ReferenceType RubyFloat MethodInvocation RubyKernel MemberReference recv MemberReference x ReturnStatement MethodInvocation RubyFloat MethodInvocation recv getRuntime BinaryOperation / BinaryOperation - MethodInvocation Math MemberReference value exp MethodInvocation Math MemberReference - value exp Literal 2.0 newFloat	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "first" ReferenceType IRubyObject first FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter Modifier final ReferenceType IRubyObject num LocalVariableDeclaration Modifier final ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration Modifier final ReferenceType RubyArray VariableDeclarator result MethodInvocation runtime newArray LocalVariableDeclaration Modifier final ReferenceType ThreadContext VariableDeclarator localContext MemberReference context LocalVariableDeclaration Modifier final BasicType int VariableDeclarator firstCount MethodInvocation RubyNumeric MemberReference num fix2int IfStatement BinaryOperation < MemberReference firstCount Literal 0 BlockStatement ThrowStatement MethodInvocation runtime Literal "negative index" newArgumentError IfStatement BinaryOperation == MemberReference firstCount Literal 0 BlockStatement ReturnStatement MemberReference result TryStatement StatementExpression MethodInvocation MemberReference runtime MemberReference context MemberReference self ClassCreator ReferenceType BlockCallback FieldDeclaration Modifier private BasicType int VariableDeclarator iter MethodInvocation RubyNumeric MemberReference num fix2int MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext ctx FormalParameter ReferenceType IRubyObject largs FormalParameter ReferenceType Block blk LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator larg MethodInvocation MemberReference runtime MemberReference largs checkArgs StatementExpression MethodInvocation MemberReference localContext MemberReference ctx Literal "first" checkContext StatementExpression MethodInvocation result MemberReference larg append IfStatement BinaryOperation == MemberReference -- iter Literal 1 BlockStatement ThrowStatement MemberReference JumpException SPECIAL_JUMP ReturnStatement MethodInvocation runtime getNil callEach CatchClause CatchClauseParameter JumpException.SpecialJump sj ReturnStatement MemberReference result	1
MethodDeclaration Modifier public ReferenceType String getTypeInstance FormalParameter ReferenceType String s ReturnStatement Literal	0
MethodDeclaration Modifier public final ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject object FormalParameter ReferenceType IRubyObject value ReturnStatement MethodInvocation runtimeCache MemberReference runtime Literal 5 MemberReference name MemberReference object MemberReference value setVariable	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ReferenceType IRubyObject blocks ReturnStatement MethodInvocation MethodInvocation MethodInvocation stat blocks newFixnum getRuntime	0
MethodDeclaration Modifier private static FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject from FormalParameter ReferenceType IRubyObject to FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator i MemberReference from LocalVariableDeclaration ReferenceType RubyFixnum VariableDeclarator one MethodInvocation RubyFixnum MemberReference runtime one WhileStatement Literal true BlockStatement IfStatement MethodInvocation i MethodInvocation isTrue MemberReference context Literal "<" MemberReference to callMethod BlockStatement BreakStatement StatementExpression MethodInvocation block MemberReference context MemberReference i yield StatementExpression Assignment MemberReference i MethodInvocation i MemberReference context Literal "-" MemberReference one callMethod =	0
MethodDeclaration Modifier public BasicType boolean isExclusive ReturnStatement MemberReference	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement BinaryOperation || BinaryOperation != MemberReference output Literal null BinaryOperation != MemberReference Literal null	0
MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 FormalParameter ReferenceType IRubyObject arg3 FormalParameter ReferenceType IRubyObject arg4 FormalParameter ReferenceType IRubyObject arg5 FormalParameter ReferenceType IRubyObject arg6 FormalParameter ReferenceType IRubyObject arg7 FormalParameter ReferenceType IRubyObject arg8 FormalParameter ReferenceType IRubyObject arg9 FormalParameter ReferenceType Block block ReturnStatement MethodInvocation body MemberReference context MemberReference arg0 MemberReference arg1 MemberReference arg2 MemberReference arg3 MemberReference arg4 MemberReference arg5 MemberReference arg6 MemberReference arg7 MemberReference arg8 MemberReference arg9 MemberReference MemberReference type MemberReference block call	1
MethodDeclaration Modifier public Annotation Override assign FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject FormalParameter ReferenceType Block block StatementExpression MethodInvocation parameter1 MemberReference runtime MemberReference context MemberReference self MemberReference MemberReference block Literal false assign	0
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter BasicType int offset FormalParameter BasicType int depth FormalParameter ReferenceType IRubyObject nil ReturnStatement MethodInvocation parent MemberReference offset BinaryOperation - MemberReference depth Literal 1 MemberReference nil	0
MethodDeclaration Modifier public FormalParameter ReferenceType String newName FormalParameter ReferenceType String oldName StatementExpression MethodInvocation StatementExpression MethodInvocation Literal MethodInvocation ClassReference ReferenceType sig StatementExpression MethodInvocation method MemberReference newName ldc StatementExpression MethodInvocation method MemberReference oldName ldc StatementExpression MethodInvocation method MethodInvocation ClassReference ReferenceType p Literal MethodInvocation MemberReference Void TYPE MethodInvocation ClassReference ReferenceType String ClassReference ReferenceType String params sig invokevirtual StatementExpression MethodInvocation loadNil	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "rindex" ElementValuePair reads MemberReference BACKREF ElementValuePair writes MemberReference BACKREF ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType IRubyObject rindex FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 LocalVariableDeclaration BasicType int VariableDeclarator pos MethodInvocation RubyNumeric MemberReference arg1 num2int LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime IfStatement BinaryOperation < MemberReference pos Literal 0 BlockStatement StatementExpression Assignment MemberReference pos MemberReference value realSize += IfStatement BinaryOperation < MemberReference pos Literal 0 BlockStatement IfStatement BinaryOperation instanceof MemberReference arg0 ReferenceType RubyRegexp StatementExpression MethodInvocation context MethodInvocation MethodInvocation runtime getNil setBackRef getCurrentScope ReturnStatement MethodInvocation runtime getNil IfStatement BinaryOperation > MemberReference pos MemberReference value realSize StatementExpression Assignment MemberReference pos MemberReference value realSize = ReturnStatement MethodInvocation MemberReference runtime MemberReference context MemberReference arg0 MemberReference pos	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal "to_a" Literal ReferenceType IRubyObject to_a19 FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator result MethodInvocation runtime newArray StatementExpression MethodInvocation MemberReference runtime MemberReference context MemberReference self ClassCreator ReferenceType MemberReference runtime MemberReference result callEach ReturnStatement MemberReference result	1
MethodDeclaration Modifier public Annotation Deprecated FormalParameter ReferenceType SkinnyMethodAdapter mv FormalParameter ReferenceType Label afterCall FormalParameter ReferenceType Label okCall LocalVariableDeclaration ReferenceType Label VariableDeclarator ClassCreator ReferenceType Label StatementExpression MethodInvocation mv dup StatementExpression MethodInvocation mv MethodInvocation ClassReference ReferenceType DynamicMethod p Literal "isUndefined" MethodInvocation ClassReference BasicType boolean sig invokevirtual StatementExpression MethodInvocation mv MemberReference StatementExpression MethodInvocation mv MemberReference DISPATCHER_NAME_INDEX aload StatementExpression MethodInvocation mv Literal "method_missing" ldc StatementExpression MethodInvocation mv MethodInvocation ClassReference ReferenceType String p Literal "equals" MethodInvocation ClassReference BasicType boolean MethodInvocation ClassReference ReferenceType Object params sig invokevirtual StatementExpression MethodInvocation mv MemberReference okCall StatementExpression MethodInvocation mv dup StatementExpression MethodInvocation mv MemberReference DISPATCHER_THREADCONTEXT_INDEX aload StatementExpression MethodInvocation mv MethodInvocation ClassReference ReferenceType ThreadContext p Literal "getFrameSelf" MethodInvocation ClassReference ReferenceType IRubyObject sig invokevirtual StatementExpression MethodInvocation mv MemberReference aload StatementExpression MethodInvocation mv MethodInvocation ClassReference ReferenceType DynamicMethod p Literal MethodInvocation ClassReference BasicType boolean MethodInvocation ClassReference ReferenceType IRubyObject ClassReference ReferenceType CallType params sig invokevirtual StatementExpression MethodInvocation mv MemberReference okCall StatementExpression MethodInvocation mv MemberReference label StatementExpression MethodInvocation mv MemberReference DISPATCHER_THREADCONTEXT_INDEX aload StatementExpression MethodInvocation mv swap StatementExpression MethodInvocation mv MemberReference DISPATCHER_SELF_INDEX aload StatementExpression MethodInvocation mv swap StatementExpression MethodInvocation mv MemberReference DISPATCHER_NAME_INDEX aload StatementExpression MethodInvocation mv MemberReference aload StatementExpression MethodInvocation mv MemberReference DISPATCHER_THREADCONTEXT_INDEX aload StatementExpression MethodInvocation mv MethodInvocation ClassReference ReferenceType ThreadContext p Literal "getFrameSelf" MethodInvocation ClassReference ReferenceType IRubyObject sig invokevirtual StatementExpression MethodInvocation mv MemberReference aload StatementExpression MethodInvocation mv MemberReference DISPATCHER_BLOCK_INDEX aload StatementExpression MethodInvocation mv MethodInvocation ClassReference ReferenceType RuntimeHelpers p Literal MethodInvocation ClassReference ReferenceType IRubyObject MethodInvocation ClassReference ReferenceType ThreadContext ClassReference ReferenceType IRubyObject ClassReference ReferenceType DynamicMethod ClassReference ReferenceType String ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject ClassReference ReferenceType CallType ClassReference ReferenceType Block params sig invokestatic StatementExpression MethodInvocation mv MemberReference afterCall go_to	1
MethodDeclaration Modifier public FormalParameter ReferenceType warnings StatementExpression Assignment This MemberReference warnings MemberReference warnings = StatementExpression MethodInvocation support MemberReference warnings StatementExpression MethodInvocation lexer MemberReference warnings	0
MethodDeclaration Modifier public StatementExpression MethodInvocation MethodInvocation MemberReference visitInsn getMethodVisitor	0
MethodDeclaration Modifier private FormalParameter ReferenceType RegexpNode node StatementExpression MethodInvocation sb MethodInvocation MethodInvocation node getValue append MethodInvocation Literal " " append MethodInvocation MethodInvocation node append Literal " " append	0
MethodDeclaration Modifier public ReferenceType NodeType getNodeType ReturnStatement MemberReference NodeType	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ReferenceType IRubyObject pred FormalParameter ReferenceType ThreadContext context ReturnStatement MethodInvocation MemberReference context Literal "-" MethodInvocation RubyFixnum MethodInvocation context getRuntime one callMethod	0
MethodDeclaration Modifier public ReferenceType Object case232_line903 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support MethodInvocation Cast ReferenceType ListNode MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals getPosition ClassCreator ReferenceType HashNode MethodInvocation getPosition Cast ReferenceType ListNode MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals newArrayNode = StatementExpression Assignment MemberReference yyVal MethodInvocation support Cast ReferenceType Node MemberReference yyVal Cast ReferenceType BlockPassNode MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals arg_blk_pass = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public synchronized ReferenceType RubyThread SynchronizedStatement MemberReference LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType RubyThread VariableDeclarator rtList ClassCreator ReferenceType ArrayList TypeArgument ReferenceType RubyThread MethodInvocation size ForStatement EnhancedForControl VariableDeclaration ReferenceType Map ReferenceType Entry TypeArgument ReferenceType Object TypeArgument ReferenceType RubyThread VariableDeclarator entry MethodInvocation entrySet BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator key MethodInvocation entry getKey IfStatement BinaryOperation instanceof MemberReference key ReferenceType Thread BlockStatement LocalVariableDeclaration ReferenceType Thread VariableDeclarator t Cast ReferenceType Thread MemberReference key IfStatement MethodInvocation ! t isAlive ContinueStatement IfStatement BinaryOperation instanceof MemberReference key ReferenceType Future BlockStatement LocalVariableDeclaration ReferenceType Future VariableDeclarator f Cast ReferenceType Future MemberReference key IfStatement BinaryOperation || MethodInvocation f MethodInvocation f ContinueStatement StatementExpression MethodInvocation rtList MethodInvocation entry getValue add LocalVariableDeclaration ReferenceType RubyThread VariableDeclarator rubyThreads ArrayCreator ReferenceType RubyThread MethodInvocation rtList size StatementExpression MethodInvocation rtList MemberReference rubyThreads toArray ReturnStatement MemberReference rubyThreads	1
MethodDeclaration Modifier public FormalParameter ReferenceType Node node FormalParameter ReferenceType BodyCompiler context FormalParameter BasicType boolean expr ThrowStatement ClassCreator ReferenceType NotCompilableException Literal should never be encountered in	0
MethodDeclaration Modifier protected ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject caller FormalParameter ReferenceType RubyClass selfType FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg LocalVariableDeclaration ReferenceType CacheEntry VariableDeclarator entry TernaryExpression BinaryOperation != MemberReference selfType Literal null MethodInvocation selfType MemberReference name MemberReference CacheEntry LocalVariableDeclaration ReferenceType DynamicMethod VariableDeclarator method MemberReference entry method IfStatement MethodInvocation MemberReference method MemberReference caller BlockStatement ReturnStatement MethodInvocation MemberReference context MemberReference self MemberReference name MemberReference method MemberReference arg StatementExpression Assignment MemberReference lastName MemberReference name = StatementExpression Assignment MemberReference cache MemberReference entry = ReturnStatement MethodInvocation method MemberReference context MemberReference self MemberReference selfType MemberReference name MemberReference arg call	0
MethodDeclaration Modifier public call FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation MethodInvocation opAsgnNode getValueNode MemberReference context Literal true compile	0
MethodDeclaration Modifier public FormalParameter ReferenceType StatementExpression MethodInvocation	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement Literal true	0
MethodDeclaration Modifier public static ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter Modifier final ReferenceType Block block ReturnStatement MethodInvocation MemberReference context MemberReference self Literal null MemberReference block	0
MethodDeclaration Modifier public ReferenceType Object case283_line1070 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType ReturnNode Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals MemberReference NilImplicitNode NIL = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "|" ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject f FormalParameter ReferenceType IRubyObject oth ReturnStatement TernaryExpression MethodInvocation oth isTrue MethodInvocation f MethodInvocation getTrue getRuntime MemberReference f	1
MethodDeclaration Modifier private StatementExpression MethodInvocation initMethod voidreturn StatementExpression MethodInvocation initMethod end	0
MethodDeclaration Modifier public static ReferenceType RubyClass createFunctionClass FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType RubyModule module LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator result MethodInvocation module Literal MethodInvocation module Literal "Pointer" fastGetClass MemberReference ObjectAllocator NOT_ALLOCATABLE_ALLOCATOR defineClassUnder StatementExpression MethodInvocation result ClassReference ReferenceType AbstractInvoker defineAnnotatedMethods StatementExpression MethodInvocation result ClassReference ReferenceType Function defineAnnotatedMethods StatementExpression MethodInvocation result ClassReference ReferenceType Function defineAnnotatedConstants ReturnStatement MemberReference result	1
MethodDeclaration FormalParameter ReferenceType RubyModule StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier private BasicType boolean isPrintable LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation getRuntime LocalVariableDeclaration BasicType int VariableDeclarator p MemberReference symbolBytes begin LocalVariableDeclaration BasicType int VariableDeclarator end BinaryOperation + MemberReference p MemberReference symbolBytes realSize LocalVariableDeclaration BasicType byte VariableDeclarator bytes MemberReference symbolBytes bytes LocalVariableDeclaration ReferenceType Encoding VariableDeclarator enc MemberReference symbolBytes encoding WhileStatement BinaryOperation < MemberReference p MemberReference end BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator c MethodInvocation MemberReference runtime MemberReference enc MemberReference bytes MemberReference p MemberReference end codePoint IfStatement MethodInvocation ! enc MemberReference c isPrint ReturnStatement Literal false StatementExpression Assignment MemberReference p MethodInvocation MemberReference runtime MemberReference enc MemberReference c codeLength += ReturnStatement Literal true	1
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression MethodInvocation lexer MethodInvocation end getConditionState ReturnStatement MemberReference yyVal	1
MethodDeclaration FormalParameter ReferenceType RubyModule StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block SwitchStatement MemberReference args length SwitchStatementCase Literal 1 ReturnStatement MethodInvocation MemberReference context MemberReference self MemberReference clazz MemberReference name MemberReference ArraySelector Literal 0 args MemberReference block call SwitchStatementCase Literal 2 ReturnStatement MethodInvocation MemberReference context MemberReference self MemberReference clazz MemberReference name MemberReference ArraySelector Literal 0 args MemberReference ArraySelector Literal 1 args MemberReference block call SwitchStatementCase ReturnStatement MethodInvocation This MemberReference context MemberReference name MemberReference args length Literal 1 Literal 2 raiseArgumentError	0
MethodDeclaration Modifier public static ReferenceType GlobalVariable FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType GlobalVariable VariableDeclarator variable ClassCreator ReferenceType GlobalVariable Literal null StatementExpression MethodInvocation variable ClassCreator ReferenceType MemberReference runtime MemberReference variable MemberReference name ReturnStatement MemberReference variable	0
MethodDeclaration Modifier public Exception AssertStatement MethodInvocation runtime getObject AssertStatement MethodInvocation runtime getGlobalVariables	1
MethodDeclaration Modifier public voidreturn StatementExpression MethodInvocation MethodInvocation MemberReference RETURN visitInsn getMethodVisitor	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair frame Literal true ReferenceType IRubyObject FormalParameter Modifier final ReferenceType ThreadContext context FormalParameter Modifier final ReferenceType Block block ReturnStatement TernaryExpression MethodInvocation block isGiven MethodInvocation MemberReference context MemberReference block each_char MethodInvocation MethodInvocation context getRuntime This Literal enumeratorize	0
MethodDeclaration Modifier public final ReferenceType IRubyObject fromNative FormalParameter ReferenceType ThreadContext context FormalParameter BasicType int value ReturnStatement MethodInvocation Util MethodInvocation context getRuntime MemberReference value newUnsigned8	1
MethodDeclaration Modifier public Annotation Override ReferenceType Object toJava FormalParameter ReferenceType Class target ReturnStatement MethodInvocation JavaUtil MethodInvocation This MemberReference target MemberReference target	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object arg0 FormalParameter ReferenceType Object arg1 StatementExpression MethodInvocation Literal 2 checkArity TryStatement ReturnStatement MethodInvocation constructor MemberReference arg0 MemberReference arg1 newInstance CatchClause CatchClauseParameter IllegalArgumentException iae ReturnStatement MethodInvocation MemberReference iae MemberReference arg0 MemberReference arg1 handlelIllegalArgumentEx CatchClause CatchClauseParameter IllegalAccessException iae ReturnStatement MethodInvocation MemberReference iae handleIllegalAccessEx CatchClause CatchClauseParameter InvocationTargetException ite ReturnStatement MethodInvocation MemberReference ite MemberReference constructor handleInvocationTargetEx CatchClause CatchClauseParameter Throwable t ReturnStatement MethodInvocation MemberReference t MemberReference constructor handleThrowable	1
MethodDeclaration Modifier public backrefAssignError FormalParameter ReferenceType Node node IfStatement BinaryOperation instanceof MemberReference node ReferenceType NthRefNode BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator varName BinaryOperation + Literal "$" Cast ReferenceType NthRefNode MemberReference node ThrowStatement ClassCreator ReferenceType SyntaxException MemberReference PID INVALID_ASSIGNMENT MethodInvocation node getPosition BinaryOperation + BinaryOperation + Literal "Can't set variable " MemberReference varName Literal '.' MemberReference varName IfStatement BinaryOperation instanceof MemberReference node ReferenceType BackRefNode BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator varName BinaryOperation + Literal "$" Cast ReferenceType BackRefNode MemberReference node ThrowStatement ClassCreator ReferenceType SyntaxException MemberReference PID INVALID_ASSIGNMENT MethodInvocation node getPosition BinaryOperation + BinaryOperation + Literal "Can't set variable " MemberReference varName Literal '.' MemberReference varName	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier static ReferenceType JavaProxyClass newProxyClass FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ClassLoader loader FormalParameter ReferenceType String targetClassName FormalParameter ReferenceType Class superClass FormalParameter ReferenceType Class interfaces FormalParameter ReferenceType Set names InvocationTargetException IfStatement BinaryOperation == MemberReference loader Literal null BlockStatement StatementExpression Assignment MemberReference loader ClassReference MethodInvocation getClassLoader ReferenceType = IfStatement BinaryOperation == MemberReference superClass Literal null BlockStatement StatementExpression Assignment MemberReference superClass ClassReference ReferenceType Object = IfStatement BinaryOperation == MemberReference interfaces Literal null BlockStatement StatementExpression Assignment MemberReference interfaces MemberReference = LocalVariableDeclaration ReferenceType Set VariableDeclarator key ClassCreator ReferenceType HashSet StatementExpression MethodInvocation key MemberReference superClass add ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference interfaces length MemberReference ++ i BlockStatement StatementExpression MethodInvocation key MemberReference ArraySelector MemberReference i interfaces add IfStatement BinaryOperation != MemberReference names Literal null BlockStatement StatementExpression MethodInvocation key MemberReference names addAll LocalVariableDeclaration ReferenceType JavaProxyClass VariableDeclarator proxyClass Cast ReferenceType JavaProxyClass MethodInvocation proxies MemberReference key get IfStatement BinaryOperation == MemberReference proxyClass Literal null BlockStatement IfStatement BinaryOperation == MemberReference targetClassName Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator pkg MethodInvocation MemberReference superClass LocalVariableDeclaration ReferenceType String VariableDeclarator fullName MethodInvocation superClass getName LocalVariableDeclaration BasicType int VariableDeclarator ix MethodInvocation fullName Literal '.' lastIndexOf LocalVariableDeclaration ReferenceType String VariableDeclarator cName MemberReference fullName IfStatement BinaryOperation != MemberReference ix Literal - 1 BlockStatement StatementExpression Assignment MemberReference cName MethodInvocation fullName BinaryOperation + MemberReference ix Literal 1 substring = StatementExpression Assignment MemberReference targetClassName BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MemberReference pkg Literal "." MemberReference cName Literal MethodInvocation = StatementExpression MethodInvocation MemberReference runtime MemberReference targetClassName MemberReference superClass LocalVariableDeclaration ReferenceType Map VariableDeclarator methods ClassCreator ReferenceType HashMap StatementExpression MethodInvocation MemberReference superClass MemberReference interfaces MemberReference methods MemberReference names LocalVariableDeclaration ReferenceType Type VariableDeclarator selfType MethodInvocation Type BinaryOperation + BinaryOperation + Literal "L" MethodInvocation MemberReference targetClassName Literal ";" getType StatementExpression Assignment MemberReference proxyClass MethodInvocation MemberReference loader MemberReference targetClassName MemberReference superClass MemberReference interfaces MemberReference methods MemberReference selfType generate = StatementExpression MethodInvocation proxies MemberReference key MemberReference proxyClass put ReturnStatement MemberReference proxyClass	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "instance_eval" ElementValuePair frame Literal true ReferenceType IRubyObject instance_eval FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Block block ReturnStatement MethodInvocation MemberReference context MethodInvocation getInstanceEvalClass MemberReference block specificEval	1
MethodDeclaration Modifier private static ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter Modifier final ReferenceType Block block FormalParameter ReferenceType String methodName LocalVariableDeclaration Modifier final ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime IfStatement MethodInvocation block isGiven BlockStatement LocalVariableDeclaration Modifier final ReferenceType RubyArray VariableDeclarator result MethodInvocation runtime newArray StatementExpression MethodInvocation MemberReference runtime MemberReference context MemberReference self ClassCreator ReferenceType BlockCallback MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext ctx FormalParameter ReferenceType IRubyObject largs FormalParameter ReferenceType Block blk LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator larg MethodInvocation MemberReference runtime MemberReference largs checkArgs LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator value MethodInvocation block MemberReference ctx MemberReference larg yield SynchronizedStatement MemberReference result StatementExpression MethodInvocation result MemberReference value append ReturnStatement MethodInvocation runtime getNil callEach ReturnStatement MemberReference result BlockStatement ReturnStatement MethodInvocation MemberReference runtime MemberReference self MemberReference methodName enumeratorize	0
MethodDeclaration Modifier final ReferenceType FormalParameter ReferenceType NativeType type SwitchStatement MemberReference type SwitchStatementCase VOID ReturnStatement MemberReference INSTANCE SwitchStatementCase BOOL ReturnStatement MemberReference INSTANCE SwitchStatementCase CHAR ReturnStatement MemberReference INSTANCE SwitchStatementCase UCHAR ReturnStatement MemberReference INSTANCE SwitchStatementCase SHORT ReturnStatement MemberReference INSTANCE SwitchStatementCase USHORT ReturnStatement MemberReference INSTANCE SwitchStatementCase INT ReturnStatement MemberReference INSTANCE SwitchStatementCase UINT ReturnStatement MemberReference INSTANCE SwitchStatementCase FLOAT ReturnStatement MemberReference INSTANCE SwitchStatementCase LONG IfStatement BinaryOperation == MethodInvocation Platform MethodInvocation longSize getPlatform Literal 32 BlockStatement ReturnStatement MemberReference INSTANCE ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal is too for int parameter" SwitchStatementCase ULONG IfStatement BinaryOperation == MethodInvocation Platform MethodInvocation longSize getPlatform Literal 32 BlockStatement ReturnStatement MemberReference INSTANCE ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal is too for int parameter" SwitchStatementCase POINTER IfStatement BinaryOperation == MethodInvocation Platform MethodInvocation addressSize getPlatform Literal 32 BlockStatement ReturnStatement MemberReference INSTANCE ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal is too for int parameter" SwitchStatementCase STRING IfStatement BinaryOperation == MethodInvocation Platform MethodInvocation addressSize getPlatform Literal 32 BlockStatement ReturnStatement MemberReference INSTANCE ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal is too for int parameter" SwitchStatementCase ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "Unknown type " MemberReference type	0
MethodDeclaration Modifier public Annotation Override BasicType boolean FormalParameter ReferenceType IRubyObject obj FormalParameter ReferenceType RubyModule type ReturnStatement BinaryOperation instanceof MemberReference obj ReferenceType RubyNumeric	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject yield FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject value FormalParameter ReferenceType FormalParameter ReferenceType Type type ThrowStatement MethodInvocation context MethodInvocation MemberReference NOREASON MemberReference value Literal "yield out of getRuntime	0
MethodDeclaration Modifier public ReferenceType Object case92_line636 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals Cast ReferenceType String Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals attrset = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair frame Literal true ElementValuePair module Literal true ElementValuePair visibility MemberReference PRIVATE ElementValuePair reads MemberReference LASTLINE ElementValuePair writes MemberReference LASTLINE ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType IRubyObject gsub FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType RubyString VariableDeclarator str Cast ReferenceType RubyString MethodInvocation MethodInvocation dup MemberReference context MethodInvocation context getRuntime getLastlineString IfStatement MethodInvocation ! str MethodInvocation isNil MemberReference context MemberReference arg0 MemberReference block gsub_bang BlockStatement StatementExpression MethodInvocation context MethodInvocation MemberReference str setLastLine getCurrentScope ReturnStatement MemberReference str	0
MethodDeclaration Modifier public final ReferenceType getMemoryIO FormalParameter BasicType long offset ThrowStatement MethodInvocation ex	0
MethodDeclaration Modifier public Annotation Override setVisibility FormalParameter ReferenceType Visibility visibility IfStatement BinaryOperation == MemberReference compiledMethod Literal null StatementExpression MethodInvocation initializeMethod StatementExpression MethodInvocation compiledMethod MemberReference visibility setVisibility	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal Literal ReferenceType RubyFixnum pos FormalParameter ReferenceType ThreadContext context TryStatement ReturnStatement MethodInvocation context MethodInvocation MethodInvocation MethodInvocation getMainStream MethodInvocation fgetpos getOpenFileChecked newFixnum getRuntime CatchClause CatchClauseParameter InvalidValueException ex ThrowStatement MethodInvocation context MethodInvocation newErrnoEINVALError getRuntime CatchClause CatchClauseParameter BadDescriptorException bde ThrowStatement MethodInvocation context MethodInvocation newErrnoEBADFError getRuntime CatchClause CatchClauseParameter PipeException e ThrowStatement MethodInvocation context MethodInvocation newErrnoESPIPEError getRuntime CatchClause CatchClauseParameter IOException e ThrowStatement MethodInvocation context MethodInvocation MethodInvocation e getMessage newIOError getRuntime	1
MethodDeclaration Modifier public ReferenceType Block getBlock ReturnStatement MemberReference block	0
MethodDeclaration Modifier public static ReferenceType RubyClass FormalParameter ReferenceType Ruby runtime LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator MethodInvocation runtime Literal MethodInvocation runtime getObject MemberReference defineClass StatementExpression MethodInvocation runtime MemberReference StatementExpression MethodInvocation MethodInvocation runtime includeModule StatementExpression MethodInvocation ClassReference ReferenceType RubyDir defineAnnotatedMethods ReturnStatement MemberReference	0
MethodDeclaration Modifier public final FormalParameter BasicType byte buffer FormalParameter BasicType int offset FormalParameter BasicType int value StatementExpression Assignment MemberReference ArraySelector BinaryOperation + MemberReference offset Literal 0 buffer Cast BasicType byte BinaryOperation >> MemberReference value Literal 24 = StatementExpression Assignment MemberReference ArraySelector BinaryOperation + MemberReference offset Literal 1 buffer Cast BasicType byte BinaryOperation >> MemberReference value Literal 16 = StatementExpression Assignment MemberReference ArraySelector BinaryOperation + MemberReference offset Literal 2 buffer Cast BasicType byte BinaryOperation >> MemberReference value Literal 8 = StatementExpression Assignment MemberReference ArraySelector BinaryOperation + MemberReference offset Literal 3 buffer Cast BasicType byte BinaryOperation >> MemberReference value Literal 0 =	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg0 ReturnStatement MethodInvocation MemberReference context MemberReference self MemberReference clazz MemberReference name MemberReference arg0 MemberReference Block NULL_BLOCK call	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop IfStatement BinaryOperation instanceof Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 3 MemberReference yyTop yyVals ReferenceType SelfNode BlockStatement StatementExpression Assignment MemberReference yyVal MethodInvocation support ClassCreator ReferenceType Token Literal "[]" MethodInvocation Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 3 MemberReference yyTop yyVals getPosition Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals Literal null new_fcall = BlockStatement StatementExpression Assignment MemberReference yyVal MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 3 MemberReference yyTop yyVals ClassCreator ReferenceType Token Literal "[]" MethodInvocation Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 3 MemberReference yyTop yyVals getPosition Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals Literal null new_call = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public ReferenceType IRubyObject setBackRef FormalParameter ReferenceType IRubyObject backref IfStatement MethodInvocation ! staticScope BlockStatement ReturnStatement MethodInvocation parent MemberReference backref setBackRef ReturnStatement Assignment This MemberReference backref MemberReference backref =	1
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Block block StatementExpression MethodInvocation MemberReference context MemberReference block ReturnStatement This	0
MethodDeclaration Modifier protected ReferenceType LoadServiceResource FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType ClassLoader VariableDeclarator classLoader MethodInvocation runtime getJRubyClassLoader IfStatement BinaryOperation && MethodInvocation Ruby isSecurityRestricted BinaryOperation == MemberReference classLoader Literal null BlockStatement StatementExpression Assignment MemberReference classLoader MethodInvocation runtime MethodInvocation getLoader getInstanceConfig = ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator pathIter MethodInvocation MethodInvocation iterator MethodInvocation pathIter hasNext BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator entry MethodInvocation pathIter MethodInvocation toString next IfStatement BinaryOperation == MethodInvocation entry length Literal 0 ContinueStatement IfStatement BinaryOperation || BinaryOperation == MethodInvocation entry Literal 0 charAt Literal '/' BinaryOperation && BinaryOperation > MethodInvocation entry length Literal 1 BinaryOperation == MethodInvocation entry Literal 1 charAt Literal ':' ContinueStatement StatementExpression MethodInvocation Literal "fileInClasspath" BinaryOperation + BinaryOperation + MemberReference entry Literal "/" MemberReference name debugLogTry LocalVariableDeclaration ReferenceType URL VariableDeclarator loc MethodInvocation classLoader BinaryOperation + BinaryOperation + MemberReference entry Literal "/" MemberReference name getResource IfStatement MethodInvocation MemberReference loc isRequireable BlockStatement LocalVariableDeclaration ReferenceType LoadServiceResource VariableDeclarator foundResource ClassCreator ReferenceType LoadServiceResource MemberReference loc MethodInvocation loc getPath StatementExpression MethodInvocation MemberReference foundResource debugLogFound ReturnStatement MemberReference foundResource IfStatement BinaryOperation || BinaryOperation == MethodInvocation name Literal 0 charAt Literal '/' BinaryOperation && BinaryOperation > MethodInvocation name length Literal 1 BinaryOperation == MethodInvocation name Literal 1 charAt Literal ':' ReturnStatement Literal null StatementExpression MethodInvocation Literal "fileInClasspath" MemberReference name debugLogTry LocalVariableDeclaration ReferenceType URL VariableDeclarator loc MethodInvocation classLoader MemberReference name getResource IfStatement MethodInvocation MemberReference loc isRequireable BlockStatement LocalVariableDeclaration ReferenceType LoadServiceResource VariableDeclarator foundResource ClassCreator ReferenceType LoadServiceResource MemberReference loc MethodInvocation loc getPath StatementExpression MethodInvocation MemberReference foundResource debugLogFound ReturnStatement MemberReference foundResource ReturnStatement Literal null	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal Annotation Override ReferenceType RubyFixnum hash ReturnStatement MethodInvocation MethodInvocation MemberReference id newFixnum getRuntime	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "reject!" ElementValuePair frame Literal true ReferenceType IRubyObject FormalParameter Modifier final ReferenceType ThreadContext context FormalParameter Modifier final ReferenceType Block block ReturnStatement TernaryExpression MethodInvocation block isGiven MethodInvocation MemberReference context MemberReference block MethodInvocation MethodInvocation context getRuntime This Literal "reject!" enumeratorize	1
MethodDeclaration Modifier private ReferenceType Encoding checkEncoding FormalParameter ReferenceType RubyString str FormalParameter BasicType boolean warn IfStatement BinaryOperation == MethodInvocation str scanForCodeRange MemberReference StringSupport CR_BROKEN BlockStatement ThrowStatement MethodInvocation MethodInvocation BinaryOperation + Literal "invalid byte in " MethodInvocation str getEncoding newArgumentError getRuntime StatementExpression MethodInvocation check LocalVariableDeclaration ReferenceType Encoding VariableDeclarator enc MethodInvocation str getEncoding IfStatement MethodInvocation ! enc isAsciiCompatible BlockStatement IfStatement BinaryOperation != MemberReference enc MethodInvocation pattern getEncoding StatementExpression MethodInvocation MethodInvocation getRuntime MemberReference pattern MemberReference enc IfStatement MethodInvocation ! isKCodeDefault BlockStatement IfStatement BinaryOperation && BinaryOperation != MemberReference enc MethodInvocation pattern getEncoding BinaryOperation || MethodInvocation ! pattern MethodInvocation isAsciiCompatible getEncoding BinaryOperation != MethodInvocation str scanForCodeRange MemberReference StringSupport CR_7BIT StatementExpression MethodInvocation MethodInvocation getRuntime MemberReference pattern MemberReference enc StatementExpression Assignment MemberReference enc MethodInvocation pattern getEncoding = IfStatement BinaryOperation && BinaryOperation && BinaryOperation && MemberReference warn MethodInvocation BinaryOperation != MemberReference enc MemberReference ASCIIEncoding INSTANCE BinaryOperation != MethodInvocation str scanForCodeRange MemberReference StringSupport CR_7BIT BlockStatement StatementExpression MethodInvocation MethodInvocation getWarnings MethodInvocation MemberReference ID BinaryOperation + BinaryOperation + Literal "regexp match against to " MemberReference enc Literal " string" warn getRuntime ReturnStatement MemberReference enc	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair frame Literal true ElementValuePair visibility MemberReference Visibility PROTECTED ReferenceType IRubyObject _close FormalParameter ReferenceType ThreadContext context ReturnStatement TernaryExpression MethodInvocation ! SuperMethodInvocation close MethodInvocation context MethodInvocation getNil getRuntime	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair required Literal 2 ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject name FormalParameter ReferenceType IRubyObject value StatementExpression MethodInvocation ensureInstanceVariablesSettable ReturnStatement Cast ReferenceType IRubyObject MethodInvocation MethodInvocation MethodInvocation name asJavaString validateInstanceVariable MemberReference value	1
MethodDeclaration Modifier final static ReferenceType com ReferenceType kenai ReferenceType jffi ReferenceType Struct newStruct FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType Collection TypeArgument ReferenceType StructLayout ReferenceType Member structMembers LocalVariableDeclaration ReferenceType com ReferenceType kenai ReferenceType jffi ReferenceType Type VariableDeclarator fields ArrayCreator ReferenceType com ReferenceType kenai ReferenceType jffi ReferenceType Type MethodInvocation structMembers size LocalVariableDeclaration BasicType int VariableDeclarator i Literal 0 ForStatement EnhancedForControl VariableDeclaration ReferenceType StructLayout ReferenceType Member VariableDeclarator m MemberReference structMembers BlockStatement LocalVariableDeclaration ReferenceType com ReferenceType kenai ReferenceType jffi ReferenceType Type VariableDeclarator IfStatement BinaryOperation instanceof MemberReference m ReferenceType StructLayout ReferenceType BlockStatement StatementExpression Assignment MemberReference MethodInvocation MemberReference runtime Cast ReferenceType StructLayout ReferenceType MemberReference m newStruct = BlockStatement StatementExpression Assignment MemberReference MethodInvocation FFIUtil MethodInvocation m getNativeType getFFIType = IfStatement BinaryOperation == MemberReference Literal null BlockStatement ThrowStatement MethodInvocation runtime BinaryOperation + Literal "Unsupported Struct field type " MemberReference m newTypeError StatementExpression Assignment MemberReference ArraySelector MemberReference ++ i fields MemberReference = ReturnStatement ClassCreator ReferenceType com ReferenceType kenai ReferenceType jffi ReferenceType Struct MemberReference fields	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "switch" ElementValuePair module Literal true ElementValuePair visibility MemberReference Visibility PRIVATE ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration BasicType int VariableDeclarator gid MethodInvocation runtime MethodInvocation getPosix LocalVariableDeclaration BasicType int VariableDeclarator egid MethodInvocation runtime MethodInvocation getPosix IfStatement MethodInvocation block isGiven BlockStatement TryStatement StatementExpression MethodInvocation runtime MethodInvocation MemberReference gid setegid getPosix StatementExpression MethodInvocation runtime MethodInvocation MemberReference egid setgid getPosix ReturnStatement MethodInvocation block MemberReference context MethodInvocation runtime getNil yield StatementExpression MethodInvocation runtime MethodInvocation MemberReference egid setegid getPosix StatementExpression MethodInvocation runtime MethodInvocation MemberReference gid setgid getPosix BlockStatement StatementExpression MethodInvocation runtime MethodInvocation MemberReference gid setegid getPosix StatementExpression MethodInvocation runtime MethodInvocation MemberReference egid setgid getPosix ReturnStatement MethodInvocation RubyFixnum MemberReference runtime zero	1
MethodDeclaration Modifier public ReferenceType RubyString convertToString ReturnStatement Cast ReferenceType RubyString MethodInvocation TypeConverter This MethodInvocation MethodInvocation getString getRuntime Literal "to_str" convertToType	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "enum_slice" ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject arg FormalParameter Modifier final ReferenceType Block block ReturnStatement TernaryExpression MethodInvocation block isGiven MethodInvocation MemberReference context MemberReference self MemberReference arg MemberReference block each_slice MethodInvocation MethodInvocation context getRuntime MemberReference self Literal "enum_slice" MemberReference arg enumeratorize	1
MethodDeclaration Modifier public ReferenceType Object toJava FormalParameter ReferenceType Class cls ReturnStatement MethodInvocation JavaUtil MethodInvocation MethodInvocation getCurrentContext getRuntime MethodInvocation getValue MemberReference cls	0
MethodDeclaration Modifier public BasicType boolean isWritable ReturnStatement BinaryOperation || BinaryOperation != BinaryOperation & MemberReference flags MemberReference RDWR Literal 0 BinaryOperation != BinaryOperation & MemberReference flags MemberReference Literal 0	0
MethodDeclaration Modifier public final ReferenceType RubyString FormalParameter ReferenceType Ruby runtime ReturnStatement MethodInvocation runtimeCache MemberReference runtime Literal 2 getString	0
MethodDeclaration Modifier public ReferenceType Iterator TypeArgument ReferenceType String iterator ReturnStatement MethodInvocation iterator	0
MethodDeclaration Modifier public Annotation Override assign FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject FormalParameter ReferenceType Block block StatementExpression MethodInvocation pre MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference MemberReference block Literal false assign Literal 0 get StatementExpression MethodInvocation pre MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference MemberReference block Literal false assign Literal 1 get StatementExpression MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference block Literal 2	0
MethodDeclaration Modifier public ReferenceType Object case2_line274 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop IfStatement BinaryOperation != Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals Literal null BlockStatement IfStatement BinaryOperation instanceof Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals ReferenceType BlockNode BlockStatement StatementExpression MethodInvocation support Cast ReferenceType BlockNode MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals checkUselessStatement BlockStatement StatementExpression MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals checkUselessStatement StatementExpression MethodInvocation support MethodInvocation MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals MethodInvocation Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals getPosition addRootNode getResult ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier private BasicType int hereDocumentIdentifier IOException LocalVariableDeclaration BasicType int VariableDeclarator c MethodInvocation src read LocalVariableDeclaration BasicType int VariableDeclarator term LocalVariableDeclaration BasicType int VariableDeclarator func Literal 0 IfStatement BinaryOperation == MemberReference c Literal '-' BlockStatement StatementExpression Assignment MemberReference c MethodInvocation src read = StatementExpression Assignment MemberReference func MemberReference STR_FUNC_INDENT = LocalVariableDeclaration ReferenceType ByteList VariableDeclarator markerValue IfStatement BinaryOperation || BinaryOperation || BinaryOperation == MemberReference c Literal '\'' BinaryOperation == MemberReference c Literal '"' BinaryOperation == MemberReference c Literal '`' BlockStatement IfStatement BinaryOperation == MemberReference c Literal '\'' BlockStatement StatementExpression Assignment MemberReference func MemberReference |= IfStatement BinaryOperation == MemberReference c Literal '"' BlockStatement StatementExpression Assignment MemberReference func MemberReference str_dquote |= BlockStatement StatementExpression Assignment MemberReference func MemberReference |= StatementExpression Assignment MemberReference markerValue ClassCreator ReferenceType ByteList = StatementExpression Assignment MemberReference term MemberReference c = WhileStatement BinaryOperation && BinaryOperation != Assignment MemberReference c MethodInvocation src read = MemberReference EOF BinaryOperation != MemberReference c MemberReference term BlockStatement StatementExpression MethodInvocation markerValue MemberReference c append IfStatement BinaryOperation == MemberReference c MemberReference EOF BlockStatement ThrowStatement ClassCreator ReferenceType SyntaxException MemberReference PID MethodInvocation getPosition MethodInvocation getCurrentLine Literal "unterminated document BlockStatement IfStatement MethodInvocation ! MemberReference c isIdentifierChar BlockStatement StatementExpression MethodInvocation src MemberReference c unread IfStatement BinaryOperation != BinaryOperation & MemberReference func MemberReference STR_FUNC_INDENT Literal 0 BlockStatement StatementExpression MethodInvocation src Literal '-' unread ReturnStatement Literal 0 StatementExpression Assignment MemberReference markerValue ClassCreator ReferenceType ByteList = StatementExpression Assignment MemberReference term Literal '"' = StatementExpression Assignment MemberReference func MemberReference str_dquote |= DoStatement BinaryOperation && BinaryOperation != Assignment MemberReference c MethodInvocation src read = MemberReference EOF MethodInvocation MemberReference c isIdentifierChar BlockStatement StatementExpression MethodInvocation markerValue MemberReference c append StatementExpression MethodInvocation src MemberReference c unread LocalVariableDeclaration ReferenceType ByteList VariableDeclarator lastLine MethodInvocation src StatementExpression MethodInvocation lastLine Literal '\n' append StatementExpression Assignment MemberReference lex_strterm ClassCreator ReferenceType MemberReference markerValue MemberReference func MemberReference lastLine = IfStatement BinaryOperation == MemberReference term Literal '`' BlockStatement StatementExpression Assignment MemberReference yaccValue ClassCreator ReferenceType Token Literal MethodInvocation getPosition = ReturnStatement MemberReference Tokens StatementExpression Assignment MemberReference yaccValue ClassCreator ReferenceType Token Literal "\"" MethodInvocation getPosition = StatementExpression MethodInvocation getPosition ReturnStatement MemberReference Tokens	1
MethodDeclaration Modifier private ReferenceType IRubyObject number FormalParameter ReferenceType Ruby runtime FormalParameter BasicType long s LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator result ClassCreator ReferenceType StringBuilder StatementExpression MethodInvocation result MethodInvocation Cast BasicType char BinaryOperation & BinaryOperation >> MemberReference s Literal 16 Literal 0xff append Cast BasicType char BinaryOperation & BinaryOperation >> MemberReference s Literal 24 Literal 0xff append StatementExpression MethodInvocation result MethodInvocation Cast BasicType char BinaryOperation & MemberReference s Literal 0xff append Cast BasicType char BinaryOperation & BinaryOperation >> MemberReference s Literal 8 Literal 0xff append ReturnStatement MethodInvocation runtime MethodInvocation result toString newString	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject other ReturnStatement MethodInvocation MemberReference context This MethodInvocation RubyRational MemberReference context MemberReference other intValue	0
MethodDeclaration Modifier private FormalParameter ReferenceType ClassVarDeclNode node StatementExpression MethodInvocation sb MethodInvocation MethodInvocation node getName append Literal " " append	0
MethodDeclaration Modifier public final ReferenceType FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType String ReturnStatement MethodInvocation runtimeCache MemberReference context MemberReference Literal 9	0
MethodDeclaration Modifier public ReferenceType FileChannel getOutput ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType RubyModule ReturnStatement MemberReference	0
MethodDeclaration Modifier public BasicType boolean peek FormalParameter BasicType int to IOException LocalVariableDeclaration BasicType int VariableDeclarator MemberReference LocalVariableDeclaration BasicType int VariableDeclarator c MethodInvocation read StatementExpression MethodInvocation MemberReference c unread StatementExpression Assignment MemberReference MemberReference = ReturnStatement BinaryOperation == MemberReference c MemberReference to	0
MethodDeclaration Modifier public FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType String FormalParameter ReferenceType String file FormalParameter BasicType int line FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject type IfStatement MethodInvocation ! context BlockStatement IfStatement BinaryOperation == MemberReference file Literal null StatementExpression Assignment MemberReference file Literal = IfStatement BinaryOperation == MemberReference type Literal null StatementExpression Assignment MemberReference type MethodInvocation getFalse = LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation This Ruby MethodInvocation context StatementExpression MethodInvocation context TryStatement StatementExpression MethodInvocation MemberReference context ArrayCreator ReferenceType IRubyObject ArrayInitializer MethodInvocation MemberReference newString MethodInvocation MemberReference file newString MethodInvocation MemberReference line newFixnum TernaryExpression BinaryOperation != MemberReference name Literal null MethodInvocation MemberReference name MethodInvocation getNil MemberReference MemberReference type call StatementExpression MethodInvocation context	1
MethodDeclaration Modifier public LocalVariableDeclaration Modifier final ReferenceType ByteArrayOutputStream VariableDeclarator err ClassCreator ReferenceType ByteArrayOutputStream LocalVariableDeclaration ReferenceType RubyInstanceConfig VariableDeclarator config ClassCreator ReferenceType RubyInstanceConfig StatementExpression MethodInvocation MemberReference System in StatementExpression MethodInvocation MemberReference System out StatementExpression MethodInvocation ClassCreator ReferenceType PrintStream MemberReference err setError StatementExpression MethodInvocation Literal false LocalVariableDeclaration ReferenceType Ruby VariableDeclarator ruby MethodInvocation Ruby MemberReference config newInstance LocalVariableDeclaration ReferenceType RubyException VariableDeclarator exception Cast ReferenceType RubyException MethodInvocation runtime MethodInvocation MethodInvocation ruby getCurrentContext ArrayCreator ReferenceType IRubyObject ArrayInitializer MethodInvocation ruby Literal "A message" newString MemberReference Block NULL_BLOCK newInstance Literal "NameError" getClass StatementExpression MethodInvocation ruby MemberReference exception printError	1
MethodDeclaration Modifier public static ReferenceType File createTempFile FormalParameter ReferenceType String prefix FormalParameter ReferenceType String suffix FormalParameter ReferenceType File directory IOException LocalVariableDeclaration ReferenceType File VariableDeclarator file MethodInvocation File MemberReference prefix MemberReference suffix MemberReference directory createTempFile ReturnStatement ClassCreator ReferenceType NormalizedFile MethodInvocation file getPath	0
MethodDeclaration Modifier public ReferenceType ISourcePosition getPosition ReturnStatement MethodInvocation src getPosition	0
MethodDeclaration Modifier public ReferenceType RaiseException newLoadError FormalParameter ReferenceType String message ReturnStatement MethodInvocation MethodInvocation MemberReference message newRaiseException	0
MethodDeclaration Modifier public Annotation Override FormalParameter ReferenceType List TypeArgument ReferenceType Variable l StatementExpression MethodInvocation MemberReference l	0
MethodDeclaration Modifier public final Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule klazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg1 LocalVariableDeclaration ReferenceType HeapInvocationBuffer VariableDeclarator buffer ClassCreator ReferenceType HeapInvocationBuffer MemberReference function IfStatement MemberReference BlockStatement LocalVariableDeclaration ReferenceType Invocation VariableDeclarator invocation ClassCreator ReferenceType Invocation MemberReference context TryStatement StatementExpression MethodInvocation m1 MemberReference invocation MemberReference buffer MemberReference arg1 marshal ReturnStatement MethodInvocation functionInvoker MethodInvocation context getRuntime MemberReference function MemberReference buffer invoke StatementExpression MethodInvocation invocation finish BlockStatement StatementExpression MethodInvocation m1 MemberReference context MemberReference buffer MemberReference arg1 marshal ReturnStatement MethodInvocation functionInvoker MethodInvocation context getRuntime MemberReference function MemberReference buffer invoke	1
MethodDeclaration Modifier public final Annotation Override BasicType boolean FormalParameter ReferenceType IRubyObject other ReturnStatement This MethodInvocation MemberReference other equals	0
MethodDeclaration Modifier public ReferenceType DynamicMethod ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType IRubyObject yield FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject value FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule FormalParameter BasicType boolean aValue FormalParameter ReferenceType FormalParameter ReferenceType Block ReferenceType Type type ReturnStatement MethodInvocation MemberReference context ArrayCreator ReferenceType IRubyObject ArrayInitializer MemberReference value MemberReference Block NULL_BLOCK call	0
MethodDeclaration Modifier public ReferenceType ChannelDescriptor FormalParameter BasicType int ReturnStatement MethodInvocation MethodInvocation MemberReference getRuntime	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair required Literal 1 ElementValuePair module Literal true ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject str ReturnStatement MethodInvocation MemberReference context MemberReference recv MemberReference str	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair frame Literal true ElementValuePair rest Literal true ElementValuePair meta Literal true ReferenceType IRubyObject open FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType RubyTCPSocket VariableDeclarator sock Cast ReferenceType RubyTCPSocket MethodInvocation recv MemberReference context Literal MemberReference args callMethod IfStatement MethodInvocation ! block isGiven ReturnStatement MemberReference sock TryStatement ReturnStatement MethodInvocation block MemberReference context MemberReference sock yield IfStatement MethodInvocation isOpen StatementExpression MethodInvocation sock close	1
MethodDeclaration Modifier public BasicType int compare FormalParameter ReferenceType IRubyObject o1 FormalParameter ReferenceType IRubyObject o2 ReturnStatement MethodInvocation RubyFixnum MemberReference ArraySelector Literal 1 MethodInvocation MemberReference localContext Literal "<=>" MemberReference ArraySelector Literal 1 o2 callMethod o1 fix2int	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair required Literal 1 ElementValuePair frame Literal true ElementValuePair optional Literal 1 ElementValuePair module Literal true ElementValuePair visibility MemberReference PRIVATE ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block StatementExpression MethodInvocation context MethodInvocation MethodInvocation Literal require getRuntime ReturnStatement MethodInvocation RuntimeHelpers MemberReference context MemberReference recv Literal MemberReference args MemberReference block invoke	0
MethodDeclaration Modifier public final FormalParameter BasicType long offset FormalParameter BasicType double value ThrowStatement MethodInvocation ex	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "uid=" ElementValuePair required Literal 1 ElementValuePair module Literal true ElementValuePair visibility MemberReference Visibility PRIVATE ReferenceType IRubyObject uid_set FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject arg ReturnStatement MethodInvocation MethodInvocation context getRuntime MemberReference arg uid_set	1
MethodDeclaration Modifier public ReferenceType Object case379_line1434 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal Cast ReferenceType ListNode MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals = StatementExpression Cast ReferenceType ISourcePositionHolder MemberReference yyVal ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator formatter MethodInvocation Literal StatementExpression MethodInvocation Literal " MethodInvocation formatter Literal format assertEquals	0
MethodDeclaration Modifier public static ReferenceType String sig FormalParameter ReferenceType Class retval FormalParameter ReferenceType String descriptor FormalParameter ReferenceType Class params ReturnStatement BinaryOperation + MethodInvocation MemberReference descriptor MemberReference params MethodInvocation MemberReference retval ci	0
MethodDeclaration Modifier protected StatementExpression MethodInvocation close	0
MethodDeclaration Modifier public static ReferenceType RubyClass FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType RubyModule javaModule LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator result MethodInvocation javaModule Literal MethodInvocation runtime getObject MemberReference ObjectAllocator NOT_ALLOCATABLE_ALLOCATOR defineClassUnder StatementExpression MethodInvocation MemberReference runtime MemberReference result registerRubyMethods StatementExpression MethodInvocation result ClassReference ReferenceType JavaProxyClass defineAnnotatedMethods ReturnStatement MemberReference result	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair module Literal true ElementValuePair visibility MemberReference Visibility PRIVATE ReferenceType IRubyObject get_proxy_class FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject arg0 ReturnStatement MethodInvocation Java MemberReference recv MemberReference arg0 get_proxy_class	1
MethodDeclaration Modifier private resetForWrite IOException IfStatement MethodInvocation descriptor isSeekable BlockStatement LocalVariableDeclaration ReferenceType FileChannel VariableDeclarator fileChannel Cast ReferenceType FileChannel MethodInvocation descriptor getChannel IfStatement MethodInvocation buffer hasRemaining BlockStatement StatementExpression MethodInvocation fileChannel BinaryOperation - MethodInvocation fileChannel position MethodInvocation buffer remaining position StatementExpression MethodInvocation buffer clear StatementExpression Assignment MemberReference reading Literal false =	1
MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext ctx FormalParameter ReferenceType IRubyObject largs FormalParameter ReferenceType Block blk StatementExpression MethodInvocation MemberReference localContext MemberReference ctx Literal "count" checkContext StatementExpression MemberReference ++ ArraySelector Literal 0 result ReturnStatement MethodInvocation runtime getNil	0
MethodDeclaration Modifier public FormalParameter ReferenceType RubyModule module StatementExpression Assignment This MemberReference MemberReference module = IfStatement BinaryOperation == MemberReference Literal null BlockStatement ForStatement ForControl VariableDeclaration ReferenceType VariableDeclarator scope MethodInvocation BinaryOperation != MemberReference scope Literal null Assignment MemberReference scope MethodInvocation scope = BlockStatement IfStatement BinaryOperation != MemberReference scope Literal null BlockStatement StatementExpression Assignment MemberReference MemberReference scope = ReturnStatement	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ReferenceType IRubyObject pointer FormalParameter ReferenceType ThreadContext context ReturnStatement MemberReference memory	0
MethodDeclaration Modifier public synchronized ReferenceType Object dataGetStruct ReturnStatement MethodInvocation Literal	0
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType RubyClass ReturnStatement ClassCreator ReferenceType MemberReference runtime MemberReference	0
MethodDeclaration Modifier public isNil FormalParameter ReferenceType BranchCallback FormalParameter ReferenceType BranchCallback StatementExpression MethodInvocation method MethodInvocation ClassReference ReferenceType IRubyObject p Literal MethodInvocation ClassReference BasicType boolean sig LocalVariableDeclaration ReferenceType Label VariableDeclarator ClassCreator ReferenceType Label LocalVariableDeclaration ReferenceType Label VariableDeclarator ClassCreator ReferenceType Label StatementExpression MethodInvocation method MemberReference StatementExpression MethodInvocation This branch StatementExpression MethodInvocation method MemberReference go_to StatementExpression MethodInvocation method MemberReference label StatementExpression MethodInvocation This branch StatementExpression MethodInvocation method MemberReference label	0
MethodDeclaration Modifier private ReferenceType RubyString FormalParameter ReferenceType Ruby runtime ReturnStatement MethodInvocation RubyString MemberReference runtime MemberReference symbolBytes	0
MethodDeclaration Modifier public ReferenceType DynamicMethod dup LocalVariableDeclaration ReferenceType DefaultMethod VariableDeclarator ClassCreator ReferenceType DefaultMethod MethodInvocation getImplementationClass MemberReference staticScope MemberReference body MemberReference argsNode MethodInvocation getVisibility MemberReference position StatementExpression Assignment MemberReference box This MemberReference box = ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule klazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType Block block ReturnStatement MethodInvocation MemberReference context MemberReference self MemberReference klazz MemberReference name ArrayCreator ReferenceType IRubyObject ArrayInitializer MemberReference arg0 MemberReference block call	0
MethodDeclaration Modifier public final ReferenceType FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType String descriptor ReturnStatement MethodInvocation runtimeCache This MemberReference context Literal 3 MemberReference descriptor	0
MethodDeclaration Modifier public Annotation Deprecated ReferenceType Callback getFastSingletonMethod FormalParameter ReferenceType String method FormalParameter ReferenceType Class arg1 ReturnStatement ClassCreator ReferenceType ReflectionCallback MemberReference type MemberReference method ArrayCreator ReferenceType Class ArrayInitializer MemberReference arg1 Literal false Literal true MethodInvocation Arity singleArgument Literal true	1
MethodDeclaration Modifier private Annotation Deprecated ReferenceType ClassWriter createBlockCtor19 FormalParameter ReferenceType String namePath FormalParameter ReferenceType Class fieldClass Exception LocalVariableDeclaration ReferenceType ClassWriter VariableDeclarator cw ClassCreator ReferenceType ClassWriter BinaryOperation | MemberReference ClassWriter COMPUTE_MAXS MemberReference ClassWriter COMPUTE_FRAMES StatementExpression MethodInvocation cw MemberReference RubyInstanceConfig JAVA_VERSION BinaryOperation + MemberReference ACC_PUBLIC MemberReference ACC_SUPER MemberReference namePath Literal null MethodInvocation ClassReference ReferenceType Object p ArrayCreator ReferenceType String ArrayInitializer MethodInvocation ClassReference ReferenceType CompiledBlockCallback19 p visit StatementExpression MethodInvocation cw BinaryOperation | MemberReference ACC_PRIVATE MemberReference ACC_FINAL Literal "$scriptObject" MethodInvocation MemberReference fieldClass ci Literal null Literal null visitField LocalVariableDeclaration ReferenceType SkinnyMethodAdapter VariableDeclarator mv ClassCreator ReferenceType SkinnyMethodAdapter MethodInvocation cw MemberReference ACC_PUBLIC Literal "<init>" MethodInvocation MemberReference Void TYPE MethodInvocation ClassReference ReferenceType Object params sig Literal null Literal null visitMethod StatementExpression MethodInvocation mv start StatementExpression MethodInvocation mv Literal 0 aload StatementExpression MethodInvocation mv MethodInvocation ClassReference ReferenceType Object p Literal "<init>" MethodInvocation VoidClassReference sig invokespecial StatementExpression MethodInvocation mv Literal 0 aload StatementExpression MethodInvocation mv Literal 1 aload StatementExpression MethodInvocation mv MethodInvocation MemberReference fieldClass p checkcast StatementExpression MethodInvocation mv MemberReference namePath Literal "$scriptObject" MethodInvocation MemberReference fieldClass ci putfield StatementExpression MethodInvocation mv voidreturn StatementExpression MethodInvocation mv end ReturnStatement MemberReference cw	1
MethodDeclaration Modifier public StatementExpression MethodInvocation	0
MethodDeclaration Modifier public ReferenceType RaiseException newSecurityError FormalParameter ReferenceType String message ReturnStatement MethodInvocation MethodInvocation MemberReference message newRaiseException	0
MethodDeclaration Modifier private ReferenceType IRubyObject op_roundCommonPre FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject n LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime IfStatement BinaryOperation instanceof MemberReference n ReferenceType RubyInteger ThrowStatement MethodInvocation runtime Literal "not an integer" newTypeError ReturnStatement MethodInvocation MemberReference context MethodInvocation RubyFixnum MemberReference runtime Literal 10 newFixnum MemberReference n f_expt	1
MethodDeclaration Modifier public ReferenceType Object value ReturnStatement MemberReference yaccValue	0
MethodDeclaration Modifier public Annotation JRubyMethod Annotation Override ReferenceType IRubyObject stat FormalParameter ReferenceType ThreadContext context StatementExpression MethodInvocation openFile MethodInvocation context getRuntime ReturnStatement MethodInvocation context MethodInvocation MemberReference path Literal false getRuntime	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block TryStatement StatementExpression MethodInvocation MemberReference context MemberReference self MemberReference name MemberReference block ReturnStatement MethodInvocation MemberReference context MemberReference self MemberReference clazz MemberReference name MemberReference args MemberReference block StatementExpression MethodInvocation MemberReference context	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair frame Literal true ElementValuePair meta Literal true ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject subclass LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator MethodInvocation RuntimeHelpers MemberReference context MemberReference subclass Literal "java_class" invoke IfStatement MethodInvocation isNil BlockStatement StatementExpression Assignment MemberReference MethodInvocation RuntimeHelpers MemberReference context MemberReference recv Literal "java_class" invoke = StatementExpression MethodInvocation RuntimeHelpers MemberReference context MemberReference subclass Literal MemberReference invoke ReturnStatement MethodInvocation RuntimeHelpers MemberReference context MemberReference recv MemberReference subclass MemberReference Block NULL_BLOCK	0
MethodDeclaration Modifier private ReferenceType IRubyObject FormalParameter ReferenceType Ruby ruby FormalParameter ReferenceType IRubyObject value IfStatement BinaryOperation == MemberReference value Literal null BlockStatement ReturnStatement ArrayCreator ReferenceType IRubyObject ArrayInitializer MethodInvocation ruby getNil IfStatement BinaryOperation instanceof MemberReference value ReferenceType RubyArray BlockStatement ReturnStatement Cast ReferenceType RubyArray MemberReference value ReturnStatement ArrayCreator ReferenceType IRubyObject ArrayInitializer MemberReference value	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal Literal "exit" Literal ReferenceType IRubyObject kill LocalVariableDeclaration ReferenceType RubyThread VariableDeclarator currentThread MethodInvocation MethodInvocation getCurrentContext MethodInvocation getThread getRuntime IfStatement BinaryOperation == MemberReference currentThread This StatementExpression MethodInvocation IfStatement MemberReference DEBUG StatementExpression MethodInvocation System.out BinaryOperation + BinaryOperation + Literal "thread " MethodInvocation Thread currentThread Literal " trying to kill" println StatementExpression MethodInvocation currentThread pollThreadEvents StatementExpression MethodInvocation MethodInvocation getThreadService MethodInvocation ClassCreator ReferenceType ReferenceType Event MemberReference currentThread This MemberReference KILL getRuntime IfStatement MemberReference DEBUG StatementExpression MethodInvocation System.out BinaryOperation + BinaryOperation + Literal "thread " MethodInvocation Thread currentThread Literal " with kill" println ReturnStatement This	1
MethodDeclaration Modifier public ReferenceType IRubyObject get FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType StructLayout ReferenceType Storage cache FormalParameter ReferenceType IRubyObject ptr LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator s MethodInvocation cache This IfStatement BinaryOperation == MemberReference s Literal null BlockStatement StatementExpression Assignment MemberReference s ClassCreator ReferenceType StructLayout ReferenceType Array MemberReference runtime MemberReference ptr MemberReference offset MemberReference arrayType MemberReference op = StatementExpression MethodInvocation cache This MemberReference s ReturnStatement MemberReference s	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ReferenceType RubyInteger min ReturnStatement MethodInvocation MethodInvocation MethodInvocation dt newFixnum getRuntime	0
MethodDeclaration Modifier public static Annotation Deprecated ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject recv ReturnStatement MethodInvocation MethodInvocation recv getRuntime	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "swapcase!" ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime IfStatement BinaryOperation == MemberReference value realSize Literal 0 BlockStatement StatementExpression MethodInvocation modifyCheck ReturnStatement MethodInvocation runtime getNil StatementExpression MethodInvocation modify ReturnStatement MethodInvocation MemberReference runtime MemberReference value bytes MemberReference value begin BinaryOperation + MemberReference value begin MemberReference value realSize	1
MethodDeclaration post FormalParameter ReferenceType ThreadContext context StatementExpression MethodInvocation context	0
MethodDeclaration Modifier public Annotation Override FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject arg FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator values Cast ReferenceType RubyArray MemberReference arg LocalVariableDeclaration BasicType int VariableDeclarator length MethodInvocation values getLength SwitchStatement MemberReference length SwitchStatementCase Literal 0 StatementExpression MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference block assign BreakStatement SwitchStatementCase Literal 1 StatementExpression MethodInvocation MemberReference runtime MemberReference context MemberReference self MethodInvocation values Literal 0 eltInternal MemberReference block assign BreakStatement SwitchStatementCase Literal 2 StatementExpression MethodInvocation MemberReference runtime MemberReference context MemberReference self MethodInvocation values Literal 0 eltInternal MethodInvocation values Literal 1 eltInternal MemberReference block assign BreakStatement SwitchStatementCase Literal 3 StatementExpression MethodInvocation MemberReference runtime MemberReference context MemberReference self MethodInvocation values Literal 0 eltInternal MethodInvocation values Literal 1 eltInternal MethodInvocation values Literal 2 eltInternal MemberReference block assign BreakStatement SwitchStatementCase StatementExpression MethodInvocation parameter1 MemberReference runtime MemberReference context MemberReference self MethodInvocation values Literal 0 eltInternal MemberReference block Literal false assign StatementExpression MethodInvocation parameter2 MemberReference runtime MemberReference context MemberReference self MethodInvocation values Literal 1 eltInternal MemberReference block Literal false assign StatementExpression MethodInvocation rest MemberReference runtime MemberReference context MemberReference self MethodInvocation values Literal 2 BinaryOperation - MemberReference length Literal 2 MemberReference block Literal true assign BreakStatement	0
MethodDeclaration Modifier public ReferenceType IRubyObject ReturnStatement MethodInvocation thread	0
MethodDeclaration Modifier public final Annotation Override ReferenceType Arity ReturnStatement MemberReference arity	0
MethodDeclaration Modifier public static ReferenceType RubyArray FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType Class TypeArgument ? classes LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator javaClasses ArrayCreator ReferenceType IRubyObject MemberReference classes length ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MemberReference classes length BinaryOperation >= MemberReference -- i Literal 0 BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i javaClasses MethodInvocation MemberReference runtime MemberReference ArraySelector MemberReference i classes get = ReturnStatement MethodInvocation runtime MemberReference javaClasses newArrayNoCopy	1
MethodDeclaration Modifier public Annotation Override ReferenceType Block FormalParameter ReferenceType ReturnStatement Literal null	0
MethodDeclaration Modifier public static ReferenceType FormalParameter ReferenceType Class clazz LocalVariableDeclaration ReferenceType VariableDeclarator converter MethodInvocation MemberReference clazz get IfStatement BinaryOperation == MemberReference converter Literal null BlockStatement StatementExpression Assignment MemberReference converter MemberReference = ReturnStatement MemberReference converter	0
MethodDeclaration Modifier protected FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType IRubyObject _path FormalParameter BasicType boolean server LocalVariableDeclaration BasicType int VariableDeclarator status StatementExpression Assignment MemberReference fd Literal - 1 = TryStatement StatementExpression Assignment MemberReference fd MethodInvocation INSTANCE MethodInvocation AF_UNIX value MethodInvocation SOCK_STREAM value Literal 0 socket = CatchClause CatchClauseParameter UnsatisfiedLinkError ule IfStatement BinaryOperation < MemberReference fd Literal 0 BlockStatement StatementExpression MethodInvocation MemberReference runtime Literal rb_sys_fail LocalVariableDeclaration ReferenceType ReferenceType VariableDeclarator sockaddr MethodInvocation newInstance StatementExpression MethodInvocation sockaddr MethodInvocation AF_UNIX value LocalVariableDeclaration ReferenceType ByteList VariableDeclarator path MethodInvocation _path MethodInvocation getByteList convertToString StatementExpression Assignment MemberReference fpath MethodInvocation path toString = IfStatement BinaryOperation <= MethodInvocation sockaddr MethodInvocation length path MemberReference path realSize BlockStatement ThrowStatement MethodInvocation runtime BinaryOperation + BinaryOperation + Literal "too long socket path " BinaryOperation - MethodInvocation sockaddr MethodInvocation length path Literal 1 Literal newArgumentError StatementExpression MethodInvocation sockaddr MethodInvocation MemberReference fpath set path IfStatement MemberReference server BlockStatement StatementExpression Assignment MemberReference status MethodInvocation INSTANCE MemberReference fd MemberReference sockaddr MemberReference = BlockStatement TryStatement StatementExpression Assignment MemberReference status MethodInvocation INSTANCE MemberReference fd MemberReference sockaddr MemberReference connect = CatchClause CatchClauseParameter RuntimeException e StatementExpression MethodInvocation INSTANCE MemberReference fd close ThrowStatement MemberReference e IfStatement BinaryOperation < MemberReference status Literal 0 BlockStatement StatementExpression MethodInvocation INSTANCE MemberReference fd close StatementExpression MethodInvocation MemberReference runtime MemberReference fpath rb_sys_fail IfStatement MemberReference server BlockStatement StatementExpression MethodInvocation INSTANCE MemberReference fd Literal 5 StatementExpression MethodInvocation MemberReference runtime init_sock IfStatement MemberReference server BlockStatement StatementExpression MethodInvocation openFile MemberReference fpath setPath	1
MethodDeclaration Modifier protected ReferenceType Frame pre FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType RubyModule FormalParameter ReferenceType ReturnStatement MethodInvocation context MemberReference MemberReference	0
MethodDeclaration Modifier public static ReferenceType JavaConstructor create FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType Constructor TypeArgument ? constructor ReturnStatement ClassCreator ReferenceType JavaConstructor MemberReference runtime MemberReference constructor	0
MethodDeclaration Modifier public BasicType int read FormalParameter ReferenceType ByteBuffer dst IOException ReturnStatement MethodInvocation MemberReference read MemberReference dst read	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal "call" Literal "[]" ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Block block ReturnStatement MethodInvocation method MemberReference context MemberReference receiver MemberReference implementationModule MemberReference methodName MemberReference block call	0
MethodDeclaration Modifier private static BasicType boolean seqtest FormalParameter ReferenceType Object a FormalParameter BasicType int lo FormalParameter BasicType int hi FormalParameter ReferenceType Comparator c LocalVariableDeclaration BasicType int VariableDeclarator i BinaryOperation + MemberReference lo Literal 1 VariableDeclarator j BinaryOperation - MemberReference hi Literal 2 WhileStatement BinaryOperation && BinaryOperation < MemberReference i MemberReference j BinaryOperation <= MethodInvocation c MemberReference ArraySelector MemberReference i a MemberReference ArraySelector BinaryOperation + MemberReference i Literal 1 a compare Literal 0 StatementExpression MemberReference ++ i IfStatement BinaryOperation != MemberReference i MemberReference j BlockStatement ReturnStatement Literal false StatementExpression MethodInvocation MemberReference a MemberReference lo MemberReference hi MemberReference c ReturnStatement Literal true	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal Literal ReferenceType IRubyObject LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator c MethodInvocation getc IfStatement MethodInvocation c isNil ThrowStatement MethodInvocation MethodInvocation newEOFError getRuntime ReturnStatement MemberReference c	1
MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType FormalParameter ReferenceType Block ReferenceType Type type FormalParameter ReferenceType Block unusedBlock ReturnStatement MethodInvocation MemberReference context MemberReference arg0 MemberReference arg1 MemberReference MemberReference type call	0
MethodDeclaration Modifier public static ReferenceType RubyString FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ByteList bytes ReturnStatement ClassCreator ReferenceType RubyString MemberReference runtime MethodInvocation runtime getString MemberReference bytes Literal false	0
MethodDeclaration Modifier public BasicType int ReturnStatement Literal 1	0
MethodDeclaration Modifier public ReferenceType String getCurrentDirectory ReturnStatement MemberReference	0
MethodDeclaration Modifier public BasicType float FormalParameter BasicType float f ReturnStatement MethodInvocation vri MemberReference f	0
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType RubyClass ReturnStatement ClassCreator ReferenceType MemberReference runtime MemberReference	0
MethodDeclaration Modifier public ReferenceType RubyClass getDir ReturnStatement MemberReference	0
MethodDeclaration Modifier public synchronized activate FormalParameter ReferenceType join FormalParameter ReferenceType reaction FormalParameter ReferenceType Object args StatementExpression Assignment This MemberReference join MemberReference join = StatementExpression Assignment This MemberReference reaction MemberReference reaction = StatementExpression Assignment This MemberReference args MemberReference args = StatementExpression MethodInvocation notifyAll	0
MethodDeclaration Modifier private StatementExpression Assignment MemberReference standardError MethodInvocation Literal MemberReference defineClassIfAllowed = StatementExpression Assignment MemberReference MethodInvocation Literal MemberReference standardError defineClassIfAllowed = StatementExpression Assignment MemberReference MethodInvocation Literal MemberReference standardError defineClassIfAllowed = StatementExpression Assignment MemberReference scriptError MethodInvocation Literal MemberReference defineClassIfAllowed = StatementExpression Assignment MemberReference MethodInvocation Literal MemberReference standardError defineClassIfAllowed = StatementExpression Assignment MemberReference MethodInvocation Literal MemberReference defineClassIfAllowed = IfStatement MethodInvocation profile Literal "NameError" allowClass BlockStatement StatementExpression Assignment MemberReference MethodInvocation This MemberReference standardError = StatementExpression Assignment MemberReference MethodInvocation This MemberReference = IfStatement MethodInvocation profile Literal allowClass BlockStatement StatementExpression Assignment MemberReference MethodInvocation This MemberReference = IfStatement MethodInvocation profile Literal allowClass BlockStatement StatementExpression Assignment MemberReference MethodInvocation This MemberReference = IfStatement MethodInvocation profile Literal allowClass BlockStatement StatementExpression Assignment MemberReference MethodInvocation This MemberReference standardError = IfStatement MethodInvocation profile Literal allowClass BlockStatement StatementExpression Assignment MemberReference MethodInvocation This MemberReference createClass = IfStatement MethodInvocation profile Literal allowClass BlockStatement StatementExpression Assignment MemberReference MethodInvocation This MemberReference standardError = StatementExpression Assignment MemberReference fatal MethodInvocation Literal MemberReference defineClassIfAllowed = StatementExpression Assignment MemberReference MethodInvocation Literal MemberReference defineClassIfAllowed = StatementExpression Assignment MemberReference MethodInvocation Literal MemberReference standardError defineClassIfAllowed = StatementExpression Assignment MemberReference argumentError MethodInvocation Literal MemberReference standardError defineClassIfAllowed = StatementExpression Assignment MemberReference MethodInvocation Literal MemberReference standardError defineClassIfAllowed = StatementExpression Assignment MemberReference MethodInvocation Literal MemberReference defineClassIfAllowed = StatementExpression Assignment MemberReference syntaxError MethodInvocation Literal MemberReference scriptError defineClassIfAllowed = StatementExpression Assignment MemberReference MethodInvocation Literal MemberReference scriptError defineClassIfAllowed = StatementExpression Assignment MemberReference MethodInvocation Literal MemberReference scriptError defineClassIfAllowed = StatementExpression Assignment MemberReference MethodInvocation Literal MemberReference standardError defineClassIfAllowed = StatementExpression Assignment MemberReference MethodInvocation Literal MemberReference defineClassIfAllowed = StatementExpression Assignment MemberReference MethodInvocation Literal MemberReference standardError defineClassIfAllowed = StatementExpression Assignment MemberReference MethodInvocation Literal MemberReference defineClassIfAllowed = StatementExpression Assignment MemberReference MethodInvocation Literal MemberReference standardError defineClassIfAllowed = StatementExpression Assignment MemberReference MethodInvocation Literal MemberReference defineClassIfAllowed = StatementExpression Assignment MemberReference MethodInvocation Literal MemberReference standardError defineClassIfAllowed = StatementExpression Assignment MemberReference MethodInvocation Literal MemberReference standardError defineClassIfAllowed = StatementExpression Assignment MemberReference MethodInvocation Literal MemberReference defineClassIfAllowed = IfStatement MethodInvocation is1_9 BlockStatement IfStatement MethodInvocation profile Literal "EncodingError" allowClass BlockStatement StatementExpression Assignment MemberReference encodingError MethodInvocation Literal "EncodingError" MemberReference standardError MethodInvocation standardError getAllocator defineClass = StatementExpression Assignment MemberReference MethodInvocation Literal MemberReference encodingError MethodInvocation encodingError getAllocator MemberReference defineClassUnder = StatementExpression MethodInvocation	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "+" ElementValuePair required Literal 1 ReferenceType IRubyObject op_plus FormalParameter ReferenceType IRubyObject other LocalVariableDeclaration BasicType long VariableDeclarator time MethodInvocation IfStatement BinaryOperation instanceof MemberReference other ReferenceType RubyTime BlockStatement ThrowStatement MethodInvocation MethodInvocation Literal "time + time ?" newTypeError getRuntime LocalVariableDeclaration BasicType long VariableDeclarator MethodInvocation Math BinaryOperation * MethodInvocation RubyNumeric MemberReference other num2dbl Literal 1000000 round LocalVariableDeclaration BasicType long VariableDeclarator micro BinaryOperation % MemberReference Literal 1000 StatementExpression Assignment MemberReference BinaryOperation / MemberReference Literal 1000 = StatementExpression Assignment MemberReference time MemberReference += IfStatement BinaryOperation >= BinaryOperation + MethodInvocation MemberReference micro Literal 1000 BlockStatement StatementExpression MemberReference ++ time StatementExpression Assignment MemberReference micro BinaryOperation - BinaryOperation + MethodInvocation MemberReference micro Literal 1000 = BlockStatement StatementExpression Assignment MemberReference micro BinaryOperation + MethodInvocation MemberReference micro = LocalVariableDeclaration ReferenceType RubyTime VariableDeclarator ClassCreator ReferenceType RubyTime MethodInvocation getRuntime MethodInvocation getMetaClass StatementExpression Assignment MemberReference dt ClassCreator MethodInvocation MethodInvocation dt getZone ReferenceType DateTime MemberReference time = StatementExpression MethodInvocation MemberReference micro setUSec ReturnStatement MemberReference	1
MethodDeclaration Modifier static protected BasicType boolean FormalParameter ReferenceType IRubyObject object ReturnStatement BinaryOperation != MethodInvocation object getMetaClass Literal null	0
MethodDeclaration Modifier public Annotation Override ReferenceType Node setIterNode FormalParameter ReferenceType Node ReturnStatement ClassCreator ReferenceType MethodInvocation getPosition MethodInvocation getName MethodInvocation getArgsNode Cast ReferenceType IterNode MemberReference	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ReferenceType RubyBoolean ReturnStatement MethodInvocation MethodInvocation MethodInvocation MethodInvocation javaClass newBoolean getRuntime	1
MethodDeclaration Modifier public Annotation Override FormalParameter ReferenceType IRubyObject clone StatementExpression SuperMethodInvocation MemberReference clone LocalVariableDeclaration ReferenceType VariableDeclarator exception Cast ReferenceType MemberReference clone StatementExpression Assignment MemberReference exception name MemberReference name =	0
MethodDeclaration Modifier public ReferenceType DynamicScope FormalParameter BasicType int n LocalVariableDeclaration ReferenceType DynamicScope VariableDeclarator scope This ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference n MemberReference ++ i BlockStatement IfStatement BinaryOperation != MemberReference scope Literal null BlockStatement StatementExpression Assignment MemberReference scope MethodInvocation scope = BlockStatement BreakStatement ReturnStatement MemberReference scope	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType Node childNodes ReturnStatement MemberReference EMPTY_LIST	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject real FormalParameter ReferenceType ThreadContext context ReturnStatement This	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MethodInvocation ruby MethodInvocation getInstanceConfig MethodInvocation get	0
MethodDeclaration Modifier public ReferenceType IRubyObject convert FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType Object object IfStatement BinaryOperation == MemberReference object Literal null ReturnStatement MethodInvocation runtime getNil ReturnStatement MethodInvocation RubyFixnum MemberReference runtime Cast ReferenceType Integer MemberReference object newFixnum	1
MethodDeclaration Modifier public ReferenceType NodeType getNodeType ReturnStatement MemberReference NodeType DSTRNODE	0
MethodDeclaration Modifier public ReferenceType IRubyObject step FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType Block block ReturnStatement MethodInvocation MemberReference context MemberReference arg0 MethodInvocation RubyFixnum MethodInvocation context getRuntime one MemberReference block step	0
MethodDeclaration Modifier public ReferenceType ISourcePosition getPosition FormalParameter ReferenceType ISourcePosition IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference lastPosition MemberReference = ReturnStatement MemberReference lastPosition ReturnStatement MethodInvocation getPosition	0
MethodDeclaration Modifier public Annotation Override IfStatement BinaryOperation != MemberReference currentLoopLabels Literal null BlockStatement StatementExpression MethodInvocation IfStatement MemberReference BlockStatement StatementExpression MethodInvocation Literal MethodInvocation ClassReference ReferenceType IRubyObject sig invokeUtilityMethod BlockStatement StatementExpression MethodInvocation StatementExpression MethodInvocation Literal MethodInvocation ClassReference ReferenceType IRubyObject ClassReference ReferenceType Ruby sig invokeUtilityMethod	0
MethodDeclaration * public Operand IR_Scope * final SClassNode sclassNode = * CompilerCallback receiverCallback = new * public * * * * CompilerCallback bodyCallback = new * public * if != null) * * } else * * * * * null, null, * */ Modifier public ReferenceType Operand FormalParameter ReferenceType ClassVarNode node FormalParameter ReferenceType IR_Scope s LocalVariableDeclaration ReferenceType Variable VariableDeclarator ret MethodInvocation s getNewVariable StatementExpression MethodInvocation s ClassCreator ReferenceType MemberReference ret ClassCreator ReferenceType MetaObject MemberReference s MethodInvocation node getName addInstr ReturnStatement MemberReference ret	0
MethodDeclaration Modifier public FormalParameter ReferenceType BlockNode blockNode IfStatement MethodInvocation warnings isVerbose BlockStatement LocalVariableDeclaration ReferenceType Node VariableDeclarator MethodInvocation blockNode getLast ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation blockNode size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType Node VariableDeclarator currentNode MethodInvocation blockNode MemberReference i get IfStatement BinaryOperation != MemberReference MemberReference currentNode BlockStatement StatementExpression MethodInvocation MemberReference currentNode checkUselessStatement	0
MethodDeclaration Modifier public ReferenceType IRubyObject decode FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ByteBuffer enc IfStatement BinaryOperation == MemberReference Platform BYTE_ORDER MemberReference Platform BIG_ENDIAN ReturnStatement MethodInvocation runtime MethodInvocation MemberReference enc newFixnum ReturnStatement MethodInvocation runtime MethodInvocation MemberReference enc newFixnum	1
MethodDeclaration pre FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule implementer FormalParameter ReferenceType String name FormalParameter ReferenceType Block block FormalParameter ReferenceType scope FormalParameter ReferenceType StatementExpression MethodInvocation context MemberReference implementer MemberReference scope	0
MethodDeclaration Modifier private FormalParameter ReferenceType Colon2Node node StatementExpression MethodInvocation sb MethodInvocation MethodInvocation node getName append Literal " " append	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "exit!" ElementValuePair optional Literal 1 ElementValuePair module Literal true ElementValuePair visibility MemberReference Visibility PRIVATE ReferenceType IRubyObject exit_bang FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args ReturnStatement MethodInvocation RubyKernel MemberReference recv MemberReference args exit_bang	1
MethodDeclaration Modifier public final get FormalParameter BasicType long offset FormalParameter BasicType byte dst FormalParameter BasicType int off FormalParameter BasicType int len StatementExpression MethodInvocation BinaryOperation + MemberReference address MemberReference offset MemberReference dst MemberReference off MemberReference len	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal Literal Literal ElementValuePair meta Literal true ReferenceType Buffer FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject ReturnStatement MethodInvocation MemberReference context MemberReference recv MemberReference Literal 1 MemberReference OUT	0
MethodDeclaration Modifier private final FormalParameter BasicType long beg FormalParameter BasicType long len FormalParameter ReferenceType IRubyObject rpl IfStatement BinaryOperation < MemberReference len Literal 0 ThrowStatement MethodInvocation MethodInvocation BinaryOperation + BinaryOperation + Literal "negative length (" MemberReference len Literal ")" newIndexError getRuntime IfStatement BinaryOperation && BinaryOperation < MemberReference beg Literal 0 BinaryOperation < Assignment MemberReference beg MemberReference realLength += Literal 0 ThrowStatement MethodInvocation MethodInvocation BinaryOperation + BinaryOperation + Literal "index " BinaryOperation - MemberReference beg MemberReference realLength Literal " out of array" newIndexError getRuntime LocalVariableDeclaration Modifier final ReferenceType RubyArray VariableDeclarator rplArr LocalVariableDeclaration Modifier final BasicType int VariableDeclarator rlen IfStatement BinaryOperation || BinaryOperation == MemberReference rpl Literal null MethodInvocation rpl isNil BlockStatement StatementExpression Assignment MemberReference rplArr Literal null = StatementExpression Assignment MemberReference rlen Literal 0 = BlockStatement StatementExpression Assignment MemberReference rplArr MethodInvocation MemberReference rpl aryToAry = StatementExpression Assignment MemberReference rlen MemberReference rplArr realLength = StatementExpression MethodInvocation modify LocalVariableDeclaration BasicType int VariableDeclarator valuesLength BinaryOperation - MemberReference values length MemberReference begin IfStatement BinaryOperation >= MemberReference beg MemberReference realLength BlockStatement StatementExpression Assignment MemberReference len BinaryOperation + MemberReference beg MemberReference rlen = IfStatement BinaryOperation >= MemberReference len MemberReference valuesLength StatementExpression MethodInvocation Cast BasicType int MemberReference len MemberReference valuesLength spliceRealloc TryStatement StatementExpression MethodInvocation RuntimeHelpers MemberReference values BinaryOperation + MemberReference begin MemberReference realLength BinaryOperation + MemberReference begin Cast BasicType int MemberReference beg MethodInvocation getRuntime fillNil CatchClause CatchClauseParameter ArrayIndexOutOfBoundsException e StatementExpression MethodInvocation concurrentModification StatementExpression Assignment MemberReference realLength Cast BasicType int MemberReference len = BlockStatement IfStatement BinaryOperation > BinaryOperation + MemberReference beg MemberReference len MemberReference realLength StatementExpression Assignment MemberReference len BinaryOperation - MemberReference realLength MemberReference beg = LocalVariableDeclaration BasicType int VariableDeclarator alen BinaryOperation - BinaryOperation + MemberReference realLength MemberReference rlen Cast BasicType int MemberReference len IfStatement BinaryOperation >= MemberReference alen MemberReference valuesLength StatementExpression MethodInvocation MemberReference alen MemberReference valuesLength spliceRealloc IfStatement BinaryOperation != MemberReference len MemberReference rlen BlockStatement TryStatement StatementExpression MethodInvocation System MemberReference values BinaryOperation + MemberReference begin Cast BasicType int BinaryOperation + MemberReference beg MemberReference len MemberReference values BinaryOperation + BinaryOperation + MemberReference begin Cast BasicType int MemberReference beg MemberReference rlen BinaryOperation - MemberReference realLength Cast BasicType int BinaryOperation + MemberReference beg MemberReference len arraycopy CatchClause CatchClauseParameter ArrayIndexOutOfBoundsException e StatementExpression MethodInvocation concurrentModification StatementExpression Assignment MemberReference realLength MemberReference alen = IfStatement BinaryOperation > MemberReference rlen Literal 0 BlockStatement TryStatement StatementExpression MethodInvocation System MemberReference rplArr values MemberReference rplArr begin MemberReference values BinaryOperation + MemberReference begin Cast BasicType int MemberReference beg MemberReference rlen arraycopy CatchClause CatchClauseParameter ArrayIndexOutOfBoundsException e StatementExpression MethodInvocation concurrentModification	1
MethodDeclaration Modifier public BasicType boolean equals FormalParameter ReferenceType Object obj IfStatement BinaryOperation instanceof MemberReference obj ReferenceType BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator key Cast ReferenceType MemberReference obj ReturnStatement BinaryOperation && MethodInvocation name MemberReference key name equals MethodInvocation Arrays MemberReference arguments MemberReference key arguments equals ReturnStatement Literal false	0
MethodDeclaration Modifier final public static BasicType long int64Value FormalParameter ReferenceType IRubyObject parameter ReturnStatement MethodInvocation MemberReference parameter longValue	1
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation exception MethodInvocation interpreter getNil LocalVariableDeclaration ReferenceType String VariableDeclarator lines MethodInvocation printError StatementExpression MethodInvocation Literal 0 MemberReference lines length assertEquals	0
MethodDeclaration Modifier public ReferenceType Iterator iterator ReturnStatement MethodInvocation	0
MethodDeclaration Modifier public BasicType boolean isEmpty ReturnStatement BinaryOperation == MemberReference count Literal 0	0
MethodDeclaration install FormalParameter ReferenceType RubyModule proxy IfStatement MethodInvocation BlockStatement LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator singleton MethodInvocation proxy LocalVariableDeclaration ReferenceType DynamicMethod VariableDeclarator method ClassCreator ReferenceType MemberReference singleton MemberReference methods StatementExpression MethodInvocation singleton MemberReference name MemberReference method addMethod IfStatement BinaryOperation && BinaryOperation != MemberReference aliases Literal null MethodInvocation isPublic BlockStatement StatementExpression MethodInvocation singleton MemberReference aliases This MemberReference name StatementExpression Assignment MemberReference aliases Literal null =	0
MethodDeclaration Modifier public static marshalTo FormalParameter ReferenceType RubyStruct FormalParameter ReferenceType output java.io.IOException StatementExpression MethodInvocation output MemberReference StatementExpression MethodInvocation output Literal 'S' MethodInvocation getMetaClass LocalVariableDeclaration ReferenceType List VariableDeclarator members Cast ReferenceType RubyArray MethodInvocation MethodInvocation Literal "__member__" getInternalVariable StatementExpression MethodInvocation output MethodInvocation members size writeInt ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation members size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType RubySymbol VariableDeclarator name Cast ReferenceType RubySymbol MethodInvocation members MemberReference i get StatementExpression MethodInvocation output MemberReference name StatementExpression MethodInvocation output MemberReference ArraySelector MemberReference i values	0
MethodDeclaration Modifier public FormalParameter ReferenceType Thread thread FormalParameter ReferenceType RubyThread rubyThread StatementExpression MethodInvocation MemberReference rubyThread StatementExpression MethodInvocation MemberReference rubyThread MemberReference put StatementExpression MethodInvocation MemberReference thread MemberReference rubyThread put	0
MethodDeclaration Modifier public ReferenceType RubyClass getErrno FormalParameter BasicType int n ReturnStatement MethodInvocation MemberReference n get	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "**" ElementValuePair required Literal 1 ReferenceType IRubyObject op_pow FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject other SwitchStatement MethodInvocation other MemberReference index getMetaClass SwitchStatementCase MemberReference ClassIndex FIXNUM MemberReference ClassIndex BIGNUM MemberReference ClassIndex FLOAT ReturnStatement MethodInvocation RubyFloat MethodInvocation getRuntime MethodInvocation Math MemberReference value Cast ReferenceType RubyNumeric MemberReference other pow newFloat SwitchStatementCase ReturnStatement MethodInvocation MemberReference context Literal "**" MemberReference other coerceBin	1
MethodDeclaration Modifier protected BasicType boolean ReturnStatement Literal false	0
MethodDeclaration Modifier public FormalParameter ReferenceType IRubyObject debug StatementExpression Assignment This MemberReference debug MemberReference debug =	0
MethodDeclaration Modifier public BasicType int exitValue ReturnStatement MemberReference result	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair required Literal 1 ElementValuePair meta Literal true ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject receiver FormalParameter ReferenceType IRubyObject value StatementExpression MethodInvocation receiver MethodInvocation getThreadService MethodInvocation MethodInvocation value isTrue getRuntime ReturnStatement MemberReference value	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair frame Literal true ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter Modifier final ReferenceType Block block ReturnStatement TernaryExpression MethodInvocation block isGiven MethodInvocation MemberReference context MemberReference self MemberReference block MethodInvocation MethodInvocation context getRuntime MemberReference self Literal enumeratorize	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "index" ElementValuePair reads MemberReference BACKREF ElementValuePair writes MemberReference BACKREF ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType IRubyObject index FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 LocalVariableDeclaration BasicType int VariableDeclarator pos MethodInvocation RubyNumeric MemberReference arg1 num2int LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime IfStatement BinaryOperation < MemberReference pos Literal 0 BlockStatement StatementExpression Assignment MemberReference pos MemberReference value realSize += IfStatement BinaryOperation < MemberReference pos Literal 0 BlockStatement IfStatement BinaryOperation instanceof MemberReference arg0 ReferenceType RubyRegexp BlockStatement StatementExpression MethodInvocation context MethodInvocation MethodInvocation runtime getNil setBackRef getCurrentScope ReturnStatement MethodInvocation runtime getNil ReturnStatement MethodInvocation MemberReference runtime MemberReference context MemberReference arg0 MemberReference pos	0
MethodDeclaration Modifier protected FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public compileFor FormalParameter ReferenceType Node node FormalParameter ReferenceType BodyCompiler context FormalParameter BasicType boolean expr LocalVariableDeclaration Modifier final ReferenceType ForNode VariableDeclarator Cast ReferenceType ForNode MemberReference node LocalVariableDeclaration ReferenceType CompilerCallback VariableDeclarator receiverCallback ClassCreator ReferenceType CompilerCallback MethodDeclaration Modifier public call FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation MethodInvocation getIterNode MemberReference context Literal true compile LocalVariableDeclaration Modifier final ReferenceType CompilerCallback VariableDeclarator closureArg ClassCreator ReferenceType CompilerCallback MethodDeclaration Modifier public call FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation MemberReference MemberReference context StatementExpression MethodInvocation context MethodInvocation Literal MemberReference receiverCallback Literal null MemberReference CallType NORMAL MemberReference closureArg Literal true invokeDynamic getInvocationCompiler IfStatement MemberReference ! expr StatementExpression MethodInvocation context consumeCurrentValue	1
MethodDeclaration Modifier private ReferenceType Script FormalParameter ReferenceType Node node FormalParameter ReferenceType JRubyClassLoader classLoader LocalVariableDeclaration ReferenceType Script VariableDeclarator script Literal null TryStatement LocalVariableDeclaration ReferenceType String VariableDeclarator filename MethodInvocation node MethodInvocation getFile getPosition LocalVariableDeclaration ReferenceType String VariableDeclarator classname MethodInvocation JavaNameMangler MemberReference filename mangledFilenameForStartupClasspath LocalVariableDeclaration ReferenceType ASTInspector VariableDeclarator inspector ClassCreator ReferenceType ASTInspector StatementExpression MethodInvocation inspector MemberReference node inspect LocalVariableDeclaration ReferenceType VariableDeclarator asmCompiler ClassCreator ReferenceType MemberReference classname MemberReference filename LocalVariableDeclaration ReferenceType VariableDeclarator compiler MethodInvocation config IfStatement MethodInvocation config BlockStatement StatementExpression MethodInvocation compiler MemberReference node MemberReference asmCompiler MemberReference inspector Literal false Literal false StatementExpression MethodInvocation asmCompiler MemberReference System out BlockStatement StatementExpression MethodInvocation compiler MemberReference node MemberReference asmCompiler MemberReference inspector Literal true Literal false StatementExpression Assignment MemberReference script Cast ReferenceType Script MethodInvocation asmCompiler MethodInvocation newInstance MemberReference classLoader loadClass = IfStatement MethodInvocation config BlockStatement StatementExpression MethodInvocation System.err BinaryOperation + Literal " MethodInvocation node MethodInvocation getFile getPosition println CatchClause CatchClauseParameter NotCompilableException nce IfStatement BinaryOperation || MethodInvocation config isJitLoggingVerbose MethodInvocation config isDebug BlockStatement StatementExpression MethodInvocation System.err BinaryOperation + Literal "Error -- Not compileable: " MethodInvocation nce getMessage println StatementExpression MethodInvocation nce printStackTrace BlockStatement StatementExpression MethodInvocation System.err Literal "Error, could not compile; pass -d or -J-Djruby.jit.logging.verbose=true for more details" println CatchClause CatchClauseParameter ClassNotFoundException e IfStatement BinaryOperation || MethodInvocation config isJitLoggingVerbose MethodInvocation config isDebug BlockStatement StatementExpression MethodInvocation System.err BinaryOperation + Literal "Error -- Not compileable: " MethodInvocation e getMessage println StatementExpression MethodInvocation e printStackTrace BlockStatement StatementExpression MethodInvocation System.err Literal "Error, could not compile; pass -d or -J-Djruby.jit.logging.verbose=true for more details" println CatchClause CatchClauseParameter InstantiationException e IfStatement BinaryOperation || MethodInvocation config isJitLoggingVerbose MethodInvocation config isDebug BlockStatement StatementExpression MethodInvocation System.err BinaryOperation + Literal "Error -- Not compileable: " MethodInvocation e getMessage println StatementExpression MethodInvocation e printStackTrace BlockStatement StatementExpression MethodInvocation System.err Literal "Error, could not compile; pass -d or -J-Djruby.jit.logging.verbose=true for more details" println CatchClause CatchClauseParameter IllegalAccessException e IfStatement BinaryOperation || MethodInvocation config isJitLoggingVerbose MethodInvocation config isDebug BlockStatement StatementExpression MethodInvocation System.err BinaryOperation + Literal "Error -- Not compileable: " MethodInvocation e getMessage println StatementExpression MethodInvocation e printStackTrace BlockStatement StatementExpression MethodInvocation System.err Literal "Error, could not compile; pass -d or -J-Djruby.jit.logging.verbose=true for more details" println CatchClause CatchClauseParameter Throwable t IfStatement BinaryOperation || MethodInvocation config isJitLoggingVerbose MethodInvocation config isDebug BlockStatement StatementExpression MethodInvocation System.err BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "could not " MethodInvocation node MethodInvocation getFile getPosition Literal " because of: \"" MethodInvocation t getMessage Literal "\"" println StatementExpression MethodInvocation t printStackTrace BlockStatement StatementExpression MethodInvocation System.err Literal "Error, could not compile; pass -d or -J-Djruby.jit.logging.verbose=true for more details" println ReturnStatement MemberReference script	1
MethodDeclaration Modifier public ReferenceType IRubyObject ReturnStatement MethodInvocation MethodInvocation getRuntime to_s	0
MethodDeclaration Modifier public Annotation Override ReferenceType RubyClass ReturnStatement MemberReference metaClass	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair optional Literal 1 ElementValuePair module Literal true ElementValuePair visibility MemberReference PRIVATE ReferenceType IRubyObject abort FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args IfStatement BinaryOperation == MemberReference args length Literal 1 BlockStatement StatementExpression MethodInvocation context MethodInvocation getGlobalVariables MethodInvocation Literal get MethodInvocation MemberReference context Literal MemberReference ArraySelector Literal 0 args callMethod getRuntime ThrowStatement ClassCreator ReferenceType MainExitException Literal 1 Literal true	0
MethodDeclaration Modifier public static ReferenceType IRubyObject rid FormalParameter ReferenceType Ruby runtime ReturnStatement MethodInvocation MemberReference runtime gid	0
MethodDeclaration Modifier public static ReferenceType IRubyObject int_pow FormalParameter ReferenceType ThreadContext context FormalParameter BasicType long x FormalParameter BasicType long y LocalVariableDeclaration BasicType boolean VariableDeclarator neg BinaryOperation < MemberReference x Literal 0 LocalVariableDeclaration BasicType long VariableDeclarator z Literal 1 IfStatement MemberReference neg StatementExpression Assignment MemberReference x MemberReference - x = IfStatement BinaryOperation != BinaryOperation & MemberReference y Literal 1 Literal 0 BlockStatement StatementExpression Assignment MemberReference z MemberReference x = BlockStatement StatementExpression Assignment MemberReference neg Literal false = StatementExpression Assignment MemberReference y Literal ~ 1 &= LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime DoStatement BinaryOperation != MemberReference -- y Literal 0 BlockStatement WhileStatement BinaryOperation == BinaryOperation % MemberReference y Literal 2 Literal 0 BlockStatement IfStatement MethodInvocation ! MemberReference x BlockStatement LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator v MethodInvocation RubyBignum MethodInvocation MemberReference context MethodInvocation RubyFixnum MemberReference runtime MemberReference y newFixnum op_pow MemberReference runtime MethodInvocation RubyBignum MethodInvocation RubyFixnum MemberReference runtime MemberReference x newFixnum fix2big newBignum IfStatement BinaryOperation != MemberReference z Literal 1 StatementExpression Assignment MemberReference v MethodInvocation RubyBignum MethodInvocation MemberReference context MemberReference v op_mul MemberReference runtime MethodInvocation RubyBignum MethodInvocation RubyFixnum MemberReference runtime TernaryExpression MemberReference neg MemberReference - z MemberReference z newFixnum fix2big newBignum = ReturnStatement MemberReference v StatementExpression Assignment MemberReference x MemberReference x *= StatementExpression Assignment MemberReference y Literal 1 >>= LocalVariableDeclaration BasicType long VariableDeclarator xz BinaryOperation * MemberReference x MemberReference x IfStatement BinaryOperation != BinaryOperation / MemberReference xz MemberReference x MemberReference z BlockStatement LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator v MethodInvocation RubyBignum MethodInvocation MemberReference context MethodInvocation RubyFixnum MemberReference runtime MemberReference y newFixnum op_pow MemberReference runtime MethodInvocation RubyBignum MethodInvocation RubyFixnum MemberReference runtime MemberReference x newFixnum fix2big newBignum IfStatement BinaryOperation != MemberReference z Literal 1 StatementExpression Assignment MemberReference v MethodInvocation RubyBignum MethodInvocation MemberReference context MemberReference v op_mul MemberReference runtime MethodInvocation RubyBignum MethodInvocation RubyFixnum MemberReference runtime TernaryExpression MemberReference neg MemberReference - z MemberReference z newFixnum fix2big newBignum = ReturnStatement MemberReference v StatementExpression Assignment MemberReference z MemberReference xz = IfStatement MemberReference neg StatementExpression Assignment MemberReference z MemberReference - z = ReturnStatement MethodInvocation RubyFixnum MemberReference runtime MemberReference z newFixnum	1
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement BinaryOperation + MemberReference Literal ":"	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject yield FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject value FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule FormalParameter BasicType boolean aValue FormalParameter ReferenceType FormalParameter ReferenceType Type type ThrowStatement MethodInvocation context MethodInvocation MemberReference NOREASON MemberReference value Literal "yield out of getRuntime	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "import" ElementValuePair module Literal true ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject name FormalParameter ReferenceType IRubyObject as LocalVariableDeclaration ReferenceType String VariableDeclarator className MethodInvocation name toString TryStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator cls MethodInvocation MethodInvocation context MethodInvocation getJRubyClassLoader getRuntime MemberReference className findClass LocalVariableDeclaration ReferenceType RubyModule VariableDeclarator namespace IfStatement BinaryOperation instanceof MemberReference self ReferenceType RubyModule BlockStatement StatementExpression Assignment MemberReference namespace Cast ReferenceType RubyModule MemberReference self = BlockStatement StatementExpression Assignment MemberReference namespace MethodInvocation self MethodInvocation getRealClass getMetaClass = StatementExpression MethodInvocation namespace MethodInvocation as toString MethodInvocation MethodInvocation context getRuntime MemberReference cls defineConstant ReturnStatement MethodInvocation context MethodInvocation getNil getRuntime CatchClause CatchClauseParameter Exception e IfStatement MethodInvocation context MethodInvocation getDebug MethodInvocation isTrue getRuntime BlockStatement StatementExpression MethodInvocation e printStackTrace ThrowStatement MethodInvocation context MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "Could not find class " MemberReference className Literal ", exception: " MemberReference e newTypeError getRuntime	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context LocalVariableDeclaration ReferenceType RubyString VariableDeclarator str MethodInvocation MethodInvocation context getRuntime StatementExpression MethodInvocation str MemberReference context ReturnStatement MemberReference str	0
MethodDeclaration Modifier public ReferenceType Node ReturnStatement MemberReference	0
MethodDeclaration Modifier private static swap FormalParameter ReferenceType Object a FormalParameter BasicType int i FormalParameter BasicType int j LocalVariableDeclaration ReferenceType Object VariableDeclarator t MemberReference ArraySelector MemberReference i a StatementExpression Assignment MemberReference ArraySelector MemberReference i a MemberReference ArraySelector MemberReference j a = StatementExpression Assignment MemberReference ArraySelector MemberReference j a MemberReference t =	0
MethodDeclaration Modifier public ReferenceType String getUnicodeValue TryStatement ReturnStatement ClassCreator ReferenceType String MemberReference value bytes MemberReference value begin MemberReference value realSize Literal "UTF-8" CatchClause CatchClauseParameter Exception e ThrowStatement ClassCreator ReferenceType RuntimeException Literal "Something's with encodings" MemberReference e	1
MethodDeclaration Modifier public ReferenceType Map FormalParameter ReferenceType Ruby runtime LocalVariableDeclaration ReferenceType Map VariableDeclarator envs Literal null IfStatement BinaryOperation != MethodInvocation runtime MethodInvocation getInstanceConfig Literal null BlockStatement ReturnStatement MethodInvocation MemberReference runtime MethodInvocation runtime MethodInvocation MethodInvocation entrySet getInstanceConfig getAsMapOfRubyStrings IfStatement MethodInvocation Ruby isSecurityRestricted StatementExpression Assignment MemberReference envs ClassCreator ReferenceType HashMap = BlockStatement LocalVariableDeclaration ReferenceType Map VariableDeclarator variables MethodInvocation System StatementExpression Assignment MemberReference envs MethodInvocation MemberReference runtime MethodInvocation variables entrySet getAsMapOfRubyStrings = ReturnStatement MemberReference envs	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "index" ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType IRubyObject index FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject expected LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator key MethodInvocation MemberReference context MemberReference expected ReturnStatement TernaryExpression BinaryOperation != MemberReference key Literal null MemberReference key MethodInvocation context MethodInvocation getNil getRuntime	0
MethodDeclaration Modifier public BasicType int getOffset ReturnStatement TernaryExpression BinaryOperation <= MemberReference offset Literal 0 Literal 0 MemberReference offset	0
MethodDeclaration Modifier private BasicType int FormalParameter ReferenceType IRubyObject val LocalVariableDeclaration ReferenceType String VariableDeclarator str MethodInvocation val MethodInvocation toString convertToString LocalVariableDeclaration BasicType int VariableDeclarator res Literal 0 StatementExpression Assignment MemberReference res BinaryOperation << MethodInvocation str Literal 0 charAt Literal 24 += StatementExpression Assignment MemberReference res BinaryOperation << MethodInvocation str Literal 1 charAt Literal 16 += StatementExpression Assignment MemberReference res BinaryOperation << MethodInvocation str Literal 2 charAt Literal 8 += StatementExpression Assignment MemberReference res MethodInvocation str Literal 3 charAt += ReturnStatement MemberReference res	1
MethodDeclaration Modifier public ReferenceType RubyClass ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType IRubyObject ReturnStatement MemberReference	0
MethodDeclaration Modifier public BasicType int ReturnStatement MemberReference varTable length	0
MethodDeclaration Modifier public ReferenceType Object case505_line1938 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal Literal null = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public ReferenceType Object case457_line1742 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals MemberReference NilImplicitNode NIL assignable = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier private ReferenceType RubyArray java_methods FormalParameter ReferenceType Method methods FormalParameter BasicType boolean isStatic LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator result MethodInvocation MethodInvocation MemberReference methods length newArray getRuntime ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference methods length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType Method VariableDeclarator method MemberReference ArraySelector MemberReference i methods IfStatement BinaryOperation == MemberReference isStatic MethodInvocation Modifier MethodInvocation method getModifiers isStatic BlockStatement StatementExpression MethodInvocation result MethodInvocation JavaMethod MethodInvocation getRuntime MemberReference method create append ReturnStatement MemberReference result	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair required Literal 1 ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject ReturnStatement MethodInvocation RubyFixnum MethodInvocation context getRuntime zero	0
MethodDeclaration Modifier public ReferenceType NodeType getNodeType ReturnStatement MemberReference NodeType	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object FormalParameter ReferenceType Object foo StatementExpression MethodInvocation MemberReference MemberReference foo	0
MethodDeclaration Modifier public StatementExpression MethodInvocation MethodInvocation MemberReference visitInsn getMethodVisitor	0
MethodDeclaration Modifier public static ReferenceType String FormalParameter ReferenceType String one FormalParameter ReferenceType String two FormalParameter ReferenceType String FormalParameter ReferenceType String FormalParameter ReferenceType String FormalParameter ReferenceType String FormalParameter ReferenceType String seven ReturnStatement ArrayCreator ReferenceType String ArrayInitializer MemberReference one MemberReference two MemberReference MemberReference MemberReference MemberReference MemberReference seven	0
MethodDeclaration Modifier public ReferenceType IRubyObject evalUnder FormalParameter Modifier final ReferenceType ThreadContext context FormalParameter ReferenceType RubyModule under FormalParameter ReferenceType IRubyObject src FormalParameter ReferenceType IRubyObject file FormalParameter ReferenceType IRubyObject line ReturnStatement MethodInvocation MemberReference context MemberReference under MethodInvocation src convertToString MethodInvocation file MethodInvocation toString convertToString Cast BasicType int BinaryOperation - MethodInvocation line MethodInvocation getLongValue convertToInteger Literal 1 evalUnder	1
MethodDeclaration Modifier private FormalParameter ReferenceType String name FormalParameter ReferenceType Library IfStatement MethodInvocation profile MemberReference name BlockStatement StatementExpression MethodInvocation MemberReference name MemberReference	0
MethodDeclaration Modifier protected ReferenceType LoadServiceResource tryResourceAsIs FormalParameter ReferenceType String namePlusSuffix RaiseException LocalVariableDeclaration ReferenceType LoadServiceResource VariableDeclarator foundResource Literal null TryStatement IfStatement MethodInvocation ! Ruby isSecurityRestricted BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator reportedPath MemberReference namePlusSuffix LocalVariableDeclaration ReferenceType File VariableDeclarator actualPath IfStatement ClassCreator MethodInvocation isAbsolute ReferenceType File MemberReference reportedPath BlockStatement StatementExpression Assignment MemberReference actualPath ClassCreator ReferenceType File MethodInvocation RubyFile MethodInvocation runtime getCurrentContext MemberReference namePlusSuffix expandUserPath = BlockStatement IfStatement BinaryOperation && BinaryOperation == MethodInvocation reportedPath Literal 0 charAt Literal '.' BinaryOperation == MethodInvocation reportedPath Literal 1 charAt Literal '/' BlockStatement StatementExpression Assignment MemberReference reportedPath MethodInvocation reportedPath Literal MethodInvocation runtime getCurrentDirectory = StatementExpression Assignment MemberReference actualPath MethodInvocation JRubyFile MethodInvocation runtime getCurrentDirectory MethodInvocation RubyFile MethodInvocation runtime getCurrentContext MemberReference namePlusSuffix expandUserPath create = StatementExpression MethodInvocation Literal MethodInvocation actualPath toString debugLogTry IfStatement BinaryOperation && MethodInvocation actualPath isFile MethodInvocation actualPath canRead BlockStatement StatementExpression Assignment MemberReference foundResource ClassCreator ReferenceType LoadServiceResource MemberReference actualPath MemberReference reportedPath = StatementExpression MethodInvocation MemberReference foundResource debugLogFound CatchClause CatchClauseParameter SecurityException secEx ReturnStatement MemberReference foundResource	1
MethodDeclaration Modifier public call FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation methodCompiler	0
MethodDeclaration Modifier public Annotation Override BasicType boolean isIncluded ReturnStatement Literal true	0
MethodDeclaration Modifier public ReferenceType Object getValue ReturnStatement MemberReference constructor	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair frame Literal true ElementValuePair module Literal true ElementValuePair visibility MemberReference PRIVATE ElementValuePair reads MemberReference LASTLINE ElementValuePair writes ElementArrayValue MemberReference LASTLINE MemberReference BACKREF ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType IRubyObject split FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv ReturnStatement MethodInvocation MethodInvocation MemberReference context split MemberReference context MethodInvocation context getRuntime getLastlineString	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "close" ReferenceType IRubyObject close IOException StatementExpression MethodInvocation impl close ReturnStatement This	0
MethodDeclaration Modifier public ReferenceType RubyModule ReturnStatement MemberReference	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal Annotation Override ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context ReturnStatement MethodInvocation MemberReference context MethodInvocation MemberReference context MemberReference real MemberReference real f_mul MethodInvocation MemberReference context MemberReference image MemberReference image f_mul f_add	0
MethodDeclaration Modifier public ReferenceType RaiseException ReturnStatement MethodInvocation MethodInvocation MethodInvocation MethodInvocation getPosix getErrno Literal null newRaiseException	0
MethodDeclaration Modifier private ReferenceType CacheEntry FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType CacheEntry VariableDeclarator MethodInvocation MemberReference name get IfStatement BinaryOperation != MemberReference Literal null BlockStatement IfStatement BinaryOperation == MemberReference token MethodInvocation BlockStatement ReturnStatement MemberReference ReturnStatement Literal null	1
MethodDeclaration Modifier private BasicType boolean IOException ReturnStatement BinaryOperation == Cast ReferenceType GZIPInputStream MemberReference io Literal 0	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "to_f" ReferenceType RubyFloat to_f LocalVariableDeclaration BasicType long VariableDeclarator time MethodInvocation StatementExpression Assignment MemberReference time BinaryOperation + BinaryOperation * MemberReference time Literal 1000 MemberReference usec = ReturnStatement MethodInvocation RubyFloat MethodInvocation getRuntime BinaryOperation / MemberReference time Literal newFloat	1
MethodDeclaration Modifier public static ReferenceType IRubyObject ThrowStatement MemberReference JumpException	0
MethodDeclaration Modifier public ReferenceType IRubyObject callMethod FormalParameter ReferenceType IRubyObject receiver FormalParameter ReferenceType String methodName ReturnStatement MethodInvocation receiver MethodInvocation receiver MethodInvocation getCurrentContext getRuntime MemberReference methodName callMethod	0
MethodDeclaration Modifier public BasicType int getMax ReturnStatement MemberReference max	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal Literal ElementValuePair meta Literal true ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject port FormalParameter ReferenceType IRubyObject host ReturnStatement MethodInvocation MemberReference context MemberReference recv MethodInvocation RubyNumeric MemberReference port fix2int TernaryExpression MethodInvocation host isNil Literal null MethodInvocation host MethodInvocation toString convertToString	1
MethodDeclaration Modifier public ReferenceType IR_Class ReturnStatement MethodInvocation IR_Class Literal	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject ReturnStatement ArrayCreator ReferenceType IRubyObject ArrayInitializer MemberReference variableValueZero	0
MethodDeclaration Modifier public ReferenceType BlockArgNode getBlock ReturnStatement MemberReference	0
MethodDeclaration Modifier public cancel StatementExpression MethodInvocation channel Literal false	0
MethodDeclaration Modifier public FormalParameter ReferenceType BranchCallback FormalParameter ReferenceType BranchCallback LocalVariableDeclaration ReferenceType Label VariableDeclarator ClassCreator ReferenceType Label LocalVariableDeclaration ReferenceType Label VariableDeclarator ClassCreator ReferenceType Label StatementExpression MethodInvocation method MemberReference StatementExpression MethodInvocation This branch StatementExpression MethodInvocation method MemberReference go_to StatementExpression MethodInvocation method MemberReference label StatementExpression MethodInvocation This branch StatementExpression MethodInvocation method MemberReference label	0
MethodDeclaration Modifier public ReferenceType Object convert FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject rubyObject IfStatement MethodInvocation rubyObject Literal "to_i" respondsTo BlockStatement ReturnStatement ClassCreator ReferenceType Integer Cast BasicType int Cast ReferenceType RubyNumeric MethodInvocation rubyObject MemberReference context Literal "to_i" callMethod ReturnStatement ClassCreator ReferenceType Integer Literal 0	1
MethodDeclaration Modifier public ReferenceType getKind ReturnStatement MemberReference kind	0
MethodDeclaration Modifier public ReferenceType RaiseException newZeroDivisionError ReturnStatement MethodInvocation MethodInvocation Literal by 0" newRaiseException	0
MethodDeclaration Modifier private ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime IOException LocalVariableDeclaration ReferenceType Channel VariableDeclarator socketChannel MethodInvocation openFile MethodInvocation getDescriptor MethodInvocation getChannel getMainStream ReturnStatement MethodInvocation MemberReference runtime TernaryExpression BinaryOperation instanceof MemberReference socketChannel ReferenceType SocketChannel MethodInvocation MethodInvocation asSocket TernaryExpression BinaryOperation instanceof MemberReference socketChannel ReferenceType DatagramChannel MethodInvocation MethodInvocation asDatagramSocket Literal 0 number	1
MethodDeclaration Modifier public FormalParameter ReferenceType Label arg0 FormalParameter BasicType int arg1 FormalParameter ReferenceType Label arg2 StatementExpression MethodInvocation MethodInvocation MemberReference arg0 MemberReference arg1 MemberReference arg2 getMethodVisitor	0
MethodDeclaration Modifier public static ReferenceType RubyModule FormalParameter ReferenceType Ruby runtime LocalVariableDeclaration ReferenceType ThreadContext VariableDeclarator context MethodInvocation runtime getCurrentContext StatementExpression MethodInvocation runtime MethodInvocation MemberReference context Literal MethodInvocation runtime Literal "java" newString callMethod LocalVariableDeclaration ReferenceType RubyModule VariableDeclarator MethodInvocation runtime Literal StatementExpression MethodInvocation ClassReference ReferenceType defineAnnotatedMethods LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator MethodInvocation Literal MethodInvocation runtime getObject MethodInvocation runtime MethodInvocation getAllocator getObject defineClassUnder StatementExpression MethodInvocation MemberReference context ArrayCreator ReferenceType IRubyObject ArrayInitializer MethodInvocation runtime Literal "name" MethodInvocation runtime Literal MethodInvocation runtime Literal MethodInvocation runtime Literal StatementExpression MethodInvocation ClassReference ReferenceType defineAnnotatedMethods LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator MethodInvocation Literal MethodInvocation runtime getObject MemberReference defineClassUnder StatementExpression MethodInvocation ClassReference ReferenceType defineAnnotatedMethods LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator MethodInvocation Literal MethodInvocation runtime getObject MemberReference defineClassUnder StatementExpression MethodInvocation ClassReference ReferenceType defineAnnotatedMethods ReturnStatement MemberReference	0
MethodDeclaration Modifier private installStaticMethods FormalParameter ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType NamedInstaller methodCallbacks FormalParameter ReferenceType Class TypeArgument ? javaClass FormalParameter ReferenceType Method method FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType MethodInstaller VariableDeclarator invoker Cast ReferenceType MethodInstaller MethodInvocation methodCallbacks MemberReference name get IfStatement BinaryOperation == MemberReference invoker Literal null BlockStatement StatementExpression Assignment MemberReference invoker ClassCreator ReferenceType MemberReference name = StatementExpression MethodInvocation methodCallbacks MemberReference name MemberReference invoker put StatementExpression MethodInvocation invoker MemberReference method MemberReference javaClass addMethod	1
MethodDeclaration ReferenceType Iterator ReturnStatement ClassCreator ReferenceType	0
MethodDeclaration Modifier private ReferenceType RubySymbol fastCreateSymbol FormalParameter ReferenceType String internedName FormalParameter ReferenceType SymbolEntry table LocalVariableDeclaration ReferenceType VariableDeclarator lock StatementExpression Assignment MemberReference lock MemberReference = TryStatement LocalVariableDeclaration BasicType int VariableDeclarator potentialNewSize IfStatement BinaryOperation > Assignment MemberReference potentialNewSize BinaryOperation + MemberReference size Literal 1 = MemberReference threshold BlockStatement StatementExpression Assignment MemberReference table MethodInvocation rehash = BlockStatement StatementExpression Assignment MemberReference table MemberReference symbolTable = LocalVariableDeclaration BasicType int VariableDeclarator index LocalVariableDeclaration BasicType int VariableDeclarator hash ForStatement ForControl VariableDeclaration ReferenceType SymbolEntry VariableDeclarator e MemberReference ArraySelector Assignment MemberReference index BinaryOperation & Assignment MemberReference hash MethodInvocation internedName hashCode = BinaryOperation - MemberReference table length Literal 1 = table BinaryOperation != MemberReference e Literal null Assignment MemberReference e MemberReference e next = BlockStatement IfStatement BinaryOperation == MemberReference internedName MemberReference e name BlockStatement ReturnStatement MemberReference e symbol LocalVariableDeclaration ReferenceType RubySymbol VariableDeclarator symbol ClassCreator ReferenceType RubySymbol MemberReference runtime MemberReference internedName StatementExpression Assignment MemberReference ArraySelector MemberReference index table ClassCreator ReferenceType SymbolEntry MemberReference hash MemberReference internedName MemberReference symbol MemberReference ArraySelector MemberReference index table = StatementExpression Assignment MemberReference size MemberReference potentialNewSize = StatementExpression Assignment MemberReference symbolTable MemberReference table = ReturnStatement MemberReference symbol StatementExpression MethodInvocation lock unlock	1
MethodDeclaration Modifier public ReferenceType String getTypeInstance FormalParameter BasicType double i FormalParameter ReferenceType String o FormalParameter ReferenceType String o2 FormalParameter ReferenceType String ReturnStatement Literal	0
MethodDeclaration Modifier public static ReferenceType getInstance ReturnStatement MemberReference instance	0
MethodDeclaration Modifier final BasicType int length ReturnStatement MemberReference str realSize	0
MethodDeclaration Modifier public BasicType boolean add FormalParameter ReferenceType T o LocalVariableDeclaration ReferenceType T VariableDeclarator previousValue MethodInvocation map MemberReference o Literal null put ReturnStatement BinaryOperation == MemberReference previousValue Literal null	0
MethodDeclaration Modifier private ReferenceType IRubyObject getConstantInnerNoObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType String internedName FormalParameter ReferenceType RubyModule object IfStatement BinaryOperation == MemberReference Literal null ReturnStatement Literal null ReturnStatement MethodInvocation MemberReference runtime MemberReference internedName MemberReference object getConstantInner	1
MethodDeclaration Modifier public copy FormalParameter ReferenceType Pair other StatementExpression Assignment MemberReference head MemberReference other head = StatementExpression Assignment MemberReference tail MemberReference other tail =	0
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType input FormalParameter BasicType int type IOException LocalVariableDeclaration BasicType int VariableDeclarator i MethodInvocation input IfStatement BinaryOperation == MemberReference type Literal '@' BlockStatement ReturnStatement MethodInvocation MemberReference i linkedByIndex AssertStatement BinaryOperation == MemberReference type Literal ';' ReturnStatement MethodInvocation MemberReference i symbolByIndex	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "to_s" ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject recv ReturnStatement MethodInvocation recv MethodInvocation Literal newString getRuntime	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "each_char" ElementValuePair frame Literal true ReferenceType IRubyObject each_char FormalParameter Modifier final ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType Block block ReturnStatement TernaryExpression MethodInvocation block isGiven MethodInvocation MemberReference context MemberReference recv MemberReference block MethodInvocation MethodInvocation context getRuntime MemberReference recv Literal "each_char" enumeratorize	1
MethodDeclaration Modifier private BasicType int StatementExpression MethodInvocation check LocalVariableDeclaration BasicType int VariableDeclarator options BinaryOperation & MethodInvocation pattern BinaryOperation | BinaryOperation | MemberReference RE_OPTION_IGNORECASE MemberReference RE_OPTION_MULTILINE MemberReference RE_OPTION_EXTENDED IfStatement MethodInvocation ! isKCodeDefault StatementExpression Assignment MemberReference options MethodInvocation getKcode |= ReturnStatement MemberReference options	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime ReturnStatement MethodInvocation RubyFixnum MemberReference runtime MethodInvocation MemberReference runtime MemberReference value encoding MemberReference value bytes MemberReference value begin BinaryOperation + MemberReference value begin MemberReference value realSize codePoint newFixnum	0
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement MethodInvocation String MemberReference value valueOf	0
MethodDeclaration Modifier public Annotation Override ReferenceType File listFiles FormalParameter Modifier final ReferenceType FilenameFilter filter LocalVariableDeclaration Modifier final ReferenceType File VariableDeclarator files SuperMethodInvocation MemberReference filter listFiles IfStatement BinaryOperation == MemberReference files Literal null BlockStatement ReturnStatement Literal null LocalVariableDeclaration ReferenceType JRubyFile VariableDeclarator smartFiles ArrayCreator ReferenceType JRubyFile MemberReference files length ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 VariableDeclarator j MemberReference files length BinaryOperation < MemberReference i MemberReference j MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i smartFiles MethodInvocation SuperMethodInvocation getAbsolutePath MemberReference ArraySelector MemberReference i MethodInvocation getPath files = ReturnStatement MemberReference smartFiles	1
MethodDeclaration Modifier public static Annotation Deprecated ReferenceType IRubyObject socketpair FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args ReturnStatement MethodInvocation MethodInvocation recv MethodInvocation getCurrentContext getRuntime MemberReference recv MemberReference args socketpair	1
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block ReturnStatement MethodInvocation callAdapter MemberReference context MemberReference self MemberReference self MethodInvocation arg1 MemberReference runtime MemberReference context MemberReference self MemberReference MethodInvocation arg2 MemberReference runtime MemberReference context MemberReference self MemberReference MethodInvocation arg3 MemberReference runtime MemberReference context MemberReference self MemberReference MethodInvocation RuntimeHelpers MemberReference context MemberReference self MemberReference getBlock	0
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType BlockCallback block FormalParameter ReferenceType String sig ReturnStatement MethodInvocation runtime getNil	0
MethodDeclaration Modifier public ReferenceType Operand FormalParameter BasicType int argIndex FormalParameter BasicType boolean getSubArray IfStatement MethodInvocation ! isConstant ReturnStatement Literal null ReturnStatement Literal null	1
MethodDeclaration Modifier public ReferenceType Node setIterNode FormalParameter ReferenceType Node StatementExpression Assignment This MemberReference MemberReference = ReturnStatement This	0
MethodDeclaration Modifier public FormalParameter ReferenceType Attribute arg0 StatementExpression MethodInvocation MethodInvocation MemberReference arg0 getMethodVisitor	0
MethodDeclaration Modifier public Annotation Override FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject arg FormalParameter ReferenceType Block block StatementExpression MethodInvocation rest MemberReference runtime MemberReference context MemberReference self MemberReference arg MemberReference block Literal true assign	0
MethodDeclaration Modifier public compileArray FormalParameter ReferenceType Node node FormalParameter ReferenceType BodyCompiler context FormalParameter BasicType boolean expr LocalVariableDeclaration ReferenceType ArrayNode VariableDeclarator arrayNode Cast ReferenceType ArrayNode MemberReference node LocalVariableDeclaration BasicType boolean VariableDeclarator doit BinaryOperation || MemberReference expr MemberReference ! RubyInstanceConfig PEEPHOLE_OPTZ LocalVariableDeclaration BasicType boolean VariableDeclarator popit BinaryOperation && MemberReference ! RubyInstanceConfig PEEPHOLE_OPTZ MemberReference ! expr IfStatement MemberReference doit BlockStatement LocalVariableDeclaration ReferenceType ArrayCallback VariableDeclarator ClassCreator ReferenceType ArrayCallback MethodDeclaration Modifier public nextValue FormalParameter ReferenceType BodyCompiler context FormalParameter ReferenceType Object FormalParameter BasicType int index LocalVariableDeclaration ReferenceType Node VariableDeclarator node Cast ReferenceType Node Cast ReferenceType Object MemberReference StatementExpression MethodInvocation MemberReference node MemberReference context Literal true compile StatementExpression MethodInvocation context MethodInvocation arrayNode MethodInvocation toArray childNodes MemberReference MethodInvocation arrayNode IfStatement MemberReference popit StatementExpression MethodInvocation context consumeCurrentValue BlockStatement ForStatement ForControl VariableDeclaration ReferenceType Iterator TypeArgument ReferenceType Node VariableDeclarator iter MethodInvocation arrayNode MethodInvocation iterator childNodes MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType Node VariableDeclarator nextNode MethodInvocation iter next StatementExpression MethodInvocation MemberReference nextNode MemberReference context Literal false compile	1
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "\t" MemberReference Literal " = " MemberReference Literal "[" MemberReference TernaryExpression MemberReference Literal Literal "" Literal "]	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair optional Literal 1 ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject args IOException LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType IRubyObject VariableDeclarator array ClassCreator ReferenceType ArrayList TypeArgument ReferenceType IRubyObject IfStatement BinaryOperation && BinaryOperation != MemberReference args length Literal 0 MemberReference ArraySelector Literal 0 MethodInvocation isNil args BlockStatement StatementExpression MethodInvocation array MethodInvocation ArrayCreator ReferenceType IRubyObject Literal 0 read add BlockStatement LocalVariableDeclaration ReferenceType ByteList VariableDeclarator sep Cast ReferenceType RubyString MethodInvocation MethodInvocation getGlobalVariables MethodInvocation Literal "$/" get getRuntime IfStatement BinaryOperation > MemberReference args length Literal 0 BlockStatement StatementExpression Assignment MemberReference sep MemberReference ArraySelector Literal 0 MethodInvocation convertToString MethodInvocation getByteList args = ForStatement ForControl VariableDeclaration ReferenceType IRubyObject VariableDeclarator result MethodInvocation MemberReference sep MethodInvocation ! result isNil Assignment MemberReference result MethodInvocation MemberReference sep = BlockStatement StatementExpression MethodInvocation array MemberReference result add ReturnStatement MethodInvocation MethodInvocation MemberReference array newArray getRuntime	1
MethodDeclaration * This is since it should not be * used outside of use of * See * for more */ ReferenceType InputStream ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext ctx FormalParameter ReferenceType IRubyObject largs FormalParameter ReferenceType Block blk LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator larg MethodInvocation MemberReference runtime MemberReference largs checkArgs SynchronizedStatement MemberReference result IfStatement BinaryOperation || BinaryOperation == MemberReference ArraySelector Literal 0 result Literal null BinaryOperation < MethodInvocation RubyComparable MemberReference ctx MethodInvocation larg MemberReference ctx Literal "<=>" MemberReference ArraySelector Literal 0 result callMethod MemberReference larg MemberReference ArraySelector Literal 0 result cmpint Literal 0 BlockStatement StatementExpression Assignment MemberReference ArraySelector Literal 0 result MemberReference larg = ReturnStatement MethodInvocation runtime getNil	0
MethodDeclaration Modifier public ReferenceType IRubyObject op_lt FormalParameter ReferenceType ThreadContext context FormalParameter BasicType long other ReturnStatement MethodInvocation RubyBoolean MethodInvocation context getRuntime BinaryOperation < MemberReference value MemberReference other newBoolean	1
MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject caller FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 FormalParameter ReferenceType IRubyObject arg3 FormalParameter ReferenceType Block block TryStatement ReturnStatement MethodInvocation MemberReference context MemberReference caller MemberReference self MemberReference arg1 MemberReference arg2 MemberReference arg3 MemberReference block callBlock CatchClause CatchClauseParameter JumpException.BreakJump bj ReturnStatement MethodInvocation MemberReference context MemberReference bj handleBreakJump CatchClause CatchClauseParameter JumpException.RetryJump rj ThrowStatement MethodInvocation MemberReference context retryJumpError	1
MethodDeclaration Modifier public ReferenceType IRubyObject setConstant FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject value LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator oldValue MethodInvocation MemberReference name IfStatement BinaryOperation != MemberReference oldValue Literal null BlockStatement LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation getRuntime IfStatement BinaryOperation == MemberReference oldValue MemberReference UNDEF BlockStatement StatementExpression MethodInvocation runtime MethodInvocation BinaryOperation + BinaryOperation + MethodInvocation getName Literal "::" MemberReference name BlockStatement StatementExpression MethodInvocation runtime MethodInvocation MemberReference ID BinaryOperation + Literal "already initialized constant " MemberReference name MemberReference name warn getWarnings StatementExpression MethodInvocation MemberReference name MemberReference value StatementExpression MethodInvocation IfStatement BinaryOperation instanceof MemberReference value ReferenceType RubyModule BlockStatement LocalVariableDeclaration ReferenceType RubyModule VariableDeclarator module Cast ReferenceType RubyModule MemberReference value IfStatement BinaryOperation == MethodInvocation module Literal null BlockStatement StatementExpression MethodInvocation module MemberReference name StatementExpression MethodInvocation module This setParent ReturnStatement MemberReference value	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType IRubyObject command IfStatement BinaryOperation || BinaryOperation == MemberReference traces Literal null MethodInvocation ! traces MemberReference command contains BlockStatement ReturnStatement Literal false StatementExpression MethodInvocation traces MemberReference command remove ReturnStatement Literal true	0
MethodDeclaration Modifier public static BasicType boolean sprintf FormalParameter ReferenceType ByteList to FormalParameter ReferenceType CharSequence format FormalParameter ReferenceType IRubyObject args ReturnStatement MethodInvocation MemberReference to MemberReference format ClassCreator ReferenceType MemberReference args	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "initialize_copy" ElementValuePair required Literal 1 ReferenceType IRubyObject initialize_copy FormalParameter ReferenceType IRubyObject obj IfStatement BinaryOperation == This MemberReference obj BlockStatement ReturnStatement This StatementExpression Cast ReferenceType RubyObject MemberReference obj LocalVariableDeclaration ReferenceType String VariableDeclarator name Cast ReferenceType Base MemberReference obj TryStatement StatementExpression Assignment MemberReference Cast ReferenceType MessageDigest Cast ReferenceType Base MemberReference obj = CatchClause CatchClauseParameter CloneNotSupportedException e ThrowStatement MethodInvocation MethodInvocation BinaryOperation + BinaryOperation + Literal "Could not copy of digest (" MemberReference name Literal ")" newTypeError getRuntime ReturnStatement This	1
MethodDeclaration Modifier public static ReferenceType Test suite Exception ReturnStatement ClassCreator ReferenceType MemberReference	0
MethodDeclaration Modifier public static ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject x ReturnStatement MethodInvocation x MemberReference context Literal "truncate" callMethod	1
MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 FormalParameter ReferenceType Block block ReturnStatement MethodInvocation body MemberReference context MemberReference arg0 MemberReference arg1 MemberReference arg2 MemberReference MemberReference type MemberReference block call	0
MethodDeclaration Modifier protected ReferenceType Frame pre FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType RubyModule FormalParameter ReferenceType ReturnStatement MethodInvocation context MemberReference MemberReference scope MemberReference	0
MethodDeclaration Modifier public Annotation Override ReferenceType Class TypeArgument ? ReturnStatement ClassReference ReferenceType Date	0
MethodDeclaration Modifier public line FormalParameter BasicType int line LocalVariableDeclaration ReferenceType Label VariableDeclarator label ClassCreator ReferenceType Label StatementExpression MethodInvocation MemberReference label label StatementExpression MethodInvocation MemberReference line MemberReference label visitLineNumber	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block IfStatement BinaryOperation == MemberReference compiledMethod Literal null StatementExpression MethodInvocation initializeMethod ReturnStatement MethodInvocation compiledMethod MemberReference context MemberReference self MemberReference clazz MemberReference name MemberReference args MemberReference block call	1
MethodDeclaration Modifier private BasicType int FormalParameter ReferenceType WhenNode whenNode IfStatement BinaryOperation instanceof MethodInvocation whenNode getExpressionNodes ReferenceType ArrayNode BlockStatement LocalVariableDeclaration ReferenceType ArrayNode VariableDeclarator expression Cast ReferenceType ArrayNode MethodInvocation whenNode getExpressionNodes IfStatement BinaryOperation instanceof MethodInvocation expression BinaryOperation - MethodInvocation expression size Literal 1 get ReferenceType WhenNode BlockStatement ReturnStatement Literal null LocalVariableDeclaration BasicType int VariableDeclarator cases ArrayCreator BasicType int MethodInvocation expression size ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference cases length MemberReference ++ i BlockStatement SwitchStatement MethodInvocation expression MethodInvocation getNodeType MemberReference i get SwitchStatementCase FIXNUMNODE StatementExpression Assignment MemberReference ArraySelector MemberReference i cases Cast BasicType int Cast ReferenceType FixnumNode MethodInvocation expression MemberReference i get = BreakStatement SwitchStatementCase ReturnStatement Literal null ReturnStatement MemberReference cases IfStatement BinaryOperation instanceof MethodInvocation whenNode getExpressionNodes ReferenceType FixnumNode BlockStatement LocalVariableDeclaration ReferenceType FixnumNode VariableDeclarator fixnumNode Cast ReferenceType FixnumNode MethodInvocation whenNode getExpressionNodes ReturnStatement ArrayCreator BasicType int ArrayInitializer Cast BasicType int MethodInvocation fixnumNode getValue IfStatement BinaryOperation instanceof MethodInvocation whenNode getExpressionNodes ReferenceType StrNode BlockStatement LocalVariableDeclaration ReferenceType StrNode VariableDeclarator strNode Cast ReferenceType StrNode MethodInvocation whenNode getExpressionNodes IfStatement BinaryOperation == MethodInvocation strNode MethodInvocation length getValue Literal 1 BlockStatement ReturnStatement ArrayCreator BasicType int ArrayInitializer MethodInvocation strNode MethodInvocation Literal 0 get getValue BlockStatement ReturnStatement ArrayCreator BasicType int ArrayInitializer MethodInvocation strNode MethodInvocation hashCode getValue IfStatement BinaryOperation instanceof MethodInvocation whenNode getExpressionNodes ReferenceType SymbolNode BlockStatement LocalVariableDeclaration ReferenceType SymbolNode VariableDeclarator symbolNode Cast ReferenceType SymbolNode MethodInvocation whenNode getExpressionNodes IfStatement BinaryOperation == MethodInvocation symbolNode MethodInvocation length getName Literal 1 BlockStatement ReturnStatement ArrayCreator BasicType int ArrayInitializer MethodInvocation symbolNode MethodInvocation Literal 0 charAt getName BlockStatement ReturnStatement ArrayCreator BasicType int ArrayInitializer MethodInvocation symbolNode MethodInvocation hashCode getName ReturnStatement Literal null	1
MethodDeclaration Modifier public static ReferenceType IRubyObject defs FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject receiver FormalParameter ReferenceType Object scriptObject FormalParameter ReferenceType String name FormalParameter ReferenceType String javaName FormalParameter ReferenceType String scopeNames FormalParameter BasicType int arity FormalParameter BasicType int required FormalParameter BasicType int optional FormalParameter BasicType int rest FormalParameter ReferenceType CallConfiguration callConfig LocalVariableDeclaration ReferenceType Class VariableDeclarator compiledClass MethodInvocation scriptObject getClass LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator rubyClass MethodInvocation MemberReference runtime MemberReference receiver MemberReference name LocalVariableDeclaration ReferenceType VariableDeclarator scope MethodInvocation MemberReference context MemberReference scopeNames MemberReference required MemberReference optional MemberReference rest LocalVariableDeclaration ReferenceType MethodFactory VariableDeclarator factory MethodInvocation MethodFactory MethodInvocation compiledClass getClassLoader createFactory LocalVariableDeclaration ReferenceType DynamicMethod VariableDeclarator method MethodInvocation MemberReference factory MemberReference rubyClass MemberReference javaName MemberReference arity MemberReference scope MemberReference scriptObject MemberReference callConfig StatementExpression MethodInvocation rubyClass MemberReference name MemberReference method addMethod StatementExpression MethodInvocation MemberReference receiver MemberReference context MethodInvocation runtime MemberReference name fastNewSymbol ReturnStatement MethodInvocation runtime getNil	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair required Literal 2 ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject offset FormalParameter ReferenceType IRubyObject length ReturnStatement TernaryExpression BinaryOperation == MethodInvocation Platform MethodInvocation longSize getPlatform Literal 32 MethodInvocation MemberReference context MemberReference offset MemberReference length MethodInvocation MemberReference context MemberReference offset MemberReference length get_array_of_uint64	1
MethodDeclaration Modifier public synchronized FormalParameter ReferenceType RubyClass subclass SynchronizedStatement MethodInvocation runtime getHierarchyLock LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType RubyClass VariableDeclarator oldSubclasses MemberReference subclasses IfStatement BinaryOperation == MemberReference oldSubclasses Literal null StatementExpression Assignment MemberReference subclasses Assignment MemberReference oldSubclasses ClassCreator ReferenceType TypeArgument ReferenceType RubyClass Literal 4 = = StatementExpression MethodInvocation oldSubclasses MemberReference subclass add	1
MethodDeclaration Modifier public Annotation Override ReferenceType Class TypeArgument ? ReturnStatement ClassReference ReferenceType BigInteger	0
MethodDeclaration Modifier public send FormalParameter ReferenceType Enum TypeArgument ? channel FormalParameter ReferenceType Object message StatementExpression MethodInvocation MethodInvocation channel MemberReference message send	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object foo StatementExpression MethodInvocation MemberReference foo	0
MethodDeclaration Modifier public FormalParameter ReferenceType CallType callType StatementExpression Assignment MemberReference lastCallType MemberReference callType =	0
MethodDeclaration Modifier public ReferenceType Operand FormalParameter BasicType int argIndex FormalParameter BasicType boolean getSubArray ReturnStatement TernaryExpression BinaryOperation == MemberReference argIndex Literal 0 This MemberReference Nil NIL	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair rest Literal true ElementValuePair module Literal true ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject interfaces LocalVariableDeclaration ReferenceType Class VariableDeclarator javaInterfaces ArrayCreator ReferenceType Class MemberReference interfaces length ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference interfaces length MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i javaInterfaces MethodInvocation MemberReference ArraySelector MemberReference i interfaces = ReturnStatement MethodInvocation MemberReference javaInterfaces MethodInvocation context getRuntime BinaryOperation + Literal "I" MethodInvocation System currentTimeMillis	1
MethodDeclaration Modifier public static ReferenceType IRubyObject FormalParameter ReferenceType JumpException ReferenceType bj FormalParameter ReferenceType ThreadContext context IfStatement BinaryOperation == MethodInvocation bj getTarget MethodInvocation context BlockStatement ReturnStatement Cast ReferenceType IRubyObject MethodInvocation bj getValue ThrowStatement MemberReference bj	0
MethodDeclaration Modifier public ReferenceType RaiseException FormalParameter ReferenceType String message ReturnStatement MethodInvocation MethodInvocation MemberReference message newRaiseException	0
MethodDeclaration Modifier public ReferenceType Object StatementExpression MethodInvocation Literal 0 checkArity TryStatement ReturnStatement MethodInvocation constructor newInstance CatchClause CatchClauseParameter IllegalArgumentException iae ReturnStatement MethodInvocation MemberReference iae handlelIllegalArgumentEx CatchClause CatchClauseParameter IllegalAccessException iae ReturnStatement MethodInvocation MemberReference iae handleIllegalAccessEx CatchClause CatchClauseParameter InvocationTargetException ite ReturnStatement MethodInvocation MemberReference ite MemberReference constructor handleInvocationTargetEx CatchClause CatchClauseParameter Throwable t ReturnStatement MethodInvocation MemberReference t MemberReference constructor handleThrowable	1
MethodDeclaration Modifier public prepare FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 FormalParameter ReferenceType IRubyObject arg3 FormalParameter ReferenceType IRubyObject arg4 FormalParameter ReferenceType IRubyObject arg5 FormalParameter ReferenceType IRubyObject arg6 FormalParameter ReferenceType IRubyObject arg7 FormalParameter ReferenceType IRubyObject arg8 FormalParameter ReferenceType IRubyObject arg9 FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType DynamicScope VariableDeclarator scope MethodInvocation context getCurrentScope IfStatement MemberReference isSimple BlockStatement StatementExpression MethodInvocation scope MemberReference arg0 MemberReference arg1 MemberReference arg2 MemberReference arg3 MemberReference arg4 MemberReference arg5 MemberReference arg6 MemberReference arg7 MemberReference arg8 MemberReference arg9 setArgValues BlockStatement StatementExpression MethodInvocation MemberReference context MemberReference runtime MemberReference self ArrayCreator ReferenceType IRubyObject ArrayInitializer MemberReference arg0 MemberReference arg1 MemberReference arg2 MemberReference arg3 MemberReference arg4 MemberReference arg5 MemberReference arg6 MemberReference arg7 MemberReference arg8 MemberReference arg9 MemberReference block prepare IfStatement BinaryOperation != MethodInvocation getBlock Literal null StatementExpression MethodInvocation MemberReference scope MemberReference runtime MemberReference block processBlockArg	1
MethodDeclaration Modifier private checkResize IfStatement MemberReference StatementExpression MethodInvocation MRICheckResize StatementExpression MethodInvocation JavaSoftCheckResize	1
MethodDeclaration Modifier private BasicType int choppedLength19 FormalParameter ReferenceType Ruby runtime LocalVariableDeclaration BasicType int VariableDeclarator p MemberReference value begin LocalVariableDeclaration BasicType int VariableDeclarator end BinaryOperation + MemberReference p MemberReference value realSize IfStatement BinaryOperation > MemberReference p MemberReference end ReturnStatement Literal 0 LocalVariableDeclaration BasicType byte VariableDeclarator bytes MemberReference value bytes LocalVariableDeclaration ReferenceType Encoding VariableDeclarator enc MemberReference value encoding LocalVariableDeclaration BasicType int VariableDeclarator s MethodInvocation enc MemberReference bytes MemberReference p MemberReference end MemberReference end prevCharHead IfStatement BinaryOperation == MemberReference s Literal - 1 ReturnStatement Literal 0 IfStatement BinaryOperation && BinaryOperation > MemberReference s MemberReference p BinaryOperation == MethodInvocation MemberReference runtime MemberReference enc MemberReference bytes MemberReference s MemberReference end codePoint Literal '\n' BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator s2 MethodInvocation enc MemberReference bytes MemberReference p MemberReference s MemberReference end prevCharHead IfStatement BinaryOperation && BinaryOperation != MemberReference s2 Literal - 1 BinaryOperation == MethodInvocation MemberReference runtime MemberReference enc MemberReference bytes MemberReference s2 MemberReference end codePoint Literal '\r' StatementExpression Assignment MemberReference s MemberReference s2 = ReturnStatement BinaryOperation - MemberReference s MemberReference p	1
MethodDeclaration Modifier public addMethod FormalParameter ReferenceType IR_Method m StatementExpression MethodInvocation _methods MemberReference m add IfStatement BinaryOperation && BinaryOperation instanceof This ReferenceType IR_Method Cast ReferenceType IR_Method This BlockStatement LocalVariableDeclaration ReferenceType IR_Class VariableDeclarator c Cast ReferenceType IR_Class Cast ReferenceType MetaObject This MemberReference _parent StatementExpression MethodInvocation TernaryExpression MemberReference m _isInstanceMethod ClassCreator ReferenceType DEFINE_INSTANCE_METHOD_Instr MemberReference c MemberReference m ClassCreator ReferenceType DEFINE_CLASS_METHOD_Instr MemberReference c MemberReference m addInstr IfStatement BinaryOperation && MemberReference m _isInstanceMethod BinaryOperation instanceof This ReferenceType IR_Class BlockStatement LocalVariableDeclaration ReferenceType IR_Class VariableDeclarator c Cast ReferenceType IR_Class This StatementExpression MethodInvocation ClassCreator ReferenceType DEFINE_INSTANCE_METHOD_Instr MemberReference c MemberReference m addInstr IfStatement BinaryOperation && MemberReference ! m _isInstanceMethod BinaryOperation instanceof This ReferenceType IR_Module BlockStatement LocalVariableDeclaration ReferenceType IR_Module VariableDeclarator c Cast ReferenceType IR_Module This StatementExpression MethodInvocation ClassCreator ReferenceType DEFINE_CLASS_METHOD_Instr MemberReference c MemberReference m addInstr BlockStatement ThrowStatement ClassCreator ReferenceType RuntimeException Literal "Encountered method add in a	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType RubyString FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg0 LocalVariableDeclaration ReferenceType RubyString VariableDeclarator str MethodInvocation MethodInvocation context getRuntime StatementExpression MethodInvocation str MemberReference context MemberReference arg0 ReturnStatement MemberReference str	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block IfStatement MemberReference BlockStatement ReturnStatement MethodInvocation context MethodInvocation getBlock MethodInvocation MemberReference context MethodInvocation argsNode MemberReference runtime MemberReference context MemberReference self MemberReference Literal null Literal null Literal true yield ReturnStatement MethodInvocation context MethodInvocation getBlock MethodInvocation MemberReference context MethodInvocation argsNode MemberReference runtime MemberReference context MemberReference self MemberReference yield	0
MethodDeclaration Modifier final modifyCheck IfStatement BinaryOperation != BinaryOperation & MemberReference flags MemberReference Literal 0 ThrowStatement MethodInvocation MethodInvocation Literal "string" getRuntime IfStatement BinaryOperation && MethodInvocation ! isTaint BinaryOperation >= MethodInvocation MethodInvocation getSafeLevel getRuntime Literal 4 BlockStatement ThrowStatement MethodInvocation MethodInvocation Literal "Insecure: can't modify string" newSecurityError getRuntime	1
MethodDeclaration Modifier static FormalParameter ReferenceType ByteList l StatementExpression Assignment MemberReference l begin Literal 0 = StatementExpression Assignment MemberReference l realSize Literal 0 = StatementExpression MethodInvocation l	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType Label VariableDeclarator ClassCreator ReferenceType Label StatementExpression MethodInvocation method dup StatementExpression MethodInvocation method MemberReference StatementExpression MethodInvocation method pop StatementExpression MethodInvocation loadNil StatementExpression MethodInvocation method MemberReference label	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal "to_enum" Literal "enum_for" ElementValuePair frame Literal true ReferenceType IRubyObject obj_to_enum FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject arg FormalParameter ReferenceType Block block ReturnStatement MethodInvocation MemberReference context MemberReference self MemberReference arg	1
MethodDeclaration Modifier public static main FormalParameter ReferenceType String _args StatementExpression MethodInvocation MethodInvocation suite run	1
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType Object javaInvokee FormalParameter ReferenceType Object arg0 FormalParameter ReferenceType Object arg1 StatementExpression MethodInvocation Literal 2 checkArity StatementExpression MethodInvocation MemberReference javaInvokee IfStatement MethodInvocation MemberReference javaInvokee BlockStatement ReturnStatement MethodInvocation MemberReference javaInvokee MemberReference arg0 MemberReference arg1 ReturnStatement MethodInvocation MemberReference method MemberReference javaInvokee MemberReference arg0 MemberReference arg1 invokeDirectWithExceptionHandling	0
MethodDeclaration Modifier public Annotation JRubyMethod ReferenceType RubyArray interfaces ReturnStatement MethodInvocation MethodInvocation getInterfaces	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType Object VariableDeclarator result Cast ReferenceType Object MethodInvocation handle TernaryExpression MemberReference isStatic Literal null Cast ReferenceType JavaObjectWrapper MemberReference self MethodInvocation MemberReference arg0 invoke ReturnStatement MethodInvocation MemberReference ruby MemberReference result javaToRuby	0
MethodDeclaration Modifier public FormalParameter BasicType int elementCount IfStatement BinaryOperation < MemberReference elementCount Literal 6 BlockStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator params ArrayCreator ReferenceType Class MemberReference elementCount StatementExpression MethodInvocation Arrays MemberReference params ClassReference ReferenceType IRubyObject fill StatementExpression MethodInvocation Literal MethodInvocation ClassReference ReferenceType IRubyObject MemberReference params sig invokeUtilityMethod BlockStatement ThrowStatement ClassCreator ReferenceType NotCompilableException Literal "Don't use for more than 5 elements"	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject other LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration ReferenceType RubyString VariableDeclarator otherStr MethodInvocation other convertToString LocalVariableDeclaration ReferenceType Encoding VariableDeclarator enc MethodInvocation MemberReference otherStr isCompatibleWith IfStatement BinaryOperation == MemberReference enc Literal null ReturnStatement MethodInvocation runtime getNil IfStatement BinaryOperation && MethodInvocation singleByteOptimizable MethodInvocation otherStr singleByteOptimizable BlockStatement ReturnStatement MethodInvocation RubyFixnum MemberReference runtime MethodInvocation value MemberReference otherStr value caseInsensitiveCmp newFixnum BlockStatement ReturnStatement MethodInvocation MemberReference runtime MemberReference enc MemberReference value MemberReference otherStr value multiByteCasecmp	1
MethodDeclaration Modifier public ReferenceType Operand FormalParameter Modifier final ReferenceType ArgsCatNode argsCatNode FormalParameter ReferenceType IR_Scope s LocalVariableDeclaration ReferenceType Operand VariableDeclarator v1 MethodInvocation MethodInvocation argsCatNode getFirstNode MemberReference s build LocalVariableDeclaration ReferenceType Operand VariableDeclarator v2 MethodInvocation MethodInvocation argsCatNode getSecondNode MemberReference s build ReturnStatement ClassCreator ReferenceType MemberReference v1 MemberReference v2	0
MethodDeclaration Modifier public Annotation Override FormalParameter ReferenceType IRubyObject values FormalParameter BasicType int index FormalParameter BasicType int size AssertStatement BinaryOperation <= MemberReference size Literal 2 BinaryOperation + Literal only scopes with variables, not " MemberReference size SwitchStatement MemberReference size SwitchStatementCase Literal 4 StatementExpression Assignment MemberReference variableValueZero MemberReference ArraySelector BinaryOperation - MemberReference values length Literal 4 values = SwitchStatementCase Literal 3 StatementExpression Assignment MemberReference variableValueOne MemberReference ArraySelector BinaryOperation - MemberReference values length Literal 3 values = SwitchStatementCase Literal 2 StatementExpression Assignment MemberReference variableValueTwo MemberReference ArraySelector BinaryOperation - MemberReference values length Literal 2 values = SwitchStatementCase Literal 1 StatementExpression Assignment MemberReference variableValueThree MemberReference ArraySelector BinaryOperation - MemberReference values length Literal 1 values =	1
MethodDeclaration Modifier public static ReferenceType String getType FormalParameter BasicType double i FormalParameter ReferenceType String o ReturnStatement Literal	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement BinaryOperation == MethodInvocation nativeThread get MethodInvocation Thread currentThread	1
MethodDeclaration Modifier public Annotation Override BasicType int getNativeTypeIndex ReturnStatement TernaryExpression BinaryOperation == BinaryOperation & MemberReference flags MemberReference Literal 0 MemberReference ClassIndex TRUE MemberReference ClassIndex FALSE	0
MethodDeclaration Modifier public ReferenceType Node getNextNode ReturnStatement MemberReference nextNode	0
MethodDeclaration Modifier protected ReferenceType JavaCallable FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject args FormalParameter BasicType int arity LocalVariableDeclaration ReferenceType JavaCallable VariableDeclarator callable IfStatement BinaryOperation == Assignment MemberReference callable MemberReference javaCallable = Literal null BlockStatement LocalVariableDeclaration ReferenceType JavaCallable VariableDeclarator callablesForArity Literal null IfStatement BinaryOperation || BinaryOperation >= MemberReference arity MemberReference javaCallables length BinaryOperation == Assignment MemberReference callablesForArity MemberReference ArraySelector MemberReference arity javaCallables = Literal null BlockStatement ThrowStatement MethodInvocation self MethodInvocation MemberReference args length BinaryOperation - MemberReference javaCallables length Literal 1 newArgumentError getRuntime StatementExpression Assignment MemberReference callable MethodInvocation CallableSelector MemberReference self MemberReference cache MemberReference callablesForArity MemberReference args MemberReference arity matchingCallableArityN = BlockStatement IfStatement BinaryOperation != MethodInvocation callable MemberReference length getParameterTypes MemberReference args length BlockStatement ThrowStatement MethodInvocation self MethodInvocation MemberReference args length MethodInvocation callable MemberReference length getParameterTypes newArgumentError getRuntime ReturnStatement MemberReference callable	1
MethodDeclaration Modifier public final ReferenceType IRubyObject invoke FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType Function function FormalParameter ReferenceType HeapInvocationBuffer args ReturnStatement MethodInvocation Util MemberReference runtime MethodInvocation invoker MemberReference function MemberReference args invokeInt newSigned8	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair required Literal 1 ReferenceType IRubyObject setValue FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject value StatementExpression MethodInvocation MethodInvocation This MemberReference value put MemberReference context ReturnStatement MemberReference value	0
MethodDeclaration Modifier public ReferenceType FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType DynamicScope scope LocalVariableDeclaration ReferenceType Frame VariableDeclarator frame MethodInvocation ReturnStatement ClassCreator ReferenceType MemberReference self MemberReference frame MethodInvocation frame getVisibility MethodInvocation MemberReference scope MemberReference file MemberReference line	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType Node childNodes ReturnStatement MethodInvocation Node MemberReference MemberReference createList	0
MethodDeclaration Modifier public ReferenceType Node getArgsNode ReturnStatement MemberReference argsNode	0
MethodDeclaration Modifier public ReferenceType String getFile ReturnStatement MemberReference filename	0
MethodDeclaration Modifier public BasicType boolean contains FormalParameter ReferenceType Object o ReturnStatement MethodInvocation MemberReference o	1
MethodDeclaration Modifier public cleanup FormalParameter ReferenceType Ruby runtime FormalParameter BasicType boolean IfStatement BinaryOperation != MemberReference finalizer Literal null BlockStatement StatementExpression MethodInvocation finalizer MemberReference runtime MemberReference finalize BlockStatement StatementExpression MethodInvocation MemberReference runtime MemberReference finalize	0
MethodDeclaration Modifier public static ReferenceType RubyArray FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType IRubyObject objs ReturnStatement ClassCreator ReferenceType RubyArray MemberReference runtime MemberReference objs Literal false	0
MethodDeclaration pre FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule implementer FormalParameter ReferenceType String name FormalParameter ReferenceType Block block FormalParameter ReferenceType scope FormalParameter ReferenceType StatementExpression MethodInvocation context MemberReference implementer MemberReference name MemberReference self MemberReference block MemberReference scope	0
MethodDeclaration Modifier public BasicType long ReturnStatement BinaryOperation / MethodInvocation get Literal 1000	0
MethodDeclaration Modifier public StatementExpression MethodInvocation	0
MethodDeclaration Modifier public static ReferenceType RubyString newString FormalParameter ReferenceType Ruby runtime FormalParameter BasicType byte bytes FormalParameter BasicType int start FormalParameter BasicType int length LocalVariableDeclaration BasicType byte VariableDeclarator copy ArrayCreator BasicType byte MemberReference length StatementExpression MethodInvocation System MemberReference bytes MemberReference start MemberReference copy Literal 0 MemberReference length arraycopy ReturnStatement ClassCreator ReferenceType RubyString MemberReference runtime MethodInvocation runtime getString ClassCreator ReferenceType ByteList MemberReference copy Literal false	0
MethodDeclaration Modifier private static BasicType boolean tpositive_p FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject x ReturnStatement MethodInvocation ! MemberReference context MemberReference x	1
MethodDeclaration Modifier public FormalParameter ReferenceType IRubyObject StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType Node childNodes ReturnStatement MemberReference EMPTY_LIST	0
MethodDeclaration Annotation Override dispatch FormalParameter Modifier final ReferenceType join FormalParameter Modifier final ReferenceType Object args TryStatement StatementExpression MethodInvocation MemberReference join MemberReference args CatchClause CatchClauseParameter Exception e	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject index ReturnStatement MethodInvocation MemberReference context MethodInvocation MemberReference index Literal true	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "gid=" ElementValuePair required Literal 1 ElementValuePair module Literal true ElementValuePair visibility MemberReference Visibility PRIVATE ReferenceType IRubyObject gid_set FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject arg ReturnStatement MethodInvocation MethodInvocation context getRuntime MemberReference arg gid_set	1
MethodDeclaration Modifier public static ReferenceType RubyHash FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject LocalVariableDeclaration ReferenceType RubyHash VariableDeclarator hash MethodInvocation RubyHash MemberReference runtime StatementExpression MethodInvocation hash MemberReference runtime MemberReference MemberReference ReturnStatement MemberReference hash	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "round" ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject ReturnStatement This	0
MethodDeclaration Modifier public static ReferenceType produce ReturnStatement ClassCreator ReferenceType	0
MethodDeclaration Modifier private BasicType int nameToBackrefNumber FormalParameter ReferenceType RubyString str LocalVariableDeclaration ReferenceType ByteList VariableDeclarator value MethodInvocation str getByteList TryStatement ReturnStatement MethodInvocation pattern MemberReference value bytes MemberReference value begin BinaryOperation + MemberReference value begin MemberReference value realSize MemberReference regs nameToBackrefNumber CatchClause CatchClauseParameter JOniException je ThrowStatement MethodInvocation MethodInvocation MethodInvocation je getMessage newIndexError getRuntime	1
MethodDeclaration Modifier public static ReferenceType String ci FormalParameter ReferenceType Class n IfStatement MethodInvocation n isArray BlockStatement StatementExpression Assignment MemberReference n MethodInvocation n getComponentType = IfStatement MethodInvocation n isPrimitive BlockStatement IfStatement BinaryOperation == MemberReference n MemberReference Byte TYPE BlockStatement ReturnStatement Literal IfStatement BinaryOperation == MemberReference n MemberReference Boolean TYPE BlockStatement ReturnStatement Literal IfStatement BinaryOperation == MemberReference n MemberReference Short TYPE BlockStatement ReturnStatement Literal IfStatement BinaryOperation == MemberReference n MemberReference Character TYPE BlockStatement ReturnStatement Literal IfStatement BinaryOperation == MemberReference n MemberReference Integer TYPE BlockStatement ReturnStatement Literal IfStatement BinaryOperation == MemberReference n MemberReference Float TYPE BlockStatement ReturnStatement Literal IfStatement BinaryOperation == MemberReference n MemberReference Double TYPE BlockStatement ReturnStatement Literal IfStatement BinaryOperation == MemberReference n MemberReference Long TYPE BlockStatement ReturnStatement Literal BlockStatement ThrowStatement ClassCreator ReferenceType RuntimeException BinaryOperation + Literal "Unrecognized type in compiler: " MethodInvocation n getName BlockStatement ReturnStatement BinaryOperation + Literal "[" MethodInvocation MemberReference n ci BlockStatement IfStatement MethodInvocation n isPrimitive BlockStatement IfStatement BinaryOperation == MemberReference n MemberReference Byte TYPE BlockStatement ReturnStatement Literal "B" IfStatement BinaryOperation == MemberReference n MemberReference Boolean TYPE BlockStatement ReturnStatement Literal "Z" IfStatement BinaryOperation == MemberReference n MemberReference Short TYPE BlockStatement ReturnStatement Literal "S" IfStatement BinaryOperation == MemberReference n MemberReference Character TYPE BlockStatement ReturnStatement Literal "C" IfStatement BinaryOperation == MemberReference n MemberReference Integer TYPE BlockStatement ReturnStatement Literal "I" IfStatement BinaryOperation == MemberReference n MemberReference Float TYPE BlockStatement ReturnStatement Literal "F" IfStatement BinaryOperation == MemberReference n MemberReference Double TYPE BlockStatement ReturnStatement Literal "D" IfStatement BinaryOperation == MemberReference n MemberReference Long TYPE BlockStatement ReturnStatement Literal "J" IfStatement BinaryOperation == MemberReference n MemberReference Void TYPE BlockStatement ReturnStatement Literal "V" BlockStatement ThrowStatement ClassCreator ReferenceType RuntimeException BinaryOperation + Literal "Unrecognized type in compiler: " MethodInvocation n getName BlockStatement ReturnStatement BinaryOperation + BinaryOperation + Literal "L" MethodInvocation MemberReference n p Literal ";"	1
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 LocalVariableDeclaration ReferenceType Object VariableDeclarator array MethodInvocation MemberReference self LocalVariableDeclaration BasicType int VariableDeclarator x MethodInvocation RubyFixnum MethodInvocation arg0 convertToInteger fix2int LocalVariableDeclaration BasicType int VariableDeclarator y MethodInvocation RubyFixnum MethodInvocation arg1 convertToInteger fix2int ReturnStatement MethodInvocation MemberReference ruby MethodInvocation Array MethodInvocation Array MemberReference array MemberReference x get MemberReference y get javaToRuby	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal "%" Literal "modulo" ElementValuePair required Literal 1 ReferenceType IRubyObject op_mod FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime IfStatement BinaryOperation || MethodInvocation isInfinity MethodInvocation isNaN BlockStatement ReturnStatement MethodInvocation MemberReference runtime newNaN LocalVariableDeclaration ReferenceType RubyBigDecimal VariableDeclarator val MethodInvocation MemberReference arg Literal false getVpValue IfStatement BinaryOperation == MemberReference val Literal null BlockStatement ReturnStatement MethodInvocation MemberReference context Literal "%" MemberReference arg Literal true callCoerced IfStatement BinaryOperation || BinaryOperation || MethodInvocation val isInfinity MethodInvocation val isNaN MethodInvocation val isZero BlockStatement ReturnStatement MethodInvocation MemberReference runtime newNaN LocalVariableDeclaration ReferenceType BigDecimal VariableDeclarator modulo MethodInvocation value MemberReference val value IfStatement BinaryOperation < BinaryOperation * MethodInvocation modulo signum MethodInvocation val.value signum Literal 0 BlockStatement StatementExpression Assignment MemberReference modulo MethodInvocation modulo MemberReference val value add = ReturnStatement ClassCreator MethodInvocation setResult ReferenceType RubyBigDecimal MemberReference runtime MemberReference modulo	1
MethodDeclaration Modifier public ReferenceType Object next LocalVariableDeclaration ReferenceType Object VariableDeclarator obj Literal null WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator node Cast ReferenceType MethodInvocation iter next StatementExpression Assignment MemberReference obj MethodInvocation node get = IfStatement BinaryOperation != MemberReference obj Literal null BreakStatement ReturnStatement MemberReference obj	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "times" ElementValuePair frame Literal true ElementValuePair module Literal true ElementValuePair visibility MemberReference Visibility PRIVATE ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType Block unusedBlock ReturnStatement MethodInvocation MethodInvocation context getRuntime	0
MethodDeclaration Modifier public ReferenceType RubyModule defineModuleUnder FormalParameter ReferenceType String name ReturnStatement MethodInvocation MethodInvocation MemberReference name This defineModuleUnder getRuntime	0
MethodDeclaration FormalParameter ReferenceType StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier protected ReferenceType LoadServiceResource tryResourceFromLoadPath FormalParameter ReferenceType String namePlusSuffix FormalParameter ReferenceType String loadPathEntry RaiseException LocalVariableDeclaration ReferenceType LoadServiceResource VariableDeclarator foundResource Literal null TryStatement IfStatement MethodInvocation ! Ruby isSecurityRestricted BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator reportedPath BinaryOperation + BinaryOperation + MemberReference loadPathEntry Literal "/" MemberReference namePlusSuffix LocalVariableDeclaration ReferenceType JRubyFile VariableDeclarator actualPath LocalVariableDeclaration BasicType boolean VariableDeclarator absolute Literal false IfStatement ClassCreator MethodInvocation isAbsolute ReferenceType File MemberReference reportedPath BlockStatement StatementExpression Assignment MemberReference absolute Literal true = StatementExpression Assignment MemberReference actualPath MethodInvocation JRubyFile MemberReference loadPathEntry MethodInvocation RubyFile MethodInvocation runtime getCurrentContext MemberReference namePlusSuffix expandUserPath create = BlockStatement StatementExpression Assignment MemberReference absolute Literal false = IfStatement BinaryOperation != MethodInvocation reportedPath Literal 0 charAt Literal '.' BlockStatement StatementExpression Assignment MemberReference reportedPath BinaryOperation + Literal "./" MemberReference reportedPath = StatementExpression Assignment MemberReference actualPath MethodInvocation JRubyFile MethodInvocation JRubyFile MethodInvocation getAbsolutePath MethodInvocation runtime getCurrentDirectory MemberReference loadPathEntry create MethodInvocation RubyFile MethodInvocation runtime getCurrentContext MemberReference namePlusSuffix expandUserPath create = StatementExpression MethodInvocation Literal MethodInvocation actualPath toString debugLogTry IfStatement BinaryOperation && MethodInvocation actualPath isFile MethodInvocation actualPath canRead BlockStatement StatementExpression Assignment MemberReference foundResource ClassCreator ReferenceType LoadServiceResource MemberReference actualPath MemberReference reportedPath MemberReference absolute = StatementExpression MethodInvocation MemberReference foundResource debugLogFound CatchClause CatchClauseParameter SecurityException secEx ReturnStatement MemberReference foundResource	1
MethodDeclaration Modifier public Annotation Override StatementExpression MethodInvocation MemberReference SIZE MemberReference	0
MethodDeclaration Modifier public ReferenceType Object case285_line1108 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType IfNode MethodInvocation Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 5 MemberReference yyTop yyVals getPosition MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 4 MemberReference yyTop yyVals getConditionNode Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public ReferenceType PrintStream getErrorStream ReturnStatement MethodInvocation runtime getErrorStream	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType NextNode Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals MemberReference NilImplicitNode NIL = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public static Annotation Deprecated ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject recv ReturnStatement MethodInvocation MethodInvocation recv getRuntime	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "[]" ReferenceType IRubyObject aref FormalParameter ReferenceType IRubyObject index ThrowStatement MethodInvocation MethodInvocation Literal "not a java array" newTypeError getRuntime	0
MethodDeclaration Modifier public ReferenceType Object convert FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject rubyObject IfStatement MethodInvocation rubyObject Literal "to_i" respondsTo BlockStatement ReturnStatement ClassCreator ReferenceType Byte Cast BasicType byte Cast ReferenceType RubyNumeric MethodInvocation rubyObject MemberReference context Literal "to_i" callMethod ReturnStatement ClassCreator ReferenceType Byte Cast BasicType byte Literal 0	1
MethodDeclaration Modifier public static ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime ReturnStatement MethodInvocation MemberReference runtime egid	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "to_r" ReferenceType IRubyObject to_r FormalParameter ReferenceType ThreadContext context ReturnStatement This	1
MethodDeclaration Modifier public ReferenceType NodeType getNodeType ReturnStatement MemberReference NodeType	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator arg MethodInvocation MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference getArgsNode IfStatement BinaryOperation instanceof MemberReference arg ReferenceType RubyArray BlockStatement LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator nodes Cast ReferenceType RubyArray MemberReference arg SwitchStatement MethodInvocation nodes size SwitchStatementCase Literal 0 ReturnStatement MethodInvocation callAdapter MemberReference context MemberReference self MemberReference self call SwitchStatementCase Literal 1 ReturnStatement MethodInvocation callAdapter MemberReference context MemberReference self MemberReference self MethodInvocation nodes Literal 0 eltInternal call SwitchStatementCase Literal 2 ReturnStatement MethodInvocation callAdapter MemberReference context MemberReference self MemberReference self MethodInvocation nodes Literal 0 eltInternal MethodInvocation nodes Literal 1 eltInternal call SwitchStatementCase Literal 3 ReturnStatement MethodInvocation callAdapter MemberReference context MemberReference self MemberReference self MethodInvocation nodes Literal 0 eltInternal MethodInvocation nodes Literal 1 eltInternal MethodInvocation nodes Literal 2 eltInternal call SwitchStatementCase ReturnStatement MethodInvocation callAdapter MemberReference context MemberReference self MemberReference self MethodInvocation nodes call ReturnStatement MethodInvocation callAdapter MemberReference context MemberReference self MemberReference self MemberReference arg call	0
MethodDeclaration Modifier public final get FormalParameter BasicType long offset FormalParameter BasicType int dst FormalParameter BasicType int off FormalParameter BasicType int len StatementExpression MethodInvocation MemberReference offset BinaryOperation << MemberReference len Literal 2 checkBounds LocalVariableDeclaration BasicType int VariableDeclarator begin MethodInvocation MemberReference offset index ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference len MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector BinaryOperation + MemberReference off MemberReference i dst MethodInvocation MemberReference buffer BinaryOperation + MemberReference begin BinaryOperation << MemberReference i Literal 2 =	1
MethodDeclaration Modifier public ReferenceType JavaClass FormalParameter ReferenceType Class clazz ReturnStatement MethodInvocation MemberReference clazz get	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 FormalParameter ReferenceType IRubyObject arg3 FormalParameter ReferenceType FormalParameter ReferenceType Type type ThrowStatement MethodInvocation context MethodInvocation MemberReference NOREASON MethodInvocation context MethodInvocation getNil getRuntime Literal "yield out of getRuntime	0
MethodDeclaration Modifier public ReferenceType String getFrameName ReturnStatement MethodInvocation MethodInvocation getName	0
MethodDeclaration Modifier public static ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject receiver FormalParameter ReferenceType Visibility visibility FormalParameter ReferenceType String name FormalParameter ReferenceType CallType callType FormalParameter ReferenceType Block block ReturnStatement MethodInvocation MethodInvocation MemberReference context MemberReference receiver MethodInvocation receiver getMetaClass MemberReference name MemberReference block call MemberReference context MemberReference receiver MemberReference visibility MemberReference name MemberReference callType	0
MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 FormalParameter ReferenceType IRubyObject arg3 FormalParameter ReferenceType FormalParameter ReferenceType Block ReferenceType Type type FormalParameter ReferenceType Block unusedBlock ReturnStatement MethodInvocation MemberReference context MemberReference arg0 MemberReference arg1 MemberReference arg2 MemberReference arg3 MemberReference MemberReference type call	1
MethodDeclaration Modifier public ReferenceType RubyModule FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator module MethodInvocation objectClass MemberReference name getConstantAt IfStatement BinaryOperation == MemberReference module Literal null BlockStatement StatementExpression Assignment MemberReference module MethodInvocation MemberReference name = IfStatement BinaryOperation >= MethodInvocation getSafeLevel Literal 4 BlockStatement ThrowStatement MethodInvocation Literal module newSecurityError IfStatement MethodInvocation ! module isModule BlockStatement ThrowStatement MethodInvocation BinaryOperation + MemberReference name Literal " is not a newTypeError ReturnStatement Cast ReferenceType RubyModule MemberReference module	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "read" ElementValuePair meta Literal true ElementValuePair required Literal 1 ElementValuePair optional Literal 3 ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject read19 FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block unusedBlock LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator nil MethodInvocation context MethodInvocation getNil getRuntime LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator path MemberReference ArraySelector Literal 0 args LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator length MemberReference nil LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator offset MemberReference nil LocalVariableDeclaration ReferenceType RubyHash VariableDeclarator options Literal null IfStatement BinaryOperation > MemberReference args length Literal 3 BlockStatement IfStatement BinaryOperation instanceof MemberReference ArraySelector Literal 3 args ReferenceType RubyHash ThrowStatement MethodInvocation context MethodInvocation Literal be a newTypeError getRuntime StatementExpression Assignment MemberReference options Cast ReferenceType RubyHash MemberReference ArraySelector Literal 3 args = StatementExpression Assignment MemberReference offset MemberReference ArraySelector Literal 2 args = StatementExpression Assignment MemberReference length MemberReference ArraySelector Literal 1 args = IfStatement BinaryOperation > MemberReference args length Literal 2 BlockStatement IfStatement BinaryOperation instanceof MemberReference ArraySelector Literal 2 args ReferenceType RubyHash BlockStatement StatementExpression Assignment MemberReference options Cast ReferenceType RubyHash MemberReference ArraySelector Literal 2 args = BlockStatement StatementExpression Assignment MemberReference offset MemberReference ArraySelector Literal 2 args = StatementExpression Assignment MemberReference length MemberReference ArraySelector Literal 1 args = IfStatement BinaryOperation > MemberReference args length Literal 1 BlockStatement IfStatement BinaryOperation instanceof MemberReference ArraySelector Literal 1 args ReferenceType RubyHash BlockStatement StatementExpression Assignment MemberReference options Cast ReferenceType RubyHash MemberReference ArraySelector Literal 1 args = BlockStatement StatementExpression Assignment MemberReference length MemberReference ArraySelector Literal 1 args = ReturnStatement MethodInvocation MemberReference context MemberReference recv MemberReference path MemberReference length MemberReference offset Cast ReferenceType RubyHash MemberReference options read19	1
MethodDeclaration Modifier public final put FormalParameter BasicType long offset FormalParameter BasicType short src FormalParameter BasicType int off FormalParameter BasicType int len StatementExpression MethodInvocation MemberReference offset BinaryOperation << MemberReference len Literal 1 checkBounds StatementExpression MethodInvocation BinaryOperation + MemberReference address MemberReference offset MemberReference src MemberReference off MemberReference len	0
MethodDeclaration Modifier public Annotation Deprecated ReferenceType IRubyObject readline FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject args ReturnStatement TernaryExpression BinaryOperation == MemberReference args length Literal 0 MethodInvocation MemberReference context readline MethodInvocation MemberReference context MemberReference ArraySelector Literal 0 args readline	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "inspect" ReferenceType IRubyObject inspect FormalParameter ReferenceType ThreadContext context ReturnStatement MethodInvocation RubyString MethodInvocation context getRuntime MethodInvocation String Literal MemberReference size format newString	0
MethodDeclaration Modifier public final ReferenceType FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType String descriptor ReturnStatement MethodInvocation runtimeCache This MemberReference context Literal 7 MemberReference descriptor	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal Annotation Override ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context ReturnStatement MethodInvocation context MethodInvocation MethodInvocation MemberReference context This f_abs MethodInvocation MemberReference context This newArray getRuntime	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "*" ReferenceType IRubyObject op_mul FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject other IfStatement BinaryOperation instanceof MemberReference other ReferenceType RubyFixnum BlockStatement ReturnStatement MethodInvocation MemberReference context MemberReference other BlockStatement ReturnStatement MethodInvocation MemberReference context MemberReference other	1
MethodDeclaration Modifier public ReferenceType NodeType getNodeType ReturnStatement MemberReference NodeType CONSTNODE	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "load" ElementValuePair required Literal 1 ElementValuePair optional Literal 1 ElementValuePair frame Literal true ElementValuePair module Literal true ElementValuePair visibility MemberReference PRIVATE ReferenceType IRubyObject load FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation recv getRuntime LocalVariableDeclaration ReferenceType RubyString VariableDeclarator file MemberReference ArraySelector Literal 0 MethodInvocation convertToString args LocalVariableDeclaration BasicType boolean VariableDeclarator wrap TernaryExpression BinaryOperation == MemberReference args length Literal 2 MemberReference ArraySelector Literal 1 MethodInvocation isTrue args Literal false StatementExpression MethodInvocation runtime MethodInvocation MethodInvocation file MethodInvocation toString getByteList MemberReference wrap load ReturnStatement MethodInvocation runtime getTrue	1
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject args StatementExpression MethodInvocation MethodInvocation context getRuntime LocalVariableDeclaration ReferenceType VariableDeclarator proxy MethodInvocation MemberReference self LocalVariableDeclaration BasicType int VariableDeclarator len MemberReference args length LocalVariableDeclaration ReferenceType Object VariableDeclarator convertedArgs ArrayCreator ReferenceType Object MemberReference len LocalVariableDeclaration ReferenceType JavaMethod VariableDeclarator method Cast ReferenceType JavaMethod MethodInvocation MemberReference self MemberReference name MemberReference args MemberReference len ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference len MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i convertedArgs MethodInvocation MemberReference context MemberReference ArraySelector MemberReference i args MemberReference method MemberReference i convertArg = ReturnStatement MethodInvocation method MethodInvocation proxy getObject MemberReference convertedArgs	0
MethodDeclaration Modifier public static ReferenceType IRubyObject wait FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType IRubyObject args IfStatement BinaryOperation > MemberReference args length Literal 0 BlockStatement ReturnStatement MethodInvocation MemberReference runtime MemberReference args LocalVariableDeclaration BasicType int VariableDeclarator status ArrayCreator BasicType int Literal 1 LocalVariableDeclaration BasicType int VariableDeclarator pid MethodInvocation runtime MethodInvocation MemberReference status wait getPosix IfStatement BinaryOperation == MemberReference pid Literal - 1 BlockStatement ThrowStatement MethodInvocation runtime StatementExpression MethodInvocation runtime MethodInvocation Literal MethodInvocation MemberReference runtime MemberReference ArraySelector Literal 0 status set getGlobalVariables ReturnStatement MethodInvocation runtime MemberReference pid newFixnum	0
MethodDeclaration Modifier public final marshal FormalParameter ReferenceType Invocation invocation FormalParameter ReferenceType InvocationBuffer buffer FormalParameter ReferenceType IRubyObject parameter StatementExpression MethodInvocation buffer MethodInvocation Util MemberReference parameter int16Value putShort	1
MethodDeclaration Modifier public BasicType boolean isConvertible FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject value ReturnStatement Literal true	0
MethodDeclaration Modifier public StatementExpression MethodInvocation method MethodInvocation aload	0
MethodDeclaration Modifier public static ReferenceType IRubyObject negate FormalParameter ReferenceType IRubyObject value FormalParameter ReferenceType Ruby runtime IfStatement MethodInvocation value isTrue ReturnStatement MethodInvocation runtime getFalse ReturnStatement MethodInvocation runtime getTrue	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "catch" ElementValuePair required Literal 1 ElementValuePair frame Literal true ElementValuePair module Literal true ElementValuePair visibility MemberReference PRIVATE ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject tag FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType VariableDeclarator target ClassCreator ReferenceType MethodInvocation tag asJavaString TryStatement StatementExpression MethodInvocation context MemberReference target ReturnStatement MethodInvocation block MemberReference context MemberReference tag yield CatchClause CatchClauseParameter tj IfStatement BinaryOperation == MethodInvocation tj getTarget MemberReference target ReturnStatement Cast ReferenceType IRubyObject MethodInvocation tj getValue ThrowStatement MemberReference tj StatementExpression MethodInvocation context	1
MethodDeclaration Modifier public FormalParameter ReferenceType String name StatementExpression MethodInvocation method MemberReference name ldc StatementExpression MethodInvocation method MethodInvocation ClassReference ReferenceType RubyClass p Literal MethodInvocation ClassReference ReferenceType DynamicMethod MethodInvocation ClassReference ReferenceType String params sig invokevirtual StatementExpression MethodInvocation method MethodInvocation ClassReference ReferenceType DynamicMethod p Literal MethodInvocation ClassReference ReferenceType Visibility sig invokevirtual	0
MethodDeclaration Modifier public ReferenceType CompiledBlockCallback19 getBlockCallback19 FormalParameter ReferenceType String method FormalParameter ReferenceType Object scriptObject LocalVariableDeclaration ReferenceType Class VariableDeclarator typeClass MethodInvocation scriptObject getClass LocalVariableDeclaration ReferenceType String VariableDeclarator typePathString MethodInvocation MemberReference typeClass p LocalVariableDeclaration ReferenceType String VariableDeclarator mname BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation typeClass getName Literal "BlockCallback$" MemberReference method Literal "xx1" LocalVariableDeclaration ReferenceType String VariableDeclarator mnamePath BinaryOperation + BinaryOperation + BinaryOperation + MemberReference typePathString Literal "BlockCallback$" MemberReference method Literal "xx1" SynchronizedStatement MemberReference classLoader LocalVariableDeclaration ReferenceType Class VariableDeclarator c MethodInvocation MemberReference mname tryClass TryStatement IfStatement BinaryOperation == MemberReference c Literal null BlockStatement LocalVariableDeclaration ReferenceType ClassWriter VariableDeclarator cw MethodInvocation MemberReference mnamePath MemberReference typeClass createBlockCtor19 LocalVariableDeclaration ReferenceType SkinnyMethodAdapter VariableDeclarator mv MethodInvocation MemberReference cw StatementExpression MethodInvocation mv Literal 0 aload StatementExpression MethodInvocation mv MemberReference mnamePath Literal "$scriptObject" MethodInvocation MemberReference typeClass ci getfield StatementExpression MethodInvocation mv Literal 1 aload StatementExpression MethodInvocation mv Literal 2 aload StatementExpression MethodInvocation mv Literal 3 aload StatementExpression MethodInvocation mv Literal 4 aload StatementExpression MethodInvocation mv MemberReference typePathString MemberReference method MethodInvocation ClassReference ReferenceType IRubyObject BinaryOperation + BinaryOperation + Literal "L" MemberReference typePathString Literal ";" ClassReference ReferenceType ThreadContext ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject ClassReference ReferenceType Block sig invokestatic StatementExpression MethodInvocation mv areturn StatementExpression MethodInvocation mv Literal 2 Literal 3 visitMaxs StatementExpression Assignment MemberReference c MethodInvocation MemberReference cw MemberReference mv MemberReference mname endCall = LocalVariableDeclaration ReferenceType CompiledBlockCallback19 VariableDeclarator ic Cast ReferenceType CompiledBlockCallback19 MethodInvocation c MethodInvocation MemberReference scriptObject newInstance ClassReference ReferenceType Object getConstructor ReturnStatement MemberReference ic CatchClause CatchClauseParameter IllegalArgumentException e ThrowStatement MemberReference e CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation e printStackTrace ThrowStatement ClassCreator ReferenceType IllegalArgumentException MethodInvocation e getMessage	1
MethodDeclaration Modifier final public static ReferenceType IRubyObject newUnsigned32 FormalParameter ReferenceType Ruby runtime FormalParameter BasicType int value ReturnStatement MethodInvocation runtime TernaryExpression BinaryOperation < MemberReference value Literal 0 Cast BasicType long BinaryOperation + BinaryOperation & MemberReference value Literal Literal 0x80000000L MemberReference value newFixnum	1
MethodDeclaration Modifier public ReferenceType ArgsNode ReturnStatement Cast ReferenceType ArgsNode MethodInvocation getVarNode	0
MethodDeclaration Modifier public ReferenceType IRubyObject ReturnStatement MemberReference	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal Literal ReferenceType RubyFixnum pos StatementExpression MethodInvocation check ReturnStatement MethodInvocation RubyFixnum MethodInvocation getRuntime MemberReference pos newFixnum	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal ElementValuePair frame Literal true ElementValuePair module Literal true ElementValuePair visibility MemberReference PRIVATE ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType RubyProc FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType Block block ReturnStatement MethodInvocation context MethodInvocation MemberReference Block.Type PROC MemberReference block newProc getRuntime	1
MethodDeclaration Modifier public FormalParameter ReferenceType Label arg0 StatementExpression MethodInvocation MethodInvocation MemberReference MemberReference arg0 getMethodVisitor	0
MethodDeclaration Modifier private ReferenceType IRubyObject multiByteRStrip FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType Encoding enc FormalParameter BasicType byte bytes FormalParameter BasicType int s FormalParameter BasicType int end LocalVariableDeclaration BasicType int VariableDeclarator endp MemberReference end LocalVariableDeclaration BasicType int VariableDeclarator prev WhileStatement BinaryOperation != Assignment MemberReference prev MethodInvocation enc MemberReference bytes MemberReference s MemberReference endp MemberReference end prevCharHead = Literal - 1 BlockStatement IfStatement MethodInvocation ! enc MethodInvocation MemberReference runtime MemberReference enc MemberReference bytes MemberReference prev MemberReference end codePoint isSpace BreakStatement StatementExpression Assignment MemberReference endp MemberReference prev = IfStatement BinaryOperation < MemberReference prev MemberReference end BlockStatement StatementExpression MethodInvocation Literal 0 BinaryOperation + BinaryOperation - MemberReference prev MemberReference s Literal 1 view ReturnStatement This ReturnStatement MethodInvocation runtime getNil	1
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject getArgValues IfStatement MethodInvocation ! staticScope BlockStatement ReturnStatement MethodInvocation parent getArgValues LocalVariableDeclaration BasicType int VariableDeclarator totalArgs BinaryOperation + MethodInvocation staticScope getRequiredArgs MethodInvocation staticScope getOptionalArgs AssertStatement BinaryOperation <= MemberReference totalArgs MemberReference SIZE MemberReference SIZE_ERROR IfStatement BinaryOperation < MethodInvocation staticScope getRestArg Literal 0 BlockStatement SwitchStatement MemberReference totalArgs SwitchStatementCase Literal 0 ReturnStatement MemberReference IRubyObject SwitchStatementCase Literal 1 ReturnStatement ArrayCreator ReferenceType IRubyObject ArrayInitializer MemberReference variableValueZero SwitchStatementCase Literal 2 ReturnStatement ArrayCreator ReferenceType IRubyObject ArrayInitializer MemberReference variableValueZero MemberReference variableValueOne SwitchStatementCase ThrowStatement ClassCreator ReferenceType RuntimeException Literal "more args requested than available variables" BlockStatement LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator restArg MethodInvocation MethodInvocation staticScope getRestArg Literal 0 getValue AssertStatement BinaryOperation != MemberReference restArg Literal null LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator splattedArgs MethodInvocation RuntimeHelpers MemberReference restArg splatValue LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator argValues ArrayCreator ReferenceType IRubyObject BinaryOperation + MemberReference totalArgs MethodInvocation splattedArgs size StatementExpression MethodInvocation System MethodInvocation splattedArgs toJavaArray Literal 0 MemberReference argValues MemberReference totalArgs MethodInvocation splattedArgs size arraycopy SwitchStatement MemberReference totalArgs SwitchStatementCase Literal 2 StatementExpression Assignment MemberReference ArraySelector Literal 1 argValues MemberReference variableValueOne = SwitchStatementCase Literal 1 StatementExpression Assignment MemberReference ArraySelector Literal 0 argValues MemberReference variableValueZero = ReturnStatement MemberReference argValues	1
MethodDeclaration Modifier public BasicType int ReturnStatement MethodInvocation incrementAndGet	0
MethodDeclaration Modifier public StatementExpression MethodInvocation method MethodInvocation ClassReference ReferenceType Object p Literal "toString" MethodInvocation ClassReference ReferenceType String sig invokevirtual	0
MethodDeclaration Modifier public StatementExpression MethodInvocation localContext Literal null set StatementExpression MethodInvocation MethodInvocation Thread currentThread remove	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "exception" ElementValuePair optional Literal 1 ElementValuePair rest Literal true ElementValuePair meta Literal true ReferenceType IRubyObject exception FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block ReturnStatement Cast ReferenceType RubyClass MemberReference recv	0
MethodDeclaration Modifier protected Annotation Override tearDown Exception StatementExpression SuperMethodInvocation tearDown StatementExpression MethodInvocation runtime tearDown	0
MethodDeclaration Modifier public final get FormalParameter BasicType long offset FormalParameter BasicType long dst FormalParameter BasicType int off FormalParameter BasicType int len ThrowStatement MethodInvocation ex	0
MethodDeclaration Modifier public ReferenceType Object case339_line1261 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression MethodInvocation support pushBlockScope ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public Annotation Override BasicType int getNativeTypeIndex ReturnStatement MemberReference ClassIndex STRUCT	0
MethodDeclaration Modifier public ReferenceType RubyException getException ReturnStatement MemberReference exception	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair required Literal 1 ElementValuePair optional Literal 1 ElementValuePair meta Literal true ElementValuePair backtrace Literal true ReferenceType IRubyObject s_deflate FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args Exception LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation recv getRuntime StatementExpression Assignment MemberReference args MethodInvocation Arity MemberReference runtime MemberReference args Literal 1 Literal 1 scanArgs = LocalVariableDeclaration BasicType int VariableDeclarator level MemberReference IfStatement MemberReference ! ArraySelector Literal 1 MethodInvocation isNil args BlockStatement StatementExpression Assignment MemberReference level MethodInvocation RubyNumeric MemberReference ArraySelector Literal 1 args fix2int = StatementExpression MethodInvocation MemberReference runtime MemberReference level ReturnStatement MethodInvocation ZlibDeflate MemberReference recv MemberReference ArraySelector Literal 0 MethodInvocation convertToString MethodInvocation getByteList args MemberReference level s_deflate	1
MethodDeclaration Modifier private static addInterface FormalParameter ReferenceType Set FormalParameter ReferenceType Map methods FormalParameter ReferenceType Class interfaze FormalParameter ReferenceType Set names IfStatement MethodInvocation MemberReference interfaze add BlockStatement StatementExpression MethodInvocation MemberReference methods MemberReference interfaze MemberReference names StatementExpression MethodInvocation MemberReference MemberReference methods MethodInvocation interfaze getInterfaces MemberReference names	0
MethodDeclaration Modifier private ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Regex pattern FormalParameter ReferenceType Regex prepared FormalParameter ReferenceType Encoding enc FormalParameter ReferenceType RubyRegexp regexp FormalParameter BasicType int tuFlags LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration BasicType byte VariableDeclarator bytes MemberReference value bytes LocalVariableDeclaration BasicType int VariableDeclarator begin MemberReference value begin LocalVariableDeclaration BasicType int VariableDeclarator BinaryOperation + MemberReference begin MemberReference value realSize LocalVariableDeclaration Modifier final ReferenceType Matcher VariableDeclarator matcher MethodInvocation prepared MemberReference bytes MemberReference begin MemberReference matcher LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator ary MethodInvocation runtime newArray LocalVariableDeclaration BasicType int VariableDeclarator end Literal 0 IfStatement BinaryOperation == MethodInvocation pattern Literal 0 BlockStatement WhileStatement BinaryOperation >= MethodInvocation matcher BinaryOperation + MemberReference begin MemberReference end MemberReference MemberReference Option NONE search Literal 0 BlockStatement StatementExpression Assignment MemberReference end MethodInvocation MemberReference matcher MemberReference enc MemberReference begin MemberReference = LocalVariableDeclaration ReferenceType RubyString VariableDeclarator substr MethodInvocation MemberReference runtime MethodInvocation matcher getBegin BinaryOperation - MethodInvocation matcher getEnd MethodInvocation matcher getBegin makeShared19 StatementExpression MethodInvocation substr MemberReference tuFlags infectBy StatementExpression MethodInvocation ary MemberReference substr append BlockStatement WhileStatement BinaryOperation >= MethodInvocation matcher BinaryOperation + MemberReference begin MemberReference end MemberReference MemberReference Option NONE search Literal 0 BlockStatement StatementExpression Assignment MemberReference end MethodInvocation MemberReference matcher MemberReference enc MemberReference begin MemberReference = StatementExpression MethodInvocation ary MethodInvocation MemberReference runtime MemberReference matcher MemberReference MemberReference tuFlags Literal true append LocalVariableDeclaration ReferenceType DynamicScope VariableDeclarator scope MethodInvocation context getCurrentScope IfStatement BinaryOperation > MethodInvocation ary size Literal 0 BlockStatement LocalVariableDeclaration ReferenceType RubyMatchData VariableDeclarator match MethodInvocation RubyRegexp MemberReference context This MemberReference scope MemberReference matcher MemberReference pattern StatementExpression Assignment MemberReference match regexp MemberReference regexp = StatementExpression MethodInvocation match MemberReference tuFlags infectBy BlockStatement StatementExpression MethodInvocation scope MethodInvocation runtime getNil setBackRef ReturnStatement MemberReference ary	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType Node childNodes ReturnStatement MethodInvocation Node MemberReference rescueNode MemberReference bodyNode MemberReference createList	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference split	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator javaInterfaces MethodInvocation self MethodInvocation Literal "@java_interfaces" fastGetInstanceVariable getInstanceVariables IfStatement BinaryOperation != MemberReference javaInterfaces Literal null ReturnStatement MethodInvocation javaInterfaces dup ReturnStatement MethodInvocation context MethodInvocation getNil getRuntime	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair required Literal 2 ElementValuePair rest Literal true ElementValuePair meta Literal true ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration BasicType int VariableDeclarator owner TernaryExpression MemberReference ! ArraySelector Literal 0 MethodInvocation isNil args MethodInvocation RubyNumeric MemberReference ArraySelector Literal 0 args num2int Literal - 1 LocalVariableDeclaration BasicType int VariableDeclarator group TernaryExpression MemberReference ! ArraySelector Literal 1 MethodInvocation isNil args MethodInvocation RubyNumeric MemberReference ArraySelector Literal 1 args num2int Literal - 1 LocalVariableDeclaration BasicType int VariableDeclarator count Literal 0 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 2 BinaryOperation < MemberReference i MemberReference args length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator filename MemberReference ArraySelector MemberReference i args IfStatement BinaryOperation != Literal 0 MethodInvocation runtime MethodInvocation MethodInvocation filename toString MemberReference owner MemberReference group getPosix BlockStatement ThrowStatement MethodInvocation runtime BlockStatement StatementExpression MemberReference ++ count ReturnStatement MethodInvocation runtime MemberReference count newFixnum	0
MethodDeclaration Modifier public static ReferenceType RubyClass FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType IRubyObject rubyClass StatementExpression MethodInvocation RubyClass MemberReference rubyClass ReturnStatement Cast ReferenceType RubyClass MemberReference rubyClass	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair rest Literal true ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject args ReturnStatement MethodInvocation MemberReference context MemberReference ArraySelector Literal 0 args	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair module Literal true ReferenceType IRubyObject rid FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self ReturnStatement MethodInvocation MethodInvocation context getRuntime rid	0
MethodDeclaration Modifier public ReferenceType Frame FormalParameter ReferenceType FormalParameter ReferenceType DynamicScope FormalParameter ReferenceType RubyModule LocalVariableDeclaration ReferenceType Frame VariableDeclarator MethodInvocation MemberReference MemberReference StatementExpression MethodInvocation MemberReference ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter BasicType int i TryStatement StatementExpression MethodInvocation index This MemberReference i setInt CatchClause CatchClauseParameter IllegalArgumentException ex StatementExpression MethodInvocation ex printStackTrace CatchClause CatchClauseParameter IllegalAccessException ex StatementExpression MethodInvocation ex printStackTrace	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ReferenceType RubyArray FormalParameter ReferenceType ThreadContext context LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType String VariableDeclarator names ClassCreator ReferenceType HashSet TypeArgument ReferenceType String ForStatement ForControl VariableDeclaration ReferenceType RubyModule VariableDeclarator p This BinaryOperation != MemberReference p Literal null Assignment MemberReference p MethodInvocation p getSuperClass = BlockStatement StatementExpression MethodInvocation names MethodInvocation p addAll LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator ary MethodInvocation context MethodInvocation newArray getRuntime StatementExpression MethodInvocation ary MemberReference names addAll ReturnStatement MemberReference ary	1
MethodDeclaration Modifier public Annotation JRubyMethod ReferenceType IRubyObject return_type ReturnStatement MethodInvocation MethodInvocation getNil getRuntime	1
MethodDeclaration Modifier public Annotation Override BasicType boolean isEmpty ReturnStatement BinaryOperation == MethodInvocation size Literal 0	0
MethodDeclaration Modifier private ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType DynamicMethod method ReturnStatement MethodInvocation RuntimeHelpers MethodInvocation MemberReference context MemberReference self MethodInvocation self getMetaClass MemberReference methodName MemberReference Block NULL_BLOCK call MemberReference context MemberReference self MethodInvocation method getVisibility MemberReference methodName MemberReference callType	0
MethodDeclaration Modifier public static Annotation Deprecated ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject port FormalParameter ReferenceType IRubyObject host ReturnStatement MethodInvocation MethodInvocation recv MethodInvocation getCurrentContext getRuntime MemberReference recv MemberReference port MemberReference host	1
MethodDeclaration Modifier private invokeCallConfigPost FormalParameter ReferenceType SkinnyMethodAdapter mv FormalParameter ReferenceType String superClass FormalParameter ReferenceType CallConfiguration callConfig IfStatement MethodInvocation callConfig isNoop ReturnStatement StatementExpression MethodInvocation mv Literal 1 aload StatementExpression MethodInvocation mv MemberReference superClass MethodInvocation MemberReference callConfig getPostMethod MethodInvocation VoidClassReference MethodInvocation ClassReference ReferenceType ThreadContext params sig invokestatic	1
MethodDeclaration Modifier public final putShort FormalParameter BasicType long offset FormalParameter BasicType short value ThrowStatement MethodInvocation ex	0
MethodDeclaration Modifier public BasicType int write FormalParameter ReferenceType ByteBuffer src IOException LocalVariableDeclaration BasicType int VariableDeclarator max MethodInvocation src remaining LocalVariableDeclaration BasicType int VariableDeclarator v MethodInvocation INSTANCE MemberReference fd MemberReference src MemberReference max Literal 0 send IfStatement BinaryOperation != MemberReference v Literal - 1 BlockStatement StatementExpression MethodInvocation src BinaryOperation + MethodInvocation src position MemberReference v position ReturnStatement MemberReference v	0
MethodDeclaration Modifier public FormalParameter ReferenceType p StatementExpression MethodInvocation p Literal run	1
MethodDeclaration Modifier public FormalParameter ReferenceType RubyClass superClazz IfStatement BinaryOperation == MemberReference superClazz Literal null StatementExpression Assignment MemberReference superClazz MethodInvocation runtime getObject = StatementExpression MethodInvocation superClazz MethodInvocation runtime getCurrentContext MemberReference superClazz This invokeInherited	1
MethodDeclaration Modifier public final ReferenceType RubySymbol FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType String name ReturnStatement MethodInvocation runtimeCache MemberReference runtime Literal 4 MemberReference name	0
MethodDeclaration Modifier public ReferenceType IR_Method FormalParameter ReferenceType Operand receiver IfStatement BinaryOperation instanceof MemberReference _methAddr ReferenceType MethAddr ReturnStatement Literal null IfStatement BinaryOperation instanceof MemberReference receiver ReferenceType MetaObject BlockStatement LocalVariableDeclaration ReferenceType IR_Module VariableDeclarator m Cast ReferenceType IR_Module Cast ReferenceType MetaObject MemberReference receiver ReturnStatement MethodInvocation m Cast ReferenceType MethAddr MemberReference _methAddr getClassMethod BlockStatement LocalVariableDeclaration ReferenceType IR_Class VariableDeclarator c MethodInvocation receiver ReturnStatement TernaryExpression BinaryOperation == MemberReference c Literal null Literal null MethodInvocation c Cast ReferenceType MethAddr MemberReference _methAddr getInstanceMethod	1
MethodDeclaration Modifier public BasicType boolean ReturnStatement Literal true	0
MethodDeclaration Modifier public ReferenceType RubyBoolean getFalse ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType computeValue FormalParameter ReferenceType String methodName FormalParameter ReferenceType arg LocalVariableDeclaration ReferenceType Double VariableDeclarator v1 MemberReference _value LocalVariableDeclaration ReferenceType Double VariableDeclarator v2 TernaryExpression BinaryOperation instanceof MemberReference arg ReferenceType Fixnum BinaryOperation * Literal 1.0 Cast ReferenceType Fixnum MemberReference arg Cast ReferenceType Double Cast ReferenceType Float MemberReference arg IfStatement MethodInvocation methodName Literal "+" equals ReturnStatement ClassCreator ReferenceType Float BinaryOperation + MemberReference v1 MemberReference v2 IfStatement MethodInvocation methodName Literal "-" equals ReturnStatement ClassCreator ReferenceType Float BinaryOperation - MemberReference v1 MemberReference v2 IfStatement MethodInvocation methodName Literal "*" equals ReturnStatement ClassCreator ReferenceType Float BinaryOperation * MemberReference v1 MemberReference v2 IfStatement MethodInvocation methodName Literal "/" equals BlockStatement ReturnStatement TernaryExpression BinaryOperation == MemberReference v2 Literal 0.0 Literal null ClassCreator ReferenceType Float BinaryOperation / MemberReference v1 MemberReference v2 ReturnStatement Literal null	1
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType Node childNodes ReturnStatement MethodInvocation Node MemberReference MemberReference nameNode MemberReference argsNode MemberReference bodyNode createList	0
MethodDeclaration Modifier public FormalParameter ReferenceType MethodDeclaration md LocalVariableDeclaration ReferenceType JRubyMethod VariableDeclarator anno MethodInvocation md ClassReference ReferenceType JRubyMethod getAnnotation IfStatement BinaryOperation && BinaryOperation != MemberReference anno Literal null BinaryOperation != MemberReference out Literal null BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator isStatic MethodInvocation md MethodInvocation MemberReference Modifier STATIC contains getModifiers LocalVariableDeclaration ReferenceType String VariableDeclarator qualifiedName MethodInvocation MethodInvocation md LocalVariableDeclaration BasicType boolean VariableDeclarator hasContext Literal false LocalVariableDeclaration BasicType boolean VariableDeclarator hasBlock Literal false ForStatement EnhancedForControl VariableDeclaration ReferenceType ParameterDeclaration VariableDeclarator pd MethodInvocation md getParameters BlockStatement StatementExpression Assignment MemberReference hasContext MethodInvocation pd MethodInvocation toString MethodInvocation Literal "org.jruby.runtime.ThreadContext" equals getType |= StatementExpression Assignment MemberReference hasBlock MethodInvocation pd MethodInvocation toString MethodInvocation Literal "org.jruby.runtime.Block" equals getType |= LocalVariableDeclaration BasicType int VariableDeclarator actualRequired MethodInvocation MethodInvocation md MethodInvocation size getParameters MethodInvocation anno optional MethodInvocation anno rest MemberReference isStatic MemberReference hasContext MemberReference hasBlock calculateActualRequired LocalVariableDeclaration ReferenceType String VariableDeclarator annotatedBindingName MethodInvocation CodegenUtils MethodInvocation md getSimpleName MemberReference qualifiedName MemberReference isStatic MemberReference actualRequired MethodInvocation anno optional Literal true MethodInvocation anno frame getAnnotatedBindingClassName LocalVariableDeclaration ReferenceType String VariableDeclarator implClass TernaryExpression MethodInvocation anno meta Literal Literal "cls" StatementExpression MethodInvocation out BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal " = new " MemberReference annotatedBindingName Literal "(" MemberReference implClass Literal ", Visibility." MethodInvocation anno visibility Literal ");" println StatementExpression MethodInvocation out BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal " populateMethod(javaMethod, " Literal \"" MethodInvocation md getSimpleName Literal "\", " MemberReference isStatic Literal ", " Literal "CallConfiguration." MethodInvocation MemberReference anno Literal ");" println StatementExpression MethodInvocation MemberReference md MemberReference anno generateMethodAddCalls	1
MethodDeclaration Modifier public static ReferenceType String getType FormalParameter BasicType byte b ReturnStatement Literal "byte"	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair required Literal 1 ReferenceType IRubyObject skip FormalParameter ReferenceType IRubyObject regex ReturnStatement MethodInvocation MemberReference regex Literal true Literal false Literal true	0
MethodDeclaration Modifier private ReferenceType Segment TypeArgument ReferenceType T TypeArgument ReferenceType A FormalParameter BasicType int hash ReturnStatement MemberReference ArraySelector BinaryOperation & BinaryOperation >>> MemberReference hash MemberReference MemberReference	0
MethodDeclaration Modifier public ReferenceType String getTypeInstance FormalParameter BasicType long i FormalParameter ReferenceType String o ReturnStatement Literal	0
MethodDeclaration Modifier public ReferenceType IRubyObject runScript FormalParameter ReferenceType Script script LocalVariableDeclaration ReferenceType ThreadContext VariableDeclarator context MethodInvocation getCurrentContext TryStatement ReturnStatement MethodInvocation script MemberReference context MethodInvocation context MemberReference IRubyObject MemberReference Block NULL_BLOCK load CatchClause CatchClauseParameter rj ReturnStatement Cast ReferenceType IRubyObject MethodInvocation rj getValue	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType Node childNodes ReturnStatement MemberReference EMPTY_LIST	0
MethodDeclaration Modifier public visit FormalParameter ReferenceType IRubyObject key FormalParameter ReferenceType IRubyObject value StatementExpression MethodInvocation result MethodInvocation RubyArray MemberReference runtime MemberReference key MemberReference value newArray append	0
MethodDeclaration Modifier public static ReferenceType IRubyObject invoke FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType String name FormalParameter ReferenceType CallType callType ReturnStatement MethodInvocation RuntimeHelpers MemberReference context MemberReference self MemberReference name MemberReference IRubyObject MemberReference callType MemberReference Block NULL_BLOCK invoke	0
MethodDeclaration Modifier public Annotation Override FormalParameter ReferenceType IRubyObject clone LocalVariableDeclaration ReferenceType RubyStruct VariableDeclarator Cast ReferenceType RubyStruct MemberReference clone StatementExpression Assignment MemberReference values ArrayCreator ReferenceType IRubyObject MemberReference values length = StatementExpression MethodInvocation System MemberReference values Literal 0 MemberReference values Literal 0 MemberReference values length arraycopy	0
MethodDeclaration Modifier public static ReferenceType String FormalParameter ReferenceType String one FormalParameter ReferenceType String two FormalParameter ReferenceType String FormalParameter ReferenceType String FormalParameter ReferenceType String ReturnStatement ArrayCreator ReferenceType String ArrayInitializer MemberReference one MemberReference two MemberReference MemberReference MemberReference	0
MethodDeclaration Modifier public ReferenceType Object case442_line1708 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier private BasicType int LocalVariableDeclaration BasicType char VariableDeclarator c IfStatement BinaryOperation && BinaryOperation && MemberReference ! isOneEight BinaryOperation > MemberReference leftParenBegin Literal 0 BinaryOperation == MemberReference leftParenBegin MemberReference BlockStatement StatementExpression Assignment MemberReference lex_state MemberReference LexState EXPR_BEG = StatementExpression Assignment MemberReference leftParenBegin Literal 0 = StatementExpression MemberReference -- StatementExpression Assignment MemberReference yaccValue ClassCreator ReferenceType Token Literal "{" MethodInvocation getPosition = ReturnStatement MemberReference Tokens tLAMBEG IfStatement BinaryOperation || MethodInvocation isARG BinaryOperation == MemberReference lex_state MemberReference LexState EXPR_END BlockStatement StatementExpression Assignment MemberReference c MemberReference Tokens = IfStatement BinaryOperation == MemberReference lex_state MemberReference LexState EXPR_ENDARG BlockStatement StatementExpression Assignment MemberReference c MemberReference Tokens tLBRACE_ARG = BlockStatement StatementExpression Assignment MemberReference c MemberReference Tokens tLBRACE = StatementExpression MethodInvocation stop StatementExpression MethodInvocation stop StatementExpression Assignment MemberReference lex_state MemberReference LexState EXPR_BEG = StatementExpression Assignment MemberReference yaccValue ClassCreator ReferenceType Token Literal "{" MethodInvocation getPosition = IfStatement BinaryOperation && MemberReference ! isOneEight BinaryOperation != MemberReference c MemberReference Tokens tLBRACE StatementExpression Assignment MemberReference commandStart Literal true = ReturnStatement MemberReference c	1
MethodDeclaration Modifier public ReferenceType Node getAST ReturnStatement MemberReference ast	0
MethodDeclaration Modifier public ReferenceType String LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator sb ClassCreator ReferenceType StringBuilder StatementExpression MethodInvocation sb MethodInvocation Literal " record separator if no append MethodInvocation Literal " mode with or into append MethodInvocation Literal " mode, the script append MethodInvocation Literal " check syntax append MethodInvocation Literal " cd to before executing your append MethodInvocation Literal " -d set flags to append MethodInvocation Literal " one line of Several append MethodInvocation Literal " pattern for append MethodInvocation Literal " edit files in backup if extension append MethodInvocation Literal " directory be used more than append MethodInvocation Literal " pass an option on to the JVM append MethodInvocation Literal " use to list append MethodInvocation Literal " run for a list of other Java append MethodInvocation Literal " for append MethodInvocation Literal " enable line ending append MethodInvocation Literal " ... loop around your append MethodInvocation Literal " loop like but print line also like append MethodInvocation Literal " require the before executing your append MethodInvocation Literal " enable some parsing for after script append MethodInvocation Literal " for the script in bin or using environment append MethodInvocation Literal " on append MethodInvocation Literal " print version then on append MethodInvocation Literal " -w warnings on for your append MethodInvocation Literal " set warning append MethodInvocation Literal " enable option option to append MethodInvocation Literal " enable parsing debug append MethodInvocation Literal " print the append MethodInvocation Literal " the execution mode suitable for debugger append MethodInvocation Literal " process under append MethodInvocation Literal " List all configuration Java properties append MethodInvocation Literal " run with using the append MethodInvocation Literal " use the JVM append MethodInvocation Literal " use the JVM append MethodInvocation Literal " enable remote and of the and append MethodInvocation Literal " do not launch a GUI no append MethodInvocation Literal " Ruby append MethodInvocation Literal " Ruby append MethodInvocation Literal " show the JVM bytecode by specified append MethodInvocation Literal " print the append Literal "Usage: jruby append ReturnStatement MethodInvocation sb toString	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject checkArrayType ReturnStatement This	0
MethodDeclaration Modifier public ReferenceType Node literal_concat FormalParameter ReferenceType ISourcePosition position FormalParameter ReferenceType Node head FormalParameter ReferenceType Node tail IfStatement BinaryOperation == MemberReference head Literal null ReturnStatement MemberReference tail IfStatement BinaryOperation == MemberReference tail Literal null ReturnStatement MemberReference head IfStatement BinaryOperation instanceof MemberReference head ReferenceType EvStrNode BlockStatement StatementExpression Assignment MemberReference head ClassCreator MethodInvocation MemberReference head add ReferenceType DStrNode MethodInvocation head getPosition = IfStatement BinaryOperation instanceof MemberReference tail ReferenceType StrNode BlockStatement IfStatement BinaryOperation instanceof MemberReference head ReferenceType StrNode BlockStatement ReturnStatement ClassCreator ReferenceType StrNode MethodInvocation head getPosition Cast ReferenceType StrNode MemberReference head Cast ReferenceType StrNode MemberReference tail StatementExpression MethodInvocation head MethodInvocation head getPosition ReturnStatement Cast ReferenceType ListNode MemberReference head IfStatement BinaryOperation instanceof MemberReference tail ReferenceType DStrNode BlockStatement IfStatement BinaryOperation instanceof MemberReference head ReferenceType StrNode BlockStatement StatementExpression Cast ReferenceType DStrNode MemberReference tail ReturnStatement MemberReference tail ReturnStatement Cast ReferenceType ListNode MemberReference head IfStatement BinaryOperation instanceof MemberReference head ReferenceType StrNode BlockStatement IfStatement BinaryOperation == Cast ReferenceType StrNode MemberReference head Literal 0 BlockStatement StatementExpression Assignment MemberReference head ClassCreator ReferenceType DStrNode MethodInvocation head getPosition = BlockStatement StatementExpression Assignment MemberReference head ClassCreator MethodInvocation MemberReference head add ReferenceType DStrNode MethodInvocation head getPosition = ReturnStatement Cast ReferenceType DStrNode MemberReference head	1
MethodDeclaration Modifier private ReferenceType RaiseException newRaiseException FormalParameter ReferenceType RubyClass FormalParameter ReferenceType String message LocalVariableDeclaration ReferenceType RaiseException VariableDeclarator re ClassCreator ReferenceType RaiseException This MemberReference MemberReference message Literal true ReturnStatement MemberReference re	1
MethodDeclaration Modifier final BasicType int strLength IfStatement MethodInvocation singleByteOptimizable ReturnStatement MemberReference value realSize ReturnStatement MethodInvocation MemberReference value strLength	1
MethodDeclaration Modifier public FormalParameter ReferenceType String fileName StatementExpression Assignment This MemberReference fileName MemberReference fileName =	0
MethodDeclaration Modifier public static ReferenceType RubyClass newClass FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType RubyClass superClass IfStatement BinaryOperation == MemberReference superClass MethodInvocation runtime getClassClass ThrowStatement MethodInvocation runtime Literal "can't make subclass of newTypeError IfStatement MethodInvocation superClass isSingleton ThrowStatement MethodInvocation runtime Literal "can't make subclass of virtual class" newTypeError ReturnStatement ClassCreator ReferenceType RubyClass MemberReference runtime MemberReference superClass	1
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression MethodInvocation Literal "formal argument cannot be a class variable" yyerror ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public ReferenceType String toString LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buf ClassCreator ReferenceType StringBuffer StatementExpression MethodInvocation buf Literal on " append LocalVariableDeclaration BasicType int VariableDeclarator count Literal 0 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation _in size MemberReference ++ i BlockStatement IfStatement BinaryOperation == MethodInvocation _in MemberReference i get Literal true BlockStatement StatementExpression MemberReference ++ count StatementExpression MethodInvocation buf MethodInvocation MemberReference i append Literal ' ' append IfStatement BinaryOperation == BinaryOperation % MemberReference count Literal 10 Literal 0 StatementExpression MethodInvocation buf Literal "\t\n" append IfStatement BinaryOperation != BinaryOperation % MemberReference count Literal 10 Literal 0 StatementExpression MethodInvocation buf Literal "\t\t" append StatementExpression MethodInvocation buf Literal on " append StatementExpression Assignment MemberReference count Literal 0 = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation _out size MemberReference ++ i BlockStatement IfStatement BinaryOperation == MethodInvocation _out MemberReference i get Literal true BlockStatement StatementExpression MemberReference ++ count StatementExpression MethodInvocation buf MethodInvocation MemberReference i append Literal ' ' append IfStatement BinaryOperation == BinaryOperation % MemberReference count Literal 10 Literal 0 StatementExpression MethodInvocation buf Literal "\t\n" append IfStatement BinaryOperation != BinaryOperation % MemberReference count Literal 10 Literal 0 StatementExpression MethodInvocation buf Literal "\t\t" append ReturnStatement MethodInvocation buf MethodInvocation toString Literal '\n' append	1
MethodDeclaration Modifier public ReferenceType Type ReturnStatement MethodInvocation constructor	0
MethodDeclaration Modifier public ReferenceType Operand getParent ReturnStatement MemberReference _parent	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "readline" ElementValuePair module Literal true ElementValuePair visibility MemberReference Visibility PRIVATE ReferenceType IRubyObject s_readline FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject prompt FormalParameter ReferenceType IRubyObject add_to_hist IOException LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration ReferenceType ConsoleHolder VariableDeclarator holder MethodInvocation MemberReference runtime getHolder IfStatement BinaryOperation == MemberReference holder readline Literal null BlockStatement StatementExpression MethodInvocation MemberReference runtime MemberReference holder initReadline LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator line MethodInvocation runtime getNil LocalVariableDeclaration ReferenceType String VariableDeclarator v Literal null WhileStatement Literal true BlockStatement TryStatement StatementExpression MethodInvocation holder.readline MethodInvocation getTerminal StatementExpression Assignment MemberReference v MethodInvocation holder.readline MethodInvocation prompt toString readLine = BreakStatement CatchClause CatchClauseParameter IOException ioe IfStatement MethodInvocation RubyIO MemberReference ioe BlockStatement TryStatement StatementExpression MethodInvocation holder.readline MethodInvocation getTerminal CatchClause CatchClauseParameter Exception e ContinueStatement ThrowStatement MethodInvocation runtime MemberReference ioe newIOErrorFromException StatementExpression MethodInvocation holder.readline MethodInvocation getTerminal IfStatement BinaryOperation != Literal null MemberReference v BlockStatement IfStatement MethodInvocation add_to_hist isTrue BlockStatement StatementExpression MethodInvocation holder.readline MethodInvocation MemberReference v addToHistory getHistory StatementExpression Assignment MemberReference line MethodInvocation RubyString MethodInvocation recv getRuntime MemberReference v = ReturnStatement MemberReference line	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal Literal Annotation Override ReferenceType IRubyObject rect FormalParameter ReferenceType ThreadContext context ReturnStatement MethodInvocation context MethodInvocation MemberReference real MemberReference image newArray getRuntime	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block ReturnStatement MethodInvocation bodyNode MemberReference runtime MemberReference context MemberReference self MemberReference	0
MethodDeclaration Modifier private synchronized FormalParameter Modifier final ReferenceType RubyClass proxy IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation MemberReference proxy install StatementExpression Assignment MemberReference Literal null =	0
MethodDeclaration Modifier public static ReferenceType RubyFixnum newFixnum FormalParameter ReferenceType Ruby runtime FormalParameter BasicType long value IfStatement MethodInvocation MemberReference value BlockStatement ReturnStatement MemberReference runtime ArraySelector BinaryOperation + Cast BasicType int MemberReference value MemberReference ReturnStatement ClassCreator ReferenceType RubyFixnum MemberReference runtime MemberReference value	0
MethodDeclaration Modifier public Annotation Override BasicType int read IOException LocalVariableDeclaration BasicType byte VariableDeclarator c MethodInvocation SwitchStatement MemberReference c SwitchStatementCase Literal '\r' IfStatement BinaryOperation != Assignment MemberReference c MethodInvocation = Literal '\n' BlockStatement StatementExpression MethodInvocation Cast BasicType char MemberReference c unread StatementExpression Assignment MemberReference c Literal '\n' = StatementExpression MemberReference ++ line BlockStatement StatementExpression MemberReference ++ offset BreakStatement SwitchStatementCase Literal '\n' StatementExpression MemberReference ++ line BreakStatement ReturnStatement MemberReference c	1
MethodDeclaration Modifier public Annotation Override FormalParameter ReferenceType manager FormalParameter ReferenceType String language FormalParameter ReferenceType Vector BSFException StatementExpression SuperMethodInvocation MemberReference manager MemberReference language MemberReference StatementExpression Assignment MemberReference runtime MethodInvocation MethodInvocation MemberReference manager = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 VariableDeclarator size MethodInvocation size BinaryOperation < MemberReference i MemberReference size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator bean Cast ReferenceType MethodInvocation MemberReference i elementAt StatementExpression MethodInvocation runtime MethodInvocation MethodInvocation GlobalVariable MemberReference bean name variableName ClassCreator ReferenceType MemberReference runtime MemberReference bean define getGlobalVariables StatementExpression MethodInvocation runtime MethodInvocation Literal ClassCreator ReferenceType MemberReference runtime ClassCreator ReferenceType MemberReference manager This defineReadonly getGlobalVariables	0
MethodDeclaration Modifier protected ReferenceType IRubyObject FormalParameter ReferenceType String name ReturnStatement MethodInvocation MethodInvocation MemberReference name remove	0
MethodDeclaration Modifier public Annotation Deprecated ReferenceType Callback getSingletonMethod FormalParameter ReferenceType String method FormalParameter ReferenceType Class arg1 FormalParameter ReferenceType Class arg2 FormalParameter ReferenceType Class arg3 LocalVariableDeclaration ReferenceType String VariableDeclarator mname BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation type getName Literal "Callback$" MemberReference method Literal LocalVariableDeclaration ReferenceType String VariableDeclarator mnamePath BinaryOperation + BinaryOperation + BinaryOperation + MemberReference typePath Literal "Callback$" MemberReference method Literal SynchronizedStatement MethodInvocation runtime getJRubyClassLoader LocalVariableDeclaration ReferenceType Class VariableDeclarator c MethodInvocation MemberReference mname tryClass TryStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator descriptor ArrayCreator ReferenceType Class ArrayInitializer MemberReference arg1 MemberReference arg2 MemberReference arg3 IfStatement BinaryOperation == MemberReference c Literal null BlockStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator signature ArrayCreator ReferenceType Class ArrayInitializer MemberReference RubyKernel IRUBY_OBJECT MemberReference arg1 MemberReference arg2 MemberReference arg3 ClassReference ReferenceType Block LocalVariableDeclaration ReferenceType Class VariableDeclarator ret MethodInvocation MemberReference method MemberReference signature getReturnClass LocalVariableDeclaration ReferenceType ClassWriter VariableDeclarator cw MethodInvocation MemberReference mnamePath createCtor LocalVariableDeclaration ReferenceType MethodVisitor VariableDeclarator mv MethodInvocation MemberReference cw startCallS StatementExpression MethodInvocation MemberReference mv MemberReference METHOD_ARGS_INDEX Literal 3 MemberReference descriptor loadArguments StatementExpression MethodInvocation mv MemberReference ALOAD Literal 3 visitVarInsn StatementExpression MethodInvocation mv MemberReference INVOKESTATIC MemberReference typePath MemberReference method MethodInvocation MemberReference ret MemberReference signature sig visitMethodInsn StatementExpression MethodInvocation mv MemberReference ARETURN visitInsn StatementExpression MethodInvocation mv Literal 5 Literal 3 visitMaxs StatementExpression Assignment MemberReference c MethodInvocation MemberReference cw MemberReference mv MemberReference mname endCall = LocalVariableDeclaration ReferenceType InvocationCallback VariableDeclarator ic Cast ReferenceType InvocationCallback MethodInvocation c newInstance StatementExpression MethodInvocation ic MethodInvocation Arity Literal 3 fixed setArity StatementExpression MethodInvocation ic MemberReference descriptor setArgumentTypes StatementExpression MethodInvocation ic MemberReference method setJavaName StatementExpression MethodInvocation ic Literal true setSingleton ReturnStatement MemberReference ic CatchClause CatchClauseParameter IllegalArgumentException e ThrowStatement MemberReference e CatchClause CatchClauseParameter Exception e ThrowStatement ClassCreator ReferenceType IllegalArgumentException MethodInvocation e getMessage	1
MethodDeclaration Modifier public Annotation Override assign FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject values FormalParameter ReferenceType Block block LocalVariableDeclaration BasicType int VariableDeclarator length TernaryExpression BinaryOperation == MemberReference values Literal null Literal 0 MemberReference values length SwitchStatement MemberReference length SwitchStatementCase Literal 0 StatementExpression MethodInvocation MemberReference runtime MemberReference context MemberReference self MethodInvocation runtime getNil MethodInvocation runtime getNil MethodInvocation runtime getNil MemberReference block assign BreakStatement SwitchStatementCase Literal 1 StatementExpression MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference ArraySelector Literal 0 values MethodInvocation runtime getNil MethodInvocation runtime getNil MemberReference block assign BreakStatement SwitchStatementCase Literal 2 StatementExpression MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference ArraySelector Literal 0 values MemberReference ArraySelector Literal 1 values MethodInvocation runtime getNil MemberReference block assign BreakStatement SwitchStatementCase StatementExpression MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference ArraySelector Literal 0 values MemberReference ArraySelector Literal 1 values MemberReference ArraySelector Literal 2 values MemberReference block assign BreakStatement	1
MethodDeclaration ReferenceType IRubyObject ReturnStatement MemberReference real	0
MethodDeclaration Modifier private ReferenceType String FormalParameter ReferenceType String FormalParameter BasicType char padder IfStatement BinaryOperation && BinaryOperation != MemberReference formatter Literal null MethodInvocation formatter Literal "-" contains ReturnStatement MemberReference IfStatement BinaryOperation && BinaryOperation != MemberReference Literal null BinaryOperation < MethodInvocation length MemberReference BlockStatement LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator seqBuf ClassCreator ReferenceType StringBuilder MemberReference ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MethodInvocation length BinaryOperation < MemberReference i MemberReference MemberReference ++ i BlockStatement StatementExpression MethodInvocation seqBuf MemberReference padder append StatementExpression MethodInvocation seqBuf MemberReference append ReturnStatement MethodInvocation seqBuf toString ReturnStatement MemberReference	1
MethodDeclaration Modifier public Annotation Override ReferenceType Arity ReturnStatement MemberReference arity	0
MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject caller FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType Block block TryStatement ReturnStatement MethodInvocation MemberReference context MemberReference caller MemberReference self MemberReference arg1 MemberReference block callBlock CatchClause CatchClauseParameter JumpException.BreakJump bj ReturnStatement MethodInvocation MemberReference context MemberReference bj handleBreakJump CatchClause CatchClauseParameter JumpException.RetryJump rj ThrowStatement MethodInvocation MemberReference context retryJumpError	1
MethodDeclaration Modifier public static ReferenceType Ruby newInstance ReturnStatement MethodInvocation ClassCreator ReferenceType RubyInstanceConfig newInstance	0
MethodDeclaration Modifier public setArgValues StatementExpression MethodInvocation MemberReference IRubyObject Literal 0 setArgValues	0
MethodDeclaration Modifier protected ReferenceType String yyExpecting FormalParameter BasicType int state LocalVariableDeclaration BasicType int VariableDeclarator token VariableDeclarator n VariableDeclarator len Literal 0 LocalVariableDeclaration BasicType boolean VariableDeclarator ok ArrayCreator BasicType boolean MemberReference yyNames length IfStatement BinaryOperation != Assignment MemberReference n MemberReference ArraySelector MemberReference state yySindex = Literal 0 ForStatement ForControl Assignment MemberReference token TernaryExpression BinaryOperation < MemberReference n Literal 0 MemberReference - n Literal 0 = BinaryOperation && BinaryOperation < MemberReference token MemberReference yyNames length BinaryOperation < BinaryOperation + MemberReference n MemberReference token MemberReference yyTable length MemberReference ++ token IfStatement BinaryOperation && BinaryOperation && BinaryOperation == MemberReference ArraySelector BinaryOperation + MemberReference n MemberReference token yyCheck MemberReference token MemberReference ! ArraySelector MemberReference token ok BinaryOperation != MemberReference ArraySelector MemberReference token yyNames Literal null BlockStatement StatementExpression MemberReference ++ len StatementExpression Assignment MemberReference ArraySelector MemberReference token ok Literal true = IfStatement BinaryOperation != Assignment MemberReference n MemberReference ArraySelector MemberReference state yyRindex = Literal 0 ForStatement ForControl Assignment MemberReference token TernaryExpression BinaryOperation < MemberReference n Literal 0 MemberReference - n Literal 0 = BinaryOperation && BinaryOperation < MemberReference token MemberReference yyNames length BinaryOperation < BinaryOperation + MemberReference n MemberReference token MemberReference yyTable length MemberReference ++ token IfStatement BinaryOperation && BinaryOperation && BinaryOperation == MemberReference ArraySelector BinaryOperation + MemberReference n MemberReference token yyCheck MemberReference token MemberReference ! ArraySelector MemberReference token ok BinaryOperation != MemberReference ArraySelector MemberReference token yyNames Literal null BlockStatement StatementExpression MemberReference ++ len StatementExpression Assignment MemberReference ArraySelector MemberReference token ok Literal true = LocalVariableDeclaration ReferenceType String VariableDeclarator result ArrayCreator ReferenceType String MemberReference len ForStatement ForControl Assignment MemberReference n Assignment MemberReference token Literal 0 = = BinaryOperation < MemberReference n MemberReference len MemberReference ++ token IfStatement MemberReference ArraySelector MemberReference token ok StatementExpression Assignment MemberReference ArraySelector MemberReference ++ n result MemberReference ArraySelector MemberReference token yyNames = ReturnStatement MemberReference result	1
MethodDeclaration Modifier private ReferenceType IRubyObject openFile FormalParameter ReferenceType IRubyObject args LocalVariableDeclaration ReferenceType RubyString VariableDeclarator filename MethodInvocation MethodInvocation MethodInvocation getCurrentContext getRuntime MemberReference ArraySelector Literal 0 args get_path StatementExpression MethodInvocation MethodInvocation MemberReference filename checkSafeString getRuntime StatementExpression Assignment MemberReference path MethodInvocation filename getUnicodeValue = LocalVariableDeclaration ReferenceType String VariableDeclarator modeString LocalVariableDeclaration ReferenceType ModeFlags VariableDeclarator modes LocalVariableDeclaration BasicType int VariableDeclarator perm TryStatement IfStatement BinaryOperation || BinaryOperation && BinaryOperation > MemberReference args length Literal 1 BinaryOperation instanceof MemberReference ArraySelector Literal 1 args ReferenceType RubyFixnum BinaryOperation && BinaryOperation > MemberReference args length Literal 2 MemberReference ! ArraySelector Literal 2 MethodInvocation isNil args BlockStatement StatementExpression Assignment MemberReference modes MethodInvocation MemberReference ArraySelector Literal 1 args = StatementExpression Assignment MemberReference perm MethodInvocation MemberReference args getFilePermissions = StatementExpression MethodInvocation MemberReference path MemberReference modes MemberReference perm BlockStatement StatementExpression Assignment MemberReference modeString Literal "r" = IfStatement BinaryOperation && BinaryOperation > MemberReference args length Literal 1 MemberReference ! ArraySelector Literal 1 MethodInvocation isNil args BlockStatement StatementExpression Assignment MemberReference modeString MemberReference ArraySelector Literal 1 MethodInvocation convertToString MethodInvocation toString args = StatementExpression MethodInvocation MemberReference path MemberReference modeString CatchClause CatchClauseParameter InvalidValueException ex ThrowStatement MethodInvocation MethodInvocation newErrnoEINVALError getRuntime ReturnStatement This	1
MethodDeclaration Modifier private FormalParameter ReferenceType Object FormalParameter ReferenceType ArrayCallback FormalParameter BasicType boolean IfStatement BinaryOperation == MemberReference length Literal 0 BlockStatement StatementExpression MethodInvocation method MethodInvocation ClassReference ReferenceType RubyArray p Literal MethodInvocation ClassReference ReferenceType RubyArray ClassReference ReferenceType Ruby sig invokestatic IfStatement BinaryOperation <= MemberReference length MemberReference RuntimeHelpers BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference length MemberReference ++ i BlockStatement StatementExpression MethodInvocation This MemberReference MemberReference i nextValue StatementExpression MethodInvocation Literal MethodInvocation ClassReference ReferenceType RubyArray MethodInvocation ClassReference ReferenceType Ruby ClassReference ReferenceType IRubyObject MemberReference length params sig invokeUtilityMethod BlockStatement StatementExpression MethodInvocation method MemberReference length pushInt StatementExpression MethodInvocation method MethodInvocation ClassReference ReferenceType IRubyObject p ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference length MemberReference ++ i BlockStatement StatementExpression MethodInvocation method dup StatementExpression MethodInvocation method MemberReference i pushInt StatementExpression MethodInvocation This MemberReference MemberReference i nextValue StatementExpression MethodInvocation method IfStatement MemberReference BlockStatement StatementExpression MethodInvocation method MethodInvocation ClassReference ReferenceType RubyArray p Literal MethodInvocation ClassReference ReferenceType RubyArray ClassReference ReferenceType Ruby ClassReference ReferenceType IRubyObject sig invokestatic BlockStatement StatementExpression MethodInvocation method MethodInvocation ClassReference ReferenceType RubyArray p Literal MethodInvocation ClassReference ReferenceType RubyArray ClassReference ReferenceType Ruby ClassReference ReferenceType IRubyObject sig invokestatic	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ReferenceType IRubyObject taint FormalParameter ReferenceType ThreadContext context StatementExpression MethodInvocation MethodInvocation context getRuntime taint ReturnStatement This	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement BinaryOperation && MethodInvocation ! isFinal MethodInvocation ! isPrivate	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator ary MethodInvocation to_a StatementExpression MethodInvocation ary MemberReference context Literal MethodInvocation RubyFixnum MethodInvocation context getRuntime one callMethod ReturnStatement MemberReference ary	0
MethodDeclaration Modifier public FormalParameter ReferenceType Node node FormalParameter ReferenceType BodyCompiler context FormalParameter BasicType boolean expr LocalVariableDeclaration Modifier final ReferenceType UntilNode VariableDeclarator untilNode Cast ReferenceType UntilNode MemberReference node IfStatement BinaryOperation && MethodInvocation untilNode MethodInvocation getNodeType MethodInvocation getConditionNode MethodInvocation untilNode evaluateAtStart BlockStatement StatementExpression MethodInvocation MethodInvocation untilNode getConditionNode MemberReference context Literal false compile IfStatement MemberReference expr StatementExpression MethodInvocation context loadNil BlockStatement LocalVariableDeclaration ReferenceType BranchCallback VariableDeclarator condition ClassCreator ReferenceType BranchCallback MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation MethodInvocation untilNode getConditionNode MemberReference context Literal true compile StatementExpression MethodInvocation context LocalVariableDeclaration ReferenceType BranchCallback VariableDeclarator body ClassCreator ReferenceType BranchCallback MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context IfStatement BinaryOperation != MethodInvocation untilNode getBodyNode Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation untilNode getBodyNode MemberReference context Literal true compile IfStatement MemberReference untilNode containsNonlocalFlow BlockStatement StatementExpression MethodInvocation context MemberReference condition MemberReference body MethodInvocation untilNode evaluateAtStart BlockStatement StatementExpression MethodInvocation context MemberReference condition MemberReference body MethodInvocation untilNode evaluateAtStart performBooleanLoopLight StatementExpression MethodInvocation context pollThreadEvents IfStatement MemberReference ! expr StatementExpression MethodInvocation context consumeCurrentValue	1
MethodDeclaration Modifier public setStatus FormalParameter BasicType int status StatementExpression Assignment This MemberReference status MemberReference status =	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "[]" ReferenceType IRubyObject get FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject index ReturnStatement MethodInvocation MethodInvocation context getRuntime MethodInvocation ptr getMemoryIO MethodInvocation MemberReference index getOffset get	0
MethodDeclaration Modifier public static Annotation Deprecated ReferenceType Object convertRubyToJava FormalParameter ReferenceType IRubyObject rubyObject FormalParameter ReferenceType Class javaClass IfStatement BinaryOperation || BinaryOperation || BinaryOperation == MemberReference javaClass VoidClassReference BinaryOperation == MemberReference rubyObject Literal null MethodInvocation rubyObject isNil BlockStatement ReturnStatement Literal null LocalVariableDeclaration ReferenceType ThreadContext VariableDeclarator context MethodInvocation rubyObject MethodInvocation getCurrentContext getRuntime LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator origObject MemberReference rubyObject IfStatement BinaryOperation instanceof MethodInvocation rubyObject dataGetStruct ReferenceType JavaObject BlockStatement StatementExpression Assignment MemberReference rubyObject Cast ReferenceType JavaObject MethodInvocation rubyObject dataGetStruct = IfStatement BinaryOperation == MemberReference rubyObject Literal null BlockStatement ThrowStatement ClassCreator ReferenceType RuntimeException BinaryOperation + Literal returned null for " MethodInvocation origObject MethodInvocation getName getType IfStatement MethodInvocation rubyObject Literal "java_object" respondsTo BlockStatement StatementExpression Assignment MemberReference rubyObject MethodInvocation rubyObject MemberReference context Literal "java_object" callMethod = IfStatement BinaryOperation == MemberReference rubyObject Literal null BlockStatement ThrowStatement ClassCreator ReferenceType RuntimeException BinaryOperation + Literal returned null for " MethodInvocation origObject MethodInvocation getName getType IfStatement MethodInvocation rubyObject Literal "to_java_object" respondsTo BlockStatement StatementExpression Assignment MemberReference rubyObject MethodInvocation rubyObject MemberReference context Literal "to_java_object" callMethod = IfStatement BinaryOperation == MemberReference rubyObject Literal null BlockStatement ThrowStatement ClassCreator ReferenceType RuntimeException BinaryOperation + Literal returned null for " MethodInvocation origObject MethodInvocation getName getType IfStatement BinaryOperation instanceof MemberReference rubyObject ReferenceType JavaObject BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator value Cast ReferenceType JavaObject MemberReference rubyObject ReturnStatement MethodInvocation MethodInvocation rubyObject getRuntime MemberReference value MethodInvocation value getClass convertArgument IfStatement BinaryOperation || BinaryOperation == MemberReference javaClass ClassReference ReferenceType Object BinaryOperation == MemberReference javaClass Literal null BlockStatement StatementExpression Assignment MemberReference javaClass MethodInvocation rubyObject = IfStatement MethodInvocation javaClass MemberReference rubyObject isInstance BlockStatement ReturnStatement MemberReference rubyObject LocalVariableDeclaration ReferenceType VariableDeclarator converter MethodInvocation MemberReference javaClass get IfStatement BinaryOperation != MemberReference converter Literal null BlockStatement ReturnStatement MethodInvocation converter MemberReference context MemberReference rubyObject convert IfStatement MethodInvocation javaClass isPrimitive BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator s Cast ReferenceType RubyString MethodInvocation TypeConverter MemberReference rubyObject MethodInvocation rubyObject MethodInvocation getString getRuntime Literal "to_s" Literal true convertToType IfStatement BinaryOperation > MethodInvocation s length Literal 0 BlockStatement ReturnStatement ClassCreator ReferenceType Character MethodInvocation s Literal 0 charAt ReturnStatement ClassCreator ReferenceType Character Literal '\0' IfStatement BinaryOperation == MemberReference javaClass ClassReference ReferenceType String BlockStatement LocalVariableDeclaration ReferenceType RubyString VariableDeclarator Cast ReferenceType RubyString MethodInvocation rubyObject MemberReference context Literal "to_s" callMethod LocalVariableDeclaration ReferenceType ByteList VariableDeclarator bytes MethodInvocation getByteList TryStatement ReturnStatement ClassCreator ReferenceType String MethodInvocation bytes unsafeBytes MethodInvocation bytes begin MethodInvocation bytes length Literal "UTF8" CatchClause CatchClauseParameter UnsupportedEncodingException uee ReturnStatement ClassCreator ReferenceType String MethodInvocation bytes unsafeBytes MethodInvocation bytes begin MethodInvocation bytes length IfStatement BinaryOperation == MemberReference javaClass ClassReference ReferenceType ByteList BlockStatement ReturnStatement MethodInvocation rubyObject MethodInvocation getByteList convertToString IfStatement BinaryOperation == MemberReference javaClass ClassReference ReferenceType BigInteger BlockStatement IfStatement BinaryOperation instanceof MemberReference rubyObject ReferenceType RubyBignum BlockStatement ReturnStatement Cast ReferenceType RubyBignum MemberReference rubyObject IfStatement BinaryOperation instanceof MemberReference rubyObject ReferenceType RubyNumeric BlockStatement ReturnStatement MethodInvocation BigInteger Cast ReferenceType RubyNumeric MemberReference rubyObject valueOf IfStatement MethodInvocation rubyObject Literal "to_i" respondsTo BlockStatement LocalVariableDeclaration ReferenceType RubyNumeric VariableDeclarator rubyNumeric Cast ReferenceType RubyNumeric MethodInvocation rubyObject MemberReference context Literal "to_f" callMethod ReturnStatement MethodInvocation BigInteger MethodInvocation rubyNumeric getLongValue valueOf IfStatement BinaryOperation && BinaryOperation == MemberReference javaClass ClassReference ReferenceType BigDecimal BinaryOperation instanceof MemberReference rubyObject ReferenceType JavaObject BlockStatement IfStatement MethodInvocation rubyObject Literal "to_f" respondsTo BlockStatement LocalVariableDeclaration BasicType double VariableDeclarator Cast ReferenceType RubyNumeric MethodInvocation rubyObject MemberReference context Literal "to_f" callMethod ReturnStatement ClassCreator ReferenceType BigDecimal MemberReference TryStatement IfStatement MethodInvocation MethodInvocation rubyObject getClass MemberReference javaClass BlockStatement ReturnStatement MethodInvocation MemberReference context Cast ReferenceType RubyObject MemberReference rubyObject MemberReference javaClass convertProcToInterface ReturnStatement Cast ReferenceType JavaObject MemberReference rubyObject CatchClause CatchClauseParameter ClassCastException ex IfStatement MethodInvocation rubyObject MethodInvocation getDebug MethodInvocation isTrue getRuntime StatementExpression MethodInvocation ex printStackTrace ReturnStatement Literal null	1
MethodDeclaration Modifier public ReferenceType Object case104_line678 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression MethodInvocation lexer MemberReference LexState EXPR_END setState StatementExpression Assignment MemberReference yyVal Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public final clear StatementExpression MethodInvocation Arrays MemberReference buffer MemberReference offset MemberReference length Cast BasicType byte Literal 0 fill	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair required Literal 2 ElementValuePair rest Literal true ElementValuePair meta Literal true ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration BasicType long VariableDeclarator Literal null LocalVariableDeclaration BasicType long VariableDeclarator Literal null IfStatement BinaryOperation || BinaryOperation != MemberReference ArraySelector Literal 0 args MethodInvocation runtime getNil BinaryOperation != MemberReference ArraySelector Literal 1 args MethodInvocation runtime getNil BlockStatement StatementExpression Assignment MemberReference MethodInvocation MemberReference runtime MemberReference ArraySelector Literal 0 args = StatementExpression Assignment MemberReference MethodInvocation MemberReference runtime MemberReference ArraySelector Literal 1 args = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 2 VariableDeclarator j MemberReference args length BinaryOperation < MemberReference i MemberReference j MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType RubyString VariableDeclarator filename MethodInvocation MemberReference context MemberReference ArraySelector MemberReference i args get_path StatementExpression MethodInvocation runtime MemberReference filename checkSafeString LocalVariableDeclaration ReferenceType JRubyFile VariableDeclarator MethodInvocation JRubyFile MethodInvocation runtime getCurrentDirectory MethodInvocation filename getUnicodeValue create IfStatement MethodInvocation ! exists BlockStatement ThrowStatement MethodInvocation runtime BinaryOperation + BinaryOperation + Literal " No such file or directory - \"" MemberReference filename Literal "\"" newErrnoENOENTError StatementExpression MethodInvocation runtime MethodInvocation MethodInvocation getAbsolutePath MemberReference MemberReference getPosix ReturnStatement MethodInvocation runtime BinaryOperation - MemberReference args length Literal 2 newFixnum	0
MethodDeclaration Modifier public ReferenceType Object unmarshalFrom FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType RubyClass type FormalParameter ReferenceType unmarshalStream IOException ThrowStatement MethodInvocation runtime BinaryOperation + Literal "no is defined for class " MethodInvocation type getName newTypeError	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair frame Literal true ElementValuePair meta Literal true ReferenceType IRubyObject newInstance FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType Block block ReturnStatement ClassCreator ReferenceType MethodInvocation recv getRuntime Cast ReferenceType RubyClass MemberReference recv	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "<=" ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType IRubyObject op_le FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject other IfStatement BinaryOperation instanceof MemberReference other ReferenceType RubyString ReturnStatement MethodInvocation context MethodInvocation BinaryOperation <= MethodInvocation Cast ReferenceType RubyString MemberReference other op_cmp Literal 0 newBoolean getRuntime ReturnStatement MethodInvocation RubyComparable MemberReference context This MemberReference other op_le	1
MethodDeclaration Modifier public call FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation MemberReference argsNode MemberReference context Literal true compileArgs	0
MethodDeclaration Modifier private static BasicType double chebylevSerie FormalParameter BasicType double x FormalParameter BasicType double coef LocalVariableDeclaration BasicType double VariableDeclarator b0 VariableDeclarator b1 VariableDeclarator b2 VariableDeclarator twox LocalVariableDeclaration BasicType int VariableDeclarator i StatementExpression Assignment MemberReference b1 Literal 0.0 = StatementExpression Assignment MemberReference b0 Literal 0.0 = StatementExpression Assignment MemberReference b2 Literal 0.0 = StatementExpression Assignment MemberReference twox BinaryOperation * Literal 2.0 MemberReference x = ForStatement ForControl Assignment MemberReference i BinaryOperation - MemberReference coef length Literal 1 = BinaryOperation >= MemberReference i Literal 0 MemberReference -- i BlockStatement StatementExpression Assignment MemberReference b2 MemberReference b1 = StatementExpression Assignment MemberReference b1 MemberReference b0 = StatementExpression Assignment MemberReference b0 BinaryOperation + BinaryOperation - BinaryOperation * MemberReference twox MemberReference b1 MemberReference b2 MemberReference ArraySelector MemberReference i coef = ReturnStatement BinaryOperation * Literal 0.5 BinaryOperation - MemberReference b0 MemberReference b2	1
MethodDeclaration Modifier private ReferenceType IRubyObject op_ltOther FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject other IfStatement BinaryOperation instanceof MemberReference other ReferenceType RubyBignum ReturnStatement MethodInvocation RubyBoolean MethodInvocation context getRuntime BinaryOperation < MethodInvocation BigInteger MethodInvocation Cast ReferenceType RubyBignum MemberReference other compareTo MemberReference value valueOf Literal 0 newBoolean IfStatement BinaryOperation instanceof MemberReference other ReferenceType RubyFloat ReturnStatement MethodInvocation RubyBoolean MethodInvocation context getRuntime BinaryOperation < Cast BasicType double MemberReference value Cast ReferenceType RubyFloat MemberReference other newBoolean ReturnStatement MethodInvocation MemberReference context Literal "<" MemberReference other coerceRelOp	1
MethodDeclaration Modifier public ReferenceType RaiseException ReturnStatement ClassCreator ReferenceType RaiseException ClassCreator ReferenceType This MethodInvocation Literal "unexpected MemberReference MethodInvocation getNil Literal true	0
MethodDeclaration Modifier public static BasicType int checkArgumentCount FormalParameter ReferenceType Ruby runtime FormalParameter BasicType int length FormalParameter BasicType int min FormalParameter BasicType int max LocalVariableDeclaration BasicType int VariableDeclarator expected Literal 0 IfStatement BinaryOperation < MemberReference length MemberReference min BlockStatement StatementExpression Assignment MemberReference expected MemberReference min = IfStatement BinaryOperation && BinaryOperation > MemberReference max Literal - 1 BinaryOperation > MemberReference length MemberReference max BlockStatement StatementExpression Assignment MemberReference expected MemberReference max = BlockStatement ReturnStatement MemberReference length ThrowStatement MethodInvocation runtime MemberReference length MemberReference expected newArgumentError	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ReferenceType RubyBoolean ReturnStatement MethodInvocation MethodInvocation MethodInvocation isPrimitive newBoolean getRuntime	1
MethodDeclaration Modifier public FormalParameter ReferenceType Label arg0 FormalParameter BasicType int arg1 FormalParameter ReferenceType Label arg2 StatementExpression MethodInvocation MethodInvocation MemberReference arg0 MemberReference arg1 MemberReference arg2 getMethodVisitor	0
MethodDeclaration Modifier public ReferenceType Object case62_line526 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal Cast ReferenceType MultipleAsgn19Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop IfStatement BinaryOperation || MethodInvocation support isInDef MethodInvocation support isInSingle BlockStatement StatementExpression MethodInvocation Literal in method body" yyerror StatementExpression MethodInvocation support pushLocalScope ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier private static BasicType boolean FormalParameter ReferenceType ByteList FormalParameter BasicType int offset FormalParameter ReferenceType ByteList other ReturnStatement BinaryOperation < BinaryOperation - MemberReference realSize MemberReference offset MemberReference other realSize	0
MethodDeclaration Modifier public static ReferenceType CacheEntry FormalParameter ReferenceType RubyClass clazz FormalParameter ReferenceType String name1 FormalParameter ReferenceType String name2 FormalParameter ReferenceType String name3 FormalParameter ReferenceType String name4 FormalParameter ReferenceType String name5 LocalVariableDeclaration ReferenceType CacheEntry VariableDeclarator entry MethodInvocation clazz MemberReference name1 IfStatement BinaryOperation == MemberReference entry method MemberReference INSTANCE BlockStatement ReturnStatement MethodInvocation MemberReference clazz MemberReference name2 MemberReference name3 MemberReference name4 MemberReference name5 ReturnStatement MemberReference entry	0
MethodDeclaration Modifier public ReferenceType Operand FormalParameter Modifier final ReferenceType InstAsgnNode FormalParameter ReferenceType IR_Scope s LocalVariableDeclaration ReferenceType Operand VariableDeclarator val MethodInvocation MethodInvocation getValueNode MemberReference s build StatementExpression MethodInvocation s ClassCreator ReferenceType PUT_FIELD_Instr MethodInvocation s getSelf MethodInvocation getName MemberReference val addInstr ReturnStatement MemberReference val	0
MethodDeclaration Modifier static protected ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 ReturnStatement MethodInvocation RuntimeHelpers MemberReference context MethodInvocation context MethodInvocation getRuntime Literal MemberReference arg1 MemberReference arg2 invoke	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal Literal ElementValuePair required Literal 1 ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject offset ReturnStatement MethodInvocation Util MethodInvocation context getRuntime MethodInvocation MethodInvocation MethodInvocation MemberReference offset getOffset getMemoryIO newUnsigned8	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair required Literal 1 ElementValuePair rest Literal true ElementValuePair frame Literal true ElementValuePair module Literal true ElementValuePair visibility MemberReference Visibility PRIVATE Annotation Deprecated ReferenceType IRubyObject FormalParameter Modifier final ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block LocalVariableDeclaration BasicType int VariableDeclarator size BinaryOperation - MethodInvocation Arity MethodInvocation recv getRuntime MemberReference args Literal 1 Literal - 1 checkArgumentCount Literal 1 LocalVariableDeclaration Modifier final ReferenceType RubyProc VariableDeclarator proc IfStatement BinaryOperation instanceof MemberReference ArraySelector MemberReference size args ReferenceType RubyProc BlockStatement StatementExpression Assignment MemberReference proc Cast ReferenceType RubyProc MemberReference ArraySelector MemberReference size args = BlockStatement StatementExpression Assignment MemberReference proc MethodInvocation recv MethodInvocation MemberReference Block.Type PROC MemberReference block newProc getRuntime = StatementExpression MemberReference ++ size LocalVariableDeclaration ReferenceType Class VariableDeclarator interfaces ArrayCreator ReferenceType Class MemberReference size ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference size MemberReference ++ i BlockStatement IfStatement BinaryOperation || BinaryOperation instanceof MemberReference ArraySelector MemberReference i args ReferenceType JavaClass Cast ReferenceType JavaClass MemberReference ArraySelector MemberReference i args BlockStatement ThrowStatement MethodInvocation recv MethodInvocation BinaryOperation + Literal "Java interface expected. " MemberReference ArraySelector MemberReference i args newArgumentError getRuntime StatementExpression Assignment MemberReference ArraySelector MemberReference i interfaces Cast ReferenceType JavaClass MemberReference ArraySelector MemberReference i args = ReturnStatement MethodInvocation JavaObject MethodInvocation recv getRuntime MethodInvocation Proxy MethodInvocation recv MethodInvocation getJRubyClassLoader getRuntime MemberReference interfaces ClassCreator ReferenceType InvocationHandler FieldDeclaration Modifier private ReferenceType Map VariableDeclarator parameterTypeCache ClassCreator ReferenceType ConcurrentHashMap MethodDeclaration Modifier public ReferenceType Object invoke FormalParameter ReferenceType Object proxy FormalParameter ReferenceType Method method FormalParameter ReferenceType Object nargs Throwable LocalVariableDeclaration ReferenceType Class VariableDeclarator parameterTypes Cast ReferenceType Class MethodInvocation parameterTypeCache MemberReference method get IfStatement BinaryOperation == MemberReference parameterTypes Literal null BlockStatement StatementExpression Assignment MemberReference parameterTypes MethodInvocation method getParameterTypes = StatementExpression MethodInvocation parameterTypeCache MemberReference method MemberReference parameterTypes put LocalVariableDeclaration BasicType int VariableDeclarator methodArgsLength MemberReference parameterTypes length LocalVariableDeclaration ReferenceType String VariableDeclarator methodName MethodInvocation method getName IfStatement BinaryOperation && MethodInvocation methodName Literal "toString" equals BinaryOperation == MemberReference methodArgsLength Literal 0 BlockStatement ReturnStatement MethodInvocation proxy MethodInvocation getName getClass IfStatement BinaryOperation && MethodInvocation methodName Literal "hashCode" equals BinaryOperation == MemberReference methodArgsLength Literal 0 BlockStatement ReturnStatement ClassCreator ReferenceType Integer MethodInvocation proxy MethodInvocation hashCode getClass IfStatement BinaryOperation && BinaryOperation && MethodInvocation methodName Literal "equals" equals BinaryOperation == MemberReference methodArgsLength Literal 1 MemberReference ArraySelector Literal 0 MethodInvocation ClassReference ReferenceType Object equals parameterTypes BlockStatement ReturnStatement MethodInvocation Boolean BinaryOperation == MemberReference proxy MemberReference ArraySelector Literal 0 nargs valueOf LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation recv getRuntime LocalVariableDeclaration BasicType int VariableDeclarator length TernaryExpression BinaryOperation == MemberReference nargs Literal null Literal 0 MemberReference nargs length LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator rubyArgs ArrayCreator ReferenceType IRubyObject BinaryOperation + MemberReference length Literal 2 StatementExpression Assignment MemberReference ArraySelector Literal 0 rubyArgs MethodInvocation JavaUtil MemberReference runtime MemberReference proxy convertJavaToRuby = StatementExpression Assignment MemberReference ArraySelector Literal 1 rubyArgs ClassCreator ReferenceType JavaMethod MemberReference runtime MemberReference method = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference length MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector BinaryOperation + MemberReference i Literal 2 rubyArgs MethodInvocation JavaUtil MemberReference runtime MemberReference ArraySelector MemberReference i nargs convertJavaToRuby = ReturnStatement MethodInvocation proc MethodInvocation MethodInvocation method getReturnType toJava MethodInvocation runtime getCurrentContext MemberReference rubyArgs call wrap	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair frame Literal true ElementValuePair module Literal true ElementValuePair visibility MemberReference PRIVATE ElementValuePair reads MemberReference LASTLINE ElementValuePair writes MemberReference LASTLINE ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType IRubyObject sub FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType RubyString VariableDeclarator str Cast ReferenceType RubyString MethodInvocation MethodInvocation dup MemberReference context MethodInvocation context getRuntime getLastlineString IfStatement MethodInvocation ! str MethodInvocation isNil MemberReference context MemberReference arg0 MemberReference block sub_bang BlockStatement StatementExpression MethodInvocation context MethodInvocation MemberReference str setLastLine getCurrentScope ReturnStatement MemberReference str	0
MethodDeclaration Modifier public BasicType int hashCode ReturnStatement MethodInvocation field hashCode	0
MethodDeclaration Modifier public Annotation Override ReferenceType File listFiles ReturnStatement ArrayCreator ReferenceType File Literal 0	0
MethodDeclaration Modifier public ReferenceType Block FormalParameter ReferenceType StatementExpression Assignment MemberReference MethodInvocation MemberReference Visibility PUBLIC clone = ReturnStatement ClassCreator ReferenceType Block This MemberReference	0
MethodDeclaration Modifier public final BasicType byte FormalParameter BasicType long offset ThrowStatement MethodInvocation ex	0
MethodDeclaration Modifier public Annotation Override BasicType boolean isCallableFrom FormalParameter ReferenceType IRubyObject caller FormalParameter ReferenceType CallType callType IfStatement BinaryOperation == MemberReference compiledMethod Literal null StatementExpression MethodInvocation initializeMethod ReturnStatement MethodInvocation compiledMethod MemberReference caller MemberReference callType isCallableFrom	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "sample" ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject sample FormalParameter ReferenceType ThreadContext context LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime IfStatement BinaryOperation == MemberReference realLength Literal 0 ReturnStatement MethodInvocation runtime getNil LocalVariableDeclaration BasicType int VariableDeclarator i TernaryExpression BinaryOperation == MemberReference realLength Literal 1 Literal 0 MethodInvocation runtime MethodInvocation MemberReference realLength nextInt TryStatement ReturnStatement MemberReference ArraySelector BinaryOperation + MemberReference begin MemberReference i values CatchClause CatchClauseParameter ArrayIndexOutOfBoundsException e StatementExpression MethodInvocation concurrentModification ReturnStatement MethodInvocation runtime getNil	1
MethodDeclaration Modifier private final static BasicType short ReturnStatement ArrayCreator BasicType short ArrayInitializer Literal 360 Literal 10 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 281 Literal 282 Literal - 1 Literal 44 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal 58 Literal 59 Literal - 1 Literal - 1 Literal - 1 Literal 63 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 318 Literal 319 Literal 320 Literal 321 Literal 322 Literal 323 Literal 324 Literal 325 Literal 326 Literal 327 Literal - 1 Literal 329 Literal 330 Literal - 1 Literal - 1 Literal 333 Literal 334 Literal - 1 Literal - 1 Literal - 1 Literal 338 Literal - 1 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal - 1 Literal 348 Literal - 1 Literal 350 Literal - 1 Literal 352 Literal 353 Literal 354 Literal 355 Literal 356 Literal 357 Literal 358 Literal - 1 Literal 360 Literal - 1 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 0 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 10 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 281 Literal 282 Literal - 1 Literal 44 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal 58 Literal 59 Literal - 1 Literal - 1 Literal - 1 Literal 63 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 318 Literal 319 Literal 320 Literal 321 Literal 322 Literal 323 Literal 324 Literal 325 Literal 326 Literal 327 Literal - 1 Literal 329 Literal 330 Literal - 1 Literal - 1 Literal 333 Literal 334 Literal - 1 Literal - 1 Literal - 1 Literal 338 Literal - 1 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal - 1 Literal 348 Literal - 1 Literal 350 Literal 0 Literal 352 Literal 353 Literal 354 Literal 355 Literal 356 Literal 357 Literal 358 Literal - 1 Literal 360 Literal 10 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 281 Literal 282 Literal - 1 Literal 44 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal 59 Literal - 1 Literal 61 Literal - 1 Literal 63 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 318 Literal 319 Literal 320 Literal 321 Literal 322 Literal 323 Literal 324 Literal 325 Literal 326 Literal 327 Literal - 1 Literal 329 Literal 330 Literal 91 Literal - 1 Literal 333 Literal 334 Literal - 1 Literal - 1 Literal - 1 Literal 338 Literal - 1 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal - 1 Literal 348 Literal - 1 Literal 350 Literal - 1 Literal 352 Literal 353 Literal 354 Literal 355 Literal 356 Literal 357 Literal 358 Literal - 1 Literal 360 Literal - 1 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 0 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 10 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 281 Literal 282 Literal - 1 Literal 44 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal 59 Literal - 1 Literal 61 Literal - 1 Literal 63 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 318 Literal 319 Literal 320 Literal 321 Literal 322 Literal 323 Literal 324 Literal 325 Literal 326 Literal 327 Literal - 1 Literal 329 Literal 330 Literal 91 Literal - 1 Literal 333 Literal 334 Literal - 1 Literal - 1 Literal - 1 Literal 338 Literal - 1 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal - 1 Literal 348 Literal - 1 Literal 350 Literal 0 Literal 352 Literal 353 Literal 354 Literal 355 Literal 356 Literal 357 Literal 358 Literal - 1 Literal 360 Literal 10 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal - 1 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 44 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal 59 Literal - 1 Literal 61 Literal - 1 Literal 63 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 317 Literal 318 Literal 319 Literal 320 Literal 321 Literal 322 Literal 323 Literal 324 Literal 325 Literal 326 Literal 327 Literal 328 Literal 329 Literal 330 Literal 91 Literal - 1 Literal 333 Literal 334 Literal 335 Literal - 1 Literal 337 Literal - 1 Literal - 1 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 348 Literal - 1 Literal 350 Literal 0 Literal 352 Literal 353 Literal 354 Literal 355 Literal 356 Literal 357 Literal 358 Literal - 1 Literal 360 Literal 10 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 262 Literal 263 Literal 264 Literal - 1 Literal 44 Literal - 1 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 59 Literal - 1 Literal 61 Literal - 1 Literal 63 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 91 Literal - 1 Literal - 1 Literal - 1 Literal 317 Literal 318 Literal 319 Literal 320 Literal 321 Literal 322 Literal 323 Literal 324 Literal 325 Literal 326 Literal 327 Literal 328 Literal 329 Literal 330 Literal - 1 Literal 0 Literal 333 Literal 334 Literal 335 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 341 Literal 10 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 348 Literal - 1 Literal 350 Literal - 1 Literal 352 Literal 353 Literal 354 Literal 355 Literal 356 Literal 357 Literal 358 Literal - 1 Literal 360 Literal - 1 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 262 Literal 263 Literal 264 Literal 44 Literal - 1 Literal - 1 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 58 Literal 59 Literal - 1 Literal - 1 Literal - 1 Literal 63 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 317 Literal 318 Literal 319 Literal 320 Literal 321 Literal 322 Literal 323 Literal 324 Literal 325 Literal 326 Literal 327 Literal 328 Literal 329 Literal 330 Literal - 1 Literal 0 Literal 333 Literal 334 Literal 335 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 341 Literal 10 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 348 Literal - 1 Literal 350 Literal - 1 Literal 352 Literal 353 Literal 354 Literal 355 Literal 356 Literal 357 Literal 358 Literal - 1 Literal 360 Literal - 1 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 262 Literal 263 Literal 264 Literal 44 Literal - 1 Literal - 1 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 58 Literal 59 Literal - 1 Literal - 1 Literal - 1 Literal 63 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 317 Literal 318 Literal 319 Literal 320 Literal 321 Literal 322 Literal 323 Literal 324 Literal 325 Literal 326 Literal 327 Literal 328 Literal 329 Literal 330 Literal - 1 Literal - 1 Literal 333 Literal 334 Literal 335 Literal 0 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 10 Literal - 1 Literal 348 Literal - 1 Literal 350 Literal - 1 Literal 352 Literal 353 Literal 354 Literal 355 Literal 356 Literal 357 Literal 358 Literal - 1 Literal 360 Literal - 1 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal 267 Literal 268 Literal 269 Literal 44 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 281 Literal 282 Literal - 1 Literal 58 Literal 59 Literal - 1 Literal - 1 Literal - 1 Literal 63 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 318 Literal 319 Literal 320 Literal 321 Literal 322 Literal 323 Literal 324 Literal 325 Literal 326 Literal 327 Literal - 1 Literal 329 Literal 330 Literal - 1 Literal 0 Literal 333 Literal 334 Literal - 1 Literal - 1 Literal - 1 Literal 338 Literal - 1 Literal - 1 Literal 341 Literal 10 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal - 1 Literal - 1 Literal - 1 Literal 350 Literal - 1 Literal - 1 Literal - 1 Literal 354 Literal 355 Literal 356 Literal 357 Literal 358 Literal - 1 Literal 360 Literal - 1 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 262 Literal 263 Literal 264 Literal 44 Literal - 1 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 58 Literal 59 Literal 281 Literal 282 Literal - 1 Literal 63 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 318 Literal 319 Literal 320 Literal 321 Literal 322 Literal 323 Literal 324 Literal 325 Literal 326 Literal 327 Literal - 1 Literal 329 Literal 330 Literal - 1 Literal 0 Literal 333 Literal 334 Literal - 1 Literal - 1 Literal - 1 Literal 338 Literal - 1 Literal - 1 Literal 341 Literal 10 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal - 1 Literal - 1 Literal - 1 Literal 350 Literal - 1 Literal - 1 Literal - 1 Literal 354 Literal 355 Literal 356 Literal 357 Literal 358 Literal - 1 Literal 360 Literal - 1 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 44 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal 58 Literal 59 Literal - 1 Literal - 1 Literal - 1 Literal 63 Literal 281 Literal 282 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 318 Literal 319 Literal 320 Literal 321 Literal 322 Literal 323 Literal 324 Literal 325 Literal 326 Literal 327 Literal - 1 Literal 329 Literal 330 Literal - 1 Literal 0 Literal 333 Literal 334 Literal - 1 Literal - 1 Literal - 1 Literal 338 Literal - 1 Literal - 1 Literal 341 Literal 10 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal - 1 Literal - 1 Literal - 1 Literal 350 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 356 Literal 357 Literal 358 Literal - 1 Literal 360 Literal - 1 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal 267 Literal 268 Literal 269 Literal 44 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 281 Literal 282 Literal - 1 Literal 58 Literal 59 Literal - 1 Literal - 1 Literal - 1 Literal 63 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 318 Literal 319 Literal 320 Literal 321 Literal 322 Literal 323 Literal 324 Literal 325 Literal 326 Literal 327 Literal - 1 Literal 329 Literal 330 Literal - 1 Literal 0 Literal 333 Literal 334 Literal - 1 Literal - 1 Literal - 1 Literal 338 Literal - 1 Literal - 1 Literal 341 Literal 10 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal - 1 Literal - 1 Literal - 1 Literal 350 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 356 Literal 357 Literal 358 Literal - 1 Literal 360 Literal - 1 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 262 Literal 263 Literal 264 Literal 44 Literal - 1 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 58 Literal 59 Literal 281 Literal 282 Literal - 1 Literal 63 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 318 Literal 319 Literal 320 Literal 321 Literal 322 Literal 323 Literal 324 Literal 325 Literal 326 Literal 327 Literal - 1 Literal 329 Literal 330 Literal - 1 Literal 0 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 338 Literal - 1 Literal - 1 Literal 341 Literal 10 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal - 1 Literal - 1 Literal - 1 Literal 350 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 356 Literal 357 Literal 358 Literal - 1 Literal 360 Literal - 1 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 44 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal 58 Literal 59 Literal - 1 Literal - 1 Literal - 1 Literal 63 Literal 281 Literal 282 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 318 Literal 319 Literal 320 Literal 321 Literal 322 Literal 323 Literal 324 Literal 325 Literal 326 Literal 327 Literal - 1 Literal 329 Literal 330 Literal - 1 Literal 0 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 338 Literal - 1 Literal - 1 Literal 341 Literal 10 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 356 Literal 357 Literal 358 Literal - 1 Literal 360 Literal - 1 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal 267 Literal 268 Literal 269 Literal 44 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 281 Literal 282 Literal - 1 Literal 58 Literal 59 Literal - 1 Literal - 1 Literal - 1 Literal 63 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 318 Literal 319 Literal 320 Literal 321 Literal 322 Literal 323 Literal 324 Literal 325 Literal 326 Literal 327 Literal - 1 Literal 329 Literal 330 Literal - 1 Literal 0 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 338 Literal - 1 Literal - 1 Literal 341 Literal 10 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 356 Literal 357 Literal 358 Literal - 1 Literal 360 Literal - 1 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 262 Literal 263 Literal 264 Literal 44 Literal - 1 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 58 Literal 59 Literal 281 Literal 282 Literal - 1 Literal 63 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 318 Literal 319 Literal 320 Literal 321 Literal 322 Literal 323 Literal 324 Literal 325 Literal 326 Literal 327 Literal - 1 Literal 329 Literal 330 Literal - 1 Literal 0 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 338 Literal - 1 Literal - 1 Literal 341 Literal 10 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 356 Literal 357 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 44 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal 58 Literal 59 Literal - 1 Literal - 1 Literal - 1 Literal 63 Literal 281 Literal 282 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 318 Literal 319 Literal 320 Literal 321 Literal 322 Literal 323 Literal 324 Literal 325 Literal 326 Literal 327 Literal - 1 Literal 329 Literal 330 Literal - 1 Literal 0 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 338 Literal - 1 Literal - 1 Literal 341 Literal 10 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal - 1 Literal 0 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 356 Literal 357 Literal 10 Literal - 1 Literal - 1 Literal - 1 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal 267 Literal 268 Literal 269 Literal 44 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 281 Literal 282 Literal - 1 Literal 58 Literal 59 Literal 44 Literal - 1 Literal - 1 Literal 63 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal 59 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 318 Literal 319 Literal 320 Literal 321 Literal 322 Literal 323 Literal 324 Literal 325 Literal 326 Literal 327 Literal - 1 Literal 329 Literal 330 Literal - 1 Literal 0 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 338 Literal - 1 Literal - 1 Literal 341 Literal 10 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 356 Literal 357 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 262 Literal 263 Literal 264 Literal 44 Literal - 1 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 58 Literal 59 Literal 281 Literal 282 Literal - 1 Literal 63 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 0 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 10 Literal - 1 Literal 318 Literal 319 Literal 320 Literal 321 Literal 322 Literal 323 Literal 324 Literal 325 Literal 326 Literal 327 Literal - 1 Literal 329 Literal 330 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 338 Literal - 1 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal - 1 Literal - 1 Literal - 1 Literal 44 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 356 Literal 357 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 362 Literal - 1 Literal 58 Literal 59 Literal - 1 Literal - 1 Literal - 1 Literal 63 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 0 Literal - 1 Literal 262 Literal 263 Literal 264 Literal 281 Literal 282 Literal - 1 Literal 268 Literal 269 Literal 10 Literal 271 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 44 Literal - 1 Literal - 1 Literal - 1 Literal 324 Literal 325 Literal - 1 Literal - 1 Literal - 1 Literal 329 Literal 330 Literal - 1 Literal - 1 Literal - 1 Literal 58 Literal 59 Literal - 1 Literal - 1 Literal 338 Literal 63 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal - 1 Literal 0 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 262 Literal 263 Literal 264 Literal 10 Literal - 1 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 281 Literal 282 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal 44 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 58 Literal 59 Literal - 1 Literal - 1 Literal - 1 Literal 63 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 324 Literal 325 Literal - 1 Literal - 1 Literal - 1 Literal 329 Literal 330 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 338 Literal - 1 Literal 0 Literal 341 Literal - 1 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal 262 Literal 263 Literal 264 Literal 10 Literal - 1 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal 281 Literal 282 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal 44 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 58 Literal 59 Literal - 1 Literal - 1 Literal - 1 Literal 63 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 324 Literal 325 Literal - 1 Literal - 1 Literal - 1 Literal 329 Literal 330 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 338 Literal - 1 Literal 0 Literal 341 Literal - 1 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal 262 Literal 263 Literal 264 Literal 10 Literal - 1 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal 281 Literal 282 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal 44 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 58 Literal 59 Literal - 1 Literal - 1 Literal - 1 Literal 63 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 324 Literal 325 Literal - 1 Literal - 1 Literal - 1 Literal 329 Literal 330 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 338 Literal - 1 Literal 0 Literal 341 Literal - 1 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal 262 Literal 263 Literal 264 Literal 10 Literal - 1 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal 281 Literal 282 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal 0 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal 44 Literal - 1 Literal - 1 Literal 10 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 58 Literal 59 Literal - 1 Literal - 1 Literal - 1 Literal 63 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 324 Literal 325 Literal - 1 Literal - 1 Literal - 1 Literal 329 Literal 330 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 44 Literal - 1 Literal 338 Literal - 1 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal 262 Literal 263 Literal 264 Literal 58 Literal 59 Literal 267 Literal 268 Literal 269 Literal 63 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal 281 Literal 282 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal 0 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 10 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 324 Literal 325 Literal - 1 Literal - 1 Literal - 1 Literal 329 Literal 330 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 44 Literal - 1 Literal 338 Literal - 1 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal 262 Literal 263 Literal 264 Literal 58 Literal 59 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal 281 Literal 282 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal 0 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 10 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 325 Literal - 1 Literal - 1 Literal - 1 Literal 329 Literal 330 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 44 Literal - 1 Literal 338 Literal - 1 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal 262 Literal 263 Literal 264 Literal 58 Literal 59 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal 281 Literal 282 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal 0 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal 262 Literal 263 Literal 264 Literal 10 Literal - 1 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 281 Literal 282 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal 0 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal 44 Literal - 1 Literal 338 Literal 10 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal - 1 Literal - 1 Literal - 1 Literal 58 Literal 59 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 44 Literal - 1 Literal 338 Literal - 1 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal 262 Literal 263 Literal 264 Literal 58 Literal 59 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal 281 Literal 282 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal 0 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 10 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 0 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 44 Literal - 1 Literal 338 Literal 10 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal 262 Literal 263 Literal 264 Literal 58 Literal 59 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal 281 Literal 282 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 44 Literal - 1 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 58 Literal 59 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 0 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 338 Literal 10 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal 281 Literal 282 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 44 Literal - 1 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal 262 Literal 263 Literal 264 Literal 58 Literal 59 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 281 Literal 282 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal 0 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal 338 Literal 10 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal 0 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 44 Literal - 1 Literal 338 Literal 10 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal 262 Literal 263 Literal 264 Literal 58 Literal 59 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal 281 Literal 282 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 44 Literal - 1 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal 262 Literal 263 Literal 264 Literal 58 Literal 59 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 281 Literal 282 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal 0 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal 338 Literal 10 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal 0 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 44 Literal - 1 Literal 338 Literal 10 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal 262 Literal 263 Literal 264 Literal 58 Literal 59 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal 281 Literal 282 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 44 Literal - 1 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 58 Literal 59 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 0 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 338 Literal 10 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal 281 Literal 282 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 44 Literal - 1 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal 262 Literal 263 Literal 264 Literal 58 Literal 59 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 281 Literal 282 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal 0 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal 338 Literal 10 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal 0 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 44 Literal - 1 Literal 338 Literal 10 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal 262 Literal 263 Literal 264 Literal 58 Literal 59 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal 281 Literal 282 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 44 Literal - 1 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal 262 Literal 263 Literal 264 Literal 58 Literal 59 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 0 Literal - 1 Literal - 1 Literal 281 Literal 282 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 10 Literal - 1 Literal 290 Literal 291 Literal 0 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal 338 Literal 10 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 44 Literal - 1 Literal - 1 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 59 Literal 338 Literal - 1 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal 262 Literal 263 Literal 264 Literal - 1 Literal 59 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal 281 Literal 282 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal 59 Literal - 1 Literal - 1 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal 281 Literal 282 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal - 1 Literal - 1 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 281 Literal 282 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal 338 Literal - 1 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal - 1 Literal 268 Literal 269 Literal 341 Literal 271 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal - 1 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 362 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 362 Literal - 1 Literal 257 Literal 258 Literal 259 Literal 260 Literal 261 Literal - 1 Literal - 1 Literal - 1 Literal 265 Literal 266 Literal - 1 Literal - 1 Literal 362 Literal 270 Literal - 1 Literal 272 Literal 273 Literal 274 Literal 275 Literal 276 Literal 277 Literal 278 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 283 Literal 284 Literal 285 Literal 286 Literal 287 Literal 288 Literal 289 Literal - 1 Literal - 1 Literal 292 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 298 Literal 299 Literal 300 Literal 301 Literal 302 Literal 303 Literal - 1 Literal - 1 Literal 306 Literal 307 Literal 308 Literal 309 Literal 310 Literal 311 Literal - 1 Literal - 1 Literal 314 Literal 315 Literal 316 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 336 Literal - 1 Literal - 1 Literal 339 Literal - 1 Literal - 1 Literal 342 Literal 343 Literal - 1 Literal 345 Literal - 1 Literal 347 Literal - 1 Literal - 1 Literal - 1 Literal 351 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 359 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 364 Literal 365 Literal 366 Literal 367 Literal 368 Literal 369 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 375 Literal 376 Literal - 1 Literal 378 Literal 379 Literal 256 Literal 257 Literal 258 Literal 259 Literal 260 Literal 261 Literal - 1 Literal - 1 Literal - 1 Literal 265 Literal 266 Literal - 1 Literal - 1 Literal - 1 Literal 270 Literal - 1 Literal 272 Literal 273 Literal 274 Literal 275 Literal 276 Literal 277 Literal 278 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 283 Literal 284 Literal 285 Literal 286 Literal 287 Literal 288 Literal 289 Literal - 1 Literal - 1 Literal 292 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 298 Literal 299 Literal 300 Literal 301 Literal 302 Literal 303 Literal - 1 Literal - 1 Literal 306 Literal 307 Literal 308 Literal 309 Literal 310 Literal 311 Literal - 1 Literal - 1 Literal 314 Literal 315 Literal 316 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 336 Literal - 1 Literal - 1 Literal 339 Literal - 1 Literal - 1 Literal 342 Literal 343 Literal - 1 Literal 345 Literal - 1 Literal 347 Literal - 1 Literal - 1 Literal - 1 Literal 351 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 359 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 364 Literal 365 Literal 366 Literal 367 Literal 368 Literal 369 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 375 Literal 376 Literal - 1 Literal 378 Literal 379 Literal 257 Literal 258 Literal 259 Literal 260 Literal 261 Literal - 1 Literal - 1 Literal - 1 Literal 265 Literal 266 Literal - 1 Literal - 1 Literal - 1 Literal 270 Literal - 1 Literal 272 Literal 273 Literal 274 Literal 275 Literal 276 Literal 277 Literal 278 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 283 Literal 284 Literal 285 Literal 286 Literal 287 Literal 288 Literal 289 Literal - 1 Literal - 1 Literal 292 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 298 Literal 299 Literal 300 Literal 301 Literal 302 Literal 303 Literal - 1 Literal - 1 Literal 306 Literal 307 Literal 308 Literal 309 Literal 310 Literal 311 Literal - 1 Literal - 1 Literal 314 Literal 315 Literal 316 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 336 Literal - 1 Literal - 1 Literal 339 Literal - 1 Literal - 1 Literal 342 Literal 343 Literal - 1 Literal 345 Literal - 1 Literal 347 Literal - 1 Literal - 1 Literal - 1 Literal 351 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 359 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 364 Literal 365 Literal 366 Literal 367 Literal 368 Literal 369 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 375 Literal 376 Literal - 1 Literal 378 Literal 379 Literal 257 Literal 258 Literal 259 Literal - 1 Literal 261 Literal - 1 Literal - 1 Literal - 1 Literal 265 Literal 266 Literal - 1 Literal - 1 Literal - 1 Literal 270 Literal - 1 Literal 272 Literal 273 Literal 274 Literal 275 Literal 276 Literal 277 Literal 278 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 283 Literal 284 Literal 285 Literal 286 Literal 287 Literal 288 Literal 289 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 299 Literal - 1 Literal - 1 Literal 302 Literal 303 Literal - 1 Literal - 1 Literal 306 Literal 307 Literal 308 Literal 309 Literal 310 Literal 311 Literal - 1 Literal - 1 Literal 314 Literal 315 Literal 316 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 336 Literal - 1 Literal - 1 Literal 339 Literal - 1 Literal 341 Literal 342 Literal 343 Literal - 1 Literal 345 Literal - 1 Literal 347 Literal - 1 Literal 349 Literal - 1 Literal 351 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 359 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 364 Literal 365 Literal 366 Literal 367 Literal 368 Literal 369 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 375 Literal 376 Literal - 1 Literal 378 Literal 379 Literal 257 Literal 258 Literal 259 Literal - 1 Literal 261 Literal - 1 Literal - 1 Literal - 1 Literal 265 Literal 266 Literal - 1 Literal - 1 Literal - 1 Literal 270 Literal - 1 Literal 272 Literal 273 Literal 274 Literal 275 Literal 276 Literal 277 Literal 278 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 283 Literal 284 Literal 285 Literal 286 Literal 287 Literal 288 Literal 289 Literal - 1 Literal - 1 Literal 292 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 299 Literal - 1 Literal - 1 Literal 302 Literal 303 Literal - 1 Literal - 1 Literal 306 Literal 307 Literal 308 Literal 309 Literal 310 Literal 311 Literal - 1 Literal - 1 Literal 314 Literal 315 Literal 316 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 336 Literal - 1 Literal - 1 Literal 339 Literal - 1 Literal - 1 Literal 342 Literal 343 Literal - 1 Literal 345 Literal - 1 Literal 347 Literal - 1 Literal 349 Literal - 1 Literal 351 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 359 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 364 Literal 365 Literal 366 Literal 367 Literal 368 Literal 369 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 375 Literal 376 Literal - 1 Literal 378 Literal 379 Literal 257 Literal 258 Literal 259 Literal - 1 Literal 261 Literal - 1 Literal - 1 Literal - 1 Literal 265 Literal 266 Literal - 1 Literal - 1 Literal - 1 Literal 270 Literal - 1 Literal 272 Literal 273 Literal 274 Literal 275 Literal 276 Literal 277 Literal 278 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 283 Literal 284 Literal 285 Literal 286 Literal 287 Literal 288 Literal 289 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 299 Literal - 1 Literal - 1 Literal 302 Literal 303 Literal - 1 Literal - 1 Literal 306 Literal 307 Literal 308 Literal 309 Literal 310 Literal 311 Literal - 1 Literal - 1 Literal 314 Literal 315 Literal 316 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 336 Literal - 1 Literal - 1 Literal 339 Literal - 1 Literal - 1 Literal 342 Literal 343 Literal - 1 Literal 345 Literal - 1 Literal 347 Literal - 1 Literal 349 Literal - 1 Literal 351 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 359 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 364 Literal 365 Literal 366 Literal 367 Literal 368 Literal 369 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 375 Literal 376 Literal - 1 Literal 378 Literal 379 Literal 257 Literal 258 Literal 259 Literal - 1 Literal 261 Literal - 1 Literal - 1 Literal - 1 Literal 265 Literal 266 Literal - 1 Literal - 1 Literal - 1 Literal 270 Literal - 1 Literal 272 Literal 273 Literal 274 Literal 275 Literal 276 Literal 277 Literal 278 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 283 Literal 284 Literal 285 Literal 286 Literal 287 Literal 288 Literal 289 Literal - 1 Literal - 1 Literal - 1	1
MethodDeclaration Modifier protected ReferenceType OpenFile getOpenFileChecked StatementExpression MethodInvocation openFile MethodInvocation getRuntime ReturnStatement MemberReference openFile	0
MethodDeclaration Modifier public static main FormalParameter ReferenceType String args LocalVariableDeclaration BasicType long VariableDeclarator Literal 5 LocalVariableDeclaration BasicType long VariableDeclarator n Literal 30 IfStatement BinaryOperation >= MemberReference args length Literal 1 BlockStatement StatementExpression Assignment MemberReference MethodInvocation Long MemberReference ArraySelector Literal 0 args parseLong = IfStatement BinaryOperation >= MemberReference args length Literal 2 BlockStatement StatementExpression Assignment MemberReference n MethodInvocation Long MemberReference ArraySelector Literal 1 args parseLong = ForStatement ForControl VariableDeclaration BasicType long VariableDeclarator j Literal 0 BinaryOperation < MemberReference j MemberReference MemberReference ++ j BlockStatement StatementExpression MethodInvocation MemberReference n ForStatement ForControl VariableDeclaration BasicType long VariableDeclarator j Literal 0 BinaryOperation < MemberReference j MemberReference MemberReference ++ j BlockStatement StatementExpression MethodInvocation MemberReference n ForStatement ForControl VariableDeclaration BasicType long VariableDeclarator j Literal 0 BinaryOperation < MemberReference j MemberReference MemberReference ++ j BlockStatement StatementExpression MethodInvocation MemberReference n	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "each_byte" ElementValuePair frame Literal true ReferenceType IRubyObject each_byte FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Block block IOException LocalVariableDeclaration BasicType int VariableDeclarator value MethodInvocation io read WhileStatement BinaryOperation != MemberReference value Literal - 1 BlockStatement StatementExpression MethodInvocation block MemberReference context MethodInvocation MethodInvocation MemberReference value newFixnum getRuntime yield StatementExpression Assignment MemberReference value MethodInvocation io read = ReturnStatement MethodInvocation MethodInvocation getNil getRuntime	1
MethodDeclaration Modifier public ReferenceType RubyClass LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator clazz IfStatement BinaryOperation != Assignment MemberReference clazz MemberReference javaConstructorClass = Literal null ReturnStatement MemberReference clazz ReturnStatement Assignment MemberReference javaConstructorClass MethodInvocation MethodInvocation Literal "JavaConstructor" fastGetClass getJavaModule =	1
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType AssignedName other ReturnStatement BinaryOperation && BinaryOperation != MemberReference other Literal null BinaryOperation < MemberReference value MemberReference value	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block LocalVariableDeclaration ReferenceType RubyModule VariableDeclarator containingClass MethodInvocation context IfStatement BinaryOperation == MemberReference containingClass MethodInvocation runtime BlockStatement ThrowStatement MethodInvocation runtime Literal "no class/module to add method" newTypeError LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation getName IfStatement BinaryOperation && BinaryOperation == MemberReference containingClass MethodInvocation runtime getObject BinaryOperation == MemberReference name Literal "initialize" BlockStatement StatementExpression MethodInvocation runtime MethodInvocation MemberReference ID REDEFINING_DANGEROUS Literal "redefining may cause Literal "Object#initialize" warn getWarnings IfStatement BinaryOperation || BinaryOperation == MemberReference name Literal "__id__" BinaryOperation == MemberReference name Literal BlockStatement StatementExpression MethodInvocation runtime MethodInvocation MemberReference ID REDEFINING_DANGEROUS BinaryOperation + BinaryOperation + Literal "redefining `" MemberReference name Literal "' may cause serious problem" MemberReference name warn getWarnings LocalVariableDeclaration ReferenceType Visibility VariableDeclarator visibility MethodInvocation context getCurrentVisibility IfStatement BinaryOperation || BinaryOperation || BinaryOperation == MemberReference name Literal "initialize" BinaryOperation == MemberReference name Literal "initialize_copy" BinaryOperation == MemberReference visibility MemberReference Visibility MODULE_FUNCTION BlockStatement StatementExpression Assignment MemberReference visibility MemberReference Visibility PRIVATE = StatementExpression MethodInvocation scope determineModule LocalVariableDeclaration ReferenceType Node VariableDeclarator body TernaryExpression BinaryOperation == MemberReference bodyNode Literal null ClassCreator ReferenceType NilNode MethodInvocation getPosition MemberReference bodyNode LocalVariableDeclaration ReferenceType DynamicMethod VariableDeclarator MethodInvocation DynamicMethodFactory MemberReference runtime MemberReference containingClass MemberReference name MemberReference scope MemberReference body MemberReference argsNode MemberReference visibility MethodInvocation getPosition newInterpretedMethod StatementExpression MethodInvocation containingClass MemberReference name MemberReference addMethod IfStatement BinaryOperation == MethodInvocation context getCurrentVisibility MemberReference Visibility MODULE_FUNCTION BlockStatement StatementExpression MethodInvocation containingClass MethodInvocation MemberReference name ClassCreator ReferenceType MethodInvocation containingClass MemberReference MemberReference Visibility PUBLIC addMethod StatementExpression MethodInvocation containingClass MemberReference context Literal MethodInvocation runtime MemberReference name fastNewSymbol callMethod IfStatement MethodInvocation containingClass isSingleton BlockStatement StatementExpression Cast ReferenceType MetaClass MemberReference containingClass BlockStatement StatementExpression MethodInvocation containingClass MemberReference context Literal "method_added" MethodInvocation runtime MemberReference name fastNewSymbol callMethod ReturnStatement MethodInvocation runtime getNil	1
MethodDeclaration Modifier public addReadWriteAttribute FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType String name StatementExpression MethodInvocation MemberReference context MethodInvocation name intern MemberReference Visibility PUBLIC Literal true Literal true addAccessor	1
MethodDeclaration Modifier public ReferenceType FileChannel getError ReturnStatement MemberReference	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "options" ReferenceType IRubyObject options ReturnStatement MethodInvocation MethodInvocation MethodInvocation newFixnum getRuntime	0
MethodDeclaration Modifier public static ReferenceType String getOSName LocalVariableDeclaration ReferenceType String VariableDeclarator OSName MethodInvocation Platform getOSName LocalVariableDeclaration ReferenceType String VariableDeclarator theOSName MethodInvocation MemberReference OSName get ReturnStatement TernaryExpression BinaryOperation == MemberReference theOSName Literal null MemberReference OSName MemberReference theOSName	1
MethodDeclaration Modifier public checkIsExceptionHandled FormalParameter ReferenceType ArgumentsCallback rescueArgs StatementExpression MethodInvocation rescueArgs This call StatementExpression MethodInvocation loadThreadContext SwitchStatement MethodInvocation rescueArgs SwitchStatementCase Literal 1 StatementExpression MethodInvocation Literal "isJavaExceptionHandled" MethodInvocation ClassReference ReferenceType IRubyObject ClassReference ReferenceType Throwable ClassReference ReferenceType IRubyObject ClassReference ReferenceType ThreadContext sig invokeUtilityMethod BreakStatement SwitchStatementCase Literal 2 StatementExpression MethodInvocation Literal "isJavaExceptionHandled" MethodInvocation ClassReference ReferenceType IRubyObject ClassReference ReferenceType Throwable ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject ClassReference ReferenceType ThreadContext sig invokeUtilityMethod BreakStatement SwitchStatementCase Literal 3 StatementExpression MethodInvocation Literal "isJavaExceptionHandled" MethodInvocation ClassReference ReferenceType IRubyObject ClassReference ReferenceType Throwable ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject ClassReference ReferenceType ThreadContext sig invokeUtilityMethod BreakStatement SwitchStatementCase StatementExpression MethodInvocation Literal "isJavaExceptionHandled" MethodInvocation ClassReference ReferenceType IRubyObject ClassReference ReferenceType Throwable ClassReference ReferenceType IRubyObject ClassReference ReferenceType ThreadContext sig invokeUtilityMethod	1
MethodDeclaration Modifier public static ReferenceType IRubyObject s_deflate FormalParameter ReferenceType IRubyObject caller FormalParameter ReferenceType ByteList str FormalParameter BasicType int level DataFormatException IOException LocalVariableDeclaration ReferenceType ZlibDeflate VariableDeclarator zstream ClassCreator ReferenceType ZlibDeflate MemberReference caller MemberReference level MemberReference MAX_WBITS MemberReference MemberReference LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator result MethodInvocation zstream MemberReference str MemberReference StatementExpression MethodInvocation zstream close ReturnStatement MemberReference result	1
MethodDeclaration Modifier public compileNext FormalParameter ReferenceType Node node FormalParameter ReferenceType BodyCompiler context FormalParameter BasicType boolean expr LocalVariableDeclaration Modifier final ReferenceType NextNode VariableDeclarator nextNode Cast ReferenceType NextNode MemberReference node LocalVariableDeclaration ReferenceType CompilerCallback VariableDeclarator valueCallback ClassCreator ReferenceType CompilerCallback MethodDeclaration Modifier public call FormalParameter ReferenceType BodyCompiler context IfStatement BinaryOperation != MethodInvocation nextNode getValueNode Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation nextNode getValueNode MemberReference context Literal true compile BlockStatement StatementExpression MethodInvocation context loadNil StatementExpression MethodInvocation context pollThreadEvents StatementExpression MethodInvocation context MemberReference valueCallback IfStatement MemberReference ! expr StatementExpression MethodInvocation context consumeCurrentValue	1
MethodDeclaration Modifier public ReferenceType Object case188_line772 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support MethodInvocation Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 5 MemberReference yyTop yyVals getPosition Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 5 MemberReference yyTop yyVals Cast ReferenceType String Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 3 MemberReference yyTop yyVals Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals new_opElementAsgnNode = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public setPath FormalParameter ReferenceType String path StatementExpression Assignment This MemberReference path MemberReference path =	0
MethodDeclaration Modifier protected ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType String name FormalParameter ReferenceType DynamicMethod method FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block ReturnStatement MethodInvocation RuntimeHelpers MemberReference context MemberReference self MethodInvocation method getVisibility MemberReference name MemberReference callType MemberReference args MemberReference block	0
MethodDeclaration Modifier public synchronized FormalParameter BasicType boolean StatementExpression Assignment MemberReference MemberReference = StatementExpression MethodInvocation repaint	0
MethodDeclaration Modifier private ReferenceType String IfStatement MethodInvocation Double MemberReference value isInfinite ReturnStatement TernaryExpression BinaryOperation < MemberReference value Literal 0 Literal Literal IfStatement MethodInvocation Double MemberReference value isNaN ReturnStatement Literal ReturnStatement MethodInvocation MemberReference value	1
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 FormalParameter ReferenceType IRubyObject arg3 FormalParameter ReferenceType IRubyObject arg4 FormalParameter ReferenceType IRubyObject arg5 LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime TryStatement StatementExpression MethodInvocation MemberReference context MemberReference name MemberReference self MemberReference Block NULL_BLOCK MemberReference runtime pre StatementExpression MethodInvocation argsNode MemberReference runtime Literal 6 StatementExpression MethodInvocation argsNode MemberReference context MemberReference runtime MemberReference self MemberReference arg0 MemberReference arg1 MemberReference arg2 MemberReference arg3 MemberReference arg4 MemberReference arg5 MemberReference Block NULL_BLOCK prepare ReturnStatement MethodInvocation body MemberReference runtime MemberReference context MemberReference self MemberReference Block NULL_BLOCK CatchClause CatchClauseParameter rj ReturnStatement MethodInvocation MemberReference context MemberReference rj handleReturn CatchClause CatchClauseParameter rj ReturnStatement MethodInvocation MemberReference runtime handleRedo StatementExpression MethodInvocation MemberReference runtime MemberReference context MemberReference name post	0
MethodDeclaration Modifier public ReferenceType Short FormalParameter ReferenceType Short s ReturnStatement MethodInvocation vri MemberReference s	0
MethodDeclaration Modifier final public static BasicType byte FormalParameter BasicType long i ReturnStatement MethodInvocation ByteList MethodInvocation Long MemberReference i plain	0
MethodDeclaration Modifier public static ReferenceType Arity required FormalParameter BasicType int minimum AssertStatement BinaryOperation >= MemberReference minimum Literal 0 ReturnStatement MethodInvocation BinaryOperation + Literal 1 MemberReference minimum createArity	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair frame Literal true ElementValuePair module Literal true ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType Block block StatementExpression MethodInvocation block MemberReference context MemberReference recv yield ReturnStatement MemberReference recv	0
MethodDeclaration Modifier public ReferenceType RubyClass ReturnStatement MemberReference	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context ReturnStatement This	0
MethodDeclaration Modifier public ReferenceType Operand ReturnStatement MemberReference _methAddr	0
MethodDeclaration Modifier public synchronized Annotation JRubyMethod ReferenceType RubyNumeric max FormalParameter ReferenceType ThreadContext context ReturnStatement MethodInvocation RubyNumeric MethodInvocation context getRuntime MemberReference capacity	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "<" ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject op_lt19 FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject other IfStatement BinaryOperation instanceof MemberReference other ReferenceType RubyString ReturnStatement MethodInvocation context MethodInvocation BinaryOperation < MethodInvocation Cast ReferenceType RubyString MemberReference other op_cmp19 Literal 0 newBoolean getRuntime ReturnStatement MethodInvocation RubyComparable MemberReference context This MemberReference other op_lt	1
MethodDeclaration Modifier public Annotation Override assign FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject values FormalParameter ReferenceType Block block LocalVariableDeclaration BasicType int VariableDeclarator length TernaryExpression BinaryOperation == MemberReference values Literal null Literal 0 MemberReference values length SwitchStatement MemberReference length SwitchStatementCase Literal 0 StatementExpression MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference block assign BreakStatement SwitchStatementCase Literal 1 StatementExpression MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference ArraySelector Literal 0 values MemberReference block assign BreakStatement SwitchStatementCase StatementExpression MethodInvocation MemberReference runtime MemberReference context MemberReference self MethodInvocation runtime MemberReference values newArray MemberReference block assign	1
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public StatementExpression MethodInvocation config MethodInvocation MethodInvocation config print getOutput	0
MethodDeclaration Modifier public ReferenceType Object getVariable FormalParameter BasicType int index IfStatement BinaryOperation < MemberReference index Literal 0 ReturnStatement Literal null LocalVariableDeclaration ReferenceType Object VariableDeclarator ivarTable MethodInvocation IfStatement BinaryOperation > MemberReference ivarTable length MemberReference index ReturnStatement MemberReference ArraySelector MemberReference index ivarTable ReturnStatement Literal null	1
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals Literal "*" Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals MethodInvocation getPosition getOperatorCallNode = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public Annotation Override BasicType boolean FormalParameter ReferenceType IRubyObject obj FormalParameter ReferenceType RubyModule type ReturnStatement BinaryOperation instanceof MemberReference obj ReferenceType RubyMatchData	0
MethodDeclaration Modifier public StatementExpression MethodInvocation incrementAndGet	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType Block block ReturnStatement MethodInvocation MemberReference context MemberReference self MemberReference clazz MemberReference name call	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal Cast ReferenceType ListNode MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals = StatementExpression Cast ReferenceType ISourcePositionHolder MemberReference yyVal ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal Literal ElementValuePair required Literal 1 ElementValuePair optional Literal 9 ElementValuePair meta Literal true ReferenceType RubyTime FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args ReturnStatement MethodInvocation MemberReference recv MemberReference args Literal true	1
MethodDeclaration Modifier public ReferenceType String toString LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buf ClassCreator ReferenceType StringBuffer StatementExpression MethodInvocation buf MethodInvocation MethodInvocation append MethodInvocation Literal append Literal append StatementExpression MethodInvocation buf Literal Data Flow append StatementExpression MethodInvocation buf MethodInvocation getDataFlowVarsForOutput append StatementExpression MethodInvocation buf Literal append ForStatement EnhancedForControl VariableDeclaration ReferenceType FlowGraphNode VariableDeclarator n MemberReference _fgNodes StatementExpression MethodInvocation buf MethodInvocation MethodInvocation getID append MethodInvocation Literal ":\n" append MethodInvocation MethodInvocation n toString append Literal "DF State for " append ReturnStatement MethodInvocation buf toString	1
MethodDeclaration Modifier public ReferenceType Node getSecondNode ReturnStatement MemberReference	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal Annotation Override ReferenceType RubyFixnum hash ReturnStatement MethodInvocation MethodInvocation MethodInvocation value hashCode newFixnum getRuntime	0
MethodDeclaration Modifier final static protected ReferenceType RubyArray checkArray FormalParameter ReferenceType IRubyObject obj IfStatement BinaryOperation instanceof MemberReference obj ReferenceType RubyArray BlockStatement ThrowStatement MethodInvocation obj MethodInvocation Literal expected" newArgumentError getRuntime ReturnStatement Cast ReferenceType RubyArray MemberReference obj	0
MethodDeclaration Modifier protected ReferenceType DynamicMethod FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType String methodName ReturnStatement MethodInvocation runtimeCache MemberReference context MemberReference self Literal 6 MemberReference methodName getMethod	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object FormalParameter ReferenceType ArrayCallback FormalParameter BasicType boolean StatementExpression MethodInvocation StatementExpression MethodInvocation MemberReference MemberReference MemberReference	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "sub!" ElementValuePair frame Literal true ElementValuePair reads MemberReference BACKREF ElementValuePair writes MemberReference BACKREF ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType IRubyObject sub_bang FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType Block block ReturnStatement MethodInvocation MemberReference context MethodInvocation MemberReference arg0 getQuotedPattern MethodInvocation arg1 convertToString	1
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType Node childNodes IfStatement BinaryOperation != MemberReference Literal null ReturnStatement MethodInvocation Node MemberReference MemberReference bodyNode MemberReference createList ReturnStatement MethodInvocation Node MemberReference MemberReference bodyNode createList	1
MethodDeclaration Modifier public StatementExpression MethodInvocation MethodInvocation MemberReference visitInsn getMethodVisitor	0
MethodDeclaration Modifier public Exception StatementExpression Assignment MemberReference result MethodInvocation Literal = hash = eval = StatementExpression MethodInvocation Literal "two" MemberReference result assertEquals StatementExpression Assignment MemberReference result MethodInvocation Literal = hash = = eval = StatementExpression MethodInvocation Literal "two" MemberReference result assertEquals StatementExpression Assignment MemberReference result MethodInvocation Literal = hash = = eval = StatementExpression MethodInvocation Literal "two" MemberReference result assertEquals StatementExpression Assignment MemberReference result MethodInvocation Literal = hash = = eval = StatementExpression MethodInvocation Literal "two" MemberReference result assertEquals StatementExpression Assignment MemberReference result MethodInvocation Literal = hash = = eval = StatementExpression MethodInvocation Literal "two" MemberReference result assertEquals StatementExpression Assignment MemberReference result MethodInvocation Literal = hash = = eval = StatementExpression MethodInvocation Literal "two" MemberReference result assertEquals StatementExpression Assignment MemberReference result MethodInvocation Literal = hash = = eval = StatementExpression MethodInvocation Literal "two" MemberReference result assertEquals StatementExpression Assignment MemberReference result MethodInvocation Literal = hash = = eval = StatementExpression MethodInvocation Literal "two" MemberReference result assertEquals	0
MethodDeclaration Modifier public StatementExpression Assignment MemberReference ArraySelector MemberReference -- Literal null =	0
MethodDeclaration Modifier public Annotation Deprecated ReferenceType Callback getOptSingletonMethod FormalParameter ReferenceType String method LocalVariableDeclaration ReferenceType String VariableDeclarator mname BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation type getName Literal "Callback$" MemberReference method Literal "_Sopt" LocalVariableDeclaration ReferenceType String VariableDeclarator mnamePath BinaryOperation + BinaryOperation + BinaryOperation + MemberReference typePath Literal "Callback$" MemberReference method Literal "_Sopt" SynchronizedStatement MethodInvocation runtime getJRubyClassLoader LocalVariableDeclaration ReferenceType Class VariableDeclarator c MethodInvocation MemberReference mname tryClass TryStatement IfStatement BinaryOperation == MemberReference c Literal null BlockStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator signature ArrayCreator ReferenceType Class ArrayInitializer MemberReference RubyKernel IRUBY_OBJECT ClassReference ReferenceType IRubyObject ClassReference ReferenceType Block LocalVariableDeclaration ReferenceType Class VariableDeclarator ret MethodInvocation MemberReference method MemberReference signature getReturnClass LocalVariableDeclaration ReferenceType ClassWriter VariableDeclarator cw MethodInvocation MemberReference mnamePath createCtor LocalVariableDeclaration ReferenceType MethodVisitor VariableDeclarator mv MethodInvocation MemberReference cw startCallS StatementExpression MethodInvocation mv MemberReference ALOAD MemberReference METHOD_ARGS_INDEX visitVarInsn StatementExpression MethodInvocation MemberReference mv ClassReference ReferenceType IRubyObject checkCast StatementExpression MethodInvocation mv MemberReference ALOAD Literal 3 visitVarInsn StatementExpression MethodInvocation mv MemberReference INVOKESTATIC MemberReference typePath MemberReference method MethodInvocation MemberReference ret MemberReference signature sig visitMethodInsn StatementExpression MethodInvocation mv MemberReference ARETURN visitInsn StatementExpression MethodInvocation mv Literal 2 Literal 3 visitMaxs StatementExpression Assignment MemberReference c MethodInvocation MemberReference cw MemberReference mv MemberReference mname endCall = LocalVariableDeclaration ReferenceType InvocationCallback VariableDeclarator ic Cast ReferenceType InvocationCallback MethodInvocation c newInstance StatementExpression MethodInvocation ic MethodInvocation Arity optional setArity StatementExpression MethodInvocation ic MemberReference InvocationCallback OPTIONAL_ARGS setArgumentTypes StatementExpression MethodInvocation ic MemberReference method setJavaName StatementExpression MethodInvocation ic Literal true setSingleton ReturnStatement MemberReference ic CatchClause CatchClauseParameter IllegalArgumentException e ThrowStatement MemberReference e CatchClause CatchClauseParameter Exception e ThrowStatement ClassCreator ReferenceType IllegalArgumentException MethodInvocation e getMessage	1
MethodDeclaration Modifier public Annotation Override StatementExpression MethodInvocation MemberReference SIZE MemberReference	0
MethodDeclaration Modifier private final ReferenceType IRubyObject invoke FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg1 LocalVariableDeclaration BasicType int VariableDeclarator retval MethodInvocation invoker MemberReference function MethodInvocation c1 MemberReference context MemberReference arg1 intValue ReturnStatement MethodInvocation resultConverter MemberReference context MemberReference retval fromNative	1
MethodDeclaration Modifier public FormalParameter BasicType int param FormalParameter ReferenceType String name FormalParameter BasicType boolean FormalParameter ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType Object fields LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation MemberReference param MemberReference name MemberReference StatementExpression MethodInvocation MemberReference MemberReference fields StatementExpression MethodInvocation visitEnd	0
MethodDeclaration Modifier public ReferenceType String LocalVariableDeclaration ReferenceType String VariableDeclarator variables MethodInvocation LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation getVariables LocalVariableDeclaration BasicType int VariableDeclarator newSize BinaryOperation + MemberReference variables length MemberReference length LocalVariableDeclaration ReferenceType String VariableDeclarator names ArrayCreator ReferenceType String MemberReference newSize StatementExpression MethodInvocation System MemberReference variables Literal 0 MemberReference names Literal 0 MemberReference variables length arraycopy StatementExpression MethodInvocation System MemberReference Literal 0 MemberReference names MemberReference variables length MemberReference length arraycopy ReturnStatement MemberReference names	0
MethodDeclaration Modifier public synchronized fclose IOException BadDescriptorException StatementExpression Assignment MemberReference Literal true = StatementExpression MethodInvocation Literal false close	0
MethodDeclaration Modifier public ReferenceType Set TypeArgument ReferenceType Script ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType RubyClass ReturnStatement ClassCreator ReferenceType Base MemberReference runtime MemberReference	0
MethodDeclaration Modifier public attach FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType applet StatementExpression MethodInvocation MemberReference runtime StatementExpression MethodInvocation applet MemberReference scrollPane add StatementExpression MethodInvocation applet validate	0
MethodDeclaration Modifier public final BasicType int ReturnStatement MemberReference	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg0 ReturnStatement MethodInvocation MemberReference context MemberReference self MemberReference clazz MemberReference name MemberReference arg0 MemberReference Block NULL_BLOCK call	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "match" ElementValuePair frame Literal true ElementValuePair compat MemberReference CompatVersion RUBY1_9 ElementValuePair reads MemberReference BACKREF ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject pattern FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator result MethodInvocation MethodInvocation MemberReference context Literal "match" This callMethod MemberReference pattern ReturnStatement TernaryExpression BinaryOperation && MethodInvocation block isGiven MethodInvocation ! result isNil MethodInvocation block MemberReference context MemberReference result yield MemberReference result	0
MethodDeclaration Modifier public final Annotation Override BasicType boolean equals FormalParameter ReferenceType Object obj ReturnStatement BinaryOperation && BinaryOperation instanceof MemberReference obj ReferenceType BinaryOperation == Cast ReferenceType MemberReference obj MemberReference address	1
MethodDeclaration Modifier public ReferenceType RubyClass ReturnStatement MemberReference	0
MethodDeclaration Modifier public static Annotation Deprecated ReferenceType IRubyObject all_symbols FormalParameter ReferenceType IRubyObject recv ReturnStatement MethodInvocation recv MethodInvocation MethodInvocation all_symbols getRuntime	1
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals Literal "-@" getOperatorCallNode = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType String name StatementExpression MethodInvocation MemberReference context MethodInvocation name intern MemberReference Visibility PUBLIC Literal false Literal true addAccessor	1
MethodDeclaration Modifier private FormalParameter BasicType int offset FormalParameter ReferenceType IRubyObject value AssertStatement BinaryOperation < MemberReference offset MemberReference length BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Setting " MemberReference offset Literal " to " MemberReference value Literal ", " This	0
MethodDeclaration Modifier public FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject value StatementExpression MethodInvocation globalVariables MemberReference name ClassCreator ReferenceType ValueAccessor MemberReference value defineReadonly	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public final Annotation JRubyMethod ReferenceType RubyFixnum arity ReturnStatement MethodInvocation MethodInvocation MethodInvocation newFixnum getRuntime	0
MethodDeclaration Modifier private FormalParameter ReferenceType RubyModule m RaiseException IfStatement BinaryOperation == MethodInvocation MethodInvocation m BlockStatement ThrowStatement MethodInvocation MethodInvocation Literal newArgumentError getRuntime	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "delete" ElementValuePair required Literal 1 ElementValuePair rest Literal true ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType IRubyObject delete FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject args LocalVariableDeclaration ReferenceType RubyString VariableDeclarator str MethodInvocation MethodInvocation context getRuntime StatementExpression MethodInvocation str MemberReference context MemberReference args ReturnStatement MemberReference str	0
MethodDeclaration Modifier public Annotation Deprecated ReferenceType CompiledBlockCallback19 getBlockCallback19 FormalParameter ReferenceType String method FormalParameter ReferenceType Object scriptObject LocalVariableDeclaration ReferenceType Class VariableDeclarator typeClass MethodInvocation scriptObject getClass LocalVariableDeclaration ReferenceType String VariableDeclarator typePathString MethodInvocation MemberReference typeClass p LocalVariableDeclaration ReferenceType String VariableDeclarator mname BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation typeClass getName Literal "BlockCallback$" MemberReference method Literal "xx1" LocalVariableDeclaration ReferenceType String VariableDeclarator mnamePath BinaryOperation + BinaryOperation + BinaryOperation + MemberReference typePathString Literal "BlockCallback$" MemberReference method Literal "xx1" SynchronizedStatement MemberReference classLoader LocalVariableDeclaration ReferenceType Class VariableDeclarator c MethodInvocation MemberReference mname tryClass TryStatement IfStatement BinaryOperation == MemberReference c Literal null BlockStatement LocalVariableDeclaration ReferenceType ClassWriter VariableDeclarator cw MethodInvocation MemberReference mnamePath MemberReference typeClass createBlockCtor19 LocalVariableDeclaration ReferenceType SkinnyMethodAdapter VariableDeclarator mv MethodInvocation MemberReference cw StatementExpression MethodInvocation mv Literal 0 aload StatementExpression MethodInvocation mv MemberReference mnamePath Literal "$scriptObject" MethodInvocation MemberReference typeClass ci getfield StatementExpression MethodInvocation mv Literal 1 aload StatementExpression MethodInvocation mv Literal 2 aload StatementExpression MethodInvocation mv Literal 3 aload StatementExpression MethodInvocation mv Literal 4 aload StatementExpression MethodInvocation mv MemberReference typePathString MemberReference method MethodInvocation ClassReference ReferenceType IRubyObject BinaryOperation + BinaryOperation + Literal "L" MemberReference typePathString Literal ";" ClassReference ReferenceType ThreadContext ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject ClassReference ReferenceType Block sig invokestatic StatementExpression MethodInvocation mv areturn StatementExpression MethodInvocation mv Literal 2 Literal 3 visitMaxs StatementExpression Assignment MemberReference c MethodInvocation MemberReference cw MemberReference mv MemberReference mname endCall = LocalVariableDeclaration ReferenceType CompiledBlockCallback19 VariableDeclarator ic Cast ReferenceType CompiledBlockCallback19 MethodInvocation c MethodInvocation MemberReference scriptObject newInstance ClassReference ReferenceType Object getConstructor ReturnStatement MemberReference ic CatchClause CatchClauseParameter IllegalArgumentException e ThrowStatement MemberReference e CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation e printStackTrace ThrowStatement ClassCreator ReferenceType IllegalArgumentException MethodInvocation e getMessage	1
MethodDeclaration Modifier public StatementExpression MethodInvocation MemberReference SIZE MemberReference	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement Literal	0
MethodDeclaration Modifier private final static ReferenceType ByteList shrink FormalParameter ReferenceType ByteList i2Shrink FormalParameter BasicType int iLength StatementExpression Assignment MemberReference iLength BinaryOperation - MethodInvocation i2Shrink length MemberReference iLength = IfStatement BinaryOperation < MemberReference iLength Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException StatementExpression MethodInvocation i2Shrink MemberReference iLength length ReturnStatement MemberReference i2Shrink	1
MethodDeclaration FormalParameter ReferenceType RubyClass StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ReferenceType IRubyObject size ReturnStatement MethodInvocation MethodInvocation BinaryOperation / BinaryOperation + MethodInvocation value Literal 7 Literal 8 newFixnum getRuntime	0
MethodDeclaration Modifier public final BasicType boolean ReturnStatement BinaryOperation == MemberReference address Literal 0	0
MethodDeclaration Modifier private ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Regex pattern FormalParameter ReferenceType Matcher matcher FormalParameter ReferenceType RubyString repl FormalParameter BasicType int tuFlags LocalVariableDeclaration Modifier final BasicType int VariableDeclarator beg MethodInvocation matcher getBegin LocalVariableDeclaration Modifier final BasicType int VariableDeclarator end MethodInvocation matcher getEnd LocalVariableDeclaration ReferenceType Encoding VariableDeclarator enc MethodInvocation MemberReference repl isCompatibleWith IfStatement BinaryOperation == MemberReference enc Literal null StatementExpression Assignment MemberReference enc MethodInvocation MemberReference context MemberReference repl MemberReference beg MemberReference end = LocalVariableDeclaration Modifier final BasicType int VariableDeclarator plen BinaryOperation - MemberReference end MemberReference beg LocalVariableDeclaration ReferenceType ByteList VariableDeclarator replValue MemberReference repl value IfStatement BinaryOperation > MemberReference replValue realSize MemberReference plen BlockStatement StatementExpression MethodInvocation BinaryOperation - BinaryOperation + MemberReference value realSize MemberReference replValue realSize MemberReference plen BlockStatement StatementExpression MethodInvocation StatementExpression MethodInvocation MemberReference enc associateEncoding LocalVariableDeclaration BasicType int VariableDeclarator cr MethodInvocation getCodeRange IfStatement BinaryOperation && BinaryOperation > MemberReference cr MemberReference CR_UNKNOWN BinaryOperation < MemberReference cr MemberReference CR_BROKEN BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator cr2 MethodInvocation repl getCodeRange IfStatement BinaryOperation || BinaryOperation == MemberReference cr2 MemberReference CR_BROKEN BinaryOperation && BinaryOperation == MemberReference cr MemberReference CR_VALID BinaryOperation == MemberReference cr2 MemberReference CR_7BIT BlockStatement StatementExpression Assignment MemberReference cr MemberReference CR_UNKNOWN = BlockStatement StatementExpression Assignment MemberReference cr MemberReference cr2 = IfStatement BinaryOperation != MemberReference replValue realSize MemberReference plen BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator src BinaryOperation + BinaryOperation + MemberReference value begin MemberReference beg MemberReference plen LocalVariableDeclaration BasicType int VariableDeclarator dst BinaryOperation + BinaryOperation + MemberReference value begin MemberReference beg MemberReference replValue realSize LocalVariableDeclaration BasicType int VariableDeclarator length BinaryOperation - BinaryOperation - MemberReference value realSize MemberReference beg MemberReference plen StatementExpression MethodInvocation System MemberReference value bytes MemberReference src MemberReference value bytes MemberReference dst MemberReference length arraycopy StatementExpression MethodInvocation System MemberReference replValue bytes MemberReference replValue begin MemberReference value bytes BinaryOperation + MemberReference value begin MemberReference beg MemberReference replValue realSize arraycopy StatementExpression Assignment MemberReference value realSize BinaryOperation - MemberReference replValue realSize MemberReference plen += StatementExpression MethodInvocation MemberReference cr setCodeRange ReturnStatement MethodInvocation MemberReference tuFlags infectBy	1
MethodDeclaration Modifier public FormalParameter ReferenceType Node StatementExpression Assignment This MemberReference TernaryExpression BinaryOperation == MemberReference Literal null MemberReference NilImplicitNode NIL MemberReference =	0
MethodDeclaration Modifier public final ReferenceType RubyRegexp FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType String name FormalParameter BasicType int options ReturnStatement MethodInvocation runtimeCache MemberReference runtime Literal 3 MemberReference name MemberReference options	0
MethodDeclaration addDirectly FormalParameter ReferenceType RubyThread rubyThread SynchronizedStatement MemberReference rubyThread LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator oldGroup MethodInvocation rubyThread group IfStatement MethodInvocation ! oldGroup isNil BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator Cast ReferenceType MemberReference oldGroup StatementExpression MethodInvocation MemberReference rubyThread remove StatementExpression MethodInvocation rubyThread This StatementExpression MethodInvocation MemberReference rubyThread add	1
MethodDeclaration Modifier public static copyDataToJavaArray FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType RubyArray rubyArray FormalParameter ReferenceType JavaArray javaArray LocalVariableDeclaration BasicType int VariableDeclarator javaLength Cast BasicType int MethodInvocation javaArray MethodInvocation getLongValue length LocalVariableDeclaration ReferenceType Class VariableDeclarator targetType MethodInvocation javaArray getComponentType LocalVariableDeclaration BasicType int VariableDeclarator rubyLength MethodInvocation rubyArray getLength LocalVariableDeclaration BasicType int VariableDeclarator i Literal 0 ForStatement ForControl BinaryOperation && BinaryOperation < MemberReference i MemberReference rubyLength BinaryOperation < MemberReference i MemberReference javaLength MemberReference ++ i BlockStatement StatementExpression MethodInvocation javaArray MemberReference i MethodInvocation rubyArray MethodInvocation MemberReference targetType toJava MemberReference i entry setWithExceptionHandling	1
MethodDeclaration Modifier static FormalParameter ReferenceType Ruby runtime LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator rb_cUDPSocket MethodInvocation runtime Literal MethodInvocation runtime Literal "IPSocket" fastGetClass MemberReference defineClass StatementExpression MethodInvocation rb_cUDPSocket MethodInvocation runtime MethodInvocation Literal "Constants" fastGetConstant Literal "Socket" fastGetClass includeModule StatementExpression MethodInvocation rb_cUDPSocket ClassReference ReferenceType defineAnnotatedMethods StatementExpression MethodInvocation runtime MethodInvocation Literal MemberReference rb_cUDPSocket fastSetConstant getObject	1
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference scope	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType NodeVisitor iVisitor ReturnStatement MethodInvocation iVisitor This	0
MethodDeclaration Modifier private static BasicType int des_set_key FormalParameter BasicType byte key LocalVariableDeclaration BasicType int VariableDeclarator schedule ArrayCreator BasicType int BinaryOperation * MemberReference Literal 2 LocalVariableDeclaration BasicType int VariableDeclarator c MethodInvocation MemberReference key Literal 0 fourBytesToInt LocalVariableDeclaration BasicType int VariableDeclarator d MethodInvocation MemberReference key Literal 4 fourBytesToInt LocalVariableDeclaration BasicType int VariableDeclarator results ArrayCreator BasicType int Literal 2 StatementExpression MethodInvocation MemberReference d MemberReference c Literal 4 Literal 252645135 MemberReference results PERM_OP StatementExpression Assignment MemberReference d MemberReference ArraySelector Literal 0 results = StatementExpression Assignment MemberReference c MemberReference ArraySelector Literal 1 results = StatementExpression Assignment MemberReference c MethodInvocation MemberReference c Literal - 2 Literal - 859045888 HPERM_OP = StatementExpression Assignment MemberReference d MethodInvocation MemberReference d Literal - 2 Literal - 859045888 HPERM_OP = StatementExpression MethodInvocation MemberReference d MemberReference c Literal 1 Literal 1431655765 MemberReference results PERM_OP StatementExpression Assignment MemberReference d MemberReference ArraySelector Literal 0 results = StatementExpression Assignment MemberReference c MemberReference ArraySelector Literal 1 results = StatementExpression MethodInvocation MemberReference c MemberReference d Literal 8 Literal 16711935 MemberReference results PERM_OP StatementExpression Assignment MemberReference c MemberReference ArraySelector Literal 0 results = StatementExpression Assignment MemberReference d MemberReference ArraySelector Literal 1 results = StatementExpression MethodInvocation MemberReference d MemberReference c Literal 1 Literal 1431655765 MemberReference results PERM_OP StatementExpression Assignment MemberReference d MemberReference ArraySelector Literal 0 results = StatementExpression Assignment MemberReference c MemberReference ArraySelector Literal 1 results = StatementExpression Assignment MemberReference d BinaryOperation | BinaryOperation | BinaryOperation | BinaryOperation << BinaryOperation & MemberReference d Literal 255 Literal 16 BinaryOperation & MemberReference d Literal BinaryOperation >>> BinaryOperation & MemberReference d Literal Literal 16 BinaryOperation >>> BinaryOperation & MemberReference c Literal - Literal 4 = StatementExpression Assignment MemberReference c Literal 268435455 &= LocalVariableDeclaration BasicType int VariableDeclarator s LocalVariableDeclaration BasicType int VariableDeclarator t LocalVariableDeclaration BasicType int VariableDeclarator j Literal 0 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference MemberReference ++ i BlockStatement IfStatement MemberReference ArraySelector MemberReference i BlockStatement StatementExpression Assignment MemberReference c BinaryOperation | BinaryOperation >>> MemberReference c Literal 2 BinaryOperation << MemberReference c Literal 26 = StatementExpression Assignment MemberReference d BinaryOperation | BinaryOperation >>> MemberReference d Literal 2 BinaryOperation << MemberReference d Literal 26 = BlockStatement StatementExpression Assignment MemberReference c BinaryOperation | BinaryOperation >>> MemberReference c Literal 1 BinaryOperation << MemberReference c Literal 27 = StatementExpression Assignment MemberReference d BinaryOperation | BinaryOperation >>> MemberReference d Literal 1 BinaryOperation << MemberReference d Literal 27 = StatementExpression Assignment MemberReference c Literal 268435455 &= StatementExpression Assignment MemberReference d Literal 268435455 &= StatementExpression Assignment MemberReference s BinaryOperation | BinaryOperation | BinaryOperation | MemberReference ArraySelector Literal 0 ArraySelector BinaryOperation & MemberReference c Literal 63 skb MemberReference ArraySelector Literal 1 ArraySelector BinaryOperation | BinaryOperation & BinaryOperation >>> MemberReference c Literal 6 Literal 3 BinaryOperation & BinaryOperation >>> MemberReference c Literal 7 Literal 60 skb MemberReference ArraySelector Literal 2 ArraySelector BinaryOperation | BinaryOperation & BinaryOperation >>> MemberReference c Literal 13 Literal 15 BinaryOperation & BinaryOperation >>> MemberReference c Literal 14 Literal 48 skb MemberReference ArraySelector Literal 3 ArraySelector BinaryOperation | BinaryOperation | BinaryOperation & BinaryOperation >>> MemberReference c Literal 20 Literal 1 BinaryOperation & BinaryOperation >>> MemberReference c Literal 21 Literal 6 BinaryOperation & BinaryOperation >>> MemberReference c Literal 22 Literal 56 skb = StatementExpression Assignment MemberReference t BinaryOperation | BinaryOperation | BinaryOperation | MemberReference ArraySelector Literal 4 ArraySelector BinaryOperation & MemberReference d Literal 63 skb MemberReference ArraySelector Literal 5 ArraySelector BinaryOperation | BinaryOperation & BinaryOperation >>> MemberReference d Literal 7 Literal 3 BinaryOperation & BinaryOperation >>> MemberReference d Literal 8 Literal 60 skb MemberReference ArraySelector Literal 6 ArraySelector BinaryOperation & BinaryOperation >>> MemberReference d Literal 15 Literal 63 skb MemberReference ArraySelector Literal 7 ArraySelector BinaryOperation | BinaryOperation & BinaryOperation >>> MemberReference d Literal 21 Literal 15 BinaryOperation & BinaryOperation >>> MemberReference d Literal 22 Literal 48 skb = StatementExpression Assignment MemberReference ArraySelector MemberReference ++ j schedule BinaryOperation & BinaryOperation | BinaryOperation << MemberReference t Literal 16 BinaryOperation & MemberReference s Literal Literal - 1 = StatementExpression Assignment MemberReference s BinaryOperation | BinaryOperation >>> MemberReference s Literal 16 BinaryOperation & MemberReference t Literal - 65536 = StatementExpression Assignment MemberReference s BinaryOperation | BinaryOperation << MemberReference s Literal 4 BinaryOperation >>> MemberReference s Literal 28 = StatementExpression Assignment MemberReference ArraySelector MemberReference ++ j schedule BinaryOperation & MemberReference s Literal - 1 = ReturnStatement MemberReference schedule	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject arg0 ReturnStatement MethodInvocation MemberReference arg0 Literal 'c'	0
MethodDeclaration Modifier public ReferenceType RaiseException FormalParameter ReferenceType ReferenceType reason FormalParameter ReferenceType IRubyObject exitValue FormalParameter ReferenceType String message ReturnStatement ClassCreator ReferenceType RaiseException ClassCreator ReferenceType This MethodInvocation MemberReference message MemberReference reason MemberReference exitValue Literal true	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType Node childNodes ReturnStatement MethodInvocation MemberReference node createList	0
MethodDeclaration Modifier public final BasicType int indexOf FormalParameter BasicType long offset FormalParameter BasicType byte value LocalVariableDeclaration BasicType int VariableDeclarator off MethodInvocation MemberReference offset index ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference length MemberReference ++ i BlockStatement IfStatement BinaryOperation == MemberReference ArraySelector BinaryOperation + MemberReference off MemberReference i buffer MemberReference value BlockStatement ReturnStatement MemberReference i ReturnStatement Literal - 1	1
MethodDeclaration Modifier public ReferenceType ReturnStatement MemberReference scope	0
MethodDeclaration Modifier private FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject value FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block block FormalParameter ReferenceType Block ReferenceType Type type LocalVariableDeclaration BasicType int VariableDeclarator requiredCount MethodInvocation args getRequiredArgsCount LocalVariableDeclaration BasicType boolean VariableDeclarator isRest BinaryOperation != MethodInvocation args getRestArg Literal - 1 LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator parameters IfStatement BinaryOperation == MemberReference value Literal null BlockStatement StatementExpression Assignment MemberReference parameters MemberReference IRubyObject = IfStatement BinaryOperation && BinaryOperation instanceof MemberReference value ReferenceType RubyArray BinaryOperation || BinaryOperation && MemberReference isRest BinaryOperation > MemberReference requiredCount Literal 0 BinaryOperation && MemberReference ! isRest BinaryOperation > MemberReference requiredCount Literal 1 BlockStatement StatementExpression Assignment MemberReference parameters Cast ReferenceType RubyArray MemberReference value = BlockStatement StatementExpression Assignment MemberReference parameters ArrayCreator ReferenceType IRubyObject ArrayInitializer MemberReference value = IfStatement BinaryOperation instanceof MemberReference args ReferenceType ArgsNoArgNode BlockStatement LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime StatementExpression MethodInvocation args MemberReference context MemberReference runtime MemberReference self MemberReference parameters MemberReference block prepare	1
MethodDeclaration Modifier public final ReferenceType RubyFixnum FormalParameter ReferenceType Ruby runtime FormalParameter BasicType int i FormalParameter BasicType int value ReturnStatement MethodInvocation runtimeCache MemberReference runtime MemberReference i MemberReference value	0
MethodDeclaration Modifier public Annotation Deprecated ReferenceType IRubyObject instance_eval FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType RubyModule VariableDeclarator klazz IfStatement MethodInvocation BlockStatement StatementExpression Assignment MemberReference klazz MethodInvocation context MethodInvocation getRuntime = BlockStatement StatementExpression Assignment MemberReference klazz MethodInvocation = ReturnStatement MethodInvocation MemberReference context MemberReference klazz MemberReference args MemberReference block specificEval	1
MethodDeclaration Modifier public Annotation Override ReferenceType String getSignature IfStatement MethodInvocation MemberReference scope BlockStatement StatementExpression Assignment MemberReference specificArity Literal false = ReturnStatement MethodInvocation MethodInvocation script getClassname Literal 4 BlockStatement StatementExpression Assignment MemberReference specificArity Literal true = ReturnStatement MethodInvocation MethodInvocation script getClassname MethodInvocation scope getRequiredArgs	0
MethodDeclaration Modifier public ReferenceType RubyFixnum newFixnum FormalParameter BasicType long newValue ReturnStatement MethodInvocation MethodInvocation getRuntime MemberReference newValue newFixnum	0
MethodDeclaration Modifier public static Annotation Deprecated ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject recv ReturnStatement MethodInvocation MethodInvocation recv getRuntime	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal "to_a" ElementValuePair optional Literal 1 ElementValuePair frame Literal true ReferenceType IRubyObject to_a FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args LocalVariableDeclaration ReferenceType ArgsFileData VariableDeclarator data MethodInvocation ArgsFileData MemberReference recv getDataFrom LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime IfStatement MethodInvocation ! data MemberReference context next_argv BlockStatement ReturnStatement TernaryExpression MethodInvocation runtime is1_9 MethodInvocation runtime newEmptyArray MethodInvocation runtime getNil IfStatement BinaryOperation instanceof MemberReference data currentFile ReferenceType RubyIO BlockStatement ReturnStatement MethodInvocation data.currentFile MemberReference context Literal "to_a" MemberReference args callMethod LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator ary MethodInvocation runtime newArray LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator line WhileStatement Assignment MemberReference line MethodInvocation MemberReference context MemberReference recv MemberReference args argf_getline = BlockStatement StatementExpression MethodInvocation ary MemberReference line append ReturnStatement MemberReference ary	1
MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule klazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block ReturnStatement MethodInvocation method MemberReference context MemberReference self MemberReference klazz MemberReference name MemberReference args MemberReference block call	0
MethodDeclaration Modifier public static BasicType int FormalParameter BasicType byte bytes FormalParameter BasicType int p FormalParameter BasicType int len ReturnStatement MethodInvocation MemberReference bytes MemberReference p MemberReference len MemberReference ASCIIEncoding INSTANCE	0
MethodDeclaration Modifier private static BasicType boolean FormalParameter BasicType long original FormalParameter BasicType long other FormalParameter BasicType long result ReturnStatement BinaryOperation != BinaryOperation & BinaryOperation & BinaryOperation MemberReference original MemberReference ~ other BinaryOperation MemberReference original MemberReference result MemberReference Literal 0	0
MethodDeclaration Modifier private BasicType boolean isSpace FormalParameter BasicType int str LocalVariableDeclaration BasicType byte VariableDeclarator c IfStatement BinaryOperation || BinaryOperation == MemberReference str MemberReference end BinaryOperation < Assignment MemberReference c MemberReference ArraySelector MemberReference str data = Literal 0 BlockStatement ReturnStatement Literal false ReturnStatement MemberReference ArraySelector MemberReference c space	1
MethodDeclaration Modifier public static ReferenceType RubyClass FormalParameter ReferenceType Ruby runtime LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator MethodInvocation runtime Literal MethodInvocation runtime getObject MemberReference defineClass StatementExpression Assignment MemberReference index MemberReference ClassIndex TIME = StatementExpression MethodInvocation runtime MemberReference setTime StatementExpression MethodInvocation MethodInvocation runtime includeModule StatementExpression MethodInvocation ClassReference ReferenceType RubyTime defineAnnotatedMethods ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Object set FormalParameter BasicType int index FormalParameter ReferenceType Object element ReturnStatement MethodInvocation MemberReference index MethodInvocation JavaUtil MethodInvocation getRuntime MemberReference element convertJavaToUsableRubyObject store	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType NodeVisitor iVisitor ReturnStatement MethodInvocation iVisitor This	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType Node childNodes ReturnStatement MethodInvocation MemberReference nextNode createList	0
MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 FormalParameter ReferenceType IRubyObject arg3 FormalParameter ReferenceType IRubyObject arg4 FormalParameter ReferenceType IRubyObject arg5 FormalParameter ReferenceType IRubyObject arg6 ReturnStatement MethodInvocation body MemberReference context MemberReference arg0 MemberReference arg1 MemberReference arg2 MemberReference arg3 MemberReference arg4 MemberReference arg5 MemberReference arg6 MemberReference MemberReference type call	1
MethodDeclaration Modifier public final ReferenceType IRubyObject substr19 FormalParameter ReferenceType Ruby runtime FormalParameter BasicType int beg FormalParameter BasicType int len IfStatement BinaryOperation < MemberReference len Literal 0 ReturnStatement MethodInvocation runtime getNil LocalVariableDeclaration BasicType int VariableDeclarator length MemberReference value realSize IfStatement BinaryOperation == MemberReference length Literal 0 StatementExpression Assignment MemberReference len Literal 0 = LocalVariableDeclaration ReferenceType Encoding VariableDeclarator enc MemberReference value encoding IfStatement MethodInvocation MemberReference enc singleByteOptimizable BlockStatement IfStatement BinaryOperation > MemberReference beg MemberReference length ReturnStatement MethodInvocation runtime getNil IfStatement BinaryOperation < MemberReference beg Literal 0 BlockStatement StatementExpression Assignment MemberReference beg MemberReference length += IfStatement BinaryOperation < MemberReference beg Literal 0 ReturnStatement MethodInvocation runtime getNil IfStatement BinaryOperation > BinaryOperation + MemberReference beg MemberReference len MemberReference length StatementExpression Assignment MemberReference len BinaryOperation - MemberReference length MemberReference beg = IfStatement BinaryOperation <= MemberReference len Literal 0 StatementExpression Assignment MemberReference len Assignment MemberReference beg Literal 0 = = ReturnStatement MethodInvocation MemberReference runtime MemberReference beg MemberReference len makeShared19 BlockStatement ReturnStatement MethodInvocation MemberReference runtime MemberReference enc MemberReference len MemberReference beg MemberReference length multibyteSubstr19	1
MethodDeclaration Modifier private ReferenceType Node new_call_noargs FormalParameter ReferenceType Node receiver FormalParameter ReferenceType Token name FormalParameter ReferenceType IterNode iter LocalVariableDeclaration ReferenceType ISourcePosition VariableDeclarator position MethodInvocation MemberReference receiver MemberReference name position IfStatement BinaryOperation == MemberReference receiver Literal null StatementExpression Assignment MemberReference receiver MemberReference NilImplicitNode NIL = IfStatement BinaryOperation != MemberReference iter Literal null ReturnStatement ClassCreator ReferenceType MemberReference position MemberReference receiver Cast ReferenceType String MethodInvocation name getValue MemberReference iter ReturnStatement ClassCreator ReferenceType MemberReference position MemberReference receiver Cast ReferenceType String MethodInvocation name getValue	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "reverse!" ReferenceType IRubyObject reverse_bang StatementExpression MethodInvocation modify TryStatement IfStatement BinaryOperation > MemberReference realLength Literal 1 BlockStatement LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator vals MemberReference values LocalVariableDeclaration BasicType int VariableDeclarator p MemberReference begin LocalVariableDeclaration BasicType int VariableDeclarator len MemberReference realLength ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i BinaryOperation >> MemberReference len Literal 1 MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator tmp MemberReference ArraySelector BinaryOperation + MemberReference p MemberReference i vals StatementExpression Assignment MemberReference ArraySelector BinaryOperation + MemberReference p MemberReference i vals MemberReference ArraySelector BinaryOperation - BinaryOperation - BinaryOperation + MemberReference p MemberReference len MemberReference i Literal 1 vals = StatementExpression Assignment MemberReference ArraySelector BinaryOperation - BinaryOperation - BinaryOperation + MemberReference p MemberReference len MemberReference i Literal 1 vals MemberReference tmp = CatchClause CatchClauseParameter ArrayIndexOutOfBoundsException e StatementExpression MethodInvocation concurrentModification ReturnStatement This	1
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal Cast ReferenceType ListNode MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier private ReferenceType Object fastHashFetch FormalParameter ReferenceType String internedName LocalVariableDeclaration ReferenceType VariableTableEntry VariableDeclarator table MemberReference vTable LocalVariableDeclaration ReferenceType Object VariableDeclarator readValue ForStatement ForControl VariableDeclaration ReferenceType VariableTableEntry VariableDeclarator e MemberReference ArraySelector BinaryOperation & MethodInvocation internedName hashCode BinaryOperation - MemberReference table length Literal 1 table BinaryOperation != MemberReference e Literal null Assignment MemberReference e MemberReference e next = BlockStatement IfStatement BinaryOperation == MemberReference internedName MemberReference e name BlockStatement IfStatement BinaryOperation != Assignment MemberReference readValue MemberReference e value = Literal null ReturnStatement MemberReference readValue ReturnStatement MethodInvocation MemberReference e readLocked ReturnStatement Literal null	1
MethodDeclaration Modifier public ReferenceType Iterator iterator ReturnStatement MethodInvocation	0
MethodDeclaration Modifier public ReferenceType Object case248_line964 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support MethodInvocation support MethodInvocation Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals getPosition Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals newSplatNode Cast ReferenceType BlockPassNode MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals arg_blk_pass = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public Annotation Override visit FormalParameter ReferenceType IRubyObject key FormalParameter ReferenceType IRubyObject value StatementExpression MethodInvocation result MemberReference value append	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair meta Literal true ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject receiver ReturnStatement MethodInvocation receiver MethodInvocation MethodInvocation receiver MethodInvocation getThreadService MethodInvocation getRuntime newBoolean getRuntime	0
MethodDeclaration Modifier public ReferenceType IRubyObject searchInternalModuleVariable FormalParameter Modifier final ReferenceType String name ForStatement ForControl VariableDeclaration ReferenceType RubyModule VariableDeclarator module This BinaryOperation != MemberReference module Literal null Assignment MemberReference module MethodInvocation module getSuperClass = BlockStatement LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator value Cast ReferenceType IRubyObject MethodInvocation module MemberReference name getInternalVariable IfStatement BinaryOperation != MemberReference value Literal null ReturnStatement MemberReference value ReturnStatement Literal null	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ReferenceType IRubyObject abs FormalParameter ReferenceType ThreadContext context IfStatement MethodInvocation MethodInvocation isTrue MemberReference context Literal "<" MethodInvocation RubyFixnum MethodInvocation getRuntime zero callMethod BlockStatement ReturnStatement MethodInvocation MemberReference context Literal "-@" callMethod ReturnStatement This	0
MethodDeclaration Modifier public final ReferenceType Type getReturnType ReturnStatement MemberReference returnType	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair frame Literal true ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self LocalVariableDeclaration ReferenceType RubyIO VariableDeclarator io Cast ReferenceType RubyIO MemberReference self LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime TryStatement StatementExpression MethodInvocation io MethodInvocation MethodInvocation context getRuntime checkWritable getOpenFile CatchClause CatchClauseParameter PipeException pe ThrowStatement MethodInvocation runtime newErrnoEPIPEError CatchClause CatchClauseParameter IOException ex ThrowStatement MethodInvocation runtime MemberReference ex newIOErrorFromException CatchClause CatchClauseParameter BadDescriptorException ex ThrowStatement MethodInvocation runtime newErrnoEBADFError CatchClause CatchClauseParameter InvalidValueException e ThrowStatement MethodInvocation runtime newErrnoEINVALError ReturnStatement MethodInvocation JavaUtil MethodInvocation context getRuntime MethodInvocation io convertJavaToUsableRubyObject	1
MethodDeclaration Modifier public ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType DynamicMethod getMethods ReturnStatement MemberReference methods	0
MethodDeclaration Modifier public final BasicType int getSize ReturnStatement MethodInvocation getNativeSize	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "delete" ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType IRubyObject delete FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg LocalVariableDeclaration ReferenceType RubyString VariableDeclarator str MethodInvocation MethodInvocation context getRuntime StatementExpression MethodInvocation str MemberReference context MemberReference arg ReturnStatement MemberReference str	0
MethodDeclaration Modifier private ReferenceType String pretty FormalParameter ReferenceType List list LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator prettyOut ClassCreator ReferenceType StringBuffer ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation list iterator MethodInvocation iter hasNext BlockStatement StatementExpression MethodInvocation prettyOut MethodInvocation iter MethodInvocation toString next append ReturnStatement MethodInvocation prettyOut toString	1
MethodDeclaration Modifier public final ReferenceType IRubyObject fromNative FormalParameter ReferenceType ThreadContext context FormalParameter BasicType long value ReturnStatement MethodInvocation context MethodInvocation MethodInvocation Double MemberReference value newFloat getRuntime	1
MethodDeclaration Modifier public StatementExpression MethodInvocation MethodInvocation MemberReference visitInsn getMethodVisitor	0
MethodDeclaration Modifier public final BasicType int indexOf FormalParameter BasicType long offset FormalParameter BasicType byte value FormalParameter BasicType int ReturnStatement Cast BasicType int MethodInvocation MemberReference address MemberReference value MemberReference indexOf	0
MethodDeclaration Modifier private static BasicType boolean FormalParameter BasicType long value ReturnStatement BinaryOperation && BinaryOperation >= MemberReference value MemberReference Short MIN_VALUE BinaryOperation <= MemberReference value Literal 0xFFFF	1
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType String ReturnStatement MethodInvocation MethodInvocation keySet	0
MethodDeclaration Modifier public final BasicType int intValue FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject parameter IfStatement BinaryOperation instanceof MemberReference parameter ReferenceType Pointer BlockStatement ReturnStatement MethodInvocation Cast ReferenceType Pointer MemberReference parameter getAddress IfStatement BinaryOperation instanceof MemberReference parameter ReferenceType Struct BlockStatement LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator memory Cast ReferenceType Struct MemberReference parameter IfStatement BinaryOperation instanceof MemberReference memory ReferenceType Pointer BlockStatement ReturnStatement MethodInvocation Cast ReferenceType Pointer MemberReference memory getAddress IfStatement BinaryOperation || BinaryOperation == MemberReference memory Literal null MethodInvocation memory isNil BlockStatement ReturnStatement Literal 0 IfStatement MethodInvocation parameter isNil BlockStatement ReturnStatement Literal 0 ThrowStatement MethodInvocation context MethodInvocation Literal "Cannot convert pointer to integer" newArgumentError getRuntime	1
MethodDeclaration Modifier private static BasicType boolean FormalParameter ReferenceType Throwable FormalParameter ReferenceType IRubyObject IfStatement BinaryOperation instanceof MemberReference ReferenceType RubyClass BlockStatement LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator rubyClass Cast ReferenceType RubyClass MemberReference LocalVariableDeclaration ReferenceType JavaClass VariableDeclarator javaClass Cast ReferenceType JavaClass MethodInvocation rubyClass Literal "@java_class" fastGetInstanceVariable IfStatement BinaryOperation != MemberReference javaClass Literal null BlockStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator cls MethodInvocation javaClass javaClass IfStatement MethodInvocation cls MemberReference isInstance BlockStatement ReturnStatement Literal true ReturnStatement Literal false	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 ReturnStatement MethodInvocation RuntimeHelpers MemberReference context MemberReference self Literal MemberReference arg0 MemberReference arg1 MemberReference arg2 invoke	0
MethodDeclaration Modifier public final FormalParameter BasicType int family StatementExpression MethodInvocation Cast BasicType short MemberReference family set	1
MethodDeclaration Modifier private static FormalParameter ReferenceType RubyModule rubySing StatementExpression MethodInvocation rubySing Literal "[]" ClassCreator ReferenceType JavaMethod ReferenceType MemberReference rubySing MemberReference Visibility PUBLIC MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg LocalVariableDeclaration ReferenceType Class VariableDeclarator javaClass MethodInvocation MemberReference self LocalVariableDeclaration BasicType int VariableDeclarator size MethodInvocation RubyFixnum MethodInvocation arg convertToInteger fix2int ReturnStatement MethodInvocation MethodInvocation context getRuntime MethodInvocation Array MemberReference javaClass MemberReference size newInstance javaToRuby MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 LocalVariableDeclaration ReferenceType Class VariableDeclarator javaClass MethodInvocation MemberReference self LocalVariableDeclaration BasicType int VariableDeclarator x MethodInvocation RubyFixnum MethodInvocation arg0 convertToInteger fix2int LocalVariableDeclaration BasicType int VariableDeclarator y MethodInvocation RubyFixnum MethodInvocation arg1 convertToInteger fix2int ReturnStatement MethodInvocation MethodInvocation context getRuntime MethodInvocation Array MemberReference javaClass ArrayCreator BasicType int ArrayInitializer MemberReference x MemberReference y newInstance javaToRuby MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 LocalVariableDeclaration ReferenceType Class VariableDeclarator javaClass MethodInvocation MemberReference self LocalVariableDeclaration BasicType int VariableDeclarator x MethodInvocation RubyFixnum MethodInvocation arg0 convertToInteger fix2int LocalVariableDeclaration BasicType int VariableDeclarator y MethodInvocation RubyFixnum MethodInvocation arg1 convertToInteger fix2int LocalVariableDeclaration BasicType int VariableDeclarator z MethodInvocation RubyFixnum MethodInvocation arg2 convertToInteger fix2int ReturnStatement MethodInvocation MethodInvocation context getRuntime MethodInvocation Array MemberReference javaClass ArrayCreator BasicType int ArrayInitializer MemberReference x MemberReference y MemberReference z newInstance javaToRuby addMethod	0
MethodDeclaration Modifier public StatementExpression Assignment MemberReference status MemberReference Status =	0
MethodDeclaration Modifier static protected write FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject FormalParameter ReferenceType ByteList StatementExpression MethodInvocation MemberReference context Literal MethodInvocation RubyString MethodInvocation context getRuntime MemberReference callMethod	0
MethodDeclaration Modifier private final ReferenceType RubyFixnum to_i FormalParameter ReferenceType Ruby runtime ReturnStatement MethodInvocation runtime MemberReference id newFixnum	1
MethodDeclaration * */ Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair frame Literal true ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject end FormalParameter ReferenceType Block block ReturnStatement MethodInvocation MemberReference context MemberReference end Literal false MemberReference block	0
MethodDeclaration Modifier public Annotation Override assign FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject values FormalParameter ReferenceType Block block LocalVariableDeclaration BasicType int VariableDeclarator valueLength TernaryExpression BinaryOperation == MemberReference values Literal null Literal 0 MemberReference values length SwitchStatement MemberReference valueLength SwitchStatementCase Literal 0 StatementExpression MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference block assign ReturnStatement SwitchStatementCase Literal 1 StatementExpression MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference ArraySelector Literal 0 values MemberReference block assign ReturnStatement SwitchStatementCase Literal 2 StatementExpression MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference ArraySelector Literal 0 values MemberReference ArraySelector Literal 1 values MemberReference block assign ReturnStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation && BinaryOperation < MemberReference i MemberReference preLength BinaryOperation < MemberReference i MemberReference valueLength MemberReference ++ i BlockStatement StatementExpression MethodInvocation pre MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference ArraySelector MemberReference i values MemberReference block Literal false assign MemberReference i get IfStatement BinaryOperation < MemberReference valueLength MemberReference preLength BlockStatement StatementExpression MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference block MemberReference valueLength	1
MethodDeclaration Modifier public StatementExpression MethodInvocation loadSelf	0
MethodDeclaration Modifier public ReferenceType Node getOperatorCallNode FormalParameter ReferenceType Node FormalParameter ReferenceType String operator FormalParameter ReferenceType Node FormalParameter ReferenceType ISourcePosition IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference MethodInvocation MemberReference MemberReference = StatementExpression Assignment MemberReference MethodInvocation MemberReference MemberReference = StatementExpression MethodInvocation MemberReference checkExpression StatementExpression MethodInvocation MemberReference checkExpression ReturnStatement MethodInvocation MethodInvocation getPosition MemberReference MemberReference operator MemberReference	0
MethodDeclaration Modifier private ReferenceType IRubyObject op_equalCommon FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject other LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime IfStatement MethodInvocation ! other Literal "to_str" respondsTo ReturnStatement MethodInvocation runtime getFalse ReturnStatement TernaryExpression MethodInvocation other MethodInvocation isTrue MemberReference context Literal "==" This callMethod MethodInvocation runtime getTrue MethodInvocation runtime getFalse	1
MethodDeclaration Modifier private static BasicType int readEscapedByte FormalParameter ReferenceType Ruby runtime FormalParameter BasicType byte to FormalParameter BasicType int toP FormalParameter BasicType byte bytes FormalParameter BasicType int p FormalParameter BasicType int end FormalParameter ReferenceType ByteList str FormalParameter ReferenceType ErrorMode mode IfStatement BinaryOperation || BinaryOperation == MemberReference p MemberReference end BinaryOperation != MemberReference ArraySelector MemberReference ++ p bytes Cast BasicType byte Literal '\\' StatementExpression MethodInvocation MemberReference runtime MemberReference str Literal "too short escaped multibyte character" MemberReference mode raisePreprocessError LocalVariableDeclaration BasicType boolean VariableDeclarator metaPrefix Literal false VariableDeclarator ctrlPrefix Literal false LocalVariableDeclaration BasicType int VariableDeclarator code Literal 0 WhileStatement Literal true BlockStatement IfStatement BinaryOperation == MemberReference p MemberReference end StatementExpression MethodInvocation MemberReference runtime MemberReference str Literal "too short escape sequence" MemberReference mode raisePreprocessError SwitchStatement MemberReference ArraySelector MemberReference ++ p bytes SwitchStatementCase Literal '\\' StatementExpression Assignment MemberReference code Literal '\\' = BreakStatement SwitchStatementCase Literal 'n' StatementExpression Assignment MemberReference code Literal '\n' = BreakStatement SwitchStatementCase Literal 't' StatementExpression Assignment MemberReference code Literal '\t' = BreakStatement SwitchStatementCase Literal 'r' StatementExpression Assignment MemberReference code Literal '\r' = BreakStatement SwitchStatementCase Literal 'f' StatementExpression Assignment MemberReference code Literal '\f' = BreakStatement SwitchStatementCase Literal 'v' StatementExpression Assignment MemberReference code Literal '\013' = BreakStatement SwitchStatementCase Literal 'a' StatementExpression Assignment MemberReference code Literal '\007' = BreakStatement SwitchStatementCase Literal 'e' StatementExpression Assignment MemberReference code Literal '\033' = BreakStatement SwitchStatementCase Literal '0' Literal '1' Literal '2' Literal '3' Literal '4' Literal '5' Literal '6' Literal '7' StatementExpression MemberReference -- p LocalVariableDeclaration BasicType int VariableDeclarator olen TernaryExpression BinaryOperation < MemberReference end BinaryOperation + MemberReference p Literal 3 BinaryOperation - MemberReference end MemberReference p Literal 3 StatementExpression Assignment MemberReference code MethodInvocation StringSupport MemberReference bytes MemberReference p MemberReference olen = StatementExpression Assignment MemberReference p MethodInvocation StringSupport MemberReference bytes MemberReference p MemberReference olen += BreakStatement SwitchStatementCase Literal 'x' LocalVariableDeclaration BasicType int VariableDeclarator hlen TernaryExpression BinaryOperation < MemberReference end BinaryOperation + MemberReference p Literal 2 BinaryOperation - MemberReference end MemberReference p Literal 2 StatementExpression Assignment MemberReference code MethodInvocation StringSupport MemberReference bytes MemberReference p MemberReference hlen = LocalVariableDeclaration BasicType int VariableDeclarator len MethodInvocation StringSupport MemberReference bytes MemberReference p MemberReference hlen IfStatement BinaryOperation < MemberReference len Literal 1 StatementExpression MethodInvocation MemberReference runtime MemberReference str Literal "invalid escape" MemberReference mode raisePreprocessError StatementExpression Assignment MemberReference p MemberReference len += BreakStatement SwitchStatementCase Literal 'M' IfStatement MemberReference metaPrefix StatementExpression MethodInvocation MemberReference runtime MemberReference str Literal "duplicate meta escape" MemberReference mode raisePreprocessError StatementExpression Assignment MemberReference metaPrefix Literal true = IfStatement BinaryOperation && BinaryOperation && BinaryOperation < BinaryOperation + MemberReference p Literal 1 MemberReference end BinaryOperation == MemberReference ArraySelector MemberReference ++ p bytes Cast BasicType byte Literal '-' BinaryOperation == BinaryOperation & MemberReference ArraySelector MemberReference p bytes Literal 0x80 Literal 0 BlockStatement IfStatement BinaryOperation == MemberReference ArraySelector MemberReference p bytes Cast BasicType byte Literal '\\' BlockStatement StatementExpression MemberReference ++ p ContinueStatement BlockStatement StatementExpression Assignment MemberReference code BinaryOperation & MemberReference ArraySelector MemberReference ++ p bytes Literal 0xff = BreakStatement StatementExpression MethodInvocation MemberReference runtime MemberReference str Literal "too short meta escape" MemberReference mode raisePreprocessError SwitchStatementCase Literal 'C' IfStatement BinaryOperation || BinaryOperation == MemberReference p MemberReference end BinaryOperation != MemberReference ArraySelector MemberReference ++ p bytes Cast BasicType byte Literal '-' StatementExpression MethodInvocation MemberReference runtime MemberReference str Literal "too short escape" MemberReference mode raisePreprocessError SwitchStatementCase Literal 'c' IfStatement MemberReference ctrlPrefix StatementExpression MethodInvocation MemberReference runtime MemberReference str Literal "duplicate escape" MemberReference mode raisePreprocessError StatementExpression Assignment MemberReference ctrlPrefix Literal true = IfStatement BinaryOperation && BinaryOperation < MemberReference p MemberReference end BinaryOperation == BinaryOperation & MemberReference ArraySelector MemberReference p bytes Literal 0x80 Literal 0 BlockStatement IfStatement BinaryOperation == MemberReference ArraySelector MemberReference p bytes Cast BasicType byte Literal '\\' BlockStatement StatementExpression MemberReference ++ p ContinueStatement BlockStatement StatementExpression Assignment MemberReference code BinaryOperation & MemberReference ArraySelector MemberReference ++ p bytes Literal 0xff = BreakStatement StatementExpression MethodInvocation MemberReference runtime MemberReference str Literal "too short escape" MemberReference mode raisePreprocessError SwitchStatementCase StatementExpression MethodInvocation MemberReference runtime MemberReference str Literal "unexpected escape sequence" MemberReference mode raisePreprocessError IfStatement BinaryOperation || BinaryOperation < MemberReference code Literal 0 BinaryOperation > MemberReference code Literal 0xff StatementExpression MethodInvocation MemberReference runtime MemberReference str Literal "invalid escape MemberReference mode raisePreprocessError IfStatement MemberReference ctrlPrefix StatementExpression Assignment MemberReference code Literal &= IfStatement MemberReference metaPrefix StatementExpression Assignment MemberReference code Literal 0x80 |= StatementExpression Assignment MemberReference ArraySelector MemberReference toP to Cast BasicType byte MemberReference code = ReturnStatement MemberReference p	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "[]=" ElementValuePair backtrace Literal true ReferenceType IRubyObject op_aset FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject index FormalParameter ReferenceType IRubyObject value LocalVariableDeclaration ReferenceType Object VariableDeclarator converted MethodInvocation value MethodInvocation MethodInvocation getComponentType getJavaArray toJava StatementExpression MethodInvocation MethodInvocation Cast BasicType int MethodInvocation index MethodInvocation getLongValue convertToInteger MemberReference converted setWithExceptionHandling getJavaArray ReturnStatement MemberReference value	1
MethodDeclaration Modifier public ReferenceType RubyModule ReturnStatement MemberReference	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block IfStatement BinaryOperation == MemberReference scope Literal null BlockStatement StatementExpression Assignment MemberReference scope MethodInvocation DynamicScope MemberReference staticScope = LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation scope StatementExpression MethodInvocation context MemberReference scope IfStatement BinaryOperation == MethodInvocation getModule Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation runtime getObject TryStatement ReturnStatement MethodInvocation bodyNode MemberReference runtime MemberReference context MemberReference self MemberReference StatementExpression MethodInvocation context	0
MethodDeclaration Modifier protected ReferenceType LoadServiceResource tryResourceFromCWD FormalParameter ReferenceType SearchState state FormalParameter ReferenceType String baseName FormalParameter ReferenceType SuffixType suffixType RaiseException LocalVariableDeclaration ReferenceType LoadServiceResource VariableDeclarator foundResource Literal null ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator suffix MethodInvocation suffixType BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator namePlusSuffix BinaryOperation + MemberReference baseName MemberReference suffix TryStatement LocalVariableDeclaration ReferenceType JRubyFile VariableDeclarator file MethodInvocation JRubyFile MethodInvocation runtime getCurrentDirectory MethodInvocation RubyFile MethodInvocation runtime getCurrentContext MemberReference namePlusSuffix expandUserPath create StatementExpression MethodInvocation Literal MethodInvocation file toString debugLogTry IfStatement BinaryOperation && BinaryOperation && MethodInvocation file isFile MethodInvocation file isAbsolute MethodInvocation file canRead BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator absolute Literal true LocalVariableDeclaration ReferenceType String VariableDeclarator s MemberReference namePlusSuffix IfStatement MethodInvocation ! namePlusSuffix Literal "./" startsWith BlockStatement StatementExpression Assignment MemberReference s BinaryOperation + Literal "./" MemberReference s = StatementExpression Assignment MemberReference foundResource ClassCreator ReferenceType LoadServiceResource MemberReference file MemberReference s MemberReference absolute = StatementExpression MethodInvocation MemberReference foundResource debugLogFound StatementExpression Assignment MemberReference state loadName MemberReference namePlusSuffix = BreakStatement CatchClause CatchClauseParameter IllegalArgumentException CatchClause CatchClauseParameter SecurityException secEx ReturnStatement MemberReference foundResource	1
MethodDeclaration Modifier public ReferenceType Object case109_line699 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType NodeVisitor iVisitor ReturnStatement MethodInvocation iVisitor This	0
MethodDeclaration Modifier public ReferenceType RubyClass defineClassUnder FormalParameter ReferenceType RubyModule pkg FormalParameter ReferenceType String name FormalParameter ReferenceType RubyClass superClazz IfStatement BinaryOperation != MemberReference superClazz Literal null BlockStatement ReturnStatement Literal null LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator packageName IfStatement BinaryOperation == Assignment MemberReference packageName MethodInvocation pkg MethodInvocation Literal fastGetInstanceVariable getInstanceVariables = Literal null BlockStatement ReturnStatement Literal null LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation pkg getRuntime ReturnStatement Cast ReferenceType RubyClass MethodInvocation MethodInvocation runtime MethodInvocation getJavaUtilitiesModule getJavaSupport MethodInvocation JavaClass MemberReference runtime BinaryOperation + MethodInvocation packageName asJavaString MemberReference name forNameVerbose get_proxy_class	1
MethodDeclaration Modifier public rescue FormalParameter ReferenceType BranchCallback FormalParameter ReferenceType Class exception FormalParameter ReferenceType BranchCallback FormalParameter ReferenceType Class ret LocalVariableDeclaration ReferenceType String VariableDeclarator mname MethodInvocation LocalVariableDeclaration ReferenceType SkinnyMethodAdapter VariableDeclarator mv ClassCreator ReferenceType SkinnyMethodAdapter MethodInvocation script MethodInvocation BinaryOperation | BinaryOperation | MemberReference ACC_PUBLIC MemberReference ACC_SYNTHETIC MemberReference ACC_STATIC MemberReference mname MethodInvocation MemberReference ret BinaryOperation + BinaryOperation + Literal "L" MethodInvocation script getClassname Literal ";" ClassReference ReferenceType ThreadContext ClassReference ReferenceType IRubyObject ClassReference ReferenceType Block sig Literal null Literal null visitMethod getClassVisitor LocalVariableDeclaration ReferenceType SkinnyMethodAdapter VariableDeclarator old_method Literal null LocalVariableDeclaration ReferenceType SkinnyMethodAdapter VariableDeclarator var_old_method Literal null LocalVariableDeclaration ReferenceType SkinnyMethodAdapter VariableDeclarator inv_old_method Literal null LocalVariableDeclaration ReferenceType Label VariableDeclarator afterMethodBody ClassCreator ReferenceType Label LocalVariableDeclaration ReferenceType Label VariableDeclarator catchRetry ClassCreator ReferenceType Label LocalVariableDeclaration ReferenceType Label VariableDeclarator catchRaised ClassCreator ReferenceType Label LocalVariableDeclaration ReferenceType Label VariableDeclarator catchJumps ClassCreator ReferenceType Label LocalVariableDeclaration ReferenceType Label VariableDeclarator exitRescue ClassCreator ReferenceType Label LocalVariableDeclaration BasicType boolean VariableDeclarator oldWithinProtection MemberReference StatementExpression Assignment MemberReference Literal true = LocalVariableDeclaration ReferenceType Label VariableDeclarator oldLoopLabels MemberReference currentLoopLabels StatementExpression Assignment MemberReference currentLoopLabels Literal null = LocalVariableDeclaration BasicType int VariableDeclarator oldArgCount MemberReference StatementExpression Assignment MemberReference Literal 0 = TryStatement StatementExpression Assignment MemberReference old_method This MemberReference method = StatementExpression Assignment MemberReference var_old_method MethodInvocation MethodInvocation getVariableCompiler = StatementExpression Assignment MemberReference inv_old_method MethodInvocation MethodInvocation getInvocationCompiler = StatementExpression Assignment This MemberReference method MemberReference mv = StatementExpression MethodInvocation MethodInvocation MemberReference mv setMethodAdapter getVariableCompiler StatementExpression MethodInvocation MethodInvocation MemberReference mv setMethodAdapter getInvocationCompiler StatementExpression MethodInvocation mv start StatementExpression MethodInvocation mv MemberReference THREADCONTEXT_INDEX aload StatementExpression MethodInvocation mv MethodInvocation ClassReference ReferenceType ThreadContext p Literal "getRuntime" MethodInvocation ClassReference ReferenceType Ruby sig invokevirtual StatementExpression MethodInvocation mv MethodInvocation astore StatementExpression MethodInvocation loadThreadContext StatementExpression MethodInvocation Literal "getErrorInfo" MethodInvocation ClassReference ReferenceType IRubyObject sig StatementExpression MethodInvocation mv MethodInvocation getPreviousExceptionIndex astore StatementExpression MethodInvocation StatementExpression MethodInvocation mv MethodInvocation ClassReference ReferenceType Ruby p Literal MethodInvocation ClassReference ReferenceType IRubyObject sig invokevirtual StatementExpression MethodInvocation mv MethodInvocation astore StatementExpression MethodInvocation mv MemberReference THREADCONTEXT_INDEX aload StatementExpression MethodInvocation mv MethodInvocation ClassReference ReferenceType ThreadContext p Literal "getCurrentScope" MethodInvocation ClassReference ReferenceType DynamicScope sig invokevirtual StatementExpression MethodInvocation mv MethodInvocation getDynamicScopeIndex astore IfStatement BinaryOperation > MethodInvocation scope getNumberOfVariables Literal 4 BlockStatement StatementExpression MethodInvocation mv MethodInvocation getDynamicScopeIndex aload StatementExpression MethodInvocation mv MethodInvocation ClassReference ReferenceType DynamicScope p Literal "getValues" MethodInvocation ClassReference ReferenceType IRubyObject sig invokevirtual StatementExpression MethodInvocation mv MethodInvocation getVarsArrayIndex astore LocalVariableDeclaration ReferenceType Label VariableDeclarator beforeBody ClassCreator ReferenceType Label LocalVariableDeclaration ReferenceType Label VariableDeclarator afterBody ClassCreator ReferenceType Label LocalVariableDeclaration ReferenceType Label VariableDeclarator catchBlock ClassCreator ReferenceType Label StatementExpression MethodInvocation mv MemberReference beforeBody MemberReference afterBody MemberReference catchBlock MethodInvocation MemberReference exception p trycatch StatementExpression MethodInvocation mv MemberReference beforeBody label StatementExpression MethodInvocation This branch StatementExpression MethodInvocation mv MemberReference afterBody label StatementExpression MethodInvocation mv MemberReference exitRescue go_to StatementExpression MethodInvocation mv MemberReference catchBlock label StatementExpression MethodInvocation mv MethodInvocation astore StatementExpression MethodInvocation This branch StatementExpression MethodInvocation mv MemberReference afterMethodBody label StatementExpression MethodInvocation mv MemberReference exitRescue go_to StatementExpression MethodInvocation mv MemberReference catchBlock MemberReference afterMethodBody MemberReference catchRetry MethodInvocation ClassReference JumpException ReferenceType p trycatch StatementExpression MethodInvocation mv MemberReference catchRetry label StatementExpression MethodInvocation mv pop StatementExpression MethodInvocation mv MemberReference beforeBody go_to StatementExpression MethodInvocation mv MemberReference beforeBody MemberReference afterMethodBody MemberReference catchRaised MethodInvocation ClassReference ReferenceType RaiseException p trycatch StatementExpression MethodInvocation mv MemberReference catchRaised label StatementExpression MethodInvocation mv athrow StatementExpression MethodInvocation mv MemberReference beforeBody MemberReference afterMethodBody MemberReference catchJumps MethodInvocation ClassReference ReferenceType JumpException p trycatch StatementExpression MethodInvocation mv MemberReference catchJumps label StatementExpression MethodInvocation loadThreadContext StatementExpression MethodInvocation method MethodInvocation getPreviousExceptionIndex aload StatementExpression MethodInvocation Literal "setErrorInfo" MethodInvocation ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject sig StatementExpression MethodInvocation method pop StatementExpression MethodInvocation mv athrow StatementExpression MethodInvocation mv MemberReference exitRescue label StatementExpression MethodInvocation loadThreadContext StatementExpression MethodInvocation method MethodInvocation getPreviousExceptionIndex aload StatementExpression MethodInvocation Literal "setErrorInfo" MethodInvocation ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject sig StatementExpression MethodInvocation method pop StatementExpression MethodInvocation mv areturn StatementExpression MethodInvocation mv end StatementExpression Assignment MemberReference MemberReference oldWithinProtection = StatementExpression Assignment This MemberReference method MemberReference old_method = StatementExpression MethodInvocation MethodInvocation MemberReference var_old_method setMethodAdapter getVariableCompiler StatementExpression MethodInvocation MethodInvocation MemberReference inv_old_method setMethodAdapter getInvocationCompiler StatementExpression Assignment MemberReference currentLoopLabels MemberReference oldLoopLabels = StatementExpression Assignment MemberReference MemberReference oldArgCount = StatementExpression MethodInvocation method MemberReference THIS aload StatementExpression MethodInvocation loadThreadContext StatementExpression MethodInvocation loadSelf IfStatement BinaryOperation instanceof This ReferenceType BlockStatement StatementExpression MethodInvocation pushNull BlockStatement StatementExpression MethodInvocation StatementExpression MethodInvocation method MethodInvocation script getClassname MemberReference mname MethodInvocation MemberReference ret BinaryOperation + BinaryOperation + Literal "L" MethodInvocation script getClassname Literal ";" ClassReference ReferenceType ThreadContext ClassReference ReferenceType IRubyObject ClassReference ReferenceType Block sig invokestatic	1
MethodDeclaration BasicType boolean isPublic ReturnStatement BinaryOperation == MemberReference visibility MemberReference Visibility PUBLIC	0
MethodDeclaration Modifier public ReferenceType DynamicMethod dup TryStatement LocalVariableDeclaration ReferenceType JavaMethod VariableDeclarator msm Cast ReferenceType JavaMethod MethodInvocation clone ReturnStatement MemberReference msm CatchClause CatchClauseParameter CloneNotSupportedException cnse ReturnStatement Literal null	1
MethodDeclaration Modifier private static ReferenceType IRubyObject cycleCommon FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter BasicType long nv FormalParameter Modifier final ReferenceType Block block LocalVariableDeclaration Modifier final ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration Modifier final ReferenceType RubyArray VariableDeclarator result MethodInvocation runtime newArray StatementExpression MethodInvocation MemberReference runtime MemberReference context MemberReference self ClassCreator ReferenceType BlockCallback MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext ctx FormalParameter ReferenceType IRubyObject largs FormalParameter ReferenceType Block blk LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator larg MethodInvocation MemberReference runtime MemberReference largs checkArgs SynchronizedStatement MemberReference result StatementExpression MethodInvocation result MemberReference larg append StatementExpression MethodInvocation block MemberReference ctx MemberReference larg yield ReturnStatement MethodInvocation runtime getNil callEach LocalVariableDeclaration BasicType int VariableDeclarator len MethodInvocation result size IfStatement BinaryOperation == MemberReference len Literal 0 ReturnStatement MethodInvocation runtime getNil WhileStatement BinaryOperation || BinaryOperation < MemberReference nv Literal 0 BinaryOperation < Literal 0 MemberReference -- nv BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference len MemberReference ++ i BlockStatement StatementExpression MethodInvocation block MemberReference context MethodInvocation result MemberReference i eltInternal yield ReturnStatement MethodInvocation runtime getNil	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "readline" ElementValuePair module Literal true ElementValuePair visibility MemberReference Visibility PRIVATE ReferenceType IRubyObject s_readline FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject prompt IOException ReturnStatement MethodInvocation MemberReference recv MemberReference prompt MethodInvocation recv MethodInvocation getFalse getRuntime s_readline	1
MethodDeclaration Modifier public StatementExpression MethodInvocation MethodInvocation MemberReference visitInsn getMethodVisitor	0
MethodDeclaration Modifier public ReferenceType Object case326_line1244 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals MemberReference NilImplicitNode NIL assignable = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier private static exit FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType IRubyObject args FormalParameter BasicType boolean StatementExpression MethodInvocation runtime Literal 4 secure LocalVariableDeclaration BasicType int VariableDeclarator status Literal 1 IfStatement BinaryOperation > MemberReference args length Literal 0 BlockStatement LocalVariableDeclaration ReferenceType RubyObject VariableDeclarator argument Cast ReferenceType RubyObject MemberReference ArraySelector Literal 0 args IfStatement BinaryOperation instanceof MemberReference argument ReferenceType RubyFixnum BlockStatement StatementExpression Assignment MemberReference status MethodInvocation RubyNumeric MemberReference argument fix2int = BlockStatement StatementExpression Assignment MemberReference status TernaryExpression MethodInvocation argument Literal 1 Literal 0 = IfStatement MemberReference BlockStatement ThrowStatement ClassCreator ReferenceType MainExitException MemberReference status Literal true BlockStatement ThrowStatement MethodInvocation runtime MemberReference status	0
MethodDeclaration Modifier public ReferenceType Node new_opElementAsgnNode FormalParameter ReferenceType ISourcePosition position FormalParameter ReferenceType Node FormalParameter ReferenceType String operatorName FormalParameter ReferenceType Node argsNode FormalParameter ReferenceType Node IfStatement BinaryOperation instanceof MemberReference argsNode ReferenceType ArrayNode BlockStatement LocalVariableDeclaration ReferenceType ArrayNode VariableDeclarator array Cast ReferenceType ArrayNode MemberReference argsNode IfStatement BinaryOperation == MethodInvocation array size Literal 1 BlockStatement IfStatement MethodInvocation operatorName Literal "||" equals BlockStatement ReturnStatement ClassCreator ReferenceType MemberReference position MemberReference MemberReference operatorName MemberReference array MemberReference IfStatement MethodInvocation operatorName Literal "&&" equals BlockStatement ReturnStatement ClassCreator ReferenceType MemberReference position MemberReference MemberReference operatorName MemberReference array MemberReference BlockStatement ReturnStatement ClassCreator ReferenceType MemberReference position MemberReference MemberReference operatorName MemberReference array MemberReference ReturnStatement ClassCreator ReferenceType OpElementAsgnNode MemberReference position MemberReference MemberReference operatorName MemberReference argsNode MemberReference	1
MethodDeclaration Modifier public FormalParameter ReferenceType String name FormalParameter ReferenceType BranchCallback FormalParameter ReferenceType BranchCallback StatementExpression MethodInvocation method MemberReference name ldc StatementExpression MethodInvocation method MethodInvocation ClassReference ReferenceType RubyModule p Literal MethodInvocation ClassReference BasicType boolean MethodInvocation ClassReference ReferenceType String params sig invokevirtual LocalVariableDeclaration ReferenceType Label VariableDeclarator ClassCreator ReferenceType Label LocalVariableDeclaration ReferenceType Label VariableDeclarator ClassCreator ReferenceType Label StatementExpression MethodInvocation method MemberReference StatementExpression MethodInvocation This branch StatementExpression MethodInvocation method MemberReference go_to StatementExpression MethodInvocation method MemberReference label StatementExpression MethodInvocation This branch StatementExpression MethodInvocation method MemberReference label	0
MethodDeclaration Modifier public BasicType int ReturnStatement MemberReference	0
MethodDeclaration Modifier final static ReferenceType RubyMatchData FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType RubyString str FormalParameter ReferenceType DynamicScope scope FormalParameter ReferenceType Matcher matcher FormalParameter ReferenceType Regex pattern LocalVariableDeclaration ReferenceType RubyMatchData VariableDeclarator match MethodInvocation MemberReference context MemberReference str MemberReference scope MemberReference matcher MemberReference pattern StatementExpression Assignment MemberReference match Literal false = ReturnStatement MemberReference match	0
MethodDeclaration Modifier public compileSplat FormalParameter ReferenceType Node node FormalParameter ReferenceType BodyCompiler context FormalParameter BasicType boolean expr LocalVariableDeclaration ReferenceType SplatNode VariableDeclarator splatNode Cast ReferenceType SplatNode MemberReference node StatementExpression MethodInvocation MethodInvocation splatNode getValue MemberReference context Literal true compile StatementExpression MethodInvocation context splatCurrentValue IfStatement MemberReference ! expr StatementExpression MethodInvocation context consumeCurrentValue	1
MethodDeclaration install FormalParameter Modifier final ReferenceType RubyModule proxy IfStatement BinaryOperation == MethodInvocation proxy MethodInvocation field getName getConstantAt Literal null BlockStatement IfStatement MethodInvocation ! Ruby isSecurityRestricted BlockStatement TryStatement StatementExpression MethodInvocation field Literal true setAccessible CatchClause CatchClauseParameter SecurityException e TryStatement StatementExpression MethodInvocation proxy MethodInvocation field getName MethodInvocation JavaUtil MethodInvocation proxy getRuntime MethodInvocation field Literal null get convertJavaToUsableRubyObject setConstant CatchClause CatchClauseParameter IllegalAccessException iae ThrowStatement MethodInvocation proxy MethodInvocation BinaryOperation + Literal "illegal access on setting variable: " MethodInvocation iae getMessage newTypeError getRuntime	1
MethodDeclaration Modifier public Annotation Override BasicType boolean ReturnStatement MethodInvocation MethodInvocation finished	0
MethodDeclaration Modifier public StatementExpression MethodInvocation loadThreadContext StatementExpression MethodInvocation Literal MethodInvocation ClassReference JumpException ReferenceType ClassReference ReferenceType IRubyObject ClassReference ReferenceType ThreadContext sig invokeUtilityMethod StatementExpression MethodInvocation method athrow	0
MethodDeclaration Modifier public static FormalParameter ReferenceType Ruby runtime LocalVariableDeclaration ReferenceType VariableDeclarator self ClassCreator ReferenceType MemberReference runtime StatementExpression MethodInvocation runtime MethodInvocation MemberReference self StatementExpression MethodInvocation runtime Literal MemberReference self StatementExpression MethodInvocation self MethodInvocation ClassReference ReferenceType defineAnnotatedMethods getMetaClass	0
MethodDeclaration Modifier public ReferenceType Operand FormalParameter ReferenceType BeginNode FormalParameter ReferenceType IR_Scope s ReturnStatement MethodInvocation MethodInvocation getBodyNode MemberReference s build	0
MethodDeclaration Modifier public Annotation Override ReferenceType List TypeArgument ReferenceType Node childNodes ReturnStatement MethodInvocation Node MethodInvocation getVarNode MethodInvocation getBodyNode MemberReference createList	0
MethodDeclaration Modifier private ReferenceType RaiseException FormalParameter ReferenceType String message LocalVariableDeclaration ReferenceType RubyException VariableDeclarator exception Cast ReferenceType RubyException MethodInvocation MethodInvocation Literal getClass MethodInvocation MethodInvocation MethodInvocation getCurrentContext getRuntime ArrayCreator ReferenceType IRubyObject ArrayInitializer MethodInvocation MethodInvocation MemberReference message newString getRuntime MemberReference Block NULL_BLOCK newInstance getRuntime ReturnStatement ClassCreator ReferenceType RaiseException MemberReference exception	0
MethodDeclaration Modifier public ReferenceType IRubyObject group FormalParameter BasicType long n ReturnStatement MethodInvocation RubyRegexp Cast BasicType int MemberReference n This nth_match	0
MethodDeclaration Modifier static ReferenceType Regex preparePattern FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType Regex pattern FormalParameter ReferenceType RubyString str IfStatement BinaryOperation == MethodInvocation str scanForCodeRange MemberReference StringSupport CR_BROKEN BlockStatement ThrowStatement MethodInvocation runtime BinaryOperation + Literal "invalid byte in " MethodInvocation str getEncoding newArgumentError LocalVariableDeclaration ReferenceType Encoding VariableDeclarator enc MethodInvocation str getEncoding IfStatement MethodInvocation ! enc isAsciiCompatible BlockStatement IfStatement BinaryOperation != MemberReference enc MethodInvocation pattern getEncoding StatementExpression MethodInvocation MemberReference runtime MemberReference pattern MemberReference enc IfStatement BinaryOperation == MemberReference enc MethodInvocation pattern getEncoding ReturnStatement MemberReference pattern ReturnStatement MethodInvocation MemberReference runtime Cast ReferenceType ByteList MethodInvocation pattern getUserObject MemberReference enc MethodInvocation pattern MemberReference ErrorMode PREPROCESS getPreprocessedRegexpFromCache	1
MethodDeclaration Modifier private FormalParameter ReferenceType IRubyObject val IOException LocalVariableDeclaration ReferenceType Channel VariableDeclarator socketChannel MethodInvocation openFile MethodInvocation getDescriptor MethodInvocation getChannel getMainStream IfStatement BinaryOperation instanceof MemberReference socketChannel ReferenceType SocketChannel BlockStatement StatementExpression MethodInvocation MethodInvocation MethodInvocation MemberReference val asBoolean asSocket	1
MethodDeclaration Modifier synchronized FormalParameter ReferenceType Ruby runtime IfStatement MemberReference ! initialized BlockStatement IfStatement BinaryOperation != MemberReference ctors Literal null BlockStatement IfStatement BinaryOperation == MemberReference ctors length Literal 1 BlockStatement StatementExpression Assignment MemberReference javaCallable MethodInvocation JavaConstructor MemberReference runtime MemberReference ArraySelector Literal 0 ctors create = BlockStatement LocalVariableDeclaration ReferenceType Map VariableDeclarator methodsMap ClassCreator ReferenceType HashMap LocalVariableDeclaration BasicType int VariableDeclarator maxArity Literal 0 ForStatement EnhancedForControl VariableDeclaration ReferenceType Constructor VariableDeclarator ctor MemberReference ctors BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator arity MethodInvocation ctor MemberReference length getParameterTypes StatementExpression Assignment MemberReference maxArity MethodInvocation Math MemberReference arity MemberReference maxArity max = LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType JavaConstructor VariableDeclarator methodsForArity Cast ReferenceType ArrayList TypeArgument ReferenceType JavaConstructor MethodInvocation methodsMap MemberReference arity get IfStatement BinaryOperation == MemberReference methodsForArity Literal null BlockStatement StatementExpression Assignment MemberReference methodsForArity ClassCreator ReferenceType ArrayList TypeArgument ReferenceType JavaConstructor = StatementExpression MethodInvocation methodsMap MemberReference arity MemberReference methodsForArity put StatementExpression MethodInvocation methodsForArity MethodInvocation JavaConstructor MemberReference runtime MemberReference ctor create add StatementExpression Assignment MemberReference javaCallables ArrayCreator ReferenceType JavaConstructor BinaryOperation + MemberReference maxArity Literal 1 = ForStatement ForControl VariableDeclaration ReferenceType Iterator TypeArgument ReferenceType Map ReferenceType Entry VariableDeclarator iter MethodInvocation methodsMap MethodInvocation iterator entrySet MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType Map ReferenceType Entry VariableDeclarator entry MethodInvocation iter next LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType JavaConstructor VariableDeclarator ctorsForArity Cast ReferenceType List TypeArgument ReferenceType JavaConstructor MethodInvocation entry getValue LocalVariableDeclaration ReferenceType JavaConstructor VariableDeclarator methodsArray MethodInvocation ctorsForArity ArrayCreator ReferenceType JavaConstructor MethodInvocation ctorsForArity size toArray StatementExpression Assignment MemberReference ArraySelector Cast ReferenceType Integer MethodInvocation entry getKey javaCallables MemberReference methodsArray = StatementExpression Assignment MemberReference ctors Literal null = StatementExpression Assignment MemberReference cache ClassCreator ReferenceType ConcurrentHashMap = StatementExpression Assignment MemberReference initialized Literal true =	1
MethodDeclaration Modifier public ReferenceType Node FormalParameter ReferenceType ISourcePosition position FormalParameter ReferenceType Node receiver FormalParameter ReferenceType String name FormalParameter ReferenceType Node args IfStatement BinaryOperation instanceof MemberReference args ReferenceType ArrayNode ReturnStatement ClassCreator ReferenceType AttrAssignNode MemberReference position MemberReference receiver MemberReference name MemberReference args LocalVariableDeclaration ReferenceType ArrayNode VariableDeclarator argsNode Cast ReferenceType ArrayNode MemberReference args SwitchStatement MethodInvocation argsNode size SwitchStatementCase Literal 1 ReturnStatement ClassCreator ReferenceType MemberReference position MemberReference receiver MemberReference name MemberReference argsNode SwitchStatementCase Literal 2 ReturnStatement ClassCreator ReferenceType MemberReference position MemberReference receiver MemberReference name MemberReference argsNode SwitchStatementCase Literal 3 ReturnStatement ClassCreator ReferenceType MemberReference position MemberReference receiver MemberReference name MemberReference argsNode SwitchStatementCase ReturnStatement ClassCreator ReferenceType AttrAssignNode MemberReference position MemberReference receiver MemberReference name MemberReference argsNode	1
MethodDeclaration Modifier private ReferenceType Node FormalParameter ReferenceType Token operation FormalParameter ReferenceType BlockPassNode blockPass LocalVariableDeclaration ReferenceType ISourcePosition VariableDeclarator position MethodInvocation MemberReference operation MemberReference blockPass position LocalVariableDeclaration ReferenceType String VariableDeclarator name Cast ReferenceType String MethodInvocation operation getValue LocalVariableDeclaration ReferenceType Node VariableDeclarator args MethodInvocation blockPass getArgsNode IfStatement BinaryOperation == MemberReference args Literal null ReturnStatement ClassCreator ReferenceType FCallNoArgBlockPassNode MemberReference position MemberReference name MemberReference args MemberReference blockPass IfStatement BinaryOperation instanceof MemberReference args ReferenceType ArrayNode ReturnStatement ClassCreator ReferenceType MemberReference position MemberReference name MemberReference args MemberReference blockPass SwitchStatement Cast ReferenceType ArrayNode MemberReference args SwitchStatementCase Literal 0 ReturnStatement ClassCreator ReferenceType FCallNoArgBlockPassNode MemberReference position MemberReference name MemberReference args MemberReference blockPass SwitchStatementCase Literal 1 ReturnStatement ClassCreator ReferenceType MemberReference position MemberReference name Cast ReferenceType ArrayNode MemberReference args MemberReference blockPass SwitchStatementCase Literal 2 ReturnStatement ClassCreator ReferenceType MemberReference position MemberReference name Cast ReferenceType ArrayNode MemberReference args MemberReference blockPass SwitchStatementCase Literal 3 ReturnStatement ClassCreator ReferenceType MemberReference position MemberReference name Cast ReferenceType ArrayNode MemberReference args MemberReference blockPass SwitchStatementCase ReturnStatement ClassCreator ReferenceType MemberReference position MemberReference name MemberReference args MemberReference blockPass	1
MethodDeclaration Modifier public shadowing_lvar FormalParameter ReferenceType Token identifier LocalVariableDeclaration ReferenceType String VariableDeclarator name Cast ReferenceType String MethodInvocation identifier getValue IfStatement BinaryOperation > MethodInvocation MethodInvocation MemberReference name isDefined getCurrentScope Literal 0 BlockStatement IfStatement MethodInvocation warnings isVerbose StatementExpression MethodInvocation warnings MemberReference ID STATEMENT_NOT_REACHED MethodInvocation identifier getPosition BinaryOperation + Literal outer local variable - " MemberReference name warning	1
MethodDeclaration Modifier private setupClassConstructors FormalParameter ReferenceType Class TypeArgument ? javaClass LocalVariableDeclaration ReferenceType Constructor VariableDeclarator constructors MethodInvocation MemberReference javaClass getConstructors StatementExpression Assignment MemberReference ClassCreator ReferenceType Literal = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MemberReference constructors length BinaryOperation >= MemberReference -- i Literal 0 BlockStatement LocalVariableDeclaration ReferenceType Constructor VariableDeclarator ctor MemberReference ArraySelector MemberReference i constructors StatementExpression MethodInvocation MemberReference ctor MemberReference javaClass	1
MethodDeclaration Modifier public BasicType boolean isOpen ReturnStatement MemberReference isOpen	0
MethodDeclaration Modifier public ReferenceType Object case63_line529 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType MultipleAsgn19Node MethodInvocation Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals getPosition MethodInvocation support MethodInvocation Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals getPosition Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals newArrayNode Literal null Literal null = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType Node childNodes ReturnStatement MemberReference EMPTY_LIST	0
MethodDeclaration Modifier public final BasicType long getAddress FormalParameter BasicType long offset StatementExpression MethodInvocation MemberReference offset BinaryOperation >> MemberReference Literal 3 checkBounds ReturnStatement MethodInvocation MemberReference buffer MethodInvocation MemberReference offset index getAddress	1
MethodDeclaration Modifier public BasicType int index ReturnStatement BinaryOperation - MemberReference index Literal 1	0
MethodDeclaration Modifier public ReferenceType RubyClass ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType String toStringInstrs LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buf ClassCreator ReferenceType StringBuffer ForStatement EnhancedForControl VariableDeclaration ReferenceType BasicBlock VariableDeclarator b MethodInvocation getNodes StatementExpression MethodInvocation buf MethodInvocation b toStringInstrs append ReturnStatement MethodInvocation buf toString	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair required Literal 1 ElementValuePair meta Literal true ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject path ThrowStatement MethodInvocation recv MethodInvocation Literal not is and is not supported." newNotImplementedError getRuntime	0
MethodDeclaration Modifier public ReferenceType Object newObject ReturnStatement ClassCreator ReferenceType Object	0
MethodDeclaration Modifier public static ReferenceType ChannelDescriptor open FormalParameter ReferenceType String cwd FormalParameter ReferenceType String path FormalParameter ReferenceType ModeFlags flags FileNotFoundException DirectoryAsFileException FileExistsException IOException ReturnStatement MethodInvocation MemberReference cwd MemberReference path MemberReference flags Literal 0 Literal null open	1
MethodDeclaration Modifier public Annotation JRubyMethod Annotation Override ReferenceType IRubyObject to_s ReturnStatement MethodInvocation MethodInvocation Literal newString getRuntime	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 ReturnStatement MethodInvocation MemberReference context MemberReference self MemberReference clazz MemberReference name MemberReference arg0 MemberReference arg1 MemberReference arg2 MemberReference Block NULL_BLOCK call	0
MethodDeclaration Modifier protected ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType String name FormalParameter ReferenceType DynamicMethod method ReturnStatement MethodInvocation RuntimeHelpers MemberReference context MemberReference self MethodInvocation method getVisibility MemberReference name MemberReference callType MemberReference Block NULL_BLOCK	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ReferenceType IRubyObject freeze FormalParameter ReferenceType ThreadContext context LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime IfStatement BinaryOperation && BinaryOperation == BinaryOperation & MemberReference flags MemberReference Literal 0 BinaryOperation || MethodInvocation runtime is1_9 MethodInvocation ! BlockStatement IfStatement BinaryOperation && BinaryOperation >= MethodInvocation runtime getSafeLevel Literal 4 MethodInvocation ! isTaint ThrowStatement MethodInvocation runtime Literal "Insecure: can't freeze object" newSecurityError StatementExpression Assignment MemberReference flags MemberReference |= ReturnStatement This	1
MethodDeclaration Modifier private static ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType instance FormalParameter ReferenceType Block block IOException IfStatement MethodInvocation block isGiven BlockStatement TryStatement ReturnStatement MethodInvocation block MemberReference context MemberReference instance yield IfStatement MethodInvocation ! instance StatementExpression MethodInvocation instance close ReturnStatement MemberReference instance	1
MethodDeclaration Modifier public Annotation Override ReferenceType DynamicMethod IfStatement BinaryOperation == MemberReference compiledMethod Literal null StatementExpression MethodInvocation initializeMethod ReturnStatement MethodInvocation compiledMethod	1
MethodDeclaration Modifier public final ReferenceType IRubyObject fromNative FormalParameter ReferenceType ThreadContext context FormalParameter BasicType long value ReturnStatement MethodInvocation Util MethodInvocation context getRuntime Cast BasicType byte MemberReference value newUnsigned8	1
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject caller FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block block TryStatement ReturnStatement MethodInvocation MemberReference context MemberReference caller MemberReference self MemberReference block callBlock CatchClause CatchClauseParameter JumpException.BreakJump bj ReturnStatement MethodInvocation MemberReference context MemberReference bj handleBreakJump CatchClause CatchClauseParameter JumpException.RetryJump rj ThrowStatement MethodInvocation MemberReference context retryJumpError StatementExpression MethodInvocation block escape	1
MethodDeclaration Modifier public final modify StatementExpression MethodInvocation modifyCheck IfStatement BinaryOperation != MemberReference MemberReference BlockStatement IfStatement BinaryOperation == MemberReference MemberReference BlockStatement StatementExpression Assignment MemberReference value MethodInvocation value dup = BlockStatement StatementExpression MethodInvocation value StatementExpression Assignment MemberReference MemberReference = StatementExpression MethodInvocation value	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "zero?" ReferenceType IRubyObject zero_p FormalParameter ReferenceType ThreadContext context ReturnStatement TernaryExpression MethodInvocation MemberReference context This MethodInvocation RubyFixnum MethodInvocation getRuntime zero equalInternal MethodInvocation MethodInvocation getTrue getRuntime MethodInvocation MethodInvocation getFalse getRuntime	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair rest Literal true ElementValuePair module Literal true ElementValuePair visibility MemberReference PRIVATE ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator MethodInvocation context MethodInvocation getGlobalVariables MethodInvocation Literal get getRuntime ReturnStatement MethodInvocation RubyIO MemberReference context MemberReference MemberReference args	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair optional Literal 1 ElementValuePair frame Literal true ReferenceType IRubyObject dump FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block unusedBlock LocalVariableDeclaration ReferenceType RubyString VariableDeclarator precision MethodInvocation RubyString MemberReference ArraySelector Literal 0 MethodInvocation getRuntime args Literal LocalVariableDeclaration ReferenceType RubyString VariableDeclarator str This MethodInvocation asString ReturnStatement MethodInvocation precision MemberReference str append	0
MethodDeclaration Modifier public SynchronizedStatement This StatementExpression Assignment MemberReference BinaryOperation & BinaryOperation + MemberReference Literal 1 Literal =	0
MethodDeclaration Modifier public ReferenceType Node ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement Literal null	0
MethodDeclaration Modifier public static ReferenceType DynamicMethod newInterpretedMethod FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType RubyModule container FormalParameter ReferenceType String name FormalParameter ReferenceType scope FormalParameter ReferenceType Node body FormalParameter ReferenceType ArgsNode argsNode FormalParameter ReferenceType Visibility visibility FormalParameter ReferenceType ISourcePosition position IfStatement BinaryOperation == MethodInvocation runtime MethodInvocation getInstanceConfig MemberReference OFF BlockStatement IfStatement MemberReference RubyInstanceConfig FULL_TRACE_ENABLED BlockStatement ReturnStatement ClassCreator ReferenceType MemberReference container MemberReference name MemberReference scope MemberReference body MemberReference argsNode MemberReference visibility MemberReference position BlockStatement ReturnStatement ClassCreator ReferenceType MemberReference container MemberReference scope MemberReference body MemberReference argsNode MemberReference visibility MemberReference position BlockStatement ReturnStatement ClassCreator ReferenceType DefaultMethod MemberReference container MemberReference scope MemberReference body MemberReference argsNode MemberReference visibility MemberReference position	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "to_int" ReferenceType IRubyObject to_int FormalParameter ReferenceType ThreadContext context ReturnStatement MethodInvocation RuntimeHelpers MemberReference context This Literal "to_i" invoke	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "capitalize!" ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration ReferenceType Encoding VariableDeclarator enc MethodInvocation checkDummyEncoding IfStatement BinaryOperation == MemberReference value realSize Literal 0 BlockStatement StatementExpression MethodInvocation modifyCheck ReturnStatement MethodInvocation runtime getNil StatementExpression MethodInvocation modifyAndKeepCodeRange LocalVariableDeclaration BasicType int VariableDeclarator s MemberReference value begin LocalVariableDeclaration BasicType int VariableDeclarator end BinaryOperation + MemberReference s MemberReference value realSize LocalVariableDeclaration BasicType byte VariableDeclarator bytes MemberReference value bytes LocalVariableDeclaration BasicType boolean VariableDeclarator modify Literal false LocalVariableDeclaration BasicType int VariableDeclarator c MethodInvocation MemberReference runtime MemberReference enc MemberReference bytes MemberReference s MemberReference end codePoint IfStatement MethodInvocation enc MemberReference c isLower BlockStatement StatementExpression MethodInvocation enc MethodInvocation MemberReference enc MemberReference c MemberReference bytes MemberReference s codeToMbc StatementExpression Assignment MemberReference modify Literal true = StatementExpression Assignment MemberReference s MethodInvocation MemberReference runtime MemberReference enc MemberReference c codeLength += WhileStatement BinaryOperation < MemberReference s MemberReference end BlockStatement StatementExpression Assignment MemberReference c MethodInvocation MemberReference runtime MemberReference enc MemberReference bytes MemberReference s MemberReference end codePoint = IfStatement MethodInvocation enc MemberReference c isUpper BlockStatement StatementExpression MethodInvocation enc MethodInvocation MemberReference enc MemberReference c MemberReference bytes MemberReference s codeToMbc StatementExpression Assignment MemberReference modify Literal true = StatementExpression Assignment MemberReference s MethodInvocation MemberReference runtime MemberReference enc MemberReference c codeLength += ReturnStatement TernaryExpression MemberReference modify This MethodInvocation runtime getNil	1
MethodDeclaration Modifier private static BasicType long FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType IRubyObject value LocalVariableDeclaration BasicType long VariableDeclarator timeval ArrayCreator BasicType long Literal 2 IfStatement BinaryOperation instanceof MemberReference value ReferenceType RubyFloat BlockStatement StatementExpression Assignment MemberReference ArraySelector Literal 0 timeval TernaryExpression MemberReference Platform IS_32_BIT MethodInvocation RubyNumeric MemberReference value num2int MethodInvocation RubyNumeric MemberReference value num2long = LocalVariableDeclaration BasicType double VariableDeclarator fraction BinaryOperation % Cast ReferenceType RubyFloat MemberReference value Literal 1.0 StatementExpression Assignment MemberReference ArraySelector Literal 1 timeval Cast BasicType long BinaryOperation + BinaryOperation * MemberReference fraction Literal Literal 0.5 = IfStatement BinaryOperation instanceof MemberReference value ReferenceType RubyNumeric BlockStatement StatementExpression Assignment MemberReference ArraySelector Literal 0 timeval TernaryExpression MemberReference Platform IS_32_BIT MethodInvocation RubyNumeric MemberReference value num2int MethodInvocation RubyNumeric MemberReference value num2long = StatementExpression Assignment MemberReference ArraySelector Literal 1 timeval Literal 0 = BlockStatement LocalVariableDeclaration ReferenceType RubyTime VariableDeclarator time IfStatement BinaryOperation instanceof MemberReference value ReferenceType RubyTime BlockStatement StatementExpression Assignment MemberReference time Cast ReferenceType RubyTime MemberReference value = BlockStatement StatementExpression Assignment MemberReference time Cast ReferenceType RubyTime MethodInvocation TypeConverter MemberReference value MethodInvocation runtime getTime Literal Literal true convertToType = StatementExpression Assignment MemberReference ArraySelector Literal 0 timeval TernaryExpression MemberReference Platform IS_32_BIT MethodInvocation RubyNumeric MethodInvocation time to_i num2int MethodInvocation RubyNumeric MethodInvocation time to_i num2long = StatementExpression Assignment MemberReference ArraySelector Literal 1 timeval TernaryExpression MemberReference Platform IS_32_BIT MethodInvocation RubyNumeric MethodInvocation time usec num2int MethodInvocation RubyNumeric MethodInvocation time usec num2long = ReturnStatement MemberReference timeval	1
MethodDeclaration Modifier public static main FormalParameter ReferenceType String args LocalVariableDeclaration ReferenceType VariableDeclarator obj ClassCreator ReferenceType StatementExpression MethodInvocation obj StatementExpression MethodInvocation obj Literal	0
MethodDeclaration Modifier public FormalParameter ReferenceType RaiseException exception AssertStatement MethodInvocation LocalVariableDeclaration ReferenceType RubyException VariableDeclarator MethodInvocation exception getException LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation getRuntime IfStatement MethodInvocation runtime MethodInvocation MemberReference isInstance BlockStatement StatementExpression MethodInvocation threadService MethodInvocation ArrayCreator ReferenceType IRubyObject ArrayInitializer MemberReference MemberReference Block NULL_BLOCK IfStatement MethodInvocation MemberReference runtime abortOnException BlockStatement StatementExpression MethodInvocation runtime MemberReference printError LocalVariableDeclaration ReferenceType RubyException VariableDeclarator MethodInvocation MemberReference runtime Literal 1 newInstance StatementExpression Assignment MemberReference message MemberReference message = StatementExpression MethodInvocation MethodInvocation backtrace StatementExpression MethodInvocation threadService MethodInvocation ArrayCreator ReferenceType IRubyObject ArrayInitializer MemberReference MemberReference Block NULL_BLOCK ReturnStatement IfStatement MethodInvocation runtime MethodInvocation isTrue getDebug BlockStatement StatementExpression MethodInvocation runtime MethodInvocation exception getException printError StatementExpression Assignment MemberReference MemberReference exception =	0
MethodDeclaration Modifier private BasicType int FormalParameter ReferenceType Variable variable LocalVariableDeclaration ReferenceType Integer VariableDeclarator index MethodInvocation MemberReference MethodInvocation peek MemberReference MethodInvocation MemberReference variable get peek IfStatement BinaryOperation == MemberReference index Literal null BlockStatement StatementExpression Assignment MemberReference index MethodInvocation MethodInvocation MethodInvocation Type ClassReference ReferenceType Object getType method = StatementExpression MethodInvocation MemberReference MethodInvocation peek MemberReference MethodInvocation MemberReference variable MemberReference index put peek ReturnStatement MemberReference index	0
MethodDeclaration Modifier public StatementExpression MethodInvocation method MemberReference ArraySelector Literal 1 currentLoopLabels go_to	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal "succ!" Literal ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType IRubyObject IfStatement BinaryOperation == MemberReference value realSize Literal 0 BlockStatement StatementExpression MethodInvocation modifyCheck ReturnStatement This StatementExpression MethodInvocation modify LocalVariableDeclaration BasicType boolean VariableDeclarator alnumSeen Literal false LocalVariableDeclaration BasicType int VariableDeclarator pos Literal - 1 VariableDeclarator n Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator p MemberReference value begin LocalVariableDeclaration BasicType int VariableDeclarator end BinaryOperation + MemberReference p MemberReference value realSize LocalVariableDeclaration BasicType byte VariableDeclarator bytes MemberReference value bytes ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i BinaryOperation - MemberReference end Literal 1 BinaryOperation >= MemberReference i MemberReference p MemberReference -- i BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator c BinaryOperation & MemberReference ArraySelector MemberReference i bytes Literal 0xff IfStatement MethodInvocation ASCII MemberReference c isAlnum BlockStatement StatementExpression Assignment MemberReference alnumSeen Literal true = IfStatement BinaryOperation || BinaryOperation || BinaryOperation && MethodInvocation ASCII MemberReference c isDigit BinaryOperation < MemberReference c Literal '9' BinaryOperation && MethodInvocation ASCII MemberReference c isLower BinaryOperation < MemberReference c Literal 'z' BinaryOperation && MethodInvocation ASCII MemberReference c isUpper BinaryOperation < MemberReference c Literal 'Z' BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i bytes Cast BasicType byte BinaryOperation + MemberReference c Literal 1 = StatementExpression Assignment MemberReference pos Literal - 1 = BreakStatement StatementExpression Assignment MemberReference pos MemberReference i = StatementExpression Assignment MemberReference n TernaryExpression MethodInvocation ASCII MemberReference c isDigit Literal '1' TernaryExpression MethodInvocation ASCII MemberReference c isLower Literal 'a' Literal 'A' = StatementExpression Assignment MemberReference ArraySelector MemberReference i bytes TernaryExpression MethodInvocation ASCII MemberReference c isDigit Cast BasicType byte Literal '0' TernaryExpression MethodInvocation ASCII MemberReference c isLower Cast BasicType byte Literal 'a' Cast BasicType byte Literal 'A' = IfStatement MemberReference ! alnumSeen BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i BinaryOperation - MemberReference end Literal 1 BinaryOperation >= MemberReference i MemberReference p MemberReference -- i BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator c BinaryOperation & MemberReference ArraySelector MemberReference i bytes Literal 0xff IfStatement BinaryOperation < MemberReference c Literal 0xff BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i bytes Cast BasicType byte BinaryOperation + MemberReference c Literal 1 = StatementExpression Assignment MemberReference pos Literal - 1 = BreakStatement StatementExpression Assignment MemberReference pos MemberReference i = StatementExpression Assignment MemberReference n Literal = StatementExpression Assignment MemberReference ArraySelector MemberReference i bytes Literal 0 = IfStatement BinaryOperation > MemberReference pos Literal - 1 BlockStatement StatementExpression MethodInvocation value MemberReference pos Cast BasicType byte MemberReference n insert ReturnStatement This	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal Literal ElementValuePair required Literal 2 ElementValuePair optional Literal 1 ElementValuePair meta Literal true ReferenceType IRubyObject fnmatch FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args LocalVariableDeclaration BasicType int VariableDeclarator flags TernaryExpression BinaryOperation == MemberReference args length Literal 3 MethodInvocation RubyNumeric MemberReference ArraySelector Literal 2 args num2int Literal 0 LocalVariableDeclaration ReferenceType ByteList VariableDeclarator pattern MemberReference ArraySelector Literal 0 MethodInvocation convertToString MethodInvocation getByteList args LocalVariableDeclaration ReferenceType ByteList VariableDeclarator path MethodInvocation MethodInvocation getByteList MemberReference context MemberReference ArraySelector Literal 1 args get_path IfStatement BinaryOperation == MethodInvocation MemberReference pattern bytes MemberReference pattern begin BinaryOperation + MemberReference pattern begin MemberReference pattern realSize MemberReference path bytes MemberReference path begin BinaryOperation + MemberReference path begin MemberReference path realSize MemberReference flags fnmatch Literal 0 BlockStatement ReturnStatement MethodInvocation context MethodInvocation getTrue getRuntime ReturnStatement MethodInvocation context MethodInvocation getFalse getRuntime	1
MethodDeclaration Modifier public ReferenceType Node getArgsNode ReturnStatement MemberReference argsNode	0
MethodDeclaration Modifier private final static BasicType short ReturnStatement ArrayCreator BasicType short ArrayInitializer Literal 296 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 305 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 318 Literal 319 Literal 320 Literal 321 Literal 322 Literal 323 Literal 324 Literal 325 Literal 326 Literal 327 Literal - 1 Literal 329 Literal 330 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 0 Literal - 1 Literal - 1 Literal 338 Literal - 1 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal 344 Literal 10 Literal 346 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 356 Literal 357 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 374 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 44 Literal - 1 Literal - 1 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal 58 Literal 59 Literal - 1 Literal - 1 Literal - 1 Literal 63 Literal - 1 Literal - 1 Literal 281 Literal 282 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 305 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 318 Literal 319 Literal 320 Literal 321 Literal 322 Literal 323 Literal 324 Literal 325 Literal 326 Literal 327 Literal - 1 Literal 329 Literal 330 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 0 Literal 338 Literal - 1 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal 10 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 356 Literal 357 Literal - 1 Literal 262 Literal 263 Literal 264 Literal 362 Literal - 1 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 374 Literal - 1 Literal - 1 Literal - 1 Literal 281 Literal 282 Literal - 1 Literal 44 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal 58 Literal 59 Literal - 1 Literal - 1 Literal - 1 Literal 63 Literal - 1 Literal 305 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 318 Literal 319 Literal 320 Literal 321 Literal 322 Literal 323 Literal 324 Literal 325 Literal 326 Literal 327 Literal - 1 Literal 329 Literal 330 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 338 Literal - 1 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 356 Literal 357 Literal 0 Literal - 1 Literal - 1 Literal - 1 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 10 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 374 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 281 Literal 282 Literal - 1 Literal 44 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal 58 Literal 59 Literal - 1 Literal - 1 Literal - 1 Literal 63 Literal - 1 Literal 305 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 324 Literal 325 Literal - 1 Literal - 1 Literal - 1 Literal 329 Literal 330 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 0 Literal 338 Literal - 1 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal 10 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 374 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 44 Literal - 1 Literal - 1 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal 58 Literal 59 Literal - 1 Literal - 1 Literal - 1 Literal 63 Literal - 1 Literal - 1 Literal 281 Literal 282 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal 0 Literal - 1 Literal - 1 Literal - 1 Literal 305 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 10 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 324 Literal 325 Literal - 1 Literal - 1 Literal - 1 Literal 329 Literal 330 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 338 Literal - 1 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal 344 Literal 44 Literal 346 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 58 Literal 59 Literal - 1 Literal 362 Literal - 1 Literal 63 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 374 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal 0 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 281 Literal 282 Literal 10 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 305 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 44 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 324 Literal 325 Literal - 1 Literal - 1 Literal - 1 Literal 329 Literal 330 Literal 58 Literal 59 Literal - 1 Literal - 1 Literal - 1 Literal 63 Literal - 1 Literal 338 Literal - 1 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 262 Literal 263 Literal 264 Literal 362 Literal - 1 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal 0 Literal - 1 Literal - 1 Literal - 1 Literal 374 Literal - 1 Literal - 1 Literal - 1 Literal 281 Literal 282 Literal 10 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 305 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 44 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 324 Literal 325 Literal - 1 Literal - 1 Literal - 1 Literal 329 Literal 330 Literal 58 Literal 59 Literal - 1 Literal - 1 Literal - 1 Literal 63 Literal - 1 Literal 338 Literal - 1 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal - 1 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal 0 Literal - 1 Literal - 1 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 281 Literal 282 Literal 10 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 374 Literal - 1 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 305 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 0 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 44 Literal - 1 Literal - 1 Literal - 1 Literal 10 Literal - 1 Literal - 1 Literal 324 Literal 325 Literal - 1 Literal - 1 Literal - 1 Literal 329 Literal 330 Literal 58 Literal 59 Literal - 1 Literal - 1 Literal - 1 Literal 63 Literal - 1 Literal 338 Literal - 1 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 262 Literal 263 Literal 264 Literal 44 Literal - 1 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal 362 Literal 0 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 59 Literal 281 Literal 282 Literal 10 Literal 374 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 305 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 0 Literal - 1 Literal - 1 Literal - 1 Literal 44 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 10 Literal 324 Literal 325 Literal - 1 Literal - 1 Literal - 1 Literal 329 Literal 330 Literal 58 Literal 59 Literal - 1 Literal - 1 Literal - 1 Literal 63 Literal - 1 Literal 338 Literal - 1 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 44 Literal - 1 Literal 262 Literal 263 Literal 264 Literal 362 Literal - 1 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal 58 Literal 59 Literal - 1 Literal 374 Literal - 1 Literal 63 Literal - 1 Literal 281 Literal 282 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal 0 Literal - 1 Literal - 1 Literal - 1 Literal 305 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 10 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 324 Literal 325 Literal - 1 Literal - 1 Literal - 1 Literal 329 Literal 330 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 338 Literal - 1 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal 344 Literal 44 Literal 346 Literal - 1 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal 58 Literal 59 Literal - 1 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 281 Literal 282 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 374 Literal - 1 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal 305 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal 0 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 10 Literal - 1 Literal - 1 Literal - 1 Literal 325 Literal - 1 Literal - 1 Literal - 1 Literal 329 Literal 330 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal 338 Literal - 1 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 262 Literal 263 Literal 264 Literal 44 Literal - 1 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 58 Literal 59 Literal 281 Literal 282 Literal - 1 Literal 374 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 341 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 262 Literal 263 Literal 264 Literal 305 Literal 0 Literal 267 Literal 268 Literal 269 Literal 362 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 10 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 281 Literal 282 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal 338 Literal - 1 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal 344 Literal 305 Literal 346 Literal - 1 Literal - 1 Literal - 1 Literal 44 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 362 Literal - 1 Literal 58 Literal 59 Literal - 1 Literal 0 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 374 Literal - 1 Literal - 1 Literal 10 Literal 338 Literal - 1 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal 281 Literal 282 Literal - 1 Literal - 1 Literal - 1 Literal 44 Literal - 1 Literal - 1 Literal 374 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal 58 Literal 59 Literal - 1 Literal - 1 Literal - 1 Literal 305 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 338 Literal 0 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal - 1 Literal - 1 Literal 10 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 262 Literal 263 Literal 264 Literal - 1 Literal 362 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 374 Literal - 1 Literal - 1 Literal 281 Literal 282 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 44 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal 58 Literal 59 Literal - 1 Literal - 1 Literal 305 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 0 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 338 Literal 10 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal 281 Literal 282 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 44 Literal 374 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 58 Literal 59 Literal - 1 Literal 305 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 338 Literal - 1 Literal - 1 Literal 341 Literal 281 Literal 282 Literal 344 Literal - 1 Literal 346 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal 0 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal 362 Literal 10 Literal - 1 Literal - 1 Literal 305 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 374 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 44 Literal - 1 Literal 338 Literal - 1 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal - 1 Literal - 1 Literal - 1 Literal 58 Literal 59 Literal - 1 Literal 0 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 262 Literal 263 Literal 264 Literal 362 Literal 10 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 374 Literal - 1 Literal - 1 Literal - 1 Literal 281 Literal 282 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal 44 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 305 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 58 Literal 59 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 338 Literal - 1 Literal - 1 Literal 341 Literal 0 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal - 1 Literal 262 Literal 263 Literal 264 Literal - 1 Literal 10 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 281 Literal 282 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 374 Literal - 1 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal 44 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 305 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 0 Literal - 1 Literal - 1 Literal 58 Literal 59 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 10 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 338 Literal - 1 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 0 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 362 Literal 10 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 59 Literal 262 Literal 263 Literal 264 Literal 374 Literal - 1 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 281 Literal 282 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 44 Literal - 1 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 58 Literal 59 Literal 0 Literal 305 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 10 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 338 Literal - 1 Literal - 1 Literal 341 Literal 281 Literal 282 Literal 344 Literal - 1 Literal 346 Literal - 1 Literal 44 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal 362 Literal 59 Literal - 1 Literal - 1 Literal 305 Literal - 1 Literal 0 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 374 Literal - 1 Literal - 1 Literal - 1 Literal 10 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 338 Literal - 1 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal - 1 Literal 262 Literal 263 Literal 264 Literal 44 Literal - 1 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 362 Literal - 1 Literal - 1 Literal 58 Literal 59 Literal 281 Literal 282 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 374 Literal - 1 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 305 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 0 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 262 Literal 263 Literal 264 Literal - 1 Literal 10 Literal - 1 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 338 Literal - 1 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal 44 Literal - 1 Literal - 1 Literal - 1 Literal 262 Literal 263 Literal 264 Literal 362 Literal - 1 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal 58 Literal 59 Literal - 1 Literal 0 Literal - 1 Literal 374 Literal - 1 Literal - 1 Literal - 1 Literal 281 Literal 282 Literal - 1 Literal - 1 Literal 10 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 305 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 44 Literal 362 Literal - 1 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal 58 Literal 59 Literal - 1 Literal - 1 Literal - 1 Literal 338 Literal - 1 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 374 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal 338 Literal - 1 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal - 1 Literal 281 Literal 282 Literal 10 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 305 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 59 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 338 Literal - 1 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal 362 Literal - 1 Literal 91 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 281 Literal 282 Literal - 1 Literal 374 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 305 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 10 Literal - 1 Literal - 1 Literal - 1 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 338 Literal - 1 Literal - 1 Literal 341 Literal 281 Literal 282 Literal 344 Literal - 1 Literal 346 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal 305 Literal - 1 Literal 59 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 374 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 338 Literal 91 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 374 Literal - 1 Literal - 1 Literal - 1 Literal 256 Literal 257 Literal 258 Literal 259 Literal 260 Literal 261 Literal 262 Literal 263 Literal 264 Literal 265 Literal 266 Literal - 1 Literal 10 Literal 269 Literal 270 Literal - 1 Literal 272 Literal 273 Literal 274 Literal 275 Literal 276 Literal 277 Literal 278 Literal - 1 Literal 280 Literal - 1 Literal - 1 Literal 283 Literal 284 Literal 285 Literal 286 Literal 287 Literal 288 Literal 289 Literal - 1 Literal - 1 Literal 292 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 298 Literal 299 Literal 300 Literal 301 Literal 302 Literal 303 Literal 304 Literal - 1 Literal 306 Literal 307 Literal 308 Literal 309 Literal 310 Literal 311 Literal - 1 Literal 313 Literal 314 Literal 315 Literal 316 Literal 59 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 328 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 335 Literal 336 Literal - 1 Literal - 1 Literal 339 Literal 340 Literal - 1 Literal 342 Literal 343 Literal - 1 Literal 345 Literal - 1 Literal 347 Literal - 1 Literal 91 Literal - 1 Literal 351 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 356 Literal - 1 Literal - 1 Literal 359 Literal - 1 Literal 361 Literal - 1 Literal - 1 Literal 364 Literal 365 Literal 366 Literal 367 Literal 368 Literal 369 Literal - 1 Literal - 1 Literal - 1 Literal 373 Literal - 1 Literal 375 Literal 376 Literal - 1 Literal 378 Literal 379 Literal - 1 Literal - 1 Literal 256 Literal 257 Literal 258 Literal 259 Literal 260 Literal 261 Literal 262 Literal 263 Literal 264 Literal 265 Literal 266 Literal - 1 Literal 10 Literal 269 Literal 270 Literal - 1 Literal 272 Literal 273 Literal 274 Literal 275 Literal 276 Literal 277 Literal 278 Literal - 1 Literal 280 Literal - 1 Literal - 1 Literal 283 Literal 284 Literal 285 Literal 286 Literal 287 Literal 288 Literal 289 Literal - 1 Literal - 1 Literal 292 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 298 Literal 299 Literal 300 Literal 301 Literal 302 Literal 303 Literal 304 Literal - 1 Literal 306 Literal 307 Literal 308 Literal 309 Literal 310 Literal 311 Literal - 1 Literal 313 Literal 314 Literal 315 Literal 316 Literal 59 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 328 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 335 Literal 336 Literal - 1 Literal - 1 Literal 339 Literal 340 Literal - 1 Literal 342 Literal 343 Literal - 1 Literal 345 Literal - 1 Literal 347 Literal - 1 Literal 91 Literal - 1 Literal 351 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 356 Literal - 1 Literal - 1 Literal 359 Literal - 1 Literal 361 Literal - 1 Literal - 1 Literal 364 Literal 365 Literal 366 Literal 367 Literal 368 Literal 369 Literal - 1 Literal - 1 Literal - 1 Literal 373 Literal - 1 Literal 375 Literal 376 Literal - 1 Literal 378 Literal 379 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 256 Literal 257 Literal 258 Literal 259 Literal 260 Literal 261 Literal 262 Literal 263 Literal 264 Literal 265 Literal 266 Literal - 1 Literal 10 Literal 269 Literal 270 Literal - 1 Literal 272 Literal 273 Literal 274 Literal 275 Literal 276 Literal 277 Literal 278 Literal - 1 Literal 280 Literal - 1 Literal - 1 Literal 283 Literal 284 Literal 285 Literal 286 Literal 287 Literal 288 Literal 289 Literal - 1 Literal - 1 Literal 292 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 298 Literal 299 Literal 300 Literal 301 Literal 302 Literal 303 Literal 304 Literal - 1 Literal 306 Literal 307 Literal 308 Literal 309 Literal 310 Literal 311 Literal - 1 Literal 313 Literal 314 Literal 315 Literal 316 Literal 59 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 328 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 335 Literal 336 Literal - 1 Literal - 1 Literal 339 Literal 340 Literal - 1 Literal 342 Literal 343 Literal - 1 Literal 345 Literal - 1 Literal 347 Literal - 1 Literal 91 Literal - 1 Literal 351 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 356 Literal - 1 Literal - 1 Literal 359 Literal - 1 Literal 361 Literal - 1 Literal - 1 Literal 364 Literal 365 Literal 366 Literal 367 Literal 368 Literal 369 Literal - 1 Literal - 1 Literal - 1 Literal 373 Literal - 1 Literal 375 Literal 376 Literal - 1 Literal 378 Literal 379 Literal - 1 Literal - 1 Literal 256 Literal 257 Literal 258 Literal 259 Literal 260 Literal 261 Literal 262 Literal 263 Literal 264 Literal 265 Literal 266 Literal - 1 Literal 10 Literal 269 Literal 270 Literal - 1 Literal 272 Literal 273 Literal 274 Literal 275 Literal 276 Literal 277 Literal 278 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 283 Literal 284 Literal 285 Literal 286 Literal 287 Literal 288 Literal 289 Literal - 1 Literal - 1 Literal 292 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 298 Literal 299 Literal 300 Literal 301 Literal 302 Literal 303 Literal 304 Literal - 1 Literal 306 Literal 307 Literal 308 Literal 309 Literal 310 Literal 311 Literal - 1 Literal 313 Literal 314 Literal 315 Literal 316 Literal 59 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 328 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 335 Literal 336 Literal - 1 Literal - 1 Literal 339 Literal 340 Literal - 1 Literal 342 Literal 343 Literal - 1 Literal 345 Literal - 1 Literal 347 Literal - 1 Literal - 1 Literal - 1 Literal 351 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 356 Literal - 1 Literal - 1 Literal 359 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 364 Literal 365 Literal 366 Literal 367 Literal 368 Literal 369 Literal - 1 Literal - 1 Literal - 1 Literal 373 Literal - 1 Literal 375 Literal 376 Literal - 1 Literal 378 Literal 379 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 256 Literal 257 Literal 258 Literal 259 Literal 260 Literal 261 Literal 262 Literal 263 Literal 264 Literal 265 Literal 266 Literal - 1 Literal 10 Literal 269 Literal 270 Literal - 1 Literal 272 Literal 273 Literal 274 Literal 275 Literal 276 Literal 277 Literal 278 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 283 Literal 284 Literal 285 Literal 286 Literal 287 Literal 288 Literal 289 Literal - 1 Literal - 1 Literal 292 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 298 Literal 299 Literal 300 Literal 301 Literal 302 Literal 303 Literal 304 Literal - 1 Literal 306 Literal 307 Literal 308 Literal 309 Literal 310 Literal 311 Literal - 1 Literal 313 Literal 314 Literal 315 Literal 316 Literal 59 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 328 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 335 Literal 336 Literal - 1 Literal - 1 Literal 339 Literal - 1 Literal - 1 Literal 342 Literal 343 Literal - 1 Literal 345 Literal - 1 Literal 347 Literal - 1 Literal - 1 Literal - 1 Literal 351 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 356 Literal - 1 Literal - 1 Literal 359 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 364 Literal 365 Literal 366 Literal 367 Literal 368 Literal 369 Literal - 1 Literal - 1 Literal - 1 Literal 373 Literal - 1 Literal 375 Literal 376 Literal - 1 Literal 378 Literal 379 Literal - 1 Literal - 1 Literal 256 Literal 257 Literal 258 Literal 259 Literal 260 Literal 261 Literal 262 Literal 263 Literal 264 Literal 265 Literal 266 Literal - 1 Literal 268 Literal 269 Literal 270 Literal 271 Literal 272 Literal 273 Literal 274 Literal 275 Literal 276 Literal 277 Literal 278 Literal 10 Literal - 1 Literal - 1 Literal - 1 Literal 283 Literal 284 Literal 285 Literal 286 Literal 287 Literal 288 Literal 289 Literal - 1 Literal - 1 Literal 292 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 298 Literal 299 Literal 300 Literal 301 Literal 302 Literal 303 Literal 304 Literal - 1 Literal 306 Literal 307 Literal 308 Literal 309 Literal 310 Literal 311 Literal - 1 Literal 313 Literal 314 Literal 315 Literal 316 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 59 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 336 Literal - 1 Literal - 1 Literal 339 Literal - 1 Literal - 1 Literal 342 Literal 343 Literal - 1 Literal 345 Literal - 1 Literal 347 Literal - 1 Literal - 1 Literal - 1 Literal 351 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 359 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 364 Literal 365 Literal 366 Literal 367 Literal 368 Literal 369 Literal - 1 Literal - 1 Literal - 1 Literal 373 Literal - 1 Literal 375 Literal 376 Literal - 1 Literal 378 Literal 379 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 256 Literal 257 Literal 258 Literal 259 Literal 260 Literal 261 Literal - 1 Literal - 1 Literal 264 Literal 265 Literal 266 Literal - 1 Literal - 1 Literal - 1 Literal 270 Literal 10 Literal 272 Literal 273 Literal 274 Literal 275 Literal 276 Literal 277 Literal 278 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 283 Literal 284 Literal 285 Literal 286 Literal 287 Literal 288 Literal 289 Literal - 1 Literal - 1 Literal 292 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 298 Literal 299 Literal 300 Literal 301 Literal 302 Literal 303 Literal 304 Literal - 1 Literal 306 Literal 307 Literal 308 Literal 309 Literal 310 Literal 311 Literal - 1 Literal 313 Literal 314 Literal 315 Literal 316 Literal - 1 Literal - 1 Literal - 1 Literal 59 Literal - 1 Literal 0 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 10 Literal - 1 Literal - 1 Literal - 1 Literal 336 Literal - 1 Literal - 1 Literal 339 Literal - 1 Literal - 1 Literal 342 Literal 343 Literal - 1 Literal 345 Literal - 1 Literal 347 Literal - 1 Literal - 1 Literal - 1 Literal 351 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 359 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 364 Literal 365 Literal 366 Literal 367 Literal 368 Literal 369 Literal - 1 Literal - 1 Literal - 1 Literal 373 Literal - 1 Literal 375 Literal 376 Literal - 1 Literal 378 Literal 379 Literal - 1 Literal 59 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 256 Literal 257 Literal 258 Literal 259 Literal 260 Literal 261 Literal - 1 Literal - 1 Literal - 1 Literal 265 Literal 266 Literal - 1 Literal - 1 Literal - 1 Literal 270 Literal - 1 Literal 272 Literal 273 Literal 274 Literal 275 Literal 276 Literal 277 Literal 278 Literal - 1 Literal - 1 Literal 0 Literal - 1 Literal 283 Literal 284 Literal 285 Literal 286 Literal 287 Literal 288 Literal 289 Literal - 1 Literal 10 Literal 292 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 298 Literal 299 Literal 300 Literal 301 Literal 302 Literal 303 Literal 304 Literal - 1 Literal 306 Literal 307 Literal 308 Literal 309 Literal 310 Literal 311 Literal - 1 Literal 313 Literal 314 Literal 315 Literal 316 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 44 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 336 Literal - 1 Literal - 1 Literal 339 Literal 59 Literal - 1 Literal 342 Literal 343 Literal - 1 Literal 345 Literal - 1 Literal 347 Literal - 1 Literal - 1 Literal - 1 Literal 351 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 359 Literal - 1 Literal 0 Literal 362 Literal - 1 Literal 364 Literal 365 Literal 366 Literal 367 Literal 368 Literal 369 Literal - 1 Literal 10 Literal - 1 Literal 373 Literal - 1 Literal 375 Literal 376 Literal - 1 Literal 378 Literal 379 Literal - 1 Literal 257 Literal 258 Literal 259 Literal - 1 Literal 261 Literal - 1 Literal - 1 Literal - 1 Literal 265 Literal 266 Literal - 1 Literal - 1 Literal - 1 Literal 270 Literal - 1 Literal 272 Literal 273 Literal 274 Literal 275 Literal 276 Literal 277 Literal 278 Literal - 1 Literal - 1 Literal 44 Literal - 1 Literal 283 Literal 284 Literal 285 Literal 286 Literal 287 Literal 288 Literal 289 Literal - 1 Literal - 1 Literal 292 Literal - 1 Literal - 1 Literal - 1 Literal 59 Literal - 1 Literal 61 Literal 299 Literal 63 Literal - 1 Literal 302 Literal 303 Literal 304 Literal - 1 Literal 306 Literal 307 Literal 308 Literal 309 Literal 310 Literal 311 Literal - 1 Literal 313 Literal 314 Literal 315 Literal 316 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal 91 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal 336 Literal - 1 Literal 0 Literal 339 Literal - 1 Literal - 1 Literal 342 Literal 343 Literal - 1 Literal 345 Literal - 1 Literal - 1 Literal 10 Literal - 1 Literal - 1 Literal 351 Literal - 1 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal 359 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 364 Literal 365 Literal 366 Literal 367 Literal 368 Literal 369 Literal - 1 Literal - 1 Literal - 1 Literal 373 Literal - 1 Literal 375 Literal 376 Literal - 1 Literal 378 Literal 379 Literal - 1 Literal - 1 Literal 44 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 59 Literal - 1 Literal - 1 Literal - 1 Literal 63 Literal 341 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 262 Literal 263 Literal 264 Literal - 1 Literal 362 Literal - 1 Literal 268 Literal 269 Literal - 1 Literal 271 Literal 91 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 0 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 10 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 44 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 341 Literal 262 Literal 263 Literal 264 Literal - 1 Literal 59 Literal - 1 Literal 268 Literal 269 Literal 63 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 280 Literal - 1 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal 91 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 317 Literal 318 Literal 319 Literal 320 Literal 321 Literal 322 Literal 323 Literal 324 Literal 325 Literal 326 Literal 327 Literal 328 Literal 329 Literal 330 Literal - 1 Literal - 1 Literal 333 Literal 334 Literal 335 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 348 Literal 0 Literal 350 Literal - 1 Literal 352 Literal 353 Literal 354 Literal 355 Literal 356 Literal 357 Literal 358 Literal 10 Literal 360 Literal 361 Literal 362 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 281 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal 44 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 59 Literal - 1 Literal - 1 Literal - 1 Literal 63 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 317 Literal 318 Literal 319 Literal 320 Literal 321 Literal 322 Literal 323 Literal 324 Literal 325 Literal 326 Literal 327 Literal 328 Literal 329 Literal 330 Literal - 1 Literal - 1 Literal 333 Literal 334 Literal 335 Literal - 1 Literal - 1 Literal - 1 Literal 91 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 348 Literal - 1 Literal 350 Literal 0 Literal 352 Literal 353 Literal 354 Literal 355 Literal 356 Literal 357 Literal 358 Literal - 1 Literal 360 Literal 10 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 281 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 44 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 59 Literal - 1 Literal 61 Literal - 1 Literal 63 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 317 Literal 318 Literal 319 Literal 320 Literal 321 Literal 322 Literal 323 Literal 324 Literal 325 Literal 326 Literal 327 Literal 328 Literal 329 Literal 330 Literal - 1 Literal - 1 Literal 333 Literal 334 Literal 335 Literal 91 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 348 Literal - 1 Literal 350 Literal - 1 Literal 352 Literal 353 Literal 354 Literal 355 Literal 356 Literal 357 Literal 358 Literal 0 Literal 360 Literal - 1 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 10 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 44 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 59 Literal - 1 Literal 61 Literal - 1 Literal 63 Literal 281 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 91 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 317 Literal 318 Literal 319 Literal 320 Literal 321 Literal 322 Literal 323 Literal 324 Literal 325 Literal 326 Literal 327 Literal 328 Literal 329 Literal 330 Literal - 1 Literal - 1 Literal 333 Literal 334 Literal 335 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 348 Literal - 1 Literal 350 Literal 0 Literal 352 Literal 353 Literal 354 Literal 355 Literal 356 Literal 357 Literal 358 Literal - 1 Literal 360 Literal 10 Literal 362 Literal - 1 Literal - 1 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal - 1 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal 44 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 59 Literal - 1 Literal 61 Literal - 1 Literal 63 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 317 Literal 318 Literal 319 Literal 320 Literal 321 Literal 322 Literal 323 Literal 324 Literal 325 Literal 326 Literal 327 Literal 328 Literal 329 Literal 330 Literal - 1 Literal - 1 Literal 333 Literal 334 Literal 335 Literal - 1 Literal 337 Literal - 1 Literal 91 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 348 Literal - 1 Literal 350 Literal - 1 Literal 352 Literal 353 Literal 354 Literal 355 Literal 356 Literal 357 Literal 358 Literal 0 Literal 360 Literal - 1 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 10 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal - 1 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 0 Literal 44 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal 10 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 59 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 317 Literal 318 Literal 319 Literal 320 Literal 321 Literal 322 Literal 323 Literal 324 Literal 325 Literal 326 Literal 327 Literal 328 Literal 329 Literal 330 Literal - 1 Literal 44 Literal 333 Literal 334 Literal 335 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 59 Literal 348 Literal 0 Literal 350 Literal - 1 Literal 352 Literal 353 Literal 354 Literal 355 Literal 356 Literal 357 Literal 358 Literal 10 Literal 360 Literal - 1 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 0 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 10 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal - 1 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal 59 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 0 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 59 Literal - 1 Literal 10 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 317 Literal 318 Literal 319 Literal 320 Literal 321 Literal 322 Literal 323 Literal 324 Literal 325 Literal 326 Literal 327 Literal 328 Literal 329 Literal 330 Literal - 1 Literal - 1 Literal 333 Literal 334 Literal 335 Literal - 1 Literal - 1 Literal - 1 Literal 0 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 44 Literal - 1 Literal 348 Literal 10 Literal 350 Literal - 1 Literal 352 Literal 353 Literal 354 Literal 355 Literal 356 Literal 357 Literal 358 Literal - 1 Literal 360 Literal 59 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal 44 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 281 Literal 282 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 59 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 281 Literal 282 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal 341 Literal - 1 Literal - 1 Literal 344 Literal - 1 Literal 346 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 362 Literal 44 Literal - 1 Literal - 1 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 341 Literal 281 Literal 282 Literal 344 Literal - 1 Literal 346 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal 262 Literal 263 Literal 264 Literal 362 Literal - 1 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 281 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 290 Literal 291 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal 344 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal - 1 Literal - 1 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal 341 Literal - 1 Literal - 1 Literal 293 Literal 294 Literal 295 Literal 296 Literal 297 Literal - 1 Literal 262 Literal 263 Literal 264 Literal - 1 Literal - 1 Literal 267 Literal 268 Literal 269 Literal - 1 Literal 271 Literal - 1 Literal 59 Literal 362 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1 Literal - 1	1
MethodDeclaration Modifier public BasicType boolean ReturnStatement BinaryOperation >= MemberReference index Literal 0	0
MethodDeclaration Modifier private LocalVariableDeclaration BasicType int VariableDeclarator newSize BinaryOperation * MemberReference length Literal 2 LocalVariableDeclaration ReferenceType VariableDeclarator ArrayCreator ReferenceType MemberReference newSize StatementExpression MethodInvocation System MemberReference Literal 0 MemberReference Literal 0 MemberReference length arraycopy StatementExpression Assignment MemberReference MemberReference =	0
MethodDeclaration Modifier public flush StatementExpression MethodInvocation ruby MethodInvocation getInstanceConfig MethodInvocation MethodInvocation flush get	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "remainder" ElementValuePair required Literal 1 ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject other IfStatement BinaryOperation && BinaryOperation instanceof MemberReference other ReferenceType RubyFloat BinaryOperation == Cast ReferenceType RubyFloat MemberReference other Literal 0 BlockStatement ThrowStatement MethodInvocation context MethodInvocation newZeroDivisionError getRuntime ReturnStatement MethodInvocation MemberReference context MemberReference other	0
MethodDeclaration Modifier public final BasicType int intValue FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject obj ReturnStatement MethodInvocation Util MemberReference obj uint16Value	1
MethodDeclaration Modifier public BasicType boolean isOpen ReturnStatement MemberReference isOpen	0
MethodDeclaration Modifier public ReferenceType RaiseException FormalParameter ReferenceType String message FormalParameter ReferenceType StackOverflowError IfStatement MethodInvocation MethodInvocation isTrue getDebug BlockStatement StatementExpression MethodInvocation MethodInvocation MethodInvocation getError getInstanceConfig printStackTrace ReturnStatement MethodInvocation MethodInvocation MemberReference message newRaiseException	0
MethodDeclaration Modifier public Annotation Override ReferenceType String toString ReturnStatement BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal MemberReference path Literal ", " MethodInvocation openFile getMode Literal ", " MethodInvocation openFile MethodInvocation getDescriptor MethodInvocation getFileno getMainStream Literal ")"	0
MethodDeclaration pre FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule implementer FormalParameter ReferenceType String name FormalParameter ReferenceType Block block FormalParameter ReferenceType scope FormalParameter ReferenceType StatementExpression MethodInvocation context MemberReference implementer MemberReference name MemberReference self MemberReference block MemberReference scope	0
MethodDeclaration Modifier public final ReferenceType RubyString getString FormalParameter ReferenceType Ruby runtime FormalParameter BasicType int i ReturnStatement MethodInvocation runtimeCache MemberReference runtime MemberReference i getString	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType NodeVisitor iVisitor ReturnStatement MethodInvocation iVisitor This	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 FormalParameter ReferenceType IRubyObject arg3 FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime TryStatement StatementExpression MethodInvocation MemberReference context MemberReference name MemberReference self MemberReference block MemberReference runtime pre StatementExpression MethodInvocation argsNode MemberReference runtime Literal 4 StatementExpression MethodInvocation argsNode MemberReference context MemberReference runtime MemberReference self MemberReference arg0 MemberReference arg1 MemberReference arg2 MemberReference arg3 MemberReference block prepare ReturnStatement MethodInvocation body MemberReference runtime MemberReference context MemberReference self MemberReference block CatchClause CatchClauseParameter rj ReturnStatement MethodInvocation MemberReference context MemberReference rj handleReturn CatchClause CatchClauseParameter rj ReturnStatement MethodInvocation MemberReference runtime handleRedo StatementExpression MethodInvocation MemberReference runtime MemberReference context MemberReference name post	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair alias Literal ReferenceType IRubyObject StatementExpression MethodInvocation check LocalVariableDeclaration ReferenceType ByteList VariableDeclarator value MethodInvocation str getByteList IfStatement BinaryOperation > MemberReference pos MemberReference value realSize ReturnStatement MethodInvocation MethodInvocation getNil getRuntime IfStatement BinaryOperation == MemberReference pos Literal 0 ReturnStatement MethodInvocation MethodInvocation getTrue getRuntime ReturnStatement TernaryExpression BinaryOperation == MemberReference value ArraySelector BinaryOperation - BinaryOperation + MemberReference value begin MemberReference pos Literal 1 bytes Cast BasicType byte Literal '\n' MethodInvocation MethodInvocation getTrue getRuntime MethodInvocation MethodInvocation getFalse getRuntime	1
MethodDeclaration Modifier public ReferenceType Object toJava FormalParameter ReferenceType Class target IfStatement MethodInvocation ReturnStatement MemberReference Boolean FALSE ReturnStatement MemberReference Boolean TRUE	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime IfStatement BinaryOperation == MemberReference value realSize Literal 0 ReturnStatement MethodInvocation MethodInvocation This infectBy MemberReference runtime MethodInvocation getMetaClass MemberReference value encoding newEmptyString ReturnStatement MethodInvocation MemberReference runtime Literal 0 MethodInvocation MemberReference runtime choppedLength19 makeShared19	1
MethodDeclaration Modifier public Annotation Override FormalParameter ReferenceType IRubyObject clone StatementExpression SuperMethodInvocation MemberReference clone LocalVariableDeclaration ReferenceType VariableDeclarator exception Cast ReferenceType MemberReference clone StatementExpression Assignment MemberReference exception args MemberReference args =	0
MethodDeclaration Modifier public setName FormalParameter ReferenceType String name StatementExpression Assignment This MemberReference name MemberReference name =	0
MethodDeclaration Modifier public run TryStatement LocalVariableDeclaration ReferenceType BufferedReader VariableDeclarator rr ClassCreator ReferenceType BufferedReader ClassCreator ReferenceType InputStreamReader This MemberReference socket MethodInvocation getInputStream LocalVariableDeclaration ReferenceType String VariableDeclarator command MethodInvocation rr readLine StatementExpression MethodInvocation rr close StatementExpression This MemberReference socket MethodInvocation close StatementExpression Assignment This MemberReference socket Literal null = IfStatement MethodInvocation conf isDebug BlockStatement StatementExpression MethodInvocation System.err BinaryOperation + Literal "Got command: " MemberReference command println LocalVariableDeclaration ReferenceType String VariableDeclarator cmds MethodInvocation command Literal " " Literal 3 split IfStatement MemberReference ArraySelector Literal 1 MethodInvocation MethodInvocation conf getKey equals cmds BlockStatement IfStatement MemberReference ArraySelector Literal 0 MethodInvocation MemberReference equals cmds BlockStatement IfStatement MethodInvocation conf isDebug BlockStatement StatementExpression MethodInvocation System.err Literal println StatementExpression MethodInvocation System Literal 0 exit IfStatement MemberReference ArraySelector Literal 0 MethodInvocation MemberReference equals cmds BlockStatement IfStatement MethodInvocation conf isDebug BlockStatement StatementExpression MethodInvocation System.err Literal no more START" println StatementExpression Assignment MemberReference stillStarting Literal false = IfStatement MemberReference ArraySelector Literal 0 MethodInvocation MemberReference equals cmds BlockStatement IfStatement MemberReference stillStarting BlockStatement IfStatement MethodInvocation conf isDebug BlockStatement StatementExpression MethodInvocation System.err BinaryOperation + Literal "Doing on command " MemberReference ArraySelector Literal 2 cmds println StatementExpression ClassCreator MethodInvocation MethodInvocation MemberReference ArraySelector Literal 2 MethodInvocation trim cmds run ReferenceType Main BlockStatement IfStatement MethodInvocation conf isDebug BlockStatement StatementExpression MethodInvocation System.err Literal "Not doing invalid command" println BlockStatement IfStatement MethodInvocation conf isDebug BlockStatement StatementExpression MethodInvocation System.err Literal "Unrecognized command" println BlockStatement IfStatement MethodInvocation conf isDebug BlockStatement StatementExpression MethodInvocation System.err Literal "Invalid println CatchClause CatchClauseParameter Exception e	1
MethodDeclaration Modifier private static killTimeoutThread FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Future timeoutFuture LocalVariableDeclaration BasicType boolean VariableDeclarator cancelled MethodInvocation timeoutFuture Literal false cancel IfStatement BinaryOperation && BinaryOperation && MemberReference cancelled BinaryOperation instanceof MemberReference timeoutExecutor ReferenceType BinaryOperation instanceof MemberReference timeoutFuture ReferenceType Runnable BlockStatement StatementExpression Cast ReferenceType MemberReference timeoutExecutor IfStatement MemberReference ! cancelled BlockStatement TryStatement StatementExpression MethodInvocation timeoutFuture get CatchClause CatchClauseParameter ex CatchClause CatchClauseParameter InterruptedException ex StatementExpression MethodInvocation context pollThreadEvents	1
MethodDeclaration Modifier private ReferenceType Object FormalParameter ReferenceType String name FormalParameter ReferenceType Object value LocalVariableDeclaration ReferenceType Object VariableDeclarator table MemberReference packedVTable LocalVariableDeclaration BasicType int VariableDeclarator hash MethodInvocation name hashCode LocalVariableDeclaration BasicType int VariableDeclarator i Literal 0 ForStatement ForControl Assignment MemberReference i Literal 0 = BinaryOperation < MemberReference i MemberReference vTableSize MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator n Cast ReferenceType String MemberReference ArraySelector MemberReference i table IfStatement BinaryOperation && BinaryOperation == MethodInvocation n hashCode MemberReference hash MethodInvocation name MemberReference n equals BlockStatement StatementExpression Assignment MemberReference ArraySelector BinaryOperation + MemberReference i MemberReference MAX_PACKED table MemberReference value = ReturnStatement MemberReference value ReturnStatement MethodInvocation MemberReference table MemberReference i MethodInvocation name intern MemberReference value	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair rest Literal true ElementValuePair frame Literal true ElementValuePair meta Literal true ReferenceType RubyThread start FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block ReturnStatement MethodInvocation MemberReference recv MemberReference args Literal false MemberReference block	0
MethodDeclaration Modifier private FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType InvocationBuffer buffer FormalParameter ReferenceType Object value LocalVariableDeclaration ReferenceType Pointer VariableDeclarator cb MethodInvocation MethodInvocation MethodInvocation context getRuntime MemberReference cbInfo MemberReference value getInstance StatementExpression MethodInvocation buffer MethodInvocation cb getAddress	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal Literal Literal ElementValuePair meta Literal true ReferenceType Buffer FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject ReturnStatement MethodInvocation MemberReference context MemberReference recv MemberReference MethodInvocation RubyFixnum MemberReference fix2int BinaryOperation | MemberReference IN MemberReference OUT	0
MethodDeclaration Modifier public ReferenceType String getMethodName ReturnStatement MemberReference methodName	0
MethodDeclaration Modifier public BasicType boolean FormalParameter BasicType int index ReturnStatement MemberReference ArraySelector MemberReference index	0
MethodDeclaration Modifier public ReferenceType InputStream getScriptSource TryStatement IfStatement MemberReference BlockStatement ReturnStatement ClassCreator ReferenceType ByteArrayInputStream MethodInvocation IfStatement MethodInvocation BlockStatement IfStatement MethodInvocation BlockStatement ReturnStatement Literal null ReturnStatement MethodInvocation getInput BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator file MethodInvocation JRubyFile MethodInvocation getCurrentDirectory MethodInvocation create ReturnStatement ClassCreator ReferenceType BufferedInputStream ClassCreator ReferenceType FileInputStream MemberReference file Literal 8192 CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType MainExitException Literal 1 BinaryOperation + Literal "Error opening script file: " MethodInvocation e getMessage	1
MethodDeclaration Modifier public ReferenceType FormalParameter BasicType long offset StatementExpression MethodInvocation MemberReference offset Literal 1 checkBounds ReturnStatement TernaryExpression BinaryOperation == MemberReference offset Literal 0 This ClassCreator ReferenceType This MemberReference offset	0
MethodDeclaration Modifier public StatementExpression MethodInvocation StatementExpression MethodInvocation StatementExpression MethodInvocation	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair required Literal 1 ElementValuePair rest Literal true ReferenceType IRubyObject recvfrom FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject args TryStatement LocalVariableDeclaration BasicType int VariableDeclarator length MethodInvocation RubyNumeric MemberReference ArraySelector Literal 0 args fix2int LocalVariableDeclaration ReferenceType ByteBuffer VariableDeclarator buf MethodInvocation ByteBuffer MemberReference length StatementExpression Cast ReferenceType DatagramChannel This MethodInvocation getChannel StatementExpression MethodInvocation context MethodInvocation This MemberReference SelectionKey OP_READ select getThread LocalVariableDeclaration ReferenceType InetSocketAddress VariableDeclarator sender Cast ReferenceType InetSocketAddress Cast ReferenceType DatagramChannel This MethodInvocation getChannel LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator addressArray MethodInvocation context MethodInvocation ArrayCreator ReferenceType IRubyObject ArrayInitializer MethodInvocation context MethodInvocation Literal "AF_INET" newString getRuntime MethodInvocation context MethodInvocation MethodInvocation sender getPort newFixnum getRuntime MethodInvocation context MethodInvocation MethodInvocation sender getHostName newString getRuntime MethodInvocation context MethodInvocation MethodInvocation sender MethodInvocation getHostAddress getAddress newString getRuntime newArray getRuntime LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator result MethodInvocation context MethodInvocation ClassCreator ReferenceType ByteList MethodInvocation buf array Literal 0 MethodInvocation buf position newString getRuntime ReturnStatement MethodInvocation context MethodInvocation ArrayCreator ReferenceType IRubyObject ArrayInitializer MemberReference result MemberReference addressArray newArray getRuntime CatchClause CatchClauseParameter UnknownHostException e ThrowStatement MethodInvocation MethodInvocation context getRuntime Literal "recvfrom: name or service not known" sockerr CatchClause CatchClauseParameter IOException e ThrowStatement MethodInvocation MethodInvocation context getRuntime Literal "recvfrom: name or service not known" sockerr	1
MethodDeclaration Modifier public BasicType int write FormalParameter ReferenceType ByteBuffer src IOException IfStatement MemberReference ! isOpen BlockStatement ThrowStatement ClassCreator ReferenceType IOException Literal "Not LocalVariableDeclaration BasicType int VariableDeclarator n MethodInvocation MemberReference fd MemberReference src MethodInvocation src remaining write IfStatement BinaryOperation > MemberReference n Literal 0 BlockStatement StatementExpression MethodInvocation src BinaryOperation + MethodInvocation src position MemberReference n position ReturnStatement MemberReference n	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair frame Literal true ElementValuePair meta Literal true ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject _path FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType RubyString VariableDeclarator pathString MethodInvocation _path convertToString ReturnStatement MethodInvocation MemberReference context MemberReference recv MethodInvocation context getRuntime MemberReference pathString MemberReference block foreachCommon	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ReferenceType RubyFixnum hash FormalParameter ReferenceType ThreadContext context ReturnStatement MethodInvocation context MethodInvocation MethodInvocation hashCode newFixnum getRuntime	0
MethodDeclaration Modifier public BasicType boolean isInstanceVariable ReturnStatement MethodInvocation IdUtil MemberReference name isInstanceVariable	0
MethodDeclaration Modifier public ReferenceType Object case75_line566 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 3 MemberReference yyTop yyVals Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals aryset = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public ReferenceType IRubyObject set_dictionary FormalParameter ReferenceType IRubyObject str UnsupportedEncodingException StatementExpression MethodInvocation MethodInvocation str MethodInvocation getBytes convertToString setDictionary StatementExpression MethodInvocation Literal false run ReturnStatement MemberReference str	1
MethodDeclaration Modifier private static FormalParameter ReferenceType RubyModule containingClass FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType RubySymbol name IfStatement MethodInvocation containingClass isSingleton BlockStatement StatementExpression MethodInvocation Cast ReferenceType MetaClass MemberReference containingClass MemberReference context MemberReference name BlockStatement StatementExpression MethodInvocation containingClass MemberReference context Literal "method_added" MemberReference name callMethod	0
MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject caller FormalParameter ReferenceType IRubyObject self LocalVariableDeclaration ReferenceType RubyModule VariableDeclarator klazz MethodInvocation context getFrameKlazz LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation context getFrameName LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator selfType MethodInvocation MemberReference context MemberReference self MemberReference klazz MemberReference name pollAndGetClass LocalVariableDeclaration ReferenceType CacheEntry VariableDeclarator myCache MemberReference cache IfStatement BinaryOperation && BinaryOperation && BinaryOperation == MemberReference name MemberReference lastName BinaryOperation != MemberReference selfType Literal null MethodInvocation myCache MemberReference selfType BlockStatement ReturnStatement MethodInvocation MemberReference context MemberReference self MemberReference selfType MemberReference name call ReturnStatement MethodInvocation MemberReference caller MemberReference selfType MemberReference context MemberReference self MemberReference name	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal "push" Literal "<<" ElementValuePair rest Literal true ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject lines Exception LocalVariableDeclaration ReferenceType ConsoleHolder VariableDeclarator holder MethodInvocation MethodInvocation recv getRuntime getHolder ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference lines length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType RubyString VariableDeclarator line MemberReference ArraySelector MemberReference i MethodInvocation convertToString lines StatementExpression MethodInvocation holder.history MethodInvocation line getUnicodeValue addToHistory ReturnStatement MethodInvocation recv MethodInvocation getNil getRuntime	1
MethodDeclaration Modifier private static ReferenceType ByteList FormalParameter ReferenceType Ruby runtime FormalParameter BasicType byte bytes FormalParameter BasicType int start FormalParameter BasicType int len FormalParameter ReferenceType Encoding enc FormalParameter BasicType int options LocalVariableDeclaration ReferenceType ByteList VariableDeclarator ClassCreator ReferenceType ByteList StatementExpression MethodInvocation Cast BasicType byte Literal '/' append StatementExpression MethodInvocation MemberReference runtime MemberReference MemberReference bytes MemberReference start MemberReference len MemberReference enc StatementExpression MethodInvocation Cast BasicType byte Literal '/' append StatementExpression MethodInvocation MemberReference MemberReference options ReturnStatement MemberReference	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair required Literal 1 ElementValuePair rest Literal true ElementValuePair meta Literal true ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator ret ArrayCreator ReferenceType IRubyObject Literal 4 StatementExpression Assignment MemberReference ArraySelector Literal 0 ret MethodInvocation runtime MethodInvocation MethodInvocation getCanonicalHostName MemberReference runtime MemberReference ArraySelector Literal 0 MethodInvocation convertToString MethodInvocation toString args newString = StatementExpression Assignment MemberReference ArraySelector Literal 1 ret MethodInvocation runtime newArray = StatementExpression Assignment MemberReference ArraySelector Literal 2 ret MethodInvocation runtime Literal 2 newFixnum = StatementExpression Assignment MemberReference ArraySelector Literal 3 ret MemberReference ArraySelector Literal 0 args = ReturnStatement MethodInvocation runtime MemberReference ret newArrayNoCopy	0
MethodDeclaration Modifier public final put FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType MemoryIO io FormalParameter BasicType long offset FormalParameter ReferenceType IRubyObject value StatementExpression MethodInvocation io MemberReference offset MethodInvocation Util MemberReference value int8Value putByte	1
MethodDeclaration Modifier public final ReferenceType RubyRegexp FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType String name FormalParameter BasicType int options ReturnStatement MethodInvocation runtimeCache MemberReference runtime Literal 2 MemberReference name MemberReference options	0
MethodDeclaration Modifier public call FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation MethodInvocation opElementAsgnNode getReceiverNode MemberReference context Literal true compile	0
MethodDeclaration Modifier public static BasicType int length FormalParameter ReferenceType Encoding enc FormalParameter BasicType byte bytes FormalParameter BasicType int p FormalParameter BasicType int end LocalVariableDeclaration BasicType int VariableDeclarator n MethodInvocation enc MemberReference bytes MemberReference p MemberReference end length IfStatement BinaryOperation && BinaryOperation > MemberReference n Literal 0 BinaryOperation >= BinaryOperation - MemberReference end MemberReference p MemberReference n ReturnStatement MemberReference n ReturnStatement TernaryExpression BinaryOperation >= BinaryOperation - MemberReference end MemberReference p MethodInvocation enc minLength MethodInvocation enc minLength BinaryOperation - MemberReference end MemberReference p	1
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support MethodInvocation Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals getPosition Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals newSplatNode = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public StatementExpression MethodInvocation BinaryOperation == MethodInvocation rubyObject MethodInvocation getType MethodInvocation rubyObject getType assertTrue	1
MethodDeclaration Modifier public ReferenceType Object case401_line1523 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression MethodInvocation lexer MemberReference LexState EXPR_END setState StatementExpression Assignment MemberReference yyVal Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals = StatementExpression Cast ReferenceType ISourcePositionHolder MemberReference yyVal ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public static marshalTo FormalParameter ReferenceType RubyFloat FormalParameter ReferenceType output java.io.IOException StatementExpression MethodInvocation output MemberReference StatementExpression MethodInvocation output MethodInvocation writeString	0
MethodDeclaration Modifier public static ReferenceType IRubyObject rid FormalParameter ReferenceType Ruby runtime ReturnStatement MethodInvocation MemberReference runtime uid	0
MethodDeclaration Modifier public FormalParameter ReferenceType BigInteger value StatementExpression MethodInvocation StatementExpression MethodInvocation script MethodInvocation This MemberReference value StatementExpression MethodInvocation method MethodInvocation ClassReference ReferenceType RubyBignum p Literal MethodInvocation ClassReference ReferenceType RubyBignum MethodInvocation ClassReference ReferenceType Ruby ClassReference ReferenceType BigInteger params sig invokestatic	0
MethodDeclaration Modifier public ReferenceType Arity ReturnStatement MethodInvocation Arity optional	0
MethodDeclaration Modifier public Annotation Deprecated ReferenceType Callback getMethod FormalParameter ReferenceType String method FormalParameter ReferenceType Class arg1 LocalVariableDeclaration ReferenceType String VariableDeclarator mname BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation type getName Literal "Callback$" MemberReference method Literal LocalVariableDeclaration ReferenceType String VariableDeclarator mnamePath BinaryOperation + BinaryOperation + BinaryOperation + MemberReference typePath Literal "Callback$" MemberReference method Literal SynchronizedStatement MethodInvocation runtime getJRubyClassLoader LocalVariableDeclaration ReferenceType Class VariableDeclarator c MethodInvocation MemberReference mname tryClass TryStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator descriptor ArrayCreator ReferenceType Class ArrayInitializer MemberReference arg1 IfStatement BinaryOperation == MemberReference c Literal null BlockStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator signature ArrayCreator ReferenceType Class ArrayInitializer MemberReference arg1 ClassReference ReferenceType Block LocalVariableDeclaration ReferenceType Class VariableDeclarator ret MethodInvocation MemberReference method MemberReference signature getReturnClass LocalVariableDeclaration ReferenceType ClassWriter VariableDeclarator cw MethodInvocation MemberReference mnamePath createCtor LocalVariableDeclaration ReferenceType MethodVisitor VariableDeclarator mv MethodInvocation MemberReference cw startCall StatementExpression MethodInvocation MemberReference mv MemberReference METHOD_ARGS_INDEX Literal 1 MemberReference descriptor loadArguments StatementExpression MethodInvocation mv MemberReference ALOAD Literal 3 visitVarInsn StatementExpression MethodInvocation mv MemberReference INVOKEVIRTUAL MemberReference typePath MemberReference method MethodInvocation MemberReference ret MemberReference signature sig visitMethodInsn StatementExpression MethodInvocation mv MemberReference ARETURN visitInsn StatementExpression MethodInvocation mv Literal 3 Literal 3 visitMaxs StatementExpression Assignment MemberReference c MethodInvocation MemberReference cw MemberReference mv MemberReference mname endCall = LocalVariableDeclaration ReferenceType InvocationCallback VariableDeclarator ic Cast ReferenceType InvocationCallback MethodInvocation c newInstance StatementExpression MethodInvocation ic MethodInvocation Arity singleArgument setArity StatementExpression MethodInvocation ic MemberReference descriptor setArgumentTypes StatementExpression MethodInvocation ic MemberReference method setJavaName ReturnStatement MemberReference ic CatchClause CatchClauseParameter IllegalArgumentException e ThrowStatement MemberReference e CatchClause CatchClauseParameter Exception e ThrowStatement ClassCreator ReferenceType IllegalArgumentException MethodInvocation e getMessage	1
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType RubyClass LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator dummy ClassCreator ReferenceType RubyObject MemberReference runtime MethodInvocation runtime getObject ReturnStatement ClassCreator ReferenceType MemberReference runtime MemberReference dummy MemberReference dummy MemberReference Visibility PRIVATE MemberReference CallType VARIABLE	1
MethodDeclaration Modifier public BasicType byte getBytes ReturnStatement MethodInvocation value bytes	0
MethodDeclaration Modifier public ReferenceType Object case465_line1772 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal Cast ReferenceType ArgsNode MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public ReferenceType Class LocalVariableDeclaration ReferenceType Set VariableDeclarator all ClassCreator ReferenceType HashSet LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation methods iterator WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Method VariableDeclarator m Cast ReferenceType Method MethodInvocation it next LocalVariableDeclaration ReferenceType Class VariableDeclarator ex MethodInvocation m ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference ex length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator exx MemberReference ArraySelector MemberReference i ex IfStatement MethodInvocation all MemberReference exx contains BlockStatement ContinueStatement LocalVariableDeclaration BasicType boolean VariableDeclarator add Literal true LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it2 MethodInvocation all iterator WhileStatement MethodInvocation it2 hasNext BlockStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator de Cast ReferenceType Class MethodInvocation it2 next IfStatement MethodInvocation de MemberReference exx isAssignableFrom BlockStatement StatementExpression Assignment MemberReference add Literal false = BreakStatement IfStatement MethodInvocation exx MemberReference de isAssignableFrom BlockStatement StatementExpression MethodInvocation it2 remove StatementExpression Assignment MemberReference add Literal true = IfStatement MemberReference add BlockStatement StatementExpression MethodInvocation all MemberReference exx add ReturnStatement Cast ReferenceType Class MethodInvocation all ArrayCreator ReferenceType Class MethodInvocation all size toArray	1
MethodDeclaration Modifier public load FormalParameter ReferenceType Ruby runtime FormalParameter BasicType boolean wrap IOException StatementExpression MethodInvocation MemberReference runtime	0
MethodDeclaration Modifier private ReferenceType JavaObject ReturnStatement Cast ReferenceType JavaObject MethodInvocation dataGetStruct	0
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType String internedName AssertStatement BinaryOperation == MemberReference internedName MethodInvocation internedName intern BinaryOperation + MemberReference internedName Literal " is not interned" AssertStatement MethodInvocation IdUtil MemberReference internedName isConstant LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation getRuntime LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator objectClass MethodInvocation runtime getObject LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator value LocalVariableDeclaration ReferenceType RubyModule VariableDeclarator p This WhileStatement BinaryOperation != MemberReference p Literal null BlockStatement IfStatement BinaryOperation != Assignment MemberReference value MethodInvocation p MemberReference internedName = Literal null BlockStatement IfStatement BinaryOperation == MemberReference value MemberReference UNDEF BlockStatement IfStatement BinaryOperation == MethodInvocation p MemberReference runtime MemberReference internedName Literal null BreakStatement ContinueStatement IfStatement BinaryOperation && BinaryOperation == MemberReference p MemberReference objectClass BinaryOperation != This MemberReference objectClass BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator badCName BinaryOperation + BinaryOperation + MethodInvocation getName Literal "::" MemberReference internedName StatementExpression MethodInvocation runtime MethodInvocation MemberReference ID BinaryOperation + BinaryOperation + BinaryOperation + Literal constant " MemberReference internedName Literal " referenced by " MemberReference badCName MemberReference badCName warn getWarnings ReturnStatement MemberReference value StatementExpression Assignment MemberReference p MethodInvocation p getSuperClass = ReturnStatement Literal null	1
MethodDeclaration Modifier final public static ReferenceType IRubyObject getArrayOfUnsigned32 FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType MemoryIO io FormalParameter BasicType long offset FormalParameter BasicType int count LocalVariableDeclaration BasicType int VariableDeclarator array ArrayCreator BasicType int MemberReference count StatementExpression MethodInvocation io MemberReference offset MemberReference array Literal 0 MemberReference array length get LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator arr MethodInvocation RubyArray MemberReference runtime MemberReference array length newArray ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference array length MemberReference ++ i BlockStatement StatementExpression MethodInvocation arr MethodInvocation Util MemberReference runtime MemberReference ArraySelector MemberReference i array newUnsigned32 add ReturnStatement MemberReference arr	1
MethodDeclaration Modifier public final BasicType int longSize ReturnStatement MemberReference addressSize	0
MethodDeclaration Modifier public ReferenceType ReturnStatement MethodInvocation MethodInvocation	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject index LocalVariableDeclaration BasicType int VariableDeclarator i MethodInvocation MemberReference index LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration BasicType int VariableDeclarator b MethodInvocation MemberReference runtime MemberReference i IfStatement BinaryOperation < MemberReference b Literal 0 ReturnStatement MethodInvocation runtime getNil IfStatement MethodInvocation ! str singleByteOptimizable BlockStatement StatementExpression MethodInvocation updateCharOffset StatementExpression Assignment MemberReference b MemberReference charOffsets ArraySelector MemberReference i beg = ReturnStatement MethodInvocation RubyFixnum MemberReference runtime MemberReference b newFixnum	1
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType NodeVisitor iVisitor ReturnStatement MethodInvocation iVisitor This	0
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement Literal	0
MethodDeclaration Modifier public static ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject result StatementExpression MethodInvocation context pollThreadEvents ReturnStatement MemberReference result	0
MethodDeclaration Modifier private loadArguments FormalParameter ReferenceType SkinnyMethodAdapter mv FormalParameter ReferenceType JavaMethodDescriptor desc FormalParameter BasicType int specificArity SwitchStatement MemberReference specificArity SwitchStatementCase Literal - 1 StatementExpression MethodInvocation mv MemberReference aload BreakStatement SwitchStatementCase Literal 0 BreakStatement SwitchStatementCase Literal 1 StatementExpression MethodInvocation MemberReference mv Literal 1 MemberReference desc ArraySelector Literal 0 argumentTypes loadArgumentWithCast BreakStatement SwitchStatementCase Literal 2 StatementExpression MethodInvocation MemberReference mv Literal 1 MemberReference desc ArraySelector Literal 0 argumentTypes loadArgumentWithCast StatementExpression MethodInvocation MemberReference mv Literal 2 MemberReference desc ArraySelector Literal 1 argumentTypes loadArgumentWithCast BreakStatement SwitchStatementCase Literal 3 StatementExpression MethodInvocation MemberReference mv Literal 1 MemberReference desc ArraySelector Literal 0 argumentTypes loadArgumentWithCast StatementExpression MethodInvocation MemberReference mv Literal 2 MemberReference desc ArraySelector Literal 1 argumentTypes loadArgumentWithCast StatementExpression MethodInvocation MemberReference mv Literal 3 MemberReference desc ArraySelector Literal 2 argumentTypes loadArgumentWithCast BreakStatement	1
MethodDeclaration Modifier public setTempLocal FormalParameter BasicType int index StatementExpression MethodInvocation method MemberReference index astore	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "pos=" ElementValuePair required Literal 1 ReferenceType IRubyObject set_pos FormalParameter ReferenceType IRubyObject arg StatementExpression Assignment MemberReference pos MethodInvocation RubyNumeric MemberReference arg fix2int = IfStatement BinaryOperation < MemberReference pos Literal 0 BlockStatement ThrowStatement MethodInvocation MethodInvocation Literal "Invalid argument" newErrnoEINVALError getRuntime ReturnStatement MethodInvocation MethodInvocation getNil getRuntime	1
MethodDeclaration Modifier final protected FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType String name StatementExpression MethodInvocation context MemberReference name	0
MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext ctx FormalParameter ReferenceType IRubyObject largs FormalParameter ReferenceType Block blk LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator larg MethodInvocation MemberReference runtime MemberReference largs checkArgs StatementExpression MethodInvocation MemberReference localContext MemberReference ctx Literal checkContext IfStatement BinaryOperation || BinaryOperation == MemberReference ArraySelector Literal 0 result Literal null BinaryOperation < MethodInvocation RubyComparable MemberReference ctx MethodInvocation block MemberReference ctx MethodInvocation runtime MemberReference larg MemberReference ArraySelector Literal 0 result newArray yield MemberReference larg MemberReference ArraySelector Literal 0 result cmpint Literal 0 BlockStatement StatementExpression Assignment MemberReference ArraySelector Literal 0 result MemberReference larg = ReturnStatement MethodInvocation runtime getNil	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "=~" ElementValuePair compat MemberReference CompatVersion RUBY1_9 ElementValuePair writes MemberReference BACKREF ReferenceType IRubyObject op_match19 FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject other IfStatement BinaryOperation instanceof MemberReference other ReferenceType RubyRegexp ReturnStatement Cast ReferenceType RubyRegexp MemberReference other IfStatement BinaryOperation instanceof MemberReference other ReferenceType RubyString ThrowStatement MethodInvocation context MethodInvocation Literal "type mismatch: String given" newTypeError getRuntime ReturnStatement MethodInvocation other MemberReference context Literal "=~" This callMethod	1
MethodDeclaration Modifier public final FormalParameter BasicType long offset FormalParameter BasicType double value StatementExpression MethodInvocation MemberReference offset Literal 8 checkBounds StatementExpression MethodInvocation MemberReference buffer MethodInvocation MemberReference offset index MemberReference value	1
MethodDeclaration Modifier public Annotation Deprecated ReferenceType Callback getFastMethod FormalParameter ReferenceType String method LocalVariableDeclaration ReferenceType String VariableDeclarator mname BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation type getName Literal "Callback$" MemberReference method Literal "_F0" LocalVariableDeclaration ReferenceType String VariableDeclarator mnamePath BinaryOperation + BinaryOperation + BinaryOperation + MemberReference typePath Literal "Callback$" MemberReference method Literal "_F0" SynchronizedStatement MethodInvocation runtime getJRubyClassLoader LocalVariableDeclaration ReferenceType Class VariableDeclarator c MethodInvocation MemberReference mname tryClass TryStatement IfStatement BinaryOperation == MemberReference c Literal null BlockStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator ret MethodInvocation MemberReference method ArrayCreator ReferenceType Class Literal 0 getReturnClass LocalVariableDeclaration ReferenceType ClassWriter VariableDeclarator cw MethodInvocation MemberReference mnamePath createCtorFast LocalVariableDeclaration ReferenceType MethodVisitor VariableDeclarator mv MethodInvocation MemberReference cw startCallFast StatementExpression MethodInvocation mv MemberReference INVOKEVIRTUAL MemberReference typePath MemberReference method MethodInvocation MemberReference ret sig visitMethodInsn StatementExpression MethodInvocation mv MemberReference ARETURN visitInsn StatementExpression MethodInvocation mv Literal 1 Literal 3 visitMaxs StatementExpression Assignment MemberReference c MethodInvocation MemberReference cw MemberReference mv MemberReference mname endCall = LocalVariableDeclaration ReferenceType FastInvocationCallback VariableDeclarator ic Cast ReferenceType FastInvocationCallback MethodInvocation c newInstance StatementExpression MethodInvocation ic MethodInvocation Arity noArguments setArity StatementExpression MethodInvocation ic MemberReference method setJavaName ReturnStatement MemberReference ic CatchClause CatchClauseParameter IllegalArgumentException e ThrowStatement MemberReference e CatchClause CatchClauseParameter Exception e ThrowStatement ClassCreator ReferenceType IllegalArgumentException MethodInvocation e getMessage	1
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject nil IfStatement BinaryOperation == MemberReference variableValueTwo Literal null ReturnStatement Assignment MemberReference variableValueTwo MemberReference nil = ReturnStatement MemberReference variableValueTwo	1
MethodDeclaration Modifier public ReferenceType IRubyObject infectBy FormalParameter ReferenceType IRubyObject obj IfStatement MethodInvocation obj isTaint StatementExpression MethodInvocation Literal true setTaint IfStatement MethodInvocation obj isUntrusted StatementExpression MethodInvocation Literal true ReturnStatement This	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair frame Literal true ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter Modifier final ReferenceType Block block LocalVariableDeclaration Modifier final ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration Modifier final ReferenceType ThreadContext VariableDeclarator localContext MemberReference context TryStatement IfStatement MethodInvocation block isGiven BlockStatement StatementExpression MethodInvocation MemberReference runtime MemberReference context MemberReference self ClassCreator ReferenceType BlockCallback MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext ctx FormalParameter ReferenceType IRubyObject largs FormalParameter ReferenceType Block blk StatementExpression MethodInvocation MemberReference localContext MemberReference ctx Literal checkContext LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator larg MethodInvocation MemberReference runtime MemberReference largs checkArgs IfStatement MethodInvocation ! block MethodInvocation isTrue MemberReference ctx MemberReference larg yield BlockStatement ThrowStatement MemberReference JumpException SPECIAL_JUMP ReturnStatement MethodInvocation runtime getNil callEach BlockStatement StatementExpression MethodInvocation MemberReference runtime MemberReference context MemberReference self ClassCreator ReferenceType BlockCallback MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext ctx FormalParameter ReferenceType IRubyObject largs FormalParameter ReferenceType Block blk StatementExpression MethodInvocation MemberReference localContext MemberReference ctx Literal checkContext LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator larg MethodInvocation MemberReference runtime MemberReference largs checkArgs IfStatement MethodInvocation ! larg isTrue BlockStatement ThrowStatement MemberReference JumpException SPECIAL_JUMP ReturnStatement MethodInvocation runtime getNil callEach CatchClause CatchClauseParameter JumpException.SpecialJump sj ReturnStatement MethodInvocation runtime getFalse ReturnStatement MethodInvocation runtime getTrue	1
MethodDeclaration Modifier public StatementExpression MethodInvocation MethodInvocation MemberReference visitInsn getMethodVisitor	0
MethodDeclaration Modifier public ReferenceType ReturnStatement ClassCreator ReferenceType	0
MethodDeclaration Modifier public FormalParameter ReferenceType String name StatementExpression MethodInvocation MemberReference name MethodInvocation getInstance addMethod	0
MethodDeclaration Modifier private static addMethod FormalParameter ReferenceType Map methods FormalParameter ReferenceType Method method LocalVariableDeclaration BasicType int VariableDeclarator acc MethodInvocation method getModifiers IfStatement BinaryOperation || MethodInvocation Modifier MemberReference acc isStatic MethodInvocation Modifier MemberReference acc isPrivate BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType VariableDeclarator mk ClassCreator ReferenceType MemberReference method LocalVariableDeclaration ReferenceType VariableDeclarator md Cast ReferenceType MethodInvocation methods MemberReference mk get IfStatement BinaryOperation == MemberReference md Literal null BlockStatement StatementExpression Assignment MemberReference md ClassCreator ReferenceType MemberReference method = StatementExpression MethodInvocation methods MemberReference mk MemberReference md put StatementExpression MethodInvocation md MemberReference method add	1
MethodDeclaration Modifier public BasicType boolean isSingleton ReturnStatement MemberReference isSingleton	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair backtrace Literal true ElementValuePair meta Literal true ElementValuePair visibility MemberReference Visibility PRIVATE ReferenceType IRubyObject java_alias FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject proxyClass FormalParameter ReferenceType IRubyObject newName FormalParameter ReferenceType IRubyObject rubyName ReturnStatement MethodInvocation MemberReference context MemberReference proxyClass MemberReference newName MemberReference rubyName MethodInvocation context MethodInvocation newEmptyArray getRuntime java_alias	1
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject args LocalVariableDeclaration ReferenceType Object VariableDeclarator newArgs ArrayCreator ReferenceType Object MemberReference args length ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference args length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator arg MemberReference ArraySelector MemberReference i args StatementExpression Assignment MemberReference ArraySelector MemberReference i newArgs MethodInvocation MemberReference arg = LocalVariableDeclaration ReferenceType Object VariableDeclarator result Cast ReferenceType Object MethodInvocation handle TernaryExpression MemberReference isStatic Literal null Cast ReferenceType JavaObjectWrapper MemberReference self MemberReference newArgs invoke ReturnStatement MethodInvocation MemberReference ruby MemberReference result javaToRuby	0
MethodDeclaration Modifier public Annotation Override ReferenceType BigInteger ReturnStatement MethodInvocation value	0
MethodDeclaration Modifier public static ReferenceType getHistory FormalParameter ReferenceType ConsoleHolder holder ReturnStatement MemberReference holder history	0
MethodDeclaration Modifier public ReferenceType DynamicMethod FormalParameter ReferenceType RubyModule klazz FormalParameter ReferenceType Method method LocalVariableDeclaration ReferenceType Class VariableDeclarator params MethodInvocation method getParameterTypes IfStatement BinaryOperation > MemberReference params length Literal 0 BlockStatement ReturnStatement ClassCreator ReferenceType MemberReference klazz MemberReference method BlockStatement ReturnStatement ClassCreator ReferenceType MemberReference klazz MemberReference method	0
MethodDeclaration Modifier public ReferenceType RubyModule FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation getRuntime LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator moduleObj MethodInvocation MemberReference name getConstantAt LocalVariableDeclaration ReferenceType RubyModule VariableDeclarator module IfStatement BinaryOperation != MemberReference moduleObj Literal null BlockStatement IfStatement MethodInvocation ! moduleObj isModule ThrowStatement MethodInvocation runtime BinaryOperation + MemberReference name Literal " is not a module" newTypeError IfStatement BinaryOperation >= MethodInvocation runtime getSafeLevel Literal 4 ThrowStatement MethodInvocation runtime Literal "extending module prohibited" newSecurityError StatementExpression Assignment MemberReference module Cast ReferenceType RubyModule MemberReference moduleObj = IfStatement BinaryOperation && BinaryOperation != MemberReference Literal null BinaryOperation != Assignment MemberReference module MethodInvocation MemberReference name searchProvidersForModule = Literal null BlockStatement BlockStatement StatementExpression Assignment MemberReference module MethodInvocation RubyModule MemberReference runtime MemberReference name This Literal true newModule = ReturnStatement MemberReference module	1
MethodDeclaration Modifier protected ReferenceType Object FormalParameter ReferenceType String name FormalParameter ReferenceType Object value StatementExpression MethodInvocation MethodInvocation getRealClass MethodInvocation MemberReference name MethodInvocation This MemberReference value set getMetaClass ReturnStatement MemberReference value	0
MethodDeclaration Modifier public BasicType int hashCode ReturnStatement MethodInvocation name hashCode	0
MethodDeclaration Modifier public setName FormalParameter ReferenceType String name StatementExpression Assignment This MemberReference name MemberReference name =	0
MethodDeclaration Modifier public compileSelf FormalParameter ReferenceType Node node FormalParameter ReferenceType BodyCompiler context FormalParameter BasicType boolean expr IfStatement MemberReference RubyInstanceConfig PEEPHOLE_OPTZ BlockStatement IfStatement MemberReference expr StatementExpression MethodInvocation context BlockStatement StatementExpression MethodInvocation context IfStatement MemberReference ! expr StatementExpression MethodInvocation context consumeCurrentValue	1
MethodDeclaration Modifier public ReferenceType Profile ReturnStatement MemberReference profile	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "initialize_copy" ElementValuePair required Literal 1 ElementValuePair visibility MemberReference Visibility PRIVATE ReferenceType IRubyObject initialize_copy FormalParameter ReferenceType IRubyObject original IfStatement BinaryOperation == This MemberReference original ReturnStatement This StatementExpression MethodInvocation IfStatement BinaryOperation != MethodInvocation MethodInvocation getRealClass getMetaClass MethodInvocation original MethodInvocation getRealClass getMetaClass BlockStatement ThrowStatement MethodInvocation MethodInvocation Literal should take same class object" newTypeError getRuntime ReturnStatement This	1
MethodDeclaration Modifier private BasicType boolean start_with_pCommon FormalParameter ReferenceType IRubyObject arg LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator tmp MethodInvocation arg checkStringType IfStatement MethodInvocation tmp isNil ReturnStatement Literal false LocalVariableDeclaration ReferenceType RubyString VariableDeclarator otherString Cast ReferenceType RubyString MemberReference tmp StatementExpression MethodInvocation MemberReference otherString checkEncoding IfStatement BinaryOperation < MemberReference value realSize MemberReference otherString.value realSize ReturnStatement Literal false ReturnStatement MethodInvocation value MemberReference otherString value startsWith	1
MethodDeclaration Modifier private ReferenceType Object hashFetch FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType VariableTableEntry VariableDeclarator table MemberReference vTable LocalVariableDeclaration ReferenceType Object VariableDeclarator readValue LocalVariableDeclaration BasicType int VariableDeclarator hash MethodInvocation name hashCode ForStatement ForControl VariableDeclaration ReferenceType VariableTableEntry VariableDeclarator e MemberReference ArraySelector BinaryOperation & MemberReference hash BinaryOperation - MemberReference table length Literal 1 table BinaryOperation != MemberReference e Literal null Assignment MemberReference e MemberReference e next = BlockStatement IfStatement BinaryOperation && BinaryOperation == MemberReference hash MemberReference e hash MethodInvocation name MemberReference e name equals BlockStatement IfStatement BinaryOperation != Assignment MemberReference readValue MemberReference e value = Literal null ReturnStatement MemberReference readValue ReturnStatement MethodInvocation MemberReference e readLocked ReturnStatement Literal null	1
MethodDeclaration Modifier private ReferenceType RubyHash FormalParameter ReferenceType RubyArray ary2 ReturnStatement MethodInvocation ary2 MethodInvocation	0
MethodDeclaration Modifier public static ReferenceType RubyClass newClass FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType RubyClass superClass FormalParameter ReferenceType String name FormalParameter ReferenceType ObjectAllocator allocator FormalParameter ReferenceType RubyModule parent FormalParameter BasicType boolean setParent LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator clazz MethodInvocation MemberReference runtime MemberReference superClass newClass StatementExpression MethodInvocation clazz MemberReference name StatementExpression MethodInvocation clazz MemberReference allocator setAllocator StatementExpression MethodInvocation clazz MethodInvocation superClass getMetaClass makeMetaClass IfStatement MemberReference setParent StatementExpression MethodInvocation clazz MemberReference parent setParent StatementExpression MethodInvocation parent MemberReference name MemberReference clazz setConstant StatementExpression MethodInvocation clazz MemberReference superClass ReturnStatement MemberReference clazz	1
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 LocalVariableDeclaration ReferenceType Object VariableDeclarator array MethodInvocation MemberReference self LocalVariableDeclaration BasicType int VariableDeclarator x MethodInvocation RubyFixnum MethodInvocation arg0 convertToInteger fix2int LocalVariableDeclaration ReferenceType Object VariableDeclarator obj MethodInvocation MemberReference arg1 StatementExpression MethodInvocation Array MemberReference array MemberReference x MemberReference obj set ReturnStatement MemberReference arg1	0
MethodDeclaration Modifier public static Annotation Deprecated Annotation JRubyMethod ElementValuePair frame Literal true ElementValuePair module Literal true ElementValuePair visibility MemberReference Visibility PRIVATE ReferenceType IRubyObject java_to_ruby FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject object FormalParameter ReferenceType Block unusedBlock TryStatement ReturnStatement MethodInvocation JavaUtil MethodInvocation recv getRuntime MemberReference object java_to_ruby CatchClause CatchClauseParameter RuntimeException e StatementExpression MethodInvocation recv MethodInvocation getJavaSupport MethodInvocation MemberReference e Literal null handleNativeException getRuntime ReturnStatement MethodInvocation recv MethodInvocation getNil getRuntime	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair optional Literal 1 ElementValuePair frame Literal true ReferenceType IRubyObject FormalParameter Modifier final ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject args FormalParameter Modifier final ReferenceType Block block ReturnStatement TernaryExpression MethodInvocation block isGiven MethodInvocation MemberReference context MemberReference args MemberReference block each_line MethodInvocation MethodInvocation context getRuntime This Literal MemberReference args enumeratorize	0
MethodDeclaration Modifier public ReferenceType Node getFirstNode ReturnStatement MemberReference	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ReferenceType RubyArray FormalParameter ReferenceType ThreadContext context ReturnStatement MethodInvocation context MethodInvocation MethodInvocation newArray getRuntime	0
MethodDeclaration Modifier private BasicType int count LocalVariableDeclaration BasicType int VariableDeclarator count Literal 0 ForStatement EnhancedForControl VariableDeclaration ReferenceType Entry TypeArgument ReferenceType T VariableDeclarator e MemberReference entryTable BlockStatement WhileStatement BinaryOperation != MemberReference e Literal null BlockStatement StatementExpression MemberReference ++ count StatementExpression Assignment MemberReference e MemberReference e next = ReturnStatement MemberReference count	0
MethodDeclaration BasicType boolean IfStatement MethodInvocation MethodInvocation isInterface getDeclaringClass BlockStatement ReturnStatement Literal false LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation getModifiers ReturnStatement MethodInvocation ! Modifier MemberReference isAbstract	0
MethodDeclaration Modifier protected BasicType boolean FormalParameter ReferenceType String name ReturnStatement MethodInvocation MethodInvocation MemberReference name containsKey	0
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType String internedName FormalParameter ReferenceType IRubyObject target FormalParameter ReferenceType IRubyObject result IfStatement BinaryOperation instanceof MemberReference target ReferenceType RubyModule BlockStatement ThrowStatement MethodInvocation runtime BinaryOperation + MethodInvocation target toString Literal " is not a class/module" newTypeError LocalVariableDeclaration ReferenceType RubyModule VariableDeclarator module Cast ReferenceType RubyModule MemberReference target StatementExpression MethodInvocation module MemberReference internedName MemberReference result fastSetConstant ReturnStatement MemberReference result	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal ElementValuePair meta Literal true ReferenceType IRubyObject newInstance FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject FormalParameter ReferenceType Block block ReturnStatement MethodInvocation MemberReference context MemberReference recv MemberReference Literal 1 Literal 1 Literal true MemberReference block	0
MethodDeclaration * */ Modifier public ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject to FormalParameter ReferenceType Block block IfStatement BinaryOperation && BinaryOperation instanceof This ReferenceType RubyFixnum BinaryOperation instanceof MemberReference to ReferenceType RubyFixnum BlockStatement StatementExpression MethodInvocation MemberReference context Cast ReferenceType RubyFixnum This Cast ReferenceType RubyFixnum MemberReference to MemberReference block BlockStatement StatementExpression MethodInvocation MemberReference context This MemberReference to MemberReference block ReturnStatement This	0
MethodDeclaration Modifier public final ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType String name ReturnStatement MethodInvocation runtimeCache MemberReference context MemberReference name Literal 2	0
MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block IfStatement BinaryOperation != MemberReference args length Literal 2 ReturnStatement MethodInvocation This MemberReference context MemberReference name MemberReference args length Literal 2 Literal 2 raiseArgumentError ReturnStatement MethodInvocation MemberReference context MemberReference self MemberReference clazz MemberReference name MemberReference ArraySelector Literal 0 args MemberReference ArraySelector Literal 1 args MemberReference block call	1
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime StatementExpression MethodInvocation MemberReference runtime LocalVariableDeclaration ReferenceType VariableDeclarator proxy MethodInvocation MemberReference self LocalVariableDeclaration ReferenceType JavaConstructor VariableDeclarator constructor Cast ReferenceType JavaConstructor MethodInvocation MemberReference self MemberReference name StatementExpression MethodInvocation proxy MethodInvocation JavaObject MemberReference runtime MethodInvocation constructor wrap ReturnStatement MemberReference self	0
MethodDeclaration Modifier public run FormalParameter ReferenceType IR_Scope s StatementExpression MethodInvocation System.out Literal println StatementExpression MethodInvocation System.out MethodInvocation s toString println LocalVariableDeclaration ReferenceType VariableDeclarator c MethodInvocation s IfStatement BinaryOperation != MemberReference c Literal null BlockStatement StatementExpression MethodInvocation System.out BinaryOperation + Literal MethodInvocation c MethodInvocation toString println StatementExpression MethodInvocation System.out BinaryOperation + Literal MethodInvocation c toStringInstrs println IfStatement BinaryOperation instanceof MemberReference s ReferenceType IR_Method BlockStatement LocalVariableDeclaration ReferenceType IR_Method VariableDeclarator m Cast ReferenceType IR_Method MemberReference s StatementExpression MethodInvocation System.out BinaryOperation + Literal "\n MethodInvocation m toStringInstrs println StatementExpression MethodInvocation System.out BinaryOperation + Literal "\n MethodInvocation m toStringVariables println	1
MethodDeclaration Modifier public ReferenceType NodeType getNodeType ReturnStatement MemberReference NodeType FORNODE	0
MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType Block block StatementExpression MethodInvocation MemberReference context MemberReference name TryStatement LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator cls Cast ReferenceType RubyClass MemberReference self LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator obj MethodInvocation cls StatementExpression MemberReference cls ArraySelector MemberReference MethodInvocation MemberReference context MemberReference self MemberReference obj MemberReference arg0 MemberReference block call ReturnStatement MemberReference obj StatementExpression MethodInvocation MemberReference context	0
MethodDeclaration Modifier public static ReferenceType RubyInteger FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType RubyString str FormalParameter BasicType int base FormalParameter BasicType boolean strict LocalVariableDeclaration ReferenceType ByteList VariableDeclarator s MethodInvocation str getByteList ReturnStatement MethodInvocation Convert2 MemberReference runtime MemberReference s MemberReference base MemberReference strict	0
MethodDeclaration Modifier public static BasicType boolean FormalParameter ReferenceType IRubyObject receivers ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference receivers length MemberReference ++ i BlockStatement IfStatement MemberReference ArraySelector MemberReference i MethodInvocation isTrue receivers ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration Modifier protected ReferenceType String ReturnStatement Literal	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "unused" ReferenceType IRubyObject unused ReturnStatement MethodInvocation MethodInvocation getNil getRuntime	0
MethodDeclaration Modifier public ReferenceType IRubyObject op_gt FormalParameter ReferenceType ThreadContext context FormalParameter BasicType long other ReturnStatement MethodInvocation RubyBoolean MethodInvocation context getRuntime BinaryOperation > MemberReference value MemberReference other newBoolean	1
MethodDeclaration Modifier public ReferenceType Float FormalParameter ReferenceType Float f ReturnStatement MethodInvocation vri MemberReference f	0
MethodDeclaration Modifier public ReferenceType RubyClass ReturnStatement MemberReference	0
MethodDeclaration Modifier protected ReferenceType String getLine TryStatement ReturnStatement MethodInvocation area MemberReference startPos BinaryOperation - MethodInvocation area MethodInvocation getLength getDocument MemberReference startPos getText CatchClause CatchClauseParameter BadLocationException e StatementExpression MethodInvocation e printStackTrace ReturnStatement Literal null	1
MethodDeclaration Modifier public ReferenceType FormalParameter ReferenceType IRubyObject self LocalVariableDeclaration ReferenceType Frame VariableDeclarator frame MethodInvocation ReturnStatement ClassCreator ReferenceType MemberReference self MemberReference frame MethodInvocation frame getVisibility MethodInvocation MethodInvocation getCurrentScope MemberReference file MemberReference line	0
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter BasicType int offset FormalParameter ReferenceType IRubyObject nil StatementExpression MethodInvocation MemberReference offset LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator value MemberReference ArraySelector MemberReference offset IfStatement BinaryOperation == MemberReference value Literal null BlockStatement ReturnStatement MethodInvocation MemberReference value MemberReference offset setValueDepthZero ReturnStatement MemberReference value	0
MethodDeclaration Modifier public StatementExpression MethodInvocation StatementExpression MethodInvocation loadThreadContext StatementExpression MethodInvocation Literal MethodInvocation VoidClassReference ClassReference ReferenceType Throwable ClassReference ReferenceType ThreadContext sig invokeUtilityMethod	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject get ReturnStatement MethodInvocation other get	0
MethodDeclaration Modifier public final ReferenceType java ReferenceType ReferenceType ByteBuffer ReturnStatement MethodInvocation MemberReference address MemberReference Integer MAX_VALUE	0
MethodDeclaration Modifier public ReferenceType Arity ReturnStatement MethodInvocation Arity twoArguments	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "lineno=" ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject line LocalVariableDeclaration ReferenceType ArgsFileData VariableDeclarator data MethodInvocation ArgsFileData MemberReference recv getDataFrom StatementExpression Assignment MemberReference data currentLineNumber MethodInvocation RubyNumeric MemberReference line fix2int = StatementExpression MethodInvocation context MethodInvocation getGlobalVariables MethodInvocation Literal "$." MemberReference line set getRuntime ReturnStatement MethodInvocation recv MethodInvocation getNil getRuntime	1
MethodDeclaration Modifier public ReferenceType IRubyObject get FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType Object array FormalParameter BasicType int i ReturnStatement MethodInvocation MemberReference runtime Cast ReferenceType Double MemberReference array convert	0
MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block StatementExpression MethodInvocation MemberReference context MemberReference ArraySelector Literal 0 args call ReturnStatement MethodInvocation context MethodInvocation getNil getRuntime	0
MethodDeclaration Modifier public ReferenceType String SwitchStatement This SwitchStatementCase Source ReturnStatement MemberReference SwitchStatementCase Extension ReturnStatement MemberReference SwitchStatementCase Both ReturnStatement MemberReference SwitchStatementCase Neither ReturnStatement MemberReference ThrowStatement ClassCreator ReferenceType RuntimeException BinaryOperation + Literal "Unknown " This	1
MethodDeclaration FormalParameter ReferenceType RubyClass StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter ReferenceType Node node FormalParameter ReferenceType BodyCompiler context FormalParameter BasicType boolean expr LocalVariableDeclaration Modifier final ReferenceType FlipNode VariableDeclarator flipNode Cast ReferenceType FlipNode MemberReference node StatementExpression MethodInvocation context MethodInvocation MethodInvocation flipNode getIndex MethodInvocation flipNode getVariableCompiler IfStatement MethodInvocation flipNode isExclusive BlockStatement StatementExpression MethodInvocation context ClassCreator ReferenceType BranchCallback MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation MethodInvocation flipNode MemberReference context Literal true compile StatementExpression MethodInvocation context ClassCreator ReferenceType BranchCallback MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation context StatementExpression MethodInvocation context MethodInvocation MethodInvocation flipNode getIndex MethodInvocation flipNode Literal false assignLocalVariable getVariableCompiler ClassCreator ReferenceType BranchCallback MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context performBooleanBranch StatementExpression MethodInvocation context ClassCreator ReferenceType BranchCallback MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation MethodInvocation flipNode MemberReference context Literal true compile StatementExpression MethodInvocation MemberReference context StatementExpression MethodInvocation context MethodInvocation MethodInvocation flipNode getIndex MethodInvocation flipNode Literal true assignLocalVariable getVariableCompiler performBooleanBranch BlockStatement StatementExpression MethodInvocation context ClassCreator ReferenceType BranchCallback MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation MethodInvocation flipNode MemberReference context Literal true compile StatementExpression MethodInvocation context ClassCreator ReferenceType BranchCallback MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation context StatementExpression MethodInvocation context MethodInvocation MethodInvocation flipNode getIndex MethodInvocation flipNode Literal false assignLocalVariable getVariableCompiler ClassCreator ReferenceType BranchCallback MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context performBooleanBranch StatementExpression MethodInvocation context ClassCreator ReferenceType BranchCallback MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation MethodInvocation flipNode MemberReference context Literal true compile StatementExpression MethodInvocation context ClassCreator ReferenceType BranchCallback MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation MethodInvocation flipNode MemberReference context Literal true compile StatementExpression MethodInvocation MemberReference context StatementExpression MethodInvocation context MethodInvocation MethodInvocation flipNode getIndex MethodInvocation flipNode Literal false assignLocalVariable getVariableCompiler StatementExpression MethodInvocation context ClassCreator ReferenceType BranchCallback MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation context performBooleanBranch performBooleanBranch IfStatement MemberReference ! expr StatementExpression MethodInvocation context consumeCurrentValue	1
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression MethodInvocation Literal "constant re-assignment" yyerror ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public ReferenceType Object case225_line902 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support MethodInvocation Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals getPosition Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals newOrNode = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair meta Literal true ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject recv ReturnStatement MethodInvocation recv MethodInvocation getCharsetMap getRuntime	1
MethodDeclaration Modifier public final ReferenceType IRubyObject get FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType MemoryIO io FormalParameter BasicType long offset ReturnStatement MethodInvocation runtime MethodInvocation io MemberReference offset newFloat	1
MethodDeclaration Modifier static protected ReferenceType RuntimeException sockerr FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType String msg ReturnStatement ClassCreator ReferenceType RaiseException MemberReference runtime MethodInvocation runtime Literal fastGetClass MemberReference msg Literal true	0
